unint64_t lazy protocol witness table accessor for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType;
  if (!lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsTitleCell.ButtonType, &type metadata for InCallControlsTitleCell.ButtonType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsTitleCell.ButtonType and conformance InCallControlsTitleCell.ButtonType);
  }
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InCallControlsTitleCell.ButtonType@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = InCallControlsTitleCell.ButtonType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance InCallControlsTitleCell.ButtonType@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = InCallControlsTitleCell.ButtonType.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsTitleCell.ButtonType()
{
  unsigned __int8 *v0;

  return InCallControlsTitleCell.ButtonType.debugDescription.getter(*v0);
}

uint64_t storeEnumTagSinglePayload for InCallControlsTitleCell.ButtonType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD59DF4C + 4 * byte_1BD6662BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD59DF80 + 4 * byte_1BD6662B5[v4]))();
}

uint64_t sub_1BD59DF80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59DF88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD59DF90);
  return result;
}

uint64_t sub_1BD59DF9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD59DFA4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD59DFA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD59DFB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsTitleCell.ButtonType()
{
  return &type metadata for InCallControlsTitleCell.ButtonType;
}

uint64_t dispatch thunk of InCallControlsTitleCellDelegate.inCallControlsTitleCell(_:didTap:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t CancelButtonViewModel.__allocating_init(service:letMeInViewModel:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CancelButtonViewModel.init(service:letMeInViewModel:)(a1, a2);
  return v4;
}

uint64_t CancelButtonViewModel.init(service:letMeInViewModel:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 64) = 1;
  *(_QWORD *)(v2 + 72) = 0;
  outlined init with take of Notice(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

uint64_t CancelButtonViewModel.controlType.getter()
{
  return CancelButtonViewModel.config.getter();
}

uint64_t CancelButtonViewModel.config.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  NSBundle v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  NSBundle v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for CallControlTextButtonStyle(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(v1 + 72))
  {
    v5 = *(_QWORD *)(v1 + 72);
  }
  else
  {
    if (one-time initialization token for callControlBackgroundOff != -1)
      swift_once();
    v6 = static SystemSymbol<A>.callControlBackgroundOff;
    v7 = (uint64_t)v4 + *(int *)(v2 + 20);
    swift_retain();
    static ButtonRole.cancel.getter();
    v8 = type metadata accessor for ButtonRole();
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v8);
    *v4 = v6;
    v9 = (void *)objc_opt_self();
    v10 = (objc_class *)objc_msgSend(v9, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v11.super.isa = v10;
    v16 = OUTLINED_FUNCTION_49_2(v12, v13, v14, v15, v11);
    v18 = v17;

    v19 = (objc_class *)objc_msgSend(v9, sel_conversationKit);
    OUTLINED_FUNCTION_7_14();
    v20.super.isa = v19;
    v25 = OUTLINED_FUNCTION_49_2(v21, v22, v23, v24, v20);
    v27 = v26;

    v28 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for CallControlsTextButtonConfiguration(0);
    swift_allocObject();
    CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)((uint64_t)v4, v16, v18, v25, v27, 0x75426C65636E6163, 0xEC0000006E6F7474, 1, (uint64_t)partial apply for closure #1 in LeaveButtonViewModel.config.getter, v28);
    v5 = v29;
    *(_QWORD *)(v1 + 72) = v29;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1BD59E2B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t CancelButtonViewModel.enabled(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v4 = (a1 & 0xE100000000) == 0x4100000000 && a2 == 2;
  v5 = v4;
  if (v4)
  {
    *(_BYTE *)(v3 + 64) = a3 & 1;
    CancelButtonViewModel.isAppFrontMost.didset();
  }
  return v5;
}

Swift::Void __swiftcall CancelButtonViewModel.didTap()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2);
}

void CancelButtonViewModel.isAppFrontMost.didset()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 64) & 1) == 0)
    LetMeInCountdownViewModel.skipCountdown()();
}

uint64_t CancelButtonViewModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CancelButtonViewModel.__deallocating_deinit()
{
  CancelButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance CancelButtonViewModel(uint64_t a1, uint64_t a2, char a3)
{
  return CancelButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL, a2, a3) & 1;
}

uint64_t protocol witness for CallControlsButtonViewModel.controlType.getter in conformance CancelButtonViewModel()
{
  return CancelButtonViewModel.controlType.getter();
}

uint64_t sub_1BD59E428@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = CancelButtonViewModel.config.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CancelButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for CancelButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CancelButtonViewModel.__allocating_init(service:letMeInViewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void CGRect.rounded(originRule:sizeRule:toScale:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  CGFloat.rounded(_:toScale:)(a1, a3, a4);
  CGFloat.rounded(_:toScale:)(a1, a3, a5);
  CGFloat.rounded(_:toScale:)(a2, a3, a6);
  CGFloat.rounded(_:toScale:)(a2, a3, a7);
  OUTLINED_FUNCTION_9_9();
}

void CGRect.rounded(originRule:sizeRule:toScaleOf:)()
{
  double v0;
  double v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;

  OUTLINED_FUNCTION_17_7();
  v5 = v4;
  v7 = v6;
  objc_msgSend(v8, sel_displayScale);
  v10 = v9;
  CGFloat.rounded(_:toScale:)(v7, v9, v3);
  CGFloat.rounded(_:toScale:)(v7, v10, v2);
  CGFloat.rounded(_:toScale:)(v5, v10, v1);
  CGFloat.rounded(_:toScale:)(v5, v10, v0);
  OUTLINED_FUNCTION_9_9();
}

double CGRect.rounded(originRule:sizeRule:toScaleOf:)()
{
  double v0;
  double v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_17_7();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  swift_getObjectType();
  return specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v9, v7, v5, v3, v2, v1, v0);
}

double specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(uint64_t a1, uint64_t a2, id a3, double a4, double a5, double a6, double a7)
{
  id v13;
  double v14;
  double v15;
  double v16;

  v13 = objc_msgSend(a3, sel_traitCollection);
  objc_msgSend(v13, sel_displayScale);
  v15 = v14;
  v16 = CGFloat.rounded(_:toScale:)(a1, v14, a4);
  CGFloat.rounded(_:toScale:)(a1, v15, a5);
  CGFloat.rounded(_:toScale:)(a2, v15, a6);
  CGFloat.rounded(_:toScale:)(a2, v15, a7);

  return v16;
}

uint64_t ScreenShareButtonViewModel.__allocating_init(service:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ScreenShareButtonViewModel.init(service:)(a1);
  return v2;
}

uint64_t specialized IconButtonConfig.enabled.setter(char a1)
{
  return specialized IconButtonConfig.enabled.setter(a1, MEMORY[0x1E0DEAFA0], (uint64_t)partial apply for specialized closure #1 in IconButtonConfig.enabled.setter, &lazy protocol witness table cache variable for type IconButtonConfig<Bool> and conformance IconButtonConfig<A>, &demangling cache variable for type metadata for IconButtonConfig<Bool>);
}

uint64_t specialized IconButtonConfig.enabled.setter(char a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v15 = a2;
  KeyPath = swift_getKeyPath();
  v13 = v5;
  v14 = a1;
  specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(KeyPath, a3, (uint64_t)&v12, a4, a5);
  return OUTLINED_FUNCTION_27_0();
}

uint64_t specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(a1, a2, a3, &lazy protocol witness table cache variable for type IconButtonConfig<Bool> and conformance IconButtonConfig<A>, &demangling cache variable for type metadata for IconButtonConfig<Bool>);
}

uint64_t specialized IconButtonConfig.withMutation<A, B>(keyPath:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(a4, a5, (uint64_t)&protocol conformance descriptor for IconButtonConfig<A>);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

_QWORD *ScreenShareButtonViewModel.init(service:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  v1[8] = 0;
  v1[9] = 0;
  v1[7] = v2;
  outlined init with take of Notice(a1, (uint64_t)(v1 + 2));
  return v1;
}

uint64_t (*ScreenShareButtonViewModel.controlType.getter())()
{
  swift_retain();
  return partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter;
}

uint64_t closure #1 in ScreenShareButtonViewModel.controlType.getter()
{
  ScreenShareButtonViewModel.shareButtonConfig.getter();
  lazy protocol witness table accessor for type ShareScreenButton and conformance ShareScreenButton();
  return AnyView.init<A>(_:)();
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter()
{
  return closure #1 in ScreenShareButtonViewModel.controlType.getter();
}

uint64_t ScreenShareButtonViewModel.shareButtonConfig.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v0[8])
  {
    v1 = v0[8];
  }
  else
  {
    v2 = v0;
    ScreenShareButtonViewModel.iconButtonConfig.getter();
    v3 = v0[5];
    v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_7_4();
    type metadata accessor for ShareScreenButtonConfig();
    OUTLINED_FUNCTION_14_0();
    ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)();
    v1 = v5;
    v2[8] = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

BOOL ScreenShareButtonViewModel.enabled(for:)(unint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  _BOOL4 v3;

  v1 = (a1 >> 37) & 7;
  v2 = v1 - 2;
  if ((_DWORD)v1)
    v3 = (a1 & 0x100000000) == 0;
  else
    v3 = 1;
  if (v2 < 4)
    v3 = 0;
  return (_DWORD)a1 != 3 && v3;
}

Swift::Void __swiftcall ScreenShareButtonViewModel.onAppear()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  ScreenShareButtonViewModel.observeShareMenuState()();
  ScreenShareButtonViewModel.observeParticipantState()();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.observeShareMenuState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop>);
  OUTLINED_FUNCTION_18_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_94();
  v6 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop, v6);
  v5 = OUTLINED_FUNCTION_22_48((uint64_t)v4);
  OUTLINED_FUNCTION_7_27(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>);
  OUTLINED_FUNCTION_20_0();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<ShareMenuActionState, Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<ShareMenuActionState, Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_0_22();
  outlined destroy of NSRunLoop.SchedulerOptions?(v0);

  swift_release();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<ShareMenuActionState, Never>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  OUTLINED_FUNCTION_16_57();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_4_82();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  OUTLINED_FUNCTION_12_65();
  swift_endAccess();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.observeParticipantState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop>);
  OUTLINED_FUNCTION_18_53();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_94();
  v8 = OUTLINED_FUNCTION_13_11(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop, v8);
  v5 = OUTLINED_FUNCTION_22_48((uint64_t)v4);
  OUTLINED_FUNCTION_7_27(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<(), Never>);
  OUTLINED_FUNCTION_20_0();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AnyPublisher<(), Never> and conformance AnyPublisher<A, B>, &demangling cache variable for type metadata for AnyPublisher<(), Never>, MEMORY[0x1E0C95D90]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  OUTLINED_FUNCTION_0_22();
  outlined destroy of NSRunLoop.SchedulerOptions?(v0);

  swift_release();
  v6 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_7_4();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = partial apply for closure #1 in ScreenShareButtonViewModel.observeParticipantState();
  *(_QWORD *)(v7 + 24) = v6;
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<(), Never>, NSRunLoop>, MEMORY[0x1E0C95CB8]);
  OUTLINED_FUNCTION_16_57();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_4_82();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [AnyCancellable]);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type [AnyCancellable] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [AnyCancellable], MEMORY[0x1E0DEAF58]);
  OUTLINED_FUNCTION_12_65();
  swift_endAccess();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ScreenShareButtonViewModel.didTapScreenShare()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationKit);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "didTapScreenShare", v5, 2u);
    OUTLINED_FUNCTION_60();
  }

  v6 = v1 + 2;
  v8 = v1[5];
  v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 40))(0, v8, v7);
}

void ScreenShareButtonViewModel.didTapAskToScreenShare(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  void *v19;
  uint64_t v20;

  v2 = v1;
  v20 = *MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationKit);
  outlined init with copy of Participant(a1, (uint64_t)v7);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v12 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 138412290;
    v13 = *(void **)&v7[*(int *)(v4 + 28)];
    if (v13)
    {
      v18[1] = v11 + 12;
      v19 = v13;
      v14 = v13;
    }
    else
    {
      v19 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v12 = v13;
    outlined destroy of Participant((uint64_t)v7);
    _os_log_impl(&dword_1BD004000, v9, v10, "Requesting participant with handle: %@ to screen share", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of Participant((uint64_t)v7);

  v15 = v2 + 2;
  v17 = v2[5];
  v16 = v2[6];
  __swift_project_boxed_opaque_existential_1(v15, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, v17, v16);
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    ScreenShareButtonViewModel.shareButtonConfig.getter();
    swift_release();
    ShareScreenButtonConfig.buttonConfig.getter();
    swift_release();
    specialized StateHolder.state.setter();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.shareButtonConfig.getter();
    swift_release();
    ShareScreenButtonConfig.buttonConfig.getter();
    swift_release();
    specialized IconButtonConfig.enabled.setter(v1, (uint64_t)&type metadata for ShareMenuActionState, (uint64_t)partial apply for closure #1 in IconButtonConfig.enabled.setter, &lazy protocol witness table cache variable for type IconButtonConfig<ShareMenuActionState> and conformance IconButtonConfig<A>, &demangling cache variable for type metadata for IconButtonConfig<ShareMenuActionState>);
    return swift_release();
  }
  return result;
}

uint64_t ScreenShareButtonViewModel.updateMenuItems()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  ScreenShareButtonViewModel.shareButtonConfig.getter();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  ShareScreenButtonConfig.menuItems.setter(v3);
  return swift_release();
}

double ScreenShareButtonViewModel.buttonStyle()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;

  v13 = type metadata accessor for Font.Leading();
  v2 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
  v6[3] = v5;
  v6[4] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v6[5] = 0;
  v6[6] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v6[7] = 0;
  v6[8] = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[9] = 0;
  v6[10] = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[11] = 0;
  v6[12] = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v6[13] = 0;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = _s15ConversationKit12SystemSymbolVAASbRszlE19catalystCallControl4name5color15backgroundColorACySbGSS_7SwiftUI0K0VSbcAKSbctFZSSSbcfU_TA_0;
  v7[3] = v5;
  v7[4] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v7[5] = 0;
  v7[6] = specialized thunk for @escaping @callee_guaranteed (@unowned Bool) -> (@owned Color);
  v7[7] = 0;
  v7[8] = closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v7[9] = 0;
  v7[10] = partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v7[11] = 0;
  v7[12] = partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  v7[13] = 0;
  swift_retain_n();
  v8 = static Color.white.getter();
  static Font.subheadline.getter();
  v9 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CDD6D8], v13);
  v10 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v9);
  swift_release();
  result = 6.0;
  *(_OWORD *)a1 = xmmword_1BD6456D0;
  *(_QWORD *)(a1 + 16) = 0x401C000000000000;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = closure #1 in ScreenShareButtonViewModel.buttonStyle();
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = partial apply for closure #2 in ScreenShareButtonViewModel.buttonStyle();
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = partial apply for closure #3 in ScreenShareButtonViewModel.buttonStyle();
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = specialized closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = specialized closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = specialized closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:);
  *(_QWORD *)(a1 + 128) = 0;
  return result;
}

unint64_t closure #1 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  unint64_t v1;

  if (*(_BYTE *)(a1 + 1) & 1 | ((*(_BYTE *)(a1 + 17) & 1) == 0))
    v1 = 0xD000000000000028;
  else
    v1 = 0x616C706572616873;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t closure #2 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(a2 + 16);
  v4 = (*(_BYTE *)(a1 + 1) | *(_BYTE *)(a1 + 17)) & 1;
  return v2(&v4);
}

uint64_t closure #3 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(a2 + 32);
  v4 = (*(_BYTE *)(a1 + 1) | *(_BYTE *)(a1 + 17)) & 1;
  return v2(&v4);
}

uint64_t key path setter for ScreenShareButtonViewModel.shareButtonConfig : ScreenShareButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return ScreenShareButtonViewModel.shareButtonConfig.setter(v0);
}

uint64_t ScreenShareButtonViewModel.shareButtonConfig.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return OUTLINED_FUNCTION_7_127();
}

uint64_t ScreenShareButtonViewModel.iconButtonConfig.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  objc_class *v4;
  unint64_t v5;
  NSBundle v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  unint64_t v13;
  NSBundle v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[144];

  if (v0[9])
  {
    v1 = v0[9];
  }
  else
  {
    v2 = v0;
    ScreenShareButtonViewModel.buttonStyle()((uint64_t)v33);
    v3 = (void *)objc_opt_self();
    v4 = (objc_class *)objc_msgSend(v3, sel_conversationKit);
    v5 = OUTLINED_FUNCTION_1_151();
    v6.super.isa = v4;
    v10 = OUTLINED_FUNCTION_49_2(v5, v7, v8, v9, v6);
    v31 = v11;
    v32 = v10;

    v12 = (objc_class *)objc_msgSend(v3, sel_conversationKit, 0xE000000000000000);
    v13 = OUTLINED_FUNCTION_1_151();
    v14.super.isa = v12;
    v18 = OUTLINED_FUNCTION_49_2(v13, v15, v16, v17, v14);
    v20 = v19;

    v21 = v2[5];
    v22 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v21);
    LOWORD(v22) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
    v24 = v23;
    v26 = v25;
    v27 = v2[5];
    v28 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v27);
    LOBYTE(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    v29 = OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_7_4();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButtonConfig<ShareMenuActionState>);
    OUTLINED_FUNCTION_14_0();
    v1 = specialized IconButtonConfig.init(buttonStyle:title:hasBadge:accessibilityLabel:accessibilityIdentifier:state:enabled:didTap:)(v33, v32, v31, 0, v18, v20, 0xD000000000000016, 0x80000001BD6724D0, v22 & 1, (unsigned __int16)(v22 & 0x101) >> 8, v24, v26 & 1, (unsigned __int16)(v26 & 0x101) >> 8, v12 & 1, (uint64_t)partial apply for closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter, v29);
    v2[9] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1BD59F75C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    ScreenShareButtonViewModel.didTapAskToScreenShare(_:)(a1);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(uint64_t a1)
{
  return closure #1 in ScreenShareButtonViewModel.shareButtonConfig.getter(a1);
}

uint64_t key path setter for ScreenShareButtonViewModel.iconButtonConfig : ScreenShareButtonViewModel()
{
  uint64_t v0;

  v0 = swift_retain();
  return ScreenShareButtonViewModel.iconButtonConfig.setter(v0);
}

uint64_t ScreenShareButtonViewModel.iconButtonConfig.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return OUTLINED_FUNCTION_7_127();
}

uint64_t closure #1 in ScreenShareButtonViewModel.observeParticipantState()(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return OUTLINED_FUNCTION_43();
  }
  return result;
}

uint64_t ScreenShareButtonViewModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ScreenShareButtonViewModel.__deallocating_deinit()
{
  ScreenShareButtonViewModel.deinit();
  return swift_deallocClassInstance();
}

BOOL protocol witness for CallControlsInCallButtonViewModel.enabled(for:) in conformance ScreenShareButtonViewModel(uint64_t a1)
{
  return ScreenShareButtonViewModel.enabled(for:)(a1 & 0xFFFFFFFFFFLL);
}

uint64_t (*protocol witness for CallControlsButtonViewModel.controlType.getter in conformance ScreenShareButtonViewModel())()
{
  ScreenShareButtonViewModel.controlType.getter();
  return partial apply for closure #1 in ScreenShareButtonViewModel.controlType.getter;
}

void protocol witness for CallControlsButtonViewModel.onAppear() in conformance ScreenShareButtonViewModel()
{
  ScreenShareButtonViewModel.onAppear()();
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(char *a1)
{
  return closure #1 in ScreenShareButtonViewModel.observeShareMenuState()(a1);
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.observeParticipantState()()
{
  uint64_t v0;

  return closure #1 in ScreenShareButtonViewModel.observeParticipantState()(v0, (void (*)(void))ScreenShareButtonViewModel.updateMenuItems());
}

uint64_t sub_1BD59F954()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenShareButtonViewModel.iconButtonConfig.getter()
{
  uint64_t v0;

  return closure #1 in ScreenShareButtonViewModel.observeParticipantState()(v0, ScreenShareButtonViewModel.didTapScreenShare());
}

uint64_t sub_1BD59F998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScreenShareButtonViewModel.shareButtonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1BD59F9C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScreenShareButtonViewModel.iconButtonConfig.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ScreenShareButtonViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScreenShareButtonViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenShareButtonViewModel.__allocating_init(service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BD59FA24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  uint64_t v1;

  return closure #2 in ScreenShareButtonViewModel.buttonStyle()(a1, v1 + 16);
}

uint64_t objectdestroy_13Tm_5()
{
  _QWORD *v0;

  swift_release();
  swift_release();
  swift_release();
  if (v0[8])
    swift_release();
  if (v0[10])
    swift_release();
  if (v0[12])
    swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ScreenShareButtonViewModel.buttonStyle()(uint64_t a1)
{
  uint64_t v1;

  return closure #3 in ScreenShareButtonViewModel.buttonStyle()(a1, v1 + 16);
}

uint64_t specialized closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(a1);
}

uint64_t specialized closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v1 = *((_QWORD *)a1 + 1);
  v2 = a1[16];
  v3 = a1[17];
  if (a1[1])
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 | *a1;
  if (v3)
    v6 = 256;
  else
    v6 = 0;
  return partial apply for closure #2 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(v5, v1, v6 | v2);
}

uint64_t specialized closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v1 = *((_QWORD *)a1 + 1);
  v2 = a1[16];
  v3 = a1[17];
  if (a1[1])
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 | *a1;
  if (v3)
    v6 = 256;
  else
    v6 = 0;
  return partial apply for closure #3 in static SystemSymbol.catalystCallControl(name:color:backgroundColor:)(v5, v1, v6 | v2);
}

uint64_t sub_1BD59FB80()
{
  return 8;
}

_QWORD *sub_1BD59FB8C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t lazy protocol witness table accessor for type ShareScreenButton and conformance ShareScreenButton()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton;
  if (!lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareScreenButton, &type metadata for ShareScreenButton);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareScreenButton and conformance ShareScreenButton);
  }
  return result;
}

uint64_t partial apply for specialized closure #1 in IconButtonConfig.enabled.setter()
{
  return partial apply for closure #1 in IconButtonConfig.enabled.setter();
}

uint64_t ShutterButtonStyle.init(shutterModel:)()
{
  uint64_t v0;

  type metadata accessor for ShutterModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShutterModel and conformance ShutterModel, (void (*)(uint64_t))type metadata accessor for ShutterModel);
  v0 = ObservedObject.init(wrappedValue:)();
  State.init(wrappedValue:)();
  return v0;
}

BOOL static ShutterButtonStyle.InnerStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ShutterButtonStyle.InnerStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int ShutterButtonStyle.InnerStyle.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ShutterButtonStyle.InnerStyle(char *a1, char *a2)
{
  return static ShutterButtonStyle.InnerStyle.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ShutterButtonStyle.InnerStyle()
{
  unsigned __int8 *v0;

  return ShutterButtonStyle.InnerStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ShutterButtonStyle.InnerStyle(uint64_t a1)
{
  unsigned __int8 *v1;

  ShutterButtonStyle.InnerStyle.hash(into:)(a1, *v1);
}

uint64_t ShutterButtonStyle.shutterModel.getter()
{
  return swift_retain();
}

uint64_t key path getter for ShutterButtonStyle.shutterModel : ShutterButtonStyle@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  result = ShutterButtonStyle.shutterModel.getter();
  *a2 = v3;
  return result;
}

uint64_t key path setter for ShutterButtonStyle.shutterModel : ShutterButtonStyle()
{
  uint64_t v0;

  v0 = swift_retain();
  return ShutterButtonStyle.shutterModel.setter(v0);
}

uint64_t ShutterButtonStyle.shutterModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ShutterButtonStyle.shutterModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShutterButtonStyle.$shutterModel.getter()
{
  type metadata accessor for ShutterModel();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShutterModel and conformance ShutterModel, (void (*)(uint64_t))type metadata accessor for ShutterModel);
  return ObservedObject.projectedValue.getter();
}

void ShutterButtonStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  Swift::String_optional v39;
  Swift::String v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v48;
  __int128 v49;
  __int128 v50;

  v43 = type metadata accessor for AccessibilityChildBehavior();
  v11 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = (uint64_t *)(v17 - v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v23 = v22 - v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  v45 = *(_QWORD *)(v24 - 8);
  v46 = v24;
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_77();
  v27 = v26 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_77();
  v44 = v30 - v29;
  *v18 = static Alignment.center.getter();
  v18[1] = v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  closure #1 in ShutterButtonStyle.makeBody(configuration:)(a2, a3, a4, a1, (uint64_t *)((char *)v18 + *(int *)(v32 + 44)), a6);
  OUTLINED_FUNCTION_2_133();
  OUTLINED_FUNCTION_2_133();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v23, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  v33 = (_OWORD *)(v23 + *(int *)(v19 + 36));
  *v33 = v48;
  v33[1] = v49;
  v33[2] = v50;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
  static AccessibilityChildBehavior.ignore.getter();
  lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v43);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v23, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
  v34 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 224);
  v35 = swift_retain();
  LOBYTE(v34) = v34(v35);
  swift_release();
  v36 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if ((v34 & 1) != 0)
  {
    v37 = 0xD00000000000001DLL;
    v42 = 0xE000000000000000;
    v38 = 0x80000001BD698550;
  }
  else
  {
    v42 = 0xE000000000000000;
    v38 = 0x80000001BD698530;
    v37 = 0xD00000000000001CLL;
  }
  v39.value._countAndFlagsBits = 0x61737265766E6F43;
  v39.value._object = (void *)0xEF74694B6E6F6974;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  v41 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v37, v39, (NSBundle)v36, v40, *(Swift::String *)(&v42 - 1));

  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type String and conformance String();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v27, v46);
  outlined init with take of Any?(v44, a5, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
}

uint64_t closure #1 in ShutterButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  double (*v58)(uint64_t);
  uint64_t v59;
  double v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  __int128 v70;
  double v71;
  double *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  _BYTE v168[56];

  v133 = a4;
  v129 = a5;
  v119 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v119);
  v125 = (double *)((char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  MEMORY[0x1E0C80A78](v111);
  v115 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v114);
  v118 = (uint64_t)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v116);
  v121 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  MEMORY[0x1E0C80A78](v117);
  v124 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  MEMORY[0x1E0C80A78](v122);
  v132 = (uint64_t)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  MEMORY[0x1E0C80A78](v126);
  v140 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v139 = (uint64_t)&v102 - v18;
  v135 = type metadata accessor for TintShapeStyle();
  v19 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v21 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
  MEMORY[0x1E0C80A78](v110);
  v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v109 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v108 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  MEMORY[0x1E0C80A78](v25);
  v138 = (uint64_t)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v141 = (uint64_t)&v102 - v28;
  v136 = a3;
  v137 = a1;
  v142 = a1;
  v143 = a2;
  v144 = a6;
  v145 = a3;
  Path.init(_:)();
  v130 = v147;
  v131 = v146;
  v123 = v148;
  v128 = v149;
  v127 = v150;
  v29 = *(void (**)(uint64_t))(*(_QWORD *)a2 + 368);
  v30 = swift_retain();
  v29(v30);
  swift_release();
  v31 = 1;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  v32 = v151;
  v33 = v152;
  v34 = v153;
  v120 = v154;
  v35 = v155;
  v36 = static Alignment.center.getter();
  v112 = v37;
  v113 = v36;
  v38 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 512);
  v39 = swift_retain();
  LOBYTE(a3) = v38(v39);
  v40 = swift_release();
  if ((a3 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v40);
    v41 = v136;
    *(&v102 - 4) = v137;
    *(&v102 - 3) = a2;
    *((double *)&v102 - 2) = a6;
    *(&v102 - 1) = v41;
    Path.init(_:)();
    v106 = v156;
    v42 = v157;
    v105 = v158;
    v104 = v159;
    *(double *)&v165 = a6;
    *((_QWORD *)&v165 + 1) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    v103 = v160;
    TintShapeStyle.init()();
    v43 = swift_retain();
    v29(v43);
    v107 = v32;
    swift_release();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    v44 = v160;
    v45 = v162;
    v46 = v163;
    v47 = v164;
    v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<_StrokedShape<_TrimmedShape<Path>>, TintShapeStyle>);
    v49 = v35;
    v50 = v34;
    v51 = v161;
    v52 = v135;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(&v23[*(int *)(v48 + 52)], v21, v135);
    *(_OWORD *)v23 = v106;
    v53 = v105;
    *((_QWORD *)v23 + 2) = v42;
    *((_QWORD *)v23 + 3) = v53;
    v23[32] = v104;
    *((_QWORD *)v23 + 5) = 0;
    *((_QWORD *)v23 + 6) = v103;
    *((_QWORD *)v23 + 7) = v44;
    *((_QWORD *)v23 + 8) = v51;
    *((_QWORD *)v23 + 9) = v45;
    v34 = v50;
    v35 = v49;
    *((_QWORD *)v23 + 10) = v46;
    *((_QWORD *)v23 + 11) = v47;
    *(_WORD *)&v23[*(int *)(v48 + 56)] = 256;
    outlined init with take of Path.Storage((uint64_t)&v156, (uint64_t)v168);
    outlined retain of Path.Storage((uint64_t)v168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of Path.Storage);
    v54 = static Alignment.center.getter();
    v56 = v55;
    v57 = (uint64_t *)&v23[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<_StrokedShape<_TrimmedShape<Path>>, TintShapeStyle>, _BackgroundModifier<EmptyView>>)
                                 + 36)];
    *v57 = v54;
    v57[1] = v56;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v52);
    outlined retain of Path.Storage((uint64_t)&v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of Path.Storage);
    v58 = *(double (**)(uint64_t))(*(_QWORD *)a2 + 176);
    v59 = swift_retain();
    v60 = v58(v59);
    swift_release();
    *(double *)&v165 = v60;
    v32 = v107;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = v137;
    *(_QWORD *)(v61 + 24) = a2;
    *(double *)(v61 + 32) = a6;
    *(_QWORD *)(v61 + 40) = v41;
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView> and conformance StrokeShapeView<A, B, C>, &demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    swift_retain();
    swift_retain();
    v62 = v108;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v23, &demangling cache variable for type metadata for StrokeShapeView<_TrimmedShape<Path>, TintShapeStyle, EmptyView>);
    (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v141, v62, v134);
    v31 = 0;
  }
  v63 = v141;
  __swift_storeEnumTagSinglePayload(v141, v31, 1, v134);
  TintShapeStyle.init()();
  v64 = (uint64_t)v115;
  v65 = v135;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v115, v21, v135);
  *(_WORD *)(v64 + *(int *)(v111 + 56)) = 256;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v65);
  v66 = v133;
  v67 = v137;
  ShutterButtonStyle.rectangleSize(from:)(v133, v137, a2);
  ShutterButtonStyle.rectangleSize(from:)(v66, v67, a2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v68 = v118;
  outlined init with copy of FeatureEligibility?(v64, v118, &demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  v69 = (_OWORD *)(v68 + *(int *)(v114 + 36));
  v70 = v166;
  *v69 = v165;
  v69[1] = v70;
  v69[2] = v167;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v64, &demangling cache variable for type metadata for _ShapeView<Rectangle, TintShapeStyle>);
  v71 = ShutterButtonStyle.cornerRadius(from:)(v66, v67, a2);
  v72 = v125;
  v73 = (char *)v125 + *(int *)(v119 + 20);
  v74 = *MEMORY[0x1E0CDB0C0];
  v75 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 104))(v73, v74, v75);
  *v72 = v71;
  v72[1] = v71;
  v76 = (uint64_t)v121;
  v77 = (uint64_t)&v121[*(int *)(v116 + 36)];
  outlined init with copy of RoundedRectangle((uint64_t)v72, v77);
  *(_WORD *)(v77
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of FeatureEligibility?(v68, v76, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  outlined destroy of RoundedRectangle((uint64_t)v72);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v68, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>);
  v78 = static Animation.spring(response:dampingFraction:blendDuration:)();
  LOBYTE(v77) = ButtonStyleConfiguration.isPressed.getter();
  v79 = v124;
  outlined init with copy of FeatureEligibility?(v76, v124, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  v80 = v79 + *(int *)(v117 + 36);
  *(_QWORD *)v80 = v78;
  *(_BYTE *)(v80 + 8) = v77 & 1;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  v81 = static Animation.easeInOut(duration:)();
  v82 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 272);
  v83 = swift_retain();
  LOBYTE(v77) = v82(v83);
  swift_release();
  v84 = v132;
  outlined init with copy of FeatureEligibility?(v79, v132, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  v85 = v84 + *(int *)(v122 + 36);
  *(_QWORD *)v85 = v81;
  *(_BYTE *)(v85 + 8) = v77;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v79, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>);
  v86 = static Animation.easeInOut(duration:)();
  v87 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 224);
  v88 = swift_retain();
  LOBYTE(v77) = v87(v88);
  swift_release();
  v89 = v140;
  outlined init with copy of FeatureEligibility?(v84, v140, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  v90 = v89 + *(int *)(v126 + 36);
  *(_QWORD *)v90 = v86;
  *(_BYTE *)(v90 + 8) = v77 & 1;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v84, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>);
  v91 = v139;
  outlined init with take of Any?(v89, v139, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  v92 = v138;
  outlined init with copy of FeatureEligibility?(v63, v138, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined init with copy of FeatureEligibility?(v91, v89, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  v93 = v130;
  v94 = v131;
  v95 = v128;
  v96 = v129;
  *v129 = v131;
  v96[1] = v93;
  v97 = v123;
  v96[2] = v123;
  v96[3] = v95;
  LOBYTE(v79) = v127;
  *((_BYTE *)v96 + 32) = v127;
  v96[5] = v32;
  v96[6] = v33;
  v96[7] = v34;
  v96[8] = v120;
  v96[9] = v35;
  *((_WORD *)v96 + 40) = 256;
  v98 = v112;
  v96[11] = v113;
  v96[12] = v98;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>));
  outlined init with copy of FeatureEligibility?(v92, (uint64_t)v96 + *(int *)(v99 + 48), &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  v100 = v140;
  outlined init with copy of FeatureEligibility?(v140, (uint64_t)v96 + *(int *)(v99 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined copy of Path.Storage(v94, v93, v97, v95, v79);
  swift_bridgeObjectRetain();
  outlined copy of Path.Storage(v94, v93, v97, v95, v79);
  swift_bridgeObjectRetain();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v139, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v141, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined consume of Path.Storage(v94, v93, v97, v95, v79);
  swift_bridgeObjectRelease();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v100, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v138, &demangling cache variable for type metadata for (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?);
  outlined consume of Path.Storage(v94, v93, v97, v95, v79);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(double *a1, double *a2, uint64_t a3, double *a4)
{
  ShutterButtonStyle.duration(from:to:)(*a1, *a2, a3, a4);
  static Animation.linear(duration:)();
  withAnimation<A>(_:_:)();
  return swift_release();
}

double ShutterButtonStyle.duration(from:to:)(double a1, double a2, uint64_t a3, double *a4)
{
  double v4;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v4 = 0.0;
  if (a1 < a2)
  {
    v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 224);
    v9 = swift_retain();
    LOBYTE(v8) = v8(v9);
    swift_release();
    if ((v8 & 1) == 0)
      return (a2 - a1) * a4[2];
  }
  return v4;
}

uint64_t closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  return State.wrappedValue.setter();
}

double ShutterButtonStyle.rectangleSize(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  double v11;
  char v12;
  double v13;
  double v14;
  double (*v15)(uint64_t);
  uint64_t v16;
  double v17;

  v6 = *(double (**)(uint64_t))(*(_QWORD *)a3 + 416);
  v7 = swift_retain();
  v8 = v6(v7);
  swift_release();
  v9 = *(double (**)(uint64_t))(*(_QWORD *)a3 + 368);
  v10 = swift_retain();
  v11 = v9(v10);
  swift_release();
  v12 = ButtonStyleConfiguration.isPressed.getter();
  v13 = 0.0;
  if ((v12 & 1) != 0)
    v13 = 3.0;
  v14 = v8 + v11 + v13;
  if (ShutterButtonStyle.resolvedMode(from:)(a1, a2, a3) != 1)
  {
    v15 = *(double (**)(uint64_t))(*(_QWORD *)a3 + 320);
    v16 = swift_retain();
    v17 = v15(v16);
    swift_release();
    v14 = v14 + v17 * 0.24;
  }
  return ShutterButtonStyle.resolvedSize.getter(a2, a3) - (v14 + v14);
}

double ShutterButtonStyle.cornerRadius(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  double v7;
  double v8;

  v6 = ShutterButtonStyle.resolvedMode(from:)(a1, a2, a3);
  v7 = ShutterButtonStyle.rectangleSize(from:)(a1, a2, a3);
  v8 = 0.125;
  if (v6 == 1)
    v8 = 0.5;
  return v7 * v8;
}

double ShutterButtonStyle.resolvedSize.getter(uint64_t a1, uint64_t a2)
{
  double (*v3)(uint64_t);
  uint64_t v4;
  double v5;
  double (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(double (**)(uint64_t))(*(_QWORD *)a2 + 320);
  v4 = swift_retain();
  v5 = v3(v4);
  swift_release();
  v6 = *(double (**)(uint64_t))(*(_QWORD *)a2 + 368);
  v7 = swift_retain();
  v8 = v6(v7);
  swift_release();
  v9 = swift_retain();
  v3(v9);
  swift_release();
  v10 = swift_retain();
  v6(v10);
  swift_release();
  return v5 + v8 + v8;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout>);
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(StrokeShapeView<Path, ForegroundStyle, EmptyView>, (<<opaque return type of View.onChange<A>(of:initial:_:)>>.0)?, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Rectangle, TintShapeStyle>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, _AnimationModifier<Bool>>, _AnimationModifier<ShutterButtonStyle.InnerStyle>>, _AnimationModifier<Bool>>)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle;
  if (!lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShutterButtonStyle.InnerStyle, &type metadata for ShutterButtonStyle.InnerStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShutterButtonStyle.InnerStyle and conformance ShutterButtonStyle.InnerStyle);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ShutterButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

void protocol witness for ButtonStyle.makeBody(configuration:) in conformance ShutterButtonStyle(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  ShutterButtonStyle.makeBody(configuration:)(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 24), a2, *(double *)(v2 + 16));
}

_QWORD *initializeWithCopy for ShutterButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ShutterButtonStyle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for ShutterButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShutterButtonStyle()
{
  return &type metadata for ShutterButtonStyle;
}

uint64_t storeEnumTagSinglePayload for ShutterButtonStyle.InnerStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD5A1300 + 4 * byte_1BD666505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD5A1334 + 4 * byte_1BD666500[v4]))();
}

uint64_t sub_1BD5A1334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A133C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5A1344);
  return result;
}

uint64_t sub_1BD5A1350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5A1358);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD5A135C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A1364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShutterButtonStyle.InnerStyle()
{
  return &type metadata for ShutterButtonStyle.InnerStyle;
}

double ShutterButtonStyle.centerPoint.getter(uint64_t a1, uint64_t a2)
{
  double (*v3)(uint64_t);
  uint64_t v4;
  double v5;
  double v6;
  double (*v7)(uint64_t);
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(double (**)(uint64_t))(*(_QWORD *)a2 + 320);
  v4 = swift_retain();
  v5 = v3(v4);
  swift_release();
  v6 = v5 * 0.5;
  v7 = *(double (**)(uint64_t))(*(_QWORD *)a2 + 368);
  v8 = swift_retain();
  v9 = v7(v8);
  swift_release();
  v10 = swift_retain();
  v3(v10);
  swift_release();
  v11 = swift_retain();
  v7(v11);
  swift_release();
  return v6 + v9;
}

uint64_t closure #1 in ShutterButtonStyle.circlePath()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;

  ShutterButtonStyle.centerPoint.getter(a2, a3);
  v4 = *(void (**)(uint64_t))(*(_QWORD *)a3 + 320);
  v5 = swift_retain();
  v4(v5);
  swift_release();
  v6 = *(void (**)(uint64_t))(*(_QWORD *)a3 + 368);
  v7 = swift_retain();
  v6(v7);
  swift_release();
  return Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
}

uint64_t partial apply for closure #1 in ShutterButtonStyle.circlePath()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ShutterButtonStyle.circlePath()(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t outlined copy of Path.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_retain();
  return result;
}

uint64_t outlined consume of Path.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

uint64_t outlined init with take of Path.Storage(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0CDDA08] - 8) + 32))(a2, a1);
  return a2;
}

void outlined retain of Path.Storage(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD5A1684()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(double *a1, double *a2)
{
  uint64_t v2;

  return closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)(a1, a2, *(_QWORD *)(v2 + 16), *(double **)(v2 + 24));
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)()
{
  return closure #1 in closure #1 in closure #1 in ShutterButtonStyle.makeBody(configuration:)();
}

uint64_t ShutterButtonStyle.resolvedMode(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 (*v4)(uint64_t);
  uint64_t v5;
  int v6;
  int v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;

  v4 = *(unsigned __int8 (**)(uint64_t))(*(_QWORD *)a3 + 272);
  v5 = swift_retain();
  v6 = v4(v5);
  swift_release();
  if (v6 == 2)
  {
    v7 = ButtonStyleConfiguration.isPressed.getter();
    v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 224);
    v9 = swift_retain();
    v10 = v8(v9);
    swift_release();
    return v10 & ~v7 & 1;
  }
  else
  {
    v12 = swift_retain();
    v13 = ((uint64_t (*)(uint64_t))v4)(v12);
    swift_release();
    return v13;
  }
}

_QWORD *PeoplePickerActionBar.__allocating_init(frame:buttonsStyle:)(char a1)
{
  objc_class *v1;
  id v3;

  OUTLINED_FUNCTION_17_7();
  v3 = objc_allocWithZone(v1);
  OUTLINED_FUNCTION_15_0();
  return PeoplePickerActionBar.init(frame:buttonsStyle:)(a1);
}

ConversationKit::RTTType_optional __swiftcall RTTType.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of RTTType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3)
    return (ConversationKit::RTTType_optional)3;
  else
    return (ConversationKit::RTTType_optional)v3;
}

uint64_t RTTType.rawValue.getter(char a1)
{
  if (!a1)
    return 1701736302;
  if (a1 == 1)
    return 0x746365726964;
  return 0x79616C6572;
}

void protocol witness for static Equatable.== infix(_:_:) in conformance RTTType(unsigned __int8 *a1, char *a2)
{
  specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance RTTType()
{
  specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance RTTType()
{
  return specialized RawRepresentable<>.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance RTTType()
{
  specialized RawRepresentable<>._rawHashValue(seed:)();
}

ConversationKit::RTTType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance RTTType@<W0>(Swift::String *a1@<X0>, ConversationKit::RTTType_optional *a2@<X8>)
{
  ConversationKit::RTTType_optional result;

  result.value = RTTType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance RTTType(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = RTTType.rawValue.getter(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

unint64_t PeoplePickerAction.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0xD000000000000017;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x695674726174732ELL;
      break;
    case 2:
      result = 0x737265506464612ELL;
      break;
    case 3:
      result = 0xD000000000000016;
      break;
    case 4:
      result = 0x654D69646E65732ELL;
      break;
    case 5:
      result = 0x6C65636E61632ELL;
      break;
    default:
      if (0xBD698610)
      {
        if (0xBD698610 == 1)
          result = 0xD000000000000025;
        else
          result = 0xD000000000000024;
      }
      else
      {
        result = 0xD000000000000013;
      }
      break;
  }
  return result;
}

BOOL ActionBarButtonsStyle.isAdd.getter(unsigned __int8 a1)
{
  return a1 - 5 < 0xFFFFFFFD;
}

uint64_t static ActionBarButtonsStyle.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  char v2;

  switch(a1)
  {
    case 2:
      if (a2 != 2)
        goto LABEL_11;
      break;
    case 3:
      if (a2 != 3)
        goto LABEL_11;
      break;
    case 4:
      if (a2 != 4)
      {
LABEL_11:
        v2 = 0;
        return v2 & 1;
      }
      break;
    default:
      if (a2 - 2 >= 3)
      {
        v2 = ((a1 & 1) == 0) ^ a2;
        return v2 & 1;
      }
      goto LABEL_11;
  }
  v2 = 1;
  return v2 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionBarButtonsStyle(char *a1, unsigned __int8 *a2)
{
  return static ActionBarButtonsStyle.== infix(_:_:)(*a1, *a2);
}

void one-time initialization function for buttonImageTitlePadding()
{
  static LayoutConstants.buttonImageTitlePadding = 0x4010000000000000;
}

void one-time initialization function for buttonBottomPadding()
{
  static LayoutConstants.buttonBottomPadding = 0x4020000000000000;
}

void one-time initialization function for buttonLeftRightPadding()
{
  static LayoutConstants.buttonLeftRightPadding = 0x4024000000000000;
}

void one-time initialization function for stackViewInterItemSpacing()
{
  static LayoutConstants.stackViewInterItemSpacing = 0x4024000000000000;
}

void one-time initialization function for buttonTopPadding()
{
  static LayoutConstants.buttonTopPadding = 0x4028000000000000;
}

void one-time initialization function for buttonVerticalInset()
{
  static LayoutConstants.buttonVerticalInset = 0x4024000000000000;
}

void one-time initialization function for buttonHorizontalInset()
{
  static LayoutConstants.buttonHorizontalInset = 0x402E000000000000;
}

uint64_t key path setter for PeoplePickerActionBar.delegate : PeoplePickerActionBar(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x128);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t PeoplePickerActionBar.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void PeoplePickerActionBar.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerActionBar.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

uint64_t PeoplePickerActionBar.buttonsStyle.didset(unsigned __int8 a1)
{
  _QWORD *v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1;
  v3 = (unsigned __int8 *)v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle;
  result = swift_beginAccess();
  v5 = *v3;
  switch(v5)
  {
    case 2:
      if (v2 == 2)
        return result;
      break;
    case 3:
      if (v2 == 3)
        return result;
      break;
    case 4:
      if (v2 == 4)
        return result;
      break;
    default:
      if ((v2 - 2) >= 3 && ((v2 ^ ((v5 & 1) == 0)) & 1) != 0)
        return result;
      break;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  v7 = String.init<A>(reflecting:)();
  v9 = v8;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v10 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x400))(v10);
}

void PeoplePickerActionBar.buttonsStyle.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void PeoplePickerActionBar.buttonsStyle.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 v4;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  PeoplePickerActionBar.buttonsStyle.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerActionBar.buttonsStyle.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void PeoplePickerActionBar.buttonsStyle.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  PeoplePickerActionBar.buttonsStyle.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

void PeoplePickerActionBar.handleToDisplay.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void PeoplePickerActionBar.handleToDisplay.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_handleToDisplay);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

void PeoplePickerActionBar.handleToDisplay.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t PeoplePickerActionBar.generatingLinksEnabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  uint64_t result;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled);
  result = swift_beginAccess();
  if (*v3 != v2)
    return PeoplePickerActionBar.updateLinkButtonsEnabled()();
  return result;
}

void PeoplePickerActionBar.generatingLinksEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void PeoplePickerActionBar.generatingLinksEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  PeoplePickerActionBar.generatingLinksEnabled.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerActionBar.generatingLinksEnabled.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled);
  OUTLINED_FUNCTION_1();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void PeoplePickerActionBar.generatingLinksEnabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  PeoplePickerActionBar.generatingLinksEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

int8x8_t key path getter for PeoplePickerActionBar.serviceAvailability : PeoplePickerActionBar@<D0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64x2_t v4;
  int16x8_t v5;
  int8x8_t result;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x180))();
  *(_BYTE *)a2 = v3 & 1;
  v4 = (uint64x2_t)vdupq_n_s64(v3);
  v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC60), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC50));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v5);
  *(_DWORD *)(a2 + 1) = result.i32[0];
  *(_BYTE *)(a2 + 5) = BYTE5(v3) & 1;
  return result;
}

uint64_t key path setter for PeoplePickerActionBar.serviceAvailability : PeoplePickerActionBar(unsigned __int8 *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 0x10000000000;
  if (!a1[5])
    v2 = 0;
  v3 = 0x100000000;
  if (!a1[4])
    v3 = 0;
  v4 = 0x1000000;
  if (!a1[3])
    v4 = 0;
  v5 = 0x10000;
  if (!a1[2])
    v5 = 0;
  v6 = 256;
  if (!a1[1])
    v6 = 0;
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x188))(v6 | *a1 | v5 | v4 | v3 | v2);
}

uint64_t PeoplePickerActionBar.serviceAvailability.didset(unint64_t a1)
{
  _QWORD *v1;
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (unsigned __int8 *)v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability;
  result = swift_beginAccess();
  if (((a1 ^ *v3) & 1) != 0
    || (((a1 >> 8) & 1 ^ v3[1]) & 1) != 0
    || (((a1 >> 16) & 1 ^ v3[2]) & 1) != 0
    || (((a1 >> 24) & 1 ^ v3[3]) & 1) != 0
    || ((BYTE4(a1) & 1 ^ v3[4]) & 1) != 0
    || (((a1 >> 40) & 1 ^ v3[5]) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    v6 = String.init<A>(reflecting:)();
    v8 = v7;
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v8;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    v9 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x400))(v9);
  }
  return result;
}

void PeoplePickerActionBar.serviceAvailability.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_56_41();
  OUTLINED_FUNCTION_29_74(v0);
  OUTLINED_FUNCTION_32();
}

void PeoplePickerActionBar.serviceAvailability.setter(unint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64x2_t v5;
  int16x8_t v6;
  unint64_t v7;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1 & 1;
  v5 = (uint64x2_t)vdupq_n_s64(a1);
  v6 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_1BD65EC60), (int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_1BD65EC50));
  *(int8x8_t *)v6.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v6), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v3 + 1) = vmovn_s16(v6).u32[0];
  v3[5] = BYTE5(a1) & 1;
  v7 = OUTLINED_FUNCTION_29_74(v4);
  PeoplePickerActionBar.serviceAvailability.didset(v7);
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerActionBar.serviceAvailability.modify()
{
  uint64_t v0;
  void *v1;
  char v2;
  _BYTE *v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;

  v1 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_56_41();
  *(_BYTE *)(v0 + 32) = v2;
  v3 = (_BYTE *)(v0 + 32);
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  v3[4] = v7;
  v3[5] = v8;
  OUTLINED_FUNCTION_18();
}

void PeoplePickerActionBar.serviceAvailability.modify(uint64_t a1)
{
  void *v1;
  unint64_t v2;

  v1 = *(void **)a1;
  v2 = OUTLINED_FUNCTION_29_74(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  PeoplePickerActionBar.serviceAvailability.setter(v2);
  OUTLINED_FUNCTION_11(v1);
}

void PeoplePickerActionBar.videoButton.getter()
{
  PeoplePickerActionBar.videoButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.videoButton.getter);
}

id closure #1 in PeoplePickerActionBar.videoButton.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  id v5;
  Swift::String v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x454D495445434146;
  v1._object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v7);

  v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x69662E6F65646976, 0xEA00000000006C6CLL);
  swift_bridgeObjectRelease();
  return v5;
}

id static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setShowsLargeContentViewer_, 1);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3998]), sel_init);
  objc_msgSend(v11, sel_addInteraction_, v12);

  static PeoplePickerActionBar.createButtonBaseConfiguration(title:symbolName:titleLineBreakMode:)(a1, a2, a3, a4, 5, 0);
  v13 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
  UIButton.configuration.setter();
  objc_msgSend(v11, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v11, sel_setPreferredBehavioralStyle_, 1);
  return v11;
}

uint64_t PeoplePickerActionBar.audioButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return PeoplePickerActionBar.audioButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration, (void (*)(void))closure #1 in PeoplePickerActionBar.audioButtonConfiguration.getter, a1);
}

uint64_t closure #1 in PeoplePickerActionBar.audioButtonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v8;

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.tinted()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  UIButton.Configuration.image.setter();
  v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, *MEMORY[0x1E0DC4A88], 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC3060], v0);
  UIButton.Configuration.cornerStyle.setter();
  if (one-time initialization token for activeButtonBackgroundColor != -1)
    swift_once();
  v5 = (id)static Colors.PeoplePickerViewController.activeButtonBackgroundColor;
  UIButton.Configuration.baseForegroundColor.setter();
  v6 = v5;
  return UIButton.Configuration.baseBackgroundColor.setter();
}

void PeoplePickerActionBar.audioButton.getter()
{
  PeoplePickerActionBar.audioButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton, (void (*)(void))PeoplePickerActionBar.audioButtonConfiguration.getter, 1);
}

void PeoplePickerActionBar.audioButtonLeadingConstraint.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint) = a1;

}

uint64_t PeoplePickerActionBar.cancelButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return PeoplePickerActionBar.audioButtonConfiguration.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration, (void (*)(void))closure #1 in PeoplePickerActionBar.cancelButtonConfiguration.getter, a1);
}

uint64_t PeoplePickerActionBar.audioButtonConfiguration.getter@<X0>(_QWORD *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v16[-v11];
  v13 = v3 + *a1;
  OUTLINED_FUNCTION_1();
  outlined init with copy of UIButton.Configuration?(v13, (uint64_t)v12);
  v14 = OUTLINED_FUNCTION_59_39();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a3, v12, v14);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v12, &demangling cache variable for type metadata for UIButton.Configuration?);
  a2();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, a3, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v14);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of UIButton.Configuration?((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t closure #1 in PeoplePickerActionBar.cancelButtonConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  uint64_t v13;
  Swift::String v14;

  v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UIButton.Configuration.Size();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.gray()();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC3198], v4);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC3048], v0);
  UIButton.Configuration.cornerStyle.setter();
  v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v14._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x4C45434E4143;
  v9._object = (void *)0xE600000000000000;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v14);

  return UIButton.Configuration.title.setter();
}

void PeoplePickerActionBar.cancelButton.getter()
{
  PeoplePickerActionBar.audioButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton, (void (*)(void))PeoplePickerActionBar.cancelButtonConfiguration.getter, 2);
}

void PeoplePickerActionBar.audioButton.getter(_QWORD *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(v3 + *a1);
  if (!v4)
  {
    v5 = closure #1 in PeoplePickerActionBar.audioButton.getter(v3, a2, a3);
    OUTLINED_FUNCTION_17_3(v5);
    OUTLINED_FUNCTION_134();
    v4 = 0;
  }
  v6 = v4;
  OUTLINED_FUNCTION_18();
}

id closure #1 in PeoplePickerActionBar.audioButton.getter(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  double v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  v7 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  a2();
  v8 = OUTLINED_FUNCTION_59_39();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v8);
  UIButton.configuration.setter();
  OUTLINED_FUNCTION_40_3(v7, sel_setPointerInteractionEnabled_);
  v9 = objc_msgSend(v7, sel_layer);
  OUTLINED_FUNCTION_40_3(v9, sel_setMasksToBounds_);

  OUTLINED_FUNCTION_18_4(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v10);
  objc_msgSend(v7, sel_setPreferredBehavioralStyle_, a3);
  return v7;
}

void PeoplePickerActionBar.faceTimeAddPersonButton.getter()
{
  PeoplePickerActionBar.sharePlayAddPersonButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton, 0x69662E6F65646976, 0xEA00000000006C6CLL);
}

void PeoplePickerActionBar.sharePlayAddPersonButton.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  id v9;
  id v10;
  id v11;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (!v5)
  {
    ObjectType = swift_getObjectType();
    v9 = closure #1 in PeoplePickerActionBar.faceTimeAddPersonButton.getter(ObjectType, a2, a3);
    *(_QWORD *)(v3 + v4) = v9;
    v10 = v9;
    OUTLINED_FUNCTION_134();
    v5 = 0;
  }
  v11 = v5;
  OUTLINED_FUNCTION_18();
}

void PeoplePickerActionBar.sharePlayAddPersonButton.getter()
{
  PeoplePickerActionBar.sharePlayAddPersonButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton, 0x616C706572616873, 0xE900000000000079);
}

id closure #1 in PeoplePickerActionBar.faceTimeAddPersonButton.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  Swift::String v12;

  v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v12._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 0x504F45505F444441;
  v6._object = (void *)0xEA0000000000454CLL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v12);

  v10 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v9._countAndFlagsBits, (uint64_t)v9._object, a2, a3);
  swift_bridgeObjectRelease();
  return v10;
}

void PeoplePickerActionBar.inviteWithMessagesButton.getter()
{
  PeoplePickerActionBar.videoButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.inviteWithMessagesButton.getter);
}

void PeoplePickerActionBar.videoButton.getter(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t ObjectType;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    ObjectType = swift_getObjectType();
    v7 = (void *)a2(ObjectType);
    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v7;
    v9 = v7;

    v4 = 0;
  }
  v10 = v4;
  OUTLINED_FUNCTION_18();
}

id closure #1 in PeoplePickerActionBar.inviteWithMessagesButton.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  Swift::String v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v13._object = (void *)0xE000000000000000;
  v1._object = (void *)0x80000001BD698B10;
  v1._countAndFlagsBits = 0xD000000000000014;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v13);

  v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x2E6567617373656DLL, 0xEC0000006C6C6966);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_setNumberOfLines_, 1);

  }
  v8 = objc_msgSend(v5, sel_titleLabel);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setAdjustsFontSizeToFitWidth_, 1);

  }
  v10 = objc_msgSend(v5, sel_titleLabel);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_setMinimumScaleFactor_, 0.4);

  }
  return v5;
}

void PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter()
{
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView);
}

void PeoplePickerActionBar.messagesButton.getter()
{
  PeoplePickerActionBar.videoButton.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.messagesButton.getter);
}

id closure #1 in PeoplePickerActionBar.messagesButton.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  Swift::String v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v13._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x534547415353454DLL;
  v1._object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v13._countAndFlagsBits = 0;
  v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v13);

  v5 = static PeoplePickerActionBar.createPeoplePickerButton(title:symbolName:)(v4._countAndFlagsBits, (uint64_t)v4._object, 0x2E6567617373656DLL, 0xEC0000006C6C6966);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_setNumberOfLines_, 1);

  }
  v8 = objc_msgSend(v5, sel_titleLabel);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_setAdjustsFontSizeToFitWidth_, 1);

  }
  v10 = objc_msgSend(v5, sel_titleLabel);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_setMinimumScaleFactor_, 0.4);

  }
  return v5;
}

void PeoplePickerActionBar.messageAndFaceTimeStackView.getter()
{
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView);
}

void PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v1 + *a1);
  if (!v2)
  {
    closure #1 in PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    OUTLINED_FUNCTION_17_3(v3);
    OUTLINED_FUNCTION_134();
    v2 = 0;
  }
  v4 = v2;
  OUTLINED_FUNCTION_18();
}

void closure #1 in PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  OUTLINED_FUNCTION_18_4(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_48_1(v0, sel_setDistribution_);
  objc_msgSend(v0, sel_setAxis_, 0);
  if (one-time initialization token for stackViewInterItemSpacing != -1)
    swift_once();
  objc_msgSend(v0, sel_setSpacing_, *(double *)&static LayoutConstants.stackViewInterItemSpacing);
  OUTLINED_FUNCTION_0();
}

objc_class *PeoplePickerActionBar.audioVideoCallMenu.getter(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  objc_class *v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  UIMenu v18;
  void *v19;
  id v20;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v23;

  v2 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu;
  v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu];
  if (v3)
  {
    v4 = *(objc_class **)&v1[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu];
  }
  else
  {
    v5 = v1;
    OUTLINED_FUNCTION_59(a1, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    v6 = (void *)objc_opt_self();
    v7 = objc_msgSend(v6, sel_conversationKit);
    v8 = OUTLINED_FUNCTION_46_39();
    OUTLINED_FUNCTION_7_128(v8, 0x4F454449565FLL);

    OUTLINED_FUNCTION_59(v9, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    v10 = OUTLINED_FUNCTION_72_28();
    v11 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_251();
    v12 = OUTLINED_FUNCTION_21_88();
    v13 = objc_msgSend(v6, sel_conversationKit, 0, 0, 0, partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter, v11);
    v14 = OUTLINED_FUNCTION_46_39();
    OUTLINED_FUNCTION_7_128(v14, 0x4F494455415FLL);

    OUTLINED_FUNCTION_72_28();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_251();
    v15 = OUTLINED_FUNCTION_21_88();
    OUTLINED_FUNCTION_59(v15, &lazy cache variable for type metadata for UIMenu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v16 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v16 + 16) = xmmword_1BD6441C0;
    *(_QWORD *)(v16 + 32) = v12;
    *(_QWORD *)(v16 + 40) = v15;
    preferredElementSize = v16;
    specialized Array._endMutation()();
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v23.value.super.isa = 0;
    v23.is_nil = 0;
    v18.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v23, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
    v19 = *(void **)&v5[v2];
    *(UIMenu *)&v5[v2] = v18;
    v4 = v18.super.super.isa;

    v3 = 0;
  }
  v20 = v3;
  return v4;
}

void PeoplePickerActionBar.audioCallDisambiguationMenu.getter()
{
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter);
}

UIMenu closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter()
{
  void *v0;
  id v1;
  void *v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  Swift::String v18;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v21;
  Swift::String swift__string;
  Swift::String swift__stringa;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_conversationKit);
  v2 = (void *)0xE000000000000000;
  swift__string._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 1280065859;
  v3._object = (void *)0xE400000000000000;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  swift__string._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v1, v5, swift__string);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  @nonobjc UIImage.__allocating_init(systemName:)();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v8 = objc_msgSend(v0, sel_conversationKit, 0, 2, 1, partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter, v6);
  swift__stringa._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0x454D495445434146;
  v9._object = (void *)0xEE004F494455415FLL;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  swift__stringa._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, swift__stringa);

  @nonobjc UIImage.__allocating_init(systemName:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v13 = objc_msgSend((id)objc_opt_self(), sel_faceTimeSupplementalDialTelephonyCallStringIncludingFTA_, 1, 0);
  if (v13)
  {
    v14 = v13;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v2 = v16;

  }
  else
  {
    v15 = 0;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v17 + 32) = v7;
  *(_QWORD *)(v17 + 40) = v12;
  preferredElementSize = v17;
  specialized Array._endMutation()();
  v18._countAndFlagsBits = v15;
  v18._object = v2;
  v21.value.super.isa = 0;
  v21.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v18, (Swift::String_optional)0, v21, (UIMenuIdentifier_optional)2, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2);
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x120))())
    {
      v7 = v6;
      ObjectType = swift_getObjectType();
      v9 = (*(uint64_t (**)(void))((*v5 & *v4) + 0x150))();
      (*(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 8))(v4, v9, 0, ObjectType, v7);

      swift_unknownObjectRelease();
      v4 = (_QWORD *)v9;
    }

  }
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v4 = a2 + 16;
  OUTLINED_FUNCTION_1();
  v5 = (_QWORD *)MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = v5;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0x120))())
    {
      v8 = v7;
      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 8))(v6, a3, 0, ObjectType, v8);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_9_0();
}

void PeoplePickerActionBar.backgroundView.getter()
{
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.backgroundView.getter);
}

id closure #1 in PeoplePickerActionBar.backgroundView.getter()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  v2 = objc_msgSend(v0, sel_layer);
  PeoplePickerActionBar.backgroundGradientLayer.getter();
  v4 = v3;
  objc_msgSend(v2, sel_setMask_, v3);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

void PeoplePickerActionBar.backgroundGradientLayer.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer);
  if (!v1)
  {
    v2 = closure #1 in PeoplePickerActionBar.backgroundGradientLayer.getter();
    OUTLINED_FUNCTION_17_3(v2);
    OUTLINED_FUNCTION_134();
    v1 = 0;
  }
  v3 = v1;
  OUTLINED_FUNCTION_18();
}

id closure #1 in PeoplePickerActionBar.backgroundGradientLayer.getter()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2790]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD645380;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_clearColor);
  v4 = objc_msgSend(v3, sel_CGColor);

  type metadata accessor for CGColorRef(0);
  v6 = v5;
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 32) = v4;
  v7 = objc_msgSend(v2, sel_whiteColor);
  v8 = objc_msgSend(v7, sel_CGColor);

  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v8;
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v1, v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441C0;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  *(NSNumber *)(v9 + 32) = NSNumber.init(floatLiteral:)(0.0);
  *(NSNumber *)(v9 + 40) = NSNumber.init(floatLiteral:)(0.1);
  specialized Array._endMutation()();
  outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v9, v0);
  return v0;
}

void PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel))
  {
    *(_QWORD *)(v0 + v1) = closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter();
    swift_retain();
    swift_release();
  }
  swift_retain();
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  Swift::String v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x454D495445434146;
  v1._object = (void *)0xE800000000000000;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v5);

  static Color.green.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DropdownViewModel(0);
  swift_allocObject();
  return DropdownViewModel.init(primaryText:primaryColor:symbolName:primaryAction:menuItems:isEnabled:)();
}

void closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_videoButtonTapped);

  }
}

void PeoplePickerActionBar.audioVideoDropdownButton.getter()
{
  CallControlsStatusView.imageView.getter(&OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerActionBar.audioVideoDropdownButton.getter);
}

void *closure #1 in PeoplePickerActionBar.audioVideoDropdownButton.getter()
{
  id v0;
  void *v1;

  PeoplePickerActionBar.audioVideoDropdownViewModel.getter();
  type metadata accessor for DropdownViewModel(0);
  State.init(wrappedValue:)();
  v0 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SelfSizingHostingView<DropdownMenuButton>));
  v1 = (void *)_UIHostingView.init(rootView:)();
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

_QWORD *PeoplePickerActionBar.init(frame:buttonsStyle:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  objc_super *v7;
  SEL v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_handleToDisplay) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled) = 1;
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability;
  *(_WORD *)(v3 + 4) = 0;
  *(_DWORD *)v3 = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton) = 0;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration;
  OUTLINED_FUNCTION_59_39();
  OUTLINED_FUNCTION_51_1(v4);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint) = 0;
  OUTLINED_FUNCTION_51_1(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton) = 0;
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton) = 0;
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem;
  type metadata accessor for DropdownViewModel.MenuItem(0);
  OUTLINED_FUNCTION_51_1(v5);
  OUTLINED_FUNCTION_51_1(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___callUsingIPhoneDescriptiveMenuItem);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_buttonsStyle) = a1;
  ObjC metadata update function for PeoplePickerActionBar();
  v6 = OUTLINED_FUNCTION_15_0();
  v9 = objc_msgSendSuper2(v7, v8, v6);
  OUTLINED_FUNCTION_40_3(v9, sel_setPreservesSuperviewLayoutMargins_);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v10 + 16) = xmmword_1BD64B8D0;
  PeoplePickerActionBar.videoButton.getter();
  *(_QWORD *)(v10 + 32) = v11;
  PeoplePickerActionBar.audioButton.getter();
  *(_QWORD *)(v10 + 40) = v12;
  PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  *(_QWORD *)(v10 + 48) = v13;
  PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  *(_QWORD *)(v10 + 56) = v14;
  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  *(_QWORD *)(v10 + 64) = v15;
  PeoplePickerActionBar.messagesButton.getter();
  *(_QWORD *)(v10 + 72) = v16;
  PeoplePickerActionBar.cancelButton.getter();
  *(_QWORD *)(v10 + 80) = v17;
  PeoplePickerActionBar.audioVideoDropdownButton.getter();
  *(_QWORD *)(v10 + 88) = v18;
  OUTLINED_FUNCTION_26_0();
  *(_QWORD *)((char *)v9 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons) = v10;
  v19 = swift_bridgeObjectRelease();
  PeoplePickerActionBar.configureBackgroundView()(v19);
  PeoplePickerActionBar.configureButtonActions()();
  PeoplePickerActionBar.configureViewHierarchy()();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x400))();
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v20, sel_addObserver_selector_name_object_, v9, sel_rttEnablementDidChange, *MEMORY[0x1E0D838D0], 0);

  return v9;
}

uint64_t type metadata accessor for PeoplePickerActionBar()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PeoplePickerActionBar;
  if (!type metadata singleton initialization cache for PeoplePickerActionBar)
    return swift_getSingletonMetadata();
  return result;
}

void PeoplePickerActionBar.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void PeoplePickerActionBar.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_delegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_handleToDisplay] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_generatingLinksEnabled] = 1;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_serviceAvailability];
  *((_WORD *)v1 + 2) = 0;
  *(_DWORD *)v1 = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___videoButton] = 0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButtonConfiguration];
  OUTLINED_FUNCTION_59_39();
  OUTLINED_FUNCTION_8_2(v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint] = 0;
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButtonConfiguration]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAddPersonButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___sharePlayAddPersonButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___inviteWithMessagesButtonStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messagesButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___messageAndFaceTimeStackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoCallMenu] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioCallDisambiguationMenu] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___backgroundGradientLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___audioVideoDropdownButton] = 0;
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___faceTimeAudioDropdownMenuItem];
  type metadata accessor for DropdownViewModel.MenuItem(0);
  OUTLINED_FUNCTION_8_2(v3);
  OUTLINED_FUNCTION_8_2((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar____lazy_storage___callUsingIPhoneDescriptiveMenuItem]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall PeoplePickerActionBar.layoutSubviews()()
{
  void *v0;
  void *v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)ObjC metadata update function for PeoplePickerActionBar();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  PeoplePickerActionBar.backgroundGradientLayer.getter();
  v2 = v1;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

}

#error "1BD5A4898: call analysis failed (funcsize=116)"

void PeoplePickerActionBar.configureButtonActions()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  PeoplePickerActionBar.cancelButton.getter();
  v2 = v1;
  OUTLINED_FUNCTION_9_107(v1, v3, v4, (uint64_t)sel_cancelButtonTapped_);

  OUTLINED_FUNCTION_74_19();
  OUTLINED_FUNCTION_9_107(v5, v6, v7, (uint64_t)sel_audioButtonTapped_);

  OUTLINED_FUNCTION_76_24();
  OUTLINED_FUNCTION_9_107(v8, v9, v10, (uint64_t)sel_videoButtonTapped);

  PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  v12 = v11;
  OUTLINED_FUNCTION_77_3(v11, sel_addTarget_action_forControlEvents_, v0, (uint64_t)sel_addPersonButtonTapped_);

  PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  v14 = v13;
  OUTLINED_FUNCTION_77_3(v13, sel_addTarget_action_forControlEvents_, v0, (uint64_t)sel_addPersonButtonTapped_);

  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v16 = v15;
  OUTLINED_FUNCTION_9_107(v15, v17, v18, (uint64_t)sel_inviteWithMessagesButtonTapped_);

  PeoplePickerActionBar.messagesButton.getter();
  v22 = v19;
  OUTLINED_FUNCTION_9_107(v19, v20, v21, (uint64_t)sel_messagesButtonTapped_);
  OUTLINED_FUNCTION_15_9(v22);
}

void PeoplePickerActionBar.configureViewHierarchy()()
{
  uint64_t *v0;
  char v1;

  v1 = OUTLINED_FUNCTION_73_23(*v0);
  if (v1 == 2)
  {
    PeoplePickerActionBar.configureViewForInviteFlow()();
  }
  else if (v1 != 3)
  {
    if (v1 == 4)
    {
      PeoplePickerActionBar.configureViewForSharePlayFlow()();
      return;
    }
    PeoplePickerActionBar.configureViewForAddPersonFlow(avLess:)(v1 & 1);
  }
  PeoplePickerActionBar.configureViewWithInviteWithMessagesButton()();
}

void PeoplePickerActionBar.configureViewForInviteFlow()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  Class isa;

  OUTLINED_FUNCTION_74_19();
  OUTLINED_FUNCTION_10_16(v2, sel_addSubview_);

  OUTLINED_FUNCTION_76_24();
  OUTLINED_FUNCTION_10_16(v3, sel_addSubview_);

  v51 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD64B8D0;
  PeoplePickerActionBar.videoButton.getter();
  v6 = objc_msgSend(v5, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_17();
  PeoplePickerActionBar.audioButton.getter();
  v8 = v7;
  v9 = OUTLINED_FUNCTION_54_44(v7);

  if (one-time initialization token for buttonLeftRightPadding != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_5_42(v1, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v4 + 32) = v8;
  PeoplePickerActionBar.videoButton.getter();
  v12 = OUTLINED_FUNCTION_54_44(v11);
  OUTLINED_FUNCTION_18_17();
  v14 = OUTLINED_FUNCTION_25_1(v13, sel_layoutMarginsGuide);
  v15 = OUTLINED_FUNCTION_54_44(v14);
  OUTLINED_FUNCTION_14();
  v16 = OUTLINED_FUNCTION_11_95(v1, sel_constraintLessThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v4 + 40) = v14;
  PeoplePickerActionBar.videoButton.getter();
  v18 = objc_msgSend(v17, sel_centerXAnchor);
  OUTLINED_FUNCTION_18_11();
  v20 = OUTLINED_FUNCTION_25_1(v19, sel_centerXAnchor);
  v21 = OUTLINED_FUNCTION_34_52();
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v4 + 48) = v8;
  PeoplePickerActionBar.videoButton.getter();
  v23 = objc_msgSend(v22, sel_topAnchor);
  OUTLINED_FUNCTION_18_17();
  v25 = OUTLINED_FUNCTION_25_1(v24, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_15_101();
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v4 + 56) = v8;
  PeoplePickerActionBar.videoButton.getter();
  v28 = objc_msgSend(v27, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_17();
  v30 = OUTLINED_FUNCTION_25_1(v29, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_15_101();
  OUTLINED_FUNCTION_71_3();

  *(_QWORD *)(v4 + 64) = v8;
  OUTLINED_FUNCTION_57_23();
  v33 = OUTLINED_FUNCTION_73_25(v32);
  OUTLINED_FUNCTION_18_11();
  PeoplePickerActionBar.videoButton.getter();
  v35 = v34;
  v36 = OUTLINED_FUNCTION_73_25(v34);
  OUTLINED_FUNCTION_71_3();
  v38 = OUTLINED_FUNCTION_1_21(v37, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v4 + 72) = v35;
  OUTLINED_FUNCTION_57_23();
  v40 = objc_msgSend(v39, sel_widthAnchor);
  OUTLINED_FUNCTION_18_11();
  OUTLINED_FUNCTION_57_23();
  v42 = OUTLINED_FUNCTION_73_25(v41);
  OUTLINED_FUNCTION_71_3();
  v44 = OUTLINED_FUNCTION_1_21(v43, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v4 + 80) = v35;
  OUTLINED_FUNCTION_57_23();
  v46 = objc_msgSend(v45, sel_bottomAnchor);
  OUTLINED_FUNCTION_18_11();
  v48 = OUTLINED_FUNCTION_25_1(v47, sel_bottomAnchor);
  v49 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v48, -*(double *)&static LayoutConstants.buttonBottomPadding);
  OUTLINED_FUNCTION_18_17();

  *(_QWORD *)(v4 + 88) = v35;
  v50 = specialized Array._endMutation()();
  OUTLINED_FUNCTION_59(v50, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v51, sel_activateConstraints_, isa);

}

void PeoplePickerActionBar.configureViewForAddPersonFlow(avLess:)(char a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;

  if ((a1 & 1) != 0)
    PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  else
    PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  v3 = v2;
  objc_msgSend(v1, sel_addSubview_, v2);
  v4 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v5 + 16) = xmmword_1BD644E30;
  v6 = OUTLINED_FUNCTION_123(v5, sel_leadingAnchor);
  v7 = OUTLINED_FUNCTION_2_2((uint64_t)v6, sel_layoutMarginsGuide);
  v8 = OUTLINED_FUNCTION_27_21(v7);

  if (one-time initialization token for buttonLeftRightPadding != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_11_95(v6, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 32) = v7;
  v11 = OUTLINED_FUNCTION_123(v10, sel_trailingAnchor);
  v12 = OUTLINED_FUNCTION_2_2((uint64_t)v11, sel_layoutMarginsGuide);
  v13 = OUTLINED_FUNCTION_54_44(v12);
  OUTLINED_FUNCTION_8_10();
  v14 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_constant_, &selRef_associatedAppBundleIdentifier, -*(double *)&static LayoutConstants.buttonLeftRightPadding);
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v5 + 40) = v12;
  v16 = OUTLINED_FUNCTION_123(v15, sel_centerXAnchor);
  v17 = OUTLINED_FUNCTION_2_2((uint64_t)v16, sel_centerXAnchor);
  v18 = OUTLINED_FUNCTION_1_21((uint64_t)v17, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 48) = &selRef_associatedAppBundleIdentifier;
  v20 = OUTLINED_FUNCTION_123(v19, sel_topAnchor);
  v21 = OUTLINED_FUNCTION_2_2((uint64_t)v20, sel_topAnchor);
  if (one-time initialization token for buttonTopPadding != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_11_95(v20, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v5 + 56) = &selRef_associatedAppBundleIdentifier;
  v24 = OUTLINED_FUNCTION_123(v23, sel_bottomAnchor);
  v25 = OUTLINED_FUNCTION_2_2((uint64_t)v24, sel_bottomAnchor);
  if (one-time initialization token for buttonBottomPadding != -1)
    swift_once();
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, -*(double *)&static LayoutConstants.buttonBottomPadding);
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v5 + 64) = &selRef_associatedAppBundleIdentifier;
  v27 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_59(v27, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_36_57();
  objc_msgSend(v4, sel_activateConstraints_, v28);

}

void PeoplePickerActionBar.configureViewWithInviteWithMessagesButton()()
{
  void *v0;
  void *v1;
  const char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  Class isa;
  void *v42;
  double v43;
  void *v44;

  OUTLINED_FUNCTION_258();
  v3 = v0;
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v5 = v4;
  OUTLINED_FUNCTION_48_1(v3, sel_addSubview_);

  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v7 = v6;
  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v9 = v8;
  OUTLINED_FUNCTION_48_1(v7, sel_addArrangedSubview_);

  v10 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v11 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v11 + 16) = xmmword_1BD644E30;
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v13 = OUTLINED_FUNCTION_89_25(v12);
  OUTLINED_FUNCTION_18_14();
  v15 = OUTLINED_FUNCTION_123(v14, v2 + 1638);
  v16 = objc_msgSend(v1, sel_constraintEqualToAnchor_, v15);
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v11 + 32) = v2;
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v18 = OUTLINED_FUNCTION_62_33(v17);
  OUTLINED_FUNCTION_8_20();
  v20 = OUTLINED_FUNCTION_123(v19, v2 + 1780);
  if (one-time initialization token for buttonTopPadding != -1)
    swift_once();
  v21 = OUTLINED_FUNCTION_5_42(v3, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v11 + 40) = v2;
  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v23 = OUTLINED_FUNCTION_63_29(v22);
  OUTLINED_FUNCTION_8_20();
  v25 = OUTLINED_FUNCTION_123(v24, v2 + 909);
  if (one-time initialization token for buttonBottomPadding != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_5_42(v3, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v11 + 48) = v2;
  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v28 = OUTLINED_FUNCTION_27_21(v27);
  OUTLINED_FUNCTION_8_20();
  v30 = OUTLINED_FUNCTION_123(v29, sel_layoutMarginsGuide);
  v31 = OUTLINED_FUNCTION_27_21(v30);
  OUTLINED_FUNCTION_14();
  v32 = objc_msgSend(v3, sel_constraintGreaterThanOrEqualToAnchor_, 0x1F37F0000);
  OUTLINED_FUNCTION_18_14();

  *(_QWORD *)(v11 + 56) = v30;
  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v34 = OUTLINED_FUNCTION_66_31(v33);
  OUTLINED_FUNCTION_18_14();
  v36 = OUTLINED_FUNCTION_123(v35, sel_layoutMarginsGuide);
  v37 = OUTLINED_FUNCTION_66_31(v36);
  OUTLINED_FUNCTION_10_20();
  v39 = OUTLINED_FUNCTION_1_21(v38, sel_constraintLessThanOrEqualToAnchor_);
  OUTLINED_FUNCTION_8_20();

  *(_QWORD *)(v11 + 64) = v36;
  v40 = OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_59(v40, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v10, sel_activateConstraints_, isa);

  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v44 = v42;
  LODWORD(v43) = 1148846080;
  objc_msgSend(v42, sel_setContentCompressionResistancePriority_forAxis_, 1, v43);
  OUTLINED_FUNCTION_4_21(v44);
}

#error "1BD5A5750: call analysis failed (funcsize=200)"

Swift::Void __swiftcall PeoplePickerActionBar.updateButtonsState()()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = OUTLINED_FUNCTION_73_23(*v0);
  switch(v1)
  {
    case 2:
      OUTLINED_FUNCTION_30_73();
      v3 = *(void (**)(void))(v4 + 1032);
      goto LABEL_7;
    case 3:
      OUTLINED_FUNCTION_30_73();
      v3 = *(void (**)(void))(v5 + 1040);
      goto LABEL_7;
    case 4:
      OUTLINED_FUNCTION_30_73();
      v3 = *(void (**)(void))(v2 + 1056);
LABEL_7:
      v3();
      return;
  }
  OUTLINED_FUNCTION_30_73();
  (*(void (**)(_QWORD))(v6 + 1048))(v7 & 1);
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForAudioVideoButtons()()
{
  PeoplePickerActionBar.updateStateForAudioVideoButtons()((uint64_t (*)(void))PeoplePickerActionBar.videoButton.getter, PeoplePickerActionBar.showAudioAndVideoButtons());
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForInviteWithButton()()
{
  PeoplePickerActionBar.updateStateForAudioVideoButtons()((uint64_t (*)(void))PeoplePickerActionBar.inviteWithMessagesButton.getter, PeoplePickerActionBar.showInviteWithMessagesButton());
}

void PeoplePickerActionBar.updateStateForAudioVideoButtons()(uint64_t (*a1)(void), void (*a2)(void))
{
  _QWORD *v2;
  void *v3;
  uint64_t (*v6)(void);
  char v7;
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_57_23();
  v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x180);
  v7 = (v6() & 0x101) != 0;
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v3, v7);

  v8 = (void *)a1();
  v9 = v6();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v8, BYTE2(v9) & 1);

  PeoplePickerActionBar.updateAudioButtonAction()();
  a2();
  PeoplePickerActionBar.updateAudioButtonLeadingConstraint()();
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForAddPersonButton(avLess:)(Swift::Bool avLess)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = OUTLINED_FUNCTION_26_62(*v1);
  if (avLess)
  {
    v4 = v3 & 0x100000000;
    PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  }
  else
  {
    v4 = v3 & 0x1000000;
    PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  }
  v6 = v5;
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v5, v4 != 0);

  PeoplePickerActionBar.showAddPersonButton(avLess:)(avLess);
}

Swift::Void __swiftcall PeoplePickerActionBar.updateStateForSharePlayButtons()()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;

  PeoplePickerActionBar.messagesButton.getter();
  v2 = v1;
  v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180);
  v4 = v3();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v2, BYTE4(v4) & 1);

  OUTLINED_FUNCTION_76_24();
  v5 = v3();
  PeoplePickerActionBar.updateButton(_:isEnabled:)(v2, BYTE2(v5) & 1);

  PeoplePickerActionBar.showMessagesAndVideoButtons()();
}

void PeoplePickerActionBar.updateButton(_:isEnabled:)(void *a1, char a2)
{
  uint64_t v3;

  v3 = a2 & 1;
  if (objc_msgSend(a1, sel_isEnabled) == (_DWORD)v3)
    OUTLINED_FUNCTION_0();
  else
    objc_msgSend(a1, sel_setEnabled_, v3);
}

void PeoplePickerActionBar.updateAudioButtonAction()()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;

  if ((PeoplePickerActionBar.audioCallsRequireDisambiguation()() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v1 = (void *)static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_74_19();
    OUTLINED_FUNCTION_77_3(v2, sel_removeTarget_action_forControlEvents_, v0, 0);

    OUTLINED_FUNCTION_74_19();
    PeoplePickerActionBar.audioCallDisambiguationMenu.getter();
    v4 = (void *)v3;
    OUTLINED_FUNCTION_39_4(v3, sel_setMenu_);

    PeoplePickerActionBar.audioButton.getter();
    v10 = v5;
    objc_msgSend(v5, sel_setShowsMenuAsPrimaryAction_, 1);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = (void *)static OS_os_log.conversationKit;
    static os_log_type_t.default.getter();
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_74_19();
    OUTLINED_FUNCTION_77_3(v7, sel_addTarget_action_forControlEvents_, v0, (uint64_t)sel_audioButtonTapped_);

    OUTLINED_FUNCTION_74_19();
    objc_msgSend(v8, sel_setMenu_, 0);

    PeoplePickerActionBar.audioButton.getter();
    v10 = v9;
    objc_msgSend(v9, sel_setShowsMenuAsPrimaryAction_, 0);
  }
  OUTLINED_FUNCTION_15_9(v10);
}

unint64_t PeoplePickerActionBar.audioCallsRequireDisambiguation()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  v1 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180);
  if ((v1() & 1) != 0)
    return ((unint64_t)v1() >> 8) & 1;
  else
    return 0;
}

uint64_t PeoplePickerActionBar.hideAllButtons()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_10_17();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_10_17();
  result = _CocoaArrayWrapper.endIndex.getter();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1C3B73D18](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      OUTLINED_FUNCTION_40_3(v5, sel_setHidden_);

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void PeoplePickerActionBar.showInviteWithMessagesButton()()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  PeoplePickerActionBar.hideAllButtons()();
  PeoplePickerActionBar.inviteWithMessagesButton.getter();
  v2 = v1;
  OUTLINED_FUNCTION_13_115(v1);

  if ((OUTLINED_FUNCTION_26_62(*v0) & 0x101) != 0
    && (OUTLINED_FUNCTION_30_73(), ((*(uint64_t (**)(void))(v3 + 312))() - 2) <= 2u))
  {
    PeoplePickerActionBar.audioButton.getter();
    v5 = v4;
    OUTLINED_FUNCTION_13_115(v4);

    PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    v7 = v6;
    PeoplePickerActionBar.audioButton.getter();
    v16 = v8;
    objc_msgSend(v7, sel_insertArrangedSubview_atIndex_);

    OUTLINED_FUNCTION_15_9(v16);
  }
  else
  {
    PeoplePickerActionBar.audioButton.getter();
    v10 = v9;
    OUTLINED_FUNCTION_40_3(v9, sel_setHidden_);

    PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    v12 = v11;
    PeoplePickerActionBar.audioButton.getter();
    v14 = (void *)v13;
    OUTLINED_FUNCTION_39_4(v13, sel_removeArrangedSubview_);

    PeoplePickerActionBar.audioButton.getter();
    v17 = v15;
    objc_msgSend(v0, sel_addSubview_);
    OUTLINED_FUNCTION_15_9(v17);
  }
}

void PeoplePickerActionBar.updateAudioButtonLeadingConstraint()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  id v36;

  OUTLINED_FUNCTION_258();
  v1 = v0;
  PeoplePickerActionBar.audioButton.getter();
  v3 = v2;
  v4 = objc_msgSend(v2, sel_superview);

  if (v4)
  {
    v5 = OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint;
    v6 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_audioButtonLeadingConstraint);
    if (v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_88_17();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v8 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v8 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v8 + 32) = v6;
      v9 = OUTLINED_FUNCTION_26_0();
      OUTLINED_FUNCTION_50_46(v9, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      v10 = v6;
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_27();
      objc_msgSend(v7, sel_deactivateConstraints_, isa);

    }
    PeoplePickerActionBar.audioButton.getter();
    v13 = v12;
    v14 = objc_msgSend(v12, sel_isHidden);

    PeoplePickerActionBar.inviteWithMessagesButton.getter();
    v16 = v15;
    v17 = objc_msgSend(v15, sel_isHidden);

    if ((_DWORD)v14 != v17)
    {
      OUTLINED_FUNCTION_57_23();
      v19 = objc_msgSend(v18, sel_leadingAnchor);

      v21 = objc_msgSend(OUTLINED_FUNCTION_123(v20, sel_layoutMarginsGuide), sel_leadingAnchor);
      OUTLINED_FUNCTION_18_11();
      v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, &selRef_associatedAppBundleIdentifier);

      PeoplePickerActionBar.audioButtonLeadingConstraint.setter((uint64_t)v22);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v23 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v23 + 16) = xmmword_1BD6443F0;
      v24 = *(void **)(v1 + v5);
      if (v24)
      {
        v25 = v23;
        OUTLINED_FUNCTION_88_17();
        *(_QWORD *)(v25 + 32) = v24;
        v26 = OUTLINED_FUNCTION_26_0();
        OUTLINED_FUNCTION_50_46(v26, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
        v27 = v24;
        Array._bridgeToObjectiveC()();
        v28 = OUTLINED_FUNCTION_36_57();
        OUTLINED_FUNCTION_53_47(v28, sel_activateConstraints_, v29, v30, v31, v32, v33, v34, v35);
        OUTLINED_FUNCTION_4_21(v36);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void PeoplePickerActionBar.showAudioAndVideoButtons()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  PeoplePickerActionBar.hideAllButtons()();
  PeoplePickerActionBar.audioButton.getter();
  v2 = v1;
  OUTLINED_FUNCTION_13_115(v1);

  PeoplePickerActionBar.videoButton.getter();
  v4 = v3;
  OUTLINED_FUNCTION_13_115(v3);

  PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
  v6 = v5;
  OUTLINED_FUNCTION_57_23();
  OUTLINED_FUNCTION_59(v7, &lazy cache variable for type metadata for UIStackView);
  LOBYTE(v4) = UIFocusEnvironment.contains(_:)();

  if ((v4 & 1) != 0)
  {
    PeoplePickerActionBar.inviteWithMessagesButtonStackView.getter();
    v9 = v8;
    PeoplePickerActionBar.audioButton.getter();
    v11 = v10;
    objc_msgSend(v9, sel_removeArrangedSubview_, v10);

    OUTLINED_FUNCTION_15_9(v11);
  }
}

void PeoplePickerActionBar.showAddPersonButton(avLess:)(char a1)
{
  void *v2;
  id v3;

  PeoplePickerActionBar.hideAllButtons()();
  if ((a1 & 1) != 0)
    PeoplePickerActionBar.sharePlayAddPersonButton.getter();
  else
    PeoplePickerActionBar.faceTimeAddPersonButton.getter();
  v3 = v2;
  OUTLINED_FUNCTION_18_4(v2, sel_setHidden_);

}

void PeoplePickerActionBar.showMessagesAndVideoButtons()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  PeoplePickerActionBar.hideAllButtons()();
  PeoplePickerActionBar.messagesButton.getter();
  v1 = v0;
  OUTLINED_FUNCTION_13_115(v0);

  PeoplePickerActionBar.videoButton.getter();
  v3 = v2;
  OUTLINED_FUNCTION_13_115(v2);
  OUTLINED_FUNCTION_15_9(v3);
}

uint64_t PeoplePickerActionBar.updateLinkButtonsEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = (void *)static OS_dispatch_queue.main.getter();
  v9 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled();
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_108;
  v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v0, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
}

void closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (_QWORD *)v2;
    PeoplePickerActionBar.inviteWithMessagesButton.getter();
    v5 = v4;
    objc_msgSend(v4, sel_setEnabled_, (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x168))() & 1);

  }
}

id PeoplePickerActionBar.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void PeoplePickerActionBar.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PeoplePickerActionBar.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for PeoplePickerActionBar();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void PeoplePickerActionBar.audioButtonTapped(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD *, id, _QWORD, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))() & 1) != 0
    && (v2 = (*(uint64_t (**)(void))((*v1 & *v0) + 0x150))()) != 0)
  {
    v12 = (id)v2;
    if ((*(uint64_t (**)(void))((*v1 & *v0) + 0x120))())
    {
      v4 = v3;
      ObjectType = swift_getObjectType();
      v6 = *(void (**)(_QWORD *, id, _QWORD, uint64_t, uint64_t))(v4 + 8);
      v11 = v12;
      v6(v0, v12, 0, ObjectType, v4);
      swift_unknownObjectRelease();

      v7 = v11;
    }
    else
    {
      v7 = v12;
    }

  }
  else if ((*(uint64_t (**)(void))((*v1 & *v0) + 0x120))())
  {
    v9 = v8;
    v10 = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 8))(v0, 1, 0, v10, v9);
    swift_unknownObjectRelease();
  }
}

uint64_t PeoplePickerActionBar.videoButtonTapped()()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
  if (result)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 8))(v0, 2, 0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t PeoplePickerActionBar.cancelButtonTapped(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  result = OUTLINED_FUNCTION_9_106(*v2);
  if (result)
  {
    v6 = v5;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 8))(v2, a2, 0, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t static PeoplePickerActionBar.createButtonBaseConfiguration(title:symbolName:titleLineBreakMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t KeyPath;
  id v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  id v30;
  _BYTE v31[32];

  v29 = a6;
  v25 = a5;
  v26 = a1;
  v27 = a3;
  v28 = a4;
  v6 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIButton.Configuration.Size();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DC3198], v14);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DC3048], v10);
  UIButton.Configuration.cornerStyle.setter();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v18 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v18);
  UIButton.Configuration.attributedTitle.setter();
  v19 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
  if (!__swift_getEnumTagSinglePayload(v20, 1, v18))
  {
    KeyPath = swift_getKeyPath();
    *(&v25 - 2) = MEMORY[0x1E0C80A78](KeyPath);
    swift_getKeyPath();
    v30 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0], v25, v26, v27, v28);
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
    AttributedString.subscript.setter();
  }
  v19(v31, 0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  swift_bridgeObjectRetain();
  @nonobjc UIImage.__allocating_init(systemName:)();
  UIButton.Configuration.image.setter();
  v22 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, *MEMORY[0x1E0DC4A88], 2);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  if (one-time initialization token for buttonImageTitlePadding != -1)
    swift_once();
  UIButton.Configuration.imagePadding.setter();
  if (one-time initialization token for buttonVerticalInset != -1)
    swift_once();
  if (one-time initialization token for buttonHorizontalInset != -1)
    swift_once();
  UIButton.Configuration.contentInsets.setter();
  if (one-time initialization token for activeButtonBackgroundColor != -1)
    swift_once();
  v23 = (id)static Colors.PeoplePickerViewController.activeButtonBackgroundColor;
  result = UIButton.Configuration.baseBackgroundColor.setter();
  if ((v29 & 1) == 0)
    return UIButton.Configuration.titleLineBreakMode.setter();
  return result;
}

Swift::Void __swiftcall PeoplePickerActionBar.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  objc_super v12;

  isa = a1.value.super.isa;
  v12.receiver = v1;
  v12.super_class = (Class)ObjC metadata update function for PeoplePickerActionBar();
  v3 = (objc_class *)objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v3 = (objc_class *)OUTLINED_FUNCTION_123((uint64_t)v3, sel_preferredContentSizeCategory);
    isa = v3;
  }
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (!isa)
  {

    goto LABEL_11;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
LABEL_11:
    PeoplePickerActionBar.updateFonts()();
}

uint64_t PeoplePickerActionBar.updateFonts()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  _BYTE v29[32];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit21PeoplePickerActionBar_allButtons);
  if (v7 >> 62)
    goto LABEL_19;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    v9 = v7 & 0xC000000000000001;
    v10 = 4;
    v24 = *MEMORY[0x1E0DC4AD0];
    v25 = v7;
    v27 = v7 & 0xC000000000000001;
    while (1)
    {
      v11 = v9 ? (id)MEMORY[0x1C3B73D18](v10 - 4, v7) : *(id *)(v7 + 8 * v10);
      v12 = v11;
      if (__OFADD__(v10 - 4, 1))
        break;
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        v14 = (void *)v13;
        UIButton.configuration.getter();
        v15 = type metadata accessor for UIButton.Configuration();
        if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v15))
        {
          outlined init with copy of UIButton.Configuration?((uint64_t)v6, (uint64_t)v3);
          UIButton.configuration.setter();
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UIButton.Configuration?);
        }
        else
        {
          v16 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
          v18 = v17;
          v19 = type metadata accessor for AttributedString();
          if (__swift_getEnumTagSinglePayload(v18, 1, v19))
          {
            v16(v29, 0);
            outlined init with copy of UIButton.Configuration?((uint64_t)v6, (uint64_t)v3);
            UIButton.configuration.setter();
            outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, &demangling cache variable for type metadata for UIButton.Configuration?);
          }
          else
          {
            KeyPath = swift_getKeyPath();
            MEMORY[0x1E0C80A78](KeyPath);
            *(&v23 - 2) = v21;
            v26 = swift_getKeyPath();
            v7 = v25;
            v28 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, v24);
            lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
            AttributedString.subscript.setter();
            v16(v29, 0);
            UIButton.configuration.setter();
          }
          v9 = v27;
        }
        objc_msgSend(v14, sel_setNeedsUpdateConfiguration);
      }

      if (v10 - 3 == v8)
        return swift_bridgeObjectRelease_n();
      ++v10;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

unint64_t lazy protocol witness table accessor for type RTTType and conformance RTTType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type RTTType and conformance RTTType;
  if (!lazy protocol witness table cache variable for type RTTType and conformance RTTType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for RTTType, &type metadata for RTTType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RTTType and conformance RTTType);
  }
  return result;
}

void sub_1BD5A7290()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_9_106(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5A72C0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_73_23(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5A72EC(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x140))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5A7324()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5A735C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x168))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5A7394(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x170))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t storeEnumTagSinglePayload for RTTType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD5A7420 + 4 * byte_1BD6665DB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD5A7454 + 4 * byte_1BD6665D6[v4]))();
}

uint64_t sub_1BD5A7454(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A745C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5A7464);
  return result;
}

uint64_t sub_1BD5A7470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5A7478);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD5A747C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A7484(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RTTType()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for PeoplePickerAction(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

void initializeBufferWithCopyOfBuffer for PeoplePickerAction(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)a2;
  LODWORD(v3) = -1;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v3 = *(void **)a2;
  if ((int)v3 - 1 < 0)
  {
    *(_QWORD *)a1 = v2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v4 = v2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t assignWithCopy for PeoplePickerAction(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  id v10;
  void *v11;
  id v13;

  v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
    LODWORD(v6) = -1;
  else
    v6 = *(void **)a1;
  v7 = (_DWORD)v6 - 1;
  v8 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
    v5 = *(void **)a2;
  v9 = (_DWORD)v5 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      *(_QWORD *)a1 = v8;
      v13 = v8;

      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      return a1;
    }

    goto LABEL_11;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_11:
    v11 = *(void **)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)a1 = v11;
    return a1;
  }
  *(_QWORD *)a1 = v8;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v10 = v8;
  return a1;
}

uint64_t assignWithTake for PeoplePickerAction(uint64_t a1, unint64_t *a2)
{
  void *v4;
  void *v5;
  unint64_t v6;

  v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    v5 = *(void **)a1;
  if ((int)v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (*a2 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *(_QWORD *)a1 = *a2;

      goto LABEL_9;
    }

  }
  *(_QWORD *)a1 = *a2;
LABEL_9:
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PeoplePickerAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 5;
  if (v5 >= 7)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PeoplePickerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t getEnumTag for PeoplePickerAction(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t destructiveInjectEnumTag for PeoplePickerAction(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  if (a2 > 0x7FFFFFFE)
  {
    v2 = a2 - 0x7FFFFFFF;
    *(_BYTE *)(result + 8) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2;
  }
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for PeoplePickerAction()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for ActionBarButtonsStyle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BD5A7790 + 4 * byte_1BD6665E0[v4]))();
}

uint64_t storeEnumTagSinglePayload for ActionBarButtonsStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BD5A783C + 4 * byte_1BD6665EA[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BD5A7870 + 4 * byte_1BD6665E5[v5]))();
}

uint64_t sub_1BD5A7870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A7878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5A7880);
  return result;
}

uint64_t sub_1BD5A788C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5A7894);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BD5A7898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5A78A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ActionBarButtonsStyle()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t dispatch thunk of PeoplePickerActionBarDelegate.actionBar(_:selectedAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void type metadata completion function for PeoplePickerActionBar()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UIListContentConfiguration?(319, (unint64_t *)&lazy cache variable for type metadata for UIButton.Configuration?, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UIListContentConfiguration?(319, &lazy cache variable for type metadata for DropdownViewModel.MenuItem?, (void (*)(uint64_t))type metadata accessor for DropdownViewModel.MenuItem);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PeoplePickerActionBar()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.buttonsStyle.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.handleToDisplay.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.generatingLinksEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

unint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_26_62(*v0);
  return v1 & 1 | ((unint64_t)(BYTE1(v1) & 1) << 8) | ((unint64_t)(BYTE2(v1) & 1) << 16) | ((unint64_t)(BYTE3(v1) & 1) << 24) | ((unint64_t)(BYTE4(v1) & 1) << 32) | ((unint64_t)(BYTE5(v1) & 1) << 40);
}

uint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.setter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x188))(a1 & 0x10101010101);
}

uint64_t dispatch thunk of PeoplePickerActionBar.serviceAvailability.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.__allocating_init(frame:buttonsStyle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 952))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateButtonsState()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForAudioVideoButtons()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForInviteWithButton()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForAddPersonButton(avLess:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of PeoplePickerActionBar.updateStateForSharePlayButtons()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x420))();
}

uint64_t sub_1BD5A7C7C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()()
{
  uint64_t v0;

  closure #1 in PeoplePickerActionBar.updateLinkButtonsEnabled()(v0);
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoDropdownViewModel.getter(v0);
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(a1, v1);
}

void partial apply for closure #2 in closure #1 in PeoplePickerActionBar.audioCallDisambiguationMenu.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_75_25(a1);
}

void partial apply for closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(a1, v1, 2);
}

uint64_t sub_1BD5A7CF4()
{
  return 8;
}

uint64_t sub_1BD5A7D00()
{
  return swift_release();
}

uint64_t sub_1BD5A7D08(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD5A7D1C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void OUTLINED_FUNCTION_75_25(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in PeoplePickerActionBar.audioVideoCallMenu.getter(a1, v1, 1);
}

void OUTLINED_FUNCTION_76_24()
{
  PeoplePickerActionBar.videoButton.getter();
}

id OUTLINED_FUNCTION_89_25(void *a1)
{
  return objc_msgSend(a1, sel_centerXAnchor);
}

uint64_t InCallBannerViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(char *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

id InCallBannerViewConstraintManager.hiddenGuide.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

id InCallBannerViewConstraintManager.visibleGuide.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

id InCallBannerViewConstraintManager.visibleTranslation.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 56), sel_constant);
}

id InCallBannerViewConstraintManager.visibleTranslation.setter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 56), sel_setConstant_);
}

id (*InCallBannerViewConstraintManager.visibleTranslation.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;

  v3 = *(void **)(v1 + 56);
  a1[1] = v3;
  objc_msgSend(v3, sel_constant);
  *a1 = v4;
  return InCallBannerViewConstraintManager.visibleTranslation.modify;
}

id InCallBannerViewConstraintManager.visibleTranslation.modify(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setConstant_, *(double *)a1);
}

uint64_t InCallBannerViewConstraintManager.init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)(char *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v6;
  char v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  Class isa;

  v12 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [NSLayoutConstraint]);
  lazy protocol witness table accessor for type InCallBannerState and conformance InCallBannerState();
  *(_QWORD *)(v6 + 64) = Dictionary.init(dictionaryLiteral:)();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  objc_msgSend(a3, sel_addLayoutGuide_, v13);
  *(_BYTE *)(v6 + 16) = v12;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 72) = v13;
  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = a6;
  v14 = a2;
  v15 = a3;
  v16 = v13;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = objc_msgSend(v18, sel_topAnchor);
  v21 = objc_msgSend(v17, sel_topAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v6 + 56) = v22;
  v23 = (void *)objc_opt_self();
  InCallBannerViewConstraintManager.layoutGuideConstraints()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, isa);

  return v6;
}

unint64_t lazy protocol witness table accessor for type InCallBannerState and conformance InCallBannerState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState;
  if (!lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallBannerState, &type metadata for InCallBannerState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState;
  if (!lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallBannerState, &type metadata for InCallBannerState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallBannerState and conformance InCallBannerState);
  }
  return result;
}

uint64_t InCallBannerViewConstraintManager.layoutGuideConstraints()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  char **v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  double v37;
  id v38;
  id v39;
  double v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  id v44;
  id v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD644E30;
  v3 = *(void **)(v1 + 48);
  v4 = objc_msgSend(v3, sel_leadingAnchor);
  v5 = *(void **)(v1 + 32);
  v6 = objc_msgSend(v5, sel_leadingAnchor);
  v7 = &selRef_associatedAppBundleIdentifier;
  v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v2 + 32) = v8;
  v9 = objc_msgSend(v3, sel_trailingAnchor);
  v10 = objc_msgSend(v5, sel_trailingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v2 + 40) = v11;
  v12 = *(id *)(v1 + 72);
  v13 = objc_msgSend(v12, sel_leadingAnchor);
  v14 = *(id *)(v1 + 80);
  v15 = objc_msgSend(v14, sel_leadingAnchor);
  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v2 + 48) = v16;
  v17 = objc_msgSend(v12, sel_trailingAnchor);
  v18 = objc_msgSend(v14, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(_QWORD *)(v2 + 56) = v19;
  v20 = objc_msgSend(v12, sel_heightAnchor);
  v21 = objc_msgSend(v14, sel_heightAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v2 + 64) = v22;
  specialized Array._endMutation()();
  v23 = v2;
  v56 = v2;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v24 = objc_msgSend(v14, sel_centerXAnchor);
    v25 = *(void **)(v1 + 24);
    v26 = objc_msgSend(v25, sel_centerXAnchor);
    v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);

    v28 = objc_msgSend(v14, sel_topAnchor);
    v29 = objc_msgSend(v25, sel_topAnchor);
    v14 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

    v12 = objc_msgSend(v12, sel_bottomAnchor);
    v30 = objc_msgSend(v5, sel_topAnchor);
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    v31 = static Defaults.shared;
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
    v32 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 488))(v32);
    v33 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v30, -16.0);

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v34 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!__OFADD__(v34, 3))
    {
      specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v34 + 3, 1);
      specialized Array._endMutation()();
      v35 = v27;
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_28;
  }
  v55 = v5;
  v26 = objc_msgSend(v14, sel_leadingAnchor);
  v30 = *(id *)(v1 + 24);
  v7 = (char **)objc_msgSend(v30, sel_leadingAnchor);
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
LABEL_28:
    swift_once();
  v36 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  if (static Platform.current.getter() == 2)
    v37 = -20.0;
  else
    v37 = 0.0;
  (*(void (**)(void))(*(_QWORD *)v36 + 488))();
  v54 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v7, v37);

  v38 = objc_msgSend(v14, sel_bottomAnchor);
  v39 = objc_msgSend(v30, sel_bottomAnchor);
  v40 = static Layout.MediaPip.padding.getter();
  v41 = static Defaults.shared;
  (*(void (**)(double))(*(_QWORD *)static Defaults.shared + 384))(v40);
  swift_beginAccess();
  if (static AmbientState.isPresented)
    v42 = 10.0;
  else
    v42 = 0.0;
  v43 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v41 + 488))(v43);
  v14 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, -v42);

  v44 = objc_msgSend(v12, sel_topAnchor);
  v45 = objc_msgSend(v55, sel_bottomAnchor);
  v46 = static Layout.MediaPip.padding.getter();
  v47 = static Defaults.shared;
  (*(void (**)(double))(*(_QWORD *)static Defaults.shared + 384))(v46);
  v48 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v47 + 488))(v48);
  v33 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 16.0);

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = v49 + 3;
  if (__OFADD__(v49, 3))
  {
    __break(1u);
    return result;
  }
  specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(result, 1);
  specialized Array._endMutation()();
  v35 = v54;
LABEL_19:
  v51 = v35;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v52 = v14;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v53 = v33;
  MEMORY[0x1C3B7301C]();
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v56;
}

id *InCallBannerViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InCallBannerViewConstraintManager.__deallocating_deinit()
{
  InCallBannerViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t InCallBannerViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  unsigned __int8 v2;

  v2 = *(_BYTE *)(a1 + 16);
  return InCallBannerViewConstraintManager.constraints(forState:)(&v2);
}

uint64_t InCallBannerViewConstraintManager.constraints(forState:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t i;
  uint64_t v9;
  unsigned __int8 v11[24];

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v3 + 16) && (v4 = specialized __RawDictionaryStorage.find<A>(_:)(v2), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[NSLayoutConstraint]>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD646740;
    *(_QWORD *)(inited + 32) = InCallBannerViewConstraintManager.horizontalConstraints(forState:)();
    *(_QWORD *)(inited + 40) = InCallBannerViewConstraintManager.verticalConstraints(forState:)();
    v11[0] = v2;
    *(_QWORD *)(inited + 48) = InCallBannerViewConstraintManager.layoutGuideConstraints(forState:)(v11);
    *(_QWORD *)v11 = MEMORY[0x1E0DEE9D8];
    for (i = 32; i != 56; i += 8)
    {
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
    }
    swift_setDeallocating();
    specialized _ContiguousArrayStorage.__deallocating_deinit();
    v6 = *(_QWORD *)v11;
    swift_beginAccess();
    v9 = swift_bridgeObjectRetain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v9, v2);
    swift_endAccess();
  }
  return v6;
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance InCallBannerViewConstraintManager(uint64_t a1)
{
  return InCallBannerViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(a1);
}

void sub_1BD5A89F8(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(_QWORD **)a1 + 176))();
}

uint64_t sub_1BD5A8A28(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(_QWORD **)a2 + 184))(*a1);
}

uint64_t type metadata accessor for InCallBannerViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallBannerViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.visibleTranslation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of InCallBannerViewConstraintManager.__allocating_init(layoutIdiom:containingGuide:containingView:visibleGuide:bannerView:bannerDodgingGuide:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t InCallBannerViewConstraintManager.horizontalConstraints(forState:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441C0;
  v2 = *(void **)(v0 + 40);
  v3 = objc_msgSend(v2, sel_centerXAnchor);
  v4 = *(void **)(v0 + 80);
  v5 = objc_msgSend(v4, sel_centerXAnchor);
  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v1 + 32) = v6;
  v7 = objc_msgSend(v2, sel_widthAnchor);
  v8 = objc_msgSend(v4, sel_widthAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v1 + 40) = v9;
  specialized Array._endMutation()();
  return v1;
}

uint64_t InCallBannerViewConstraintManager.verticalConstraints(forState:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD6441C0;
  v2 = *(void **)(v0 + 56);
  *(_QWORD *)(v1 + 32) = v2;
  v3 = *(void **)(v0 + 40);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_heightAnchor);
  v6 = objc_msgSend(*(id *)(v0 + 80), sel_heightAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v1 + 40) = v7;
  specialized Array._endMutation()();
  return v1;
}

uint64_t InCallBannerViewConstraintManager.layoutGuideConstraints(forState:)(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  double v3;
  double v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;

  v2 = *a1;
  if (one-time initialization token for bottomInsetAfterPadding != -1)
    swift_once();
  v3 = *(double *)&static Layout.MediaPip.bottomInsetAfterPadding;
  v4 = static Layout.MediaPip.padding.getter();
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (v2)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      if (v2 == 1)
      {
        v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_1BD6441C0;
        v6 = *(void **)(v1 + 48);
        v7 = objc_msgSend(v6, sel_topAnchor);
        v8 = objc_msgSend(*(id *)(v1 + 80), sel_bottomAnchor);
        v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, v3);
      }
      else
      {
        v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_1BD6441C0;
        v6 = *(void **)(v1 + 48);
        v7 = objc_msgSend(v6, sel_topAnchor);
        v8 = objc_msgSend(*(id *)(v1 + 80), sel_bottomAnchor);
        v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 58.0);
      }

      *(_QWORD *)(v5 + 32) = v9;
      v10 = objc_msgSend(v6, sel_bottomAnchor);
      v11 = objc_msgSend(*(id *)(v1 + 24), sel_bottomAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, v4);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1BD6441C0;
      v17 = *(void **)(v1 + 48);
      v18 = objc_msgSend(v17, sel_topAnchor);
      v19 = *(void **)(v1 + 24);
      v20 = objc_msgSend(v19, sel_topAnchor);
      v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, -v4);

      *(_QWORD *)(v5 + 32) = v21;
      v10 = objc_msgSend(v17, sel_bottomAnchor);
      v11 = objc_msgSend(v19, sel_bottomAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, v4);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441C0;
    v13 = *(void **)(v1 + 48);
    v14 = objc_msgSend(v13, sel_topAnchor);
    v15 = objc_msgSend(*(id *)(v1 + 24), sel_topAnchor);
    v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -v4);

    *(_QWORD *)(v5 + 32) = v16;
    v10 = objc_msgSend(v13, sel_bottomAnchor);
    v11 = objc_msgSend(*(id *)(v1 + 80), sel_topAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, -v3);
  }
  v22 = v12;

  *(_QWORD *)(v5 + 40) = v22;
  specialized Array._endMutation()();
  return v5;
}

BOOL static CallScreeningAnsweringState.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  return (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      && specialized static CKStateMachineContainer.== infix(_:_:)(a1[2], a2[2]);
}

uint64_t CallScreeningAnsweringState.init(prevState:callUUID:onEnterState:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t result;

  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_15();
  result = OUTLINED_FUNCTION_23_85();
  *a6 = a2;
  a6[1] = a3;
  a6[2] = a1;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t CallScreeningAnsweringState.init(prevState:onEnterState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_23_85();
  v10 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  swift_release();
  swift_release();
  result = swift_release();
  *a4 = v10;
  a4[1] = v9;
  a4[2] = v4;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t CallScreeningAnsweringState.callUUID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CallScreeningAnsweringState.stateMachineContainer.getter()
{
  return swift_retain();
}

uint64_t CallScreeningAnsweringState.onEnterState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return v1;
}

void CallScreeningAnsweringState.willExit(to:)(_QWORD *a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;

  v6 = type metadata accessor for Logger();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_38_61();
  v11 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningAnsweringState<A>, a2, v10);
  if (CallScreeningState.stateMachine.getter(a2, v11))
  {
    v29 = v7;
    v30 = v6;
    v32[0] = *v2;
    (*(void (**)(_QWORD))(*(_QWORD *)(a2 + 24) + 16))(*(_QWORD *)(a2 + 16));
    outlined retain of String((uint64_t)v32);
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_27();
    outlined retain of String((uint64_t)v32);
    swift_retain();
    OUTLINED_FUNCTION_13_8();
    OUTLINED_FUNCTION_4_27();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      v15 = OUTLINED_FUNCTION_105();
      v26 = v14;
      v16 = v15;
      v27 = OUTLINED_FUNCTION_105();
      v33 = v27;
      *(_DWORD *)v16 = 136446466;
      v24 = v16 + 4;
      v25 = v12;
      v17 = CallScreeningAnsweringState.description.getter();
      v19 = v18;
      OUTLINED_FUNCTION_37_53();
      OUTLINED_FUNCTION_27_10();
      OUTLINED_FUNCTION_14_12();
      v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v33);
      v28 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_37_53();
      OUTLINED_FUNCTION_27_10();
      OUTLINED_FUNCTION_14_12();
      *(_WORD *)(v16 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v21 = v20;
      v23 = v22;
      OUTLINED_FUNCTION_17_84();
      v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17_84();
      OUTLINED_FUNCTION_17_84();
      _os_log_impl(&dword_1BD004000, v25, (os_log_type_t)v26, "%{public}s Exiting to %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_37_53();
    OUTLINED_FUNCTION_27_10();
    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_37_53();
    OUTLINED_FUNCTION_27_10();
    OUTLINED_FUNCTION_14_12();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_4_27();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  }
  OUTLINED_FUNCTION_1_29();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningAnsweringState.enteredState()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t, char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[8];

  v3 = v0;
  v4 = type metadata accessor for Logger();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_38_61();
  v9 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningAnsweringState<A>, v3, v8);
  if (CallScreeningState.stateMachine.getter(v3, v9))
  {
    v25 = v5;
    v26 = v4;
    v10 = v1[1];
    v24 = *v1;
    v22 = (void (*)(uint64_t *, uint64_t, char *))v1[3];
    v11 = v1[4];
    (*(void (**)(_QWORD))(*(_QWORD *)(v3 + 24) + 16))(*(_QWORD *)(v3 + 16));
    v23 = v10;
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_11_8();
    v21 = v11;
    OUTLINED_FUNCTION_13_8();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = OUTLINED_FUNCTION_105();
      v20 = v2;
      v15 = (uint8_t *)v14;
      v19 = OUTLINED_FUNCTION_105();
      v27[0] = v19;
      *(_DWORD *)v15 = 136446210;
      v18[1] = v15 + 4;
      v16 = CallScreeningAnsweringState.description.getter();
      v27[7] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_41_42();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_19();
      _os_log_impl(&dword_1BD004000, v12, v13, "EnteredState %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_41_42();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_19();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
    v22(v1, v24, v7);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t CallScreeningAnsweringState.update(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v4 = type metadata accessor for Logger();
  v3[20] = v4;
  v3[21] = *(_QWORD *)(v4 - 8);
  v3[22] = OUTLINED_FUNCTION_5_55();
  v3[23] = OUTLINED_FUNCTION_5_55();
  v3[24] = OUTLINED_FUNCTION_5_55();
  v3[25] = OUTLINED_FUNCTION_5_55();
  v3[26] = OUTLINED_FUNCTION_5_55();
  if (one-time initialization token for shared != -1)
    swift_once();
  v3[27] = static CKStateMachineActor.shared;
  return swift_task_switch();
}

uint64_t CallScreeningAnsweringState.update(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  uint64_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  os_log_type_t v124;
  uint8_t *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(void);
  uint64_t v158;
  uint64_t (*v159)(_QWORD, uint64_t);
  uint64_t v160;
  uint64_t (*v161)(_QWORD, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  NSObject *v180;

  v1 = *(_QWORD *)(v0 + 152);
  v179 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 136);
  _StringGuts.grow(_:)(80);
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = 0xE000000000000000;
  v3._countAndFlagsBits = 0x617473206C6C6163;
  v3._object = (void *)0xED0000203A737574;
  String.append(_:)(v3);
  LODWORD(v176) = *(unsigned __int8 *)(v2 + 32);
  *(_BYTE *)(v0 + 272) = v176;
  _print_unlocked<A, B>(_:_:)();
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = (void *)0x80000001BD698C50;
  String.append(_:)(v4);
  v175 = *(_BYTE *)(v2 + 35);
  if ((v175 & 1) != 0)
    v5 = 1702195828;
  else
    v5 = 0x65736C6166;
  if ((*(_BYTE *)(v2 + 35) & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x657263537369202CLL;
  v8._object = (void *)0xEF203A676E696E65;
  String.append(_:)(v8);
  v174 = *(_BYTE *)(v2 + 33);
  if ((v174 & 1) != 0)
    v9 = 1702195828;
  else
    v9 = 0x65736C6166;
  if ((*(_BYTE *)(v2 + 33) & 1) != 0)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001BD698C70;
  v12._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v12);
  v13 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v0 + 88) = v13;
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  OUTLINED_FUNCTION_21_0();
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v17;
  *(_QWORD *)(v0 + 48) = v16;
  v18 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningAnsweringState<A>, v179);
  v19 = CallScreeningState.stateMachine.getter(v179, v18);
  *(_QWORD *)(v0 + 224) = v19;
  v180 = v19;
  if (v19)
  {
    v151 = v13;
    v20 = *(_QWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 56) = *(_OWORD *)*(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v20 + 16);
    v21 = *(_QWORD *)(v20 + 24);
    v23 = v22 == *(_QWORD *)(v0 + 56) && v21 == *(_QWORD *)(v0 + 64);
    if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      v172 = v0 + 56;
      v138 = v21;
      v144 = v0 + 112;
      v24 = (uint64_t *)(v0 + 128);
      v25 = *(_QWORD *)(v0 + 144);
      v26 = *(_QWORD *)(v25 + 24);
      v177 = *(_QWORD *)(v25 + 16);
      v157 = *(void (**)(void))(v26 + 16);
      v157();
      swift_bridgeObjectRetain_n();
      v27 = OUTLINED_FUNCTION_10_112();
      v28 = static os_log_type_t.default.getter();
      v29 = os_log_type_enabled(v27, v28);
      v166 = *(_QWORD *)(v0 + 168);
      v168 = *(_QWORD *)(v0 + 160);
      v170 = *(_QWORD *)(v0 + 208);
      v173 = v26;
      v127 = v0 + 128;
      if (v29)
      {
        v30 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v30 = 136446210;
        v31 = OUTLINED_FUNCTION_26_22();
        *v24 = OUTLINED_FUNCTION_5_134(v31, v32, v33, v34, v35, v36, v37, v38, v127, v22, v138, v144, v151, (uint64_t)v157, v15);
        OUTLINED_FUNCTION_29_5();
        OUTLINED_FUNCTION_16_95();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v27, v28, "Answering machine state updating with %{public}s", v30);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v44 = OUTLINED_FUNCTION_19_81();
      OUTLINED_FUNCTION_24_70(v44, v45, v46, v47, v48, v49, v50, v51, v127, v22, v138, v144, v151, (uint64_t)v157, v15, v166, v168, v170);
      v52 = *(__int128 **)(v0 + 152);
      v53 = *((_QWORD *)v52 + 4);
      v54 = OUTLINED_FUNCTION_15();
      *(_QWORD *)(v0 + 232) = v54;
      *(_QWORD *)(v54 + 16) = v177;
      *(_QWORD *)(v54 + 24) = v26;
      v63 = *v52;
      v62 = v52[1];
      *(_QWORD *)(v54 + 64) = *((_QWORD *)v52 + 4);
      *(_OWORD *)(v54 + 32) = v63;
      *(_OWORD *)(v54 + 48) = v62;
      if ((_DWORD)v176 != 1)
      {
        if ((_DWORD)v176 == 4 && (v175 & 1) != 0)
        {
          OUTLINED_FUNCTION_42_55(v54, v55, v56, v57, v58, v59, v60, v61, v128, v133, v139, v145, v152, v158, v163, v167, v169, v171, v172);
          OUTLINED_FUNCTION_11_8();
          partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
          OUTLINED_FUNCTION_21_0();
          OUTLINED_FUNCTION_28_66();
          swift_release();
          goto LABEL_38;
        }
        goto LABEL_33;
      }
      if ((v174 & 1) == 0)
      {
LABEL_33:
        v176 = v0 + 120;
        v72 = *(NSObject **)(v0 + 184);
        OUTLINED_FUNCTION_42_55(v54, v55, v56, v57, v58, v59, v60, v61, v128, v133, v139, v145, v152, v158, v163, v167, v169, v171, v172);
        OUTLINED_FUNCTION_11_8();
        v73 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
        OUTLINED_FUNCTION_3_127(v73, v74, v75, v76, v77, v78, v79, v80, v129, v134, v140, v146, v153, v159);
        OUTLINED_FUNCTION_26_22();
        Logger.logObject.getter();
        v81 = OUTLINED_FUNCTION_12_0();
        v82 = OUTLINED_FUNCTION_4_14(v81);
        v83 = *(_QWORD *)(v0 + 184);
        v84 = *(_QWORD *)(v0 + 160);
        if (v82)
        {
          v85 = (uint8_t *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_105();
          *(_DWORD *)v85 = 136446210;
          v86 = OUTLINED_FUNCTION_26_22();
          v94 = OUTLINED_FUNCTION_5_134(v86, v87, v88, v89, v90, v91, v92, v93, v130, v135, v141, v147, v154, v160, v164);
          *v148 = v94;
          OUTLINED_FUNCTION_29_5();
          OUTLINED_FUNCTION_16_95();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v72, v28, "Transitioning to ending state, recieved %{public}s", v85);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_19_81();
        ((void (*)(uint64_t, uint64_t))v24)(v83, v84);
        v95 = (_QWORD *)OUTLINED_FUNCTION_20_84(*(int **)(v173 + 32));
        *(_QWORD *)(v0 + 256) = v95;
        *v95 = v0;
        v95[1] = CallScreeningAnsweringState.update(with:);
        goto LABEL_36;
      }
      OUTLINED_FUNCTION_42_55(v54, v55, v56, v57, v58, v59, v60, v61, v128, v133, v139, v145, v152, v158, v163, v167, v169, v171, v172);
      OUTLINED_FUNCTION_11_8();
      v97 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      if (v155)
      {
        OUTLINED_FUNCTION_3_127(v97, v98, v99, v100, v101, v102, v103, v104, v131, v136, v142, v149, v155, v161);
        OUTLINED_FUNCTION_26_22();
        OUTLINED_FUNCTION_10_112();
        v105 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_4_14(v105))
        {
          v106 = (uint8_t *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_105();
          *(_DWORD *)v106 = 136446210;
          v107 = OUTLINED_FUNCTION_26_22();
          *(_QWORD *)(v0 + 120) = OUTLINED_FUNCTION_5_134(v107, v108, v109, v110, v111, v112, v113, v114, v132, v137, v143, v150, v156, v162, v165);
          OUTLINED_FUNCTION_29_5();
          OUTLINED_FUNCTION_16_95();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v53, v28, "Transitioning to screening state, recieved %{public}s", v106);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_19_81();
        OUTLINED_FUNCTION_43_60();
        v126 = (_QWORD *)OUTLINED_FUNCTION_20_84(*(int **)(v26 + 32));
        *(_QWORD *)(v0 + 240) = v126;
        *v126 = v0;
        v126[1] = CallScreeningAnsweringState.update(with:);
LABEL_36:
        __asm { BR              X8 }
      }
      v115 = *(_QWORD *)(v0 + 200);
      v116 = OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_3_127(v116, v117, v118, v119, v120, v121, v122, v123, v131, v136, v142, v149, 0, v161);
      OUTLINED_FUNCTION_10_112();
      v124 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_23_5(v124))
      {
        v125 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v125 = 0;
        _os_log_impl(&dword_1BD004000, v53, (os_log_type_t)v115, "Call is answered but the streaming token is 0, waiting for updates.", v125, 2u);
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_28_66();
      swift_release();
      OUTLINED_FUNCTION_43_60();
    }
    else
    {
      v64 = *(_QWORD *)(v0 + 176);
      v66 = *(_QWORD *)(v0 + 136);
      v65 = *(_QWORD *)(v0 + 144);
      OUTLINED_FUNCTION_21_0();
      (*(void (**)(_QWORD))(*(_QWORD *)(v65 + 24) + 16))(*(_QWORD *)(v65 + 16));
      outlined retain of AnsweringMachineCallStatus(v66);
      outlined retain of AnsweringMachineCallStatus(v66);
      OUTLINED_FUNCTION_10_112();
      v67 = OUTLINED_FUNCTION_12_0();
      v68 = OUTLINED_FUNCTION_23_5(v67);
      v69 = *(_QWORD *)(v0 + 176);
      v178 = *(_QWORD *)(v0 + 168);
      v70 = *(_QWORD *)(v0 + 160);
      if (v68)
      {
        v71 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v71 = 136446210;
        OUTLINED_FUNCTION_79_1();
        *(_QWORD *)(v0 + 104) = OUTLINED_FUNCTION_32_58();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_35_48();
        OUTLINED_FUNCTION_35_48();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v180, (os_log_type_t)v64, "Answering machine state ignoreing stateupdate for call with nonmathcing uuid %{public}s", v71);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_28_66();
      OUTLINED_FUNCTION_35_48();
      OUTLINED_FUNCTION_35_48();

      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v69, v70);
    }
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    if (one-time initialization token for answeringMachine != -1)
      swift_once();
    v39 = *(NSObject **)(v0 + 136);
    __swift_project_value_buffer(*(_QWORD *)(v0 + 160), (uint64_t)&static Logger.answeringMachine);
    outlined retain of AnsweringMachineCallStatus((uint64_t)v39);
    OUTLINED_FUNCTION_10_112();
    v40 = OUTLINED_FUNCTION_12_0();
    v41 = OUTLINED_FUNCTION_4_14(v40);
    v42 = *(_QWORD *)(v0 + 136);
    if (v41)
    {
      v43 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v43 = 136446210;
      OUTLINED_FUNCTION_79_1();
      *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_32_58();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of AnsweringMachineCallStatus(v42);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v39, (os_log_type_t)(v0 + 72), "Answering machine state ignoring stateupdate uuid %{public}s because our statemachine is nill", v43);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    outlined release of AnsweringMachineCallStatus(*(_QWORD *)(v0 + 136));

  }
LABEL_38:
  OUTLINED_FUNCTION_26_69();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_26_69();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_11_106();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_11_106();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_66_0(*(uint64_t (**)(void))(v0 + 8));
}

void closure #1 in CallScreeningAnsweringState.update(with:)(__int128 *a1)
{
  _BYTE v1[48];

  outlined init with take of CallScreening.State(a1, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_1BD5AA470()
{
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  swift_allocError();
  return swift_willThrow();
}

void sub_1BD5AA4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;

  if (a10 != *v11 || a11 != v11[1])
    _stringCompareWithSmolCheck(_:_:expecting:)();
  JUMPOUT(0x1BD5AA47CLL);
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningAnsweringState<A>(_QWORD *a1, uint64_t a2)
{
  CallScreeningAnsweringState.willExit(to:)(a1, a2);
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningAnsweringState<A>()
{
  CallScreeningAnsweringState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v6;
  _QWORD *v7;

  v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v2 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 56) = v7;
  *v7 = v3;
  v7[1] = protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>;
  return CallScreeningAnsweringState.update(with:)(a1, a2);
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningAnsweringState<A>()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t CallScreeningAnsweringState.description.getter()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease();
  v2 = *v0;
  v1 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000019;
}

uint64_t sub_1BD5AA6B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in CallScreeningAnsweringState.update(with:)(__int128 *a1)
{
  closure #1 in CallScreeningAnsweringState.update(with:)(a1);
}

uint64_t instantiation function for generic protocol witness table for CallScreeningAnsweringState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningAnsweringState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningAnsweringState()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CallScreeningAnsweringState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreeningAnsweringState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningAnsweringState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CallScreeningAnsweringState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningAnsweringState);
}

uint64_t CallScreeningActor.ActorType.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t CallScreeningActor.ActorType.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CallScreeningActor.ActorType.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_60_1();
  swift_defaultActor_initialize();
  return v0;
}

uint64_t CallScreeningActor.ActorType.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  return v0;
}

uint64_t CallScreeningActor.ActorType.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t protocol witness for Actor.unownedExecutor.getter in conformance CallScreeningActor.ActorType()
{
  return CallScreeningActor.ActorType.unownedExecutor.getter();
}

uint64_t static CallScreeningActor.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t type metadata accessor for CallScreeningActor.ActorType()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for CallScreeningActor()
{
  return &type metadata for CallScreeningActor;
}

uint64_t method lookup function for CallScreeningActor.ActorType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallScreeningActor.ActorType.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)()
{
  double v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_2_134();
  v0 = OUTLINED_FUNCTION_0_160();
  return specialized AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)(v1, v2, v3, v4, v0, v5, v6, v7);
}

uint64_t AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)()
{
  double v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_2_134();
  v0 = OUTLINED_FUNCTION_0_160();
  return specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(v1, v2, v0, v3, v4, v5, v6, v7);
}

Swift::Void __swiftcall AlternatingLabelController.start()()
{
  double *v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD aBlock[6];

  OUTLINED_FUNCTION_10_113();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_1_152();
  v4 = static OS_dispatch_queue.main.getter();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  v5 = OUTLINED_FUNCTION_0_4();
  if ((v3 & 1) != 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v0 + 264))(v5);
    v6 = (void *)objc_opt_self();
    v7 = v0[5];
    v8 = OUTLINED_FUNCTION_7_0();
    swift_weakInit();
    aBlock[4] = partial apply for closure #1 in AlternatingLabelController.start();
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
    aBlock[3] = &block_descriptor_109;
    v9 = _Block_copy(aBlock);
    swift_release();
    v10 = objc_msgSend(v6, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v9, v7);
    _Block_release(v9);
    v11 = (void *)*((_QWORD *)v0 + 2);
    *((_QWORD *)v0 + 2) = v10;

  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #1 in AlternatingLabelController.start()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in AlternatingLabelController.start()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in AlternatingLabelController.start()()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_1();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    type metadata accessor for MainActor();
    *(_QWORD *)(v0 + 64) = static MainActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  swift_release();
  AlternatingLabelController.updateLabel()();
  swift_release();
  return swift_task_switch();
}

Swift::Void __swiftcall AlternatingLabelController.stop()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;

  OUTLINED_FUNCTION_10_113();
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_1_152();
  v4 = static OS_dispatch_queue.main.getter();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_0_4();
  if ((v3 & 1) != 0)
  {
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
    v5 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = 0;

  }
  else
  {
    __break(1u);
  }
}

void AlternatingLabelController.updateLabel()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v2 >= v3 - 1)
    goto LABEL_8;
  v4 = *(_QWORD *)(v0 + 56);
  v1 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_8:
    v1 = 0;
  }
  *(_QWORD *)(v0 + 56) = v1;
  v3 = *(_QWORD *)(v0 + 48);
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(v1, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v5 = (id)MEMORY[0x1C3B73D18](v1, v3);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v5 = *(id *)(v3 + 8 * v1 + 32);
LABEL_11:
  v6 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_89_0();
  v7 = MEMORY[0x1E0C809B0];
  v8 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v13, v15);
  swift_release();
  v9 = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_89_0();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v5;
  v11 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v7, 1107296256, v14, v16);
  v12 = v5;
  swift_release();
  objc_msgSend(v6, sel_animateWithDuration_animations_completion_, v8, v11, 0.2);
  _Block_release(v11);
  _Block_release(v8);

}

void closure #2 in AlternatingLabelController.updateLabel()(char a1, uint64_t a2, void *a3)
{
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(void *, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[6];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v6 = Strong;
    v7 = (void *)MEMORY[0x1C3B752C0](Strong + 24);
    v8 = *(_QWORD *)(v6 + 32);
    swift_release();
    if (v7)
    {
      if ((a1 & 1) == 0)
        objc_msgSend(v7, sel_setAlpha_, 0.0);
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
      v11 = a3;
      v10(a3, ObjectType, v8);
      swift_beginAccess();
      v12 = swift_weakLoadStrong();
      if (v12)
      {
        v13 = v12;
        v14 = MEMORY[0x1C3B752C0](v12 + 64);
        v15 = *(_QWORD *)(v13 + 72);
        swift_release();
        if (v14)
        {
          v16 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
          swift_unknownObjectRelease();
        }
      }
      v17 = (void *)objc_opt_self();
      v18 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      aBlock[4] = partial apply for closure #1 in closure #2 in AlternatingLabelController.updateLabel();
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_15_7;
      v19 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v17, sel_animateWithDuration_animations_, v19, 0.2);
      _Block_release(v19);

    }
  }
}

void closure #1 in AlternatingLabelController.updateLabel()(double a1)
{
  uint64_t Strong;
  void *v3;

  OUTLINED_FUNCTION_1();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = (void *)MEMORY[0x1C3B752C0](Strong + 24);
    swift_release();
    if (v3)
    {
      objc_msgSend(v3, sel_setAlpha_, a1);

    }
  }
}

uint64_t AlternatingLabelController.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 24);
  swift_bridgeObjectRelease();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 64);
  return v0;
}

uint64_t AlternatingLabelController.__deallocating_deinit()
{
  AlternatingLabelController.deinit();
  return swift_deallocClassInstance();
}

uint64_t specialized AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;

  type metadata accessor for AlternatingLabelController();
  v15 = swift_allocObject();
  return specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(a1, a2, a5, a3, a4, v15, a7, a8);
}

uint64_t specialized AlternatingLabelController.init(label:timeInterval:alternatingBetween:observer:)(void *a1, unint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  id v16;

  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 56) = 0;
  *(_QWORD *)(a6 + 72) = 0;
  swift_unknownObjectWeakInit();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter();
    if (!v15)
      goto LABEL_6;
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v15)
      goto LABEL_6;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v16 = (id)MEMORY[0x1C3B73D18](0, a2);
  else
    v16 = *(id *)(a2 + 32);
  v15 = (uint64_t)v16;
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a8 + 16))(v15, a7, a8);
  *(_QWORD *)(a6 + 32) = a8;
  swift_unknownObjectWeakAssign();

  *(_QWORD *)(a6 + 48) = a2;
  *(double *)(a6 + 40) = a3;
  *(_QWORD *)(a6 + 72) = a5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return a6;
}

uint64_t sub_1BD5AB4EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in AlternatingLabelController.start()()
{
  return closure #1 in AlternatingLabelController.start()();
}

uint64_t dispatch thunk of AlternatingLabel.attributedText.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AlternatingLabel.attributedText.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for AlternatingLabelController()
{
  return objc_opt_self();
}

uint64_t method lookup function for AlternatingLabelController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AlternatingLabelController.__allocating_init(label:timeInterval:alternatingBetween:observer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of AlternatingLabelController.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AlternatingLabelController.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

void partial apply for closure #1 in AlternatingLabelController.updateLabel()()
{
  closure #1 in AlternatingLabelController.updateLabel()(0.0);
}

uint64_t sub_1BD5AB598()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #2 in AlternatingLabelController.updateLabel()(char a1)
{
  uint64_t v1;

  closure #2 in AlternatingLabelController.updateLabel()(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void partial apply for closure #1 in closure #2 in AlternatingLabelController.updateLabel()()
{
  closure #1 in AlternatingLabelController.updateLabel()(1.0);
}

uint64_t sub_1BD5AB5E8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in AlternatingLabelController.start()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in AlternatingLabelController.start()(a1, v4, v5, v6);
}

Swift::Void __swiftcall UIVisualEffectView.applyEffect(_:)(ConversationKit::PlatformEffectViewStyle a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, qword_1BD666B10[a1]);
  objc_msgSend(v1, sel_setEffect_, v2);

}

Swift::Void __swiftcall UIVisualEffectView.removeEffect()()
{
  void *v0;

  objc_msgSend(v0, sel_setEffect_, 0);
}

id static ClarityUIContactAvatar.requiredDescriptor(for:)()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = OUTLINED_FUNCTION_65(v0, sel_settingsWithContactStore_);
  v2 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_);

  v3 = objc_msgSend(v2, sel_descriptorForRequiredKeys);
  return v3;
}

ConversationKit::ClarityUIContactAvatar __swiftcall ClarityUIContactAvatar.init(cnContact:contactStore:)(CNContact cnContact, CNContactStore contactStore)
{
  uint64_t v2;
  ConversationKit::ClarityUIContactAvatar result;

  *(CNContact *)v2 = cnContact;
  *(CNContactStore *)(v2 + 8) = contactStore;
  result.contactStore = contactStore;
  result.cnContact = cnContact;
  return result;
}

id ClarityUIContactAvatar.cnContact.getter()
{
  id *v0;

  return *v0;
}

void ClarityUIContactAvatar.cnContact.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ClarityUIContactAvatar.cnContact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ClarityUIContactAvatar.contactStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void ClarityUIContactAvatar.contactStore.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*ClarityUIContactAvatar.contactStore.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ClarityUIContactAvatar.makeUIViewController(context:)()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  Class isa;

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = OUTLINED_FUNCTION_65(v2, sel_settingsWithContactStore_);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = OUTLINED_FUNCTION_1_13();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v5 + 32) = v1;
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_1_153();
  v6 = v1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setContacts_, isa);

  return v4;
}

void ClarityUIContactAvatar.updateUIViewController(_:context:)(void *a1)
{
  void **v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  Class isa;

  v3 = *v1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v6 = OUTLINED_FUNCTION_1_13();
    *(_OWORD *)(v6 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v6 + 32) = v3;
    OUTLINED_FUNCTION_3_21();
    OUTLINED_FUNCTION_1_153();
    v7 = a1;
    v8 = v3;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setContacts_, isa);

  }
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ClarityUIContactAvatar()
{
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return static UIViewControllerRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ClarityUIContactAvatar()
{
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ClarityUIContactAvatar()
{
  lazy protocol witness table accessor for type ClarityUIContactAvatar and conformance ClarityUIContactAvatar();
  UIViewControllerRepresentable.body.getter();
  __break(1u);
}

ValueMetadata *type metadata accessor for ClarityUIContactAvatar()
{
  return &type metadata for ClarityUIContactAvatar;
}

uint64_t static ViewBuilder.buildBlock<each A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    OUTLINED_FUNCTION_77();
    v9 = (_QWORD *)(v8 - v7);
    if (a2)
    {
      v10 = v5;
      v11 = v9;
      v12 = a2;
      do
      {
        v13 = *v10++;
        *v11++ = v13;
        --v12;
      }
      while (v12);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  if (a2)
  {
    v18 = (int *)(TupleTypeMetadata + 32);
    v19 = a2;
    do
    {
      if (a2 == 1)
        v20 = 0;
      else
        v20 = *v18;
      v22 = *v5++;
      v21 = v22;
      v23 = *v4++;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v17 + v20, v23);
      v18 += 4;
      --v19;
    }
    while (v19);
  }
  return TupleView.init(_:)();
}

void specialized ClarityUIShadowedContent.init(shape:isPressed:invertsInnerShadows:includesDropShadow:content:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v20 = *(int *)(v19 + 68);
  *(_QWORD *)(v18 + v20) = static Color.white.getter();
  *(_DWORD *)(v18 + v14[18]) = 1050253722;
  v21 = v14[19];
  *(_QWORD *)(v18 + v21) = static Color.black.getter();
  *(_DWORD *)(v18 + v14[20]) = 1050253722;
  *(_QWORD *)(v18 + v14[21]) = 0x4000000000000000;
  *(_QWORD *)(v18 + v14[22]) = 0x3FF0000000000000;
  *(_QWORD *)(v18 + v14[23]) = 0xBFF0000000000000;
  outlined init with copy of RoundedRectangle(a1, v18);
  *(_BYTE *)(v18 + v14[13]) = a2;
  *(_BYTE *)(v18 + v14[14]) = a3;
  *(_BYTE *)(v18 + v14[15]) = a4;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter();
  *(_QWORD *)(v8 + 8) = 0;
  *(_BYTE *)(v8 + 16) = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>);
  closure #1 in closure #1 in closure #1 in EnteredNumbersView.body.getter(a5, a6, a7, a8, v8 + *(int *)(v22 + 44));
}

uint64_t sub_1BD5ABDD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v7 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  outlined init with copy of FeatureEligibility?(v2, v4, v1);
  v16 = v4 + *(int *)(*(_QWORD *)(v6 - 168) + 36);
  *(_BYTE *)v16 = v7;
  *(_QWORD *)(v16 + 8) = v9;
  *(_QWORD *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = v15;
  *(_BYTE *)(v16 + 40) = 0;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, v1);
  v17 = static Color.clarityUIButtonBackground.getter();
  v18 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?(v4, v5, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  v19 = v5 + *(int *)(*(_QWORD *)(v6 - 128) + 36);
  *(_QWORD *)v19 = v17;
  *(_BYTE *)(v19 + 8) = v18;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v4, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>);
  outlined destroy of RoundedRectangle(*(_QWORD *)(v6 - 184));
  outlined init with take of Any?(v5, v0 + *(int *)(v3 + 64), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  outlined init with take of Any?(v0, *(_QWORD *)(v6 - 120), &demangling cache variable for type metadata for ClarityUIShadowedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Text.TruncationMode>>, Spacer)>>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, RoundedRectangle>);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void ClarityUIShadowedContent.init(shape:isPressed:invertsInnerShadows:includesDropShadow:content:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for ClarityUIShadowedContent();
}

uint64_t sub_1BD5ABF58(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = a1[17];
  *(_QWORD *)(v3 + v10) = static Color.white.getter();
  *(_DWORD *)(v3 + a1[18]) = 1050253722;
  v11 = a1[19];
  *(_QWORD *)(v3 + v11) = static Color.black.getter();
  *(_DWORD *)(v3 + a1[20]) = 1050253722;
  *(_QWORD *)(v3 + a1[21]) = 0x4000000000000000;
  *(_QWORD *)(v3 + a1[22]) = 0x3FF0000000000000;
  *(_QWORD *)(v3 + a1[23]) = 0xBFF0000000000000;
  v12 = *(_QWORD *)(v2 - 8);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, v4, v2);
  *(_BYTE *)(v3 + a1[13]) = v7;
  *(_BYTE *)(v3 + a1[14]) = *(_DWORD *)(v8 - 136);
  *(_BYTE *)(v3 + a1[15]) = *(_DWORD *)(v8 - 132);
  (*(void (**)(uint64_t))(v8 - 120))(v13);
  OUTLINED_FUNCTION_101(v4, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3 + a1[16], v5, v1);
}

void type metadata accessor for ClarityUIShadowedContent()
{
  JUMPOUT(0x1C3B74FFCLL);
}

uint64_t ClarityUIShadowedContent.shape.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_144(*(_QWORD *)(a1 + 24), a2);
}

uint64_t ClarityUIShadowedContent.shape.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_4_144(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*ClarityUIShadowedContent.shape.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.isPressed.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_11_107(*(int *)(a1 + 52));
}

uint64_t ClarityUIShadowedContent.isPressed.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_10_114(a1, *(int *)(a2 + 52));
}

uint64_t (*ClarityUIShadowedContent.isPressed.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.invertsInnerShadows.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_11_107(*(int *)(a1 + 56));
}

uint64_t ClarityUIShadowedContent.invertsInnerShadows.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_10_114(a1, *(int *)(a2 + 56));
}

uint64_t (*ClarityUIShadowedContent.invertsInnerShadows.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.includesDropShadow.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_11_107(*(int *)(a1 + 60));
}

uint64_t ClarityUIShadowedContent.includesDropShadow.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_10_114(a1, *(int *)(a2 + 60));
}

uint64_t (*ClarityUIShadowedContent.includesDropShadow.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIShadowedContent.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_144(*(_QWORD *)(a1 + 16), a2);
}

uint64_t ClarityUIShadowedContent.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_4_144(v2 + *(int *)(a2 + 64), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*ClarityUIShadowedContent.content.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIShadowedContent.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[8];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a2;
  v11 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(v11 + 8);
  v3 = type metadata accessor for _ShadowView();
  v15 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v4);
  v14 = (char *)v10 - v5;
  v10[3] = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10[2] = v8 - v7;
  v9 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8A50], v3);
  v18 = v3;
  v19 = v9;
  v12 = v3;
  v13 = v9;
  OUTLINED_FUNCTION_25_9();
}

void sub_1BD5AC218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_3_128();
  v13 = OUTLINED_FUNCTION_41_0();
  v14 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v13);
  *(_QWORD *)(v12 - 392) = type metadata accessor for _OverlayModifier();
  *(_QWORD *)(v12 - 368) = *(_QWORD *)(type metadata accessor for ModifiedContent() - 8);
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v12 - 400) = v9;
  *(_QWORD *)(v12 - 320) = type metadata accessor for _ClipEffect();
  v16 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v12 - 280) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v12 - 344) = v16;
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v12 - 240) = (char *)&a9 - v18;
  *(_QWORD *)(v12 - 288) = type metadata accessor for _BackgroundModifier();
  v19 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v12 - 328) = v19;
  *(_QWORD *)(v12 - 272) = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v20);
  *(_QWORD *)(v12 - 360) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)(v12 - 296) = (char *)&a9 - v24;
  v25 = *(_QWORD *)(v12 - 352);
  v26 = *(_QWORD *)(v12 - 376);
  v27 = *(_QWORD *)(v12 - 384);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 16))(v27, v25 + *(int *)(v11 + 64), v10, v23);
  *(_QWORD *)(v12 - 208) = v10;
  *(_QWORD *)(v12 - 200) = v9;
  v28 = *(_QWORD *)(v11 + 32);
  v29 = *(_QWORD *)(v12 - 336);
  *(_QWORD *)(v12 - 192) = v28;
  *(_QWORD *)(v12 - 184) = v29;
  *(_QWORD *)(v12 - 176) = v25;
  default argument 2 of View.frame(width:height:alignment:)(v10, v13, v28, v14);
  View.overlay<A>(alignment:content:)();
  OUTLINED_FUNCTION_101(v27, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD5AC41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 136) = v1;
  *(_QWORD *)(v5 - 128) = a1;
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v3, v5 - 136);
  default argument 1 of View.clipShape<A>(_:style:)();
  View.clipShape<A>(_:style:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 368) + 8))(v2, v3);
  static Color.clarityUIButtonShadowColor.getter();
  ClarityUIShadowedContent.shadowRadius.getter(v4);
  ClarityUIShadowedContent.shadowXOffset.getter(v4);
  ClarityUIShadowedContent.shadowYOffset.getter(v4);
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  OUTLINED_FUNCTION_36_9();
}

void sub_1BD5AC50C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 - 152) = v2;
  *(_QWORD *)(v4 - 144) = a1;
  MEMORY[0x1C3B750C8](v3, *(_QWORD *)(v4 - 344), v4 - 152);
  static Alignment.center.getter();
  v5 = v1;
  v6 = *(_QWORD *)(v4 - 312);
  v7 = *(_QWORD *)(v4 - 240);
  View.background<A>(_:alignment:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 8))(v5, v6);
  OUTLINED_FUNCTION_101(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 280) + 8));
  OUTLINED_FUNCTION_36_9();
}

uint64_t sub_1BD5AC5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v4 - 168) = v1;
  *(_QWORD *)(v4 - 160) = a1;
  v5 = *(_QWORD *)(v4 - 328);
  v6 = MEMORY[0x1C3B750C8](v3, v5, v4 - 168);
  v7 = *(_QWORD *)(v4 - 296);
  static ViewBuilder.buildExpression<A>(_:)(v2, v5, v6);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 272) + 8);
  v8(v2, v5);
  static ViewBuilder.buildBlock<A>(_:)(v7, v5, *(_QWORD *)(v4 - 248));
  return v8(v7, v5);
}

void closure #1 in ClarityUIShadowedContent.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  _BYTE v30[16];
  void (*v31)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v33 = a4;
  v32 = a2;
  v41 = a5;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v38 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v30[-v10];
  v13 = v12;
  v44 = *(_QWORD *)(v12 + 8);
  v14 = type metadata accessor for _ShadowView();
  v34 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v37 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v16);
  v42 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8A50], v14, v17);
  v46 = v14;
  v47 = v42;
  v18 = MEMORY[0x1C3B75050](0, &v46, MEMORY[0x1E0CDE1B0], 0);
  v45 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v40 = &v30[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v39 = &v30[-v21];
  MEMORY[0x1E0C80A78](v22);
  v35 = &v30[-v23];
  MEMORY[0x1E0C80A78](v24);
  v36 = &v30[-v25];
  MEMORY[0x1E0C80A78](v26);
  v28 = MEMORY[0x1E0C80A78](v27);
  v43 = &v30[-v29];
  v31 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16);
  v31(v11, a1, a3, v28);
  v46 = v32;
  v47 = a3;
  v48 = v33;
  v49 = v13;
  type metadata accessor for ClarityUIShadowedContent();
}

uint64_t sub_1BD5AC8B4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);
  float v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v9 - 416) = a1[14];
  *(_QWORD *)(v9 - 424) = a1[21];
  swift_retain();
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v9 - 440) = v11;
  v11(v1, v5);
  v12 = *(float *)(v4 + a1[18]);
  *(_DWORD *)(v9 - 264) = 1065353216;
  *(_QWORD *)(v9 - 252) = 0;
  *(_QWORD *)(v9 - 260) = 0;
  *(_QWORD *)(v9 - 244) = 0x3F80000000000000;
  *(_QWORD *)(v9 - 228) = 0;
  *(_QWORD *)(v9 - 236) = 0;
  *(_QWORD *)(v9 - 220) = 0x3F80000000000000;
  *(_QWORD *)(v9 - 204) = 0;
  *(_QWORD *)(v9 - 212) = 0;
  *(_DWORD *)(v9 - 196) = 0;
  *(float *)(v9 - 192) = -v12;
  *(float *)(v9 - 188) = v12;
  *(_QWORD *)(v9 - 448) = v6;
  v13 = *(_QWORD *)(v9 - 344);
  View._colorMatrix(_:)();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 408) + 8);
  *(_QWORD *)(v9 - 408) = v14;
  v14(v8, v6);
  *(_QWORD *)(v9 - 184) = v6;
  *(_QWORD *)(v9 - 176) = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static ViewBuilder.buildExpression<A>(_:)(v3, v2, OpaqueTypeConformance2);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 320) + 8);
  v16(v3, v2);
  v17 = *(_QWORD *)(v9 - 376);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 432))(v17, v4, v5);
  swift_retain();
  v18 = *(_QWORD *)(v9 - 384);
  Shape.fillShadow(color:radius:x:y:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 - 440))(v17, v5);
  v19 = *(float *)(v4 + a1[20]);
  v20 = v9 - 184;
  *(_QWORD *)(v20 + 12) = 0;
  *(_QWORD *)(v20 + 4) = 0;
  *(_QWORD *)(v20 + 20) = 0x3F80000000000000;
  *(_QWORD *)(v20 + 36) = 0;
  *(_QWORD *)(v20 + 28) = 0;
  *(_QWORD *)(v20 + 44) = 0x3F80000000000000;
  *(_QWORD *)(v20 + 60) = 0;
  *(_QWORD *)(v20 + 52) = 0;
  *(_DWORD *)(v9 - 184) = 1065353216;
  *(_DWORD *)(v9 - 116) = 0;
  *(float *)(v9 - 112) = -v19;
  *(float *)(v9 - 108) = v19;
  v21 = *(_QWORD *)(v9 - 400);
  v22 = *(_QWORD *)(v9 - 448);
  View._colorMatrix(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 - 408))(v18, v22);
  v23 = *(_QWORD *)(v9 - 392);
  static ViewBuilder.buildExpression<A>(_:)(v21, v2, OpaqueTypeConformance2);
  v16(v21, v2);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 320) + 16);
  v25 = *(_QWORD *)(v9 - 368);
  v26 = *(_QWORD *)(v9 - 336);
  v24(v25, v26, v2);
  *(_QWORD *)(v9 - 280) = v25;
  v27 = *(_QWORD *)(v9 - 360);
  v24(v27, v23, v2);
  *(_QWORD *)(v9 - 272) = v27;
  *(_QWORD *)(v9 - 296) = v2;
  *(_QWORD *)(v9 - 288) = v2;
  *(_QWORD *)(v9 - 312) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 - 304) = OpaqueTypeConformance2;
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t *)(v9 - 280), 2, v9 - 296);
  v16(v23, v2);
  v16(v26, v2);
  v16(v27, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v25, v2);
}

void partial apply for closure #1 in ClarityUIShadowedContent.body.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;

  closure #1 in ClarityUIShadowedContent.body.getter(v1[6], v1[2], v1[3], v1[4], a1);
}

uint64_t ClarityUIShadowedContent.shadowRadius.getter(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + *(int *)(result + 60)) == 1 && (*(_BYTE *)(v1 + *(int *)(result + 52)) & 1) == 0)
    return static ClarityUIMetrics.buttonShadowRadius.getter();
  return result;
}

uint64_t ClarityUIShadowedContent.shadowXOffset.getter(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + *(int *)(result + 60)) == 1 && (*(_BYTE *)(v1 + *(int *)(result + 52)) & 1) == 0)
    return static ClarityUIMetrics.buttonShadowOffset.getter();
  return result;
}

double ClarityUIShadowedContent.shadowYOffset.getter(uint64_t a1)
{
  uint64_t v1;
  double result;
  double v3;

  result = 0.0;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 60)) == 1 && (*(_BYTE *)(v1 + *(int *)(a1 + 52)) & 1) == 0)
  {
    static ClarityUIMetrics.buttonShadowOffset.getter();
    return v3;
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIShadowedContent<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata completion function for ClarityUIShadowedContent()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClarityUIShadowedContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _DWORD *v24;
  _DWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  v12 = ((((((((((((((v11 + ((v7 + v9 + 3) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
                  + 11) & 0xFFFFFFFFFFFFFFF8)
                + 11) & 0xFFFFFFFFFFFFFFF8)
              + 11) & 0xFFFFFFFFFFFFFFF8)
            + 11) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v13 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  v14 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || v12 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v6 + 16))(a1, a2);
    v18 = (char *)v4 + v7;
    *v18 = *((_BYTE *)a2 + v7);
    v18[1] = *((_BYTE *)a2 + v7 + 1);
    v18[2] = *((_BYTE *)a2 + v7 + 2);
    v19 = (char *)a2 + v7 + v10;
    v20 = ((unint64_t)v4 + v7 + v10 + 3) & ~v10;
    v21 = (unint64_t)(v19 + 3) & ~v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v20, v21, v5);
    v22 = (_QWORD *)((v11 + v20) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)((v11 + v21) & 0xFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = (_DWORD *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFF8);
    v25 = (_DWORD *)(((unint64_t)v23 + 11) & 0xFFFFFFFFFFFFF8);
    *v24 = *v25;
    v26 = (_QWORD *)(((unint64_t)v24 + 11) & 0xFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v25 + 11) & 0xFFFFFFFFFFFFF8);
    *v26 = *v27;
    v28 = (_DWORD *)(((unint64_t)v26 + 11) & 0xFFFFFFFFFFFFF8);
    v29 = (_DWORD *)(((unint64_t)v27 + 11) & 0xFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = (_QWORD *)(((unint64_t)v28 + 11) & 0xFFFFFFFFFFFFF8);
    v31 = (_QWORD *)(((unint64_t)v29 + 11) & 0xFFFFFFFFFFFFF8);
    *v30 = *v31;
    v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
    v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFF8);
    *v32 = *v33;
    *(_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  (*(void (**)(void))(v4 + 8))();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(_QWORD *)(v4 + 64)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 3) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (_BYTE *)(v7 + a1);
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unint64_t)&v8[v11 + 3] & ~v11;
  v13 = (unint64_t)&v9[v11 + 3] & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_DWORD *)(((unint64_t)v15 + 11) & 0xFFFFFFFFFFFFF8);
  v18 = (_DWORD *)(((unint64_t)v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 11) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = (_DWORD *)(((unint64_t)v19 + 11) & 0xFFFFFFFFFFFFF8);
  v22 = (_DWORD *)(((unint64_t)v20 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 11) & 0xFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (_BYTE *)(v7 + a1);
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unint64_t)&v8[v11 + 3] & ~v11;
  v13 = (unint64_t)&v9[v11 + 3] & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = v14 + v13;
  v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(_QWORD *)v15 = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  v15 += 11;
  swift_retain();
  swift_release();
  v18 = (v17 & 0xFFFFFFFFFFFFF8) + 11;
  *(_DWORD *)(v15 & 0xFFFFFFFFFFFFF8) = *(_DWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  v19 = (v15 & 0xFFFFFFFFFFFFF8) + 11;
  v20 = (v18 & 0xFFFFFFFFFFFFF8) + 11;
  *(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v18 & 0xFFFFFFFFFFFFF8);
  v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 11;
  swift_retain();
  swift_release();
  *(_DWORD *)(v21 & 0xFFFFFFFFFFFFF8) = *(_DWORD *)(v20 & 0xFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((v21 & 0xFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((v20 & 0xFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFF8);
  *v22 = *v23;
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  *v24 = *v25;
  *(_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t initializeWithTake for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (_BYTE *)(v7 + a1);
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unint64_t)&v8[v11 + 3] & ~v11;
  v13 = (unint64_t)&v9[v11 + 3] & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_DWORD *)(((unint64_t)v15 + 11) & 0xFFFFFFFFFFFFF8);
  v18 = (_DWORD *)(((unint64_t)v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 11) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = (_DWORD *)(((unint64_t)v19 + 11) & 0xFFFFFFFFFFFFF8);
  v22 = (_DWORD *)(((unint64_t)v20 + 11) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 11) & 0xFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 11) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ClarityUIShadowedContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (_BYTE *)(v7 + a1);
  v9 = (_BYTE *)(v7 + a2);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (unint64_t)&v8[v11 + 3] & ~v11;
  v13 = (unint64_t)&v9[v11 + 3] & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)v16;
  v16 += 11;
  *(_QWORD *)v15 = v17;
  v15 += 11;
  swift_release();
  v18 = (v16 & 0xFFFFFFFFFFFFF8) + 11;
  *(_DWORD *)(v15 & 0xFFFFFFFFFFFFF8) = *(_DWORD *)(v16 & 0xFFFFFFFFFFFFF8);
  v19 = ((v15 & 0xFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 11;
  *(_QWORD *)v19 = *(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
  v19 += 11;
  swift_release();
  *(_DWORD *)(v19 & 0xFFFFFFFFFFFFF8) = *(_DWORD *)(v20 & 0xFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((v19 & 0xFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((v20 & 0xFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  *(_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIShadowedContent(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v19;

  v6 = a3 + 16;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v6 + 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  if (v11 < a2)
  {
    if (((((((((((((((((v14 + ((v12 + v13 + 3) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)
                 + 11) & 0xFFFFFFFFFFFFFFF8)
               + 11) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v11 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BD5AD5B4 + 4 * byte_1BD666C20[v17]))();
  }
  if ((_DWORD)v8 == v11)
  {
    v10 = v8;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  }
  a1 = (a1 + v12 + v13 + 3) & ~v13;
  if ((_DWORD)v10 == v11)
    return __swift_getEnumTagSinglePayload(a1, v10, v4);
  v19 = *(_QWORD *)((v14 + a1) & 0xFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF)
    LODWORD(v19) = -1;
  return (v19 + 1);
}

void storeEnumTagSinglePayload for ClarityUIShadowedContent(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((((((((((((((*(_QWORD *)(v6 + 64)
                   + 7
                   + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80) + 3) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
                 + 11) & 0xFFFFFFFFFFFFFFF8)
               + 11) & 0xFFFFFFFFFFFFFFF8)
             + 11) & 0xFFFFFFFFFFFFFFF8)
           + 11) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v7 >= a3)
  {
    v11 = 0u;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v6 + 64)
                     + 7
                     + ((*(_DWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80) + 3) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8)
                   + 11) & 0xFFFFFFF8)
                 + 11) & 0xFFFFFFF8)
               + 11) & 0xFFFFFFF8)
             + 11) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v12 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_1BD5AD7A4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v10 + v11) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v6)
    {
      v12 = v10;
      a2 = v4;
      a3 = a4;
LABEL_5:
      __swift_storeEnumTagSinglePayload(v12, a1, a2, a3);
      return;
    }
    v12 = (v10 + v9 + v8 + 3) & v5;
    if ((_DWORD)a2 == v6)
      goto LABEL_5;
    if ((a1 & 0x80000000) != 0)
      v13 = a1 ^ 0x80000000;
    else
      v13 = (a1 - 1);
    *(_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8) = v13;
  }
}

void sub_1BD5AD84C()
{
  uint64_t v0;

  v0 = type metadata accessor for _ShadowView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8A50], v0);
  OUTLINED_FUNCTION_25_9();
}

uint64_t sub_1BD5AD8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[14];

  OUTLINED_FUNCTION_3_128();
  v1 = OUTLINED_FUNCTION_41_0();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v1);
  v2 = type metadata accessor for _OverlayModifier();
  v3 = type metadata accessor for ModifiedContent();
  v4 = type metadata accessor for _ClipEffect();
  v5 = type metadata accessor for ModifiedContent();
  v6 = type metadata accessor for _BackgroundModifier();
  v7 = type metadata accessor for ModifiedContent();
  v12[0] = v0;
  v12[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA280], v2);
  v8 = MEMORY[0x1E0CD9C20];
  v11[0] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v3, v12);
  v11[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD89F0], v4);
  v10[0] = MEMORY[0x1C3B750C8](v8, v5, v11);
  v10[1] = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB838], v6);
  return MEMORY[0x1C3B750C8](v8, v7, v10);
}

BOOL _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation3URLV_s5NeverOytTg5103_s15ConversationKit32VideoMessagePlayerViewControllerC11viewDidLoadyyFy10Foundation3URLVcACcfu_yAGcfu0_0G3Kit0ijklM0CTf1cn_n(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumTagSinglePayload;
  uint64_t v13;

  v4 = type metadata accessor for URL();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v10, &demangling cache variable for type metadata for URL?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v4);
  if (EnumTagSinglePayload != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    VideoMessagePlayerViewController.setupVideo(with:)((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  return EnumTagSinglePayload == 1;
}

void VideoMessagePlayerViewController.__allocating_init(viewModel:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  VideoMessagePlayerViewController.init(viewModel:)(v0);
  OUTLINED_FUNCTION_0();
}

uint64_t _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  taskCreateFlags(priority:isChildTask:copyTaskLocals:inheritContext:enqueueJob:addPendingGroupTaskUnconditionally:isDiscardingTask:)(a1, 0, 0, 0, 1, 0, 0);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  v5 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  return swift_task_create();
}

_QWORD *specialized VideoMessagePlayerManager.init(videoMessageViewModel:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = 0;
  v1[4] = MEMORY[0x1E0DEE9E8];
  v1[5] = 0;
  swift_unknownObjectWeakInit();
  v1[3] = a1;
  return v1;
}

uint64_t specialized VideoMessagePlayerManager.setupVideo(with:)(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  void *v6;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  v4 = a1;

  v5 = objc_msgSend(v4, sel_currentItem);
  if (v5)
  {
    v6 = v5;
    swift_retain();
    specialized VideoMessagePlayerManager.fetchDuration(from:)(v6);
    swift_release();

  }
  return specialized VideoMessagePlayerManager.setUpNotifications()();
}

_QWORD *specialized VideoMessagePlayerManager.fetchDuration(from:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, __n128))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1 + 24))
                                                                    + 0x120))(&v15, v5);
  if ((v15 & 1) == 0)
  {
    v9 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v9);
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v10;
    v11[5] = a1;
    v12 = a1;
    v13 = _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5((uint64_t)v7, (uint64_t)&async function pointer to partial apply for specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:), (uint64_t)v11);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, &demangling cache variable for type metadata for TaskPriority?);
    *(_QWORD *)(v2 + 40) = v13;
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t specialized VideoMessagePlayerManager.setUpNotifications()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NSNotificationCenter.Publisher();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = *(id *)(v0 + 16);
  if (v16)
  {
    v16 = objc_msgSend(v16, sel_currentItem);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v36 = v13;
      v19 = v3;
      v20 = v2;
      v21 = v18;
      v22 = MEMORY[0x1C3B72E00](0xD000000000000028, 0x80000001BD689150);
      v35 = v12;
      v23 = (void *)v22;
      v24 = v17;
      v33 = v15;
      v34 = v24;
      v25 = v24;
      NSNotificationCenter.publisher(for:object:)();

      v2 = v20;
      v3 = v19;

      v39 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
      v26 = type metadata accessor for NSRunLoop.SchedulerOptions();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v26);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSRunLoop);
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, (void (*)(uint64_t))MEMORY[0x1E0CB1F30]);
      lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
      v27 = v5;
      v28 = v33;
      v29 = v38;
      Publisher.receive<A>(on:options:)();
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v29);
      swift_allocObject();
      swift_weakInit();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, NSRunLoop>);
      v30 = v35;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      v31 = v28;
      v5 = v27;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v30);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      v16 = (id)swift_release();
    }
  }
  (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1 + 24)) + 0x108))(v16);
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageControlsView.PlayState>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<VideoMessageControlsView.PlayState>.Publisher);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

id specialized VideoMessagePlayerManager.setupVideo(with:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;

  v2 = type metadata accessor for URL();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for AVAsset);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  @nonobjc AVAsset.__allocating_init(url:)((uint64_t)v5, v6);
  v8 = v7;
  v9 = objc_allocWithZone(MEMORY[0x1E0C8B300]);
  @nonobjc AVPlayerItem.init(asset:automaticallyLoadedAssetKeys:)(v8, (uint64_t)&outlined read-only object #0 of specialized VideoMessagePlayerManager.setupVideo(with:));
  v11 = v10;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8B2E8]), sel_initWithPlayerItem_, v10);
  specialized VideoMessagePlayerManager.setupVideo(with:)(v12);

  return v12;
}

void specialized closure #1 in VideoMessagePlayerManager.setUpNotifications()()
{
  uint64_t Strong;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[3];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (Strong)
  {
    v2 = *(id *)(Strong + 24);
    v3 = swift_release();
    v4 = (*(unsigned __int8 (**)(uint64_t))((*v1 & *v2) + 0xF0))(v3);

    if (!v4)
      goto LABEL_5;
  }
  swift_beginAccess();
  v5 = swift_weakLoadStrong();
  if (v5)
  {
    v6 = *(id *)(v5 + 24);
    v7 = swift_release();
    v8 = (*(unsigned __int8 (**)(uint64_t))((*v1 & *v6) + 0xF0))(v7);

    if (v8 == 1)
    {
LABEL_5:
      swift_beginAccess();
      v9 = swift_weakLoadStrong();
      if (v9)
      {
        v10 = *(id *)(v9 + 24);
        swift_release();
        (*(void (**)(uint64_t))((*v1 & *v10) + 0xF8))(3);

      }
      swift_beginAccess();
      v11 = swift_weakLoadStrong();
      if (v11)
      {
        v12 = v11;
        swift_beginAccess();
        v13 = *(void **)(v12 + 16);
        if (v13)
        {
          v14 = v13;
          swift_release();
          v15 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
          v16[0] = *MEMORY[0x1E0CA2E68];
          v16[1] = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8);
          v16[2] = v15;
          objc_msgSend(v14, sel_seekToTime_, v16);

        }
        else
        {
          swift_release();
        }
      }
    }
  }
}

uint64_t specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char a1)
{
  uint64_t result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    specialized VideoMessagePlayerManager.updatePlayer(with:)(a1);
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    specialized VideoMessagePlayerManager.updateHostController(using:)(a1);
    return swift_release();
  }
  return result;
}

uint64_t specialized VideoMessagePlayerManager.updatePlayer(with:)(unsigned __int8 a1)
{
  uint64_t v1;
  id *v2;
  double v3;
  double v4;

  v2 = (id *)(v1 + 16);
  if (a1 >= 2u)
  {
    swift_beginAccess();
    if (*v2)
    {
      LODWORD(v4) = 0;
      objc_msgSend(*v2, sel_setRate_, v4);
    }
  }
  else
  {
    swift_beginAccess();
    if (*v2)
    {
      LODWORD(v3) = 1.0;
      objc_msgSend(*v2, sel_setRate_, v3);
    }
  }
  return swift_endAccess();
}

void specialized VideoMessagePlayerManager.updateHostController(using:)(char a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v3 = (void *)objc_opt_self();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = a1;
  v6[4] = partial apply for specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:);
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed () -> ();
  v6[3] = &block_descriptor_110;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_animateWithDuration_animations_, v5, 0.25);
  _Block_release(v5);
}

uint64_t specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return swift_task_switch();
}

uint64_t specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 88) = type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 96) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release();
  *(_QWORD *)(v0 + 104) = OUTLINED_FUNCTION_25_1(v1, sel_asset);
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AVAsyncProperty<AVAsset, CMTime>);
  *(_QWORD *)(v0 + 112) = static AVPartialAsyncProperty<A>.duration.getter();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:);
  OUTLINED_FUNCTION_6_13();
  return AVAsynchronousKeyValueLoading.load<A>(_:)();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(void **)(v2 + 104);
  if (v0)
    OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_19();

  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v0[19] = v0[6];
  v2 = v0[7];
  v0[16] = v1;
  v0[17] = v2;
  v0[18] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  double v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  v2 = *(_QWORD **)(v1 + 24);
  OUTLINED_FUNCTION_21_89();
  if (v3 <= 0.0)
    goto LABEL_6;
  if (one-time initialization token for timeFormatter != -1)
    swift_once();
  v4 = (id)static NSDateComponentsFormatter.timeFormatter;
  OUTLINED_FUNCTION_21_89();
  v5 = objc_msgSend(v4, sel_stringFromTimeInterval_);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;

  }
  else
  {
LABEL_6:
    OUTLINED_FUNCTION_33_69();
    v6 = static String.localizedStringWithFormat(_:_:)();
    v8 = v9;
  }
  (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x158))(v6, v8);
  return swift_task_switch();
}

Swift::String __swiftcall TimeFormattable.durationString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(void);
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String result;

  v2 = v1;
  v3 = v0;
  v4 = *(double (**)(void))(v1 + 8);
  if (v4() <= 0.0)
    goto LABEL_6;
  if (one-time initialization token for timeFormatter != -1)
    swift_once();
  v5 = (id)static NSDateComponentsFormatter.timeFormatter;
  ((void (*)(uint64_t, uint64_t))v4)(v3, v2);
  v6 = objc_msgSend(v5, sel_stringFromTimeInterval_);

  if (v6)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v9 = v8;

    v10 = v7;
    v11 = v9;
  }
  else
  {
LABEL_6:
    OUTLINED_FUNCTION_33_69();
    v10 = static String.localizedStringWithFormat(_:_:)();
  }
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

void specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  double v8;

  v3 = a1 + 48;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_navigationBar);

      v8 = 1.0;
      if (!a2)
        v8 = 0.0;
      objc_msgSend(v7, sel_setAlpha_, v8);

    }
  }
}

id @nonobjc AVPlayer.rate.setter()
{
  void *v0;

  return objc_msgSend(v0, sel_setRate_);
}

id @nonobjc AVPlayer.currentItem.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_currentItem);
}

AVPlayer __swiftcall AVPlayer.__allocating_init(playerItem:)(AVPlayerItem_optional playerItem)
{
  objc_class *v1;
  AVPlayerInternal *v2;
  AVPlayer result;

  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithPlayerItem_, playerItem.value.super.isa);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
  result._player = v2;
  result.super.isa = v1;
  return result;
}

id @nonobjc AVPlayer.seek(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD v5[3];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  return objc_msgSend(v3, sel_seekToTime_, v5);
}

uint64_t VideoMessagePlayerViewModel.showsSaveInMenu.getter()
{
  _QWORD *v0;

  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))() & 1) != 0)
    return objc_msgSend((id)objc_opt_self(), sel_isCommunicationSafetyEnabled) ^ 1;
  else
    return 0;
}

uint64_t VideoMessagePlayerViewController.controls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  _QWORD v32[2];
  char v33;
  char v34;
  uint64_t v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v32 - v6);
  v8 = (int *)type metadata accessor for VideoMessageControlsView(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v32 - v15;
  v17 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls;
  v18 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls);
  if (v18)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls);
  }
  else
  {
    v32[1] = objc_retain(*(id *)(v0
                               + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel));
    v19 = VideoMessagePlayerViewController.playerStateManager.getter();
    OUTLINED_FUNCTION_2_0();
    v20 = (void *)v19[2];
    v21 = v20;
    OUTLINED_FUNCTION_43();
    *v7 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    OUTLINED_FUNCTION_39_67();
    *v4 = swift_getKeyPath();
    OUTLINED_FUNCTION_39_67();
    *(_QWORD *)v16 = swift_getKeyPath();
    v16[8] = 0;
    outlined init with take of Environment<UserInterfaceSizeClass?>((uint64_t)v7, (uint64_t)&v16[v8[5]]);
    outlined init with take of Environment<UserInterfaceSizeClass?>((uint64_t)v4, (uint64_t)&v16[v8[6]]);
    v22 = (uint64_t *)&v16[v8[7]];
    type metadata accessor for VideoMessagePlayerViewModel(0);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
    *v22 = ObservedObject.init(wrappedValue:)();
    v22[1] = v23;
    v24 = &v16[v8[8]];
    v33 = 0;
    State.init(wrappedValue:)();
    v25 = v35;
    *v24 = v34;
    *((_QWORD *)v24 + 1) = v25;
    *(_QWORD *)&v16[v8[9]] = v20;
    *(_QWORD *)&v16[v8[10]] = 0x3FC51EB851EB851FLL;
    *(_QWORD *)&v16[v8[11]] = 0x4077C00000000000;
    outlined init with copy of VideoMessageControlsView((uint64_t)v16, (uint64_t)v13);
    v26 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<VideoMessageControlsView>));
    v27 = OUTLINED_FUNCTION_577();
    outlined init with copy of VideoMessageControlsView(v27, (uint64_t)v10);
    UIHostingController.init(rootView:)();
    v28 = OUTLINED_FUNCTION_577();
    outlined destroy of VideoMessageControlsView(v28);
    outlined destroy of VideoMessageControlsView((uint64_t)v16);
    *(_QWORD *)(v1 + v17) = v24;
    v29 = v24;
    OUTLINED_FUNCTION_134();
    v18 = 0;
  }
  v30 = v18;
  return v1;
}

_QWORD *VideoMessagePlayerViewController.playerStateManager.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager))
  {
    v2 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoMessagePlayerManager<AVPlayer>);
    OUTLINED_FUNCTION_15();
    v2 = specialized VideoMessagePlayerManager.init(videoMessageViewModel:)((uint64_t)v4);
    *(_QWORD *)(v3 + v1) = v2;
    v5 = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

char *VideoMessagePlayerViewController.init(viewModel:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer;
  v4 = objc_allocWithZone(MEMORY[0x1E0C8B330]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_9((uint64_t)v5, sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel] = a1;
  v6 = a1;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, 0, 0);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

void VideoMessagePlayerViewController.__allocating_init(coder:)()
{
  uint64_t v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void VideoMessagePlayerViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8B330]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___controls] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController____lazy_storage___playerStateManager] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  id v12;
  unsigned int v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;
  id v20[4];

  v2 = v0;
  v20[3] = *(id *)MEMORY[0x1E0C80C00];
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  v3 = objc_msgSendSuper2(&v19, sel_viewDidLoad);
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_view);
  if (!v4)
    __break(1u);
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  OUTLINED_FUNCTION_53_0(v5, sel_setBackgroundColor_);

  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v8 = *MEMORY[0x1E0C89690];
  v9 = *MEMORY[0x1E0C89760];
  v20[0] = 0;
  v10 = objc_msgSend(v7, sel_setCategory_mode_options_error_, v8, v9, 14, v20);

  v11 = v20[0];
  if (!v10)
  {
    _convertNSErrorToError(_:)();
    OUTLINED_FUNCTION_18_11();
    swift_willThrow();

  }
  v12 = OUTLINED_FUNCTION_25_1((uint64_t)v11, sel_sharedInstance);
  v20[0] = 0;
  v13 = objc_msgSend(v12, sel_setActive_withOptions_error_, 1, 0, v20);

  if (v13)
  {
    v14 = v20[0];
  }
  else
  {
    v15 = v20[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    OUTLINED_FUNCTION_48_3();
  }
  v16 = *(_QWORD **)&v2[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel];
  v17 = (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v16) + 0x180))(v14);
  outlined bridged method (mbnn) of @objc UIViewController.title.setter(v17, v18, v2);
  VideoMessagePlayerViewController.configureNavigationBar()();
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF10Foundation3URLV_s5NeverOytTg5103_s15ConversationKit32VideoMessagePlayerViewControllerC11viewDidLoadyyFy10Foundation3URLVcACcfu_yAGcfu0_0G3Kit0ijklM0CTf1cn_n((uint64_t)v16 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_videoMessageURL, v2);
  VideoMessagePlayerViewController.addControls()();
  VideoMessagePlayerViewController.playerStateManager.getter();
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_43();
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidLayoutSubviews()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  v1 = objc_msgSendSuper2(&v13, sel_viewDidLayoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer];
  v3 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  }
  else
  {
    __break(1u);
  }
}

void VideoMessagePlayerViewController.configureNavigationBar()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t inited;
  void **v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  Class v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  _QWORD v54[4];

  OUTLINED_FUNCTION_128();
  if ((OUTLINED_FUNCTION_34_53(*(uint64_t (**)(void))(v1 + 624)) & 1) != 0
    || (OUTLINED_FUNCTION_128(), (OUTLINED_FUNCTION_34_53(*(uint64_t (**)(void))(v2 + 672)) & 1) != 0))
  {
    OUTLINED_FUNCTION_128();
    v4 = (*(_QWORD *(**)(_QWORD *__return_ptr))(v3 + 480))(v54);
    OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    OUTLINED_FUNCTION_7_13(0xD000000000000015, 0x80000001BD68BFC0);

    v6 = (_QWORD *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_18_93(v6);
    swift_retain();
    v7 = (void *)OUTLINED_FUNCTION_2_135();
    v8 = VideoMessagePlayerViewModel.showsSaveInMenu.getter();
    if ((v8 & 1) != 0)
    {
      v9 = OUTLINED_FUNCTION_20_4(v8, sel_conversationKit);
      OUTLINED_FUNCTION_7_13(0xD000000000000012, 0x80000001BD68C000);

      OUTLINED_FUNCTION_15();
      swift_unknownObjectWeakInit();
      v8 = OUTLINED_FUNCTION_2_135();
    }
    v10 = OUTLINED_FUNCTION_20_4(v8, sel_conversationKit);
    OUTLINED_FUNCTION_7_13(0xD00000000000001ALL, 0x80000001BD68BFE0);

    v11 = (_QWORD *)OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_18_93(v11);
    swift_retain();
    OUTLINED_FUNCTION_2_135();
    v54[0] = MEMORY[0x1E0DEE9D8];
    v12 = v7;
    OUTLINED_FUNCTION_38_62();
  }
  OUTLINED_FUNCTION_128();
  v47 = OUTLINED_FUNCTION_34_53(*(uint64_t (**)(void))(v46 + 528));
  if ((v47 & 1) != 0)
  {
    v48 = OUTLINED_FUNCTION_20_4(v47, sel_navigationItem);
    v54[3] = type metadata accessor for VideoMessagePlayerViewController();
    v54[0] = v0;
    v49 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v50 = v0;
    v51 = @nonobjc UIBarButtonItem.init(barButtonSystemItem:target:action:)(3, v54, (uint64_t)sel_save);
    OUTLINED_FUNCTION_65(v48, sel_setRightBarButtonItem_);

  }
  v13 = OUTLINED_FUNCTION_20_4(v47, sel_navigationItem);
  objc_msgSend(v13, sel_setLargeTitleDisplayMode_, 2);

  v15 = OUTLINED_FUNCTION_20_4(v14, sel_navigationController);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_navigationBar);

    v19 = OUTLINED_FUNCTION_9(v18, sel_standardAppearance);
    OUTLINED_FUNCTION_134();
    v53 = v16;
  }
  else
  {
    v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A30]), sel_init);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  v21 = (void **)MEMORY[0x1E0DC1140];
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  v22 = *v21;
  *(_QWORD *)(inited + 32) = *v21;
  objc_opt_self();
  v23 = v22;
  v24 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_systemWhiteColor);
  v25 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  *(_QWORD *)(inited + 64) = v25;
  *(_QWORD *)(inited + 40) = v24;
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  OUTLINED_FUNCTION_24_71();
  isa = OUTLINED_FUNCTION_25_70().super.isa;
  v27 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_11(v27, sel_setTitleTextAttributes_);

  v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F8]), sel_initWithStyle_, 0);
  v28 = objc_msgSend(v52, sel_normal);
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(v29 + 32) = v23;
  v30 = OUTLINED_FUNCTION_25_1((uint64_t)v23, sel_systemWhiteColor);
  *(_QWORD *)(v29 + 64) = v25;
  *(_QWORD *)(v29 + 40) = v30;
  OUTLINED_FUNCTION_24_71();
  v31 = OUTLINED_FUNCTION_25_70().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setTitleTextAttributes_, v31);

  v33 = OUTLINED_FUNCTION_9(v32, sel_backButtonAppearance);
  v34 = objc_msgSend(v33, sel_normal);
  v35 = objc_msgSend(v33, sel_normal);
  v36 = objc_msgSend(v35, sel_backgroundImage);

  if (v36)
  {
    v38 = OUTLINED_FUNCTION_25_1(v37, sel_systemWhiteColor);
    v39 = objc_msgSend(v36, sel_imageWithTintColor_, v38);

  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v34, sel_setBackgroundImage_, v39);

  objc_msgSend(v53, sel_setButtonAppearance_, v52);
  v40 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(v53, sel_setBackButtonAppearance_, v52), sel_navigationController);
  if (v40)
  {
    v41 = OUTLINED_FUNCTION_46_40(v40);

    objc_msgSend(v41, sel_setStandardAppearance_, v53);
  }
  v42 = OUTLINED_FUNCTION_9((uint64_t)v40, sel_navigationController);
  if (v42)
  {
    v43 = OUTLINED_FUNCTION_46_40(v42);

    v45 = OUTLINED_FUNCTION_25_1(v44, sel_systemWhiteColor);
    OUTLINED_FUNCTION_65(v43, sel_setTintColor_);

  }
}

void closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    VideoMessagePlayerViewController.save()(v3);

  }
}

uint64_t VideoMessagePlayerViewController.save()(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  _QWORD v7[7];

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

  OUTLINED_FUNCTION_128();
  (*(void (**)(uint64_t))(v2 + 584))(1);
  OUTLINED_FUNCTION_128();
  (*(void (**)(_QWORD *__return_ptr))(v3 + 432))(v7);
  v4 = (void (*)(uint64_t))v7[6];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_43();
  v5 = OUTLINED_FUNCTION_19();
  v4(v5);
  return swift_release();
}

void VideoMessagePlayerViewController.setupVideo(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id *v10;
  id v11;
  uint64_t v12;

  v2 = v1;
  v3 = OUTLINED_FUNCTION_25_1(a1, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_layer);

    v6 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_avPlayerLayer);
    objc_msgSend(v5, sel_insertSublayer_atIndex_, v6, 0);

    VideoMessagePlayerViewController.playerStateManager.getter();
    v7 = OUTLINED_FUNCTION_577();
    v8 = specialized VideoMessagePlayerManager.setupVideo(with:)(v7);
    v9 = OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_50_11(v9, sel_setPlayer_);

    (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2
                                                                                        + OBJC_IVAR____TtC15ConversationKit32VideoMessagePlayerViewController_videoMessageViewModel))
                                                  + 0x120))(&v12);
    v10 = (id *)MEMORY[0x1E0C8A6E0];
    if ((_BYTE)v12)
      v10 = (id *)MEMORY[0x1E0C8A6D8];
    v11 = *v10;
    objc_msgSend(v6, sel_setVideoGravity_, v11);

  }
  else
  {
    __break(1u);
  }
}

void VideoMessagePlayerViewController.addControls()()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  Class isa;

  v2 = (void *)VideoMessagePlayerViewController.controls.getter();
  v3 = OUTLINED_FUNCTION_9_108(v2);
  OUTLINED_FUNCTION_134();
  if (!v0)
  {
    __break(1u);
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v4 = (void *)VideoMessagePlayerViewController.controls.getter();
  v5 = OUTLINED_FUNCTION_6_114(v4);
  OUTLINED_FUNCTION_134();
  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  OUTLINED_FUNCTION_53_0(v0, sel_setBackgroundColor_);

  v8 = OUTLINED_FUNCTION_25_1(v7, sel_view);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v8;
  v10 = (void *)VideoMessagePlayerViewController.controls.getter();
  v11 = OUTLINED_FUNCTION_9_108(v10);
  OUTLINED_FUNCTION_14_6();
  if (!v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_53_0(v9, sel_addSubview_);

  v12 = (void *)VideoMessagePlayerViewController.controls.getter();
  OUTLINED_FUNCTION_65(v1, sel_addChildViewController_);

  v13 = (void *)VideoMessagePlayerViewController.controls.getter();
  objc_msgSend(v13, sel_didMoveToParentViewController_, v1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v14 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v14 + 16) = xmmword_1BD644140;
  v15 = (void *)VideoMessagePlayerViewController.controls.getter();
  v16 = OUTLINED_FUNCTION_6_114(v15);
  OUTLINED_FUNCTION_19_5();
  if (!v10)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    __break(1u);
    goto LABEL_21;
  }
  v18 = OUTLINED_FUNCTION_2_2(v17, sel_leadingAnchor);
  OUTLINED_FUNCTION_14_6();
  v20 = OUTLINED_FUNCTION_25_1(v19, sel_view);
  if (!v20)
    goto LABEL_19;
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);
  OUTLINED_FUNCTION_18_11();
  v23 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v14 + 32) = v21;
  v24 = (void *)VideoMessagePlayerViewController.controls.getter();
  v25 = OUTLINED_FUNCTION_6_114(v24);
  OUTLINED_FUNCTION_19_5();
  v27 = OUTLINED_FUNCTION_2_2(v26, sel_trailingAnchor);
  OUTLINED_FUNCTION_14_6();
  v29 = OUTLINED_FUNCTION_25_1(v28, sel_view);
  if (!v29)
  {
LABEL_21:
    __break(1u);
    __break(1u);
    goto LABEL_23;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, sel_trailingAnchor);
  OUTLINED_FUNCTION_18_11();
  v32 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v14 + 40) = v30;
  v33 = (void *)VideoMessagePlayerViewController.controls.getter();
  v34 = OUTLINED_FUNCTION_6_114(v33);
  OUTLINED_FUNCTION_19_5();
  v36 = OUTLINED_FUNCTION_2_2(v35, sel_topAnchor);
  OUTLINED_FUNCTION_14_6();
  v38 = OUTLINED_FUNCTION_25_1(v37, sel_view);
  if (!v38)
  {
LABEL_23:
    __break(1u);
    __break(1u);
    goto LABEL_25;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v41 = OUTLINED_FUNCTION_7_35();
  OUTLINED_FUNCTION_19_5();

  *(_QWORD *)(v14 + 48) = v39;
  v42 = (void *)VideoMessagePlayerViewController.controls.getter();
  v43 = OUTLINED_FUNCTION_9_108(v42);
  OUTLINED_FUNCTION_14_6();
  v45 = OUTLINED_FUNCTION_9(v44, sel_bottomAnchor);
  OUTLINED_FUNCTION_19_5();
  v47 = OUTLINED_FUNCTION_25_1(v46, sel_view);
  if (v47)
  {
    v48 = v47;
    v49 = (void *)objc_opt_self();
    v50 = OUTLINED_FUNCTION_25_1((uint64_t)v49, sel_bottomAnchor);

    v51 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v50);
    *(_QWORD *)(v14 + 56) = v51;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v49, sel_activateConstraints_, isa);

    return;
  }
LABEL_25:
  __break(1u);
}

Swift::Void __swiftcall VideoMessagePlayerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  objc_super v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  objc_msgSendSuper2(&v7, sel_viewDidDisappear_, a1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v6 = 0;
  v4 = objc_msgSend(v3, sel_setActive_withOptions_error_, 0, 0, &v6);

  v5 = v6;
  if (!v4)
  {
    _convertNSErrorToError(_:)();
    OUTLINED_FUNCTION_49_5();
    swift_willThrow();
    OUTLINED_FUNCTION_48_3();
  }
}

id VideoMessagePlayerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  id v6;

  v4 = v3;
  if (a2)
  {
    MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_577();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v3, a3);

  return v6;
}

void VideoMessagePlayerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VideoMessagePlayerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoMessagePlayerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void one-time initialization function for timeFormatter()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setZeroFormattingBehavior_, 0x10000);
  objc_msgSend(v0, sel_setAllowedUnits_, 192);
  static NSDateComponentsFormatter.timeFormatter = (uint64_t)v0;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for VideoMessagePlayerViewController()
{
  return objc_opt_self();
}

double Int.duration.getter(uint64_t a1)
{
  return (double)a1;
}

double protocol witness for TimeFormattable.duration.getter in conformance Int()
{
  uint64_t *v0;

  return Int.duration.getter(*v0);
}

uint64_t protocol witness for TimeFormattable.duration.getter in conformance CMTime()
{
  _QWORD *v0;

  return CMTime.duration.getter(*v0, v0[1], v0[2]);
}

uint64_t taskCreateFlags(priority:isChildTask:copyTaskLocals:inheritContext:enqueueJob:addPendingGroupTaskUnconditionally:isDiscardingTask:)(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  unsigned __int8 v19;
  uint64_t v20;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v16, &demangling cache variable for type metadata for TaskPriority?);
  v17 = type metadata accessor for TaskPriority();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v16, &demangling cache variable for type metadata for TaskPriority?);
    result = 0;
    if ((a2 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if ((a3 & 1) != 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if ((a3 & 1) != 0)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if ((a5 & 1) != 0)
LABEL_6:
    result |= 0x1000uLL;
LABEL_7:
  if ((a6 & 1) != 0)
    result |= 0x2000uLL;
  if ((a7 & 1) != 0)
    return result | 0x4000;
  return result;
}

uint64_t method lookup function for VideoMessagePlayerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VideoMessagePlayerViewController.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TimeFormattable.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BD5B0A4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD5B0A70()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = partial apply for closure #2 in CallScreeningEndingState.enteredState();
  v6 = OUTLINED_FUNCTION_6_13();
  return specialized closure #1 in VideoMessagePlayerManager.fetchDuration(from:)(v6, v7, v2, v4, v3);
}

uint64_t sub_1BD5B0B14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(*a1);
}

uint64_t partial apply for specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(char *a1)
{
  return specialized closure #2 in VideoMessagePlayerManager.setUpNotifications()(a1);
}

void partial apply for specialized closure #1 in VideoMessagePlayerManager.setUpNotifications()()
{
  specialized closure #1 in VideoMessagePlayerManager.setUpNotifications()();
}

uint64_t sub_1BD5B0B50()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)()
{
  uint64_t v0;

  specialized closure #1 in VideoMessagePlayerManager.updateHostController(using:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t outlined init with take of Environment<UserInterfaceSizeClass?>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of VideoMessageControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoMessageControlsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of VideoMessageControlsView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoMessageControlsView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in VideoMessagePlayerViewController.configureNavigationBar()()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 32))();
  OUTLINED_FUNCTION_0();
}

uint64_t objectdestroy_24Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD5B0CB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in VideoMessagePlayerViewController.configureNavigationBar()(a1, v1);
}

uint64_t OUTLINED_FUNCTION_39_67()
{
  return swift_storeEnumTagMultiPayload();
}

void ConversationControlsJoinCountdownActionController.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  ConversationControlsJoinCountdownActionController.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for CountdownVoucher.countdownObject : CountdownVoucher@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of CountdownVoucher(a1, (uint64_t)v6);
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *((_QWORD *)v6 + 1);
  result = outlined destroy of CountdownVoucher((uint64_t)v6);
  *a2 = v7;
  a2[1] = v8;
  return result;
}

uint64_t CountdownVoucher.countdownObject.getter()
{
  uint64_t v0;

  return MEMORY[0x1C3B752C0](v0);
}

uint64_t CountdownVoucher.countdownObject.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_0_101();
}

void CountdownVoucher.countdownObject.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  v3 = MEMORY[0x1C3B752C0](v1);
  v4 = *(_QWORD *)(v1 + 8);
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_0();
}

uint64_t CountdownVoucher.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_154();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void CountdownVoucher.hash(into:)()
{
  OUTLINED_FUNCTION_1_154();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  OUTLINED_FUNCTION_18();
}

uint64_t static CountdownVoucher.== infix(_:_:)()
{
  type metadata accessor for CountdownVoucher(0);
  return static UUID.== infix(_:_:)();
}

void CountdownVoucher.hashValue.getter()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_1_154();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_90();
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void CountdownVoucher.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for CountdownVoucher(0);
  UUID.init()();
  OUTLINED_FUNCTION_0();
}

void CountdownVoucher.init(countdownObject:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = a1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  type metadata accessor for CountdownVoucher(0);
  UUID.init()();
  OUTLINED_FUNCTION_0();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance CountdownVoucher()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  OUTLINED_FUNCTION_90();
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

uint64_t key path setter for ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart : ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 104))(v6);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(uint64_t a1@<X8>)
{
  ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(&OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart, a1);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(uint64_t a1)
{
  ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(a1, &OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded : ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 128))(v6);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.getter(uint64_t a1@<X8>)
{
  ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(&OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded, a1);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  OUTLINED_FUNCTION_1();
  outlined init with copy of Date?(v4, a2);
  OUTLINED_FUNCTION_32();
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.setter(uint64_t a1)
{
  ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(a1, &OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a2;
  OUTLINED_FUNCTION_60_0();
  outlined assign with take of Date?(a1, v4);
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_0(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart);
  OUTLINED_FUNCTION_25_0(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationControlsJoinCountdownActionController.CountdownInfo.__deallocating_deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_0(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart);
  OUTLINED_FUNCTION_25_0(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  return swift_deallocClassInstance();
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  v1 = v0
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_8_2(v1);
  OUTLINED_FUNCTION_8_2(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCountdownActionController.CountdownInfo.init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_8_2(v1);
  OUTLINED_FUNCTION_8_2(v0+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCountdownActionController.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9E8];
  type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(0);
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 48) = 0;
  v1 = swift_allocObject();
  v2 = v1
     + OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownStart;
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_51_1(v2);
  OUTLINED_FUNCTION_51_1(v1+ OBJC_IVAR____TtCC15ConversationKit49ConversationControlsJoinCountdownActionController13CountdownInfo_lastCountdownEnded);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD318]), sel_initWithObject_, v1);
  OUTLINED_FUNCTION_19();
  *(_QWORD *)(v0 + 16) = v3;
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for CountdownVoucher(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CountdownVoucher);
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ConversationControlsJoinCountdownActionController.CountdownInfo);
}

void ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];

  v4 = v3;
  v8 = OUTLINED_FUNCTION_35_49();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v27 - v13;
  *(_QWORD *)((char *)&v27[1] - v13) = a2;
  swift_unknownObjectWeakInit();
  UUID.init()();
  v15 = *(void **)(v4 + 16);
  outlined init with copy of CountdownVoucher((uint64_t)v14, (uint64_t)v11);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v4;
  outlined init with take of CountdownVoucher((uint64_t)v11, v17 + v16);
  v18 = (_QWORD *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v18 = a1;
  v18[1] = a2;
  v19 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v19 + 16) = partial apply for closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:);
  *(_QWORD *)(v19 + 24) = v17;
  v27[4] = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
  v27[5] = v19;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 1107296256;
  v20 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ());
  v21 = v15;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_performWhileLocked_, v20);

  _Block_release(v20);
  LOBYTE(a1) = OUTLINED_FUNCTION_37_55();
  swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else if (one-time initialization token for conversationControls == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)&static Logger.conversationControls);
  v23 = (void *)Logger.logObject.getter();
  v24 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_4_14(v24))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_9_109(&dword_1BD004000, v25, v26, "Generating countdown voucher");
    OUTLINED_FUNCTION_25_71();
  }

  outlined init with take of CountdownVoucher((uint64_t)v14, a3);
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  void (*v29)(char *, uint64_t);
  uint64_t ObjectType;
  double v31;
  _QWORD v33[2];
  uint64_t v34;

  v33[1] = a4;
  v34 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date();
  v33[0] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v33 - v15;
  v17 = type metadata accessor for CountdownVoucher(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v33 - v21;
  if (one-time initialization token for shared != -1)
    swift_once();
  v23 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1048))();
  outlined init with copy of CountdownVoucher(a3, (uint64_t)v19);
  swift_beginAccess();
  specialized Set._Variant.insert(_:)();
  outlined destroy of CountdownVoucher((uint64_t)v22);
  swift_endAccess();
  if ((ConversationControlsJoinCountdownActionController.isInCountdown(_:)(a1) & 1) != 0)
  {
    (*(void (**)(void))(*(_QWORD *)a1 + 96))();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      v24 = v33[0];
      v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v33[0] + 32))(v16, v10, v11);
      v26 = (*(double (**)(uint64_t))(*(_QWORD *)static Defaults.shared + 1048))(v25);
      Date.init()();
      Date.timeIntervalSince(_:)();
      v28 = v27;
      v29 = *(void (**)(char *, uint64_t))(v24 + 8);
      v29(v13, v11);
      v29(v16, v11);
      v23 = v26 - v28;
    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)a2 + 272))();
  }
  ObjectType = swift_getObjectType();
  v31 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1048))();
  return (*(uint64_t (**)(uint64_t, double, double))(v34 + 8))(ObjectType, v23, v31);
}

uint64_t sub_1BD5B1C1C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35_49();
  swift_release();
  swift_unknownObjectWeakDestroy();
  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_17_1(v0);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_35_49() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return closure #1 in ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)(a1, *(_QWORD *)(v1 + 16), v1 + v4, *v5, v5[1]);
}

uint64_t sub_1BD5B1D08()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t ConversationControlsJoinCountdownActionController.invalidate(voucher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CountdownVoucher?);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = (void *)Logger.logObject.getter();
  v4 = static os_log_type_t.debug.getter();
  if (OUTLINED_FUNCTION_4_14(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_9_109(&dword_1BD004000, v5, v6, "Invalidating countdown voucher");
    OUTLINED_FUNCTION_25_71();
  }

  OUTLINED_FUNCTION_60_0();
  specialized Set._Variant.remove(_:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v0, &demangling cache variable for type metadata for CountdownVoucher?);
  return swift_endAccess();
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  objc_msgSend(*(id *)(v0 + 32), sel_invalidate);
  OUTLINED_FUNCTION_29_75();
  v1 = *(void **)(v0 + 16);
  v2 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> (), MEMORY[0x1E0C809B0], 1107296256, v4, v5);
  v3 = v1;
  swift_release();
  objc_msgSend(v3, sel_performWhileLocked_, v2);

  _Block_release(v2);
  if ((OUTLINED_FUNCTION_37_55() & 1) != 0)
    __break(1u);
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  v5 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  return (*(uint64_t (**)(char *))(*(_QWORD *)a1 + 128))(v4);
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;

  v2 = v0;
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v5 = type metadata accessor for DispatchQoS();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 48) & 1) == 0)
  {
    *(_BYTE *)(v2 + 48) = 1;
    type metadata accessor for OS_dispatch_queue();
    v18 = v4;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF530], v9);
    v17 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v13 = OUTLINED_FUNCTION_15();
    swift_weakInit();
    v22 = partial apply for closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown();
    v23 = v13;
    v20 = MEMORY[0x1E0C809B0];
    v21 = 1107296256;
    v14 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed @Sendable () -> ());
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v19 = MEMORY[0x1E0DEE9D8];
    _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v15 = (void *)v17;
    MEMORY[0x1C3B7361C](0, v8, v1, v14);
    _Block_release(v14);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    OUTLINED_FUNCTION_19();
  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  id v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  id v29;
  id v30;
  unsigned int v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id aBlock[11];

  aBlock[10] = *(id *)MEMORY[0x1E0C80C00];
  v0 = type metadata accessor for DispatchWorkItemFlags();
  v53 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS();
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v50 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v50 = v0;
    v54 = v18;
    v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v22 = outlined bridged method (mbbnn) of @objc NSBundle.url(forResource:withExtension:)(0x776F64746E756F63, 0xEE00746165622D6ELL, 6709603, 0xE300000000000000, v21);

    if (v22)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23(v8, v15, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
      {
        v23(v54, v8, v9);
        v24 = (void *)objc_opt_self();
        v25 = objc_msgSend(v24, sel_sharedInstance);
        v26 = *MEMORY[0x1E0C89690];
        v27 = *MEMORY[0x1E0C89748];
        aBlock[0] = 0;
        v28 = objc_msgSend(v25, sel_setCategory_mode_options_error_, v26, v27, 2, aBlock);

        if (v28)
        {
          v29 = aBlock[0];
          v30 = objc_msgSend(v24, sel_sharedInstance);
          aBlock[0] = 0;
          v31 = objc_msgSend(v30, sel_setActive_withOptions_error_, 1, 0, aBlock);

          v32 = aBlock[0];
          if (v31)
          {
            (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v54, v9);
            objc_allocWithZone(MEMORY[0x1E0C89AC8]);
            v33 = v32;
            v34 = @nonobjc AVAudioPlayer.init(contentsOf:)((uint64_t)v12);
            v43 = *(void **)(v20 + 40);
            *(_QWORD *)(v20 + 40) = v34;

            v45 = *(void **)(v20 + 40);
            if (v45)
            {
              LODWORD(v44) = 1.0;
              objc_msgSend(v45, sel_setVolume_, v44);
            }
            type metadata accessor for OS_dispatch_queue();
            v46 = (void *)static OS_dispatch_queue.main.getter();
            v47 = (void *)swift_allocObject();
            swift_weakInit();
            aBlock[4] = partial apply for closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown();
            aBlock[5] = v47;
            aBlock[0] = (id)MEMORY[0x1E0C809B0];
            aBlock[1] = (id)1107296256;
            aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
            aBlock[3] = &block_descriptor_37_4;
            v48 = _Block_copy(aBlock);
            swift_release();
            static DispatchQoS.unspecified.getter();
            aBlock[0] = (id)MEMORY[0x1E0DEE9D8];
            _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
            lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
            v49 = v50;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            MEMORY[0x1C3B7361C](0, v5, v2, v48);
            _Block_release(v48);
            swift_release();

            (*(void (**)(char *, uint64_t))(v53 + 8))(v2, v49);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v52);
            return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v54, v9);
          }
          v37 = aBlock[0];
          v36 = (void *)_convertNSErrorToError(_:)();

        }
        else
        {
          v35 = aBlock[0];
          v36 = (void *)_convertNSErrorToError(_:)();

        }
        swift_willThrow();
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_1BD6441D0;
        aBlock[0] = v36;
        v39 = v36;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v40 = String.init<A>(reflecting:)();
        v42 = v41;
        *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v38 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v38 + 32) = v40;
        *(_QWORD *)(v38 + 40) = v42;
        os_log(_:dso:log:type:_:)();
        swift_release();
        swift_bridgeObjectRelease();

        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v54, v9);
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for URL?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 280))(result);
    v2 = *(void **)(v1 + 16);
    aBlock[4] = specialized thunk for @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ();
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ();
    aBlock[3] = &block_descriptor_40_2;
    v3 = _Block_copy(aBlock);
    v4 = v2;
    swift_release();
    objc_msgSend(v4, sel_performWhileLocked_, v3);
    swift_release();

    _Block_release(v3);
    result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  v5 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  return (*(uint64_t (**)(char *))(*(_QWORD *)a1 + 104))(v4);
}

Swift::Void __swiftcall ConversationControlsJoinCountdownActionController.startCountingDown()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  objc_msgSend(*(id *)(v0 + 32), sel_invalidate);
  OUTLINED_FUNCTION_29_75();
  v2 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3898]), sel_initWithStyle_, 1);
  objc_msgSend(v3, sel_impactOccurred);
  OUTLINED_FUNCTION_1();
  v4 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(v6 + 40);
    do
    {
      v9 = *v8;
      ObjectType = swift_getObjectType();
      v11 = *(void (**)(uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v11(ObjectType, v9);
      swift_unknownObjectRelease();
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v12 = (void *)objc_opt_self();
  v13 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  v14 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v2;
  v15 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), MEMORY[0x1E0C809B0], 1107296256, v18, v19);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v12, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v15, 1.0);
  _Block_release(v15);
  v17 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v16;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_19();

}

uint64_t closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t *v7;
  void *v8;
  void *v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t);
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = (_QWORD *)result;
    v7 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    if (__OFADD__(*v7, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v7;
      v8 = (void *)v6[2];
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = partial apply for closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown();
      *(_QWORD *)(v3 + 24) = v6;
      aBlock[4] = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
      aBlock[5] = v3;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed ConversationControlsJoinCountdownActionController.CountdownInfo) -> ();
      aBlock[3] = &block_descriptor_33_4;
      v9 = _Block_copy(aBlock);
      v10 = v8;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v10, sel_performWhileLocked_, v9);

      _Block_release(v9);
      LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v9 & 1) == 0)
      {
        swift_beginAccess();
        v3 = *v7;
        if (one-time initialization token for shared == -1)
          goto LABEL_5;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
LABEL_5:
    v11 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1048))();
    if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) != 0)
    {
      if (v11 > -9.22337204e18)
      {
        if (v11 < 9.22337204e18)
        {
          if (v3 < (uint64_t)v11)
            return swift_release_n();
          (*(void (**)(void))(*v6 + 264))();
          swift_beginAccess();
          v12 = swift_bridgeObjectRetain();
          specialized Sequence.compactMap<A>(_:)(v12);
          v14 = v13;
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v14 + 16);
          if (v15)
          {
            swift_bridgeObjectRetain();
            v16 = (uint64_t *)(v14 + 40);
            do
            {
              v17 = *v16;
              ObjectType = swift_getObjectType();
              v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
              swift_unknownObjectRetain();
              v19(ObjectType, v17);
              swift_unknownObjectRelease();
              v16 += 2;
              --v15;
            }
            while (v15);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (one-time initialization token for conversationKit == -1)
          {
LABEL_14:
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            return swift_release_n();
          }
LABEL_23:
          swift_once();
          goto LABEL_14;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  return result;
}

uint64_t closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t);

  objc_msgSend(*(id *)(a2 + 40), sel_play);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
      swift_unknownObjectRetain();
      v9(ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t ConversationControlsJoinCountdownActionController.isInCountdown(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, char *, uint64_t);
  char v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  int EnumTagSinglePayload;
  uint64_t v40;
  uint64_t result;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_79();
  v53 = v3 - v4;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v48 - v6;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v48 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  v16 = OUTLINED_FUNCTION_33();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_79();
  v20 = v18 - v19;
  MEMORY[0x1E0C80A78](v21);
  v50 = (char *)&v48 - v22;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v23);
  v51 = (char *)&v48 - v24;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v48 - v26;
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v48 - v30;
  (*(void (**)(__n128))(*(_QWORD *)a1 + 96))(v29);
  OUTLINED_FUNCTION_19_7((uint64_t)v15);
  if (v32)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for Date?);
LABEL_18:
    v44 = 0;
    return v44 & 1;
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v33(v31, v15, v16);
  Date.init()();
  v34 = static Date.> infix(_:_:)();
  if ((v34 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_135((uint64_t)v27);
    OUTLINED_FUNCTION_5_135((uint64_t)v31);
    goto LABEL_18;
  }
  v49 = v33;
  Date.timeIntervalSince(_:)();
  v36 = v35;
  if (one-time initialization token for shared != -1)
    swift_once();
  v37 = OUTLINED_FUNCTION_30_74();
  if (v36 <= v38 + 0.01)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(v37);
    OUTLINED_FUNCTION_19_7((uint64_t)v12);
    if (v32)
    {
      OUTLINED_FUNCTION_5_135((uint64_t)v27);
      OUTLINED_FUNCTION_5_135((uint64_t)v31);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    else
    {
      v45 = (uint64_t)v51;
      v49(v51, v12, v16);
      _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type Date and conformance Date, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v46 = OUTLINED_FUNCTION_16_96();
      if ((v46 & 1) == 0)
      {
        v47 = (uint64_t)v50;
        static Date.+ infix(_:_:)();
        v44 = OUTLINED_FUNCTION_16_96() ^ 1;
        OUTLINED_FUNCTION_22_89(v47);
        OUTLINED_FUNCTION_22_89(v45);
        OUTLINED_FUNCTION_22_89((uint64_t)v27);
        OUTLINED_FUNCTION_22_89((uint64_t)v31);
        return v44 & 1;
      }
      OUTLINED_FUNCTION_5_135(v45);
      OUTLINED_FUNCTION_5_135((uint64_t)v27);
      OUTLINED_FUNCTION_5_135((uint64_t)v31);
    }
    v44 = 1;
    return v44 & 1;
  }
  OUTLINED_FUNCTION_34_54();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v20, v31, v16);
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_11_108(v20);
    goto LABEL_16;
  }
  v40 = (uint64_t)v52;
  OUTLINED_FUNCTION_34_54();
  result = OUTLINED_FUNCTION_19_7(v40);
  if (!v32)
  {
    v42 = static Date.< infix(_:_:)();
    OUTLINED_FUNCTION_11_108(v20);
    OUTLINED_FUNCTION_11_108(v40);
    if ((v42 & 1) == 0)
    {
LABEL_17:
      OUTLINED_FUNCTION_11_108((uint64_t)v27);
      OUTLINED_FUNCTION_11_108((uint64_t)v31);
      goto LABEL_18;
    }
LABEL_16:
    OUTLINED_FUNCTION_30_74();
    v43 = v53;
    static Date.+ infix(_:_:)();
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v16);
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 128))(v43);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id *ConversationControlsJoinCountdownActionController.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ConversationControlsJoinCountdownActionController.__deallocating_deinit()
{
  ConversationControlsJoinCountdownActionController.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for CountdownControllerDelegate.startCountdownIfNecessary(for:) in conformance ConversationControlsJoinCountdownActionController()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t protocol witness for CountdownControllerDelegate.invalidate(voucher:) in conformance ConversationControlsJoinCountdownActionController()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_1BD5B3564()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  return closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()();
}

uint64_t sub_1BD5B3590()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t sub_1BD5B359C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1)
{
  uint64_t v1;

  return closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void base witness table accessor for Equatable in CountdownVoucher()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type CountdownVoucher and conformance CountdownVoucher, type metadata accessor for CountdownVoucher, (uint64_t)&protocol conformance descriptor for CountdownVoucher);
}

void sub_1BD5B3604(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 96))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B362C(uint64_t a1)
{
  (*(void (**)(void))(**(_QWORD **)a1 + 120))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of CountdownObject.initializeCountdownView(with:fullValue:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CountdownObject.startCountdown()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CountdownObject.tick()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CountdownObject.countdownEnded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CountdownVoucher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for CountdownVoucher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectWeakDestroy();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = swift_unknownObjectWeakCopyAssign();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = swift_unknownObjectWeakTakeInit();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CountdownVoucher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = swift_unknownObjectWeakTakeAssign();
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(a3 + 20);
  v8 = v6 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownVoucher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD5B3900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
      return (*(_DWORD *)a1 & 0x7FFFFFFFu) + 1;
    else
      return 0;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_33_0();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for CountdownVoucher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5B397C(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    a1[1] = 1;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_33_0();
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata completion function for CountdownVoucher()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of CountdownControllerDelegate.startCountdownIfNecessary(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CountdownControllerDelegate.invalidate(voucher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for ConversationControlsJoinCountdownActionController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsJoinCountdownActionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.startCountdownIfNecessary(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.invalidate(voucher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.storeCountdownEndedDate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.startCountingDown()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t ObjC metadata update function for ConversationControlsJoinCountdownActionController.CountdownInfo()
{
  return type metadata accessor for ConversationControlsJoinCountdownActionController.CountdownInfo(0);
}

void type metadata completion function for ConversationControlsJoinCountdownActionController.CountdownInfo()
{
  unint64_t v0;

  type metadata accessor for Date?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ConversationControlsJoinCountdownActionController.CountdownInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownStart.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.lastCountdownEnded.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ConversationControlsJoinCountdownActionController.CountdownInfo.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t partial apply for closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in closure #3 in ConversationControlsJoinCountdownActionController.startCountingDown()(a1, v1);
}

uint64_t sub_1BD5B3BAC()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t partial apply for closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()()
{
  return closure #1 in closure #1 in ConversationControlsJoinCountdownActionController.setupPlayerAndStartCountdown()();
}

uint64_t LinkDetailViewModel.__allocating_init(recentsCallItem:)(uint64_t a1)
{
  swift_allocObject();
  return LinkDetailViewModel.init(recentsCallItem:)(a1);
}

uint64_t key path getter for LinkDetailViewModel.canRevokeLink : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 144))();
  *a2 = result & 1;
  return result;
}

void key path setter for LinkDetailViewModel.canRevokeLink : LinkDetailViewModel()
{
  LinkDetailViewModel.canRevokeLink.setter();
}

uint64_t LinkDetailViewModel.canRevokeLink.getter()
{
  return LinkDetailViewModel.canRevokeLink.getter();
}

{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  return v1;
}

void LinkDetailViewModel.canRevokeLink.setter()
{
  PositionalData.isBottomVisible.setter();
}

void LinkDetailViewModel.$canRevokeLink.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t LinkDetailViewModel.$canRevokeLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for LinkDetailViewModel.canShareLink : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
  *a2 = result & 1;
  return result;
}

void key path setter for LinkDetailViewModel.canShareLink : LinkDetailViewModel()
{
  LinkDetailViewModel.canShareLink.setter();
}

uint64_t LinkDetailViewModel.canShareLink.getter()
{
  return LinkDetailViewModel.canRevokeLink.getter();
}

void LinkDetailViewModel.canShareLink.setter()
{
  PositionalData.isBottomVisible.setter();
}

void key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v6, a1);
  a6(v6);
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewModel.$canShareLink.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t LinkDetailViewModel.$canShareLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t key path getter for LinkDetailViewModel.invitedMemberHandles : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 240))();
  *a2 = result;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.invitedMemberHandles : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 248);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t LinkDetailViewModel.invitedMemberHandles.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

void LinkDetailViewModel.invitedMemberHandles.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_43_1();
}

void LinkDetailViewModel.invitedMemberHandles.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for LinkDetailViewModel.$invitedMemberHandles : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 272))(v7);
}

void LinkDetailViewModel.$invitedMemberHandles.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

uint64_t LinkDetailViewModel.$invitedMemberHandles.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles, &demangling cache variable for type metadata for Published<Set<TUHandle>?>);
}

void LinkDetailViewModel.$invitedMemberHandles.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewModel.$invitedMemberHandles.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))LinkDetailViewModel.$invitedMemberHandles.setter);
}

uint64_t key path getter for LinkDetailViewModel.linkTitle : LinkDetailViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 288))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.linkTitle : LinkDetailViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 296);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t LinkDetailViewModel.linkTitle.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

uint64_t LinkDetailViewModel.linkTitle.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return static Published.subscript.setter();
}

void LinkDetailViewModel.linkTitle.modify()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t KeyPath;

  v1 = OUTLINED_FUNCTION_45();
  *v0 = v1;
  v1[4] = swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  v1[6] = OUTLINED_FUNCTION_19_4(KeyPath);
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewModel.invitedMemberHandles.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t key path setter for LinkDetailViewModel.$linkTitle : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 320))(v7);
}

void LinkDetailViewModel.$linkTitle.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t LinkDetailViewModel.$linkTitle.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

void LinkDetailViewModel.$linkTitle.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v4 = OUTLINED_FUNCTION_15_3(v3);
  v2[7] = OUTLINED_FUNCTION_53_1((uint64_t)v4);
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewModel.$linkTitle.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))LinkDetailViewModel.$linkTitle.setter);
}

double key path getter for LinkDetailViewModel.conversationLink : LinkDetailViewModel@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  uint64_t v6;

  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)a1 + 336))(&v5);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t key path setter for LinkDetailViewModel.conversationLink : LinkDetailViewModel(id *a1)
{
  id v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  return LinkDetailViewModel.conversationLink.setter();
}

uint64_t LinkDetailViewModel.conversationLink.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  return swift_release();
}

uint64_t LinkDetailViewModel.conversationLink.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  return OUTLINED_FUNCTION_181();
}

void LinkDetailViewModel.$conversationLink.getter()
{
  VideoMessagePlayerViewModel.$controlsConfiguration.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__conversationLink, &demangling cache variable for type metadata for Published<ConversationLink>);
}

uint64_t LinkDetailViewModel.$conversationLink.setter(uint64_t a1)
{
  return LinkDetailViewModel.$canRevokeLink.setter(a1, &demangling cache variable for type metadata for Published<ConversationLink>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__conversationLink, &demangling cache variable for type metadata for Published<ConversationLink>);
}

uint64_t LinkDetailViewModel.$canRevokeLink.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_21_90(v9 - v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  OUTLINED_FUNCTION_60_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t LinkDetailViewModel.wantsCustomContactDetailsPresentation.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_wantsCustomContactDetailsPresentation);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void LinkDetailViewModel.wantsCustomContactDetailsPresentation.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_wantsCustomContactDetailsPresentation);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_43_1();
}

void LinkDetailViewModel.wantsCustomContactDetailsPresentation.modify()
{
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for LinkDetailViewModel.delegate : LinkDetailViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 416);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t LinkDetailViewModel.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

void LinkDetailViewModel.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void LinkDetailViewModel.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  v2[5] = v1;
  v2[6] = v3;
  v4 = v1 + v3;
  OUTLINED_FUNCTION_60_0();
  v5 = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v4 + 8);
  v2[3] = v5;
  v2[4] = v6;
  OUTLINED_FUNCTION_18();
}

void LinkDetailViewModel.delegate.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_4_2(v3);
}

uint64_t key path setter for LinkDetailViewModel.recentsCallItem : LinkDetailViewModel(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RecentsCallItem(a1, (uint64_t)v6);
  v7 = *a2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem;
  swift_beginAccess();
  outlined assign with take of RecentsCallItem((uint64_t)v6, v7);
  return swift_endAccess();
}

void LinkDetailViewModel.recentsCallItem.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of RecentsCallItem(v3, a1);
  OUTLINED_FUNCTION_43_1();
}

uint64_t LinkDetailViewModel.init(recentsCallItem:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_2();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v11 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink;
  OUTLINED_FUNCTION_20_85();
  v27 = v11;
  OUTLINED_FUNCTION_19_82();
  v12 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink;
  OUTLINED_FUNCTION_20_85();
  OUTLINED_FUNCTION_19_82();
  v13 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__invitedMemberHandles;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUHandle>?);
  Published.init(initialValue:)();
  OUTLINED_FUNCTION_21_90(v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  v14 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__linkTitle;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v14, v6, v31);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_wantsCustomContactDetailsPresentation) = 0;
  v15 = v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate + 8) = 0;
  v16 = swift_unknownObjectWeakInit();
  RecentsCallItem.conversationLink.getter(v16, v17, v18, v19, v20, v21, v22, v23, v26, v27);
  outlined destroy of RecentsCallItem(a1);
  v24 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v24(v28, v9);
  v24(v12, v9);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v14, v31);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v15);
  type metadata accessor for LinkDetailViewModel();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1BD5B4CF0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 144))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B4D18()
{
  LinkDetailViewModel.canRevokeLink.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B4D38()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 192))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B4D60()
{
  LinkDetailViewModel.canShareLink.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B4D80()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 240))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B4DA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 288))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for LinkDetailViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LinkDetailViewModel;
  if (!type metadata singleton initialization cache for LinkDetailViewModel)
    return swift_getSingletonMetadata();
  return result;
}

void LinkDetailViewModel.validateEditingPermissions()()
{
  uint64_t v0;
  void *v1;
  void *v2;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)v0 + 336))(&v2);
  v1 = v2;
  swift_release();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_isLocallyCreated);

  LinkDetailViewModel.canRevokeLink.setter();
  LinkDetailViewModel.canShareLink.setter();
}

Swift::Void __swiftcall LinkDetailViewModel.joinCall()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))())
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(v0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

uint64_t LinkDetailViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canRevokeLink;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel__canShareLink, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<TUHandle>?>);
  OUTLINED_FUNCTION_17_1(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  OUTLINED_FUNCTION_17_1(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ConversationLink>);
  OUTLINED_FUNCTION_17_1(v6);
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_delegate);
  outlined destroy of RecentsCallItem(v0 + OBJC_IVAR____TtC15ConversationKit19LinkDetailViewModel_recentsCallItem);
  return v0;
}

uint64_t LinkDetailViewModel.__deallocating_deinit()
{
  LinkDetailViewModel.deinit();
  return swift_deallocClassInstance();
}

void sub_1BD5B4FE0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 168))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B5000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))LinkDetailViewModel.$canRevokeLink.setter);
}

void sub_1BD5B5024()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 216))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B5044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))LinkDetailViewModel.$canShareLink.setter);
}

void sub_1BD5B5068()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 264))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B508C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 312))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B50B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 360))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B50D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for LinkDetailViewModel.$canRevokeLink : LinkDetailViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ConversationLink>.Publisher, (void (*)(uint64_t))LinkDetailViewModel.$conversationLink.setter);
}

void sub_1BD5B50F4()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 384))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B511C(unsigned __int8 *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 392))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B5144()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 408))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5B516C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_1();
  (*(void (**)(void))(v0 + 432))();
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of LinkDetailViewModelDelegate.didJoinCall(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LinkDetailViewModelDelegate.handleContactDetailsPresentation(for:with:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t ObjC metadata update function for LinkDetailViewModel()
{
  return type metadata accessor for LinkDetailViewModel();
}

void type metadata completion function for LinkDetailViewModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<TURoute?>(319, &lazy cache variable for type metadata for Published<Set<TUHandle>?>, (uint64_t *)&demangling cache variable for type metadata for Set<TUHandle>?);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<TURoute?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<String?>, (uint64_t *)&demangling cache variable for type metadata for String?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<ConversationLink>);
        if (v3 <= 0x3F)
        {
          type metadata accessor for RecentsCallItem(319);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for LinkDetailViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkDetailViewModel.canRevokeLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$canRevokeLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of LinkDetailViewModel.canShareLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$canShareLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of LinkDetailViewModel.invitedMemberHandles.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$invitedMemberHandles.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of LinkDetailViewModel.linkTitle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$linkTitle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of LinkDetailViewModel.conversationLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of LinkDetailViewModel.$conversationLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of LinkDetailViewModel.wantsCustomContactDetailsPresentation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of LinkDetailViewModel.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of LinkDetailViewModel.recentsCallItem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of LinkDetailViewModel.__allocating_init(recentsCallItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of LinkDetailViewModel.joinCall()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t outlined assign with take of RecentsCallItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecentsCallItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t static InCallControlsMode.== infix(_:_:)(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BD5B5488 + 4 * byte_1BD667180[a1 >> 5]))();
}

BOOL sub_1BD5B5488@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x20;
}

void InCallControlsMode.debugDescription.getter(char a1)
{
  __asm { BR              X10 }
}

unint64_t sub_1BD5B5564()
{
  char v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
    v1 = 1702195828;
  else
    v1 = 0x65736C6166;
  if ((v0 & 1) != 0)
    v2 = 0xE400000000000000;
  else
    v2 = 0xE500000000000000;
  v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000011;
}

uint64_t InCallControlsMode.supportsShareMenuButton.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(_QWORD))((char *)nullsub_4 + 4 * byte_1BD66718C[a1 >> 5]))(0);
}

BOOL sub_1BD5B5718()
{
  char v0;

  return (v0 & 1) == 0;
}

BOOL InCallControlsMode.isAVLess.getter()
{
  return OUTLINED_FUNCTION_652();
}

BOOL InCallControlsMode.isInCall.getter(unsigned __int8 a1)
{
  return a1 < 0x20u;
}

BOOL InCallControlsMode.isStaging.getter()
{
  return OUTLINED_FUNCTION_652();
}

BOOL InCallControlsMode.isNotApproved.getter()
{
  return OUTLINED_FUNCTION_652();
}

uint64_t InCallControlsMode.allowsHiding.getter(unsigned __int8 a1)
{
  int v1;
  uint64_t result;

  v1 = (a1 >> 5) - 1;
  result = 0;
  switch(v1)
  {
    case 0:
    case 1:
      return result;
    case 2:
      return (a1 & 0xFE) != 96;
    case 3:
      if (a1 != 128)
        goto LABEL_6;
      goto LABEL_4;
    case 4:
      if (a1 != 160)
        goto LABEL_6;
LABEL_4:
      result = 0;
      break;
    default:
LABEL_6:
      result = OUTLINED_FUNCTION_6_4();
      break;
  }
  return result;
}

uint64_t InCallControlsMode.wantsStagingBehavior.getter(unsigned __int8 a1)
{
  int v1;

  v1 = a1 >> 5;
  if (v1 == 1)
    return OUTLINED_FUNCTION_6_4();
  if (v1 == 2)
  {
    if ((a1 & 1) == 0)
      return OUTLINED_FUNCTION_6_4();
  }
  else if (v1 == 3 && a1 == 96)
  {
    return OUTLINED_FUNCTION_6_4();
  }
  return 0;
}

BOOL InCallControlsMode.isHandoffEligible.getter()
{
  return OUTLINED_FUNCTION_652();
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsMode()
{
  char *v0;

  InCallControlsMode.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance InCallControlsMode(unsigned __int8 *a1)
{
  return static InCallControlsMode.== infix(_:_:)(*a1);
}

uint64_t getEnumTagSinglePayload for InCallControlsMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7B)
  {
    if (a2 + 133 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 133) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 134;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v5 >= 0x7A)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for InCallControlsMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 133 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 133) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7B)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7A)
    return ((uint64_t (*)(void))((char *)&loc_1BD5B5904 + 4 * byte_1BD66719C[v4]))();
  *a1 = a2 - 123;
  return ((uint64_t (*)(void))((char *)sub_1BD5B5938 + 4 * byte_1BD667197[v4]))();
}

uint64_t sub_1BD5B5938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5B5940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5B5948);
  return result;
}

uint64_t sub_1BD5B5960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5B5968);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BD5B596C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5B5974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for InCallControlsMode(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0x5F)
    return v1 >> 5;
  else
    return (v1 & 1 | (2 * (v1 >> 5))) - 3;
}

_BYTE *destructiveProjectEnumData for InCallControlsMode(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *destructiveInjectEnumTag for InCallControlsMode(_BYTE *result, unsigned int a2)
{
  unsigned int v2;

  if (a2 < 3)
    LOBYTE(v2) = *result & 1 | (32 * a2);
  else
    v2 = (((_BYTE)a2 - 3) & 1 | (32 * ((a2 - 3) >> 1))) + 96;
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsMode()
{
  return &type metadata for InCallControlsMode;
}

Swift::Void __swiftcall ConversationControlsShareCardHandle.invalidate()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
}

uint64_t ConversationControlsShareCardHandle.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ConversationControlsShareCardHandle.init()();
  return v0;
}

Swift::Void __swiftcall ConversationControlsShareCardHandle.activate()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_activateWithOptions_, 0);
}

uint64_t ConversationControlsShareCardHandle.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0DAAF78]);
  v3 = @nonobjc SBSRemoteAlertDefinition.init(serviceName:viewControllerClassName:)(0xD000000000000017, 0x80000001BD67DEE0, 0xD000000000000030, 0x80000001BD699330);
  v4 = objc_msgSend((id)objc_opt_self(), sel_newHandleWithDefinition_configurationContext_, v3, 0);

  *(_QWORD *)(v1 + 16) = v4;
  return v1;
}

uint64_t ConversationControlsShareCardHandle.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ConversationControlsShareCardHandle.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id @nonobjc SBSRemoteAlertDefinition.init(serviceName:viewControllerClassName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v8 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_initWithServiceName_viewControllerClassName_, v7, v8);

  return v9;
}

uint64_t type metadata accessor for ConversationControlsShareCardHandle()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsShareCardHandle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsShareCardHandle.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ConversationStateManager.presentationStateProvider.getter()
{
  return swift_retain();
}

uint64_t ConversationStateManager.localParticipantStateProvider.getter()
{
  return swift_retain();
}

uint64_t ConversationStateManager.remoteParticipantsStateProvider.getter()
{
  return swift_retain();
}

uint64_t ConversationStateManager.captioningStateManager.getter()
{
  return swift_retain();
}

uint64_t ConversationStateManager.__allocating_init(call:callCenter:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  ConversationStateManager.init(call:callCenter:)(a1, a2, a3);
  return v6;
}

uint64_t ConversationStateManager.init(call:callCenter:)(uint64_t a1, id a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  objc_class *v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t (**v43)(_QWORD, _QWORD);
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t (*v60)();
  void *v61;
  char v62;
  uint64_t (*v63)(uint64_t, _QWORD);
  char v64;
  id v65;
  id v66;
  char v67;
  void *v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)();
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  uint64_t v86;
  char v87;
  uint64_t (**v88)(_QWORD, id);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  objc_class *v110;
  id v111;
  char v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  int v118;
  char v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  void (*v133)(__int128 *, _QWORD);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  objc_class *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  id v154;
  id v155;
  _QWORD *v156;
  id v157;
  id v158;
  void *v159;
  uint64_t v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  unint64_t v165;
  __int128 v166;
  __int128 v167;
  uint64_t (*v168)();
  uint64_t v169;
  _QWORD v170[5];
  _QWORD v171[5];
  _QWORD v172[5];
  __int128 v173;
  objc_class *v174;
  _UNKNOWN **v175;

  v4 = v3;
  v161 = a2;
  v6 = *v3;
  v159 = a3;
  v160 = v6;
  v7 = (objc_class *)type metadata accessor for DispatchWorkItemFlags();
  v142 = *((_QWORD *)v7 - 1);
  v143 = v7;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v141 = v9;
  v10 = OUTLINED_FUNCTION_23_86();
  v139 = *(_QWORD *)(v10 - 8);
  v140 = v10;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_41();
  v138 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_41();
  v147 = v14;
  v15 = OUTLINED_FUNCTION_33_0();
  v145 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v136 = v16;
  v137 = (uint64_t)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v144 = (uint64_t)&v135 - v18;
  type metadata accessor for Participant(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_41();
  v153 = v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_77();
  v24 = v23 - v22;
  v3[9] = MEMORY[0x1E0DEE9E8];
  v158 = (id)type metadata accessor for ConversationController(0);
  v168 = 0;
  v166 = 0u;
  v167 = 0u;
  v25 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v26 = objc_msgSend(v25, sel_sharedInstance);
  if (one-time initialization token for shared != -1)
    swift_once();
  v27 = (void *)static PlaceholderCallCenter.shared;
  v28 = (objc_class *)type metadata accessor for CallCenter();
  v29 = objc_allocWithZone(v28);
  v30 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v26, v27, 0, 0);
  v174 = v28;
  v175 = &protocol witness table for CallCenter;
  *(_QWORD *)&v173 = v30;
  v172[3] = &type metadata for DefaultParticipantMediaProviderCreator;
  v172[4] = &protocol witness table for DefaultParticipantMediaProviderCreator;
  v31 = OUTLINED_FUNCTION_15();
  v32 = v31 + 16;
  v172[0] = v31;
  v33 = OUTLINED_FUNCTION_54();
  outlined init with take of DefaultParticipantMediaProviderCreator(v33, v32);
  v171[3] = &type metadata for DefaultParticipantCaptionsProviderCreator;
  v171[4] = &protocol witness table for DefaultParticipantCaptionsProviderCreator;
  v34 = OUTLINED_FUNCTION_15();
  v35 = v34 + 16;
  v171[0] = v34;
  v170[1] = 0;
  v36 = OUTLINED_FUNCTION_54();
  outlined init with take of DefaultParticipantCaptionsProviderCreator(v36, v35);
  v37 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v38 = (_QWORD *)OUTLINED_FUNCTION_15();
  v170[3] = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v170[4] = &protocol witness table for TUIDSLookupManager;
  v170[0] = v37;
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v39 = MEMORY[0x1E0DEE9D8];
  v148 = v15;
  v38[2] = Dictionary.init(dictionaryLiteral:)();
  v38[3] = Dictionary.init(dictionaryLiteral:)();
  v38[5] = 0;
  OUTLINED_FUNCTION_54();
  v38[6] = v39;
  outlined init with copy of IDSLookupManager((uint64_t)v170, (uint64_t)(v38 + 7));
  v40 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v40, sel_addObserver_selector_name_object_, v38, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v170[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v170);
  if (one-time initialization token for shared != -1)
    swift_once();
  v41 = static Defaults.shared;
  ObjectType = swift_getObjectType();
  swift_retain();
  v43 = (uint64_t (**)(_QWORD, _QWORD))v161;
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)(a1, (uint64_t)&v173, (uint64_t)v172, (uint64_t)v171, 1, (uint64_t)&v166, 1, (uint64_t)v38, v41, (uint64_t)&protocol witness table for Defaults, (uint64_t)v158, ObjectType, (uint64_t)v161, v134, v135, v136, v137, v138, v139,
    v140,
    v141,
    v142,
    v143,
    v144,
    v145);
  v44 = v159;
  v4[6] = v45;
  v4[7] = v44;
  v46 = v45;
  v154 = v44;
  v47 = objc_msgSend(v154, sel_videoDeviceController);
  v4[8] = v47;
  OUTLINED_FUNCTION_17_8((uint64_t)v47, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v48 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v49 = type metadata accessor for NSRunLoop.SchedulerOptions();
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v49);
  v50 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v24, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v156 = v4;
  v4[10] = v50;
  v157 = closure #1 in ConversationStateManager.init(call:callCenter:)(a1, v43);
  v158 = v51;
  LODWORD(v159) = v52;
  if ((OUTLINED_FUNCTION_9_110(v43[61]) & 1) != 0)
    v53 = 1;
  else
    v53 = 2;
  v54 = OUTLINED_FUNCTION_9_110(v43[38]);
  v55 = ObjectType;
  v56 = OUTLINED_FUNCTION_9_110(v43[44]);
  v160 = a1;
  *(_QWORD *)&v166 = a1;
  v57 = (*((uint64_t (**)(uint64_t))v43[1] + 2))(v55);
  v149 = v58;
  v155 = v46;
  ConversationController.lookupActiveConversation()();
  v59 = (void *)*((_QWORD *)&v167 + 1);
  v151 = v56;
  v152 = v54;
  v150 = v57;
  if (*((_QWORD *)&v167 + 1))
  {
    v60 = v168;
    __swift_project_boxed_opaque_existential_1(&v166, *((uint64_t *)&v167 + 1));
    v59 = (void *)(*((uint64_t (**)(void *, uint64_t (*)()))v60 + 6))(v59, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v166);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v166, &demangling cache variable for type metadata for Conversation?);
  }
  v61 = v155;
  v62 = ConversationController.isOneToOneModeEnabled.getter();
  v63 = v43[49];
  v146 = v55;
  v64 = v63(v55, v43);
  type metadata accessor for ConversationPresentationStateProvider();
  OUTLINED_FUNCTION_15();
  v65 = v157;
  v66 = v158;
  v67 = (char)v159;
  outlined copy of CallDisplayInfo(v157, v158, (char)v159);
  v68 = v66;
  v69 = v61;
  v70 = ConversationPresentationStateProvider.init(avMode:isSendingVideo:isMuted:callDisplayInfo:callDurationString:image:isOneToOneModeEnabled:isEmergency:hasHeldCall:)(v53, v152 & 1, v151 & 1, v65, v68, v67, v150, v149, v59, v62 & 1, v64 & 1);
  v71 = v156;
  v156[2] = v70;
  v72 = (uint64_t)v61 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
  OUTLINED_FUNCTION_1();
  v73 = v153;
  outlined init with copy of Participant(v72, v153);
  TUVideoDeviceController.currentCameraEffectsState.getter((char *)&v166);
  LODWORD(v173) = v166;
  type metadata accessor for ConversationLocalParticipantStateProvider();
  OUTLINED_FUNCTION_15();
  ConversationLocalParticipantStateProvider.init(localParticipant:localParticipantCameraEffectsState:)(v73, &v173);
  v71[3] = v74;
  OUTLINED_FUNCTION_1();
  type metadata accessor for ConversationRemoteParticipantsStateProvider();
  OUTLINED_FUNCTION_15();
  swift_bridgeObjectRetain();
  ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)();
  v71[4] = v75;
  if (one-time initialization token for shared != -1)
    swift_once();
  v76 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  v71[5] = CaptioningStateManager.init(capabilities:)(v76);
  v77 = v71[2];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v77 + 96) = &protocol witness table for ConversationStateManager;
  OUTLINED_FUNCTION_8_116();
  v78 = v71[3];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v78 + 40) = &protocol witness table for ConversationStateManager;
  OUTLINED_FUNCTION_8_116();
  v79 = v71[4];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v79 + 40) = &protocol witness table for ConversationStateManager;
  OUTLINED_FUNCTION_8_116();
  swift_retain();
  swift_retain();
  CaptioningStateManager.captionsRecognizerStateManager.setter();
  OUTLINED_FUNCTION_43();
  ConversationStateManager.registerForCallStateUpdates()();
  ConversationStateManager.registerConversationControllerCallbacks()();
  ConversationController.lookupActiveConversation()();
  if (!v174)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v173, &demangling cache variable for type metadata for Conversation?);
    v88 = (uint64_t (**)(_QWORD, id))v161;
    v90 = v146;
    v89 = v147;
    OUTLINED_FUNCTION_19_83();
    v91 = v148;
    if (__swift_getEnumTagSinglePayload(v89, 1, v148) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v89, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v92 = v88[21](v90, v88);
      v93 = specialized _copyCollectionToContiguousArray<A>(_:)(v92);
      swift_bridgeObjectRelease();
      ConversationStateManager.updateImage(handles:)(v93);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_24_72();
      OUTLINED_FUNCTION_10_115();
      swift_release();

    }
    else
    {
      v96 = v144;
      v95 = v145;
      v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32);
      v97(v144, v89, v91);
      v161 = objc_msgSend(v154, sel_queue);
      v98 = OUTLINED_FUNCTION_15();
      swift_weakInit();
      v99 = v95;
      v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
      v101 = v137;
      v100(v137, v96, v91);
      v102 = (*(unsigned __int8 *)(v99 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      v103 = swift_allocObject();
      v104 = v91;
      v105 = v103;
      *(_QWORD *)(v103 + 16) = v98;
      v153 = v98;
      v97(v103 + v102, v101, v104);
      v168 = partial apply for closure #3 in ConversationStateManager.init(call:callCenter:);
      v169 = v105;
      *(_QWORD *)&v166 = MEMORY[0x1E0C809B0];
      *((_QWORD *)&v166 + 1) = 1107296256;
      *(_QWORD *)&v167 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *((_QWORD *)&v167 + 1) = &block_descriptor_112;
      v106 = _Block_copy(&v166);
      swift_retain();
      v107 = v138;
      static DispatchQoS.unspecified.getter();
      *(_QWORD *)&v173 = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      v108 = v69;
      v109 = v141;
      v110 = v143;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      v111 = v161;
      MEMORY[0x1C3B7361C](0, v107, v109, v106);
      _Block_release(v106);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_24_72();

      OUTLINED_FUNCTION_10_115();
      (*(void (**)(uint64_t, objc_class *))(v142 + 8))(v109, v110);
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v107, v140);
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v144, v148);
      swift_release();
      OUTLINED_FUNCTION_43();
    }
    return (uint64_t)v71;
  }
  outlined init with take of Notice(&v173, (uint64_t)&v166);
  v80 = *((_QWORD *)&v167 + 1);
  v81 = v168;
  __swift_project_boxed_opaque_existential_1(&v166, *((uint64_t *)&v167 + 1));
  v82 = (*((uint64_t (**)(uint64_t, uint64_t (*)()))v81 + 12))(v80, v81);
  v83 = specialized Set.count.getter(v82);
  if (!v83)
  {
    swift_bridgeObjectRelease();
    v94 = MEMORY[0x1E0DEE9D8];
LABEL_34:
    ConversationStateManager.updateImage(handles:)(v94);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_24_72();
    OUTLINED_FUNCTION_10_115();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v166);
    return (uint64_t)v71;
  }
  v84 = v83;
  v165 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v82 & 0xC000000000000001) != 0)
  {
    result = __CocoaSet.startIndex.getter();
    v87 = 1;
  }
  else
  {
    result = specialized _NativeSet.startIndex.getter(v82);
    v87 = v112 & 1;
  }
  v162 = result;
  v163 = v86;
  v164 = v87;
  if ((v84 & 0x8000000000000000) == 0)
  {
    v113 = (id)(v82 & 0xFFFFFFFFFFFFFF8);
    if (v82 < 0)
      v113 = (id)v82;
    v161 = v113;
    do
    {
      v114 = v162;
      v115 = v163;
      v116 = v164;
      v117 = OUTLINED_FUNCTION_22_90();
      specialized Set.subscript.getter(v117, v118, v119, v120);
      v122 = v121;
      v123 = objc_msgSend(v121, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      result = specialized ContiguousArray._endMutation()();
      if ((v82 & 0xC000000000000001) != 0)
      {
        if ((v116 & 1) == 0)
          goto LABEL_37;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        v133 = (void (*)(__int128 *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v133(&v173, 0);
      }
      else
      {
        v124 = OUTLINED_FUNCTION_22_90();
        v128 = specialized _NativeSet.index(after:)(v124, v125, v126, v127);
        v130 = v129;
        v132 = v131;
        outlined consume of Set<TUHandle>.Index._Variant(v114, v115, v116);
        v162 = v128;
        v163 = v130;
        v164 = v132 & 1;
      }
      --v84;
    }
    while (v84);
    outlined consume of Set<TUHandle>.Index._Variant(v162, v163, v164);
    v94 = v165;
    swift_bridgeObjectRelease();
    v69 = v155;
    v71 = v156;
    goto LABEL_34;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BD5B69C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD5B69E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id closure #1 in ConversationStateManager.init(call:callCenter:)(uint64_t a1, uint64_t (**a2)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  Swift::String v17;

  v3 = static ConversationStateManager.displayName(call:conversationController:)(a1, a2);
  v5 = v4;
  ObjectType = swift_getObjectType();
  if ((a2[14](ObjectType, a2) & 1) == 0)
  {
    v7 = a2[6](ObjectType, a2);
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v17._object = (void *)0xE000000000000000;
    v11._countAndFlagsBits = 0x6E776F6E6B6E55;
    v11._object = (void *)0xE700000000000000;
    v12.value._countAndFlagsBits = 0x61737265766E6F43;
    v12.value._object = (void *)0xEF74694B6E6F6974;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v17._countAndFlagsBits = 0;
    v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v17);

    v15 = objc_allocWithZone(MEMORY[0x1E0DBD238]);
    return @nonobjc TUContinuityCallInfo.init(callIdentifier:callerIdSubstring:displayName:)(v7, v9, v14._countAndFlagsBits, (uint64_t)v14._object, v3, v5);
  }
  return (id)v3;
}

uint64_t static ConversationStateManager.displayName(call:conversationController:)(uint64_t a1, uint64_t (**a2)(_QWORD, _QWORD))
{
  uint64_t ObjectType;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t countAndFlagsBits;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v14;

  ObjectType = swift_getObjectType();
  v4 = (void *)a2[20](ObjectType, a2);
  v5 = objc_msgSend(v4, sel_isTelephonyProvider);

  if (v5)
    return a2[8](ObjectType, a2);
  if ((a2[14](ObjectType, a2) & 1) == 0 || (v6 = ConversationController.conversationDisplayName.getter(), !v7))
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v14._object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = 0x454D495445434146;
    v10._object = (void *)0xE800000000000000;
    v11.value._countAndFlagsBits = 0x61737265766E6F43;
    v11.value._object = (void *)0xEF74694B6E6F6974;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v14._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v14)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return v6;
}

id TUVideoDeviceController.currentCameraEffectsState.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  unsigned int v3;
  unsigned __int8 v4;
  char v5;
  unsigned int v6;
  unsigned __int8 v7;
  char v8;
  unsigned int v9;
  unsigned __int8 v10;
  char v11;
  unsigned int v12;
  id result;
  char v14;

  v3 = objc_msgSend(v1, sel_currentInputSupportsCinematicFraming);
  v4 = objc_msgSend(v1, sel_isCinematicFramingEnabled);
  if (v3)
    v5 = v4;
  else
    v5 = 2;
  v6 = objc_msgSend(v1, sel_supportsCameraBlur);
  v7 = objc_msgSend(v1, sel_cameraBlurEnabled);
  if (v6)
    v8 = v7;
  else
    v8 = 2;
  v9 = objc_msgSend(v1, sel_currentInputSupportsStudioLight);
  v10 = objc_msgSend(v1, sel_isStudioLightEnabled);
  if (v9)
    v11 = v10;
  else
    v11 = 2;
  v12 = objc_msgSend(v1, sel_currentInputSupportsReactionEffects);
  result = objc_msgSend(v1, sel_isReactionEffectGestureEnabled);
  *a1 = v5;
  if (v12)
    v14 = (char)result;
  else
    v14 = 2;
  a1[1] = v8;
  a1[2] = v11;
  a1[3] = v14;
  return result;
}

uint64_t ConversationStateManager.registerForCallStateUpdates()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v23[2];
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue>);
  v1 = *(_QWORD *)(v0 - 8);
  v32 = v0;
  v33 = v1;
  MEMORY[0x1E0C80A78](v0);
  v31 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSNotificationCenter.Publisher();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (id)objc_opt_self();
  v12 = objc_msgSend(v30, sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v36[0] = (id)static OS_dispatch_queue.main.getter();
  v28 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v28);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher, (void (*)(uint64_t))MEMORY[0x1E0CB1F30]);
  v26 = v13;
  _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v25 = v14;
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v9, v6);
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSNotificationCenter.Publisher, OS_dispatch_queue>);
  v23[1] = v15;
  v16 = v27;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v29 = *(_QWORD *)(v29 + 8);
  ((void (*)(char *, uint64_t))v29)(v11, v16);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v17 = objc_msgSend(v30, sel_defaultCenter);
  NSNotificationCenter.publisher(for:object:)();

  v36[0] = (id)static OS_dispatch_queue.main.getter();
  v18 = v28;
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v28);
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  v24(v9, v6);
  swift_allocObject();
  v19 = v34;
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v29)(v11, v16);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v36[0] = *(id *)(v19 + 80);
  swift_retain();
  v35 = (id)static OS_dispatch_queue.main.getter();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v18);
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (void (*)(uint64_t))MEMORY[0x1E0CB20A0]);
  v20 = v31;
  Publisher.receive<A>(on:options:)();
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<NSTimer.TimerPublisher, OS_dispatch_queue>);
  v21 = v32;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  NSTimer.TimerPublisher.connect()();
  __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v36[3]);
  swift_beginAccess();
  Cancellable.store(in:)();
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (**v3)();
  void (*v4)();
  void (*v5)();
  uint64_t v6;
  void (**v7)();
  void (*v8)();
  void (*v9)();
  uint64_t v10;
  void (**v11)();
  void (*v12)();
  void (*v13)();
  uint64_t v14;
  uint64_t (**v15)();
  uint64_t (*v16)();
  uint64_t (*v17)();
  uint64_t v18;
  void (**v19)();
  void (*v20)();
  void (*v21)();
  uint64_t v22;
  void (**v23)();
  void (*v24)();
  void (*v25)();
  uint64_t v26;
  uint64_t (**v27)(uint64_t);
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t (*v32)();
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t (**v35)();
  uint64_t (*v36)();
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t (**v39)();
  uint64_t (*v40)();
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t (**v43)();
  uint64_t (*v44)();
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t (*v48)();
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t (**v51)();
  uint64_t (*v52)();
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t (**v55)();
  uint64_t (*v56)();
  uint64_t (*v57)();

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = (void (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateLocalParticipant);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *v3 = partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks();
  v3[1] = (void (*)())v2;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v4, v5);
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (void (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForLocalParticipant);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  *v7 = partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks();
  v7[1] = (void (*)())v6;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v8, v9);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (void (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddVisibleParticipant);
  swift_beginAccess();
  v12 = *v11;
  v13 = v11[1];
  *v11 = partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks();
  v11[1] = (void (*)())v10;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v12, v13);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didAddPendingParticipant);
  swift_beginAccess();
  v16 = *v15;
  v17 = v15[1];
  *v15 = partial apply for closure #4 in ConversationStateManager.registerConversationControllerCallbacks();
  v15[1] = (uint64_t (*)())v14;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v16, v17);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = (void (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateVisibleParticipant);
  swift_beginAccess();
  v20 = *v19;
  v21 = v19[1];
  *v19 = partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks();
  v19[1] = (void (*)())v18;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v20, v21);
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = (void (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didRemoveVisibleParticipant);
  swift_beginAccess();
  v24 = *v23;
  v25 = v23[1];
  *v23 = partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks();
  v23[1] = (void (*)())v22;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v24, v25);
  v26 = swift_allocObject();
  swift_weakInit();
  v27 = (uint64_t (**)(uint64_t))(v1
                                         + OBJC_IVAR____TtC15ConversationKit22ConversationController_didStartVideoForVisibleParticipant);
  swift_beginAccess();
  v28 = *v27;
  v29 = v27[1];
  *v27 = partial apply for closure #7 in ConversationStateManager.registerConversationControllerCallbacks();
  v27[1] = (uint64_t (*)(uint64_t))v26;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v28, v29);
  v30 = swift_allocObject();
  swift_weakInit();
  v31 = (uint64_t (**)())(v1
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingAvailabilityDidChange);
  swift_beginAccess();
  v32 = *v31;
  v33 = v31[1];
  *v31 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v31[1] = (uint64_t (*)())v30;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v32, v33);
  v34 = swift_allocObject();
  swift_weakInit();
  v35 = (uint64_t (**)())(v1
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraCinematicFramingEnabledDidChange);
  swift_beginAccess();
  v36 = *v35;
  v37 = v35[1];
  *v35 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v35[1] = (uint64_t (*)())v34;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v36, v37);
  v38 = swift_allocObject();
  swift_weakInit();
  v39 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraBlurEnabledDidChange);
  swift_beginAccess();
  v40 = *v39;
  v41 = v39[1];
  *v39 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v39[1] = (uint64_t (*)())v38;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v40, v41);
  v42 = swift_allocObject();
  swift_weakInit();
  v43 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraStudioLightEnabledDidChange);
  swift_beginAccess();
  v44 = *v43;
  v45 = v43[1];
  *v43 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v43[1] = (uint64_t (*)())v42;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v44, v45);
  v46 = swift_allocObject();
  swift_weakInit();
  v47 = (uint64_t (**)())(v1
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_cameraReactionEffectsEnabledDidChange);
  swift_beginAccess();
  v48 = *v47;
  v49 = v47[1];
  *v47 = partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks();
  v47[1] = (uint64_t (*)())v46;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v48, v49);
  v50 = swift_allocObject();
  swift_weakInit();
  v51 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_didUpdateCaptions);
  swift_beginAccess();
  v52 = *v51;
  v53 = v51[1];
  *v51 = partial apply for closure #13 in ConversationStateManager.registerConversationControllerCallbacks();
  v51[1] = (uint64_t (*)())v50;
  _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v52, v53);
  v54 = swift_allocObject();
  swift_weakInit();
  v55 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC15ConversationKit22ConversationController_resolvedAudioVideoModeDidChange);
  swift_beginAccess();
  v56 = *v55;
  v57 = v55[1];
  *v55 = partial apply for closure #14 in ConversationStateManager.registerConversationControllerCallbacks();
  v55[1] = (uint64_t (*)())v54;
  return _sx7SwiftUI5ImageV5ScaleORi_zRi0_zly15ConversationKit20ShareMenuActionStateVIsegnr_SgWOe(v56, v57);
}

void ConversationStateManager.updateImage(handles:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Class isa;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  UIImage_optional v10;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4)
      return;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  ConversationController.lookupActiveConversation()();
  if (v6)
  {
    outlined init with take of Notice(&v5, (uint64_t)v7);
    v1 = v8;
    v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v10.value.super.isa = (Class)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
    isa = v10.value.super.isa;
    ConversationPresentationStateProvider.onImageUpdated(_:)(v10);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v5, &demangling cache variable for type metadata for Conversation?);
  }
}

uint64_t closure #3 in ConversationStateManager.init(call:callCenter:)()
{
  uint64_t Strong;
  unint64_t v1;
  id v2;
  Class isa;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v1 = MEMORY[0x1E0DEE9D8];
  if (Strong)
  {
    v2 = *(id *)(Strong + 56);
    swift_release();
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend(v2, sel_callsWithGroupUUID_, isa);

    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  v14 = v1;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    result = _CocoaArrayWrapper.endIndex.getter();
    v6 = result;
    if (result)
      goto LABEL_6;
LABEL_14:
    swift_bridgeObjectRelease_n();
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_14;
LABEL_6:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  v8 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x1C3B73D18](v8, v5);
    else
      v9 = *(id *)(v5 + 8 * v8 + 32);
    v10 = v9;
    ++v8;
    v11 = objc_msgSend(v9, sel_remoteParticipantHandles);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    _sSo9NSRunLoopCAB7Combine9Scheduler10FoundationWlTm_0(&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array.append<A>(contentsOf:)(v12);
  }
  while (v6 != v8);
  swift_bridgeObjectRelease_n();
  v13 = v14;
LABEL_15:
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    ConversationStateManager.updateImage(handles:)(v13);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

id *ConversationStateManager.deinit()
{
  id *v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ConversationStateManager.__deallocating_deinit()
{
  ConversationStateManager.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ConversationStateManager.toggleSendingVideo()()
{
  ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(0);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationStateManager.toggleMuted()()
{
  ConversationController.toggleLocalAudio()();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationStateManager.endCall()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v38 = v4;
  v5 = OUTLINED_FUNCTION_23_86();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v35 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_33_0();
  v34 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v41 = (char *)&v33 - v16;
  v17 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  OUTLINED_FUNCTION_1();
  v18 = *(_QWORD *)(v17 + 8);
  ObjectType = swift_getObjectType();
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 160);
  swift_unknownObjectRetain();
  v21 = (void *)v20(ObjectType, v18);
  LODWORD(v20) = objc_msgSend(v21, sel_isTelephonyProvider);

  if (!(_DWORD)v20)
    goto LABEL_4;
  OUTLINED_FUNCTION_19_83();
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_4:
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v18 + 440))(0, ObjectType, v18);
    swift_unknownObjectRelease();
    return;
  }
  v22 = v34;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
  v24 = v41;
  v23(v41, v11, v12);
  v33 = objc_msgSend(*(id *)(v1 + 56), sel_queue);
  v25 = OUTLINED_FUNCTION_15();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v14, v24, v12);
  v26 = v22;
  v27 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v25;
  v23((char *)(v28 + v27), (uint64_t)v14, v12);
  aBlock[4] = partial apply for closure #1 in ConversationStateManager.endCall();
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_16_3;
  v29 = _Block_copy(aBlock);
  swift_retain();
  v30 = v35;
  static DispatchQoS.unspecified.getter();
  v42 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  v31 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v32 = v33;
  MEMORY[0x1C3B7361C](0, v30, v31, v29);
  _Block_release(v29);
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v30, v37);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v41, v12);
  swift_release();
  swift_release();
}

void closure #1 in ConversationStateManager.endCall()()
{
  uint64_t Strong;
  uint64_t v1;
  id v2;
  Class isa;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    v2 = *(id *)(Strong + 56);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v4 = objc_msgSend(v2, sel_callsWithGroupUUID_, isa);

    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v6; ++i)
        {
          if ((v5 & 0xC000000000000001) != 0)
            v8 = (id)MEMORY[0x1C3B73D18](i, v5);
          else
            v8 = *(id *)(v5 + 8 * i + 32);
          v9 = v8;
          objc_msgSend(*(id *)(v1 + 56), sel_disconnectCall_withReason_, v8, 0);

        }
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall ConversationStateManager.toggleCinematicFramingEffectState()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  if (objc_msgSend(v1, sel_currentInputSupportsCinematicFraming))
    objc_msgSend(v1, sel_setCinematicFramingEnabled_, objc_msgSend(v1, sel_isCinematicFramingEnabled) ^ 1);
  else
    OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationStateManager.toggleCameraBlurEffectState()()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;

  v1 = OUTLINED_FUNCTION_25_1(v0, sel_supportsCameraBlur);
  if ((_DWORD)v1)
  {
    v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_cameraBlurEnabled);
    TUVideoDeviceController.setCameraBlurEnabled(_:)(v2 != 1);
  }
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationStateManager.toggleStudioLightEffectState()()
{
  ConversationStateManager.toggleStudioLightEffectState()((const char **)&selRef_currentInputSupportsStudioLight, (const char **)&selRef_isStudioLightEnabled, (SEL *)&selRef_setStudioLightEnabled_);
}

Swift::Void __swiftcall ConversationStateManager.toggleReactionsEffectState()()
{
  ConversationStateManager.toggleStudioLightEffectState()((const char **)&selRef_currentInputSupportsReactionEffects, (const char **)&selRef_isReactionEffectGestureEnabled, (SEL *)&selRef_setReactionEffectGestureEnabled_);
}

id ConversationStateManager.toggleStudioLightEffectState()(const char **a1, const char **a2, SEL *a3)
{
  uint64_t v3;
  void *v6;
  id result;

  v6 = *(void **)(v3 + 64);
  result = OUTLINED_FUNCTION_25_1((uint64_t)a1, *a1);
  if ((_DWORD)result)
    return objc_msgSend(v6, *a3, OUTLINED_FUNCTION_25_1((uint64_t)result, *a2) ^ 1);
  return result;
}

Swift::Void __swiftcall ConversationStateManager.enableCaptionsRecognizer()()
{
  ConversationController.captionsRecognizerShouldBeRunning.setter();
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ConversationStateManager.disableCaptionsRecognizer()()
{
  ConversationController.captionsRecognizerShouldBeRunning.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t closure #1 in ConversationStateManager.registerForCallStateUpdates()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48) + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 304);
    swift_unknownObjectRetain();
    LOBYTE(v1) = v4(ObjectType, v2);
    swift_unknownObjectRelease();
    swift_retain();
    ConversationPresentationStateProvider.onSendingVideoStateUpdated(_:)(v1 & 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in ConversationStateManager.registerForCallStateUpdates()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48) + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 352);
    swift_unknownObjectRetain();
    LOBYTE(v1) = v4(ObjectType, v2);
    swift_unknownObjectRelease();
    swift_retain();
    ConversationPresentationStateProvider.onMutedStateUpdated(_:)(v1 & 1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #3 in ConversationStateManager.registerForCallStateUpdates()()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  Swift::String_optional v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48) + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v2 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v4 = *(_QWORD *)(v2 + 8);
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
    swift_retain();
    v6.value._countAndFlagsBits = v5(ObjectType, v4);
    ConversationPresentationStateProvider.onCallDurationUpdated(_:)(v6);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void closure #1 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;

  v0 = type metadata accessor for DispatchPredicate();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = (uint64_t *)(v3 - v2);
  OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DEF740], v0);
  v6 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    if (swift_weakLoadStrong())
    {
      CurrentValueSubject.send(_:)();
      swift_release();
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #4 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for DispatchPredicate();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
  v4 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      ConversationStateManager.conversationControllerParticipantsDidChange()();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #3 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;

  v0 = type metadata accessor for DispatchPredicate();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = (uint64_t *)(v3 - v2);
  OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v4 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DEF740], v0);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v1 + 8))(v4, v0);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    if (swift_weakLoadStrong())
    {
      ConversationStateManager.conversationControllerParticipantsDidChange()();
      OUTLINED_FUNCTION_43();
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

uint64_t closure #7 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    result = type metadata accessor for Participant(0);
    if (*(_QWORD *)(a1 + *(int *)(result + 28)))
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        ConversationStateManager.conversationControllerParticipantsDidChange()();
        return swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ConversationStateManager.cameraEffectsStateDidChange()()
{
  int v1;

  TUVideoDeviceController.currentCameraEffectsState.getter((char *)&v1);
  return ConversationLocalParticipantStateProvider.onCameraEffectsStateChanged(_:)();
}

uint64_t closure #8 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t result;

  OUTLINED_FUNCTION_1();
  result = swift_weakLoadStrong();
  if (result)
  {
    ConversationStateManager.cameraEffectsStateDidChange()();
    return OUTLINED_FUNCTION_43();
  }
  return result;
}

uint64_t closure #13 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for DispatchPredicate();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
  v4 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      PassthroughSubject.send(_:)();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #14 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for DispatchPredicate();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
  v4 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      ConversationPresentationStateProvider.onAudioVideoModeUpdated(_:)();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void ConversationStateManager.conversationControllerParticipantsDidChange()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  void (*v27)(_BYTE *, _QWORD);
  _BYTE v28[32];
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  Swift::String v37;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  ConversationRemoteParticipantsStateProvider.onParticipantsChanged(_:)((Swift::OpaquePointer)v0);
  swift_bridgeObjectRelease();
  ConversationController.conversationDisplayName.getter();
  if (!v1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v37._object = (void *)0xE000000000000000;
    v3._countAndFlagsBits = 0x454D495445434146;
    v3._object = (void *)0xE800000000000000;
    v4.value._countAndFlagsBits = 0x61737265766E6F43;
    v4.value._object = (void *)0xEF74694B6E6F6974;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v37);

  }
  ConversationPresentationStateProvider.onCallDisplayInfoUpdated(_:)();
  swift_bridgeObjectRelease();
  ConversationController.lookupActiveConversation()();
  outlined init with copy of Conversation?((uint64_t)v36, (uint64_t)v33);
  v6 = v34;
  if (!v34)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v33, &demangling cache variable for type metadata for Conversation?);
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_20:
    ConversationStateManager.updateImage(handles:)(v14);
    swift_bridgeObjectRelease();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v36, &demangling cache variable for type metadata for Conversation?);
    return;
  }
  v7 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96))(v6, v7);
  v9 = specialized Set.count.getter(v8);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    goto LABEL_20;
  }
  v10 = v9;
  v32 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v8 & 0xC000000000000001) != 0)
  {
    v11 = __CocoaSet.startIndex.getter();
    v13 = 1;
  }
  else
  {
    v11 = specialized _NativeSet.startIndex.getter(v8);
    v13 = v15 & 1;
  }
  v29 = v11;
  v30 = v12;
  v31 = v13;
  if ((v10 & 0x8000000000000000) == 0)
  {
    do
    {
      v16 = v29;
      v17 = v30;
      v18 = v31;
      specialized Set.subscript.getter(v29, v30, v31, v8);
      v20 = v19;
      v21 = objc_msgSend(v19, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if ((v8 & 0xC000000000000001) != 0)
      {
        if ((v18 & 1) == 0)
          goto LABEL_22;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUConversationMember>.Index);
        v27 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v27(v28, 0);
      }
      else
      {
        v22 = specialized _NativeSet.index(after:)(v16, v17, v18, v8);
        v24 = v23;
        v26 = v25;
        outlined consume of Set<TUHandle>.Index._Variant(v16, v17, v18);
        v29 = v22;
        v30 = v24;
        v31 = v26 & 1;
      }
      --v10;
    }
    while (v10);
    outlined consume of Set<TUHandle>.Index._Variant(v29, v30, v31);
    v14 = v32;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

id @nonobjc TUContinuityCallInfo.init(callIdentifier:callerIdSubstring:displayName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v11 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v12 = (void *)MEMORY[0x1C3B72E00](a3, a4);
  swift_bridgeObjectRelease();
  v13 = (void *)MEMORY[0x1C3B72E00](a5, a6);
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v6, sel_initWithCallIdentifier_callerIdSubstring_displayName_, v11, v12, v13);

  return v14;
}

uint64_t sub_1BD5B90EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ConversationStateManager.init(call:callCenter:)()
{
  return partial apply for closure #3 in ConversationStateManager.init(call:callCenter:)((uint64_t (*)(_QWORD, uint64_t))closure #3 in ConversationStateManager.init(call:callCenter:));
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_33_0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationStateManager.endCall()()
{
  return partial apply for closure #3 in ConversationStateManager.init(call:callCenter:)((uint64_t (*)(_QWORD, uint64_t))closure #1 in ConversationStateManager.endCall());
}

uint64_t partial apply for closure #3 in ConversationStateManager.init(call:callCenter:)(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t type metadata accessor for ConversationStateManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationStateManager.__allocating_init(call:callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void partial apply for closure #1 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  closure #1 in ConversationStateManager.registerConversationControllerCallbacks()();
}

void partial apply for closure #3 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  OUTLINED_FUNCTION_21_91();
}

uint64_t partial apply for closure #4 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  return closure #4 in ConversationStateManager.registerConversationControllerCallbacks()();
}

uint64_t partial apply for closure #7 in ConversationStateManager.registerConversationControllerCallbacks()(uint64_t a1)
{
  return closure #7 in ConversationStateManager.registerConversationControllerCallbacks()(a1);
}

uint64_t partial apply for closure #8 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  return OUTLINED_FUNCTION_11_109();
}

uint64_t partial apply for closure #13 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  return closure #13 in ConversationStateManager.registerConversationControllerCallbacks()();
}

uint64_t partial apply for closure #14 in ConversationStateManager.registerConversationControllerCallbacks()()
{
  return closure #14 in ConversationStateManager.registerConversationControllerCallbacks()();
}

uint64_t partial apply for closure #1 in ConversationStateManager.registerForCallStateUpdates()()
{
  return closure #1 in ConversationStateManager.registerForCallStateUpdates()();
}

uint64_t partial apply for closure #2 in ConversationStateManager.registerForCallStateUpdates()()
{
  return closure #2 in ConversationStateManager.registerForCallStateUpdates()();
}

uint64_t partial apply for closure #3 in ConversationStateManager.registerForCallStateUpdates()()
{
  return closure #3 in ConversationStateManager.registerForCallStateUpdates()();
}

uint64_t FTServerBag.remoteControlEnabled.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001FLL, 0x80000001BD699480, v0);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  outlined init with take of Any?((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    outlined destroy of Any?((uint64_t)v6);
    return 1;
  }
  type metadata accessor for NSNumber();
  if ((swift_dynamicCast() & 1) == 0)
    return 1;
  v2 = objc_msgSend(v4, sel_BOOLValue);

  return (uint64_t)v2;
}

void Conversation.currentSharePlayActivity.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = Conversation.activities.getter(a1, a2);
  Array<A>.currentSharePlayActivity.getter(v2);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_0();
}

uint64_t Conversation.currentCollaboration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = Conversation.activities.getter(a1, a2);
  Array<A>.currentCollaboration.getter(v4, a3);
  return swift_bridgeObjectRelease();
}

void Conversation.isContinuitySession.getter(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 272))();
  objc_msgSend(v2, sel_mode);

  OUTLINED_FUNCTION_0();
}

uint64_t Conversation.avModeForSystemAperture.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = v2;
  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_11_2();
  v9 = (*(uint64_t (**)(void))(v8 + 56))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v4, a1);
  if (v9 != 4)
  {
    OUTLINED_FUNCTION_20_86();
    goto LABEL_5;
  }
  v10 = OUTLINED_FUNCTION_39_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 88));
  v11 = specialized LazySequence<>.count.getter(v10);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_20_86();
  if (v11 != 1)
  {
LABEL_5:
    v12 = 35;
    return OUTLINED_FUNCTION_39_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8 * v12));
  }
  v12 = 33;
  return OUTLINED_FUNCTION_39_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8 * v12));
}

uint64_t TUConversation.participantListDisplayName.getter(uint64_t a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t countAndFlagsBits;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v14;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_displayName);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;

  v5 = swift_bridgeObjectRelease();
  v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v6 = v2 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = OUTLINED_FUNCTION_25_1(v5, sel_displayName);
    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v14._object = (void *)0xE000000000000000;
    v9._countAndFlagsBits = 0x454D495445434146;
    v9._object = (void *)0xE800000000000000;
    v10.value._countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v14._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v7, v11, v14)._countAndFlagsBits;
  }
  v12 = countAndFlagsBits;

  return v12;
}

uint64_t Conversation.currentScreenSharingRequest.getter(uint64_t a1, uint64_t a2)
{
  return Conversation.currentScreenSharingRequest(ignoring:)(MEMORY[0x1E0DEE9D8], a1, a2);
}

void Conversation.cnk_allowsVideoMessaging.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_14_103();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  (*(void (**)(void))(v4 + 264))();
  OUTLINED_FUNCTION_3_129();
  if (v2)
  {
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v0, v1);
    specialized LazySequence<>.count.getter(v5);
    OUTLINED_FUNCTION_27();
  }
  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_91();
}

uint64_t Conversation.currentActivity.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = Conversation.activities.getter(a1, a2);
  v3 = Array<A>.sortedActivities.getter(v2);
  specialized Collection.first.getter(v3);
  OUTLINED_FUNCTION_27();
  return swift_bridgeObjectRelease();
}

id TUConversation.stagedSharePlayActivity.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_stagedActivitySession);
}

uint64_t Conversation.currentScreenSharingRequest(ignoring:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!Conversation.canDisplayScreenSharingRequest.getter())
    return 0;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 352))(a2, a3);
  swift_bridgeObjectRetain();
  specialized Set._Variant.filter(_:)(v6, a1);
  specialized Collection.first.getter();
  v8 = v7;
  swift_release();
  return v8;
}

void Conversation.isLinkSharingSupported.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v6 = OUTLINED_FUNCTION_33_0();
  __swift_getEnumTagSinglePayload(v2, 1, v6);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v2, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_91();
}

Swift::Bool __swiftcall Conversation.isLocalMemberAuthorizedToChangeGroupMembership()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;

  v2 = v1;
  v3 = v0;
  v4 = (void *)(*(uint64_t (**)(void))(v1 + 168))();

  if (!v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 200))(v3, v2);
  v5 = (void *)OUTLINED_FUNCTION_39_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 216));
  if (!v5)
    return 1;
  v6 = v5;
  v7 = objc_msgSend(v5, sel_canCreateConversations);

  return v7;
}

void TUConversation.isRestricted.getter()
{
  uint64_t v0;

  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static RestrictedConversationChecker.shared)
                                  + 0x80))(v0);
  OUTLINED_FUNCTION_0();
}

void Conversation.containsAuthorizedToChangeGroupMembership(participantWithHandle:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;

  v4 = (void *)OUTLINED_FUNCTION_1_105(a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 216));
  if (v4)
  {
    v5 = v4;
    Conversation.containsInvited(participantWithHandle:inLink:)(a1, v4);

  }
  OUTLINED_FUNCTION_91();
}

void Conversation.displayableActiveParticipants.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;

  v4 = (*(uint64_t (**)(void))(a2 + 104))();
  OUTLINED_FUNCTION_24_73(partial apply for closure #1 in Conversation.displayableActiveParticipants.getter, v5, v4, v6, v7, v8, v9, v10, v14);
  v12 = v11;
  Conversation.untrustedActiveLightweightParticipants.getter(a1, a2);
  specialized Set.union<A>(_:)(v13, v12);
  OUTLINED_FUNCTION_14_1();
}

void Conversation.allHandles(excludeOtherInvitedHandles:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  void (*v75)(uint64_t *, _QWORD);
  unint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v4 = v3;
  v8 = (void *)OUTLINED_FUNCTION_1_105(a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 88));
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 128))(a2, a3);
  specialized Set.union<A>(_:)(v9, v8);
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = MEMORY[0x1E0DEE9E8];
    v83 = MEMORY[0x1E0DEE9E8];
    __CocoaSet.makeIterator()();
    v12 = __CocoaSet.Iterator.next()();
    if (v12)
    {
      v13 = v12;
      v77 = 0;
      v79 = a2;
      v81 = v4;
      OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember);
      while (1)
      {
        v90 = v13;
        swift_dynamicCast();
        if ((a1 & 1) != 0 && (objc_msgSend(v87, sel_isOtherInvitedHandle) & 1) != 0)
        {

        }
        else
        {
          v14 = v83;
          v15 = *(_QWORD *)(v83 + 16);
          if (*(_QWORD *)(v83 + 24) <= v15)
          {
            specialized _NativeSet.resize(capacity:)(v15 + 1);
            v14 = v83;
          }
          v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v14 + 40)) & ~(-1 << *(_BYTE *)(v14 + 32));
          if (((-1 << v16) & ~*(_QWORD *)(v14 + 56 + 8 * (v16 >> 6))) == 0)
          {
            OUTLINED_FUNCTION_30_8();
            while (++v20 != v21 || (v19 & 1) == 0)
            {
              v22 = v20 == v21;
              if (v20 == v21)
                v20 = 0;
              v19 |= v22;
              if (*(_QWORD *)(v18 + 8 * v20) != -1)
              {
                OUTLINED_FUNCTION_28_6();
                goto LABEL_18;
              }
            }
            __break(1u);
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
            return;
          }
          OUTLINED_FUNCTION_31_9();
LABEL_18:
          OUTLINED_FUNCTION_28_67(v17);
          *(_QWORD *)(v23 + 8 * v24) = v87;
          ++*(_QWORD *)(v14 + 16);
        }
        v13 = __CocoaSet.Iterator.next()();
        if (!v13)
        {
          v11 = v83;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    v11 = specialized _NativeSet.filter(_:)(v10, a1 & 1);
  }
  specialized Sequence.compactMap<A>(_:)(v11);
  v26 = v25;
  swift_release();
  specialized Set.init<A>(_:)(v26, v27, v28, v29, v30, v31, v32, v33, v77, v79, v81, v83, v84, v85, v86, (uint64_t)v87, v88, v89, v90,
    v91);
  v35 = v34;
  Conversation.displayableActiveParticipants.getter(a2, a3);
  v37 = v36;
  v38 = specialized LazySequence<>.count.getter(v36);
  if (v38)
  {
    v39 = v38;
    v80 = (uint64_t)v35;
    v90 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v37 & 0xC000000000000001) != 0)
    {
      v40 = (void *)__CocoaSet.startIndex.getter();
      v42 = 1;
    }
    else
    {
      v40 = (void *)specialized _NativeSet.startIndex.getter(v37);
      v42 = v51 & 1;
    }
    v87 = v40;
    v88 = v41;
    LOBYTE(v89) = v42;
    if (v39 < 0)
      goto LABEL_44;
    v52 = v37 & 0xFFFFFFFFFFFFFF8;
    if (v37 < 0)
      v52 = v37;
    v82 = v52;
    do
    {
      v54 = v87;
      v53 = v88;
      v55 = v89;
      v56 = OUTLINED_FUNCTION_27_71();
      specialized Set.subscript.getter(v56, v57, v58, v59);
      v61 = v60;
      v62 = objc_msgSend(v60, sel_handle);
      v63 = (id)TUNormalizedHandleForTUHandle();

      if (!v63)
        v65 = OUTLINED_FUNCTION_25_1(v64, sel_handle);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if ((v37 & 0xC000000000000001) != 0)
      {
        if ((v55 & 1) == 0)
          goto LABEL_45;
        if (__CocoaSet.Index.handleBitPattern.getter())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Set<TUConversationParticipant>.Index);
        v75 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v75(&v83, 0);
      }
      else
      {
        v66 = OUTLINED_FUNCTION_27_71();
        v70 = (void *)specialized _NativeSet.index(after:)(v66, v67, v68, v69);
        v72 = v71;
        v74 = v73;
        outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v54, v53, v55);
        v87 = v70;
        v88 = v72;
        LOBYTE(v89) = v74 & 1;
      }
      --v39;
    }
    while (v39);
    outlined consume of Set<TUHandle>.Index._Variant((uint64_t)v87, v88, v89);
    v50 = v90;
    OUTLINED_FUNCTION_2_1();
    v35 = (void *)v80;
  }
  else
  {
    OUTLINED_FUNCTION_2_1();
    v50 = MEMORY[0x1E0DEE9D8];
  }
  specialized Set.init<A>(_:)(v50, v43, v44, v45, v46, v47, v48, v49, v78, v80, v82, v83, v84, v85, v86, (uint64_t)v87, v88, v89, v90,
    v91);
  specialized Set.union<A>(_:)(v76, v35);
}

uint64_t Conversation.containsKickable(participantWithHandle:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 216);
  v7 = (void *)v6(a2, a3);
  if (v7)
  {
    v8 = v7;
    v9 = Conversation.containsInvited(participantWithHandle:inLink:)(a1, v7);

    v10 = v9 ^ 1;
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BD645380;
    OUTLINED_FUNCTION_17_8(v11, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v12 = a1;
    v13 = String.init<A>(reflecting:)();
    v15 = v14;
    v16 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    v17 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v11 + 64) = v17;
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v15;
    v18 = v6(a2, a3);
    if (v18)
    {
      OUTLINED_FUNCTION_17_8(v18, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
      v19 = String.init<A>(reflecting:)();
    }
    else
    {
      v20 = 0xE300000000000000;
      v19 = 7104878;
    }
    *(_QWORD *)(v11 + 96) = v16;
    *(_QWORD *)(v11 + 104) = v17;
    *(_QWORD *)(v11 + 72) = v19;
    *(_QWORD *)(v11 + 80) = v20;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_2_1();
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t Conversation.activities.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (*(uint64_t (**)(void))(a2 + 320))();
  specialized _copyCollectionToContiguousArray<A>(_:)(v4);
  swift_bridgeObjectRelease();
  specialized _arrayForceCast<A, B>(_:)();
  v6 = v5;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(a2 + 304))(a1, a2);
  specialized _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  specialized Array.append<A>(contentsOf:)();
  return v6;
}

uint64_t Array<A>.currentSharePlayActivity.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = Array<A>.sortedActivities.getter(a1);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of IDSLookupManager(v3, (uint64_t)&v7);
      __swift_project_boxed_opaque_existential_1(&v7, v8);
      v4 = (void *)OUTLINED_FUNCTION_6_115();

      if (v4)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
      v3 += 40;
      if (!--v2)
      {
        OUTLINED_FUNCTION_13_3();
        goto LABEL_6;
      }
    }
    OUTLINED_FUNCTION_13_3();
    outlined init with take of Notice(&v7, (uint64_t)&v9);
  }
  else
  {
LABEL_6:
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
  }
  OUTLINED_FUNCTION_13_3();
  if (*((_QWORD *)&v10 + 1))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession);
    if (swift_dynamicCast())
      return v7;
    else
      return 0;
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v9, &demangling cache variable for type metadata for Activity?);
    return 0;
  }
}

BOOL Conversation.canDisplayScreenSharingRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  _BOOL8 v6;

  OUTLINED_FUNCTION_14_103();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v5 = *(void (**)(void))(v4 + 264);
  v5();
  OUTLINED_FUNCTION_3_129();
  v6 = v2 == 2 || ((uint64_t (*)(uint64_t, uint64_t))v5)(v0, v1) == 1;
  OUTLINED_FUNCTION_32_1();
  return v6;
}

uint64_t Array<A>.currentCollaboration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = Array<A>.sortedActivities.getter(a1);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + 32;
    while (1)
    {
      outlined init with copy of IDSLookupManager(v10, (uint64_t)&v20);
      v11 = v21;
      v12 = v22;
      __swift_project_boxed_opaque_existential_1(&v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v11, v12);
      v13 = OUTLINED_FUNCTION_239_0();
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v13);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?(v7, &demangling cache variable for type metadata for Collaboration?);
      if (EnumTagSinglePayload != 1)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      v10 += 40;
      if (!--v9)
        goto LABEL_5;
    }
    outlined init with take of Notice(&v20, (uint64_t)&v23);
  }
  else
  {
LABEL_5:
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
  }
  OUTLINED_FUNCTION_2_1();
  if (*((_QWORD *)&v24 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Activity);
    v15 = OUTLINED_FUNCTION_239_0();
    v16 = swift_dynamicCast() ^ 1;
    v17 = a2;
    v18 = v15;
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v23, &demangling cache variable for type metadata for Activity?);
    v18 = OUTLINED_FUNCTION_239_0();
    v17 = a2;
    v16 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v17, v16, 1, v18);
}

void Conversation.untrustedActiveLightweightParticipants.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (*(uint64_t (**)(void))(a2 + 112))();
  OUTLINED_FUNCTION_24_73(partial apply for closure #1 in Conversation.untrustedActiveLightweightParticipants.getter, v3, v2, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned int v8;

  v4 = *a1;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 144))(a3, a4);
  specialized Sequence.first(where:)(v5, v4);
  v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
    return 1;
  v8 = objc_msgSend(v7, sel_isValidated);

  return v8 ^ 1;
}

uint64_t closure #1 in Conversation.displayableActiveParticipants.getter(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  _QWORD *v18;

  v6 = *a1;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 584))() & 1) == 0)
    return 1;
  v7 = objc_msgSend(v6, sel_identifier);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 176))(a3, a4);
  if (!v8)
    return 1;
  v9 = v8;
  v10 = objc_msgSend(v8, sel_identifier);

  if (v7 != v10)
    return 1;
  if (one-time initialization token for conversationController != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationController);
  v12 = v6;
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    v16 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v18 = v12;

    _os_log_impl(&dword_1BD004000, v13, v14, "Excluding participant %@ from displayable participants because it's the local participant", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v18, -1, -1);
    MEMORY[0x1C3B751B8](v15, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t Conversation.containsPending(participantWithHandle:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;

  v4 = OUTLINED_FUNCTION_1_105(a2, a3, *(uint64_t (**)(uint64_t, uint64_t))(a3 + 128));
  specialized Sequence.contains(where:)(v4, a1);
  LOBYTE(a1) = v5;
  OUTLINED_FUNCTION_27();
  return a1 & 1;
}

uint64_t Conversation.containsInvited(participantWithHandle:inLink:)(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  unsigned int v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = objc_msgSend(a2, sel_invitedMemberHandles);
  v4 = MEMORY[0x1E0DEA968];
  if (!v3
    || (v3,
        v5 = objc_msgSend(a2, sel_originatorHandle),
        v5,
        !v5))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v6 = 7104878;
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BD646740;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUConversationLink);
    v8 = a2;
    v9 = String.init<A>(reflecting:)();
    v11 = v10;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    v12 = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v7 + 64) = v12;
    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v11;
    v13 = objc_msgSend(v8, sel_invitedMemberHandles);
    if (v13)
    {
      v14 = v13;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>);
      v15 = String.init<A>(reflecting:)();
    }
    else
    {
      v16 = 0xE300000000000000;
      v15 = 7104878;
    }
    v4 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 104) = v12;
    *(_QWORD *)(v7 + 72) = v15;
    *(_QWORD *)(v7 + 80) = v16;
    if (objc_msgSend(v8, sel_originatorHandle))
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      v6 = String.init<A>(reflecting:)();
    }
    else
    {
      v17 = 0xE300000000000000;
    }
    *(_QWORD *)(v7 + 136) = v4;
    *(_QWORD *)(v7 + 144) = v12;
    *(_QWORD *)(v7 + 112) = v6;
    *(_QWORD *)(v7 + 120) = v17;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend(a2, sel_invitedMemberHandles);
  if (v18)
  {
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type TUHandle and conformance NSObject((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LODWORD(v18) = specialized Set.contains(_:)(a1, v19);
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend(a2, sel_originatorHandle);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_isEquivalentToHandle_, a1);

  }
  else
  {
    v22 = 0;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD646740;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  v24 = a1;
  v25 = String.init<A>(reflecting:)();
  v27 = v26;
  *(_QWORD *)(v23 + 56) = v4;
  v28 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v23 + 64) = v28;
  *(_QWORD *)(v23 + 32) = v25;
  *(_QWORD *)(v23 + 40) = v27;
  v29 = String.init<A>(reflecting:)();
  *(_QWORD *)(v23 + 96) = v4;
  *(_QWORD *)(v23 + 104) = v28;
  *(_QWORD *)(v23 + 72) = v29;
  *(_QWORD *)(v23 + 80) = v30;
  v31 = String.init<A>(reflecting:)();
  *(_QWORD *)(v23 + 136) = v4;
  *(_QWORD *)(v23 + 144) = v28;
  *(_QWORD *)(v23 + 112) = v31;
  *(_QWORD *)(v23 + 120) = v32;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  return (v18 | v22) & 1;
}

uint64_t TUConversation.reportUUID.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_report);
  v2 = objc_msgSend(v1, sel_conversationID);

  if (v2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_33_0();
  v3 = OUTLINED_FUNCTION_32_59();
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

void TUConversation.collaborations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  char v8;
  id v9;
  unint64_t v10;
  uint64_t v11;

  v0 = OUTLINED_FUNCTION_239_0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 272))() & 1) != 0)
  {
    v5 = TUConversation.highlight.getter();
    if (v5)
    {
      v6 = v5;
      v7 = (unint64_t)TUConversation.highlightState.getter();
      if (v7 >= 3)
        v8 = 3;
      else
        v8 = 0x201u >> (8 * v7);
      v9 = v6;
      Collaboration.init(highlight:state:)(v9, v8, v4);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Collaboration>);
      v10 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
      outlined init with take of Collaboration(v4, v11 + v10);

    }
  }
  OUTLINED_FUNCTION_91();
}

id TUConversation.highlight.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_conversationManager);

  v3 = objc_msgSend(v2, sel_collaborationForConversation_, v0);
  return v3;
}

id TUConversation.highlightState.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v1, sel_conversationManager);

  v3 = objc_msgSend(v2, sel_collaborationStateForConversation_, v0);
  return v3;
}

id TUConversation.videoEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isVideoEnabled);
}

void TUConversation.bundleIdentifier.getter(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_provider);
  v2 = outlined bridged method (ob) of @objc NSBundle.bundleIdentifier.getter(v1);
  if (!v3)
  {
    v4 = OUTLINED_FUNCTION_25_1(v2, sel_provider);
    v5 = objc_msgSend(v4, sel_identifier);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  OUTLINED_FUNCTION_18();
}

void TUConversation.messagesGroupPhoto.getter()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = outlined bridged method (pb) of @objc TUConversation.messagesGroupPhotoData.getter(v0);
  if (v2 >> 60 != 15)
  {
    v3 = v1;
    v4 = v2;
    OUTLINED_FUNCTION_17_8(v1, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    UIImage.__allocating_init(data:)(v3, v4);
  }
  OUTLINED_FUNCTION_0();
}

void protocol witness for Conversation.uuid.getter in conformance TUConversation()
{
  @nonobjc TUConversation.uuid.getter();
}

void @nonobjc TUConversation.uuid.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

}

void protocol witness for Conversation.initiator.getter in conformance TUConversation()
{
  @nonobjc TUConversation.initiator.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.initiator.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_initiator);
}

uint64_t protocol witness for Conversation.reportUUID.getter in conformance TUConversation()
{
  return TUConversation.reportUUID.getter();
}

uint64_t protocol witness for Conversation.messagesGroupUUID.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.messagesGroupUUID.getter();
}

uint64_t @nonobjc TUConversation.messagesGroupUUID.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = objc_msgSend(v0, sel_messagesGroupUUID);
  if (v1)
  {
    v2 = v1;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_33_0();
  v3 = OUTLINED_FUNCTION_32_59();
  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

void protocol witness for Conversation.messagesGroupName.getter in conformance TUConversation()
{
  @nonobjc TUConversation.messagesGroupName.getter();
}

void @nonobjc TUConversation.messagesGroupName.getter()
{
  void *v0;

  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_messagesGroupName);
}

void protocol witness for Conversation.messagesGroupPhoto.getter in conformance TUConversation()
{
  TUConversation.messagesGroupPhoto.getter();
}

void protocol witness for Conversation.state.getter in conformance TUConversation()
{
  @nonobjc TUConversation.state.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.state.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_state);
}

id protocol witness for Conversation.letMeInRequestState.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.letMeInRequestState.getter();
}

id @nonobjc TUConversation.letMeInRequestState.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_letMeInRequestState);
}

id protocol witness for Conversation.avcSessionToken.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.avcSessionToken.getter();
}

id @nonobjc TUConversation.avcSessionToken.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_avcSessionToken);
}

void protocol witness for Conversation.avcSessionIdentifier.getter in conformance TUConversation()
{
  @nonobjc TUConversation.avcSessionIdentifier.getter();
}

void @nonobjc TUConversation.avcSessionIdentifier.getter()
{
  void *v0;

  outlined bridged method (pb) of @objc TUConversationLink.displayName.getter(v0, (SEL *)&selRef_avcSessionIdentifier);
}

void protocol witness for Conversation.remoteMembers.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_remoteMembers, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  OUTLINED_FUNCTION_0();
}

void protocol witness for Conversation.mergedRemoteMembers.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_mergedRemoteMembers, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
  OUTLINED_FUNCTION_0();
}

void protocol witness for Conversation.activeRemoteParticipants.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_activeRemoteParticipants, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
}

void protocol witness for Conversation.activeLightweightParticipants.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_activeLightweightParticipants, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
}

void protocol witness for Conversation.mergedActiveRemoteParticipants.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_mergedActiveRemoteParticipants, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant, 0x1E0DBD2B0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationParticipant and conformance NSObject);
  OUTLINED_FUNCTION_0();
}

void protocol witness for Conversation.pendingMembers.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_pendingMembers, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
}

void protocol witness for Conversation.rejectedMembers.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_rejectedMembers, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
}

void protocol witness for Conversation.lightweightMembers.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_lightweightMembers, (unint64_t *)&lazy cache variable for type metadata for TUConversationMember, 0x1E0DBD2A0, (unint64_t *)&lazy protocol witness table cache variable for type TUConversationMember and conformance NSObject);
}

void protocol witness for Conversation.otherInvitedHandles.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_otherInvitedHandles, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, (unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
}

uint64_t protocol witness for Conversation.isRestricted.getter in conformance TUConversation()
{
  char v0;

  TUConversation.isRestricted.getter();
  return v0 & 1;
}

void protocol witness for Conversation.localMember.getter in conformance TUConversation()
{
  @nonobjc TUConversation.localMember.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.localMember.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_localMember);
}

id protocol witness for Conversation.localParticipantAssociation.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localParticipantAssociation.getter();
}

id @nonobjc TUConversation.localParticipantAssociation.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_localParticipantAssociation);
}

unint64_t protocol witness for Conversation.isOneToOneHandoffOngoing.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isOneToOneHandoffOngoing.getter() & 1;
}

id @nonobjc TUConversation.isOneToOneHandoffOngoing.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isOneToOneHandoffOngoing);
}

id protocol witness for Conversation.handoffEligibility.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.handoffEligibility.getter();
}

id @nonobjc TUConversation.handoffEligibility.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_handoffEligibility);
}

void protocol witness for Conversation.isOneToOneModeEnabled.getter in conformance TUConversation()
{
  @nonobjc TUConversation.isOneToOneModeEnabled.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.isOneToOneModeEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isOneToOneModeEnabled);
}

unint64_t protocol witness for Conversation.isLocallyCreated.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isLocallyCreated.getter() & 1;
}

id @nonobjc TUConversation.isLocallyCreated.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isLocallyCreated);
}

void protocol witness for Conversation.link.getter in conformance TUConversation()
{
  @nonobjc TUConversation.link.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.link.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_link);
}

uint64_t protocol witness for Conversation.participantListDisplayName.getter in conformance TUConversation(uint64_t a1)
{
  return TUConversation.participantListDisplayName.getter(a1);
}

id protocol witness for Conversation.localParticipantIdentifier.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.localParticipantIdentifier.getter();
}

id @nonobjc TUConversation.localParticipantIdentifier.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_localParticipantIdentifier);
}

unint64_t protocol witness for Conversation.ignoreLMIRequests.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.ignoreLMIRequests.getter() & 1;
}

id @nonobjc TUConversation.ignoreLMIRequests.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_ignoreLMIRequests);
}

unint64_t protocol witness for Conversation.isVideoEnabled.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isVideoEnabled.getter() & 1;
}

id @nonobjc TUConversation.isVideoEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isVideoEnabled);
}

void protocol witness for Conversation.bundleIdentifier.getter in conformance TUConversation(uint64_t a1)
{
  TUConversation.bundleIdentifier.getter(a1);
}

void protocol witness for Conversation.avMode.getter in conformance TUConversation()
{
  @nonobjc TUConversation.avMode.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.avMode.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_avMode);
}

id protocol witness for Conversation.presentationContext.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.presentationContext.getter();
}

id @nonobjc TUConversation.presentationContext.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_presentationContext);
}

void protocol witness for Conversation.resolvedAudioVideoMode.getter in conformance TUConversation()
{
  @nonobjc TUConversation.resolvedAudioVideoMode.getter();
  OUTLINED_FUNCTION_0();
}

id @nonobjc TUConversation.resolvedAudioVideoMode.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_resolvedAudioVideoMode);
}

id protocol witness for Conversation.stagedSharePlayActivity.getter in conformance TUConversation()
{
  return TUConversation.stagedSharePlayActivity.getter();
}

unint64_t protocol witness for Conversation.shouldShowInvitationRingingUIForAnyHandleType.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.shouldShowInvitationRingingUIForAnyHandleType.getter() & 1;
}

id @nonobjc TUConversation.shouldShowInvitationRingingUIForAnyHandleType.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_shouldShowInvitationRingingUIForAnyHandleType);
}

void protocol witness for Conversation.collaborations.getter in conformance TUConversation()
{
  TUConversation.collaborations.getter();
  OUTLINED_FUNCTION_0();
}

id protocol witness for Conversation.joinedActivitySession.getter in conformance TUConversation()
{
  return @nonobjc TUConversation.joinedActivitySession.getter();
}

id @nonobjc TUConversation.joinedActivitySession.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_joinedActivitySession);
}

void protocol witness for Conversation.activitySessions.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_activitySessions, (unint64_t *)&lazy cache variable for type metadata for TUConversationActivitySession, 0x1E0DBD278, &lazy protocol witness table cache variable for type TUConversationActivitySession and conformance NSObject);
  OUTLINED_FUNCTION_0();
}

unint64_t protocol witness for Conversation.isCameraMixedWithScreen.getter in conformance TUConversation()
{
  return (unint64_t)@nonobjc TUConversation.isCameraMixedWithScreen.getter() & 1;
}

id @nonobjc TUConversation.isCameraMixedWithScreen.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isCameraMixedWithScreen);
}

void protocol witness for Conversation.screenSharingRequests.getter in conformance TUConversation()
{
  @nonobjc TUConversation.remoteMembers.getter((const char **)&selRef_screenSharingRequests, &lazy cache variable for type metadata for TUScreenSharingRequest, 0x1E0DBD390, &lazy protocol witness table cache variable for type TUScreenSharingRequest and conformance NSObject);
  OUTLINED_FUNCTION_0();
}

void @nonobjc TUConversation.remoteMembers.getter(const char **a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  id v6;

  v6 = OUTLINED_FUNCTION_25_1((uint64_t)a1, *a1);
  _sSo8NSObjectCMaTm_0(0, a2);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject(a4, a2);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  OUTLINED_FUNCTION_91();
}

uint64_t Array<A>.sortedActivities.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = a1 + 32;
    do
    {
      outlined init with copy of IDSLookupManager(v4, (uint64_t)&v21);
      __swift_project_boxed_opaque_existential_1(&v21, v22);
      v5 = (void *)OUTLINED_FUNCTION_6_115();
      if (v5 && (v6 = v5, v7 = objc_msgSend(v5, sel_state), v6, v7 == (id)2))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
      }
      else
      {
        outlined init with take of Notice(&v21, (uint64_t)v18);
        v8 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v8 = v23;
        }
        v9 = *(_QWORD *)(v8 + 16);
        if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v10 = v19;
        v11 = v20;
        v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
        MEMORY[0x1E0C80A78](v12);
        OUTLINED_FUNCTION_77();
        v15 = v14 - v13;
        (*(void (**)(uint64_t))(v16 + 16))(v14 - v13);
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v15, &v23, v10, v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    v2 = v23;
  }
  OUTLINED_FUNCTION_13_3();
  *(_QWORD *)&v21 = v2;
  swift_retain();
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v21);
  swift_release();
  return v21;
}

void specialized Set._Variant.filter(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  v5 = type metadata accessor for UUID();
  v42 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v40 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)v37 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v46 = MEMORY[0x1E0DEE9E8];
    OUTLINED_FUNCTION_86();
    v37[5] = __CocoaSet.makeIterator()();
    v13 = __CocoaSet.Iterator.next()();
    if (v13)
    {
      v14 = v13;
      v37[1] = v2;
      v37[3] = _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for TUScreenSharingRequest);
      v37[2] = MEMORY[0x1E0DEE9B0] + 8;
      v37[4] = a2;
      v15 = v40;
      while (1)
      {
        v44 = v14;
        swift_dynamicCast();
        v16 = v45;
        v17 = *(_QWORD *)(a2 + 16);
        v38 = v45;
        if (v17)
        {
          v18 = v42;
          v19 = a2 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
          OUTLINED_FUNCTION_86();
          v43 = v16;
          v41 = *(_QWORD *)(v18 + 72);
          a2 = *(_QWORD *)(v18 + 16);
          while (1)
          {
            ((void (*)(uint64_t, unint64_t, uint64_t))a2)(v12, v19, v5);
            OUTLINED_FUNCTION_86_0(v12, 0);
            if (__swift_getEnumTagSinglePayload(v12, 1, v5) == 1)
              break;
            v20 = v42;
            v21 = v39;
            (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v39, v12, v5);
            v22 = objc_msgSend(v43, sel_UUID);
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            LOBYTE(v22) = static UUID.== infix(_:_:)();
            v23 = *(void (**)(char *, uint64_t))(v20 + 8);
            v23(v15, v5);
            v23(v21, v5);
            if ((v22 & 1) != 0)
            {

              OUTLINED_FUNCTION_23_87();
              goto LABEL_25;
            }
            v19 += v41;
            if (!--v17)
              goto LABEL_11;
          }
        }
        else
        {
          OUTLINED_FUNCTION_86();
          v24 = v16;
LABEL_11:
          OUTLINED_FUNCTION_86_0(v12, 1);
        }

        OUTLINED_FUNCTION_23_87();
        v25 = v45;
        v26 = v46;
        v27 = *(_QWORD *)(v46 + 16);
        if (*(_QWORD *)(v46 + 24) <= v27)
        {
          specialized _NativeSet.resize(capacity:)(v27 + 1);
          v26 = v46;
        }
        v28 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v26 + 40)) & ~(-1 << *(_BYTE *)(v26 + 32));
        if (((-1 << v28) & ~*(_QWORD *)(v26 + 56 + 8 * (v28 >> 6))) == 0)
          break;
        OUTLINED_FUNCTION_31_9();
LABEL_23:
        OUTLINED_FUNCTION_28_67(v29);
        *(_QWORD *)(v35 + 8 * v36) = v25;
        ++*(_QWORD *)(v26 + 16);
LABEL_25:
        v14 = __CocoaSet.Iterator.next()();
        if (!v14)
          goto LABEL_26;
      }
      OUTLINED_FUNCTION_30_8();
      while (++v32 != v33 || (v31 & 1) == 0)
      {
        v34 = v32 == v33;
        if (v32 == v33)
          v32 = 0;
        v31 |= v34;
        if (*(_QWORD *)(v30 + 8 * v32) != -1)
        {
          OUTLINED_FUNCTION_28_6();
          goto LABEL_23;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_26:
      swift_bridgeObjectRelease_n();
      swift_release();
    }
  }
  else
  {
    OUTLINED_FUNCTION_86();
    specialized _NativeSet.filter(_:)(a1, a2);
    swift_bridgeObjectRelease();
  }
}

uint64_t partial apply for closure #1 in Conversation.displayableActiveParticipants.getter(void **a1)
{
  uint64_t *v1;

  return closure #1 in Conversation.displayableActiveParticipants.getter(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t specialized _NativeSet.filter(_:)(uint64_t isStackAllocationSafe, char a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v7 = (_QWORD *)((char *)v13 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v7);
    specialized closure #1 in _NativeSet.filter(_:)(v7, v6, v4, a2 & 1);
    v9 = v8;
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v10 = (uint64_t *)swift_slowAlloc();
    specialized UnsafeMutablePointer.assign(repeating:count:)(0, v6, v10);
    specialized closure #1 in _NativeSet.filter(_:)(v10, v6, v4, a2 & 1);
    v9 = v11;
    swift_release();
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }
  return v9;
}

void specialized closure #1 in _NativeSet.filter(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v19;

  v19 = a2;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      if ((a4 & 1) == 0)
        goto LABEL_22;
      goto LABEL_21;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v12)
      goto LABEL_25;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_25;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_25;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
    if ((a4 & 1) != 0)
    {
LABEL_21:
      if ((objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v14), sel_isOtherInvitedHandle, v19) & 1) == 0)
        goto LABEL_22;
    }
    else
    {
LABEL_22:
      *(uint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_25:
        swift_retain();
        specialized _NativeSet.extractSubset(using:count:)(a1, v19, v6, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_25;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_25;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  Swift::Int v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  id v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v41;
  id v42;
  char *v43;
  int v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  Swift::Int v55;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  Swift::Int v69;
  char *v70;
  id v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  Swift::Int *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  Swift::Int v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  unint64_t v141;
  uint64_t v142;
  Swift::Int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  Swift::Int v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  _QWORD v156[3];
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v162 = type metadata accessor for Date();
  v155 = *(_QWORD *)(v162 - 8);
  v3 = MEMORY[0x1E0C80A78](v162);
  v154 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v153 = (char *)&v143 - v5;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_144;
    if (v6)
      specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v6, 1, (uint64_t *)a1);
    return;
  }
  v8 = v7;
  v152 = v1;
  specialized static Array._allocateUninitialized(_:)(v6 / 2);
  v144 = v9;
  v151 = v10;
  v145 = v6;
  if (v6 <= 0)
    goto LABEL_108;
  v143 = v8;
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = v6;
  while (1)
  {
    v14 = v11++;
    v146 = -40;
    v149 = v14;
    if (v11 < v13)
    {
      v15 = *(_QWORD *)a1;
      outlined init with copy of IDSLookupManager(*(_QWORD *)a1 + 40 * v11, (uint64_t)&v159);
      v148 = v15;
      outlined init with copy of IDSLookupManager(v15 + 40 * v14, (uint64_t)v156);
      v16 = v160;
      v17 = v161;
      __swift_project_boxed_opaque_existential_1(&v159, v160);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v16, v17);
      v147 = v13;
      if (v18)
      {
        v19 = (void *)v18;
        v20 = v157;
        v21 = v158;
        __swift_project_boxed_opaque_existential_1(v156, v157);
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
        if (v22)
        {
          v23 = (void *)v22;
          v24 = objc_msgSend(v19, sel_timestamp);
          v25 = v153;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          v26 = objc_msgSend(v23, sel_timestamp);
          v27 = v154;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          LODWORD(v150) = static Date.> infix(_:_:)();
          v28 = *(void (**)(char *, uint64_t))(v155 + 8);
          v29 = v162;
          v28(v27, v162);
          v30 = v25;
          v13 = v147;
          v28(v30, v29);
        }
        else
        {

          LODWORD(v150) = 1;
        }
      }
      else
      {
        LODWORD(v150) = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
      v14 = v149;
      v11 = v149 + 2;
      if (v149 + 2 < v13)
      {
        v31 = v148 + 40 * v149 + 40;
        while (1)
        {
          outlined init with copy of IDSLookupManager(v31 + 40, (uint64_t)&v159);
          outlined init with copy of IDSLookupManager(v31, (uint64_t)v156);
          v32 = v160;
          v33 = v161;
          __swift_project_boxed_opaque_existential_1(&v159, v160);
          v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 104))(v32, v33);
          if (v34)
          {
            v35 = (void *)v34;
            v36 = v157;
            v37 = v158;
            __swift_project_boxed_opaque_existential_1(v156, v157);
            v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 104))(v36, v37);
            if (v38)
            {
              v39 = (void *)v38;
              v40 = objc_msgSend(v35, sel_timestamp);
              v41 = v153;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              v42 = objc_msgSend(v39, sel_timestamp);
              v43 = v154;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              v44 = static Date.> infix(_:_:)();
              v45 = *(void (**)(char *, uint64_t))(v155 + 8);
              v46 = v43;
              v13 = v147;
              v47 = v162;
              v45(v46, v162);
              v45(v41, v47);
            }
            else
            {

              v44 = 1;
            }
          }
          else
          {
            v44 = 0;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
          if (((v150 ^ v44) & 1) != 0)
            break;
          ++v11;
          v31 += 40;
          if (v11 >= v13)
          {
            v11 = v13;
            break;
          }
        }
        v14 = v149;
      }
      if ((v150 & 1) != 0)
      {
        if (v11 < v14)
          goto LABEL_145;
        if (v14 < v11)
        {
          v48 = v146 + 40 * v11;
          v49 = 40 * v14;
          v50 = v11;
          do
          {
            if (v14 != --v50)
            {
              if (!v148)
                goto LABEL_151;
              v51 = v148 + v49;
              v52 = v148 + v48;
              outlined init with take of Notice((__int128 *)(v148 + v49), (uint64_t)&v159);
              v53 = *(_QWORD *)(v52 + 32);
              v54 = *(_OWORD *)(v52 + 16);
              *(_OWORD *)v51 = *(_OWORD *)v52;
              *(_OWORD *)(v51 + 16) = v54;
              *(_QWORD *)(v51 + 32) = v53;
              outlined init with take of Notice(&v159, v52);
            }
            ++v14;
            v48 -= 40;
            v49 += 40;
          }
          while (v14 < v50);
          v14 = v149;
          v13 = v147;
        }
      }
    }
    if (v11 < v13)
    {
      if (__OFSUB__(v11, v14))
        goto LABEL_143;
      if (v11 - v14 < v143)
      {
        if (__OFADD__(v14, v143))
          goto LABEL_146;
        if (v14 + v143 >= v13)
          v55 = v13;
        else
          v55 = v14 + v143;
        if (v55 < v14)
        {
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (v11 != v55)
        {
          v147 = v12;
          v148 = v55;
          v56 = v146 + 40 * v11;
          do
          {
            v57 = v14;
            v150 = v56;
            v58 = v56;
            while (1)
            {
              v59 = *(_QWORD *)a1 + v58;
              outlined init with copy of IDSLookupManager(v59 + 40, (uint64_t)&v159);
              outlined init with copy of IDSLookupManager(v59, (uint64_t)v156);
              v60 = v160;
              v61 = v161;
              __swift_project_boxed_opaque_existential_1(&v159, v160);
              v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 104))(v60, v61);
              if (!v62)
                break;
              v63 = (void *)v62;
              v64 = v157;
              v65 = v158;
              __swift_project_boxed_opaque_existential_1(v156, v157);
              v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 104))(v64, v65);
              if (v66)
              {
                v67 = (void *)v66;
                v68 = objc_msgSend(v63, sel_timestamp);
                v69 = v11;
                v70 = v153;
                static Date._unconditionallyBridgeFromObjectiveC(_:)();

                v71 = objc_msgSend(v67, sel_timestamp);
                v72 = v154;
                static Date._unconditionallyBridgeFromObjectiveC(_:)();

                LOBYTE(v71) = static Date.> infix(_:_:)();
                v73 = *(void (**)(char *, uint64_t))(v155 + 8);
                v74 = v162;
                v73(v72, v162);
                v75 = v70;
                v11 = v69;
                v73(v75, v74);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
                if ((v71 & 1) == 0)
                  goto LABEL_50;
              }
              else
              {

                __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
              }
              v76 = *(_QWORD *)a1;
              if (!*(_QWORD *)a1)
                goto LABEL_149;
              v77 = v76 + v58;
              outlined init with take of Notice((__int128 *)(v76 + v58 + 40), (uint64_t)&v159);
              v78 = *(_OWORD *)(v77 + 16);
              *(_OWORD *)(v77 + 40) = *(_OWORD *)v77;
              *(_OWORD *)(v77 + 56) = v78;
              *(_QWORD *)(v77 + 72) = *(_QWORD *)(v77 + 32);
              outlined init with take of Notice(&v159, v77);
              v58 -= 40;
              if (v11 == ++v57)
                goto LABEL_50;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
LABEL_50:
            ++v11;
            v14 = v149;
            v56 = v150 + 40;
          }
          while (v11 != v148);
          v11 = v148;
          v12 = v147;
        }
      }
    }
    if (v11 < v14)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v12 + 16) + 1, 1, (char *)v12);
      v12 = v134;
    }
    v80 = *(_QWORD *)(v12 + 16);
    v79 = *(_QWORD *)(v12 + 24);
    v81 = v80 + 1;
    if (v80 >= v79 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, v80 + 1, 1, (char *)v12);
      v12 = v135;
    }
    *(_QWORD *)(v12 + 16) = v81;
    v150 = v12 + 32;
    v82 = (Swift::Int *)(v12 + 32 + 16 * v80);
    *v82 = v14;
    v82[1] = v11;
    if (v80)
      break;
    v81 = 1;
LABEL_101:
    v13 = *(_QWORD *)(a1 + 8);
    if (v11 >= v13)
      goto LABEL_109;
  }
  v83 = v150;
  while (1)
  {
    v84 = v81 - 1;
    if (v81 >= 4)
    {
      v89 = v83 + 16 * v81;
      v90 = *(_QWORD *)(v89 - 64);
      v91 = *(_QWORD *)(v89 - 56);
      v95 = __OFSUB__(v91, v90);
      v92 = v91 - v90;
      if (v95)
        goto LABEL_127;
      v94 = *(_QWORD *)(v89 - 48);
      v93 = *(_QWORD *)(v89 - 40);
      v95 = __OFSUB__(v93, v94);
      v87 = v93 - v94;
      v88 = v95;
      if (v95)
        goto LABEL_128;
      v96 = v81 - 2;
      v97 = (uint64_t *)(v83 + 16 * (v81 - 2));
      v99 = *v97;
      v98 = v97[1];
      v95 = __OFSUB__(v98, v99);
      v100 = v98 - v99;
      if (v95)
        goto LABEL_129;
      v95 = __OFADD__(v87, v100);
      v101 = v87 + v100;
      if (v95)
        goto LABEL_131;
      if (v101 >= v92)
      {
        v119 = (uint64_t *)(v83 + 16 * v84);
        v121 = *v119;
        v120 = v119[1];
        v95 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v95)
          goto LABEL_137;
        v112 = v87 < v122;
        goto LABEL_90;
      }
    }
    else
    {
      if (v81 != 3)
      {
        v113 = *(_QWORD *)(v12 + 32);
        v114 = *(_QWORD *)(v12 + 40);
        v95 = __OFSUB__(v114, v113);
        v106 = v114 - v113;
        v107 = v95;
        goto LABEL_84;
      }
      v86 = *(_QWORD *)(v12 + 32);
      v85 = *(_QWORD *)(v12 + 40);
      v95 = __OFSUB__(v85, v86);
      v87 = v85 - v86;
      v88 = v95;
    }
    if ((v88 & 1) != 0)
      goto LABEL_130;
    v96 = v81 - 2;
    v102 = (uint64_t *)(v83 + 16 * (v81 - 2));
    v104 = *v102;
    v103 = v102[1];
    v105 = __OFSUB__(v103, v104);
    v106 = v103 - v104;
    v107 = v105;
    if (v105)
      goto LABEL_132;
    v108 = (uint64_t *)(v83 + 16 * v84);
    v110 = *v108;
    v109 = v108[1];
    v95 = __OFSUB__(v109, v110);
    v111 = v109 - v110;
    if (v95)
      goto LABEL_134;
    if (__OFADD__(v106, v111))
      goto LABEL_136;
    if (v106 + v111 >= v87)
    {
      v112 = v87 < v111;
LABEL_90:
      if (v112)
        v84 = v96;
      goto LABEL_92;
    }
LABEL_84:
    if ((v107 & 1) != 0)
      goto LABEL_133;
    v115 = (uint64_t *)(v83 + 16 * v84);
    v117 = *v115;
    v116 = v115[1];
    v95 = __OFSUB__(v116, v117);
    v118 = v116 - v117;
    if (v95)
      goto LABEL_135;
    if (v118 < v106)
      goto LABEL_101;
LABEL_92:
    v123 = v84 - 1;
    if (v84 - 1 >= v81)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    v124 = v11;
    v125 = (uint64_t *)a1;
    v126 = *(_QWORD *)a1;
    if (!*(_QWORD *)a1)
      goto LABEL_150;
    a1 = v12;
    v127 = (uint64_t *)(v83 + 16 * v123);
    v128 = v83;
    v129 = *v127;
    v130 = (_QWORD *)(v128 + 16 * v84);
    v131 = v130[1];
    v132 = v152;
    specialized _merge<A>(low:mid:high:buffer:by:)(v126 + 40 * *v127, v126 + 40 * *v130, v126 + 40 * v131, v151);
    v152 = v132;
    if (v132)
      break;
    if (v131 < v129)
      goto LABEL_124;
    if (v84 > *(_QWORD *)(a1 + 16))
      goto LABEL_125;
    *v127 = v129;
    v83 = v150;
    *(_QWORD *)(v150 + 16 * v123 + 8) = v131;
    v133 = *(_QWORD *)(a1 + 16);
    if (v84 >= v133)
      goto LABEL_126;
    v12 = a1;
    v81 = v133 - 1;
    memmove(v130, v130 + 2, 16 * (v133 - 1 - v84));
    *(_QWORD *)(a1 + 16) = v133 - 1;
    a1 = (uint64_t)v125;
    v11 = v124;
    if (v133 <= 2)
      goto LABEL_101;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v145 >= -1)
    goto LABEL_121;
  __break(1u);
LABEL_108:
  v12 = MEMORY[0x1E0DEE9D8];
  v81 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_109:
  if (v81 >= 2)
  {
    v136 = *(_QWORD *)a1;
    v137 = v152;
    while (1)
    {
      v138 = v81 - 2;
      if (v81 < 2)
        break;
      if (!v136)
        goto LABEL_152;
      v139 = *(_QWORD *)(v12 + 32 + 16 * v138);
      a1 = *(_QWORD *)(v12 + 32 + 16 * (v81 - 1) + 8);
      specialized _merge<A>(low:mid:high:buffer:by:)(v136 + 40 * v139, v136 + 40 * *(_QWORD *)(v12 + 32 + 16 * (v81 - 1)), v136 + 40 * a1, v151);
      if (v137)
        goto LABEL_106;
      if (a1 < v139)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v12);
        v12 = v142;
      }
      if (v138 >= *(_QWORD *)(v12 + 16))
        goto LABEL_140;
      v140 = (uint64_t *)(v12 + 32 + 16 * v138);
      *v140 = v139;
      v140[1] = a1;
      v141 = *(_QWORD *)(v12 + 16);
      if (v81 > v141)
        goto LABEL_141;
      memmove((void *)(v12 + 32 + 16 * (v81 - 1)), (const void *)(v12 + 32 + 16 * v81), 16 * (v141 - v81));
      *(_QWORD *)(v12 + 16) = v141 - 1;
      v81 = v141 - 1;
      if (v141 <= 2)
        goto LABEL_120;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
LABEL_120:
  swift_bridgeObjectRelease();
  if (v145 >= -1)
  {
LABEL_121:
    *(_QWORD *)(v144 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
}

uint64_t partial apply for closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(void **a1)
{
  uint64_t *v1;

  return closure #1 in Conversation.untrustedActiveLightweightParticipants.getter(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t outlined init with take of Collaboration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Collaboration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of Conversation.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Conversation.initiator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Conversation.reportUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Conversation.messagesGroupUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Conversation.messagesGroupName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Conversation.messagesGroupPhoto.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Conversation.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Conversation.letMeInRequestState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Conversation.avcSessionToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Conversation.avcSessionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Conversation.remoteMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Conversation.mergedRemoteMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Conversation.activeRemoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Conversation.activeLightweightParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Conversation.mergedActiveRemoteParticipants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Conversation.pendingMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Conversation.rejectedMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Conversation.lightweightMembers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Conversation.otherInvitedHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Conversation.isRestricted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Conversation.localMember.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Conversation.localParticipantAssociation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Conversation.isOneToOneHandoffOngoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Conversation.handoffEligibility.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Conversation.isOneToOneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Conversation.isLocallyCreated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Conversation.link.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Conversation.participantListDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Conversation.localParticipantIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Conversation.ignoreLMIRequests.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Conversation.isVideoEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Conversation.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Conversation.avMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Conversation.presentationContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Conversation.resolvedAudioVideoMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of Conversation.stagedSharePlayActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of Conversation.shouldShowInvitationRingingUIForAnyHandleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Conversation.collaborations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Conversation.joinedActivitySession.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of Conversation.activitySessions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of Conversation.isCameraMixedWithScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Conversation.allHandles(excludeOtherInvitedHandles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of Conversation.containsPending(participantWithHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of Conversation.screenSharingRequests.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Conversation.currentScreenSharingRequest.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return outlined init with take of Notice(&v12, v10 + 40 * a1 + 32);
}

void *SharedContentVideoView.ViewModel.init(screenProvider:screenTransform:)@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of Any?(a1, a3, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  return memcpy((void *)(a3 + 40), a2, 0x80uLL);
}

BOOL static SharedContentVideoView.ViewModel.== infix(_:_:)()
{
  Swift::Int v0;

  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_11_110();
  v0 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_5_1();
  SharedContentVideoView.ViewModel.hash(into:)();
  return v0 == OUTLINED_FUNCTION_4_6();
}

id SharedContentVideoView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharedContentVideoView.configure(with:)(uint64_t a1)
{
  char *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel];
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?((uint64_t)v4, (uint64_t)v25, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  v5 = v26;
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v25, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  OUTLINED_FUNCTION_16_97();
  if (v5 == 1)
  {
    OUTLINED_FUNCTION_14_104();
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v4 + 3);
  if (v7 >= 2)
  {
    v10 = *((_QWORD *)v4 + 4);
    v11 = __swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
    v12 = *(_QWORD *)(v7 - 8);
    MEMORY[0x1E0C80A78](v11);
    v14 = (char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v10 + 8))(v7, v10);
    v9 = v15 & 1;
    (*(void (**)(char *, unint64_t))(v12 + 8))(v14, v7);
  }
  else
  {
    v8 = 0;
    v9 = 1;
  }
  outlined init with copy of FeatureEligibility?((uint64_t)v25, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v16 = v23;
  if (!v23)
  {
    OUTLINED_FUNCTION_14_104();
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    if ((v9 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  v17 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  v20 = v19;
  OUTLINED_FUNCTION_14_104();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  if ((v9 & 1) != 0)
  {
    if ((v20 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v20 & 1) != 0 || v8 != v18)
LABEL_3:
    SharedContentVideoView.registerVideoLayers(with:)(a1);
LABEL_4:
  OUTLINED_FUNCTION_16_97();
  swift_beginAccess();
  outlined assign with take of Participant?((uint64_t)v25, (uint64_t)v4, &demangling cache variable for type metadata for SharedContentVideoView.ViewModel?);
  swift_endAccess();
  v6 = objc_msgSend(v2, sel_layer);
  MEMORY[0x1E0C80A78](v6);
  CALayer.withoutActions(_:)((void (*)(id))partial apply for closure #1 in closure #1 in SharedContentVideoView.configure(with:));

}

void SharedContentVideoView.registerVideoLayers(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView), sel_layer);
    (*(void (**)(void))(v2 + 120))();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
}

void SharedContentVideoView.ViewModel.screenProvider.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of FeatureEligibility?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

void SharedContentVideoView.ViewModel.screenProvider.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of Participant?(a1, v1, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
}

uint64_t (*SharedContentVideoView.ViewModel.screenProvider.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *SharedContentVideoView.ViewModel.screenTransform.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_6_11(a1, (const void *)(v1 + 40));
}

void *SharedContentVideoView.ViewModel.screenTransform.setter(const void *a1)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_6_11((void *)(v1 + 40), a1);
}

uint64_t (*SharedContentVideoView.ViewModel.screenTransform.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double SharedContentVideoView.ViewModel.contentsRect.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  outlined init with copy of FeatureEligibility?(v0, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v1 = v5;
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 64))(v7, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    outlined init with take of Any?((uint64_t)v7, (uint64_t)v4, &demangling cache variable for type metadata for CGRect?);
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  }
  return 0.0;
}

void SharedContentVideoView.init()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  _BYTE *v4;
  char *v5;
  char *v6;
  char *v7;
  void *v8;
  objc_super v9;
  objc_super v10;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  v3 = (objc_class *)OUTLINED_FUNCTION_12_112();
  v4 = objc_allocWithZone(v3);
  v4[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v10.receiver = v4;
  v10.super_class = v3;
  v5 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = &v5[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = 1;
  bzero(v6 + 32, 0x88uLL);

  v9.receiver = v5;
  v9.super_class = v1;
  v7 = (char *)OUTLINED_FUNCTION_0_98(&v9, sel_initWithFrame_);
  objc_msgSend(v7, sel_setClipsToBounds_, 1);
  v8 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView];
  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000021, 0x80000001BD699590, v8);
  objc_msgSend(v7, sel_addSubview_, v8);

  OUTLINED_FUNCTION_26_11();
}

void SharedContentVideoView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SharedContentVideoView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  _BYTE *v3;
  objc_super v4;

  v1 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  v2 = (objc_class *)OUTLINED_FUNCTION_12_112();
  v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v4.receiver = v3;
  v4.super_class = v2;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_0_98(&v4, sel_initWithFrame_);
  OUTLINED_FUNCTION_4_146(OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel);

  OUTLINED_FUNCTION_0_16();
  __break(1u);
}

id SharedContentVideoView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void SharedContentVideoView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  _BYTE *v3;
  objc_super v4;

  v1 = OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView;
  v2 = (objc_class *)OUTLINED_FUNCTION_12_112();
  v3 = objc_allocWithZone(v2);
  v3[OBJC_IVAR____TtC15ConversationKit26ParticipantVideoCameraView_style] = 1;
  v4.receiver = v3;
  v4.super_class = v2;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_0_98(&v4, sel_initWithFrame_);
  OUTLINED_FUNCTION_4_146(OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_viewModel);

  OUTLINED_FUNCTION_0_16();
  __break(1u);
}

Swift::Void __swiftcall SharedContentVideoView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  SharedContentVideoView._layout()();
}

uint64_t SharedContentVideoView._layout()()
{
  char *v0;
  void *v1;
  uint64_t result;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  void *v19;
  CGRect v20;
  CGRect v21;

  v1 = v0;
  objc_msgSend(v0, sel_bounds);
  result = CGRectIsInfinite(v20);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    result = CGRectIsEmpty(v21);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      v4 = v3;
      v6 = v5;
      if (one-time initialization token for shared != -1)
        swift_once();
      if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 296))() & 1) == 0)
        goto LABEL_19;
      v19 = v0;
      outlined bridged method (ob) of @objc CALayer.sublayers.getter(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView], sel_layer));
      if (v7)
        v8 = v7;
      else
        v8 = MEMORY[0x1E0DEE9D8];
      if ((unint64_t)v8 >> 62)
        goto LABEL_31;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_12:
        result = objc_opt_self();
        if (v9 >= 1)
        {
          v10 = (void *)result;
          v11 = 0;
          do
          {
            if ((v8 & 0xC000000000000001) != 0)
              v12 = (id)MEMORY[0x1C3B73D18](v11, v8);
            else
              v12 = *(id *)(v8 + 8 * v11 + 32);
            v13 = v12;
            ++v11;
            objc_msgSend(v10, sel_begin);
            objc_msgSend(v10, sel_setDisableActions_, 1);
            objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, v4, v6);
            objc_msgSend(v10, sel_commit);

          }
          while (v9 != v11);
          goto LABEL_18;
        }
        __break(1u);
      }
      else
      {
        while (1)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          v1 = v19;
LABEL_19:
          v14 = objc_msgSend(v1, sel_subviews);
          _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
          v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v15 >> 62)
          {
            swift_bridgeObjectRetain();
            v8 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v8)
              return swift_bridgeObjectRelease();
          }
          else
          {
            v8 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v8)
              return swift_bridgeObjectRelease();
          }
          if (v8 >= 1)
            break;
          __break(1u);
LABEL_31:
          swift_bridgeObjectRetain();
          v9 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v9)
            goto LABEL_12;
        }
        for (i = 0; i != v8; ++i)
        {
          if ((v15 & 0xC000000000000001) != 0)
            v17 = (id)MEMORY[0x1C3B73D18](i, v15);
          else
            v17 = *(id *)(v15 + 8 * i + 32);
          v18 = v17;
          objc_msgSend(v17, sel_setFrame_, 0.0, 0.0, v4, v6);

        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void closure #1 in closure #1 in SharedContentVideoView.configure(with:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[8];

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 296))() & 1) == 0)
  {
    v4 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit22SharedContentVideoView_screenSharingCameraView);
    v5 = objc_msgSend(v4, sel_layer);
    SharedContentVideoView.ViewModel.contentsRect.getter();
    objc_msgSend(v5, sel_setContentsRect_, 0.0, 0.0);

    v6 = objc_msgSend(v4, sel_layer);
    v7 = *(_OWORD *)(a2 + 56);
    v11[0] = *(_OWORD *)(a2 + 40);
    v11[1] = v7;
    v8 = *(_OWORD *)(a2 + 88);
    v11[2] = *(_OWORD *)(a2 + 72);
    v11[3] = v8;
    v9 = *(_OWORD *)(a2 + 120);
    v11[4] = *(_OWORD *)(a2 + 104);
    v11[5] = v9;
    v10 = *(_OWORD *)(a2 + 152);
    v11[6] = *(_OWORD *)(a2 + 136);
    v11[7] = v10;
    objc_msgSend(v6, sel_setTransform_, v11);

  }
}

id SharedContentVideoView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void SharedContentVideoView.ViewModel.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_11_110();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_26_11();
}

void SharedContentVideoView.ViewModel.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::UInt v4;
  char v5;
  char v6;
  double v7;
  double v8;
  uint64_t v9[16];

  v1 = v0;
  outlined init with copy of FeatureEligibility?(v0, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
  v2 = v9[3];
  if (!v9[3])
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ParticipantVideoProvider?);
    goto LABEL_5;
  }
  v3 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  if ((v6 & 1) != 0)
  {
LABEL_5:
    Hasher._combine(_:)(0);
    goto LABEL_6;
  }
  Hasher._combine(_:)(1u);
  Hasher._combine(_:)(v4);
LABEL_6:
  memcpy(v9, (const void *)(v1 + 40), sizeof(v9));
  CATransform3D.hash(into:)();
  SharedContentVideoView.ViewModel.contentsRect.getter();
  CGRect.hash(into:)(0.0, 0.0, v7, v8);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance SharedContentVideoView.ViewModel()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_11_110();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_26_11();
}

uint64_t outlined init with copy of SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SharedContentVideoView.ViewModel(a2, a1);
  return a2;
}

void partial apply for closure #1 in closure #1 in SharedContentVideoView.configure(with:)()
{
  uint64_t v0;

  closure #1 in closure #1 in SharedContentVideoView.configure(with:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void CGRect.hash(into:)()
{
  Swift::UInt64 v0;
  Swift::UInt64 v1;
  CGFloat Width;
  CGFloat Height;
  CGRect v4;
  CGRect v5;

  OUTLINED_FUNCTION_17_7();
  OUTLINED_FUNCTION_0_19(v1);
  OUTLINED_FUNCTION_0_19(v0);
  v4.origin.x = OUTLINED_FUNCTION_15_0();
  Width = CGRectGetWidth(v4);
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&Width);
  v5.origin.x = OUTLINED_FUNCTION_15_0();
  Height = CGRectGetHeight(v5);
  OUTLINED_FUNCTION_0_19(*(Swift::UInt64 *)&Height);
}

void outlined bridged method (ob) of @objc CALayer.sublayers.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_sublayers);

  if (v2)
  {
    _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for CALayer);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel;
  if (!lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for SharedContentVideoView.ViewModel, &type metadata for SharedContentVideoView.ViewModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SharedContentVideoView.ViewModel and conformance SharedContentVideoView.ViewModel);
  }
  return result;
}

uint64_t type metadata accessor for SharedContentVideoView()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x80uLL);
  return a1;
}

uint64_t assignWithCopy for SharedContentVideoView.ViewModel(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
  *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
  *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  return a1;
}

uint64_t assignWithTake for SharedContentVideoView.ViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedContentVideoView.ViewModel(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 168))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedContentVideoView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedContentVideoView.ViewModel()
{
  return &type metadata for SharedContentVideoView.ViewModel;
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_32;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter())
  {
    v18 = v3;
    v5 = 0;
    v21 = v3 & 0xFFFFFFFFFFFFFF8;
    v22 = v3 & 0xC000000000000001;
    v19 = i;
    v23 = a2 & 0xC000000000000001;
    v20 = v3 + 32;
    while (1)
    {
      if (v22)
      {
        v6 = (id)MEMORY[0x1C3B73D18](v5, v18);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v21 + 16))
          goto LABEL_30;
        v6 = *(id *)(v20 + 8 * v5);
      }
      v7 = v6;
      if (__OFADD__(v5++, 1))
        goto LABEL_31;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = _CocoaArrayWrapper.endIndex.getter();
        if (!v9)
          goto LABEL_22;
      }
      else
      {
        v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v9)
          goto LABEL_22;
      }
      v10 = v23 ? (id)MEMORY[0x1C3B73D18](0, a2) : *(id *)(a2 + 32);
      v3 = (uint64_t)v10;
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v11 = static NSObject.== infix(_:_:)();

      if ((v11 & 1) == 0)
        break;
LABEL_13:

      swift_bridgeObjectRelease();
LABEL_23:
      if (v5 == v19)
      {
        v16 = v24;
        goto LABEL_34;
      }
    }
    if (v9 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_23;
    }
    v12 = 5;
    while (1)
    {
      v3 = v12 - 4;
      v13 = v23 ? (id)MEMORY[0x1C3B73D18](v12 - 4, a2) : *(id *)(a2 + 8 * v12);
      v14 = v13;
      v15 = v12 - 3;
      if (__OFADD__(v3, 1))
        break;
      v3 = static NSObject.== infix(_:_:)();

      if ((v3 & 1) != 0)
        goto LABEL_13;
      ++v12;
      if (v15 == v9)
        goto LABEL_22;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    ;
  }
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  void *v8;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      if (__OFADD__(i - 4, 1))
        break;
      objc_opt_self();
      v8 = (void *)swift_dynamicCastObjCClass();
      if (v8)
        objc_msgSend(v8, sel_setEnabled_, ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x2E8))() & 1) == 0);

      if (i - 3 == v4)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:

  return swift_bridgeObjectRelease();
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  BOOL v11;
  unint64_t v13;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    v13 = v3 & 0xC000000000000001;
    v5 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x1C8);
    v6 = 4;
    v7 = v3;
    while (1)
    {
      v8 = v13 ? (id)MEMORY[0x1C3B73D18](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      v9 = v8;
      v3 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = (void *)v5();
      objc_msgSend(v10, sel_center);

      objc_msgSend(v9, sel_center);
      objc_msgSend(v9, sel_setCenter_);

      ++v6;
      v11 = v3 == v4;
      v3 = v7;
      if (v11)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

uint64_t specialized Sequence.flatMap<A>(_:)(unint64_t a1, void *a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_13;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (i = 4; ; ++i)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](i - 4, a1) : *(id *)(a1 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v14 = v9;
      closure #5 in LocalParticipantControlsView.layoutViews()(&v14, a2, &v13, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      specialized Array.append<A>(contentsOf:)();
      if (v11 == v7)
      {

        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v4 = a1;
  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_11;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    v20 = v4 & 0xC000000000000001;
    a3 = -a3;
    v6 = 4;
    v19 = v5;
    while (1)
    {
      v7 = v20 ? (id)MEMORY[0x1C3B73D18](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BD6441C0;
      v11 = v4;
      v12 = objc_msgSend(v8, sel_bottomAnchor);
      v13 = objc_msgSend(a2, sel_bottomAnchor);
      v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, a3);

      *(_QWORD *)(v10 + 32) = v14;
      v15 = objc_msgSend(v8, sel_centerXAnchor);
      v16 = objc_msgSend(a2, sel_centerXAnchor);
      v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

      v4 = v11;
      *(_QWORD *)(v10 + 40) = v17;
      specialized Array._endMutation()();

      specialized Array.append<A>(contentsOf:)();
      ++v6;
      if (v9 == v19)
      {

        swift_bridgeObjectRelease();
        return v22;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

Swift::Void __swiftcall LocalParticipantControlsView.updateViews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  BOOL v23;
  int64_t v24;
  void *v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unsigned __int8 v37;
  id v38;
  id v39;
  void **v40;
  void *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  uint64_t v82;
  unsigned __int8 v83;
  id v84;
  _QWORD v85[9];

  OUTLINED_FUNCTION_56_42();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v66 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(SymbolImageDescribers.LocalParticipantView, UIControl)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
  *(_BYTE *)(inited + 32) = 1;
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton];
  *(_QWORD *)(inited + 40) = v4;
  *(_BYTE *)(inited + 48) = 0;
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton];
  *(_QWORD *)(inited + 56) = v5;
  *(_BYTE *)(inited + 64) = 2;
  v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton];
  *(_QWORD *)(inited + 72) = v6;
  *(_BYTE *)(inited + 80) = 3;
  v7 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton];
  *(_QWORD *)(inited + 88) = v7;
  *(_BYTE *)(inited + 96) = 11;
  v8 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton];
  *(_QWORD *)(inited + 104) = v8;
  *(_BYTE *)(inited + 112) = 12;
  v70 = v0;
  v9 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton];
  *(_QWORD *)(inited + 120) = v9;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIControl);
  lazy protocol witness table accessor for type SymbolImageDescribers.LocalParticipantView and conformance SymbolImageDescribers.LocalParticipantView();
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = Dictionary.init(dictionaryLiteral:)();
  v17 = 0;
  v18 = *(_QWORD *)(v16 + 64);
  v67 = v16 + 64;
  v69 = v16;
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v68 = (unint64_t)(v19 + 63) >> 6;
  if ((v20 & v18) == 0)
    goto LABEL_5;
LABEL_4:
  v75 = (v21 - 1) & v21;
  v76 = v17;
  for (i = __clz(__rbit64(v21)) | (v17 << 6); ; i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    v29 = *(void **)(*(_QWORD *)(v69 + 56) + 8 * i);
    SymbolImageDescribers.LocalParticipantView.symbolImageDescription.getter(*(_BYTE *)(*(_QWORD *)(v69 + 48) + i));
    v30 = v77;
    OUTLINED_FUNCTION_17_85();
    v32 = *(uint64_t (**)(uint64_t))(v31 + 528);
    v71 = v34;
    v72 = v33;
    v73 = v33;
    v35 = v29;
    v36 = OUTLINED_FUNCTION_35_0();
    v37 = v32(v36);
    v38 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v39 = objc_msgSend(v38, sel_userInterfaceIdiom);

    v74 = v30;
    if (v37 - 2 >= 2)
    {
      v40 = (void **)MEMORY[0x1E0DC4A88];
      if (!v37 && v39 != (id)1)
        v40 = (void **)MEMORY[0x1E0DC4AA0];
    }
    else
    {
      v40 = (void **)MEMORY[0x1E0DC4B60];
    }
    v41 = *v40;
    v42 = v80;
    v43 = v81;
    v44 = v82;
    v45 = v83;
    v46 = v78;
    v84 = v79;
    v47 = v41;
    outlined release of BackgroundView<A>(&v84);
    type metadata accessor for InCallControlButton();
    v48 = swift_dynamicCastClass();
    if (v48)
    {
      v49 = (_QWORD *)v48;
      v50 = v35;
      v51 = 256;
      if (!v43)
        v51 = 0;
      v85[0] = v71;
      v85[1] = v74;
      v85[2] = v46;
      v85[3] = v47;
      v85[4] = v51 | v42;
      v85[5] = v44;
      v85[6] = v45;
      v85[7] = v72;
      (*(void (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *v49) + 0x158))(v85);
      v21 = v75;
      v17 = v76;
      v52 = v73;
    }
    else
    {
      OUTLINED_FUNCTION_133();

      v52 = v73;
      v50 = v73;
      v21 = v75;
      v17 = v76;
    }

    objc_msgSend(v35, sel_setNeedsLayout);
    OUTLINED_FUNCTION_133();

    if (v21)
      goto LABEL_4;
LABEL_5:
    v23 = __OFADD__(v17, 1);
    v24 = v17 + 1;
    v25 = v70;
    if (v23)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v24 >= v68)
      goto LABEL_31;
    v26 = *(_QWORD *)(v67 + 8 * v24);
    v27 = v24;
    if (!v26)
    {
      v27 = v24 + 1;
      if (v24 + 1 >= v68)
        goto LABEL_31;
      v26 = *(_QWORD *)(v67 + 8 * v27);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v24 + 2 >= v68)
          goto LABEL_31;
        v26 = *(_QWORD *)(v67 + 8 * v27);
        if (!v26)
          break;
      }
    }
LABEL_18:
    v75 = (v26 - 1) & v26;
    v76 = v27;
  }
  v28 = v24 + 3;
  if (v28 >= v68)
  {
LABEL_31:
    swift_release();
    OUTLINED_FUNCTION_17_85();
    if (((*(uint64_t (**)(void))(v53 + 784))() & 1) != 0)
    {
      LocalParticipantControlsView.addVideoMessageControls()();
    }
    else
    {
      OUTLINED_FUNCTION_17_85();
      v55 = (void *)(*(uint64_t (**)(void))(v54 + 312))();
      if (v55)
      {
        v56 = v55;
        v57 = objc_msgSend(v55, sel_view);

        if (!v57)
          goto LABEL_41;
        v59 = OUTLINED_FUNCTION_9(v58, sel_superview);

        if (v59)
        {

          OUTLINED_FUNCTION_17_85();
          if (((*(uint64_t (**)(void))(v60 + 792))() & 1) != 0)
            LocalParticipantControlsView.removeVideoMessageControls()();
        }
      }
    }
    OUTLINED_FUNCTION_17_85();
    v62 = (uint64_t)v66;
    (*(void (**)(void))(v61 + 600))();
    OUTLINED_FUNCTION_17_85();
    v64 = (*(uint64_t (**)(uint64_t))(v63 + 936))(v62);
    outlined destroy of RemoteControlRequest(v62, type metadata accessor for LocalParticipantControlsView.ViewModel);
    v65 = v25;
    specialized Sequence.forEach(_:)(v64, v65);
    OUTLINED_FUNCTION_133();
    objc_msgSend(v65, sel_setNeedsLayout);
    OUTLINED_FUNCTION_52_1();
    return;
  }
  v26 = *(_QWORD *)(v67 + 8 * v28);
  if (v26)
  {
    v27 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v68)
      goto LABEL_31;
    v26 = *(_QWORD *)(v67 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void LocalParticipantControlsView.changed(_:from:)(_BYTE *a1, _BYTE *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_BYTE *);
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t j;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  void *v36;
  _BYTE *v37;
  uint64_t v38;
  int v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  Class isa;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD *);
  uint64_t v99;
  void *v100;
  id v101;
  uint64_t v102;
  char v104;
  void *v105;
  uint64_t v106;
  void *v107;
  int v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t (*v111)(void);
  uint64_t *v112;
  _QWORD *v113;
  int v114;
  uint64_t v115;
  uint64_t v117;
  char v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  char v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  _BYTE *v136;
  _QWORD *v137;
  uint64_t v138;

  v3 = v2;
  v134 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_62();
  v130 = v10;
  v133 = OUTLINED_FUNCTION_56_42();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_5_27();
  v131 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v135 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v129 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_62();
  v132 = v18;
  v19 = *(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x3A8);
  v136 = a1;
  v20 = v19(a1);
  v21 = v19(a2);
  swift_bridgeObjectRetain();
  v22 = specialized _ArrayProtocol.filter(_:)(v21, v20);
  if (v22 >> 62)
  {
    OUTLINED_FUNCTION_5_0();
    v23 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_5_0();
  }
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
      goto LABEL_117;
    }
    for (i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
        v25 = (id)MEMORY[0x1C3B73D18](i, v22);
      else
        v25 = OUTLINED_FUNCTION_5_6(v22 + 8 * i);
      v26 = v25;
      objc_msgSend(v25, sel_removeFromSuperview);

    }
  }
  swift_bridgeObjectRelease_n();
  v127 = v8;
  v128 = a2;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v22 = v20;
    else
      v22 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v27 = OUTLINED_FUNCTION_25_3();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v137 = v3;
  if (!v27)
    goto LABEL_23;
  if (v27 < 1)
  {
LABEL_117:
    __break(1u);
    return;
  }
  for (j = 0; j != v27; ++j)
  {
    if ((v20 & 0xC000000000000001) != 0)
      v29 = (id)MEMORY[0x1C3B73D18](j, v20);
    else
      v29 = OUTLINED_FUNCTION_5_6(v20 + 8 * j);
    v30 = v29;
    type metadata accessor for InCallControlButton();
    v31 = swift_dynamicCastClass();
    if (v31)
    {
      v22 = v31;
      v32 = one-time initialization token for localCameraControls;
      v33 = v30;
      if (v32 != -1)
        swift_once();
      v34 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v22) + 0x188);
      v35 = swift_bridgeObjectRetain();
      v34(v35);

      v3 = v137;
    }
    objc_msgSend(v3, sel_addSubview_, v30);

  }
LABEL_23:
  swift_bridgeObjectRelease();
  v36 = (void *)OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_406(v36);
  v37 = v136;
  if (v22)
  {
    v38 = v132;
    outlined init with copy of ConversationControlsRecipe?((uint64_t)&v136[*(int *)(v133 + 28)], v132);
    v39 = OUTLINED_FUNCTION_76_25(v38);
    outlined destroy of ConversationControlsRecipe?(v38);
    if (v39 == 1)
    {
      v40 = (void *)OUTLINED_FUNCTION_335();
      if (v40)
      {
        v41 = v40;
        objc_msgSend(v40, sel_removeFromSuperview);

      }
      OUTLINED_FUNCTION_41_43(*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x170));
    }
  }
  v42 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  OUTLINED_FUNCTION_48_1(v3, sel_setBackgroundColor_);

  objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton), sel_addTarget_action_forControlEvents_, v3, sel_handleCollapseButtonTapped, 64);
  v44 = VideoMessageController.State.rawValue.getter(v37[7]) == 0x7964616552746F6ELL && v43 == 0xE800000000000000;
  if (v44)
  {
    v55 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_57_24(v55, v56, type metadata accessor for LocalParticipantControlsView.ViewModel);
    goto LABEL_40;
  }
  v45 = v43;
  v46 = OUTLINED_FUNCTION_13();
  v47 = OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_57_24(v47, v48, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if ((v46 & 1) != 0)
  {
LABEL_40:
    outlined destroy of RemoteControlRequest(0x7964616552746F6ELL, type metadata accessor for LocalParticipantControlsView.ViewModel);
    goto LABEL_41;
  }
  v49 = 0xEB00000000656C62;
  if (VideoMessageController.State.rawValue.getter(MEMORY[0x7964616552746F75]) == 0x616C696176616E75
    && v50 == 0xEB00000000656C62)
  {
    v64 = OUTLINED_FUNCTION_59_40();
    OUTLINED_FUNCTION_52_46(v64, v65, type metadata accessor for LocalParticipantControlsView.ViewModel);
  }
  else
  {
    v45 = v50;
    v52 = OUTLINED_FUNCTION_13();
    v53 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_52_46(v53, v54, type metadata accessor for LocalParticipantControlsView.ViewModel);
    if ((v52 & 1) == 0)
    {
      outlined destroy of RemoteControlRequest(v45, type metadata accessor for LocalParticipantControlsView.ViewModel);
      goto LABEL_47;
    }
  }
  v66 = *(_BYTE *)(v45 + 8);
  outlined destroy of RemoteControlRequest(v45, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if ((v66 & 1) != 0)
    goto LABEL_41;
LABEL_47:
  static Platform.current.getter();
  OUTLINED_FUNCTION_91_17();
  if (v44)
    goto LABEL_41;
  v67 = v129;
  outlined init with copy of ConversationControlsRecipe?((uint64_t)&v37[*(int *)(v133 + 28)], v129);
  if (OUTLINED_FUNCTION_76_25(v67) == 1)
  {
    outlined destroy of ConversationControlsRecipe?(v67);
    v68 = v137;
    goto LABEL_82;
  }
  v85 = v130;
  outlined init with take of StagedCollaboration(v67, v130, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v68 = v137;
  v86 = (void *)OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_406(v86);
  if (!v45)
  {
    v90 = v85;
    v91 = (uint64_t)v127;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v90, (uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v92 = objc_allocWithZone((Class)type metadata accessor for CallAgainHUDView());
    v93 = CallAgainHUDView.init(recipe:)(v91);
    objc_msgSend(v93, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v93, sel_setAccessibilityViewIsModal_, 1);
    OUTLINED_FUNCTION_9_111(*(id *)((char *)v93 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton), (SEL)&selRef_isMicIndicatorVisible + 2, v94, (uint64_t)sel_handleVideoMessageButtonTapped);
    OUTLINED_FUNCTION_9_111(*(id *)((char *)v93 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_callBackButton), (SEL)&selRef_isMicIndicatorVisible + 2, v95, (uint64_t)sel_callBack);
    OUTLINED_FUNCTION_9_111(*(id *)((char *)v93 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_showCallDetailsButton), (SEL)&selRef_isMicIndicatorVisible + 2, v96, (uint64_t)sel_showCallDetails);
    OUTLINED_FUNCTION_9_111(*(id *)((char *)v93 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_closeButton), (SEL)&selRef_isMicIndicatorVisible + 2, v97, (uint64_t)sel_close);
    OUTLINED_FUNCTION_48_1(v68, sel_addSubview_);
    v98 = *(void (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *v68) + 0x170);
    v88 = v93;
    v98(v93);
    v68 = v137;
    goto LABEL_72;
  }
  v87 = OUTLINED_FUNCTION_335();
  if (v87)
  {
    v88 = (_QWORD *)v87;
    v89 = (uint64_t)v127;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v130, (uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v88) + 0xC8))(v89);
LABEL_72:

  }
  v99 = OUTLINED_FUNCTION_335();
  if (v99)
  {
    v100 = (void *)v99;
    v101 = *(id *)(v99 + OBJC_IVAR____TtC15ConversationKit16CallAgainHUDView_videoMessageButton);

    if (VideoMessageController.State.rawValue.getter(v37[7]) == 0x616C696176616E75 && v102 == 0xEB00000000656C62)
    {
      OUTLINED_FUNCTION_59_40();
      v104 = 1;
    }
    else
    {
      v104 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_2_1();
    }
    objc_msgSend(v101, sel_setEnabled_, (v104 & 1) == 0);

  }
  outlined destroy of RemoteControlRequest(v130, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_82:
  v105 = *(void **)((char *)v68 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v106 = MEMORY[0x1C3B72E00](0xD000000000000021, 0x80000001BD699640);
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v107 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  objc_msgSend(v105, sel_addAction_forControlEvents_, v107, 64);

  v108 = v37[7];
  if ((v108 & 0xFE) == 2)
  {
    v109 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v110 = OUTLINED_FUNCTION_41_43(*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v68) + 0x388));
    v111 = *(uint64_t (**)(void))((*v109 & *v68) + 0x150);
    v112 = (uint64_t *)((uint64_t (*)(uint64_t))v111)(v110);
    OUTLINED_FUNCTION_43_61();
    OUTLINED_FUNCTION_39_1(*v112);

    v113 = (_QWORD *)v111();
    (*(void (**)(uint64_t))((*v109 & *v113) + 0xF8))(3);
LABEL_84:

    goto LABEL_41;
  }
  v114 = v128[7];
  if (v114 == 5)
  {
    OUTLINED_FUNCTION_64_24();
    if (OUTLINED_FUNCTION_58_39() == 0xEB00000000656C62 && v106 == v115)
    {
      OUTLINED_FUNCTION_22_5();
    }
    else
    {
      v49 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_30_4();
      if ((v49 & 1) == 0)
      {
        OUTLINED_FUNCTION_41_43(*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v68) + 0x388));
        goto LABEL_41;
      }
    }
  }
  if (v108 == 6)
  {
    LocalParticipantControlsView.showLoading()();
  }
  else
  {
    if (v108 == 5)
    {
      VideoMessageController.State.rawValue.getter(v114);
      if (v49 == OUTLINED_FUNCTION_58_39() && v106 == v117)
      {
        OUTLINED_FUNCTION_22_5();
      }
      else
      {
        v119 = OUTLINED_FUNCTION_13();
        OUTLINED_FUNCTION_133();
        v120 = OUTLINED_FUNCTION_30_4();
        if ((v119 & 1) == 0)
        {
          v121 = (uint64_t *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v68) + 0x150))(v120);
          OUTLINED_FUNCTION_43_61();
          OUTLINED_FUNCTION_39_1(*v121);

          LocalParticipantControlsView.startElapsedTimeCounter()();
          goto LABEL_41;
        }
      }
    }
    if (v114 == 6)
    {
      if (OUTLINED_FUNCTION_64_24() == 0x6552657669746361 && v122 == 0xEF676E6964726F63)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v124 = OUTLINED_FUNCTION_10_2();
        v125 = OUTLINED_FUNCTION_27();
        if ((v124 & 1) == 0)
        {
          v113 = (_QWORD *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v137) + 0x198))(v125);
          objc_msgSend(v113, sel_removeFromSuperview);
          goto LABEL_84;
        }
      }
    }
  }
LABEL_41:
  v57 = (char *)v137;
  v58 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v137) + 0x228);
  if ((v58() & 0x10000) != 0)
  {
    static Platform.current.getter();
    OUTLINED_FUNCTION_91_17();
    if (!v44)
    {
      OUTLINED_FUNCTION_9_111(*(id *)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton], sel_addTarget_action_forControlEvents_, v60, (uint64_t)sel_handleEffectsTapped);
      objc_msgSend(v57, sel_addLayoutGuide_, *(_QWORD *)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide]);
      v61 = static Platform.current.getter();
      if (v61 == 1)
      {
        v62 = OUTLINED_FUNCTION_9(v61, sel_widthAnchor);
        v63 = objc_msgSend(v62, sel_constraintEqualToConstant_, 290.0);
      }
      else
      {
        v69 = OUTLINED_FUNCTION_9(v61, sel_leadingAnchor);
        v57 = (char *)v137;
        v62 = OUTLINED_FUNCTION_2_11((uint64_t)v69, sel_leadingAnchor);
        v63 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v62);

      }
      if ((v58() & 0x1000000) != 0)
        v70 = objc_msgSend(*(id *)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton], sel_trailingAnchor);
      else
        v70 = objc_msgSend(v57, sel_trailingAnchor);
      v71 = v70;
      v135 = (id)objc_opt_self();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v72 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v72 + 16) = xmmword_1BD644140;
      v73 = OUTLINED_FUNCTION_9(v72, sel_topAnchor);
      v74 = OUTLINED_FUNCTION_2_11((uint64_t)v73, sel_topAnchor);
      v75 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v74);

      *(_QWORD *)(v72 + 32) = v75;
      v77 = OUTLINED_FUNCTION_9(v76, sel_bottomAnchor);
      v78 = OUTLINED_FUNCTION_2_11((uint64_t)v77, sel_bottomAnchor);
      v79 = objc_msgSend(v77, sel_constraintEqualToAnchor_, v78);

      *(_QWORD *)(v72 + 40) = v79;
      v81 = OUTLINED_FUNCTION_9(v80, sel_trailingAnchor);
      v82 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v71);

      *(_QWORD *)(v72 + 48) = v82;
      *(_QWORD *)(v72 + 56) = v63;
      v138 = v72;
      specialized Array._endMutation()();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      v83 = v63;
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_27();
      objc_msgSend(v135, sel_activateConstraints_, isa);

      v37 = v136;
      v57 = (char *)v137;
    }
  }
  if (v37[1] == 1)
    OUTLINED_FUNCTION_13_116(*(void **)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton], v59, v60, (uint64_t)sel_handleCameraBlurTapped);
  if (*v37 == 1)
    OUTLINED_FUNCTION_13_116(*(void **)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton], v59, v60, (uint64_t)sel_handleCinematicFramingTapped);
  if (v37[3] == 1)
    OUTLINED_FUNCTION_9_111(*(id *)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton], sel_addTarget_action_forControlEvents_, v60, (uint64_t)sel_handleCameraFlipTapped);
  if (v37[4] == 1)
    OUTLINED_FUNCTION_9_111(*(id *)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_rotateButton], sel_addTarget_action_forControlEvents_, v60, (uint64_t)sel_handleRotateButtonTapped);
  if (v37[5] == 1)
    OUTLINED_FUNCTION_13_116(*(void **)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton], v59, v60, (uint64_t)sel_handleReactionEffectGestureTapped);
  if (v37[6] == 1)
    OUTLINED_FUNCTION_13_116(*(void **)&v57[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton], v59, v60, (uint64_t)sel_handleStudioLightTapped);
  LocalParticipantControlsView.updateViews()();
  LocalParticipantControlsView.updateControlsAlpha(animated:)(0);
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall LocalParticipantControlsView.layoutViews()()
{
  uint64_t *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  char v16;
  char v17;
  double v18;
  uint64_t v19;
  unsigned __int8 v20;
  double v21;
  double v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  double v28;
  double v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, _QWORD *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void (*v39)(_QWORD, _QWORD);
  double v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t (*v47)(id);
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  CGFloat MidX;
  double v64;
  CGFloat Height;
  double v66;
  double v67;
  double v68;
  double v69;
  char v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  SEL v84;
  SEL v85;
  id v86;
  _QWORD *v87;
  void *v88;
  uint64_t v89;
  CGFloat v90;
  char **v91;
  double v92;
  double v93;
  CGFloat v94;
  CGFloat v95;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  double v99;
  double v100;
  CGFloat v101;
  CGFloat v102;
  double MaxX;
  CGFloat v104;
  CGFloat MinX;
  double v106;
  double v107;
  double MinY;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  double v116;
  double v117;
  double v118;
  CGFloat v119;
  double v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  char v125;
  void *v126;
  double v127;
  double v128;
  double v129;
  double v130;
  char v131;
  void *v132;
  double v133;
  double v134;
  double v135;
  double v136;
  char **v137;
  id v138;
  const char *v139;
  void *v140;
  double v141;
  double v142;
  double v143;
  uint64_t v144;
  CGFloat v145;
  CGFloat v146;
  CGFloat v147;
  CGFloat v148;
  void *v149;
  double MaxY;
  CGFloat v151;
  void *v152;
  uint64_t v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  id v158;
  id v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  id v165;
  id v166;
  id v167;
  uint64_t v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  SEL v175;
  id v176;
  const char *v177;
  double v178;
  double v179;
  double v180;
  double v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t i;
  id v188;
  void *v189;
  double v190;
  uint64_t v191;
  unint64_t v192;
  id v193;
  id v194;
  void *v195;
  Class isa;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  id v201;
  Class v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  id v206;
  id v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  id v215;
  char **v216;
  Class v217;
  int v218;
  id v219;
  id v220;
  uint64_t v221;
  uint64_t HasHomeButton;
  double v226;
  double v227;
  double v228;
  uint64_t v229;
  double v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  double v238;
  double v239;
  double v240;
  double v241;
  double v242;
  uint64_t v243;
  double v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  double v248;
  double v249;
  double v250;
  double v251;
  double v252;
  double v253;
  double v254;
  char v255;
  double v256;
  double v257;
  double v258;
  double v259;
  double v260;
  void *v261;
  double v262;
  double v263;
  uint64_t v264;
  uint64_t v265;
  double v266;
  double v267;
  double v268;
  double v269;
  id v270;
  void *v271;
  id v272;
  double v273;
  double v274;
  double v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char v280;
  unint64_t v281;
  double v282;
  id v283;
  SEL v284;
  double v285;
  double v286;
  id v287;
  unsigned __int8 *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  double v293;
  void *v294;
  const char *v295;
  double v296;
  double v297;
  double v298;
  double v299;
  uint64_t v300;
  uint64_t v301;
  char v303;
  uint64_t v304;
  uint64_t v305;
  char v307;
  uint64_t inited;
  id v309;
  unint64_t v310;
  id v311;
  id v312;
  _QWORD *v313;
  unsigned __int8 *v314;
  void *v315;
  Class v316;
  id v317;
  uint64_t v318;
  uint64_t v319;
  double v320;
  double v321;
  double v322;
  double v323;
  double v324;
  double v325;
  unsigned __int8 *v326;
  char *v327;
  uint64_t v328;
  double v329;
  uint64_t v330;
  double v331;
  double v332;
  unsigned int v333;
  unsigned int v334;
  void (*v335)(_QWORD, _QWORD);
  void (*v336)(_QWORD, _QWORD, _QWORD);
  double v337;
  double v338;
  double v339;
  double v340;
  _QWORD *v341;
  CGFloat v342;
  CGFloat v343;
  double v344;
  double v345;
  uint64_t v346;
  uint64_t (*v347)(id);
  double v348;
  double v349;
  double v350;
  double v351;
  double v352;
  double v353;
  double v354;
  double v355;
  void (*v356)(void);
  double v357;
  CGFloat v358;
  CGFloat v359;
  CGFloat v360;
  uint64_t v361;
  uint64_t v362;
  _BOOL4 v363;
  double v364;
  unint64_t v365;
  _QWORD v366[41];
  CGRect v367;
  CGRect v368;
  CGRect v369;
  CGRect v370;
  CGRect v371;
  CGRect v372;
  CGRect v373;
  CGRect v374;
  CGRect v375;
  CGRect v376;
  CGRect v377;
  CGRect v378;
  CGRect v379;
  CGRect v380;
  CGRect v381;
  CGRect v382;
  CGRect v383;
  CGRect v384;
  CGRect v385;
  CGRect v386;
  CGRect v387;
  CGRect v388;
  CGRect v389;
  CGRect v390;

  v1 = *(double *)&v0;
  OUTLINED_FUNCTION_56_42();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_5_27();
  v319 = v3;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v4);
  v327 = (char *)&v318 - v5;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v6);
  v326 = (unsigned __int8 *)&v318 - v7;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_62();
  v330 = v9;
  v10 = (_QWORD *)type metadata accessor for FloatingPointRoundingRule();
  v11 = *(v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v362 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_62();
  v361 = v14;
  v15 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210);
  v15();
  OUTLINED_FUNCTION_91_17();
  if (v17)
  {
    if (v16)
    {
      Layout.LocalParticipantViewCameraControls.init()();
      v18 = *(double *)&v366[4];
    }
    else
    {
      Layout.LocalParticipantViewCameraControls.init()();
      v18 = *(double *)&v366[11];
    }
  }
  else
  {
    Layout.LocalParticipantViewCameraControls.init()();
    v18 = *(double *)&v366[7];
  }
  v19 = static Platform.current.getter();
  v20 = ((uint64_t (*)(uint64_t))v15)(v19);
  LocalParticipantControlsView.Style.bottomMargin.getter(v20);
  v22 = v21;
  v15();
  OUTLINED_FUNCTION_90_18();
  if (v16)
  {
    OUTLINED_FUNCTION_64_27();
    v26 = v0 + 10;
  }
  else
  {
    v25 = 0;
    if (v24 != 2)
      goto LABEL_11;
    OUTLINED_FUNCTION_64_27();
    v26 = v0 + 9;
  }
  v25 = *v26;
  v23 = static Platform.current.getter();
LABEL_11:
  v328 = v25;
  v356 = v15;
  v27 = ((uint64_t (*)(uint64_t))v15)(v23);
  LocalParticipantControlsView.Style.buttonSize.getter(v27);
  v29 = v28;
  type metadata accessor for AppUtilities();
  v363 = static AppUtilities.isRTL.getter();
  Layout.LocalParticipantViewCameraControls.init()();
  v352 = *(double *)&v366[39];
  static Platform.current.getter();
  OUTLINED_FUNCTION_4_147();
  CGRectGetWidth(v367);
  v30 = *MEMORY[0x1E0DED508];
  v31 = *(void (**)(uint64_t, uint64_t, _QWORD *))(v11 + 104);
  v32 = v361;
  OUTLINED_FUNCTION_15_102();
  v33 = *MEMORY[0x1E0DED500];
  v34 = v362;
  OUTLINED_FUNCTION_14_105();
  v35 = OUTLINED_FUNCTION_25_72();
  v349 = v36;
  v350 = v35;
  v348 = v37;
  v351 = v38;
  v39 = *(void (**)(_QWORD, _QWORD))(v11 + 8);
  OUTLINED_FUNCTION_20_87();
  OUTLINED_FUNCTION_21_92(v32);
  OUTLINED_FUNCTION_15_102();
  OUTLINED_FUNCTION_14_105();
  v40 = OUTLINED_FUNCTION_85_22();
  *(double *)&v44 = OUTLINED_FUNCTION_27_72(v41, v42, v43, v40, v18);
  v345 = v45;
  v346 = v44;
  v344 = v46;
  v347 = v47;
  OUTLINED_FUNCTION_20_87();
  OUTLINED_FUNCTION_21_92(v32);
  OUTLINED_FUNCTION_4_147();
  v48 = CGRectGetHeight(v368) - v22 - v29;
  OUTLINED_FUNCTION_15_102();
  OUTLINED_FUNCTION_14_105();
  v49 = OUTLINED_FUNCTION_85_22();
  v357 = OUTLINED_FUNCTION_27_72(v50, v51, v52, v49, v48);
  v358 = v53;
  v359 = v54;
  v364 = v55;
  OUTLINED_FUNCTION_20_87();
  OUTLINED_FUNCTION_21_92(v32);
  OUTLINED_FUNCTION_4_147();
  CGRectGetWidth(v369);
  v353 = v18;
  OUTLINED_FUNCTION_4_147();
  CGRectGetHeight(v370);
  OUTLINED_FUNCTION_15_102();
  OUTLINED_FUNCTION_14_105();
  v56 = OUTLINED_FUNCTION_25_72();
  v58 = v57;
  v60 = v59;
  v62 = v61;
  OUTLINED_FUNCTION_20_87();
  OUTLINED_FUNCTION_21_92(v32);
  OUTLINED_FUNCTION_4_147();
  MidX = CGRectGetMidX(v371);
  v331 = v29 * 0.5;
  v64 = MidX - v29 * 0.5;
  OUTLINED_FUNCTION_4_147();
  Height = CGRectGetHeight(v372);
  v354 = v22;
  v66 = Height - v22 - v29;
  v334 = v30;
  v31(v32, v30, v10);
  v333 = v33;
  v336 = (void (*)(_QWORD, _QWORD, _QWORD))v31;
  v31(v34, v33, v10);
  v340 = v29;
  v355 = specialized CGRect.rounded(originRule:sizeRule:toScaleOf:)(v32, v34, v0, v64, v66, v29, v29);
  v342 = v67;
  v343 = v68;
  v360 = v69;
  OUTLINED_FUNCTION_20_87();
  v335 = v39;
  v39(v32, v10);
  OUTLINED_FUNCTION_49_51();
  if (v70)
    v71 = v56;
  else
    v71 = v357;
  if (v70)
    v72 = v58;
  else
    v72 = v358;
  if (v70)
    v73 = v60;
  else
    v73 = v359;
  v74 = v62;
  if (!v70)
    v62 = v364;
  v332 = v56;
  if (v70)
    v56 = v357;
  v337 = v58;
  v338 = v60;
  if (v70)
    v58 = v358;
  if (v70)
    v60 = v359;
  v339 = v74;
  if (v70)
    v75 = v364;
  else
    v75 = v74;
  v76 = v350;
  if (v70)
    v77 = v350;
  else
    v77 = *(double *)&v346;
  if (v70)
    v78 = v349;
  else
    v78 = v345;
  if (v70)
    v79 = v348;
  else
    v79 = v344;
  if (v70)
    v80 = v351;
  else
    v80 = *(double *)&v347;
  if (v70)
    v76 = *(double *)&v346;
  v350 = v76;
  if (v70)
    v81 = v345;
  else
    v81 = v349;
  v349 = v81;
  if (v70)
    v82 = v344;
  else
    v82 = v348;
  v348 = v82;
  if (v70)
    v83 = *(double *)&v347;
  else
    v83 = v351;
  v351 = v83;
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton), sel_setFrame_, v77, v78, v79, v80);
  *(double *)&v346 = COERCE_DOUBLE(OUTLINED_FUNCTION_71_24(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton));
  v320 = v58;
  v321 = v56;
  v344 = v60;
  v329 = v75;
  objc_msgSend((id)v346, v84, v56, v58, v60, v75);
  v345 = COERCE_DOUBLE(OUTLINED_FUNCTION_71_24(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton));
  v324 = v72;
  v325 = v71;
  v322 = v62;
  v323 = v73;
  v86 = objc_msgSend(*(id *)&v345, v85, v71, v72, v73, v62);
  v87 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v347 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0);
  if ((v347(v86) & 1) != 0)
  {
    v88 = (void *)OUTLINED_FUNCTION_31_61();
    objc_msgSend(v88, sel_sizeToFit);

  }
  v89 = static Platform.current.getter();
  v90 = v355;
  v91 = &selRef_associatedAppBundleIdentifier;
  if (v89 != 1)
  {
    OUTLINED_FUNCTION_66_32();
    OUTLINED_FUNCTION_90_18();
    if (v16 || (OUTLINED_FUNCTION_30_75() & 1) != 0)
    {
      v375.origin.x = v357;
      v375.origin.y = v358;
      v375.size.width = v359;
      v375.size.height = v364;
      MaxX = CGRectGetMaxX(v375);
      v376.origin.x = v90;
      v104 = v342;
      v60 = v343;
      v376.origin.y = v342;
      v102 = v360;
      v376.size.width = v360;
      v376.size.height = v343;
      MinX = CGRectGetMinX(v376);
      v106 = v331;
      v100 = (MaxX + MinX) * 0.5 - v331;
      v377.origin.x = v90;
      v377.origin.y = v104;
      v377.size.width = v102;
      v377.size.height = v60;
      v107 = CGRectGetMaxX(v377);
      v101 = v104;
      v62 = (v107 + OUTLINED_FUNCTION_39_68(v332)) * 0.5 - v106;
      v58 = v340;
    }
    else
    {
      v92 = v332;
      v93 = OUTLINED_FUNCTION_39_68(v332);
      v95 = v357;
      v94 = v358;
      v373.origin.x = v357;
      v373.origin.y = v358;
      v96 = v359;
      v373.size.width = v359;
      v97 = v364;
      v373.size.height = v364;
      v98 = CGRectGetMaxX(v373);
      v58 = v340;
      v99 = (v93 - v98 - (v58 + v58)) / 3.0;
      v374.origin.x = v95;
      v374.origin.y = v94;
      v374.size.width = v96;
      v374.size.height = v97;
      v100 = CGRectGetMaxX(v374) + v99;
      v62 = OUTLINED_FUNCTION_39_68(v92) - v99 - v58;
      v101 = v342;
      v60 = v343;
      v102 = v360;
      v90 = v355;
    }
    v378.origin.x = v90;
    v378.origin.y = v101;
    v378.size.width = v102;
    v378.size.height = v60;
    MinY = CGRectGetMinY(v378);
    v109 = v361;
    v110 = v334;
    OUTLINED_FUNCTION_86_17(v361, v334);
    v111 = v362;
    v112 = v333;
    OUTLINED_FUNCTION_36_36(v362, v333);
    OUTLINED_FUNCTION_84_18();
    v116 = OUTLINED_FUNCTION_81_23(v113, v114, v115, v100, MinY);
    v364 = v117;
    v359 = v118;
    v119 = v102;
    v121 = v120;
    OUTLINED_FUNCTION_62_34();
    OUTLINED_FUNCTION_35_50(v109);
    v379.origin.x = v90;
    v379.origin.y = v101;
    v379.size.width = v119;
    v379.size.height = v60;
    v56 = CGRectGetMinY(v379);
    OUTLINED_FUNCTION_36_36(v109, v110);
    OUTLINED_FUNCTION_36_36(v111, v112);
    OUTLINED_FUNCTION_84_18();
    OUTLINED_FUNCTION_81_23(v122, v123, v124, v62, v56);
    OUTLINED_FUNCTION_34_55();
    OUTLINED_FUNCTION_35_50(v111);
    OUTLINED_FUNCTION_35_50(v109);
    v87 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if ((OUTLINED_FUNCTION_23_88() & 0x1000000000000) != 0)
    {
      OUTLINED_FUNCTION_49_51();
      if (v125)
        v127 = v116;
      else
        v127 = v62;
      v128 = v364;
      if (!v125)
        v128 = v56;
      v129 = v359;
      if (v125)
      {
        v130 = v121;
      }
      else
      {
        v129 = v58;
        v130 = v60;
      }
      objc_msgSend(v126, sel_setFrame_, v127, v128, v129, v130);
    }
    v89 = OUTLINED_FUNCTION_23_88();
    v91 = &selRef_associatedAppBundleIdentifier;
    if ((v89 & 0x10000000000) != 0)
    {
      OUTLINED_FUNCTION_49_51();
      if (v131)
        v133 = v62;
      else
        v133 = v116;
      v134 = v364;
      if (v131)
        v134 = v56;
      v135 = v359;
      if (v131)
        v135 = v58;
      if (v131)
        v136 = v60;
      else
        v136 = v121;
      v89 = (uint64_t)objc_msgSend(v132, sel_setFrame_, v133, v134, v135, v136);
    }
  }
  v366[3] = MEMORY[0x1E0DEE9D8];
  v137 = &selRef_associatedAppBundleIdentifier;
  v138 = OUTLINED_FUNCTION_257(v89, sel_superview);
  v139 = v91[228];
  if (v138)
  {
    v140 = v138;
    objc_msgSend(v138, v139);
    OUTLINED_FUNCTION_34_55();

  }
  else
  {
    OUTLINED_FUNCTION_257(0, v139);
    OUTLINED_FUNCTION_34_55();
  }
  v141 = v353;
  v142 = v354;
  v143 = OUTLINED_FUNCTION_18_94();
  OUTLINED_FUNCTION_257(v144, v91[228]);
  v390.origin.x = v145;
  v390.origin.y = v146;
  v390.size.width = v147;
  v390.size.height = v148;
  v380.origin.x = v62;
  v380.origin.y = v56;
  v380.size.width = v58;
  v380.size.height = v60;
  v381 = CGRectIntersection(v380, v390);
  v358 = v143 - CGRectGetHeight(v381);
  v149 = (void *)(*(uint64_t (**)(void))((*v87 & **(_QWORD **)&v1) + 0x168))();
  v359 = v1;
  MaxY = v352;
  v151 = v360;
  if (v149)
  {
    v152 = v149;
    OUTLINED_FUNCTION_406(objc_msgSend(v149, sel_superview));
    if (v1 != 0.0)
    {
      v341 = v10;
      v154 = OUTLINED_FUNCTION_2_2(v153, sel_leadingAnchor);
      v155 = OUTLINED_FUNCTION_257((uint64_t)v154, sel_leadingAnchor);
      v156 = OUTLINED_FUNCTION_28_68();

      v158 = OUTLINED_FUNCTION_2_2(v157, sel_trailingAnchor);
      v159 = OUTLINED_FUNCTION_257((uint64_t)v158, sel_trailingAnchor);
      v364 = COERCE_DOUBLE(OUTLINED_FUNCTION_28_68());

      v161 = OUTLINED_FUNCTION_2_2(v160, sel_topAnchor);
      v162 = OUTLINED_FUNCTION_257((uint64_t)v161, sel_topAnchor);
      v163 = OUTLINED_FUNCTION_28_68();

      v165 = OUTLINED_FUNCTION_2_2(v164, sel_bottomAnchor);
      v166 = OUTLINED_FUNCTION_257((uint64_t)v165, sel_bottomAnchor);
      v167 = objc_msgSend(v165, sel_constraintEqualToAnchor_constant_, v166, v358);

      if (MEMORY[0x1E0DEE9D8] >> 62)
      {
        swift_bridgeObjectRetain();
        v168 = OUTLINED_FUNCTION_25_3();
        OUTLINED_FUNCTION_2_1();
      }
      else
      {
        v168 = *(_QWORD *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (!__OFADD__(v168, 4))
      {
        specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v168 + 4, 1);
        OUTLINED_FUNCTION_40_64();
        v169 = v156;
        OUTLINED_FUNCTION_48_49();
      }
      __break(1u);
      JUMPOUT(0x1BD5C2F64);
    }

    v1 = v359;
  }
  if (OUTLINED_FUNCTION_66_32() == 3)
  {
    v170 = ((uint64_t (*)(void))v347)();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    if ((v170 & 1) != 0)
    {
      v171 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v171 + 16) = xmmword_1BD6441C0;
      v172 = OUTLINED_FUNCTION_31_61();
      v173 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
      *(_QWORD *)(v171 + 32) = v172;
      *(_QWORD *)(v171 + 40) = v173;
      v366[0] = v171;
    }
    else
    {
      v182 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v182 + 16) = xmmword_1BD6443F0;
      v173 = *(void **)(*(_QWORD *)&v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
      *(_QWORD *)(v182 + 32) = v173;
      v366[0] = v182;
    }
    OUTLINED_FUNCTION_12_113();
    v183 = v366[0];
    v184 = v173;
    v185 = MEMORY[0x1E0DEE9D8];
    v366[0] = MEMORY[0x1E0DEE9D8];
    if ((unint64_t)v183 >> 62)
    {
LABEL_235:
      if (v183 < 0)
        v170 = v183;
      else
        v170 = v183 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v186 = OUTLINED_FUNCTION_25_3();
      OUTLINED_FUNCTION_53();
    }
    else
    {
      v186 = *(_QWORD *)((v183 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v341 = v10;
    if (v186)
    {
      if (v186 < 1)
      {
        __break(1u);
        goto LABEL_243;
      }
      for (i = 0; i != v186; ++i)
      {
        if ((v183 & 0xC000000000000001) != 0)
          v188 = (id)MEMORY[0x1C3B73D18](i, v183);
        else
          v188 = OUTLINED_FUNCTION_5_6(v183 + 8 * i);
        v189 = v188;
        OUTLINED_FUNCTION_406(objc_msgSend(v188, v137[464]));
        if (v170)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          v170 = (uint64_t)v366;
          specialized ContiguousArray._endMutation()();
        }
        else
        {

        }
      }
      OUTLINED_FUNCTION_53();
      v190 = *(double *)v366;
      v185 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      OUTLINED_FUNCTION_53();
      v190 = MEMORY[0x1E0DEE9D8];
    }
    v366[0] = v185;
    if ((*(_QWORD *)&v190 & 0x8000000000000000) != 0 || (*(_QWORD *)&v190 & 0x4000000000000000) != 0)
    {
      OUTLINED_FUNCTION_13_8();
      v186 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      v186 = *(_QWORD *)(*(_QWORD *)&v190 + 16);
      OUTLINED_FUNCTION_13_8();
    }
    v364 = v190;
    if (!v186)
    {
      OUTLINED_FUNCTION_14_12();
      goto LABEL_130;
    }
    if (v186 >= 1)
    {
      v191 = 0;
      v192 = *(_QWORD *)&v190 & 0xC000000000000001;
      do
      {
        if (v192)
          OUTLINED_FUNCTION_87_17();
        v193 = OUTLINED_FUNCTION_5_6(*(_QWORD *)&v190 + 8 * v191++);
        v194 = objc_msgSend(v193, sel_constraints);
        _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
        static Array._unconditionallyBridgeFromObjectiveC(_:)();

        OUTLINED_FUNCTION_65_27();
        v190 = v364;
      }
      while (v186 != v191);
      OUTLINED_FUNCTION_14_12();
      v1 = v359;
LABEL_130:
      v195 = (void *)objc_opt_self();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = OUTLINED_FUNCTION_69_27().super.isa;
      v197 = OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_4_5(v197, sel_deactivateConstraints_);

      v198 = MEMORY[0x1E0DEE9D8];
      v366[0] = MEMORY[0x1E0DEE9D8];
      if (v186)
      {
        v185 = *(_QWORD *)&v190 & 0xC000000000000001;
        OUTLINED_FUNCTION_13_8();
        v199 = 0;
        do
        {
          if (v185)
            OUTLINED_FUNCTION_87_17();
          v200 = OUTLINED_FUNCTION_5_6(*(_QWORD *)&v190 + 8 * v199++);
          v201 = objc_msgSend(v200, sel_constraints);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();

          OUTLINED_FUNCTION_65_27();
          v190 = v364;
        }
        while (v186 != v199);
        OUTLINED_FUNCTION_14_12();
        v202 = OUTLINED_FUNCTION_69_27().super.isa;
        v203 = OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_4_5(v203, sel_deactivateConstraints_);

        v366[0] = MEMORY[0x1E0DEE9D8];
        OUTLINED_FUNCTION_13_8();
        v204 = 0;
        while (1)
        {
          v205 = OUTLINED_FUNCTION_5_6(*(_QWORD *)&v190 + 8 * v204);
          v206 = objc_msgSend(v205, sel_widthAnchor);
          v10 = objc_msgSend(v206, sel_constraintEqualToConstant_, MaxY);

          v207 = objc_msgSend(v205, sel_heightAnchor);
          v208 = objc_msgSend(v205, sel_widthAnchor);
          v1 = COERCE_DOUBLE(objc_msgSend(v207, sel_constraintEqualToAnchor_, v208));

          v209 = v366[0];
          v137 = (char **)(v366[0] >> 62);
          if (v366[0] >> 62)
          {
            OUTLINED_FUNCTION_5_0();
            v210 = _CocoaArrayWrapper.endIndex.getter();
            OUTLINED_FUNCTION_27();
          }
          else
          {
            v210 = *(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          v183 = v210 + 2;
          if (__OFADD__(v210, 2))
          {
            __break(1u);
            goto LABEL_235;
          }
          v211 = 0;
          if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
            || v209 < 0
            || (v209 & 0x4000000000000000) != 0)
          {
            goto LABEL_144;
          }
          if (v183 > *(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
            break;
LABEL_150:
          OUTLINED_FUNCTION_12_113();
          v214 = v10;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            OUTLINED_FUNCTION_0_161();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          OUTLINED_FUNCTION_12_113();
          v215 = *(id *)&v1;
          MEMORY[0x1C3B7301C]();
          v190 = v364;
          if (*(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            OUTLINED_FUNCTION_0_161();
          ++v204;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          OUTLINED_FUNCTION_12_113();

          if (v186 == v204)
          {
            OUTLINED_FUNCTION_14_12();
            v1 = v359;
            v216 = &selRef_associatedAppBundleIdentifier;
            v198 = MEMORY[0x1E0DEE9D8];
            goto LABEL_159;
          }
        }
        v211 = 1;
LABEL_144:
        if (v137)
        {
          OUTLINED_FUNCTION_5_0();
          v212 = _CocoaArrayWrapper.endIndex.getter();
          OUTLINED_FUNCTION_27();
        }
        else
        {
          v212 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v212 <= v183)
          v213 = v183;
        else
          v213 = v212;
        v366[0] = MEMORY[0x1C3B73D24](v211, v213, 1, v209);
        goto LABEL_150;
      }
      v217 = OUTLINED_FUNCTION_69_27().super.isa;
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_48_1(v195, (SEL)&selRef_initWithContact_ + 7);

      v216 = &selRef_associatedAppBundleIdentifier;
LABEL_159:
      specialized Array.append<A>(contentsOf:)();
      if (static Platform.current.getter() == 1)
      {
        v366[0] = v198;
        v218 = OUTLINED_FUNCTION_23_88();
        v62 = v340;
        if ((v218 & 0x1000000) != 0)
        {
          v219 = *(id *)&v345;
          OUTLINED_FUNCTION_11_111();
        }
        if ((OUTLINED_FUNCTION_23_88() & 1) != 0)
        {
          OUTLINED_FUNCTION_50_47(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
          OUTLINED_FUNCTION_11_111();
        }
        if ((OUTLINED_FUNCTION_23_88() & 0x100) != 0)
        {
          OUTLINED_FUNCTION_50_47(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
          OUTLINED_FUNCTION_11_111();
        }
        if ((OUTLINED_FUNCTION_23_88() & 0x10000) != 0)
        {
          v220 = (id)v346;
          OUTLINED_FUNCTION_11_111();
        }
        if ((OUTLINED_FUNCTION_23_88() & 0x1000000000000) != 0)
        {
          OUTLINED_FUNCTION_50_47(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton);
          OUTLINED_FUNCTION_11_111();
        }
        if ((OUTLINED_FUNCTION_23_88() & 0x10000000000) != 0)
        {
          OUTLINED_FUNCTION_50_47(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton);
          OUTLINED_FUNCTION_11_111();
        }
        OUTLINED_FUNCTION_4_147();
        if (v363)
          v141 = v141 + CGRectGetMinX(*(CGRect *)&v221);
        else
          v141 = CGRectGetMaxX(*(CGRect *)&v221) - v141 - v62;
        OUTLINED_FUNCTION_4_147();
        MaxY = CGRectGetMaxY(v389);
        v186 = v366[0];
        if (!(v366[0] >> 62))
        {
          v264 = *(_QWORD *)((v366[0] & 0xFFFFFFFFFFFFF8) + 0x10);
          OUTLINED_FUNCTION_35_0();
          if (v264)
          {
LABEL_194:
            if (v264 < 1)
            {
              __break(1u);
              JUMPOUT(0x1BD5C2FB4);
            }
            v265 = 0;
            v266 = MaxY - v142 - v62;
            OUTLINED_FUNCTION_49_51();
            if (v16)
              v269 = v268;
            else
              v269 = v267;
            do
            {
              if ((v186 & 0xC000000000000001) != 0)
                v270 = (id)MEMORY[0x1C3B73D18](v265, v186);
              else
                v270 = OUTLINED_FUNCTION_5_6(v186 + 8 * v265);
              v271 = v270;
              ++v265;
              v272 = OUTLINED_FUNCTION_257((uint64_t)v270, sel_traitCollection);
              objc_msgSend(v272, sel_displayScale);
              v274 = v273;

              v275 = ceil(v62 * v274) / v274;
              objc_msgSend(v271, sel_setFrame_, floor(v141 * v274) / v274, floor(v266 * v274) / v274, v275, v275);

              v141 = v269 + v141;
            }
            while (v264 != v265);
          }
LABEL_202:
          v276 = OUTLINED_FUNCTION_133();
          v277 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v1) + 0x258))(v276);
          OUTLINED_FUNCTION_67_26(v277, type metadata accessor for LocalParticipantControlsView.ViewModel);
          if (OUTLINED_FUNCTION_64_24() == 0x7964616552746F6ELL && v278 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v280 = OUTLINED_FUNCTION_13();
            OUTLINED_FUNCTION_27();
            v281 = *(_QWORD *)&v364;
            if ((v280 & 1) == 0)
            {
              v317 = *(id *)&v1;
              specialized Sequence.flatMap<A>(_:)(v281, v317, v358);
              swift_release();
              OUTLINED_FUNCTION_27();
              specialized Array.append<A>(contentsOf:)();
              goto LABEL_232;
            }
          }
          swift_release();
          goto LABEL_231;
        }
LABEL_244:
        OUTLINED_FUNCTION_35_0();
        v264 = OUTLINED_FUNCTION_25_3();
        if (v264)
          goto LABEL_194;
        goto LABEL_202;
      }
      swift_beginAccess();
      if (static AmbientState.isPresented == 1)
      {
        OUTLINED_FUNCTION_14_12();
        HasHomeButton = TUDeviceHasHomeButton();
        if ((_DWORD)HasHomeButton)
          v226 = 10.0;
        else
          v226 = v141 + 40.0;
        OUTLINED_FUNCTION_257(HasHomeButton, v216[228]);
        v227 = v142;
        v228 = CGRectGetWidth(v382) - v226 + -50.0;
        OUTLINED_FUNCTION_257(v229, v216[228]);
        v230 = CGRectGetHeight(v383) - v227 + -50.0 + -30.0;
        v231 = v361;
        v232 = v334;
        OUTLINED_FUNCTION_86_17(v361, v334);
        v233 = v362;
        v234 = v333;
        OUTLINED_FUNCTION_36_36(v362, v333);
        OUTLINED_FUNCTION_84_18();
        v364 = OUTLINED_FUNCTION_68_29(v235, v236, v237, v228, v230);
        v360 = v238;
        v240 = v239;
        v242 = v241;
        OUTLINED_FUNCTION_62_34();
        v243 = OUTLINED_FUNCTION_35_50(v231);
        OUTLINED_FUNCTION_257(v243, v216[228]);
        v244 = CGRectGetHeight(v384) - v227 + -50.0 + -30.0;
        OUTLINED_FUNCTION_36_36(v231, v232);
        OUTLINED_FUNCTION_36_36(v233, v234);
        OUTLINED_FUNCTION_84_18();
        v248 = OUTLINED_FUNCTION_68_29(v245, v246, v247, v226, v244);
        v250 = v249;
        v252 = v251;
        v254 = v253;
        OUTLINED_FUNCTION_35_50(v233);
        OUTLINED_FUNCTION_35_50(v231);
        OUTLINED_FUNCTION_49_51();
        if (v255)
          v256 = -70.0;
        else
          v256 = 70.0;
        v257 = v364;
        if (!v255)
          v257 = v248;
        v258 = v360;
        if (v255)
        {
          v259 = v240;
        }
        else
        {
          v258 = v250;
          v259 = v252;
        }
        if (v255)
          v260 = v242;
        else
          v260 = v254;
        objc_msgSend(*(id *)&v345, sel_setFrame_, v257, v258, v259, v260);
        v261 = *(void **)(*(_QWORD *)&v1
                        + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
        OUTLINED_FUNCTION_93_11();
        v262 = v256 + CGRectGetMinX(v385);
        OUTLINED_FUNCTION_93_11();
        objc_msgSend(v261, sel_setFrame_, v262, CGRectGetMinY(v386), 50.0, 50.0);
        OUTLINED_FUNCTION_92_15();
        v263 = v256 + CGRectGetMinX(v387);
        OUTLINED_FUNCTION_92_15();
        v179 = CGRectGetMinY(v388);
        v177 = sel_setFrame_;
        v176 = (id)v346;
        v178 = v263;
        v181 = 50.0;
        v180 = 50.0;
        goto LABEL_190;
      }
      v282 = OUTLINED_FUNCTION_80_21();
      objc_msgSend(v283, v284, v282);
      v285 = OUTLINED_FUNCTION_18_94();
      v286 = v285 + OUTLINED_FUNCTION_18_94() * -0.94 - v358;
      v287 = *(id *)&v1;
      specialized Sequence.flatMap<A>(_:)(*(unint64_t *)&v190, v287, v286);
      OUTLINED_FUNCTION_14_12();
      specialized Array.append<A>(contentsOf:)();
      v288 = v326;
      v289 = OUTLINED_FUNCTION_79_23();
      v290 = v288[7];
      OUTLINED_FUNCTION_67_26(v289, type metadata accessor for LocalParticipantControlsView.ViewModel);
      if (OUTLINED_FUNCTION_64_24() == 0x7964616572 && v291 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        v293 = v345;
      }
      else
      {
        v290 = v291;
        v288 = (unsigned __int8 *)OUTLINED_FUNCTION_13();
        OUTLINED_FUNCTION_27();
        v293 = v345;
        if ((v288 & 1) == 0)
        {
          v294 = (void *)OUTLINED_FUNCTION_77_19(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
          v296 = v355;
          v297 = v342;
          v298 = v343;
          v299 = v151;
          goto LABEL_218;
        }
      }
      OUTLINED_FUNCTION_77_19(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
      v296 = OUTLINED_FUNCTION_80_21();
LABEL_218:
      objc_msgSend(v294, v295, v296, v297, v299, v298);
      objc_msgSend(*(id *)&v293, (SEL)(v290 + 3016), v325, v324, v323, v322);
      v300 = (uint64_t)v327;
      OUTLINED_FUNCTION_79_23();
      outlined destroy of RemoteControlRequest(v300, type metadata accessor for LocalParticipantControlsView.ViewModel);
      if (OUTLINED_FUNCTION_64_24() != 0x7964616572 || v301 != 0xE500000000000000)
      {
        v303 = OUTLINED_FUNCTION_13();
        OUTLINED_FUNCTION_27();
        if ((v303 & 1) != 0)
        {
LABEL_230:
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BD644B60;
          *(_QWORD *)(inited + 32) = v288;
          *(double *)(inited + 40) = v293;
          v309 = (id)v346;
          *(double *)(inited + 48) = *(double *)&v346;
          v365 = inited;
          specialized Array._endMutation()();
          v310 = v365;
          v311 = *(id *)&v293;
          v312 = v309;
          v313 = v287;
          v314 = v288;
          specialized Sequence.forEach(_:)(v310, v313);
LABEL_231:
          swift_bridgeObjectRelease();
          goto LABEL_232;
        }
        v304 = v319;
        OUTLINED_FUNCTION_79_23();
        outlined destroy of RemoteControlRequest(v304, type metadata accessor for LocalParticipantControlsView.ViewModel);
        if (OUTLINED_FUNCTION_64_24() != 0x6552657669746361 || v305 != 0xEF676E6964726F63)
        {
          v307 = OUTLINED_FUNCTION_10_2();
          OUTLINED_FUNCTION_27();
          if ((v307 & 1) == 0)
            goto LABEL_232;
          goto LABEL_230;
        }
      }
      OUTLINED_FUNCTION_30_4();
      goto LABEL_230;
    }
LABEL_243:
    __break(1u);
    __break(1u);
    goto LABEL_244;
  }
  v174 = (void *)OUTLINED_FUNCTION_71_24(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
  objc_msgSend(v174, v175, v350, v349, v348, v351);
  if ((OUTLINED_FUNCTION_30_75() & 1) != 0)
  {
    v176 = (id)OUTLINED_FUNCTION_71_24(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
    v178 = v355;
    v179 = v342;
    v180 = v343;
    v181 = v151;
LABEL_190:
    objc_msgSend(v176, v177, v178, v179, v181, v180);
  }
LABEL_232:
  v315 = (void *)objc_opt_self();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  v316 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_2_1();
  objc_msgSend(v315, sel_activateConstraints_, v316);

}

uint64_t sub_1BD5C2FFC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t closure #5 in LocalParticipantControlsView.layoutViews()@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t result;
  double v16;

  v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
  v9 = objc_msgSend(v7, sel_trailingAnchor);
  v10 = objc_msgSend(a2, sel_trailingAnchor);
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, -v16);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v7, sel_centerYAnchor);
  v13 = objc_msgSend(a2, sel_centerYAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, a4 * 0.5);

  *(_QWORD *)(v8 + 40) = v14;
  result = specialized Array._endMutation()();
  *a3 = v8;
  return result;
}

BOOL LocalParticipantControlsView.styleSupportsCinematicFramingButton.getter()
{
  _QWORD *v0;
  unsigned __int8 (*v1)(void);

  if (static Platform.current.getter() != 1)
    return 0;
  v1 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210);
  return v1() == 3 || v1() == 2;
}

BOOL LocalParticipantControlsView.styleSupportsCameraBlurButton.getter()
{
  _QWORD *v0;
  unsigned __int8 (*v1)(void);

  v1 = *(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210);
  return v1() && v1() != 1;
}

BOOL LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter()
{
  _QWORD *v0;
  void (*v1)(void);
  char v3;

  v1 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210);
  v1();
  OUTLINED_FUNCTION_90_18();
  if (v3)
    return 1;
  v1();
  OUTLINED_FUNCTION_91_17();
  return v3 != 0;
}

uint64_t LocalParticipantControlsView.shouldShowEffectsButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = v4[2];
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && (*(unsigned __int8 (**)(void))((*v5 & *v0) + 0x210))())
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  else
    v7 = 0;
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCameraFlipButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = v4[3];
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1
    && (*(unsigned __int8 (**)(void))((*v5 & *v0) + 0x210))()
    && (((*(uint64_t (**)(void))((*v5 & *v0) + 0x320))() & 1) != 0
     || ((*(uint64_t (**)(void))((*v5 & *v0) + 0x328))() & 1) != 0))
  {
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x330))() ^ 1;
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCameraBlurButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = v4[1];
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsCameraBlurButton.getter())
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  else
    v7 = 0;
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowCinematicFramingButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (unsigned __int8 *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = *v4;
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsCinematicFramingButton.getter())
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  else
    v7 = 0;
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowReactionEffectGestureButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = v4[5];
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter())
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  else
    v7 = 0;
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.shouldShowStudioLightButton.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  int v6;
  char v7;
  uint64_t v9;

  v1 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))(v2);
  v6 = v4[6];
  outlined destroy of RemoteControlRequest((uint64_t)v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (v6 == 1 && LocalParticipantControlsView.styleSupportsReactionEffectGestureButton.getter())
    v7 = (*(uint64_t (**)(void))((*v5 & *v0) + 0x320))();
  else
    v7 = 0;
  return v7 & 1;
}

uint64_t LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  char v10;
  double v11;
  uint64_t inited;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  double v37;
  char v38;
  _QWORD aBlock[6];

  v3 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton);
  v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v9 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x210);
  v10 = v9(v4);
  v11 = 0.0;
  if (v10 == 2)
    v11 = 1.0;
  objc_msgSend(v7, sel_setAlpha_, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIControl, Bool)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6446F0;
  v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton);
  *(_QWORD *)(inited + 32) = v13;
  v14 = v13;
  *(_BYTE *)(inited + 40) = LocalParticipantControlsView.shouldShowEffectsButton.getter() & 1;
  v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton);
  *(_QWORD *)(inited + 48) = v15;
  v16 = v15;
  *(_BYTE *)(inited + 56) = LocalParticipantControlsView.shouldShowCameraFlipButton.getter() & 1;
  v17 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
  *(_QWORD *)(inited + 64) = v17;
  v18 = v17;
  *(_BYTE *)(inited + 72) = LocalParticipantControlsView.shouldShowCameraBlurButton.getter() & 1;
  v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
  *(_QWORD *)(inited + 80) = v19;
  v20 = v19;
  *(_BYTE *)(inited + 88) = LocalParticipantControlsView.shouldShowCinematicFramingButton.getter() & 1;
  v21 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton);
  *(_QWORD *)(inited + 96) = v21;
  v22 = v21;
  *(_BYTE *)(inited + 104) = LocalParticipantControlsView.shouldShowReactionEffectGestureButton.getter() & 1;
  v23 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton);
  *(_QWORD *)(inited + 112) = v23;
  v24 = v23;
  *(_BYTE *)(inited + 120) = LocalParticipantControlsView.shouldShowStudioLightButton.getter() & 1;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIControl);
  lazy protocol witness table accessor for type UIControl and conformance NSObject();
  v25 = Dictionary.init(dictionaryLiteral:)();
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v25;
  if ((a1 & 1) != 0)
  {
    v28 = (void *)objc_opt_self();
    aBlock[4] = partial apply for closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:);
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_113;
    v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_animateWithDuration_animations_, v29, 0.25);
    _Block_release(v29);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(v26, v25);
    swift_bridgeObjectRelease();
    v30 = swift_release();
  }
  v31 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
  (*(void (**)(uint64_t))((*v8 & *v1) + 0x258))(v30);
  v32 = v6[7];
  outlined destroy of RemoteControlRequest((uint64_t)v6, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (VideoMessageController.State.rawValue.getter(v32) == 0x676E696D726177 && v33 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v37 = 1.0;
  }
  else
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    v36 = swift_bridgeObjectRelease();
    v37 = 1.0;
    if ((v35 & 1) == 0)
    {
      v38 = ((uint64_t (*)(uint64_t, double))v9)(v36, 1.0);
      v37 = 1.0;
      if (v38 == 3)
        v37 = 0.0;
    }
  }
  objc_msgSend(v31, sel_setAlpha_, v37);
  return swift_release();
}

void closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  void (*v18)(void);
  id v19;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (!v4)
    return;
  v5 = (_QWORD *)v4;
  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!v9)
    goto LABEL_6;
LABEL_5:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v11 << 6); ; i = __clz(__rbit64(v16)) + (v11 << 6))
  {
    v18 = *(void (**)(void))((*v12 & *v5) + 0x3B0);
    v19 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * i);
    v18();

    if (v9)
      goto LABEL_5;
LABEL_6:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v10)
      goto LABEL_22;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_22;
      v16 = *(_QWORD *)(v6 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_22;
        v16 = *(_QWORD *)(v6 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v9 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_22:

    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v10)
      goto LABEL_22;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
}

Swift::Void __swiftcall LocalParticipantControlsView.updateControlsAlpha(animated:)(Swift::Bool animated)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  unsigned __int8 v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  char v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  double v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  double v35;
  char v36;
  uint64_t v37;

  OUTLINED_FUNCTION_56_42();
  OUTLINED_FUNCTION_1_1();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v37 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v37 - v9;
  v11 = LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(0);
  v12 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x258);
  v12(v11);
  v13 = v10[7];
  outlined destroy of RemoteControlRequest((uint64_t)v10, type metadata accessor for LocalParticipantControlsView.ViewModel);
  v15 = VideoMessageController.State.rawValue.getter(v13) == 0x6552657669746361 && v14 == 0xEF676E6964726F63;
  if (!v15)
  {
    v16 = OUTLINED_FUNCTION_10_2();
    v17 = OUTLINED_FUNCTION_133();
    if ((v16 & 1) != 0)
      goto LABEL_13;
    v18 = ((uint64_t (*)(uint64_t))v12)(v17);
    v19 = v8[7];
    OUTLINED_FUNCTION_67_26(v18, type metadata accessor for LocalParticipantControlsView.ViewModel);
    if (VideoMessageController.State.rawValue.getter(v19) != 0x7964616572 || v20 != 0xE500000000000000)
    {
      v22 = OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_53();
      v23 = 0;
      if ((v22 & 1) == 0)
        goto LABEL_16;
      goto LABEL_13;
    }
  }
  OUTLINED_FUNCTION_2_1();
LABEL_13:
  OUTLINED_FUNCTION_38_63();
  (*(void (**)(void))(v24 + 528))();
  OUTLINED_FUNCTION_90_18();
  v23 = v15;
LABEL_16:
  OUTLINED_FUNCTION_38_63();
  if (((*(uint64_t (**)(void))(v25 + 432))() & 1) != 0 || v23)
  {
    OUTLINED_FUNCTION_38_63();
    v27 = (void *)(*(uint64_t (**)(void))(v26 + 456))();
    v28 = v27;
    v29 = 0.0;
    if (v23)
      v29 = 1.0;
    objc_msgSend(v27, sel_setAlpha_, v29);

  }
  OUTLINED_FUNCTION_38_63();
  v31 = (void *)(*(uint64_t (**)(void))(v30 + 312))();
  if (!v31)
    goto LABEL_29;
  v32 = v31;
  v33 = objc_msgSend(v31, sel_view);

  if (v33)
  {
    ((void (*)(void))v12)();
    outlined destroy of RemoteControlRequest((uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
    if (OUTLINED_FUNCTION_64_24() == 0xD000000000000014 && v34 == 0x80000001BD66C3B0)
    {
      swift_bridgeObjectRelease();
      v35 = 0.0;
    }
    else
    {
      v36 = OUTLINED_FUNCTION_13();
      swift_bridgeObjectRelease();
      v35 = 1.0;
      if ((v36 & 1) != 0)
        v35 = 0.0;
    }
    objc_msgSend(v33, sel_setAlpha_, v35);

LABEL_29:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  __break(1u);
}

void closure #3 in LocalParticipantControlsView.changed(_:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1F8))();
    v7 = v6;

    if (v5)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
  }
}

void partial apply for closure #3 in LocalParticipantControlsView.changed(_:from:)(uint64_t a1)
{
  uint64_t v1;

  closure #3 in LocalParticipantControlsView.changed(_:from:)(a1, v1);
}

void protocol witness for LocalParticipantControlsViewProtocol.layoutViews() in conformance LocalParticipantControlsView()
{
  LocalParticipantControlsView.layoutViews()();
}

void protocol witness for LocalParticipantControlsViewProtocol.updateViews() in conformance LocalParticipantControlsView()
{
  LocalParticipantControlsView.updateViews()();
}

void protocol witness for LocalParticipantControlsViewProtocol.updateControlsAlpha(animated:) in conformance LocalParticipantControlsView()
{
  LocalParticipantControlsView.updateControlsAlpha(animated:)(0);
}

void protocol witness for LocalParticipantControlsViewProtocol.changed(_:from:) in conformance LocalParticipantControlsView(_BYTE *a1, _BYTE *a2)
{
  LocalParticipantControlsView.changed(_:from:)(a1, a2);
}

unint64_t lazy protocol witness table accessor for type UIControl and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIControl and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIControl and conformance NSObject)
  {
    v1 = _sSo8NSObjectCMaTm_0(255, &lazy cache variable for type metadata for UIControl);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIControl and conformance NSObject);
  }
  return result;
}

uint64_t sub_1BD5C4158()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void partial apply for closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)()
{
  uint64_t v0;

  closure #1 in LocalParticipantControlsView.updateControlsAlphaCommon(animated:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double OUTLINED_FUNCTION_39_68(double a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[18];
  v3 = v1[19];
  v4 = v1[20];
  return CGRectGetMinX(*(CGRect *)&a1);
}

uint64_t OUTLINED_FUNCTION_76_25(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(v1 - 128));
}

double OUTLINED_FUNCTION_85_22()
{
  double v0;

  return v0;
}

void OUTLINED_FUNCTION_87_17()
{
  JUMPOUT(0x1C3B73D18);
}

id OUTLINED_FUNCTION_93_11()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 1352));
}

void onNextMainRunLoop(do:)(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  Class isa;
  void *v9;
  _QWORD v10[6];

  v4 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSRunLoopMode>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
  v6 = (void *)*MEMORY[0x1E0C99860];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0C99860];
  type metadata accessor for NSRunLoopMode(0);
  v7 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10[4] = a1;
  v10[5] = a2;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v10[3] = &block_descriptor_114;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performInModes_block_, isa, v9);
  _Block_release(v9);

}

uint64_t *ConversationHUDViewController.__allocating_init(recipe:presentationSize:controlsManager:context:)(uint64_t a1, void *a2, char a3)
{
  objc_class *v3;
  id v6;
  uint64_t v7;

  OUTLINED_FUNCTION_42_51();
  v6 = objc_allocWithZone(v3);
  OUTLINED_FUNCTION_235();
  return ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)(v7, a2, a3);
}

void ConversationHUDViewController.presentShareCardViewController(_:)(void *a1)
{
  uint64_t *v1;
  char *v3;
  char *v4;

  v3 = a1;
  ConversationHUDViewController.shareCardViewController.setter((uint64_t)a1);
  v4 = &v3[OBJC_IVAR____TtC15ConversationKit43ConversationControlsShareCardViewController_delegate];
  OUTLINED_FUNCTION_2_0();
  *((_QWORD *)v4 + 1) = &protocol witness table for ConversationHUDViewController;
  OUTLINED_FUNCTION_50();
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_55_36(*v1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v3, 1, 0);
  OUTLINED_FUNCTION_9_0();
}

id HUDShadowProperties.color.getter()
{
  id *v0;

  return *v0;
}

float HUDShadowProperties.opacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

double HUDShadowProperties.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double HUDShadowProperties.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t HUDShadowProperties.init(color:opacity:radius:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, float a3@<S0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(_QWORD *)a2 = result;
  *(float *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t key path setter for ConversationHUDViewController.controlsManager : ConversationHUDViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xF8))(*a1);
}

id ConversationHUDViewController.controlsManager.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void ConversationHUDViewController.controlsManager.setter(void *a1)
{
  uint64_t *v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsManager);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  OUTLINED_FUNCTION_91_18(*v1);
  OUTLINED_FUNCTION_9_0();
}

void ConversationHUDViewController.controlsManager.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.controlsManager.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_91_18(**(_QWORD **)(a1 + 24));
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.context.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.context.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_context);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.context.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationHUDViewController.ephemeralAlertCancellable : ConversationHUDViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x128);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationHUDViewController.ephemeralAlertCancellable.getter()
{
  return ConversationHUDViewController.ephemeralAlertCancellable.getter();
}

{
  OUTLINED_FUNCTION_1_7();
  return swift_retain();
}

void ConversationHUDViewController.ephemeralAlertCancellable.setter(uint64_t a1)
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_ephemeralAlertCancellable);
}

void ConversationHUDViewController.ephemeralAlertCancellable.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationHUDViewController.appLaunchButtonCancellable : ConversationHUDViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x140);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ConversationHUDViewController.appLaunchButtonCancellable.getter()
{
  return ConversationHUDViewController.ephemeralAlertCancellable.getter();
}

void ConversationHUDViewController.appLaunchButtonCancellable.setter(uint64_t a1)
{
  ConversationControlsManager.incomingScreenSharingRequestActivity.setter(a1, &OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchButtonCancellable);
}

void ConversationHUDViewController.appLaunchButtonCancellable.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationHUDViewController.shadowProperties : ConversationHUDViewController(uint64_t a1, _QWORD **a2)
{
  __int128 v2;
  uint64_t (*v3)(_OWORD *);
  id v4;
  _OWORD v6[2];
  uint64_t v7;

  v2 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v2;
  v7 = *(_QWORD *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x158);
  v4 = *(id *)&v6[0];
  return v3(v6);
}

id ConversationHUDViewController.shadowProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_DWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_DWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(_QWORD *)(a1 + 32) = v6;
  return OUTLINED_FUNCTION_27_27(v4);
}

void ConversationHUDViewController.shadowProperties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  __int128 v5;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a1 + 32);

  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.shadowProperties.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.deferPillUpdates.didset()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates;
  v5 = swift_beginAccess();
  if ((*v4 & 1) == 0)
  {
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))(v5) & 1) != 0)
    {
      v6 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v6);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
    else
    {
      ConversationHUDViewController.hideAppLaunchPill(remove:)(0);
    }
  }
}

void ConversationHUDViewController.deferPillUpdates.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.deferPillUpdates.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationHUDViewController.deferPillUpdates.didset();
  OUTLINED_FUNCTION_9_0();
}

void ConversationHUDViewController.deferPillUpdates.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.deferPillUpdates.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))ConversationHUDViewController.deferPillUpdates.didset);
}

void ConversationHUDViewController.pillShouldBeShowing.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.pillShouldBeShowing.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_pillShouldBeShowing);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.pillShouldBeShowing.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationHUDViewController.wantsAppLaunchPill(buttonType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int8x16_t v37;
  _BYTE v38[96];
  _BYTE v39[40];
  unsigned __int8 v40;
  _BYTE v41[48];
  uint64_t v42;
  int8x16_t v43;
  int8x16_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  OUTLINED_FUNCTION_93();
  v46 = v2;
  v47 = v3;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v38[-v8];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v38[-v11];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v38[-v14];
  OUTLINED_FUNCTION_63_30();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_83_4();
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)(v5, v1);
  LOBYTE(v5) = v17;
  OUTLINED_FUNCTION_40_58(v1);
  if ((v5 & 1) != 0)
    return 0;
  OUTLINED_FUNCTION_154();
  if (((*(uint64_t (**)(void))(v18 + 936))() & 1) != 0)
    return 0;
  OUTLINED_FUNCTION_154();
  v20 = (*(uint64_t (**)(void))(v19 + 240))();
  OUTLINED_FUNCTION_154();
  v22 = (*(unsigned __int8 (**)(void))(v21 + 2112))();

  if (v22 > 0x1F)
    return 0;
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_115_13();
  OUTLINED_FUNCTION_28_1();
  if (OUTLINED_FUNCTION_46_7((uint64_t)v15))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_39_69();
  }
  else
  {
    outlined init with copy of ConversationControlsType((uint64_t)v15, (uint64_t)&v42);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_114(11);
  OUTLINED_FUNCTION_106_14((uint64_t)&v42, (uint64_t)v39);
  OUTLINED_FUNCTION_106_14((uint64_t)v41, v20);
  if (v40 == 255)
  {
    v20 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    OUTLINED_FUNCTION_77_20();
    if (v25)
      goto LABEL_37;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_78_22(v23, v24, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_77_20();
  if (v25)
  {
    v20 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    v26 = OUTLINED_FUNCTION_402();
LABEL_15:
    OUTLINED_FUNCTION_105_10(v26, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_76_26();
  OUTLINED_FUNCTION_75_26();
  OUTLINED_FUNCTION_84_19();
  OUTLINED_FUNCTION_326_3((uint64_t)v41);
  OUTLINED_FUNCTION_326_3((uint64_t)&v42);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_326_3((uint64_t)v39);
  if ((v20 & 1) != 0)
    return 0;
LABEL_16:
  OUTLINED_FUNCTION_115_13();
  v27 = OUTLINED_FUNCTION_46_7((uint64_t)v12);
  if ((_DWORD)v27)
  {
    OUTLINED_FUNCTION_96_6(v27, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_39_69();
  }
  else
  {
    v28 = outlined init with copy of ConversationControlsType((uint64_t)v12, (uint64_t)&v42);
    OUTLINED_FUNCTION_96_6(v28, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_114(12);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v42, (uint64_t)v39, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, v20, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v40 == 255)
  {
    v20 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    OUTLINED_FUNCTION_77_20();
    if (v25)
      goto LABEL_37;
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_78_22(v29, v30, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_77_20();
  if (v25)
  {
    v20 = (uint64_t)&demangling cache variable for type metadata for ConversationControlsType?;
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    v26 = OUTLINED_FUNCTION_402();
LABEL_27:
    OUTLINED_FUNCTION_105_10(v26, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_76_26();
  OUTLINED_FUNCTION_75_26();
  OUTLINED_FUNCTION_84_19();
  OUTLINED_FUNCTION_43_0((uint64_t)v41);
  OUTLINED_FUNCTION_43_0((uint64_t)&v42);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_43_0((uint64_t)v39);
  if ((v20 & 1) != 0)
    return 0;
LABEL_28:
  OUTLINED_FUNCTION_115_13();
  if (OUTLINED_FUNCTION_46_7((uint64_t)v9))
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_39_69();
  }
  else
  {
    outlined init with copy of ConversationControlsType((uint64_t)v9, (uint64_t)&v42);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  OUTLINED_FUNCTION_12_114(24);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v42, (uint64_t)v39, &demangling cache variable for type metadata for ConversationControlsType?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v41, v20, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v40 == 255)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    OUTLINED_FUNCTION_77_20();
    if (!v25)
      goto LABEL_40;
LABEL_37:
    OUTLINED_FUNCTION_105_10(v26, &demangling cache variable for type metadata for ConversationControlsType?);
    return 0;
  }
  OUTLINED_FUNCTION_78_22(v31, v32, &demangling cache variable for type metadata for ConversationControlsType?);
  OUTLINED_FUNCTION_77_20();
  if (v25)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v41);
    OUTLINED_FUNCTION_9_42((uint64_t)&v42);
    v26 = OUTLINED_FUNCTION_402();
LABEL_40:
    OUTLINED_FUNCTION_105_10(v26, &demangling cache variable for type metadata for (ConversationControlsType?, ConversationControlsType?));
    goto LABEL_41;
  }
  OUTLINED_FUNCTION_76_26();
  OUTLINED_FUNCTION_75_26();
  OUTLINED_FUNCTION_84_19();
  OUTLINED_FUNCTION_211((uint64_t)v41);
  OUTLINED_FUNCTION_211((uint64_t)&v42);
  OUTLINED_FUNCTION_402();
  OUTLINED_FUNCTION_211((uint64_t)v39);
  if ((v20 & 1) != 0)
    return 0;
LABEL_41:
  OUTLINED_FUNCTION_115_13();
  v34 = OUTLINED_FUNCTION_46_7(v0);
  if (!(_DWORD)v34)
  {
    v36 = outlined init with copy of ConversationControlsType(v0, (uint64_t)v39);
    OUTLINED_FUNCTION_32_18(v36, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined init with copy of ConversationControlsType((uint64_t)v39, (uint64_t)&v42);
    if (v45 == 2)
    {
      v35 = 1;
    }
    else
    {
      if (v45 == 6 && v42 == 5)
      {
        v37 = vorrq_s8(v43, v44);
        if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v37.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL)))
        {
          v35 = 1;
LABEL_51:
          outlined destroy of ConversationControlsType((uint64_t)v39);
          return v35 ^ 1u;
        }
      }
      v35 = 0;
    }
    outlined destroy of ConversationControlsType((uint64_t)&v42);
    goto LABEL_51;
  }
  OUTLINED_FUNCTION_32_18(v34, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v35 = 0;
  return v35 ^ 1u;
}

void ConversationHUDViewController.cnkContentAlpha.didset()
{
  _QWORD *v0;
  void *v1;
  double *v2;
  void *v3;
  double *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  double v9;
  void (*v10)(uint64_t, uint64_t, double);
  id v11;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
  if (v1)
  {
    v2 = (double *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
    swift_beginAccess();
    objc_msgSend(v1, sel_setAlpha_, *v2);
  }
  v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
  v4 = (double *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
  swift_beginAccess();
  objc_msgSend(v3, sel_setAlpha_, *v4);

  v5 = (char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
  v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v6)
  {
    v7 = *((_QWORD *)v5 + 1);
    ObjectType = swift_getObjectType();
    v9 = *v4;
    v10 = *(void (**)(uint64_t, uint64_t, double))(v7 + 32);
    v11 = v6;
    v10(ObjectType, v7, v9);

  }
}

double ConversationHUDViewController.cnkContentAlpha.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

void ConversationHUDViewController.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationHUDViewController.cnkContentAlpha.didset();
  OUTLINED_FUNCTION_8_15();
}

void ConversationHUDViewController.cnkContentAlpha.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))ConversationHUDViewController.cnkContentAlpha.didset);
}

void ConversationHUDViewController.backgroundMaterialView.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView;
  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView);
  if (!v2)
  {
    v3 = closure #1 in ConversationHUDViewController.backgroundMaterialView.getter(v0);
    v4 = *(void **)((char *)v0 + v1);
    *(_QWORD *)((char *)v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

id closure #1 in ConversationHUDViewController.backgroundMaterialView.getter(_QWORD *a1)
{
  id v2;
  id v3;
  _QWORD *v4;
  void (*v5)(void);
  id v6;
  id v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  double v24[50];

  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v2);

  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x1A0);
  v6 = v3;
  v5();
  objc_msgSend(v6, sel_setAlpha_);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = v6;
  static Layout.ConversationControls.values.getter((uint64_t)v24);
  objc_msgSend(v7, sel__setContinuousCornerRadius_, v24[19] * 0.5 + ConversationHUDViewController.contentInsetForCornerRadius.getter());

  v8 = *(uint64_t (**)(void))((*v4 & *a1) + 0x360);
  if (v8())
  {
    v10 = v9;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    v13 = v12;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v7, sel__setCaptureView_, v13);

  if (v8())
  {
    v15 = v14;
    v16 = swift_getObjectType();
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v16, v15);
    v19 = v18;
    v21 = v20;
    swift_unknownObjectRelease();

    v22 = (void *)MEMORY[0x1C3B72E00](v17, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v7, sel__setGroupName_, v22);

  return v7;
}

void ConversationHUDViewController.backgroundMaterialView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView);
}

void ConversationHUDViewController.backgroundMaterialView.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDViewController.backgroundMaterialView.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.backgroundMaterialView.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationHUDViewController.backgroundMaterialView.setter((uint64_t)v3);

  }
  else
  {
    ConversationHUDViewController.backgroundMaterialView.setter((uint64_t)v2);
  }
}

double ConversationHUDViewController.contentInsetForCornerRadius.getter()
{
  uint64_t *v0;
  char v1;
  double result;
  _QWORD v3[50];

  v1 = OUTLINED_FUNCTION_18_95(*v0);
  result = 0.0;
  if (v1 != 2)
  {
    static Layout.ConversationControls.values.getter((uint64_t)v3);
    return *(double *)&v3[13];
  }
  return result;
}

void ConversationHUDViewController.controlsView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  *v3 = a1;
  v3[1] = a2;

}

void ConversationHUDViewController.menuContainerView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView);
}

void ConversationHUDViewController.appLaunchPillView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
}

void ConversationHUDViewController.topConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint);
}

void ConversationHUDViewController.bottomConstraint.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint);
}

void ConversationHUDViewController.shareCardViewController.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController);
}

uint64_t *ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)(uint64_t a1, void *a2, char a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  _QWORD *v24;
  void (*v25)(double);
  uint64_t *v26;
  double v27;
  objc_super v29;
  char v30[88];
  int v31;
  char v32[96];
  uint64_t v33;
  char v34[72];
  __int128 v35;

  OUTLINED_FUNCTION_42_51();
  v9 = v8;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_ephemeralAlertCancellable] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchButtonCancellable] = 0;
  v10 = &v3[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties];
  objc_opt_self();
  v11 = v3;
  v12 = OUTLINED_FUNCTION_6_7((uint64_t)v11, sel_blackColor);
  static Layout.ConversationControls.values.getter((uint64_t)v30);
  v13 = v31;
  static Layout.ConversationControls.values.getter((uint64_t)v32);
  v14 = v33;
  static Layout.ConversationControls.values.getter((uint64_t)v34);
  *(_QWORD *)v10 = v12;
  *((_DWORD *)v10 + 2) = v13;
  *((_QWORD *)v10 + 2) = v14;
  *(_OWORD *)(v10 + 24) = v35;
  v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates] = 0;
  v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_pillShouldBeShowing] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView] = 0;
  v15 = &v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsHeightLayoutConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsWidthLayoutConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate]);
  v16 = (uint64_t)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe];
  v17 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_77_0(v16, v18, v19, v17);
  OUTLINED_FUNCTION_2_0();
  v20 = OUTLINED_FUNCTION_50();
  outlined assign with copy of ConversationControlsRecipe?(v20, v21);
  swift_endAccess();
  v22 = &v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize];
  *(_QWORD *)v22 = v5;
  *((_QWORD *)v22 + 1) = v4;
  *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsManager] = a2;
  v11[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_context] = a3;
  v23 = a2;

  v29.receiver = v11;
  v29.super_class = (Class)ObjC metadata update function for ConversationHUDViewController();
  v24 = objc_msgSendSuper2(&v29, sel_initWithNibName_bundle_, 0, 0);
  v25 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x3C0);
  v26 = v24;
  v27 = OUTLINED_FUNCTION_235();
  v25(v27);
  OUTLINED_FUNCTION_91_18(*v26);

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return v26;
}

uint64_t type metadata accessor for ConversationHUDViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationHUDViewController;
  if (!type metadata singleton initialization cache for ConversationHUDViewController)
    return swift_getSingletonMetadata();
  return result;
}

void ConversationHUDViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ConversationHUDViewController.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  id v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[88];
  int v11;
  _BYTE v12[96];
  uint64_t v13;
  _BYTE v14[72];
  __int128 v15;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_ephemeralAlertCancellable] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchButtonCancellable] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shadowProperties];
  v2 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  static Layout.ConversationControls.values.getter((uint64_t)v10);
  v3 = v11;
  static Layout.ConversationControls.values.getter((uint64_t)v12);
  v4 = v13;
  static Layout.ConversationControls.values.getter((uint64_t)v14);
  *(_QWORD *)v1 = v2;
  *((_DWORD *)v1 + 2) = v3;
  *((_QWORD *)v1 + 2) = v4;
  *(_OWORD *)(v1 + 24) = v15;
  v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_deferPillUpdates] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_pillShouldBeShowing] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_cnkContentAlpha] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController____lazy_storage___backgroundMaterialView] = 0;
  v5 = &v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsHeightLayoutConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_detailsWidthLayoutConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate]);
  v6 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe];
  v7 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_77_0(v6, v8, v9, v7);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)ObjC metadata update function for ConversationHUDViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ConversationHUDViewController.setupRootView()();
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
}

Swift::Void __swiftcall ConversationHUDViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void *v14;
  objc_super v15;

  isa = a1.value.super.isa;
  v15.receiver = v1;
  v15.super_class = (Class)ObjC metadata update function for ConversationHUDViewController();
  v3 = objc_msgSendSuper2(&v15, sel_traitCollectionDidChange_, isa);
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (isa)
  {
    v7 = OUTLINED_FUNCTION_123(v6, sel_preferredContentSizeCategory);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_4();
    if ((v13 & 1) != 0)
      goto LABEL_13;
  }
  else
  {

  }
  v14 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v14)
    OUTLINED_FUNCTION_65(v14, sel_traitCollectionDidChange_);
  OUTLINED_FUNCTION_55_36(*v1);
LABEL_13:
  OUTLINED_FUNCTION_6_2();
}

void ConversationHUDViewController.viewWillTransition(to:with:)(void *a1)
{
  NSObject *v1;
  os_log_type_t v2;
  NSObject *v3;
  double v5;
  objc_super *v6;
  SEL v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char aBlock;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  void *v38;
  NSObject *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  void *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = v1;
  OUTLINED_FUNCTION_42_51();
  OUTLINED_FUNCTION_15_6();
  ObjC metadata update function for ConversationHUDViewController();
  v5 = OUTLINED_FUNCTION_235();
  objc_msgSendSuper2(v6, v7, a1, v5);
  -[NSObject preferredContentSize](v1, sel_preferredContentSize);
  v9 = v8;
  v11 = v10;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationControls);
  v13 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v13))
  {
    v14 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136446722;
    v15 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_132(v15, v16, v17, v18);
    OUTLINED_FUNCTION_88_10();
    OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v14 + 12) = 2082;
    v19 = OUTLINED_FUNCTION_235();
    v20 = MEMORY[0x1C3B7379C](v19);
    OUTLINED_FUNCTION_132(v20, v21, v22, v23);
    OUTLINED_FUNCTION_88_10();
    v24 = OUTLINED_FUNCTION_54_1();
    *(_WORD *)(v14 + 22) = 2082;
    v25 = MEMORY[0x1C3B7379C](v24, v9, v11);
    OUTLINED_FUNCTION_132(v25, v26, v27, v28);
    OUTLINED_FUNCTION_88_10();
    OUTLINED_FUNCTION_54_1();
    _os_log_impl(&dword_1BD004000, v1, v2, "[%{public}s] willTransition(to size: %{public}s, with coordinator:) , preffered contentSize %{public}s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v29 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v29 + 16) = v1;
  aBlock = MEMORY[0x1E0C809B0];
  v38 = OUTLINED_FUNCTION_126_7(v29, v31, v32, v33, v34, v35, v36, v37, v50, v52, MEMORY[0x1E0C809B0]);
  v39 = v3;
  swift_release();
  v40 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v40 + 16) = v39;
  v48 = OUTLINED_FUNCTION_126_7(v40, v41, v42, v43, v44, v45, v46, v47, v51, v53, aBlock);
  v49 = v39;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v38, v48);
  _Block_release(v48);
  OUTLINED_FUNCTION_10_33();
}

void closure #1 in ConversationHUDViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;

  v1 = OUTLINED_FUNCTION_123(a1, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setNeedsLayout);

    v4 = OUTLINED_FUNCTION_123(v3, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_layoutIfNeeded);
      OUTLINED_FUNCTION_15_9(v5);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Bool __swiftcall ConversationHUDViewController._canShowWhileLocked()()
{
  return 1;
}

void ConversationHUDViewController.setupRootView()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_25_1(v4, sel_view);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_layer);

    OUTLINED_FUNCTION_18_4(v7, sel_setAllowsGroupOpacity_);
    ConversationHUDViewController.setupMaterialView()();
    ConversationHUDViewController.setupControlsView(animated:)();
    OUTLINED_FUNCTION_63_30();
    OUTLINED_FUNCTION_182_7();
    ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
    OUTLINED_FUNCTION_18_18((uint64_t)v3);
    OUTLINED_FUNCTION_154();
    (*(void (**)(void))(v8 + 952))();
    OUTLINED_FUNCTION_182_7();
    ConversationHUDViewController.showAppLaunchPill(buttonType:)();
    OUTLINED_FUNCTION_18_18((uint64_t)v3);
    if (OUTLINED_FUNCTION_18_95(*v0) == 1)
    {
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_419(*(uint64_t (**)(uint64_t))(v9 + 368));
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void ConversationHUDViewController.setupMaterialView()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  Class isa;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;

  OUTLINED_FUNCTION_149_1();
  v1 = v0;
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
  v3 = OUTLINED_FUNCTION_25_1(v2, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  v5 = (void *)OUTLINED_FUNCTION_11_31();
  objc_msgSend(v4, sel_addSubview_, v5);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v6 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v6 + 16) = xmmword_1BD644B60;
  v7 = objc_msgSend((id)OUTLINED_FUNCTION_11_31(), sel_leadingAnchor);
  OUTLINED_FUNCTION_26_2();
  v9 = OUTLINED_FUNCTION_123(v8, sel_view);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_leadingAnchor);

  v12 = OUTLINED_FUNCTION_4_117();
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v6 + 32) = v10;
  v13 = objc_msgSend((id)OUTLINED_FUNCTION_11_31(), sel_topAnchor);
  OUTLINED_FUNCTION_26_2();
  v15 = OUTLINED_FUNCTION_123(v14, sel_view);
  if (!v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_topAnchor);

  v18 = OUTLINED_FUNCTION_4_117();
  OUTLINED_FUNCTION_4_39();

  *(_QWORD *)(v6 + 40) = v16;
  v19 = objc_msgSend((id)OUTLINED_FUNCTION_11_31(), sel_trailingAnchor);
  OUTLINED_FUNCTION_26_2();
  v21 = OUTLINED_FUNCTION_123(v20, sel_view);
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v22 = v21;
  v23 = (void *)objc_opt_self();
  v24 = OUTLINED_FUNCTION_6_7((uint64_t)v23, sel_trailingAnchor);

  v25 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v6 + 48) = v25;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v23, sel_activateConstraints_, isa);

  if (OUTLINED_FUNCTION_29_76(*v1))
  {
    OUTLINED_FUNCTION_9_5();
    return;
  }
  v27 = (void *)OUTLINED_FUNCTION_11_31();
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v30 = OUTLINED_FUNCTION_123(v29, sel_view);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, sel_bottomAnchor);

    v33 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v32);
    OUTLINED_FUNCTION_40_3(v33, sel_setActive_);
    OUTLINED_FUNCTION_78_1(v33);
    return;
  }
LABEL_13:
  __break(1u);
}

void ConversationHUDViewController.makeControlsView(recipe:)()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  NSObject *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  _QWORD v55[4];
  uint64_t v56;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v55 - v8;
  ConversationHUDViewController.makeSystemApertureControlsView(for:)();
  if (v10)
  {
    v12 = v10;
    v55[2] = v11;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v13, (uint64_t)&static Logger.conversationControls);
    v14 = OUTLINED_FUNCTION_12_0();
    if (os_log_type_enabled(v0, v14))
    {
      v15 = OUTLINED_FUNCTION_105();
      v55[0] = v3;
      v16 = (uint8_t *)v15;
      v17 = OUTLINED_FUNCTION_105();
      v55[1] = v0;
      v56 = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = OUTLINED_FUNCTION_7_10();
      v20 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v19, &v56);
      OUTLINED_FUNCTION_8_12(v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v14, "[%{public}s] makeControlsView using makeSystemApertureControlsView", v16);
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_65(v12, sel_setMinimumContentSizeCategory_);
    OUTLINED_FUNCTION_65(v12, sel_setMaximumContentSizeCategory_);
    v21 = *(unsigned __int8 *)(v3 + *(int *)(v5 + 64));
    OUTLINED_FUNCTION_143_9(v3, v22, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    if (v21 == 1)
    {
      OUTLINED_FUNCTION_49_15(v23, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_15:
      v41 = v12;
      addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(v41, v0);

      goto LABEL_22;
    }
    OUTLINED_FUNCTION_62_35(24);
    static ConversationControlsType.== infix(_:_:)((uint64_t)v9);
    v39 = v38;
    v40 = OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_49_15(v40, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    if ((v39 & 1) != 0)
      goto LABEL_15;
  }
  else
  {
    OUTLINED_FUNCTION_62_35(7);
    static ConversationControlsType.== infix(_:_:)(v3);
    v25 = v24;
    OUTLINED_FUNCTION_30_2();
    if ((v25 & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v42 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v42, (uint64_t)&static Logger.conversationControls);
      v43 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_41_3(v43))
      {
        v44 = (uint8_t *)OUTLINED_FUNCTION_105();
        v56 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v44 = 136446210;
        v45 = OUTLINED_FUNCTION_7_10();
        v47 = OUTLINED_FUNCTION_153_8(v45, v46);
        OUTLINED_FUNCTION_42_56(v47);
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v4, "[%{public}s] makeControlsView using ConversationHUDControlsView", v44);
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_68_30(v3, v48, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      OUTLINED_FUNCTION_128_10((uint64_t)v0->isa);
      v49 = OUTLINED_FUNCTION_18_95((uint64_t)v0->isa);
      objc_allocWithZone((Class)type metadata accessor for ConversationHUDControlsView());
      v50 = v1;
      v51 = OUTLINED_FUNCTION_131();
      ConversationHUDControlsView.init(recipe:controlsManager:context:menuHostViewController:)(v51, v52, v49, v53, v54);
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v26 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v26, (uint64_t)&static Logger.conversationControls);
    v27 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_41_3(v27))
    {
      v28 = (uint8_t *)OUTLINED_FUNCTION_105();
      v56 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v28 = 136446210;
      v29 = OUTLINED_FUNCTION_7_10();
      v31 = OUTLINED_FUNCTION_153_8(v29, v30);
      OUTLINED_FUNCTION_42_56(v31);
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v4, "[%{public}s] makeControlsView using OngoingTelephonyControlsView", v28);
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_68_30(v3, v32, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_128_10((uint64_t)v0->isa);
    objc_allocWithZone((Class)type metadata accessor for OngoingTelephonyControlsView());
    v33 = v0;
    v34 = OUTLINED_FUNCTION_131();
    v37 = OngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)(v34, v35, v0, v36);
    addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(v37, v33);
  }
LABEL_22:
  OUTLINED_FUNCTION_52_1();
}

void addStatusTapTo #1 (_:) in ConversationHUDViewController.makeControlsView(recipe:)(void *a1, void *a2)
{
  id v4;
  id v5;
  _QWORD v6[4];

  v6[3] = type metadata accessor for ConversationHUDViewController();
  v6[0] = a2;
  objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v4 = a2;
  v5 = @nonobjc UITapGestureRecognizer.init(target:action:)(v6, (uint64_t)sel_statusViewTapped);
  objc_msgSend(v5, sel_setDelegate_, v4);
  objc_msgSend(a1, sel_addGestureRecognizer_, v5);

}

void ConversationHUDViewController.makeSystemApertureControlsView(for:)()
{
  NSObject *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t ObjectType;
  int8x16_t v17;
  int8x8_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  id v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t *v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  os_log_type_t v59;
  _BOOL8 v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char v79;
  uint64_t *v80;
  id v81;
  double v82;
  double v83;
  uint8_t *v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  int8x16_t v88;
  int8x16_t v89;
  char v90;
  uint64_t v91;

  OUTLINED_FUNCTION_93();
  v3 = v1;
  v5 = v4;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v84 - v8;
  OUTLINED_FUNCTION_153();
  v11 = *(uint64_t (**)(void))(v10 + 864);
  if (!v11())
    goto LABEL_14;
  OUTLINED_FUNCTION_185_6();
  v12 = OUTLINED_FUNCTION_183_5();
  if (!v12)
  {
    OUTLINED_FUNCTION_19_0();
LABEL_14:
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v28 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v28, (uint64_t)&static Logger.conversationControls);
    v29 = OUTLINED_FUNCTION_60_3();
    Logger.logObject.getter();
    v30 = OUTLINED_FUNCTION_31_6();
    if (os_log_type_enabled(v0, v30))
    {
      v31 = OUTLINED_FUNCTION_105();
      v91 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v31 = 136446466;
      v32 = OUTLINED_FUNCTION_7_10();
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v34 = OUTLINED_FUNCTION_25();
      *(_WORD *)(v31 + 12) = 2080;
      v35 = ((uint64_t (*)(uint64_t))v11)(v34);
      if (v35)
      {
        v87 = v35;
        v88.i64[0] = v36;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsViewControllerDelegate);
        v37 = String.init<A>(reflecting:)();
        v39 = v38;
      }
      else
      {
        v39 = 0xE300000000000000;
        v37 = 7104878;
      }
      v87 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_92_16(&dword_1BD004000, v0, v30, "[%{public}s] makeSystemApertureControlsView returning nil for delegate: %s");
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_27;
  }
  v14 = v12;
  v15 = v13;
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(ObjectType, v15) & 1) != 0)
  {
    outlined init with copy of ConversationControlsType(v5, (uint64_t)&v87);
    if (v90 != 6)
      goto LABEL_39;
    v17 = vorrq_s8(v88, v89);
    v18 = vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL));
    if (v87 == 6 && !*(_QWORD *)&v18)
    {
LABEL_7:
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v19 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v19, (uint64_t)&static Logger.conversationControls);
      v20 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_144_0(v20))
      {
        v21 = (uint8_t *)OUTLINED_FUNCTION_105();
        v86 = OUTLINED_FUNCTION_105();
        v87 = v86;
        v85 = v21;
        *(_DWORD *)v21 = 136446210;
        v84 = v21 + 4;
        v22 = OUTLINED_FUNCTION_7_10();
        v24 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v87);
        OUTLINED_FUNCTION_74_20(v24);
        OUTLINED_FUNCTION_195_6();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v14, (os_log_type_t)v11, "[%{public}s] makeSystemApertureControlsView using SystemApertureIncomingCallControlsView", v85);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_68_30(v5, v25, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      v26 = (void *)OUTLINED_FUNCTION_10_116(*v3);
      objc_allocWithZone((Class)type metadata accessor for SystemApertureIncomingCallControlsView());
      v27 = v3;
      if (SystemApertureIncomingCallControlsView.init(recipe:controlsManager:menuHostViewController:)((uint64_t)v9, v26, v3, (uint64_t)&protocol witness table for ConversationHUDViewController))
      {
        OUTLINED_FUNCTION_19_0();
        goto LABEL_27;
      }
      goto LABEL_40;
    }
    if (v87 != 7 || *(_QWORD *)&v18)
    {
      if (v87 == 8 && !*(_QWORD *)&v18)
        goto LABEL_7;
      if (v87 != 9 || *(_QWORD *)&v18)
      {
LABEL_39:
        outlined destroy of ConversationControlsType((uint64_t)&v87);
LABEL_40:
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v56 = OUTLINED_FUNCTION_17_2();
        v57 = __swift_project_value_buffer(v56, (uint64_t)&static Logger.conversationControls);
        OUTLINED_FUNCTION_198_4(v5, v58, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
        Logger.logObject.getter();
        v59 = OUTLINED_FUNCTION_12_0();
        v60 = OUTLINED_FUNCTION_144_0(v59);
        if (v60)
        {
          v61 = OUTLINED_FUNCTION_105();
          v86 = OUTLINED_FUNCTION_105();
          v91 = v86;
          *(_DWORD *)v61 = 136446466;
          v62 = OUTLINED_FUNCTION_7_10();
          v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v91);
          OUTLINED_FUNCTION_8_12(v64);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_30_4();
          *(_WORD *)(v61 + 12) = 2082;
          v85 = (uint8_t *)(v61 + 14);
          outlined init with copy of ConversationControlsType(v2, (uint64_t)&v87);
          v72 = specialized >> prefix<A>(_:)((uint64_t)&v87, v65, v66, v67, v68, v69, v70, v71);
          v74 = v73;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v87, &demangling cache variable for type metadata for ConversationControlsType?);
          v75 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, &v91);
          OUTLINED_FUNCTION_8_12(v75);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v76 = swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_162_5(v76, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          _os_log_impl(&dword_1BD004000, v57, (os_log_type_t)v11, "[%{public}s] makeSystemApertureControlsView using SystemApertureControlsView for recipeType: %{public}s", (uint8_t *)v61, 0x16u);
          OUTLINED_FUNCTION_25_6();
          OUTLINED_FUNCTION_60();
        }
        OUTLINED_FUNCTION_162_5(v60, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);

        OUTLINED_FUNCTION_68_30(v5, v77, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
        v78 = (void *)OUTLINED_FUNCTION_10_116(*v3);
        v79 = OUTLINED_FUNCTION_18_95(*v3);
        objc_allocWithZone((Class)type metadata accessor for SystemApertureControlsView());
        v80 = v3;
        v81 = SystemApertureControlsView.init(recipe:controlsManager:context:menuHostViewController:)((uint64_t)v9, v78, v79, v3, (uint64_t)&protocol witness table for ConversationHUDViewController);
        LODWORD(v82) = 1148846080;
        objc_msgSend(v81, sel_setContentCompressionResistancePriority_forAxis_, 1, v82);
        LODWORD(v83) = 1112014848;
        objc_msgSend(v81, sel_setContentCompressionResistancePriority_forAxis_, 0, v83);
        OUTLINED_FUNCTION_19_0();
        goto LABEL_27;
      }
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v46 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v46, (uint64_t)&static Logger.conversationControls);
    v47 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_11(v47))
    {
      v48 = (uint8_t *)OUTLINED_FUNCTION_105();
      v49 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v48 = 136446210;
      v86 = (uint64_t)(v48 + 4);
      v87 = v49;
      v50 = OUTLINED_FUNCTION_7_10();
      v52 = OUTLINED_FUNCTION_147_8(v50, v51);
      OUTLINED_FUNCTION_74_20(v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v14, (os_log_type_t)v15, "[%{public}s] makeSystemApertureControlsView using SystemApertureOngoingTelephonyControlsView", v48);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_68_30(v5, v53, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v54 = (void *)OUTLINED_FUNCTION_10_116(*v3);
    objc_allocWithZone((Class)type metadata accessor for SystemApertureOngoingTelephonyControlsView());
    v55 = v3;
    SystemApertureOngoingTelephonyControlsView.init(recipe:controlsManager:menuHostViewController:)((uint64_t)v9, v54, v3);
    OUTLINED_FUNCTION_19_0();
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v40, (uint64_t)&static Logger.conversationControls);
    v41 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_28_4(v14))
    {
      v42 = (uint8_t *)OUTLINED_FUNCTION_105();
      v87 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v42 = 136446210;
      v43 = OUTLINED_FUNCTION_7_10();
      v45 = OUTLINED_FUNCTION_147_8(v43, v44);
      OUTLINED_FUNCTION_74_20(v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v14, v41, "[%{public}s] makeSystemApertureControlsView returning nil since NOT in SystemAperture", v42);
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_19_0();
  }
LABEL_27:
  OUTLINED_FUNCTION_52_1();
}

void ConversationHUDViewController.setupControlsView(animated:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  id v18;
  double v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 (*v30)(id, uint64_t, uint64_t);
  id v31;
  uint64_t v32;
  uint64_t v33;
  char **v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  id v53;
  Class isa;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  int v64;

  OUTLINED_FUNCTION_149_1();
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_16_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_54_45(v9);
  v10 = OUTLINED_FUNCTION_69_0(v2, 1, v7);
  if (v11)
  {
    OUTLINED_FUNCTION_30_7(v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_20:
    OUTLINED_FUNCTION_7_7();
    return;
  }
  outlined init with take of ShareCardStatusHeaderView(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v12 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v12)
    objc_msgSend(v12, sel_removeFromSuperview);
  ConversationHUDViewController.makeControlsView(recipe:)();
  v14 = v13;
  v16 = v15;
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_18_4(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  type metadata accessor for UILayoutPriority(0);
  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
  v18 = v14;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v19) = v64;
  objc_msgSend(v18, sel_setContentCompressionResistancePriority_forAxis_, 1, v19);

  OUTLINED_FUNCTION_153();
  (*(void (**)(void))(v20 + 416))();
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(ObjectType, v16);
  v21 = v18;
  ConversationHUDViewController.controlsView.setter((uint64_t)v18, v16);
  OUTLINED_FUNCTION_153();
  v23 = (void *)(*(uint64_t (**)(void))(v22 + 440))();
  v24 = objc_msgSend(v23, sel_contentView);

  objc_msgSend(v24, sel_addSubview_, v21);
  if ((v5 & 1) != 0 && (objc_msgSend(v21, sel_isHidden) & 1) == 0)
  {
    objc_msgSend(v21, sel_setAlpha_, 0.0);
    v25 = (void *)objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_75_1();
    v26 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v26 + 16) = v21;
    *(_QWORD *)(v26 + 24) = v16;
    OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    v27 = v21;
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_161_10(v25, sel_animateWithDuration_animations_);
    OUTLINED_FUNCTION_10_33();
  }
  v63 = v1;
  OUTLINED_FUNCTION_650();
  if (OUTLINED_FUNCTION_137_9())
  {
    v29 = v28;
    v30 = *(unsigned __int8 (**)(id, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x108);
    v31 = v21;
    v34 = &selRef_statusViewTapped;
    if (v30(v31, v32, v33) != 2)
    {
      v35 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v36 = (_QWORD *)OUTLINED_FUNCTION_127_10(*v3);
      LOBYTE(v35) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))((*v35 & *v36) + 0x320))(v36, v37, v38);

      if ((v35 & 1) == 0)
        v34 = &selRef_showCallDetailsButtonTapped;
    }
    v39 = *v34;
    v40 = swift_getObjectType();
    v41 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 80))(v40, v29);
    objc_msgSend(v41, sel_addTarget_action_forControlEvents_, v3, v39, 64, v1);

  }
  v42 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v43 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v43 + 16) = xmmword_1BD6441C0;
  v44 = OUTLINED_FUNCTION_2_2(v43, sel_leadingAnchor);
  v45 = (void *)OUTLINED_FUNCTION_11_31();
  v46 = objc_msgSend(v45, sel_leadingAnchor);
  OUTLINED_FUNCTION_45_6();
  v48 = OUTLINED_FUNCTION_4_86(v47, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_189_2();

  *(_QWORD *)(v43 + 32) = v45;
  OUTLINED_FUNCTION_2_2(v49, sel_trailingAnchor);
  v50 = (void *)OUTLINED_FUNCTION_11_31();
  v51 = objc_msgSend(v50, sel_trailingAnchor);
  OUTLINED_FUNCTION_45_6();
  v53 = OUTLINED_FUNCTION_4_86(v52, sel_constraintEqualToAnchor_);
  OUTLINED_FUNCTION_189_2();

  *(_QWORD *)(v43 + 40) = v50;
  specialized Array._endMutation()();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = OUTLINED_FUNCTION_4_10().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v42, sel_activateConstraints_, isa);

  if (OUTLINED_FUNCTION_29_76(*v3))
  {
LABEL_19:
    v62 = v21;
    ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v62, 0, 0.0);

    ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()();
    outlined destroy of AccountUpdateNotice(v63, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    goto LABEL_20;
  }
  v55 = (void *)OUTLINED_FUNCTION_11_31();
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v58 = OUTLINED_FUNCTION_123(v57, sel_view);
  if (v58)
  {
    v59 = v58;
    v60 = objc_msgSend(v58, sel_bottomAnchor);

    v61 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v60);
    OUTLINED_FUNCTION_40_3(v61, sel_setActive_);

    goto LABEL_19;
  }
  __break(1u);
}

void ConversationHUDViewController.updateControlsView()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  id v19;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_16_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_65_28();
  OUTLINED_FUNCTION_54_45(v8);
  v9 = OUTLINED_FUNCTION_69_0(v3, 1, v5);
  if (v11)
  {
    OUTLINED_FUNCTION_30_7(v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    OUTLINED_FUNCTION_97_10(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v12 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
    v13 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
    if (v13)
    {
      v14 = *(_QWORD *)(v12 + 8);
      v15 = OUTLINED_FUNCTION_15_6();
      v16 = OUTLINED_FUNCTION_65_2();
      outlined init with copy of ShareCardStatusHeaderView(v16, v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 56);
      v19 = v13;
      v18(v2, v15, v14);

    }
    outlined destroy of AccountUpdateNotice(v0, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  }
}

void ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(void *a1, void *a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  Class isa;
  id v16;
  uint64_t (*v17)(void);
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v4 = v3;
  v39 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint;
  v8 = *(void **)((char *)v3 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_topConstraint);
  v38 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint;
  v9 = *(void **)((char *)v3 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_bottomConstraint);
  if (v8)
  {
    v10 = v9;
    v11 = v8;
    OUTLINED_FUNCTION_5_23();
  }
  v12 = v9;
  if (v9)
  {
    v13 = v9;
    OUTLINED_FUNCTION_5_23();
  }
  v14 = (void *)objc_opt_self();

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_21_0();
  objc_msgSend(v14, sel_deactivateConstraints_, isa);

  v16 = objc_msgSend(a1, sel_topAnchor);
  v17 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x1B8);
  v18 = (void *)v17();
  v19 = objc_msgSend(v18, sel_contentView);

  v20 = objc_msgSend(v19, sel_topAnchor);
  OUTLINED_FUNCTION_189_2();
  v21 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);

  ConversationHUDViewController.topConstraint.setter((uint64_t)v21);
  v22 = a2;
  if (!a2)
    v22 = a1;
  v37 = a2;
  v23 = OUTLINED_FUNCTION_25_1((uint64_t)v37, sel_bottomAnchor);

  v24 = objc_msgSend((id)v17(), sel_contentView);
  OUTLINED_FUNCTION_45_6();
  v25 = objc_msgSend(v17, sel_bottomAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  ConversationHUDViewController.bottomConstraint.setter((uint64_t)v26);
  v27 = *(void **)((char *)v4 + v39);
  v28 = *(void **)((char *)v4 + v38);
  if (v27)
  {
    v29 = v28;
    v30 = v27;
    OUTLINED_FUNCTION_5_23();
  }
  v31 = v28;
  if (v28)
  {
    v32 = v28;
    OUTLINED_FUNCTION_5_23();
  }

  v33 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_5_42(v14, sel_activateConstraints_);

  if (a2)
  {
    v34 = v37;
    v35 = objc_msgSend(v34, sel_topAnchor);
    v36 = OUTLINED_FUNCTION_6_7((uint64_t)v35, sel_bottomAnchor);
    v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, a3);

    OUTLINED_FUNCTION_40_3(v40, sel_setActive_);
  }
}

void __swiftcall ConversationHUDViewController.setupMenuContainerView()(UIView_optional *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  ConversationHUDViewController.menuContainerFrame.getter();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v3, v4, v5, v6);
  v8 = v7;
  ConversationHUDViewController.menuContainerView.setter((uint64_t)v7);
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!OUTLINED_FUNCTION_108_1(*v1))
    goto LABEL_7;
  v10 = OUTLINED_FUNCTION_146();
  v11 = (*(uint64_t (**)(uint64_t))(v2 + 24))(v10);
  if ((v11 & 1) == 0)
  {
LABEL_6:
    OUTLINED_FUNCTION_10();
LABEL_7:

    (*(void (**)(void))((*v9 & *v1) + 0x3B8))();
    return;
  }
  v12 = OUTLINED_FUNCTION_123(v11, sel_view);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_addSubview_, v8);
    v8 = v13;
    goto LABEL_6;
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationHUDViewController.disableMenuContainerViewInteraction()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView);
  if (v1)
  {
    v2 = (void *)one-time initialization token for conversationControls;
    v7 = v1;
    if (v2 != (void *)-1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationControls);
    v4 = OUTLINED_FUNCTION_31_6();
    if (OUTLINED_FUNCTION_13_0(v4))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_14_14(&dword_1BD004000, v5, v6, "disableMenuContainerViewInteraction");
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_18_4(v7, sel_setUserInteractionEnabled_);
    OUTLINED_FUNCTION_15_9(v7);
  }
}

Swift::Void __swiftcall ConversationHUDViewController.teardownMenuContainerView()()
{
  _QWORD *v0;

  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView), sel_removeFromSuperview);
  ConversationHUDViewController.menuContainerView.setter(0);
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

void ConversationHUDViewController.setupAppLaunchPill(buttonType:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  char v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  _QWORD *v83;
  void (*v84)(uint64_t *, char *);
  uint64_t *v85;
  _QWORD *v86;
  void *v87;
  id v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  void (*v99)(__int128 *__return_ptr);
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  void (*v124)(__int128 *);
  id v125;
  void *v126;
  uint64_t v127;
  void (*v128)(__int128 *, char *);
  uint64_t *v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(void);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146[3];
  uint64_t v147;
  uint64_t v148;
  _QWORD v149[6];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (ConversationControlsAppLaunchButtonType?, ConversationControlsAppLaunchButtonType?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v140 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v137 = v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v133 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v133 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v133 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v133 - v19;
  v21 = OUTLINED_FUNCTION_63_30();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_27();
  v138 = v23;
  MEMORY[0x1E0C80A78](v24);
  v139 = (uint64_t)&v133 - v25;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v133 - v27;
  MEMORY[0x1E0C80A78](v29);
  v141 = (uint64_t)&v133 - v30;
  if ((OUTLINED_FUNCTION_53_48(*v0) & 1) == 0)
  {
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, (uint64_t)v20, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    OUTLINED_FUNCTION_69_0((uint64_t)v20, 1, v21);
    v136 = v21;
    if (v56)
    {
      v31 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v32 = (_QWORD *)OUTLINED_FUNCTION_10_116(*v0);
      v33 = *(void (**)(void))((*v31 & *v32) + 0x930);
      v35 = v141;
      v33();

      OUTLINED_FUNCTION_96_6(v34, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
    else
    {
      v35 = v141;
      outlined init with take of ShareCardStatusHeaderView((uint64_t)v20, v141, type metadata accessor for ConversationControlsAppLaunchButtonType);
    }
    if ((ConversationHUDViewController.wantsAppLaunchPill(buttonType:)() & 1) == 0
      || !*(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView))
    {
      v42 = v35;
      goto LABEL_32;
    }
    v36 = MEMORY[0x1E0DEEDD8];
    OUTLINED_FUNCTION_16_23();
    v38 = (*(uint64_t (**)(void))(v37 + 864))();
    if (v38)
    {
      v39 = v38;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional(v39))
      {
        v40 = OUTLINED_FUNCTION_274_0();
        v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 56))(v40, v36);
        v38 = swift_unknownObjectRelease();
        v36 = MEMORY[0x1E0DEEDD8];
        if ((v41 & 1) != 0)
        {
          v42 = v141;
LABEL_32:
          outlined destroy of AccountUpdateNotice(v42, type metadata accessor for ConversationControlsAppLaunchButtonType);
          goto LABEL_33;
        }
      }
      else
      {
        v38 = swift_unknownObjectRelease();
      }
    }
    v134 = *(uint64_t (**)(void))((*(_QWORD *)v36 & *v1) + 0xF0);
    v43 = (void *)((uint64_t (*)(uint64_t))v134)(v38);
    OUTLINED_FUNCTION_16_23();
    (*(void (**)(_QWORD *__return_ptr))(v44 + 2304))(v149);

    v135 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView;
    v45 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
    v46 = v141;
    OUTLINED_FUNCTION_68_30(v141, v47, type metadata accessor for ConversationControlsAppLaunchButtonType);
    if (v45)
    {
      OUTLINED_FUNCTION_174_6(v45 + OBJC_IVAR____TtC15ConversationKit32ConversationHUDAppLaunchPillView_buttonType, (uint64_t)v17);
      v48 = v136;
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v136);
      v49 = OUTLINED_FUNCTION_131();
      OUTLINED_FUNCTION_174_6(v49, v50);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v48);
      v51 = *(int *)(v4 + 48);
      v52 = v140;
      v53 = v140 + v51;
      OUTLINED_FUNCTION_106_14((uint64_t)v17, v140);
      v54 = OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_106_14(v54, v55);
      OUTLINED_FUNCTION_69_0(v52, 1, v48);
      if (v56)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        v52 = v140;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        outlined destroy of AccountUpdateNotice((uint64_t)v28, type metadata accessor for ConversationControlsAppLaunchButtonType);
        OUTLINED_FUNCTION_69_0(v53, 1, v48);
        v36 = MEMORY[0x1E0DEEDD8];
        if (v56)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          OUTLINED_FUNCTION_172_5();
          goto LABEL_35;
        }
      }
      else
      {
        outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, (uint64_t)v11, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        OUTLINED_FUNCTION_69_0(v53, 1, v48);
        if (!v56)
        {
          v89 = v139;
          outlined init with take of ShareCardStatusHeaderView(v53, v139, type metadata accessor for ConversationControlsAppLaunchButtonType);
          static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v11, v89);
          v91 = v90;
          OUTLINED_FUNCTION_40_58(v89);
          OUTLINED_FUNCTION_211((uint64_t)v14);
          OUTLINED_FUNCTION_211((uint64_t)v17);
          OUTLINED_FUNCTION_40_58((uint64_t)v28);
          OUTLINED_FUNCTION_40_58((uint64_t)v11);
          v46 = v141;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
          OUTLINED_FUNCTION_172_5();
          v36 = MEMORY[0x1E0DEEDD8];
          if ((v91 & 1) != 0)
          {
LABEL_35:
            outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v149, (uint64_t)&v143, &demangling cache variable for type metadata for Activity?);
            if (!v144)
            {
              OUTLINED_FUNCTION_25_0((uint64_t)v149);
              outlined destroy of AccountUpdateNotice(v46, type metadata accessor for ConversationControlsAppLaunchButtonType);
              OUTLINED_FUNCTION_25_0((uint64_t)&v143);
              goto LABEL_33;
            }
            outlined init with take of Notice(&v143, (uint64_t)v146);
            v92 = v147;
            v93 = v148;
            __swift_project_boxed_opaque_existential_1(v146, v147);
            v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v92, v93);
            v96 = v95;
            v97 = *(_QWORD **)&v17[(_QWORD)v1];
            if (v97)
            {
              v98 = v94;
              v99 = *(void (**)(__int128 *__return_ptr))((*(_QWORD *)v36 & *v97) + 0xC8);
              v100 = v97;
              v99(&v143);

              v101 = v144;
              if (v144)
              {
                v102 = v145;
                v103 = __swift_project_boxed_opaque_existential_1(&v143, v144);
                v104 = *(_QWORD *)(v101 - 8);
                MEMORY[0x1E0C80A78](v103);
                OUTLINED_FUNCTION_6_0();
                (*(void (**)(uint64_t))(v104 + 16))(v36);
                outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v143, &demangling cache variable for type metadata for Activity?);
                v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
                v107 = v106;
                (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v36, v101);
                if (v98 == v105 && v96 == v107)
                {
                  v110 = swift_bridgeObjectRelease_n();
                  v111 = v141;
LABEL_56:
                  OUTLINED_FUNCTION_154_7(v110, &demangling cache variable for type metadata for Activity?);
                  v132 = v111;
                  goto LABEL_57;
                }
                OUTLINED_FUNCTION_131();
                v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                v110 = OUTLINED_FUNCTION_27();
                v111 = v141;
                if ((v109 & 1) != 0)
                  goto LABEL_56;
LABEL_47:
                if (one-time initialization token for conversationControls != -1)
                  swift_once();
                v112 = OUTLINED_FUNCTION_17_2();
                __swift_project_value_buffer(v112, (uint64_t)&static Logger.conversationControls);
                v113 = (uint64_t *)OUTLINED_FUNCTION_60_3();
                v114 = Logger.logObject.getter();
                v115 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v114, v115))
                {
                  v116 = (uint8_t *)OUTLINED_FUNCTION_105();
                  v117 = OUTLINED_FUNCTION_105();
                  *(_DWORD *)v116 = 136315138;
                  *(_QWORD *)&v143 = v117;
                  LOBYTE(v142) = OUTLINED_FUNCTION_29_76(*v113);
                  v118 = String.init<A>(reflecting:)();
                  v142 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v119, (uint64_t *)&v143);
                  OUTLINED_FUNCTION_172_5();
                  OUTLINED_FUNCTION_195_6();

                  OUTLINED_FUNCTION_27();
                  OUTLINED_FUNCTION_48(&dword_1BD004000, v114, v115, "[%s] AppLaunchButton needs update (activity doesn't match currentActivity)", v116);
                  OUTLINED_FUNCTION_21();
                  OUTLINED_FUNCTION_60();
                }

                v121 = v141;
                v122 = *(void **)&v17[(_QWORD)v1];
                if (v122)
                {
                  outlined init with copy of IDSLookupManager((uint64_t)v146, (uint64_t)&v143);
                  OUTLINED_FUNCTION_16_23();
                  v124 = *(void (**)(__int128 *))(v123 + 208);
                  v125 = v122;
                  v124(&v143);

                  v126 = *(void **)&v17[(_QWORD)v1];
                  if (v126)
                  {
                    v144 = ObjC metadata update function for ConversationHUDViewController();
                    *(_QWORD *)&v143 = v113;
                    OUTLINED_FUNCTION_16_23();
                    v128 = *(void (**)(__int128 *, char *))(v127 + 456);
                    v129 = v113;
                    v130 = v126;
                    v128(&v143, sel_appLaunchButtonTapped_);

                    OUTLINED_FUNCTION_154_7(v131, &demangling cache variable for type metadata for Activity?);
                    outlined destroy of AccountUpdateNotice(v121, type metadata accessor for ConversationControlsAppLaunchButtonType);
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v143);
LABEL_58:
                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
                    goto LABEL_33;
                  }
                }
                OUTLINED_FUNCTION_154_7(v120, &demangling cache variable for type metadata for Activity?);
                v132 = v121;
LABEL_57:
                outlined destroy of AccountUpdateNotice(v132, type metadata accessor for ConversationControlsAppLaunchButtonType);
                goto LABEL_58;
              }
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v143, &demangling cache variable for type metadata for Activity?);
            }
            swift_bridgeObjectRelease();
            goto LABEL_47;
          }
LABEL_25:
          v59 = *(void **)&v17[(_QWORD)v1];
          if (v59)
            objc_msgSend(v59, sel_removeFromSuperview);
          v60 = v138;
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v61 = OUTLINED_FUNCTION_17_2();
          __swift_project_value_buffer(v61, (uint64_t)&static Logger.conversationControls);
          OUTLINED_FUNCTION_143_9(v46, v62, type metadata accessor for ConversationControlsAppLaunchButtonType);
          v63 = v1;
          v64 = Logger.logObject.getter();
          v65 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v64, v65))
          {
            v66 = OUTLINED_FUNCTION_105();
            v140 = OUTLINED_FUNCTION_105();
            v146[0] = v140;
            *(_DWORD *)v66 = 136315394;
            LOBYTE(v143) = OUTLINED_FUNCTION_29_76(*v63);
            v67 = String.init<A>(reflecting:)();
            *(_QWORD *)&v143 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v67, v68, v146);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            OUTLINED_FUNCTION_21_0();
            *(_WORD *)(v66 + 12) = 2080;
            v69 = v137;
            OUTLINED_FUNCTION_198_4(v60, v70, type metadata accessor for ConversationControlsAppLaunchButtonType);
            __swift_storeEnumTagSinglePayload(v69, 0, 1, v136);
            specialized >> prefix<A>(_:)(v69);
            v72 = v71;
            v74 = v73;
            OUTLINED_FUNCTION_96_6(v71, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
            *(_QWORD *)&v143 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v74, v146);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined destroy of AccountUpdateNotice(v60, type metadata accessor for ConversationControlsAppLaunchButtonType);
            OUTLINED_FUNCTION_92_16(&dword_1BD004000, v64, v65, "[%s] Setup AppLaunchButton, type: %s");
            OUTLINED_FUNCTION_25_6();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_49_15(v75, type metadata accessor for ConversationControlsAppLaunchButtonType);
          v76 = (void *)v134();
          v77 = OUTLINED_FUNCTION_18_95(*v63);
          v78 = v139;
          outlined init with copy of ShareCardStatusHeaderView(v46, v139, type metadata accessor for ConversationControlsAppLaunchButtonType);
          outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v149, (uint64_t)v146, &demangling cache variable for type metadata for Activity?);
          v79 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDAppLaunchPillView());
          v80 = v46;
          v81 = (_QWORD *)v36;
          v82 = v63;
          v83 = ConversationHUDAppLaunchPillView.init(controlsManager:controlsContext:buttonType:menuHostViewController:activity:)(v76, v77, v78, v63, &protocol witness table for ConversationHUDViewController, (uint64_t)v146);
          v147 = ObjC metadata update function for ConversationHUDViewController();
          v146[0] = (uint64_t)v82;
          v84 = *(void (**)(uint64_t *, char *))((*v81 & *v83) + 0x1C8);
          v85 = v82;
          v84(v146, sel_appLaunchButtonTapped_);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
          OUTLINED_FUNCTION_18_4(v83, sel_setTranslatesAutoresizingMaskIntoConstraints_);
          objc_msgSend(v83, sel_setAlpha_, 0.0);
          v86 = v83;
          ConversationHUDViewController.appLaunchPillView.setter((uint64_t)v83);
          v87 = (void *)OUTLINED_FUNCTION_89_16(*v85);
          v88 = objc_msgSend(v87, sel_contentView);

          OUTLINED_FUNCTION_5_42(v88, sel_addSubview_);
          ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()();

          OUTLINED_FUNCTION_18_18((uint64_t)v149);
          v42 = v80;
          goto LABEL_32;
        }
        OUTLINED_FUNCTION_9_42((uint64_t)v14);
        OUTLINED_FUNCTION_9_42((uint64_t)v17);
        v57 = OUTLINED_FUNCTION_131();
        outlined destroy of AccountUpdateNotice(v57, v58);
        outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for ConversationControlsAppLaunchButtonType);
        v36 = MEMORY[0x1E0DEEDD8];
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, (uint64_t *)&demangling cache variable for type metadata for (ConversationControlsAppLaunchButtonType?, ConversationControlsAppLaunchButtonType?));
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v28, type metadata accessor for ConversationControlsAppLaunchButtonType);
    }
    OUTLINED_FUNCTION_172_5();
    goto LABEL_25;
  }
LABEL_33:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ConversationHUDViewController.shouldConstrainAppLaunchPillAboveControlsView.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_108_1(*v0))
    goto LABEL_5;
  OUTLINED_FUNCTION_185_6();
  if (!OUTLINED_FUNCTION_183_5())
  {
    OUTLINED_FUNCTION_19_0();
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  v2 = OUTLINED_FUNCTION_15_69();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v1 + 24))(&v5, v2, v1);
  OUTLINED_FUNCTION_19_0();
  v3 = v5 ^ 1;
  return v3 & 1;
}

void ConversationHUDViewController.constrainAppLaunchPillToControlsViewIfNeeded()()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  char *v4;
  char *v5;
  char v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  Class isa;
  double v18;
  id v19;
  char *v20;

  OUTLINED_FUNCTION_149_1();
  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
  if (v1 && *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView])
  {
    v2 = v1;
    v3 = OUTLINED_FUNCTION_60_3();
    v4 = v0;
    v5 = (char *)v3;
    v6 = ConversationHUDViewController.shouldConstrainAppLaunchPillAboveControlsView.getter();
    if ((v6 & 1) != 0)
      v7 = v5;
    else
      v7 = v4;
    if ((v6 & 1) != 0)
      v8 = v4;
    else
      v8 = v5;
    v19 = (id)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441C0;
    v10 = OUTLINED_FUNCTION_9(v9, sel_leadingAnchor);
    v11 = OUTLINED_FUNCTION_2_2((uint64_t)v10, sel_leadingAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(_QWORD *)(v9 + 32) = v12;
    v14 = OUTLINED_FUNCTION_9(v13, sel_trailingAnchor);
    v15 = OUTLINED_FUNCTION_2_2((uint64_t)v14, sel_trailingAnchor);
    v16 = OUTLINED_FUNCTION_4_86((uint64_t)v15, sel_constraintEqualToAnchor_);

    *(_QWORD *)(v9 + 40) = v16;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = OUTLINED_FUNCTION_4_10().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v19, sel_activateConstraints_, isa);

    v20 = v7;
    v18 = ConversationHUDViewController.appLaunchPillVerticalMargin.getter();
    ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v8, v7, v18);

    OUTLINED_FUNCTION_78_1(v20);
  }
  else
  {
    OUTLINED_FUNCTION_9_5();
  }
}

void ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t ObjectType;
  uint64_t v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v43;
  void *v44;
  id v45;
  double v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t *v65;
  _QWORD v66[3];
  id v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  OUTLINED_FUNCTION_149_1();
  v75 = v2;
  v76 = v3;
  v4 = v1;
  v6 = v5;
  v74 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_63_30();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_65_28();
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_419(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v15) + 0x188));
  if ((OUTLINED_FUNCTION_53_48(*v1) & 1) != 0)
    goto LABEL_37;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, (uint64_t)v9, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  v16 = OUTLINED_FUNCTION_69_0((uint64_t)v9, 1, v10);
  if (v18)
  {
    v19 = (void *)OUTLINED_FUNCTION_10_116(*v1);
    OUTLINED_FUNCTION_153();
    (*(void (**)(void))(v20 + 2352))();

    OUTLINED_FUNCTION_30_7(v21, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  }
  else
  {
    OUTLINED_FUNCTION_97_10(v16, v17, type metadata accessor for ConversationControlsAppLaunchButtonType);
  }
  v22 = ConversationHUDViewController.wantsAppLaunchPill(buttonType:)();
  if ((v22 & 1) == 0)
  {
LABEL_36:
    OUTLINED_FUNCTION_35_2(v22, type metadata accessor for ConversationControlsAppLaunchButtonType);
    goto LABEL_37;
  }
  if (!OUTLINED_FUNCTION_23_89())
  {
LABEL_17:
    v35 = (void *)objc_opt_self();
    OUTLINED_FUNCTION_174_6(v0, (uint64_t)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    v36 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v4;
    outlined init with take of ShareCardStatusHeaderView((uint64_t)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v36, type metadata accessor for ConversationControlsAppLaunchButtonType);
    v38 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v38 + 16) = partial apply for closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:);
    *(_QWORD *)(v38 + 24) = v37;
    v72 = partial apply for thunk for @callee_guaranteed () -> ();
    v73 = v38;
    v39 = MEMORY[0x1E0C809B0];
    v69 = (uint64_t *)MEMORY[0x1E0C809B0];
    v70 = 1107296256;
    v40 = OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    v41 = v4;
    swift_retain();
    swift_release();
    v67 = v35;
    objc_msgSend(v35, sel_performWithoutAnimation_, v40);
    _Block_release(v40);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    v43 = OUTLINED_FUNCTION_27_0();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v44 = *(void **)((char *)v41 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
      if (!v44)
      {
LABEL_27:
        OUTLINED_FUNCTION_35_2(v43, type metadata accessor for ConversationControlsAppLaunchButtonType);
        swift_release();
        goto LABEL_37;
      }
      isEscapingClosureAtFileLocation = v44;
      v45 = objc_msgSend((id)isEscapingClosureAtFileLocation, sel_alpha);
      if (v46 != 0.0)
      {
        OUTLINED_FUNCTION_35_2((uint64_t)v45, type metadata accessor for ConversationControlsAppLaunchButtonType);
        swift_release();

        goto LABEL_37;
      }
      if (one-time initialization token for conversationControls == -1)
      {
LABEL_21:
        v47 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v47, (uint64_t)&static Logger.conversationControls);
        v48 = v41;
        v49 = Logger.logObject.getter();
        v50 = static os_log_type_t.default.getter();
        if (OUTLINED_FUNCTION_28_4(v49))
        {
          v51 = (uint8_t *)OUTLINED_FUNCTION_105();
          v52 = OUTLINED_FUNCTION_105();
          v66[2] = v52;
          *(_DWORD *)v51 = 136315138;
          v69 = (uint64_t *)v52;
          v66[1] = v51 + 4;
          LOBYTE(v68) = (*(uint64_t (**)(void))((*v14 & *(_QWORD *)v48) + 0x108))();
          v53 = String.init<A>(reflecting:)();
          v68 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, (uint64_t *)&v69);
          OUTLINED_FUNCTION_195_6();

          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v49, v50, "[%s] Showing AppLaunchButton", v51);
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        if (one-time initialization token for shared != -1)
          swift_once();
        OUTLINED_FUNCTION_75_1();
        v55 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v55 + 16) = isEscapingClosureAtFileLocation;
        *(_QWORD *)(v55 + 24) = v48;
        v72 = partial apply for closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:);
        v73 = v55;
        v69 = (uint64_t *)v39;
        v70 = 1107296256;
        OUTLINED_FUNCTION_207((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
        v56 = v48;
        v57 = (id)isEscapingClosureAtFileLocation;
        swift_release();
        OUTLINED_FUNCTION_161_10(v67, sel_animateWithDuration_animations_);
        OUTLINED_FUNCTION_10_33();

        goto LABEL_27;
      }
    }
    swift_once();
    goto LABEL_21;
  }
  OUTLINED_FUNCTION_193_5();
  if (!OUTLINED_FUNCTION_137_9() || (v23 = OUTLINED_FUNCTION_146(), (OUTLINED_FUNCTION_146_7(v23) & 1) == 0))
  {
    OUTLINED_FUNCTION_9_10();
    goto LABEL_17;
  }
  v24 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView;
  v25 = *(NSObject **)((char *)v4 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (!v25 || (OUTLINED_FUNCTION_15_6(), !OUTLINED_FUNCTION_139_10()))
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v58 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v58, (uint64_t)&static Logger.conversationControls);
    v59 = OUTLINED_FUNCTION_60_3();
    v60 = Logger.logObject.getter();
    v61 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)OUTLINED_FUNCTION_105();
      v63 = (_QWORD *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v62 = 138543362;
      v64 = *(uint64_t **)((char *)v4 + v24);
      if (v64)
      {
        v67 = v62 + 12;
        v69 = v64;
        v65 = v64;
      }
      else
      {
        v69 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v63 = v64;

      OUTLINED_FUNCTION_48(&dword_1BD004000, v60, v61, "Unable to show app launch pill view in system aperture for controlsView: %{public}@", v62);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_9_10();
    goto LABEL_36;
  }
  v27 = v26;
  v28 = one-time initialization token for conversationControls;
  v29 = v25;
  if (v28 != -1)
    swift_once();
  v30 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v30, (uint64_t)&static Logger.conversationControls);
  v31 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_11(v31))
  {
    v32 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v32 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v25, (os_log_type_t)v28, "[SystemAperture] Showing AppLaunchButton", v32);
    OUTLINED_FUNCTION_60();
  }

  ObjectType = swift_getObjectType();
  v71 = ObjC metadata update function for ConversationHUDViewController();
  v69 = v4;
  (*(void (**)(uint64_t, uint64_t *, _UNKNOWN **, uint64_t **, char *, uint64_t, uint64_t))(v27 + 24))(v0, v4, &protocol witness table for ConversationHUDViewController, &v69, sel_appLaunchButtonTapped_, ObjectType, v27);
  OUTLINED_FUNCTION_9_10();

  OUTLINED_FUNCTION_35_2(v34, type metadata accessor for ConversationControlsAppLaunchButtonType);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
LABEL_37:
  OUTLINED_FUNCTION_7_7();
}

uint64_t closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ShareCardStatusHeaderView(a2, (uint64_t)v6, type metadata accessor for ConversationControlsAppLaunchButtonType);
  v7 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x3B8))();
}

id closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(void *a1, _QWORD *a2)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x1A0))();
  return objc_msgSend(a1, sel_setAlpha_);
}

void ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  id v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  double v26;
  double v27;
  uint64_t v28;
  char v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char aBlock[8];

  v2 = v1;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x188))(0);
  if ((OUTLINED_FUNCTION_53_48(*v1) & 1) != 0)
    return;
  if (OUTLINED_FUNCTION_23_89())
  {
    OUTLINED_FUNCTION_193_5();
    if (OUTLINED_FUNCTION_137_9())
    {
      v5 = OUTLINED_FUNCTION_146();
      if ((OUTLINED_FUNCTION_146_7(v5) & 1) != 0)
      {
        v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
        if (v6)
        {
          OUTLINED_FUNCTION_15_6();
          if (OUTLINED_FUNCTION_139_10())
          {
            v8 = v7;
            v9 = (void *)one-time initialization token for conversationControls;
            v50 = v6;
            if (v9 != (void *)-1)
              swift_once();
            v10 = OUTLINED_FUNCTION_17_2();
            OUTLINED_FUNCTION_3(v10, (uint64_t)&static Logger.conversationControls);
            v11 = OUTLINED_FUNCTION_31_6();
            if (OUTLINED_FUNCTION_13_0(v11))
            {
              *(_WORD *)OUTLINED_FUNCTION_105() = 0;
              OUTLINED_FUNCTION_14_14(&dword_1BD004000, v12, v13, "[SystemAperture] Hiding AppLaunchButton");
              OUTLINED_FUNCTION_60();
            }

            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
            OUTLINED_FUNCTION_9_10();

            return;
          }
        }
      }
    }
    OUTLINED_FUNCTION_9_10();
  }
  v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v16, sel_alpha);
    if (v17 != 0.0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v18 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationControls);
      v19 = OUTLINED_FUNCTION_60_3();
      v20 = Logger.logObject.getter();
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = OUTLINED_FUNCTION_105();
        *(_QWORD *)aBlock = OUTLINED_FUNCTION_105();
        *(_DWORD *)v22 = 136315394;
        (*(void (**)(void))((*v4 & *v19) + 0x108))();
        v23 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, (uint64_t *)aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        OUTLINED_FUNCTION_27();
        *(_WORD *)(v22 + 12) = 1024;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1BD004000, v20, v21, "[%s] Hiding AppLaunchButton, should remove: %{BOOL}d", (uint8_t *)v22, 0x12u);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

    }
    v25 = (void *)objc_opt_self();
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_75_1();
    v27 = v26;
    v28 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v28 + 16) = v16;
    v29 = MEMORY[0x1E0C809B0];
    v37 = OUTLINED_FUNCTION_126_7(v28, v30, v31, v32, v33, v34, v35, v36, (uint64_t)v49, v52, MEMORY[0x1E0C809B0]);
    v38 = v16;
    OUTLINED_FUNCTION_27_0();
    v39 = OUTLINED_FUNCTION_15();
    swift_unknownObjectWeakInit();
    v40 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v40 + 16) = v39;
    *(_BYTE *)(v40 + 24) = a1 & 1;
    v48 = OUTLINED_FUNCTION_126_7(v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v51, v53, v29);
    swift_release();
    objc_msgSend(v25, sel_animateWithDuration_animations_completion_, v37, v48, v27);
    _Block_release(v48);
    OUTLINED_FUNCTION_10_33();

  }
}

void closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1, uint64_t a2, char a3)
{
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  _QWORD *v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (char *)MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = v6;
    if ((a1 & 1) != 0 && (a3 & 1) != 0)
    {
      v8 = *(void **)&v6[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView];
      if (v8)
      {
        v9 = one-time initialization token for conversationControls;
        v10 = v8;
        if (v9 != -1)
          swift_once();
        v11 = type metadata accessor for Logger();
        __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
        v12 = v7;
        v13 = Logger.logObject.getter();
        v14 = static os_log_type_t.default.getter();
        v15 = os_log_type_enabled(v13, v14);
        v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        if (v15)
        {
          v33 = v10;
          v17 = (uint8_t *)swift_slowAlloc();
          v18 = swift_slowAlloc();
          *(_DWORD *)v17 = 136315138;
          v35 = v18;
          v19 = v16;
          (*(void (**)(void))((*v16 & *v12) + 0x108))();
          v20 = String.init<A>(reflecting:)();
          v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v35);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v13, v14, "[%s] Removing AppLaunchButton", v17, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v18, -1, -1);
          v22 = v17;
          v10 = v33;
          MEMORY[0x1C3B751B8](v22, -1, -1);

        }
        else
        {
          v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];

        }
        objc_msgSend(v10, sel_removeFromSuperview, v33, v34);
        ConversationHUDViewController.appLaunchPillView.setter(0);
        v31 = *(void **)((char *)v12 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
        if (v31)
        {
          v32 = v31;
          ConversationHUDViewController.verticallyConstrainView(_:above:spacing:)(v32, 0, 0.0);

        }
        (*(void (**)(void))((*v19 & *v12) + 0x3B8))();

      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v23 = type metadata accessor for Logger();
        __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
        v24 = v7;
        v25 = Logger.logObject.getter();
        v26 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          v35 = v28;
          *(_DWORD *)v27 = 136315138;
          (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x108))();
          v29 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, &v35);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v25, v26, "[%s] Unexpectedly found nil appLaunchPillView while attempting to remove it", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v28, -1, -1);
          MEMORY[0x1C3B751B8](v27, -1, -1);

        }
        else
        {

        }
      }
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall ConversationHUDViewController.statusViewTapped()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  void *v29;
  Swift::Bool v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  char v67;

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = (int *)OUTLINED_FUNCTION_16_98();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v62 - v7;
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_65_28();
  OUTLINED_FUNCTION_54_45(v10);
  v11 = OUTLINED_FUNCTION_69_0(v1, 1, (uint64_t)v4);
  if (!v13)
  {
    OUTLINED_FUNCTION_97_10(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_153();
    v14 = (void *)OUTLINED_FUNCTION_108_15();
    OUTLINED_FUNCTION_153();
    (*(void (**)(void))(v15 + 624))();
    v17 = v16;

    v18 = OUTLINED_FUNCTION_650();
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 216))(v18, v17);
    OUTLINED_FUNCTION_9_10();
    if ((v19 & 1) != 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v20 = OUTLINED_FUNCTION_17_2();
      v21 = OUTLINED_FUNCTION_3(v20, (uint64_t)&static Logger.conversationControls);
      v22 = static os_log_type_t.info.getter();
      if (OUTLINED_FUNCTION_28_4(v21))
      {
        v23 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v23 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v21, v22, "Deep linking to in-call scene to show call details card for PTT call", v23);
        OUTLINED_FUNCTION_60();
      }

      v24 = OUTLINED_FUNCTION_23_89();
      if (!v24)
        goto LABEL_37;
      v25 = v24;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional(v25))
      {
        v27 = v26;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v27 + 40))(ObjectType, v27);
      }
      goto LABEL_12;
    }
    v29 = (void *)OUTLINED_FUNCTION_108_15();
    v30 = ConversationControlsManager.isActiveCallGreenTea3P()();

    if (v30)
    {
      v31 = (void *)OUTLINED_FUNCTION_108_15();
      ConversationControlsManager.openGreenTea3PApp(dismissBannerOnAppOpen:)(1);

      goto LABEL_37;
    }
    OUTLINED_FUNCTION_153();
    if (OUTLINED_FUNCTION_107_13())
    {
      swift_getObjectType();
      v33 = OUTLINED_FUNCTION_139_10();
      if (v33)
      {
        v63 = v32;
        goto LABEL_21;
      }
      OUTLINED_FUNCTION_10();
    }
    else
    {
      v33 = 0;
    }
    v63 = 0;
LABEL_21:
    v34 = (void *)OUTLINED_FUNCTION_108_15();
    OUTLINED_FUNCTION_153();
    v36 = (*(uint64_t (**)(void))(v35 + 800))();

    if ((v36 & 1) != 0)
    {
      v38 = *(unsigned __int8 *)(v0 + v4[11]);
      OUTLINED_FUNCTION_143_9(v0, v37, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      if (v38 == 1)
      {
        OUTLINED_FUNCTION_49_15(v39, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
        goto LABEL_25;
      }
      v40 = v8[v4[12]];
      OUTLINED_FUNCTION_49_15(v39, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      if (v40 == 1)
      {
LABEL_25:
        if (v33)
        {
          v41 = one-time initialization token for conversationControls;
          OUTLINED_FUNCTION_598();
          if (v41 != -1)
            swift_once();
          v42 = OUTLINED_FUNCTION_17_2();
          v43 = OUTLINED_FUNCTION_3(v42, (uint64_t)&static Logger.conversationControls);
          v44 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v43, v44))
          {
            v45 = (uint8_t *)OUTLINED_FUNCTION_105();
            *(_WORD *)v45 = 0;
            OUTLINED_FUNCTION_130(&dword_1BD004000, v43, v44, "Deep linking to in-call scene to show an AV-less call details card", v45);
            OUTLINED_FUNCTION_60();
          }

          v46 = OUTLINED_FUNCTION_650();
          (*(void (**)(uint64_t))(v63 + 24))(v46);
          goto LABEL_36;
        }
LABEL_40:
        OUTLINED_FUNCTION_153();
        v24 = (*(uint64_t (**)(void))(v52 + 936))();
        if ((v24 & 1) == 0)
        {
          v54 = *(unsigned __int8 *)(v0 + v4[11]);
          OUTLINED_FUNCTION_198_4(v0, v53, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          if (v54 == 1)
          {
            OUTLINED_FUNCTION_162_5(v55, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
            goto LABEL_44;
          }
          v56 = *(unsigned __int8 *)(v2 + v4[12]);
          OUTLINED_FUNCTION_162_5(v55, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          if (v56 == 1)
          {
LABEL_44:
            v24 = OUTLINED_FUNCTION_107_13();
            if (v24)
            {
              v57 = v24;
              swift_getObjectType();
              if (dynamic_cast_existential_1_conditional(v57))
              {
                v58 = OUTLINED_FUNCTION_274_0();
                (*(void (**)(uint64_t))(v2 + 16))(v58);
                OUTLINED_FUNCTION_113();
LABEL_12:
                v24 = swift_unknownObjectRelease();
LABEL_37:
                OUTLINED_FUNCTION_35_2(v24, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
                goto LABEL_38;
              }
              v24 = OUTLINED_FUNCTION_113();
            }
          }
        }
        if (*(_BYTE *)(v0 + v4[16]) != 1)
        {
          OUTLINED_FUNCTION_35_2(v24, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          OUTLINED_FUNCTION_9_10();
          goto LABEL_38;
        }
        if (!v33)
          goto LABEL_37;
        v59 = OUTLINED_FUNCTION_650();
        v60 = v63;
        v61 = *(void (**)(uint64_t, uint64_t))(v63 + 16);
        OUTLINED_FUNCTION_598();
        v61(v59, v60);
        goto LABEL_36;
      }
    }
    if (!v33)
      goto LABEL_40;
    OUTLINED_FUNCTION_598();
    ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUI.getter();
    if ((v47 & 1) != 0)
    {
      v48 = OUTLINED_FUNCTION_650();
      (*(void (**)(uint64_t))(v63 + 16))(v48);
    }
    else
    {
      OUTLINED_FUNCTION_9_10();
      v64 = 24;
      v65 = 0u;
      v66 = 0u;
      v67 = 6;
      OUTLINED_FUNCTION_598();
      static ConversationControlsType.== infix(_:_:)(v0);
      v50 = v49;
      OUTLINED_FUNCTION_30_2();
      if ((v50 & 1) == 0)
      {
        swift_unknownObjectRelease();
        goto LABEL_40;
      }
      v51 = swift_getObjectType();
      (*(void (**)(uint64_t))(v63 + 32))(v51);
    }
LABEL_36:
    v24 = swift_unknownObjectRelease_n();
    goto LABEL_37;
  }
  OUTLINED_FUNCTION_30_7(v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_38:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationHUDViewController.showCallDetailsButtonTapped()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  id v42;
  uint64_t v43;

  v1 = MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_351();
  v3 = *(void (**)(void))(v2 + 264);
  if (((unsigned __int8 (*)(void))v3)() == 2)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationControls);
    v40 = v0;
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_28_4(v5))
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_105();
      v43 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v7 = 136315138;
      v3();
      v8 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v43);
      v10 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_26_19(v10, v11, v12, v13, v14, v15, v16, v17, v38, v40);
      OUTLINED_FUNCTION_26_19(v18, v19, v20, v21, v22, v23, v24, v25, v39, v41);
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v5, v6, "%s Unable to handle call details button press", v7);
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_26_19(v30, v31, v32, v33, v34, v35, v36, v37, v38, v40);
  }
  else
  {
    v26 = (void *)OUTLINED_FUNCTION_127_10(*v0);
    OUTLINED_FUNCTION_351();
    OUTLINED_FUNCTION_419(*(uint64_t (**)(uint64_t))(v27 + 816));

    OUTLINED_FUNCTION_351();
    if ((*(uint64_t (**)(void))(v28 + 864))())
    {
      OUTLINED_FUNCTION_185_6();
      if (OUTLINED_FUNCTION_183_5())
      {
        v29 = OUTLINED_FUNCTION_15_69();
        (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v29, v1);
      }
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall ConversationHUDViewController.appLaunchButtonTapped(_:)(UITapGestureRecognizer *a1)
{
  uint64_t *v1;
  void *v2;

  v2 = (void *)OUTLINED_FUNCTION_109_1(*v1);
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  swift_retain();
  ConversationControlsManager.appLaunchButtonTapped(completion:)();

  swift_release_n();
  OUTLINED_FUNCTION_18();
}

void closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    v7 = v5;
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v14 = v11;
      *(_DWORD *)v10 = 136315394;
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x108))();
      v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v8, v9, "[%s] appLaunchButtonTapped completion, hideButton?:%{BOOL}d", (uint8_t *)v10, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v11, -1, -1);
      MEMORY[0x1C3B751B8](v10, -1, -1);

      if ((a1 & 1) == 0)
        goto LABEL_9;
    }
    else
    {

      if ((a1 & 1) == 0)
      {
LABEL_9:

        return;
      }
    }
    ConversationHUDViewController.hideAppLaunchPill(remove:)(1);
    goto LABEL_9;
  }
}

void ConversationHUDViewController.hudControlsSize.getter()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void *v2;
  id v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_163_6(v2);
    v4 = v1();
    OUTLINED_FUNCTION_69_28(v5, v6, v7, v8, v4, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);

  }
  OUTLINED_FUNCTION_235();
}

double ConversationHUDViewController.defaultControlsSize.getter()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  double v2;
  double v3;
  void *v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v3 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340))();
  if (v3 != 0.0 || v2 != 0.0)
  {
    v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_appLaunchPillView);
    if (v4)
    {
      v5 = OUTLINED_FUNCTION_163_6(v4);
      v6 = v1();
      OUTLINED_FUNCTION_69_28(v7, v8, v9, v10, v6, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);
      ConversationHUDViewController.appLaunchPillVerticalMargin.getter();

    }
  }
  return v3;
}

double ConversationHUDViewController.appLaunchPillVerticalMargin.getter()
{
  uint64_t *v0;
  char v1;
  double result;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_18_95(*v0);
  result = 0.0;
  if (v1 == 2)
  {
    static Layout.MediaPip.padding.getter();
    if (one-time initialization token for shared != -1)
      swift_once();
    v3 = static Defaults.shared;
    (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
    v4 = static Platform.current.getter();
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 488))(v4);
    return 16.0;
  }
  return result;
}

void ConversationHUDViewController.menuContainerFrame.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  _BYTE v3[56];
  _QWORD v4[51];

  static Layout.ConversationControls.values.getter((uint64_t)v3);
  v1 = OUTLINED_FUNCTION_25_1(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);

    static Layout.ConversationControls.values.getter((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t ConversationHUDViewController.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void ConversationHUDViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void ConversationHUDViewController.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for ConversationHUDViewController.recipe : ConversationHUDViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x380))(v6);
}

void ConversationHUDViewController.recipe.didset(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int EnumTagSinglePayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  char *v85;
  _QWORD *v86;
  uint8_t *v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  v2 = v1;
  v88 = (uint8_t *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v74 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v74 - v13;
  v15 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint8_t *)&v74 - v19;
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  swift_beginAccess();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v21, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return;
  }
  outlined init with take of ShareCardStatusHeaderView((uint64_t)v14, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  if (objc_msgSend(v2, sel_isViewLoaded))
  {
    v22 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v88, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if (!v22)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      outlined destroy of AccountUpdateNotice((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_21:
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v56 = type metadata accessor for Logger();
      __swift_project_value_buffer(v56, (uint64_t)&static Logger.conversationControls);
      v57 = v2;
      v58 = Logger.logObject.getter();
      v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v61 = swift_slowAlloc();
        *(_DWORD *)v60 = 136315138;
        v90 = v61;
        v87 = v60 + 4;
        LOBYTE(v89) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v57) + 0x108))();
        v62 = String.init<A>(reflecting:)();
        v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v62, v63, &v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v58, v59, "[%s] ConversationHUDViewController: update recipe -> setupControlsView", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v61, -1, -1);
        MEMORY[0x1C3B751B8](v60, -1, -1);

      }
      else
      {

      }
      ConversationControlsRecipe.requiresAnimation(from:)((uint64_t)v88);
      ConversationHUDViewController.setupControlsView(animated:)();
LABEL_27:
      v64 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v64);
      ConversationHUDViewController.setupAppLaunchPill(buttonType:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x3B8))();
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v64);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      goto LABEL_28;
    }
    v86 = v2;
    v87 = v20;
    v85 = v5;
    v23 = &v17[*(int *)(v15 + 60)];
    v24 = *(_QWORD *)v23;
    v25 = *((_QWORD *)v23 + 1);
    v27 = *((_QWORD *)v23 + 2);
    v26 = *((_QWORD *)v23 + 3);
    v28 = *((_QWORD *)v23 + 4);
    v29 = v23[40];
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v15);
    *((_QWORD *)&v84 + 1) = v25;
    *(_QWORD *)&v84 = v24;
    if (EnumTagSinglePayload == 1)
    {
      outlined copy of ConversationControlsRecipe.Actions?(v24, v25, v27, v26, v28, v29);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      v31 = 0;
      v79 = 0;
      v80 = 0;
      v83 = 0;
      v82 = 0;
      LODWORD(v32) = 254;
      v33 = v28;
      v5 = v85;
      if (v29 <= 0xFD)
        goto LABEL_19;
    }
    else
    {
      v34 = &v8[*(int *)(v15 + 60)];
      v35 = v26;
      v36 = v27;
      v37 = *(_QWORD *)v34;
      v38 = *((_QWORD *)v34 + 1);
      v39 = v28;
      v40 = *((_QWORD *)v34 + 2);
      v32 = *((_QWORD *)v34 + 3);
      v41 = *((_QWORD *)v34 + 4);
      v81 = v34[40];
      v42 = v25;
      v31 = v41;
      v76 = v36;
      v77 = v35;
      v78 = v39;
      outlined copy of ConversationControlsRecipe.Actions?(v24, v42, v36, v35, v39, v29);
      v82 = v37;
      v83 = v38;
      v80 = v40;
      v79 = v32;
      v43 = v32;
      LODWORD(v32) = v81;
      outlined copy of ConversationControlsRecipe.Actions?(v37, v38, v40, v43, v31, v81);
      outlined destroy of AccountUpdateNotice((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      if (v29 <= 0xFD)
      {
        if (v32 > 0xFD)
        {
          v33 = v78;
          v26 = v77;
          v27 = v76;
          v5 = v85;
LABEL_19:
          v81 = v32;
          v45 = v84;
          v32 = v31;
          v54 = *((_QWORD *)&v84 + 1);
          outlined copy of ConversationControlsRecipe.Actions(v84, *((_QWORD *)&v84 + 1), v27, v26, v33, v29);
          v55 = (uint64_t)v11;
          v44 = v54;
          v31 = v32;
          LOBYTE(v32) = v81;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          outlined destroy of AccountUpdateNotice((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
          outlined consume of ConversationControlsRecipe.Actions?(v45, v44, v27, v26, v33, v29);
          goto LABEL_20;
        }
        v96 = v82;
        v97 = v83;
        v65 = v32;
        v66 = v80;
        v67 = v79;
        v98 = v80;
        v99 = v79;
        v100 = v31;
        v101 = v65;
        v68 = v84;
        v74 = v31;
        v69 = *((_QWORD *)&v84 + 1);
        v91 = v84;
        v70 = v29;
        v71 = v76;
        v72 = v77;
        v92 = v76;
        v93 = v77;
        v73 = v78;
        v94 = v78;
        v95 = v70;
        outlined copy of ConversationControlsRecipe.Actions(v84, *((_QWORD *)&v84 + 1), v76, v77, v78, v70);
        v75 = static ConversationControlsRecipe.Actions.== infix(_:_:)(&v91);
        outlined consume of ConversationControlsRecipe.Actions?(v82, v83, v66, v67, v74, v81);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of AccountUpdateNotice((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
        outlined consume of ConversationControlsRecipe.Actions?(v68, v69, v71, v72, v73, v70);
        outlined consume of ConversationControlsRecipe.Actions?(v68, v69, v71, v72, v73, v70);
        v5 = v85;
        v2 = v86;
        v20 = v87;
        if ((v75 & 1) == 0)
          goto LABEL_21;
LABEL_13:
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v46 = type metadata accessor for Logger();
        __swift_project_value_buffer(v46, (uint64_t)&static Logger.conversationControls);
        v47 = v2;
        v48 = Logger.logObject.getter();
        v49 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          *(_DWORD *)v50 = 136315138;
          v90 = v51;
          v88 = v50 + 4;
          LOBYTE(v89) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v47) + 0x108))();
          v52 = String.init<A>(reflecting:)();
          v89 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v52, v53, &v90);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v48, v49, "[%s] ConversationHUDViewController: update recipe -> updateControlsView", v50, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v51, -1, -1);
          MEMORY[0x1C3B751B8](v50, -1, -1);

        }
        else
        {

        }
        ConversationHUDViewController.updateControlsView()();
        goto LABEL_27;
      }
      v33 = v78;
      v26 = v77;
      v27 = v76;
      v5 = v85;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined destroy of AccountUpdateNotice((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    v44 = *((_QWORD *)&v84 + 1);
    v45 = v84;
    if (v32 <= 0xFD)
    {
LABEL_20:
      outlined consume of ConversationControlsRecipe.Actions?(v45, v44, v27, v26, v33, v29);
      outlined consume of ConversationControlsRecipe.Actions?(v82, v83, v80, v79, v31, v32);
      v2 = v86;
      v20 = v87;
      goto LABEL_21;
    }
    outlined consume of ConversationControlsRecipe.Actions?(v84, *((uint64_t *)&v84 + 1), v27, v26, v33, v29);
    v2 = v86;
    v20 = v87;
    goto LABEL_13;
  }
LABEL_28:
  outlined destroy of AccountUpdateNotice((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
}

void ConversationHUDViewController.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_32();
}

void ConversationHUDViewController.recipe.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE v9[24];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_166_5(v6);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe?(a1, v6);
  swift_endAccess();
  ConversationHUDViewController.recipe.didset((uint64_t)v5);
  OUTLINED_FUNCTION_25_0(a1);
  v7 = OUTLINED_FUNCTION_131();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v7, v8);
  OUTLINED_FUNCTION_91();
}

void ConversationHUDViewController.recipe.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                             - 8)
                 + 64);
  v3[4] = malloc(v4);
  v3[5] = malloc(v4);
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_recipe;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_166_5(v5);
  OUTLINED_FUNCTION_18();
}

void ConversationHUDViewController.recipe.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    ConversationHUDViewController.recipe.setter((uint64_t)v3);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    ConversationHUDViewController.recipe.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

void key path setter for ConversationHUDViewController.presentationSize : ConversationHUDViewController()
{
  ConversationHUDViewController.presentationSize.setter();
}

double ConversationHUDViewController.presentationSize.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

void ConversationHUDViewController.presentationSize.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_42_51();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v1;
  OUTLINED_FUNCTION_8_15();
}

BOOL ConversationHUDViewController.menuPresented.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_menuContainerView)
      || *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_shareCardViewController) != 0;
}

void ConversationHUDViewController.systemApertureElement.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_25_4();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v4) + 0x378))();
  v5 = OUTLINED_FUNCTION_28_1();
  v6 = OUTLINED_FUNCTION_48_4(v0);
  if ((_DWORD)v6)
  {
    v16 = 0;
    v17 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1;
    v14 = 0;
  }
  else
  {
    v15 = v0 + *(int *)(v5 + 72);
    v10 = *(void **)(v15 + 48);
    v11 = *(_QWORD *)(v15 + 56);
    v12 = *(_QWORD *)(v15 + 64);
    v14 = *(_BYTE *)(v15 + 72);
    v13 = *(_QWORD *)v15;
    v16 = *(void **)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 8);
    v7 = *(_QWORD *)(v15 + 24);
    v8 = *(void **)(v15 + 32);
    v9 = *(_QWORD *)(v15 + 40);
    v6 = (uint64_t)outlined copy of SystemApertureElement?(*(id *)v15, v17, v16, v7, v8, v9, v10);
  }
  OUTLINED_FUNCTION_32_18(v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  *(_QWORD *)v2 = v13;
  *(_QWORD *)(v2 + 8) = v17;
  *(_QWORD *)(v2 + 16) = v16;
  *(_QWORD *)(v2 + 24) = v7;
  *(_QWORD *)(v2 + 32) = v8;
  *(_QWORD *)(v2 + 40) = v9;
  *(_QWORD *)(v2 + 48) = v10;
  *(_QWORD *)(v2 + 56) = v11;
  *(_QWORD *)(v2 + 64) = v12;
  *(_BYTE *)(v2 + 72) = v14;
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall ConversationHUDViewController.updatePreferredContentSize()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  char v24;
  void *v25;
  uint64_t v26;
  _QWORD v27[50];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_2();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x1E0DEF740], v3);
  v5 = _dispatchPreconditionTest(_:)();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v6 = *MEMORY[0x1E0DC49E8];
  v7 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
  v9 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
  v8 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  OUTLINED_FUNCTION_16_23();
  v11 = *(uint64_t (**)(void))(v10 + 936);
  if ((v11() & 1) != 0)
  {
    static Layout.ConversationControls.values.getter((uint64_t)v27);
    v13 = *(double *)&v27[7];
    v12 = *(double *)&v27[8];
    v15 = OUTLINED_FUNCTION_9(v14, sel_view);
    if (v15)
    {
      objc_msgSend(v15, sel_SBUISA_layoutMode);
      OUTLINED_FUNCTION_4_39();
      if ((unint64_t)(v3 - 2) >= 3)
      {
        objc_msgSend(v2, sel_setPreferredContentSize_, v13, v12);
      }
      else
      {
        objc_msgSend(v2, sel_preferredContentSize);
        v8 = (v16 - v13) * 0.5;
        v9 = -v12;
        v6 = 0.0;
        v7 = v8;
      }
      goto LABEL_8;
    }
LABEL_16:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_16_23();
  (*(void (**)(void))(v17 + 840))();
  objc_msgSend(v2, sel_setPreferredContentSize_, v18, v19);
LABEL_8:
  OUTLINED_FUNCTION_16_23();
  if (OUTLINED_FUNCTION_107_13())
  {
    OUTLINED_FUNCTION_193_5();
    if (OUTLINED_FUNCTION_137_9())
    {
      v20 = OUTLINED_FUNCTION_146();
      (*(void (**)(uint64_t, uint64_t, double, double, double, double))(v1 + 48))(v20, v1, v6, v7, v9, v8);
    }
    OUTLINED_FUNCTION_9_10();
  }
  if (OUTLINED_FUNCTION_107_13())
  {
    v22 = v21;
    ObjectType = swift_getObjectType();
    v24 = v11();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v22 + 8))(v24 & 1, ObjectType, v22);
    OUTLINED_FUNCTION_9_10();
  }
  v25 = (void *)OUTLINED_FUNCTION_10_116(*v2);
  OUTLINED_FUNCTION_16_23();
  (*(void (**)(void))(v26 + 2560))();

}

Swift::Void __swiftcall ConversationHUDViewController.updatePresentationSize(to:)(CGSize to)
{
  uint64_t *v1;
  CGFloat height;
  uint64_t v3;
  CGFloat *v4;
  _QWORD v5[51];

  height = to.height;
  static Layout.ConversationControls.values.getter((uint64_t)v5);
  v3 = v5[0];
  v4 = (CGFloat *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_presentationSize);
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v4 = v3;
  v4[1] = height;
  OUTLINED_FUNCTION_55_36(*v1);
}

Swift::Void __swiftcall ConversationHUDViewController.updateBackgroundBlur()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _BOOL4 v6;
  uint64_t ObjectType;
  int v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  OUTLINED_FUNCTION_154();
  if (!(*(uint64_t (**)(void))(v0 + 864))())
  {
    OUTLINED_FUNCTION_6_2();
    return;
  }
  v2 = v1;
  OUTLINED_FUNCTION_154();
  v3 = (void *)OUTLINED_FUNCTION_107_13();
  v4 = objc_msgSend(v3, sel_effect);

  if (!v4)
    goto LABEL_5;
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {

LABEL_5:
    v5 = 0;
  }
  v6 = v5 == 0;

  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
  v9 = v8;
  if (((v6 ^ v8) & 1) == 0)
  {
    v10 = (void *)OUTLINED_FUNCTION_107_13();
    if ((v9 & 1) != 0)
      v11 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 18);
    else
      v11 = 0;
    OUTLINED_FUNCTION_5_42(v10, sel_setEffect_);

  }
  v12 = (void *)OUTLINED_FUNCTION_107_13();
  v13 = objc_msgSend(v12, sel_contentView);

  objc_msgSend(v13, sel_setClipsToBounds_, v9 & 1);
  OUTLINED_FUNCTION_19_0();

}

Swift::Void __swiftcall ConversationHUDViewController.updateBackgroundCornerRadius()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  uint64_t (*v17)(void);
  NSObject *v18;
  double v19;
  double v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _BYTE v38[152];
  double v39;
  uint64_t v40;
  uint64_t v41;
  CGRect v42;

  OUTLINED_FUNCTION_149_1();
  v40 = v1;
  v41 = v2;
  v3 = v0;
  OUTLINED_FUNCTION_15_6();
  v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (v4)
  {
    OUTLINED_FUNCTION_15_6();
    v5 = OUTLINED_FUNCTION_139_10();
    if (v5)
    {
      v7 = v5;
      v8 = v6;
      ObjectType = swift_getObjectType();
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 96);
      v11 = v4;
      v36 = (id)v10(ObjectType, v8);

      if (v36)
      {
        static Layout.ConversationControls.values.getter((uint64_t)v38);
        v12 = v39 * 0.5;
        v13 = v12 + ConversationHUDViewController.contentInsetForCornerRadius.getter();
        objc_msgSend(v36, sel_frame);
        v14 = CGRectGetHeight(v42) * 0.5;
        v15 = v14 + ConversationHUDViewController.contentInsetForCornerRadius.getter();
        if (v13 > v15)
          v16 = v13;
        else
          v16 = v15;
        v17 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1B8);
        v18 = v17();
        -[NSObject _continuousCornerRadius](v18, sel__continuousCornerRadius);
        v20 = v19;

        if (v20 == v16)
        {

          return;
        }
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v21 = OUTLINED_FUNCTION_17_2();
        OUTLINED_FUNCTION_3(v21, (uint64_t)&static Logger.conversationControls);
        v22 = OUTLINED_FUNCTION_12_0();
        if (OUTLINED_FUNCTION_4_14(v22))
        {
          v23 = OUTLINED_FUNCTION_105();
          v37 = OUTLINED_FUNCTION_105();
          *(_DWORD *)v23 = 136446466;
          v24 = OUTLINED_FUNCTION_7_10();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2048;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          OUTLINED_FUNCTION_92_16(&dword_1BD004000, v18, v7, "[%{public}s] updating corner radius to %f");
          OUTLINED_FUNCTION_21();
          OUTLINED_FUNCTION_60();
        }

        v26 = (void *)v17();
        v27 = objc_msgSend(v26, sel__setContinuousCornerRadius_, v16);
        OUTLINED_FUNCTION_26_19(v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);

      }
    }
  }
  OUTLINED_FUNCTION_7_7();
}

Swift::Void __swiftcall ConversationHUDViewController.updateControlsManagerObservers()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v27 = v6;
  v28 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_6_0();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_83_4();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue>);
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_41();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_2();
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_351();
  v13 = *(uint64_t (**)(void))(v12 + 240);
  v14 = (void *)v13();
  OUTLINED_FUNCTION_351();
  (*(void (**)(void))(v15 + 2056))();

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_251();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Published<EphemeralAlert?>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<EphemeralAlert?>.Publisher, MEMORY[0x1E0C96190]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v9);
  OUTLINED_FUNCTION_351();
  v17 = OUTLINED_FUNCTION_190_2(*(uint64_t (**)(uint64_t))(v16 + 296));
  v18 = (void *)((uint64_t (*)(uint64_t))v13)(v17);
  OUTLINED_FUNCTION_351();
  (*(void (**)(void))(v19 + 2376))();

  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_75_1();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v30 = (void *)static OS_dispatch_queue.main.getter();
  v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  OUTLINED_FUNCTION_77_0(v27, v21, v22, v20);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Published<ConversationControlsAppLaunchButtonType>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<ConversationControlsAppLaunchButtonType>.Publisher, MEMORY[0x1E0C96190]);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue();
  v23 = Publisher.debounce<A>(for:scheduler:options:)();
  OUTLINED_FUNCTION_30_7(v23, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v2, v28);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v25);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_251();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue> and conformance Publishers.Debounce<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Debounce<Published<ConversationControlsAppLaunchButtonType>.Publisher, OS_dispatch_queue>, MEMORY[0x1E0C95BB0]);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  OUTLINED_FUNCTION_190_2(*(uint64_t (**)(uint64_t))((*v11 & *v4) + 0x140));
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  unsigned __int8 v11;
  int v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(void *, void *, uint64_t, uint64_t, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (char *)MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = v6;
    v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v9 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v6) + 0xF0);
    v10 = (_QWORD *)v9();
    v11 = (*(uint64_t (**)(void))((*v8 & *v10) + 0x840))();

    v12 = v11 >> 5;
    if (v12 != 1)
    {
      if (v12 != 2)
      {
        if (v12 == 3 && v11 == 96)
          goto LABEL_6;
LABEL_12:
        v28 = (_QWORD *)v9();
        (*(void (**)(void))((*v8 & *v28) + 0xA08))();

        v29 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView];
        if (!v29)
          goto LABEL_18;
        swift_getObjectType();
        if (!dynamic_cast_existential_1_conditional((uint64_t)v29))
          goto LABEL_18;
        v31 = v30;
        ObjectType = swift_getObjectType();
        v33 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v31 + 32);
        v34 = v29;
        outlined copy of ConversationControlsRecipe.View?(v3, v2);
        v33(v3, v2, v4, ObjectType, v31);
        goto LABEL_17;
      }
      if ((v11 & 1) != 0)
        goto LABEL_12;
    }
LABEL_6:
    if (!v3)
    {
LABEL_18:

      return;
    }
    v13 = one-time initialization token for conversationControls;
    v14 = v3;
    v15 = v2;
    if (v13 != -1)
      swift_once();
    v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationControls);
    v17 = v14;
    v18 = v15;
    v19 = v17;
    v20 = v18;
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      v36 = v35;
      v24 = v19;
      v25 = v20;
      v26 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, &v36);
      v8 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v21, v22, "Ephemeral alert %s attempted to present over staging; ignoring and discarding.",
        v23,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v35, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);

    }
    else
    {

    }
    v34 = (_QWORD *)v9();
    (*(void (**)(_QWORD, _QWORD, _QWORD))((*v8 & *v34) + 0x7F8))(0, 0, 0);

LABEL_17:
    goto LABEL_18;
  }
}

void closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v10)
  {
    v11 = (void *)v10;
    swift_storeEnumTagMultiPayload();
    static ConversationControlsAppLaunchButtonType.== infix(_:_:)(a1, (uint64_t)v9);
    v13 = v12;
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for ConversationControlsAppLaunchButtonType);
    if ((v13 & 1) != 0)
    {
      ConversationHUDViewController.hideAppLaunchPill(remove:)(1);

    }
    else
    {
      outlined init with copy of ShareCardStatusHeaderView(a1, (uint64_t)v6, type metadata accessor for ConversationControlsAppLaunchButtonType);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      ConversationHUDViewController.showAppLaunchPill(buttonType:)();

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
    }
  }
}

uint64_t ConversationHUDViewController.systemAperturePreferredContentSize.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[4];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView);
  if (!v1
    || (v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView + 8),
        v10[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit29ConversationHUDViewController_controlsView),
        v10[1] = v2,
        v3 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ControlsView),
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SystemAperturePreferredContentSizeProvider),
        (swift_dynamicCast() & 1) == 0))
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
    goto LABEL_6;
  }
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_6:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v7, &demangling cache variable for type metadata for SystemAperturePreferredContentSizeProvider?);
    return OUTLINED_FUNCTION_50();
  }
  outlined init with take of Notice(&v7, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v4 = OUTLINED_FUNCTION_65_2();
  v5(v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return OUTLINED_FUNCTION_50();
}

Swift::Bool __swiftcall ConversationHUDViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer *_, UITouch shouldReceive)
{
  id v2;
  void *v3;
  Swift::Bool v4;

  v2 = -[objc_class view](shouldReceive.super.isa, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_opt_self();
    v2 = (id)swift_dynamicCastObjCClass();
    if (!v2)
    {

      v2 = 0;
    }
  }
  v4 = v2 == 0;

  return v4;
}

void ConversationHUDViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void ConversationHUDViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationHUDViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ConversationControlsViewController.delegate.setter in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x368))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.getter in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.setter in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t protocol witness for ConversationControlsViewController.systemApertureElement.getter in conformance ConversationHUDViewController@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD v4[10];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x3B0))(v4);
  return outlined init with take of SystemApertureElement?((uint64_t)v4, a1);
}

uint64_t protocol witness for ConversationControlsViewController.systemAperturePreferredContentSize.getter in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E0))();
}

uint64_t (*protocol witness for ConversationControlsViewController.controlsManager.modify in conformance ConversationHUDViewController(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x100))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for ConversationControlsViewController.updatePresentationSize(to:) in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))();
}

uint64_t protocol witness for ConversationControlsViewController.updatePreferredContentSize() in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t protocol witness for ConversationControlsViewController.updateBackgroundBlur() in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
}

uint64_t protocol witness for ConversationControlsViewController.updateBackgroundCornerRadius() in conformance ConversationHUDViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D0))();
}

uint64_t protocol witness for MenuHostProvider.disableMenuContainerViewInteraction() in conformance ConversationHUDViewController()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x2F0))();
}

uint64_t protocol witness for MenuHostProvider.setupMenuContainerView() in conformance ConversationHUDViewController()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x2E8))();
}

uint64_t protocol witness for MenuHostProvider.teardownMenuContainerView() in conformance ConversationHUDViewController()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x2F8))();
}

uint64_t ConversationHUDViewController.shareCardViewControllerDidDismiss(_:)()
{
  _QWORD *v0;

  ConversationHUDViewController.shareCardViewController.setter(0);
  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t sub_1BD5CD208()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationHUDViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  closure #1 in ConversationHUDViewController.viewWillTransition(to:with:)(a1);
}

uint64_t sub_1BD5CD240()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(char a1)
{
  uint64_t v1;

  closure #1 in ConversationHUDViewController.appLaunchButtonTapped(_:)(a1, v1);
}

void partial apply for closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationHUDViewController.updateControlsManagerObservers()(a1, v1);
}

void partial apply for closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ConversationHUDViewController.updateControlsManagerObservers()(a1, v1);
}

void sub_1BD5CD27C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_109_1(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD2AC()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_18_95(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD2D8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & v0) + 0x110))(*v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD30C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x120))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD344()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x138))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD37C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _OWORD v3[2];
  uint64_t v4;

  OUTLINED_FUNCTION_1_0();
  (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))(v3);
  v2 = v3[1];
  *(_OWORD *)v0 = v3[0];
  *(_OWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  OUTLINED_FUNCTION_8_15();
}

void sub_1BD5CD3D0()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_53_48(v1) & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD400()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x170))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD434()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x180))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD46C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x188))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD4A0()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x1A0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD4D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_22();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1A8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD508()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_89_16(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_108_1(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD568(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x378))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5CD5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *(double *)v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x390))();
  *(_QWORD *)(v0 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

uint64_t initializeWithCopy for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for HUDShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HUDShadowProperties()
{
  return &type metadata for HUDShadowProperties;
}

void type metadata completion function for ConversationHUDViewController()
{
  unint64_t v0;

  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ConversationHUDViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.controlsManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationHUDViewController.context.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationHUDViewController.ephemeralAlertCancellable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonCancellable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.setter(uint64_t *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t v6;
  int v7;
  __int128 v8;
  uint64_t v9;

  v2 = *((_DWORD *)a1 + 2);
  v3 = a1[4];
  v4 = *(uint64_t (**)(uint64_t *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x158);
  v6 = *a1;
  v7 = v2;
  v8 = *((_OWORD *)a1 + 1);
  v9 = v3;
  return v4(&v6);
}

uint64_t dispatch thunk of ConversationHUDViewController.shadowProperties.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConversationHUDViewController.deferPillUpdates.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConversationHUDViewController.pillShouldBeShowing.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.backgroundMaterialView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.__allocating_init(recipe:presentationSize:controlsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 680))();
}

uint64_t dispatch thunk of ConversationHUDViewController.setupMenuContainerView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.disableMenuContainerViewInteraction()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.teardownMenuContainerView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.statusViewTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of ConversationHUDViewController.showCallDetailsButtonTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of ConversationHUDViewController.appLaunchButtonTapped(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of ConversationHUDViewController.hudControlsSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of ConversationHUDViewController.defaultControlsSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of ConversationHUDViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of ConversationHUDViewController.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of ConversationHUDViewController.presentationSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of ConversationHUDViewController.menuPresented.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.systemApertureElement.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updatePreferredContentSize()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updatePresentationSize(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateBackgroundBlur()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateBackgroundCornerRadius()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.updateControlsManagerObservers()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of ConversationHUDViewController.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of ConversationHUDViewController.gestureRecognizer(_:shouldReceive:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E8))();
}

uint64_t sub_1BD5CDDB4()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(char a1)
{
  uint64_t v1;

  closure #2 in ConversationHUDViewController.hideAppLaunchPill(remove:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1BD5CDDE4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  int *v5;
  char *v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_63_30() - 8) + 80);
  OUTLINED_FUNCTION_115();
  v2 = (id *)(v0 + ((v1 + 24) & ~v1));
  OUTLINED_FUNCTION_65_2();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v4 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_17_1(v4);
        break;
      case 4u:
        v13 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_17_1(v13);
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v15 = (char *)v2 + *(int *)(v14 + 48);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)v15 + 15) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v15 + 96));
        if (*((_QWORD *)v15 + 39))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(id *)((char *)v2 + *(int *)(v14 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v5 = (int *)type metadata accessor for Participant(0);
    v6 = (char *)v2 + v5[5];
    v7 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = (id *)((char *)v2 + v5[7]);
    if (*v8)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_31(v5[12]);
    v9 = (uint64_t)v2 + v5[14];
    v10 = OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_48_4(v9))
      OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
    v11 = type metadata accessor for Participant.CountdownInfo(0);
    if (!OUTLINED_FUNCTION_48_4(v9 + *(int *)(v11 + 20)))
      OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
    OUTLINED_FUNCTION_2_22();
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_63_30() - 8) + 80);
  return closure #1 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(*(_QWORD **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1BD5CE01C()
{
  return swift_deallocObject();
}

uint64_t sub_1BD5CE02C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_115();

  return swift_deallocObject();
}

id partial apply for closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)()
{
  uint64_t v0;

  return closure #2 in ConversationHUDViewController.showAppLaunchPill(buttonType:)(*(void **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1BD5CE05C()
{
  OUTLINED_FUNCTION_115();
  return swift_deallocObject();
}

double OUTLINED_FUNCTION_39_69()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_QWORD *)(v0 - 112) = 0;
  *(_BYTE *)(v0 - 104) = -1;
  return result;
}

void OUTLINED_FUNCTION_75_26()
{
  uint64_t v0;

  static ConversationControlsType.== infix(_:_:)(v0 + 48);
}

_OWORD *OUTLINED_FUNCTION_76_26()
{
  _OWORD *v0;
  __int128 *v1;

  return outlined init with take of ConversationControlsType(v1, v0);
}

void OUTLINED_FUNCTION_106_14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_109_13()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t OUTLINED_FUNCTION_111_13()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

void *OUTLINED_FUNCTION_126_7(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char aBlock)
{
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_127_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xF0))();
}

uint64_t OUTLINED_FUNCTION_128_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xF0))();
}

uint64_t OUTLINED_FUNCTION_139_10()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0);
}

void OUTLINED_FUNCTION_143_9(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ShareCardStatusHeaderView(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_146_7(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_147_8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a1, a2, (uint64_t *)(v2 - 136));
}

void OUTLINED_FUNCTION_154_7(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2 - 128, a2);
}

id OUTLINED_FUNCTION_161_10(id a1, SEL a2)
{
  uint64_t v2;
  double v3;

  return objc_msgSend(a1, a2, v2, v3);
}

id OUTLINED_FUNCTION_163_6@<X0>(void *a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_174_6(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ShareCardStatusHeaderView(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_182_7()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_183_5()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0);
}

uint64_t OUTLINED_FUNCTION_193_5()
{
  return swift_getObjectType();
}

uint64_t ShareCardHeaderView.init(controlsManager:shouldHideDefaultStatusView:)(uint64_t a1)
{
  State.init(wrappedValue:)();
  return a1;
}

void ShareCardHeaderView.controlsManager.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ShareCardHeaderView.controlsManager.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardHeaderView.shouldHideDefaultStatusView.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t ShareCardHeaderView.shouldHideDefaultStatusView.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ShareCardHeaderView.shouldHideDefaultStatusView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ShareCardHeaderView.body.getter@<X0>(char *a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)();
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)();
  char *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  closure #1 in ShareCardHeaderView.body.getter(a1, a2, (uint64_t)a3, a4, (uint64_t)v11);
  v15 = *(_QWORD *)&a1[OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_conversationDidChangePublisher];
  v16 = OUTLINED_FUNCTION_13_13();
  *(_QWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  outlined init with copy of (name: String, value: Any?)((uint64_t)v11, (uint64_t)v14, &demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  *(_QWORD *)&v14[*(int *)(v12 + 52)] = v15;
  v17 = (uint64_t (**)())&v14[*(int *)(v12 + 56)];
  *v17 = partial apply for closure #2 in ShareCardHeaderView.body.getter;
  v17[1] = (uint64_t (*)())v16;
  swift_retain();
  swift_retain();
  v18 = a1;
  v19 = a3;
  outlined destroy of Conversation?((uint64_t)v11, &demangling cache variable for type metadata for Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>);
  v20 = OUTLINED_FUNCTION_13_13();
  *(_QWORD *)(v20 + 16) = v18;
  *(_BYTE *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  v21 = v27;
  outlined init with copy of (name: String, value: Any?)((uint64_t)v14, v27, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
  v22 = (void (**)())(v21
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier>)
                             + 36));
  *v22 = partial apply for closure #3 in ShareCardHeaderView.body.getter;
  v22[1] = (void (*)())v20;
  v22[2] = 0;
  v22[3] = 0;
  v23 = v18;
  v24 = v19;
  swift_retain();
  return outlined destroy of Conversation?((uint64_t)v14, &demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
}

void closure #1 in ShareCardHeaderView.body.getter(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  void *v27;
  char v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v35 = a2;
  v36 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v34[-v12];
  v37 = type metadata accessor for ShareCardStatusHeaderView(0);
  MEMORY[0x1E0C80A78](v37);
  v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v34[-v17];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>.Storage);
  MEMORY[0x1E0C80A78](v19);
  v21 = &v34[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = a3;
  v39 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
  State.wrappedValue.getter();
  v22 = v40;
  if (v40)
  {
    v23 = a1;
    v24 = v22;
    v25 = ShareCardSharePlayHeaderView.init(controlsManager:app:)(v23, v24);
    v27 = v26;
    *(_QWORD *)v21 = v25;
    *((_QWORD *)v21 + 1) = v26;
    v21[16] = v28;
    *((_QWORD *)v21 + 3) = v29;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView();
    lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView();
    v30 = v25;
    v31 = v27;
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    swift_release();

  }
  else
  {
    *(_QWORD *)v15 = a1;
    v15[8] = v35 & 1;
    v32 = type metadata accessor for ConversationControlsRecipe();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v32);
    outlined init with copy of (name: String, value: Any?)((uint64_t)v13, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v33 = a1;
    State.init(wrappedValue:)();
    outlined destroy of Conversation?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    outlined init with take of ShareCardStatusHeaderView((uint64_t)v15, (uint64_t)v18);
    outlined init with copy of ShareCardStatusHeaderView((uint64_t)v18, (uint64_t)v21);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView();
    lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ShareCardStatusHeaderView((uint64_t)v18);
  }
}

uint64_t closure #2 in ShareCardHeaderView.body.getter()
{
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t partial apply for closure #2 in ShareCardHeaderView.body.getter()
{
  return closure #2 in ShareCardHeaderView.body.getter();
}

void ShareCardHeaderView.updateView()(_QWORD *a1, uint64_t a2, void *a3)
{
  _QWORD *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;

  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x8D0))();
  if (v6)
  {
    v7 = v6;
    if (objc_msgSend(v6, sel_state) == (id)1
      && TUConversationActivitySession.generateType.getter() != 6)
    {
      swift_retain();
      v10 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
      State.wrappedValue.setter();
      swift_release();

      return;
    }

  }
  v8 = (_QWORD *)(*(uint64_t (**)(void))((*v5 & *a1) + 0x778))();
  if (v8)
  {
    v9 = v8;
    if (((*(uint64_t (**)(void))((*v5 & *v8) + 0x80))() & 1) == 0)

  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ShareCardHeaderView.HeaderState>);
  State.wrappedValue.setter();
}

uint64_t objectdestroyTm_19()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in ShareCardHeaderView.body.getter()
{
  uint64_t v0;

  ShareCardHeaderView.updateView()(*(_QWORD **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t associated type witness table accessor for View.Body : View in ShareCardHeaderView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ShareCardHeaderView@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ShareCardHeaderView.body.getter(*(char **)v1, *(unsigned __int8 *)(v1 + 8), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t destroy for ShareCardHeaderView(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v3;
  v7 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ShareCardHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ShareCardHeaderView()
{
  return &type metadata for ShareCardHeaderView;
}

void **initializeBufferWithCopyOfBuffer for ShareCardHeaderView.HeaderState(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for ShareCardHeaderView.HeaderState(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for ShareCardHeaderView.HeaderState(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ShareCardHeaderView.HeaderState()
{
  return &type metadata for ShareCardHeaderView.HeaderState;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>;
  if (!lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA108], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SubscriptionView<PassthroughSubject<(), Never>, Group<_ConditionalContent<ShareCardSharePlayHeaderView, ShareCardStatusHeaderView>>> and conformance SubscriptionView<A, B>);
  }
  return result;
}

void partial apply for closure #1 in closure #2 in ShareCardHeaderView.body.getter()
{
  uint64_t v0;

  ShareCardHeaderView.updateView()(*(_QWORD **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t outlined init with take of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ShareCardStatusHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView;
  if (!lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareCardSharePlayHeaderView, &type metadata for ShareCardSharePlayHeaderView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardSharePlayHeaderView and conformance ShareCardSharePlayHeaderView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView;
  if (!lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView)
  {
    v1 = type metadata accessor for ShareCardStatusHeaderView(255);
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ShareCardStatusHeaderView, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareCardStatusHeaderView and conformance ShareCardStatusHeaderView);
  }
  return result;
}

uint64_t outlined destroy of ShareCardStatusHeaderView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ShareCardStatusHeaderView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static ObjectTracker.Rule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void ObjectTracker.Rule.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

void ObjectTracker.Rule.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t ObjectTracker.RuleGroup.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_33_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ObjectTracker.RuleGroup.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_67_27();
  v2 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_5_0();
  return v2;
}

uint64_t type metadata accessor for ObjectTracker.RuleGroup(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.RuleGroup);
}

uint64_t ObjectTracker.RuleGroup.rules.getter()
{
  OUTLINED_FUNCTION_16_99();
  return swift_bridgeObjectRetain();
}

uint64_t ObjectTracker.RuleGroup.report.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_16_99() + 28));
}

void ObjectTracker.RuleGroup.init(name:rules:report:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  UUID.init()();
  v10 = OUTLINED_FUNCTION_67_27();
  v12 = (_QWORD *)(a5 + v11);
  *v12 = a1;
  v12[1] = a2;
  *(_QWORD *)(a5 + *(int *)(v10 + 24)) = a3;
  *(_BYTE *)(a5 + *(int *)(v10 + 28)) = a4;
  OUTLINED_FUNCTION_91();
}

void ObjectTracker.RuleGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_33_0();
  _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  dispatch thunk of Hashable.hash(into:)();
  v3 = type metadata accessor for ObjectTracker.RuleGroup(0);
  OUTLINED_FUNCTION_76_27();
  String.hash(into:)();
  OUTLINED_FUNCTION_133();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)(a1, v4);
  OUTLINED_FUNCTION_53();
  Hasher._combine(_:)(*(_BYTE *)(v1 + *(int *)(v3 + 28)));
  OUTLINED_FUNCTION_91();
}

void static ObjectTracker.RuleGroup.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((static UUID.== infix(_:_:)() & 1) != 0)
  {
    v4 = type metadata accessor for ObjectTracker.RuleGroup(0);
    v5 = *(int *)(v4 + 20);
    v6 = *(_QWORD *)(a1 + v5);
    v7 = *(_QWORD *)(a1 + v5 + 8);
    v8 = (_QWORD *)(a2 + v5);
    v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      specialized static Set.== infix(_:_:)(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  OUTLINED_FUNCTION_18();
}

void ObjectTracker.RuleGroup.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_5_1();
  ObjectTracker.RuleGroup.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ObjectTracker.RuleGroup()
{
  _BYTE v0[72];

  Hasher.init(_seed:)();
  ObjectTracker.RuleGroup.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t ObjectTracker.Objects.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t ObjectTracker.RuleGroupError.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67_27();
  v2 = (uint64_t *)(v0 + v1);
  v3 = *v2;
  v4 = (void *)v2[1];
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t ObjectTracker.RuleGroupError.description.getter()
{
  uint64_t v0;
  void *v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(43);
  v2._countAndFlagsBits = 0x203A726F727245;
  v2._object = (void *)0xE700000000000000;
  String.append(_:)(v2);
  OUTLINED_FUNCTION_66_33();
  OUTLINED_FUNCTION_76_27();
  v3._countAndFlagsBits = v0;
  v3._object = v1;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_133();
  v4._countAndFlagsBits = 0x6F7247656C75720ALL;
  v4._object = (void *)0xEC000000203A7075;
  String.append(_:)(v4);
  OUTLINED_FUNCTION_16_99();
  OUTLINED_FUNCTION_143_0();
  v5._object = (void *)0x80000001BD699880;
  v5._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v5);
  type metadata accessor for ObjectTracker.Objects();
  OUTLINED_FUNCTION_143_0();
  return 0;
}

void ObjectTracker.RuleGroupError.additionalDirections.getter()
{
  OUTLINED_FUNCTION_34_0();
}

void ObjectTracker.RuleGroupError.ruleGroup.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for ObjectTracker.RuleGroup);
}

void ObjectTracker.RuleGroupError.rule.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_66_33() + 20));
  OUTLINED_FUNCTION_0();
}

uint64_t ObjectTracker.RuleGroupError.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_66_33() + 24));
  OUTLINED_FUNCTION_5_0();
  return v1;
}

uint64_t closure #1 in variable initialization expression of static ObjectTracker.shared(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  outlined init with copy of IDSLookupManager(a1, (uint64_t)v9);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  outlined init with take of Notice(v9, v6 + 32);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared()
{
  _QWORD *v0;
  uint64_t v1;

  v0[17] = static RadarReporter.Strings.description.getter();
  v0[18] = v1;
  v0[19] = type metadata accessor for MainActor();
  v0[20] = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  swift_release();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 72) = 0x616E7265746E495BLL;
  *(_QWORD *)(v0 + 80) = 0xEA00000000005D6CLL;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = &async function pointer to implicit closure #1 in static RadarReporter.createRadarReporterUsingAlert(title:description:reproducibility:component:classification:);
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 168) = static MainActor.shared.getter();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 128);
  swift_release();
  RadarReporter.add(info:)(v1);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 104);
  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v0 + 120);
  outlined retain of RadarReporter(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v2;
  *v2 = v0;
  v2[1] = closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared;
  return RadarReporter.requestInternalUserToReportToRadar()();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_18_55();
  v1 = v0 + 16;
  OUTLINED_FUNCTION_1_6();
  outlined release of RadarReporter(v1);
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_19();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ObjectTracker.__allocating_init(onReportFailure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ObjectTracker.init(onReportFailure:)(a1, a2);
  return v4;
}

uint64_t static ObjectTracker.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t ObjectTracker.init(onReportFailure:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  swift_defaultActor_initialize();
  *(_BYTE *)(v2 + 112) = 1;
  strcpy((char *)(v2 + 120), "This is a test");
  *(_BYTE *)(v2 + 135) = -18;
  *(_QWORD *)(v2 + 136) = MEMORY[0x1E0DEE9E0];
  type metadata accessor for TaskQueue();
  MEMORY[0x1C3B731D8]();
  v6 = TaskQueue.__allocating_init(priority:)();
  *(_QWORD *)(v2 + 152) = a2;
  *(_QWORD *)(v2 + 160) = v6;
  *(_QWORD *)(v2 + 144) = a1;
  return v2;
}

void ObjectTracker._startTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52[3];
  uint64_t v53;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v9 = v8 - v7;
  v51[1] = OUTLINED_FUNCTION_16_99();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v51 - v16;
  OUTLINED_FUNCTION_73_26(v18, v19, v20);
  OUTLINED_FUNCTION_1();
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v21 + 16);
  OUTLINED_FUNCTION_5_0();
  if (v22 && (v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v17), (v24 & 1) != 0))
  {
    v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
    swift_retain();
  }
  else
  {
    type metadata accessor for ObjectTracker.Objects();
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = MEMORY[0x1E0DEE9E8];
  }
  OUTLINED_FUNCTION_27();
  outlined destroy of AccountUpdateNotice((uint64_t)v17, type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_1();
  specialized Set.contains(_:)(v5, *(_QWORD *)(v25 + 16));
  if ((v26 & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationKit);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v13, type metadata accessor for ObjectTracker.RuleGroup);
    v28 = Logger.logObject.getter();
    v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = OUTLINED_FUNCTION_105();
      v51[0] = OUTLINED_FUNCTION_105();
      v52[0] = v51[0];
      *(_DWORD *)v30 = 136315394;
      OUTLINED_FUNCTION_71_1(v13, v31, type metadata accessor for ObjectTracker.RuleGroup);
      OUTLINED_FUNCTION_46_41();
      v33 = v32;
      v34 = v5;
      v36 = v35;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v36, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      outlined destroy of AccountUpdateNotice(v13, type metadata accessor for ObjectTracker.RuleGroup);
      *(_WORD *)(v30 + 12) = 2080;
      v53 = v34;
      v37 = String.init<A>(reflecting:)();
      v53 = OUTLINED_FUNCTION_92_17(v37, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v28, v29, "ObjectTracker: initialized called for %s with object at address %s but the object was already inserted.", (uint8_t *)v30);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19();
    v50 = v13;
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    specialized Set._Variant.insert(_:)(&v53, v5);
    swift_endAccess();
    OUTLINED_FUNCTION_2_0();
    v39 = swift_retain();
    specialized Dictionary._Variant.setValue(_:forKey:)(v39, v3);
    swift_endAccess();
    ObjectTracker.verifyRules(for:)();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_17_2();
    v28 = __swift_project_value_buffer(v40, (uint64_t)&static Logger.conversationKit);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v3, v1, type metadata accessor for ObjectTracker.RuleGroup);
    Logger.logObject.getter();
    v41 = OUTLINED_FUNCTION_18_13();
    if (OUTLINED_FUNCTION_4_11(v41))
    {
      v42 = OUTLINED_FUNCTION_105();
      v51[0] = OUTLINED_FUNCTION_105();
      v52[0] = v51[0];
      *(_DWORD *)v42 = 136315394;
      v53 = v5;
      v43 = String.init<A>(reflecting:)();
      v53 = OUTLINED_FUNCTION_92_17(v43, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_53();
      *(_WORD *)(v42 + 12) = 2080;
      OUTLINED_FUNCTION_71_1(v1, v45, type metadata accessor for ObjectTracker.RuleGroup);
      OUTLINED_FUNCTION_46_41();
      v47 = v46;
      v49 = v48;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v9, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v49, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_54_1();
      outlined destroy of AccountUpdateNotice(v1, type metadata accessor for ObjectTracker.RuleGroup);
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v28, (os_log_type_t)v13, "ObjectTracker: startTracking object at address %s for %s", (uint8_t *)v42);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_19();
    v50 = v1;
  }
  outlined destroy of AccountUpdateNotice(v50, type metadata accessor for ObjectTracker.RuleGroup);

  OUTLINED_FUNCTION_52_1();
}

void ObjectTracker._stopTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_93();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = OUTLINED_FUNCTION_16_99();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_79();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  OUTLINED_FUNCTION_1();
  v17 = *(_QWORD *)(v0 + 136);
  OUTLINED_FUNCTION_5_0();
  specialized Dictionary.subscript.getter(v2, v17);
  v19 = v18;
  OUTLINED_FUNCTION_27();
  if (v19)
  {
    OUTLINED_FUNCTION_2_0();
    specialized Set._Variant.remove(_:)();
    swift_endAccess();
    ObjectTracker.verifyRules(for:)();
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_17_2();
    v21 = __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationKit);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v2, (uint64_t)v16, type metadata accessor for ObjectTracker.RuleGroup);
    Logger.logObject.getter();
    v22 = OUTLINED_FUNCTION_18_13();
    if (OUTLINED_FUNCTION_4_11(v22))
    {
      v23 = OUTLINED_FUNCTION_105();
      v30 = OUTLINED_FUNCTION_105();
      v31 = v30;
      *(_DWORD *)v23 = 136315394;
      v32 = v4;
      v24 = String.init<A>(reflecting:)();
      v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v25, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v16, v8, type metadata accessor for ObjectTracker.RuleGroup);
      __swift_storeEnumTagSinglePayload(v8, 0, 1, v9);
      specialized >> prefix<A>(_:)(v8);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v8, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      v32 = OUTLINED_FUNCTION_48_50();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_54_1();
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for ObjectTracker.RuleGroup);
      OUTLINED_FUNCTION_26_6(&dword_1BD004000, v21, (os_log_type_t)v2, "ObjectTracker: stopTracking object at address %s for %s", (uint8_t *)v23);
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_60();
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for ObjectTracker.RuleGroup);

    OUTLINED_FUNCTION_22();
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v26 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v26, (uint64_t)&static Logger.conversationKit);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v2, v13, type metadata accessor for ObjectTracker.RuleGroup);
    v27 = Logger.logObject.getter();
    v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)OUTLINED_FUNCTION_105();
      v31 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v29 = 136315138;
      outlined init with copy of ConversationControlsAppLaunchButtonType(v13, v8, type metadata accessor for ObjectTracker.RuleGroup);
      __swift_storeEnumTagSinglePayload(v8, 0, 1, v9);
      specialized >> prefix<A>(_:)(v8);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v8, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
      v32 = OUTLINED_FUNCTION_48_50();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_54_1();
      outlined destroy of AccountUpdateNotice(v13, type metadata accessor for ObjectTracker.RuleGroup);
      _os_log_impl(&dword_1BD004000, v27, v28, "ObjectTracker: Called deinitialized but there is no group for %s", v29, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    outlined destroy of AccountUpdateNotice(v13, type metadata accessor for ObjectTracker.RuleGroup);

  }
  OUTLINED_FUNCTION_52_1();
}

void ObjectTracker.verifyRules(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v4 = v3;
  v5 = (int *)OUTLINED_FUNCTION_66_33();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_79();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_66_17();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  OUTLINED_FUNCTION_1();
  v14 = *(_QWORD *)(v0 + 136);
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_5_0();
    v15 = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    if ((v16 & 1) == 0)
    {
      OUTLINED_FUNCTION_27();
      goto LABEL_11;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_retain();
    OUTLINED_FUNCTION_27();
    v39 = OUTLINED_FUNCTION_16_99();
    specialized Set.contains(_:)(0, *(_QWORD *)(v4 + *(int *)(v39 + 24)));
    if ((v18 & 1) != 0)
      ObjectTracker.verifyExclusive(objects:)(v17);
    type metadata accessor for Defaults();
    swift_allocObject();
    v19 = Defaults.init()();
    v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 1072))(v19);
    OUTLINED_FUNCTION_43();
    if ((v20 & 1) != 0)
    {
      v21 = *(_BYTE *)(v2 + 112);
      v22 = *(_QWORD *)(v2 + 128);
      v38 = *(_QWORD *)(v2 + 120);
      lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError();
      v23 = (void *)swift_allocError();
      *(_BYTE *)v24 = v21;
      *(_QWORD *)(v24 + 8) = v38;
      *(_QWORD *)(v24 + 16) = v22;
      OUTLINED_FUNCTION_5_0();
      swift_willThrow();
      OUTLINED_FUNCTION_85_23();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      if (swift_dynamicCast())
      {

        outlined init with take of StagedCollaboration((uint64_t)v13, v1, type metadata accessor for ObjectTracker.RuleGroupError);
        OUTLINED_FUNCTION_73_26(v25, v26, type metadata accessor for ObjectTracker.RuleGroup);
        v27 = (uint64_t *)(v1 + v5[6]);
        v28 = *v27;
        v29 = v27[1];
        *(_BYTE *)(v9 + v5[5]) = *(_BYTE *)(v1 + v5[5]);
        v30 = (_QWORD *)(v9 + v5[6]);
        *v30 = v28;
        v30[1] = v29;
        *(_QWORD *)(v9 + v5[7]) = v17;
        v31 = *(_BYTE *)(v4 + *(int *)(v39 + 28));
        swift_retain();
        swift_bridgeObjectRetain();
        specialized ObjectTracker.reportFailure(_:report:)(v9, v31, v2);
        OUTLINED_FUNCTION_22();
        outlined destroy of AccountUpdateNotice(v9, type metadata accessor for ObjectTracker.RuleGroupError);
        outlined destroy of AccountUpdateNotice(v1, type metadata accessor for ObjectTracker.RuleGroupError);

        goto LABEL_11;
      }

      OUTLINED_FUNCTION_85_23();
      v32 = String.init<A>(reflecting:)();
      v34 = v33;
      swift_getErrorValue();
      v35 = Error.localizedDescription.getter();
      specialized ObjectTracker.reportFailure(_:report:)(v32, v34, v35, v36, 1, v2);

      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_133();
    }
    OUTLINED_FUNCTION_22();
  }
LABEL_11:
  OUTLINED_FUNCTION_52_1();
}

uint64_t ObjectTracker.verifyExclusive(objects:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) > 1uLL)
  {
    lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError();
    swift_allocError();
    *(_BYTE *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0xD00000000000003DLL;
    *(_QWORD *)(v3 + 16) = 0x80000001BD699970;
    return swift_willThrow();
  }
  return result;
}

uint64_t ObjectTracker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ObjectTracker.__deallocating_deinit()
{
  ObjectTracker.deinit();
  return swift_defaultActor_deallocate();
}

void ObjectTracker.unownedExecutor.getter()
{
  OUTLINED_FUNCTION_34_0();
}

void protocol witness for Actor.unownedExecutor.getter in conformance ObjectTracker()
{
  ObjectTracker.unownedExecutor.getter();
}

uint64_t ObjectTracker.startTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(type metadata accessor for ObjectTracker.RuleGroup(0) - 8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 + 64);
  v3[7] = OUTLINED_FUNCTION_30_41();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = OUTLINED_FUNCTION_95_18();
  OUTLINED_FUNCTION_77_21(v1);
  OUTLINED_FUNCTION_70_28();
  v2 = swift_allocObject();
  OUTLINED_FUNCTION_22_91(v2);
  OUTLINED_FUNCTION_38_64();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = ObjectTracker.startTracking(pointer:ruleGroup:);
  return OUTLINED_FUNCTION_66_0(v5);
}

{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

uint64_t closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch();
}

uint64_t closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  uint64_t v0;

  ObjectTracker._startTracking(pointer:ruleGroup:)();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ObjectTracker.stopTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = *(_QWORD *)(type metadata accessor for ObjectTracker.RuleGroup(0) - 8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 + 64);
  v3[7] = OUTLINED_FUNCTION_30_41();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = OUTLINED_FUNCTION_95_18();
  OUTLINED_FUNCTION_77_21(v1);
  OUTLINED_FUNCTION_70_28();
  v2 = swift_allocObject();
  OUTLINED_FUNCTION_22_91(v2);
  OUTLINED_FUNCTION_38_64();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = ObjectTracker.stopTracking(pointer:ruleGroup:);
  return OUTLINED_FUNCTION_66_0(v5);
}

{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch();
}

uint64_t closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  uint64_t v0;

  ObjectTracker._stopTracking(pointer:ruleGroup:)();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ObjectTracker.startTracking(object:ruleGroup:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  v2[7] = OUTLINED_FUNCTION_2_25();
  v2[8] = type metadata accessor for ObjectTracker.RuleGroup(0);
  v2[9] = OUTLINED_FUNCTION_2_25();
  v3 = (_QWORD *)swift_task_alloc();
  v2[10] = v3;
  v4 = OUTLINED_FUNCTION_94_10(v3, (uint64_t)ObjectTracker.startTracking(object:ruleGroup:));
  return ObjectTracker.startTracking(pointer:ruleGroup:)(v4, v5);
}

uint64_t ObjectTracker.startTracking(object:ruleGroup:)()
{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_30_76();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_71_1(v3, v6, type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_83_27();
  Logger.logObject.getter();
  v7 = OUTLINED_FUNCTION_18_13();
  v8 = OUTLINED_FUNCTION_5_3(v7);
  v9 = *(_QWORD *)(v0 + 32);
  if (v8)
  {
    v10 = *(_QWORD *)(v2 + 56);
    v39 = *(_QWORD *)(v2 + 40);
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v40 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315394;
    OUTLINED_FUNCTION_72_29(v40, v12, type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_39_70();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v10, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    v19 = OUTLINED_FUNCTION_56_43(v13, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_29_77(v19);
    OUTLINED_FUNCTION_21_0();
    outlined destroy of AccountUpdateNotice(v9, type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_21_93(v20, v21, v22, v23, v24, v25, v26, v27, v38, v2 + 24, v2 + 16, v39);
    v28 = OUTLINED_FUNCTION_89_26();
    v36 = OUTLINED_FUNCTION_79_24(v28, v29, v30, v31, v32, v33, v34, v35);
    OUTLINED_FUNCTION_27_73(v36);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_427();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v5, v1, "ObjectTracker: initialized called for %s with object  %s", v11);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of AccountUpdateNotice(v9, type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_427();

  OUTLINED_FUNCTION_74_21();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_55_2(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t ObjectTracker.stopTracking(object:ruleGroup:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
  v2[7] = OUTLINED_FUNCTION_2_25();
  v2[8] = type metadata accessor for ObjectTracker.RuleGroup(0);
  v2[9] = OUTLINED_FUNCTION_2_25();
  v3 = (_QWORD *)swift_task_alloc();
  v2[10] = v3;
  v4 = OUTLINED_FUNCTION_94_10(v3, (uint64_t)ObjectTracker.stopTracking(object:ruleGroup:));
  return ObjectTracker.stopTracking(pointer:ruleGroup:)(v4, v5);
}

uint64_t ObjectTracker.stopTracking(object:ruleGroup:)()
{
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_30_76();
  v5 = __swift_project_value_buffer(v4, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_71_1(v3, v6, type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_83_27();
  Logger.logObject.getter();
  v7 = OUTLINED_FUNCTION_18_13();
  v8 = OUTLINED_FUNCTION_5_3(v7);
  v9 = *(_QWORD *)(v0 + 32);
  if (v8)
  {
    v10 = *(_QWORD *)(v2 + 56);
    v39 = *(_QWORD *)(v2 + 40);
    v11 = (uint8_t *)OUTLINED_FUNCTION_105();
    v40 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v11 = 136315394;
    OUTLINED_FUNCTION_72_29(v40, v12, type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_39_70();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v10, &demangling cache variable for type metadata for ObjectTracker.RuleGroup?);
    v19 = OUTLINED_FUNCTION_56_43(v13, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_29_77(v19);
    OUTLINED_FUNCTION_21_0();
    outlined destroy of AccountUpdateNotice(v9, type metadata accessor for ObjectTracker.RuleGroup);
    OUTLINED_FUNCTION_21_93(v20, v21, v22, v23, v24, v25, v26, v27, v38, v2 + 24, v2 + 16, v39);
    v28 = OUTLINED_FUNCTION_89_26();
    v36 = OUTLINED_FUNCTION_79_24(v28, v29, v30, v31, v32, v33, v34, v35);
    OUTLINED_FUNCTION_27_73(v36);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_427();
    OUTLINED_FUNCTION_26_6(&dword_1BD004000, v5, v1, "ObjectTracker: deinitialized called for %s with object %s", v11);
    OUTLINED_FUNCTION_25_6();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of AccountUpdateNotice(v9, type metadata accessor for ObjectTracker.RuleGroup);
  OUTLINED_FUNCTION_427();

  OUTLINED_FUNCTION_74_21();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_55_2(*(uint64_t (**)(void))(v2 + 8));
}

void ObjectTracker.Tracker.ruleGroup.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, a1, type metadata accessor for ObjectTracker.RuleGroup);
}

uint64_t ObjectTracker.Tracker.objectTracker.getter()
{
  type metadata accessor for ObjectTracker.Tracker(0);
  return swift_retain();
}

void ObjectTracker.Tracker.startTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  ObjectTracker.Tracker.startTracking(object:)(a1, (uint64_t)&unk_1E7643998, (uint64_t)&async function pointer to partial apply for closure #1 in ObjectTracker.Tracker.startTracking(object:), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_93();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v25 = v24;
  v26 = type metadata accessor for ObjectTracker.Tracker(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v26);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_77();
  v32 = v31 - v30;
  v33 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v32, 1, 1, v33);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v23, (uint64_t)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ObjectTracker.Tracker);
  v34 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  outlined init with take of StagedCollaboration((uint64_t)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, type metadata accessor for ObjectTracker.Tracker);
  *(_QWORD *)(v35 + ((v28 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ObjectTracker.Tracker.startTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t closure #1 in ObjectTracker.Tracker.startTracking(object:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ObjectTracker.Tracker(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_93_12(v1, (uint64_t)closure #1 in ObjectTracker.Tracker.startTracking(object:));
  return ObjectTracker.startTracking(pointer:ruleGroup:)(v2, v3);
}

void ObjectTracker.Tracker.stopTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  ObjectTracker.Tracker.startTracking(object:)(a1, (uint64_t)&unk_1E76439C0, (uint64_t)&async function pointer to partial apply for closure #1 in ObjectTracker.Tracker.stopTracking(object:), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t closure #1 in ObjectTracker.Tracker.stopTracking(object:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t closure #1 in ObjectTracker.Tracker.stopTracking(object:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ObjectTracker.Tracker(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_93_12(v1, (uint64_t)closure #1 in ObjectTracker.Tracker.stopTracking(object:));
  return ObjectTracker.stopTracking(pointer:ruleGroup:)(v2, v3);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void ObjectTracker.Tracker.init(ruleGroup:objectTracker:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of StagedCollaboration(a1, a3, type metadata accessor for ObjectTracker.RuleGroup);
  *(_QWORD *)(a3 + *(int *)(type metadata accessor for ObjectTracker.Tracker(0) + 20)) = a2;
  OUTLINED_FUNCTION_0();
}

uint64_t ObjectTracker.tracker(for:with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v5 = _typeName(_:qualified:)();
  v7 = v6;
  swift_bridgeObjectRetain();
  UUID.init()();
  v8 = OUTLINED_FUNCTION_67_27();
  v10 = (uint64_t *)(a2 + v9);
  *v10 = v5;
  v10[1] = v7;
  *(_QWORD *)(a2 + *(int *)(v8 + 24)) = a1;
  *(_BYTE *)(a2 + *(int *)(v8 + 28)) = 1;
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for ObjectTracker.Tracker(0) + 20)) = v2;
  return swift_retain();
}

uint64_t type metadata accessor for ObjectTracker.RuleGroupError(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.RuleGroupError);
}

uint64_t type metadata accessor for ObjectTracker.Objects()
{
  return objc_opt_self();
}

uint64_t partial apply for closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28_69();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ObjectTracker.startTracking(pointer:ruleGroup:)(v2, v3, v4, v5);
}

uint64_t objectdestroyTm_20()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_99();
  OUTLINED_FUNCTION_11_30();
  swift_release();
  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_80_22();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28_69();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ObjectTracker.stopTracking(pointer:ruleGroup:)(v2, v3, v4, v5);
}

uint64_t type metadata accessor for ObjectTracker.Tracker(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for ObjectTracker.Tracker);
}

uint64_t partial apply for closure #1 in ObjectTracker.Tracker.startTracking(object:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_112();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in ObjectTracker.Tracker.startTracking(object:)(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_11Tm_0()
{
  uint64_t v0;

  type metadata accessor for ObjectTracker.Tracker(0);
  OUTLINED_FUNCTION_11_30();
  swift_unknownObjectRelease();
  v0 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_27(v0);
  OUTLINED_FUNCTION_16_99();
  OUTLINED_FUNCTION_80_22();
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in ObjectTracker.Tracker.stopTracking(object:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_112();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in ObjectTracker.Tracker.stopTracking(object:)(v2, v3, v4, v5, v6);
}

unint64_t lazy protocol witness table accessor for type ObjectTracker.Rule and conformance ObjectTracker.Rule()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule;
  if (!lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ObjectTracker.Rule, &type metadata for ObjectTracker.Rule);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ObjectTracker.Rule and conformance ObjectTracker.Rule);
  }
  return result;
}

void base witness table accessor for Equatable in ObjectTracker.RuleGroup()
{
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroup and conformance ObjectTracker.RuleGroup, type metadata accessor for ObjectTracker.RuleGroup, (uint64_t)&protocol conformance descriptor for ObjectTracker.RuleGroup);
}

void instantiation function for generic protocol witness table for ObjectTracker.RuleGroupError(uint64_t a1)
{
  uint64_t v2;

  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroupError and conformance ObjectTracker.RuleGroupError, type metadata accessor for ObjectTracker.RuleGroupError, (uint64_t)&protocol conformance descriptor for ObjectTracker.RuleGroupError);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for ObjectTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for ObjectTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectTracker.__allocating_init(onReportFailure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.Rule(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD5D136C + 4 * byte_1BD667635[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD5D13A0 + 4 * asc_1BD667630[v4]))();
}

uint64_t sub_1BD5D13A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5D13A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5D13B0);
  return result;
}

uint64_t sub_1BD5D13BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5D13C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD5D13C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5D13D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ObjectTracker.Rule()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectTracker.RuleGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ObjectTracker.RuleGroup(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.RuleGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5D171C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 84) == a2)
  {
    v5 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v5, v6, v7);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.RuleGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5D177C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_33_0() - 8) + 84) == a3)
  {
    v7 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v7, v8, v9, v10);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ObjectTracker.RuleGroup(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectTracker.RuleGroupError(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    *(_QWORD *)((char *)v4 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *((_BYTE *)v4 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    v14 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ObjectTracker.RuleGroupError(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v13 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v13 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.RuleGroupError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5D1CD4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_41_44();
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + *(int *)(v1 + 24) + 8));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.RuleGroupError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5D1D1C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_25_73();
  if (v3)
  {
    v4 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 24) + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ObjectTracker.RuleGroupError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return type metadata completion function for ObjectTracker.RuleGroup(a1, a2, a3, type metadata accessor for ObjectTracker.RuleGroup);
}

uint64_t type metadata completion function for ObjectTracker.RuleGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectTracker.Tracker(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    *(_QWORD *)((char *)v4 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *((_BYTE *)v4 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ObjectTracker.Tracker(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ObjectTracker.RuleGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ObjectTracker.Tracker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ObjectTracker.RuleGroup(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTracker.Tracker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5D2200()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_41_44();
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_52_20();
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + *(int *)(v1 + 20)));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for ObjectTracker.Tracker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5D2244()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_25_73();
  if (v3)
  {
    v4 = OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_0_29(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for ObjectTracker.Tracker()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObjectTracker.RuleGroup(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *type metadata accessor for ObjectTracker.RuleError()
{
  return &unk_1E7643AF0;
}

unint64_t lazy protocol witness table accessor for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError;
  if (!lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ObjectTracker.RuleError, &unk_1E7643AF0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ObjectTracker.RuleError and conformance ObjectTracker.RuleError);
  }
  return result;
}

uint64_t specialized ObjectTracker.reportFailure(_:report:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v20[5];
  uint64_t v21;
  _BYTE v22[40];
  uint64_t v23[5];

  v23[3] = type metadata accessor for ObjectTracker.RuleGroupError(0);
  _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type ObjectTracker.RuleGroupError and conformance ObjectTracker.RuleGroupError, type metadata accessor for ObjectTracker.RuleGroupError, (uint64_t)&protocol conformance descriptor for ObjectTracker.RuleGroupError);
  v23[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ObjectTracker.RuleGroupError);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationKit);
  outlined init with copy of IDSLookupManager((uint64_t)v23, (uint64_t)v22);
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)v22, (uint64_t)v20);
    v13 = specialized >> prefix<A>(_:)((uint64_t)v20);
    v15 = v14;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, &demangling cache variable for type metadata for RadarReporting?);
    v20[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    _os_log_impl(&dword_1BD004000, v9, v10, "ObjectTracker: reporting failure %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v12, -1, -1);
    MEMORY[0x1C3B751B8](v11, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }

  if ((a2 & 1) != 0)
  {
    type metadata accessor for Defaults();
    swift_allocObject();
    v16 = Defaults.init()();
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 1072))(v16);
    swift_release();
    if ((v17 & 1) != 0)
    {
      swift_allocObject();
      v18 = Defaults.init()();
      (*(void (**)(_QWORD))(*(_QWORD *)v18 + 1080))(0);
      swift_release();
    }
    (*(void (**)(uint64_t *))(a3 + 144))(v23);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t specialized ObjectTracker.reportFailure(_:report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD v26[5];
  uint64_t v27;
  _BYTE v28[40];
  _QWORD v29[5];

  v29[3] = &type metadata for RadarReporter.Info;
  v29[4] = lazy protocol witness table accessor for type RadarReporter.Info and conformance RadarReporter.Info();
  v12 = (_QWORD *)swift_allocObject();
  v29[0] = v12;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v13 = one-time initialization token for conversationKit;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = type metadata accessor for Logger();
  __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationKit);
  outlined init with copy of IDSLookupManager((uint64_t)v29, (uint64_t)v28);
  v15 = Logger.logObject.getter();
  v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_DWORD *)v17 = 136315138;
    outlined init with copy of IDSLookupManager((uint64_t)v28, (uint64_t)v26);
    v19 = specialized >> prefix<A>(_:)((uint64_t)v26);
    v21 = v20;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v26, &demangling cache variable for type metadata for RadarReporting?);
    v26[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v21, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    _os_log_impl(&dword_1BD004000, v15, v16, "ObjectTracker: reporting failure %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v18, -1, -1);
    MEMORY[0x1C3B751B8](v17, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }

  if ((a5 & 1) != 0)
  {
    type metadata accessor for Defaults();
    swift_allocObject();
    v22 = Defaults.init()();
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 1072))(v22);
    swift_release();
    if ((v23 & 1) != 0)
    {
      swift_allocObject();
      v24 = Defaults.init()();
      (*(void (**)(_QWORD))(*(_QWORD *)v24 + 1080))(0);
      swift_release();
    }
    (*(void (**)(_QWORD *))(a6 + 144))(v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

uint64_t sub_1BD5D28B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BD5D28E4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in closure #1 in variable initialization expression of static ObjectTracker.shared(v2, v3, v4, v5);
}

uint64_t outlined retain of RadarReporter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of RadarReporter(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void OUTLINED_FUNCTION_39_70()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  specialized >> prefix<A>(_:)(v1);
}

uint64_t OUTLINED_FUNCTION_76_27()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_85_23()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_89_26()
{
  return String.init<A>(reflecting:)();
}

uint64_t OUTLINED_FUNCTION_93_12@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

__n128 ClarityUIPreviewNavigationDestination.init(contact:action:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_QWORD *)(a3 + 16) = v3;
  *(_QWORD *)(a3 + 24) = v4;
  result = *(__n128 *)a2;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 48) = v6;
  *(_QWORD *)(a3 + 64) = *(_QWORD *)(a2 + 32);
  return result;
}

uint64_t ClarityPreviewView.init(navigationPath:contact:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  outlined init with take of Any?(a1, a4, &demangling cache variable for type metadata for Binding<NavigationPath>);
  v9 = (int *)OUTLINED_FUNCTION_2_137();
  v10 = a4 + v9[5];
  *(_OWORD *)v10 = *(_OWORD *)a2;
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  v11 = a4 + v9[6];
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(a3 + 32);
  v13 = v9[7];
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)(a4 + v13) = static ClarityCameraModel.shared;
  v14 = v9[8];
  v15 = one-time initialization token for shared;
  swift_retain();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(a4 + v14) = static ClarityUICallHistory.shared;
  return swift_retain();
}

uint64_t type metadata accessor for ClarityPreviewView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityPreviewView;
  if (!type metadata singleton initialization cache for ClarityPreviewView)
    return swift_getSingletonMetadata();
  return result;
}

void ClarityPreviewView.navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  JUMPOUT(0x1C3B72860);
}

void key path setter for ClarityPreviewView.navigationPath : ClarityPreviewView(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for NavigationPath();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  ClarityPreviewView.navigationPath.setter((uint64_t)v5);
}

void ClarityPreviewView.navigationPath.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v2 = OUTLINED_FUNCTION_9_1();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5 - v4, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  Binding.wrappedValue.setter();
  v6 = OUTLINED_FUNCTION_65_2();
  v7(v6);
  OUTLINED_FUNCTION_91();
}

void (*ClarityPreviewView.navigationPath.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OUTLINED_FUNCTION_9_1();
  *v3 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  v3[4] = v7;
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v3[5] = v8;
  outlined init with copy of FeatureEligibility?(v1, (uint64_t)v8, &demangling cache variable for type metadata for Binding<NavigationPath>);
  MEMORY[0x1C3B72860](v7);
  return ClarityPreviewView.navigationPath.modify;
}

void ClarityPreviewView.navigationPath.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 16);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = *v2;
    v7 = v2[1];
    (*(void (**)(_QWORD, void *, _QWORD))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 16), v5, *v2);
    Binding.wrappedValue.setter();
    outlined destroy of AsyncStream<Bool>?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    Binding.wrappedValue.setter();
    outlined destroy of AsyncStream<Bool>?((uint64_t)v3, &demangling cache variable for type metadata for Binding<NavigationPath>);
  }
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t ClarityPreviewView.$navigationPath.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  return Binding.projectedValue.getter();
}

uint64_t ClarityPreviewView.contact.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_137() + 20);
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  v8 = v4;
  v9 = v5;
  return OUTLINED_FUNCTION_3_11();
}

void ClarityPreviewView.contact.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = v1 + *(int *)(OUTLINED_FUNCTION_2_137() + 20);
  OUTLINED_FUNCTION_13_86();

  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  OUTLINED_FUNCTION_91();
}

double (*ClarityPreviewView.contact.modify())(_QWORD)
{
  OUTLINED_FUNCTION_2_137();
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityPreviewView.action.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_2_137() + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[3];
  v8 = v3[4];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_99();
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  OUTLINED_FUNCTION_91();
}

void ClarityPreviewView.action.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_137() + 24);
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v3 + 24));
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_0();
}

double (*ClarityPreviewView.action.modify())(_QWORD)
{
  OUTLINED_FUNCTION_2_137();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t *ClarityCameraModel.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ClarityCameraModel.shared;
}

void ClarityPreviewView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v74 = a1;
  v3 = type metadata accessor for TaskPriority();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v71 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v68 = v6;
  v7 = OUTLINED_FUNCTION_2_137();
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  v8 = *(_QWORD *)(v63 + 64);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = (uint64_t *)(v11 - v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_30_6();
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_77();
  v18 = v17 - v16;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_77();
  v22 = v21 - v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0);
  v69 = *(_QWORD *)(v23 - 8);
  v70 = v23;
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_41();
  v65 = v24;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_41();
  v66 = v26;
  *v12 = static Alignment.center.getter();
  v12[1] = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  closure #1 in ClarityPreviewView.body.getter(v2, (uint64_t *)((char *)v12 + *(int *)(v28 + 44)));
  v29 = static Color.clear.getter();
  KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v12, v1, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  v31 = (uint64_t *)(v1 + *(int *)(v13 + 36));
  *v31 = KeyPath;
  v31[1] = v29;
  outlined destroy of AsyncStream<Bool>?((uint64_t)v12, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>);
  v32 = v2;
  OUTLINED_FUNCTION_31_62(v2);
  v33 = *(unsigned __int8 *)(v63 + 80);
  v62 = ((v33 + 16) & ~v33) + v8;
  v63 = (v33 + 16) & ~v33;
  v34 = v63;
  v61 = v33 | 7;
  v35 = swift_allocObject();
  outlined init with take of ClarityPreviewView(v2, v35 + v34);
  outlined init with copy of FeatureEligibility?(v1, v18, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  v36 = (uint64_t (**)())(v18 + *(int *)(v59 + 36));
  *v36 = partial apply for closure #2 in ClarityPreviewView.body.getter;
  v36[1] = (uint64_t (*)())v35;
  v36[2] = 0;
  v36[3] = 0;
  outlined destroy of AsyncStream<Bool>?(v1, &demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of FeatureEligibility?(v18, v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  *(_WORD *)(v22 + *(int *)(v60 + 36)) = 0;
  outlined destroy of AsyncStream<Bool>?(v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
  v37 = v2 + *(int *)(v64 + 20);
  v38 = *(void **)(v37 + 8);
  v39 = *(id *)v37;
  v40 = v38;
  swift_bridgeObjectRetain();
  v41 = CNContact.clarityUIDisplayName.getter();
  v43 = v42;
  swift_bridgeObjectRelease();

  v77 = v41;
  v78 = v43;
  Image.init(systemName:)();
  v44 = *MEMORY[0x1E0CDF760];
  v45 = type metadata accessor for Image.TemplateRenderingMode();
  v46 = v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v68, v44, v45);
  __swift_storeEnumTagSinglePayload(v46, 0, 1, v45);
  v47 = Image.renderingMode(_:)();
  swift_release();
  outlined destroy of AsyncStream<Bool>?(v46, &demangling cache variable for type metadata for Image.TemplateRenderingMode?);
  v76 = v47;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  v48 = v65;
  View.navigationTitle<A, B>(_:icon:)();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of AsyncStream<Bool>?(v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
  OUTLINED_FUNCTION_31_62(v32);
  v49 = swift_allocObject();
  outlined init with take of ClarityPreviewView(v22, v49 + v63);
  v50 = v71;
  static TaskPriority.userInitiated.getter();
  v51 = v66;
  v52 = (char *)(v66 + *(int *)(v67 + 36));
  v53 = type metadata accessor for _TaskModifier();
  v55 = v72;
  v54 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(&v52[*(int *)(v53 + 20)], v50, v73);
  *(_QWORD *)v52 = &async function pointer to partial apply for closure #3 in ClarityPreviewView.body.getter;
  *((_QWORD *)v52 + 1) = v49;
  v57 = v69;
  v56 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v51, v48, v70);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v50, v54);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v56);
  outlined init with take of Any?(v51, v74, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>);
}

void closure #1 in ClarityPreviewView.body.getter(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  __int128 v55;
  _OWORD v56[2];
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v52 = (uint64_t)&v47 - v8;
  v9 = type metadata accessor for Image.ResizingMode();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ClarityPreviewView();
  v14 = v13;
  if (*(_BYTE *)(a1 + *(int *)(v13 + 24) + 16) == 1)
  {
    v54 = *(id *)(*(_QWORD *)(a1 + *(int *)(v13 + 28)) + 16);
    v55 = 0u;
    memset(v56, 0, 25);
    v15 = v54;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
    lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v16 = *((_QWORD *)&v57 + 1);
    v50 = (void *)v57;
    v18 = v58;
    v17 = v59;
    v20 = v60;
    v19 = v61;
    v21 = v62;
  }
  else
  {
    v22 = (void *)static Color.clear.getter();
    v23 = *(int *)(v14 + 20);
    v48 = a1;
    v24 = (__int128 *)(a1 + v23);
    v25 = *((_QWORD *)v24 + 2);
    v26 = *((_QWORD *)v24 + 3);
    v57 = *v24;
    v58 = v25;
    v59 = v26;
    v27 = ClarityUIContact.fullImage.getter();
    if (v27)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDF6F8], v9);
      v28 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v27 = 257;
    }
    else
    {
      v28 = 0;
    }
    v29 = static Alignment.center.getter();
    v54 = v22;
    v55 = (unint64_t)v28;
    *(_QWORD *)&v56[0] = v27;
    *((_QWORD *)&v56[0] + 1) = v29;
    *(_QWORD *)&v56[1] = v30;
    BYTE8(v56[1]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
    lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v16 = *((_QWORD *)&v57 + 1);
    v50 = (void *)v57;
    v18 = v58;
    v17 = v59;
    v20 = v60;
    v19 = v61;
    v21 = v62;
    a1 = v48;
  }
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  closure #1 in closure #1 in ClarityPreviewView.body.getter(a1, (uint64_t)&v5[*(int *)(v31 + 44)]);
  static ClarityUIMetrics.standardSpacing.getter();
  v32 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = v53;
  outlined init with copy of FeatureEligibility?((uint64_t)v5, v53, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  v42 = v41 + *(int *)(v51 + 36);
  *(_BYTE *)v42 = v32;
  *(_QWORD *)(v42 + 8) = v34;
  *(_QWORD *)(v42 + 16) = v36;
  *(_QWORD *)(v42 + 24) = v38;
  *(_QWORD *)(v42 + 32) = v40;
  *(_BYTE *)(v42 + 40) = 0;
  outlined destroy of AsyncStream<Bool>?((uint64_t)v5, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  v43 = v52;
  outlined init with take of Any?(v41, v52, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined init with copy of FeatureEligibility?(v43, v41, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  v44 = v50;
  v45 = v49;
  *v49 = v50;
  v45[1] = v16;
  v45[2] = v18;
  v45[3] = v17;
  v45[4] = v20;
  v45[5] = v19;
  *((_BYTE *)v45 + 48) = v21;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>));
  outlined init with copy of FeatureEligibility?(v41, (uint64_t)v45 + *(int *)(v46 + 48), &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined copy of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(v44, v16, v18, v17, v20, v19, v21);
  outlined destroy of AsyncStream<Bool>?(v43, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined destroy of AsyncStream<Bool>?(v41, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  outlined consume of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(v44, v16, v18, v17, v20, v19, v21);
}

void closure #1 in closure #1 in ClarityPreviewView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v3 = type metadata accessor for ClarityPreviewView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<Text, Image>>);
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v26);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - v15;
  outlined init with copy of ClarityPreviewView(a1, (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = swift_allocObject();
  outlined init with take of ClarityPreviewView((uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  v29 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>, MEMORY[0x1E0CDF8C8]);
  Button.init(action:label:)();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Button<Label<Text, Image>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<Text, Image>>, MEMORY[0x1E0CDFA58]);
  lazy protocol witness table accessor for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle();
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  v19 = static Color.green.getter();
  KeyPath = swift_getKeyPath();
  v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v25);
  v22 = (uint64_t *)&v13[*(int *)(v26 + 36)];
  *v22 = KeyPath;
  v22[1] = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  outlined init with take of Any?((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of FeatureEligibility?((uint64_t)v16, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  v23 = v28;
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v28, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  v24 = v23
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer))
               + 48);
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  outlined destroy of AsyncStream<Bool>?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  outlined destroy of AsyncStream<Bool>?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
}

void closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  v1 = *(void (**)(uint64_t))(a1 + *(int *)(type metadata accessor for ClarityPreviewView() + 24) + 24);
  if (v1)
  {
    v2 = swift_retain();
    v1(v2);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v1);
  }
  else
  {
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)&static Log.clarityUI);
    oslog = Logger.logObject.getter();
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1BD004000, oslog, v4, "Unexpectedly showed preview view for a pending action.", v5, 2u);
      MEMORY[0x1C3B751B8](v5, -1, -1);
    }

  }
}

uint64_t closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return Label.init(title:icon:)();
}

void closure #1 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD699BB0;
  v3._countAndFlagsBits = 0xD000000000000016;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v7);

  *(Swift::String *)a1 = v6;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
}

uint64_t closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ClarityPreviewView();
  result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

void closure #2 in ClarityPreviewView.body.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7[4];
  ConversationKit::ClarityUIContact v8;

  v1 = a1 + *(int *)(type metadata accessor for ClarityPreviewView() + 20);
  v2 = *(void **)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v7[0] = *(id *)v1;
  v7[1] = v2;
  v7[2] = v3;
  v7[3] = v4;
  v6 = v7[0];
  v5 = v2;
  swift_bridgeObjectRetain();
  v8.cnContact.super.isa = (Class)v7;
  ClarityUICallHistory.markRecentCallsAsRead(for:)(v8);
  swift_bridgeObjectRelease();

}

uint64_t closure #3 in ClarityPreviewView.body.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[4] = a1;
  type metadata accessor for NavigationPath();
  v1[5] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  v1[14] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[15] = v4;
  return swift_task_switch();
}

uint64_t closure #3 in ClarityPreviewView.body.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6];
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InCallServiceDidAppearNotificationHandler()), sel_init);
  v0[16] = v4;
  v0[2] = *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_publisher];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F48]);
  MEMORY[0x1C3B71234](v5, v6);
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[17] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<(), Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator, MEMORY[0x1E0C95E78]);
  v7 = (_QWORD *)swift_task_alloc();
  v0[18] = v7;
  OUTLINED_FUNCTION_9_113(v7);
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 136);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
  }
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 161) = *(_BYTE *)(v0 + 160);
  return swift_task_switch();
}

{
  uint64_t v0;
  void *v1;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 161) == 1)
  {
    v1 = *(void **)(v0 + 128);
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 80));
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
    MEMORY[0x1C3B72860]();
    NavigationPath.removeLast(_:)(1);
    Binding.wrappedValue.setter();
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type AsyncPublisher<PassthroughSubject<(), Never>>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<PassthroughSubject<(), Never>>.Iterator, MEMORY[0x1E0C95E78]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v3;
    OUTLINED_FUNCTION_9_113(v3);
    return dispatch thunk of AsyncIteratorProtocol.next()();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t ClarityPreviewView.StartCallButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = type metadata accessor for PlatterButtonType();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ButtonStyleConfiguration();
  v7 = MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11[1] = static Color.green.getter();
  static Color.white.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDABD8], v2);
  return PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)();
}

id PreviewViewRepresentable.makeUIViewController(context:)(uint64_t a1, void *a2)
{
  id v3;
  id v4;

  type metadata accessor for PreviewViewController();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v4 = a2;
  PreviewViewController.captureSession.setter(a2);
  return v3;
}

void PreviewViewRepresentable.updateUIViewController(_:context:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  PreviewViewController.captureSession.setter(a3);
}

id protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance PreviewViewRepresentable(uint64_t a1)
{
  void **v1;

  return PreviewViewRepresentable.makeUIViewController(context:)(a1, *v1);
}

void protocol witness for UIViewControllerRepresentable.updateUIViewController(_:context:) in conformance PreviewViewRepresentable(uint64_t a1, uint64_t a2)
{
  void **v2;

  PreviewViewRepresentable.updateUIViewController(_:context:)(a1, a2, *v2);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance PreviewViewRepresentable()
{
  lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
  return static UIViewControllerRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance PreviewViewRepresentable()
{
  lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance PreviewViewRepresentable()
{
  lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable();
  UIViewControllerRepresentable.body.getter();
  __break(1u);
}

uint64_t static PreviewView.layerClass.getter()
{
  return _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for AVCaptureVideoPreviewLayer);
}

uint64_t PreviewView.videoPreviewLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

id PreviewView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PreviewView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id PreviewView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PreviewView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PreviewView.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for PreviewView);
}

void PreviewViewController.captureSession.didset()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
  v3 = (id)PreviewView.videoPreviewLayer.getter();

  if (v3)
  {
    objc_msgSend(v3, sel_setSession_, *(_QWORD *)(v1+ OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession));
    objc_msgSend(v3, sel_setVideoGravity_, *MEMORY[0x1E0C8A6E0]);

  }
}

void PreviewViewController.captureSession.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession) = a1;
  v3 = a1;

  PreviewViewController.captureSession.didset();
}

id PreviewViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  Class isa;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = result;
  objc_msgSend(result, sel_addSubview_, *(_QWORD *)&v1[v2]);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BD644140;
  v6 = objc_msgSend(*(id *)&v1[v2], sel_widthAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_widthAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(*(id *)&v1[v2], sel_heightAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = result;
  v12 = objc_msgSend(result, sel_heightAnchor);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(*(id *)&v1[v2], sel_centerXAnchor);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15 = result;
  v16 = objc_msgSend(result, sel_centerXAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v5 + 48) = v17;
  v18 = objc_msgSend(*(id *)&v1[v2], sel_centerYAnchor);
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v19 = result;
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v19, sel_centerYAnchor);

    v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
    *(_QWORD *)(v5 + 56) = v22;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_activateConstraints_, isa);

    return objc_msgSend(*(id *)&v1[v2], sel_setAccessibilityIgnoresInvertColors_, 1);
  }
LABEL_11:
  __break(1u);
  return result;
}

void PreviewViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  objc_super v7;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for PreviewViewController();
  objc_msgSendSuper2(&v7, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  PreviewViewController.updatePreviewRotationAngle()();
}

void PreviewViewController.updatePreviewRotationAngle()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v2 = objc_msgSend(v1, sel_connectedScenes);

  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Collection.first.getter();
  v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_10;
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {

LABEL_10:
    v17 = 0;
    goto LABEL_11;
  }
  v17 = v5;
  v6 = objc_msgSend(v5, sel_interfaceOrientation);
  if (v6 == (id)3)
  {
    v12 = objc_retain(*(id *)(v0
                            + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
    v13 = (void *)PreviewView.videoPreviewLayer.getter();

    if (v13)
    {
      v9 = objc_msgSend(v13, sel_connection);

      if (v9)
      {
        objc_msgSend(v9, sel_setVideoRotationAngle_, 180.0);
        goto LABEL_20;
      }
    }
LABEL_24:
    v16 = v4;
    goto LABEL_23;
  }
  if (v6 == (id)2)
  {
    v14 = objc_retain(*(id *)(v0
                            + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
    v15 = (void *)PreviewView.videoPreviewLayer.getter();

    if (v15)
    {
      v9 = objc_msgSend(v15, sel_connection);

      if (v9)
      {
        objc_msgSend(v9, sel_setVideoRotationAngle_, 270.0);
        goto LABEL_20;
      }
    }
    goto LABEL_24;
  }
  if (v6 == (id)1)
  {
    v7 = objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
    v8 = (void *)PreviewView.videoPreviewLayer.getter();

    if (v8)
    {
      v9 = objc_msgSend(v8, sel_connection);

      if (v9)
      {
        objc_msgSend(v9, sel_setVideoRotationAngle_, 90.0);
LABEL_20:
        v17 = v4;
        goto LABEL_21;
      }
    }
    goto LABEL_24;
  }
LABEL_11:
  v10 = objc_retain(*(id *)(v0
                          + OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView));
  v11 = (void *)PreviewView.videoPreviewLayer.getter();

  if (!v11)
    goto LABEL_22;
  v9 = objc_msgSend(v11, sel_connection);

  if (!v9)
    goto LABEL_22;
  objc_msgSend(v9, sel_setVideoRotationAngle_, 0.0);
LABEL_21:

LABEL_22:
  v16 = v17;
LABEL_23:

}

id PreviewViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  objc_super v13;

  v7 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  type metadata accessor for PreviewView();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession] = 0;

  if (a2)
  {
    v10 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for PreviewViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, v10, a3);

  return v11;
}

id PreviewViewController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_previewView;
  type metadata accessor for PreviewView();
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5621PreviewViewController_captureSession] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for PreviewViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id PreviewViewController.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for PreviewViewController);
}

void ClarityCameraModel.__allocating_init()()
{
  OUTLINED_FUNCTION_15();
  ClarityCameraModel.init()();
  OUTLINED_FUNCTION_0();
}

uint64_t static ClarityCameraModel.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

id ClarityCameraModel.captureSession.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t key path setter for ClarityCameraModel.videoDeviceInput : ClarityCameraModel(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 104);
  v4 = *a1;
  return v3(v2);
}

void *ClarityCameraModel.videoDeviceInput.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_2_0();
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void ClarityCameraModel.videoDeviceInput.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

uint64_t (*ClarityCameraModel.videoDeviceInput.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t ClarityCameraModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8B108]), sel_init);
  *(_QWORD *)(v1 + 24) = 0;
  static TaskPriority.background.getter();
  v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v3);
  v4 = (_QWORD *)OUTLINED_FUNCTION_15();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v1;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  return v1;
}

uint64_t closure #1 in ClarityCameraModel.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in ClarityCameraModel.init()()
{
  uint64_t v0;

  ClarityCameraModel.setUpCaptureSession()();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

void ClarityCameraModel.setUpCaptureSession()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void (*v23)(id);
  id v24;
  id v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  v1 = v0;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for AVCaptureDeviceDiscoverySession);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AVCaptureDeviceType>);
  v2 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v2 + 16) = xmmword_1BD646740;
  v3 = (void *)*MEMORY[0x1E0C89F90];
  v4 = (void *)*MEMORY[0x1E0C89F58];
  v5 = (void **)MEMORY[0x1E0C89FA0];
  *(_QWORD *)(v2 + 32) = *MEMORY[0x1E0C89F90];
  *(_QWORD *)(v2 + 40) = v4;
  v6 = *v5;
  *(_QWORD *)(v2 + 48) = *v5;
  v7 = (void *)*MEMORY[0x1E0C8A808];
  v8 = v3;
  v9 = v4;
  v10 = v6;
  v11 = v7;
  v12 = OUTLINED_FUNCTION_65_2();
  v14 = @nonobjc AVCaptureDeviceDiscoverySession.__allocating_init(deviceTypes:mediaType:position:)(v12, v13, 2);
  v15 = objc_msgSend(v14, sel_devices);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for AVCaptureDevice);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_27();
    if (v31)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v16 & 0xC000000000000001) == 0, v16);
    if ((v16 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x1C3B73D18](0, v16);
    else
      v17 = *(id *)(v16 + 32);
    v18 = v17;
    v19 = OUTLINED_FUNCTION_27();
    v20 = (void *)v1[2];
    OUTLINED_FUNCTION_6_7(v19, sel_beginConfiguration);
    v21 = objc_allocWithZone(MEMORY[0x1E0C8B0B0]);
    v36 = v18;
    v22 = @nonobjc AVCaptureDeviceInput.init(device:)(v36);
    if ((objc_msgSend(v20, sel_canAddInput_, v22) & 1) != 0)
    {
      v23 = *(void (**)(id))(*v1 + 104);
      v24 = v22;
      v23(v22);
      objc_msgSend(v20, sel_addInput_, v24);
      v25 = OUTLINED_FUNCTION_6_7((uint64_t)objc_msgSend(v20, sel_setSessionPreset_, *MEMORY[0x1E0C8A198]), sel_commitConfiguration);
      OUTLINED_FUNCTION_6_7((uint64_t)v25, sel_startRunning);

    }
    else
    {
      if (one-time initialization token for clarityUI != -1)
        swift_once();
      v26 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v26, (uint64_t)&static Log.clarityUI);
      v27 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_5_3(v27))
      {
        *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
        OUTLINED_FUNCTION_2_5(&dword_1BD004000, v28, v29, "Unable to correctly add video device input to start video preview");
        OUTLINED_FUNCTION_60();
      }

    }
    v30 = v36;
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_27();
  if (one-time initialization token for clarityUI != -1)
    swift_once();
  v32 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v32, (uint64_t)&static Log.clarityUI);
  v33 = OUTLINED_FUNCTION_232();
  if (OUTLINED_FUNCTION_5_3(v33))
  {
    *(_WORD *)OUTLINED_FUNCTION_7_8() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v34, v35, "Unable to find video device to start video preview");
    OUTLINED_FUNCTION_60();
  }

  v30 = v14;
LABEL_19:

}

id @nonobjc AVCaptureDeviceDiscoverySession.__allocating_init(deviceTypes:mediaType:position:)(uint64_t a1, void *a2, uint64_t a3)
{
  Class isa;
  id v6;

  type metadata accessor for AVCaptureDeviceType(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_discoverySessionWithDeviceTypes_mediaType_position_, isa, a2, a3);

  return v6;
}

uint64_t ClarityCameraModel.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ClarityCameraModel.__deallocating_deinit()
{
  ClarityCameraModel.deinit();
  return swift_deallocClassInstance();
}

char *InCallServiceDidAppearNotificationHandler.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __CFNotificationCenter *v7;
  __CFString *v8;
  objc_super v10;

  v1 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_publisher;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = PassthroughSubject.init()();
  v3 = OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5 = MEMORY[0x1C3B72E00](v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v2[v3] = v5;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for InCallServiceDidAppearNotificationHandler();
  v6 = (char *)objc_msgSendSuper2(&v10, sel_init);
  v7 = CFNotificationCenterGetDarwinNotifyCenter();
  v8 = (__CFString *)*(id *)&v6[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName];
  CFNotificationCenterAddObserver(v7, v6, (CFNotificationCallback)@objc closure #1 in InCallServiceDidAppearNotificationHandler.init(), v8, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v6;
}

void closure #1 in InCallServiceDidAppearNotificationHandler.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (a2)
  {
    type metadata accessor for InCallServiceDidAppearNotificationHandler();
    swift_unknownObjectRetain();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<(), Never>);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](lazy protocol witness table cache variable for type PassthroughSubject<(), Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<(), Never>, MEMORY[0x1E0C95F40]);
      Subject<>.send()();
      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    swift_unknownObjectRelease();
  }
  if (one-time initialization token for clarityUI != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.clarityUI);
  oslog = Logger.logObject.getter();
  v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1BD004000, oslog, v3, "Unexpected type for observer in InCallServiceDidAppearNotificationHandler.", v4, 2u);
    MEMORY[0x1C3B751B8](v4, -1, -1);
  }

}

void @objc closure #1 in InCallServiceDidAppearNotificationHandler.init()(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;

  v9 = a1;
  v10 = a3;
  v11 = a5;
  closure #1 in InCallServiceDidAppearNotificationHandler.init()((uint64_t)a1, a2);

}

id InCallServiceDidAppearNotificationHandler.__deallocating_deinit()
{
  char *v0;
  __CFNotificationCenter *v1;
  objc_super v3;

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v1, v0, *(CFNotificationName *)&v0[OBJC_IVAR____TtC15ConversationKitP33_5F44B43E167BB5459C625FF70B7F8E5641InCallServiceDidAppearNotificationHandler_notificationName], 0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for InCallServiceDidAppearNotificationHandler();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t ClarityUIPreviewNavigationDestination.contact.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  v6 = v2;
  v7 = v3;
  return OUTLINED_FUNCTION_3_11();
}

void ClarityUIPreviewNavigationDestination.contact.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  OUTLINED_FUNCTION_13_86();

  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v6;
  OUTLINED_FUNCTION_91();
}

uint64_t (*ClarityUIPreviewNavigationDestination.contact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIPreviewNavigationDestination.action.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  OUTLINED_FUNCTION_91();
}

void ClarityUIPreviewNavigationDestination.action.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v1 + 56));
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(a1 + 32);
  OUTLINED_FUNCTION_0();
}

uint64_t (*ClarityUIPreviewNavigationDestination.action.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIPreviewNavigationDestination.hash(into:)()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(id *)v0;
  v5 = v1;
  swift_bridgeObjectRetain_n();
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_99();
  String.hash(into:)();
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3 == 0);
  swift_bridgeObjectRelease();
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v3);
}

uint64_t static ClarityUIPreviewNavigationDestination.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  char v13;
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_OWORD *)(a1 + 48);
  v15[0] = *(_OWORD *)(a1 + 32);
  v15[1] = v6;
  v16 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_OWORD *)(a2 + 48);
  v17[0] = *(_OWORD *)(a2 + 32);
  v17[1] = v9;
  v10 = *(_QWORD *)(a2 + 64);
  v11 = v4 == v7 && v5 == v8;
  v18 = v10;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), v13 = 0, (v12 & 1) != 0))
    static ClarityUIOutgoingCallAction.== infix(_:_:)((uint64_t)v15, (uint64_t)v17);
  return v13 & 1;
}

Swift::Int ClarityUIPreviewNavigationDestination.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Swift::UInt v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  Hasher.init(_seed:)();
  v5 = v1;
  v6 = v2;
  swift_bridgeObjectRetain_n();
  String.hash(into:)();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  v7 = OUTLINED_FUNCTION_65_2();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v7);
  String.hash(into:)();
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4 == 0);
  swift_bridgeObjectRelease();
  v8 = OUTLINED_FUNCTION_65_2();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIPreviewNavigationDestination()
{
  Hasher.init(_seed:)();
  ClarityUIPreviewNavigationDestination.hash(into:)();
  return Hasher._finalize()();
}

id @nonobjc AVCaptureDeviceInput.init(device:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithDevice_error_, a1, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v3;
}

uint64_t outlined init with copy of ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityPreviewView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClarityPreviewView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in ClarityPreviewView.body.getter()
{
  return partial apply for closure #2 in ClarityPreviewView.body.getter((uint64_t (*)(uint64_t))closure #2 in ClarityPreviewView.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ClipEffect<Rectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Rectangle>, MEMORY[0x1E0CD89F0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CDC8B0];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, MEMORY[0x1E0CDFCF8]);
    v3 = v2;
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x1E0CDCF80]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in ClarityPreviewView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_49_3();
  v3 = v0 + v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = partial apply for closure #1 in ConversationControlsManager.updateForegroundCollaborationState();
  return closure #3 in ClarityPreviewView.body.getter(v3);
}

uint64_t sub_1BD5D64B8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ClarityCameraModel.init()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return closure #1 in ClarityCameraModel.init()(a1, v4, v5, v6);
}

uint64_t associated type witness table accessor for View.Body : View in ClarityPreviewView()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD5D65A0()
{
  ClarityPreviewView.navigationPath.getter();
}

void sub_1BD5D65B4()
{
  OUTLINED_FUNCTION_0();
}

void sub_1BD5D65C0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  OUTLINED_FUNCTION_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ClarityPreviewView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
                + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[5];
    v13 = a3[6];
    v14 = (_QWORD *)((char *)v7 + v12);
    v15 = (char *)a2 + v12;
    v16 = *(void **)v15;
    v17 = (void *)*((_QWORD *)v15 + 1);
    *v14 = *(_QWORD *)v15;
    v14[1] = v17;
    v18 = *((_QWORD *)v15 + 3);
    v14[2] = *((_QWORD *)v15 + 2);
    v14[3] = v18;
    v19 = (char *)v7 + v13;
    v20 = (char *)a2 + v13;
    v21 = *(_QWORD *)((char *)a2 + v13 + 8);
    *(_QWORD *)v19 = *(_QWORD *)((char *)a2 + v13);
    *((_QWORD *)v19 + 1) = v21;
    v19[16] = *((_BYTE *)a2 + v13 + 16);
    v23 = (_QWORD *)((char *)a2 + v13 + 24);
    v22 = *v23;
    v24 = v16;
    v25 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22)
    {
      v26 = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 3) = v22;
      *((_QWORD *)v19 + 4) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v19 + 24) = *(_OWORD *)v23;
    }
    v27 = a3[8];
    *(_QWORD *)((char *)v7 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)v7 + v27) = *(_QWORD *)((char *)a2 + v27);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ClarityPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;

  swift_release();
  swift_release();
  v4 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v5 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 24))
    swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ClarityPreviewView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (char *)a2 + v11;
  v15 = *(void **)v14;
  v16 = (void *)*((_QWORD *)v14 + 1);
  *v13 = *(_QWORD *)v14;
  v13[1] = v16;
  v17 = *((_QWORD *)v14 + 3);
  v13[2] = *((_QWORD *)v14 + 2);
  v13[3] = v17;
  v18 = (char *)a1 + v12;
  v19 = (char *)a2 + v12;
  v20 = *(_QWORD *)((char *)a2 + v12 + 8);
  *(_QWORD *)v18 = *(_QWORD *)((char *)a2 + v12);
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = *((_BYTE *)a2 + v12 + 16);
  v22 = (_QWORD *)((char *)a2 + v12 + 24);
  v21 = *v22;
  v23 = v15;
  v24 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21)
  {
    v25 = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 3) = v21;
    *((_QWORD *)v18 + 4) = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v18 + 24) = *(_OWORD *)v22;
  }
  v26 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ClarityPreviewView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[5];
  v11 = (char *)a1 + v10;
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(void **)((char *)a2 + v10);
  v14 = *(void **)v11;
  *(_QWORD *)v11 = v13;
  v15 = v13;

  v16 = (void *)v12[1];
  v17 = (void *)*((_QWORD *)v11 + 1);
  *((_QWORD *)v11 + 1) = v16;
  v18 = v16;

  *((_QWORD *)v11 + 2) = v12[2];
  *((_QWORD *)v11 + 3) = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
  *((_QWORD *)v20 + 1) = *(_QWORD *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[16] = v21[16];
  v22 = *((_QWORD *)v21 + 3);
  if (!*((_QWORD *)v20 + 3))
  {
    if (v22)
    {
      v24 = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 3) = v22;
      *((_QWORD *)v20 + 4) = v24;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    goto LABEL_8;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_7;
  }
  v23 = *((_QWORD *)v21 + 4);
  *((_QWORD *)v20 + 3) = v22;
  *((_QWORD *)v20 + 4) = v23;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for ClarityPreviewView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = *(_OWORD *)((char *)a2 + v11);
  v14 = *(_OWORD *)((char *)a2 + v11 + 16);
  v15 = (_OWORD *)((char *)a1 + v11);
  *v15 = v13;
  v15[1] = v14;
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v19 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  return a1;
}

_QWORD *assignWithTake for ClarityPreviewView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[5];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  v14 = (void *)v11[1];
  v11[1] = v12[1];

  v15 = v12[3];
  v11[2] = v12[2];
  v11[3] = v15;
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v17[16] = v18[16];
  v20 = *((_QWORD *)v18 + 3);
  if (!*((_QWORD *)v17 + 3))
  {
    if (v20)
    {
      v22 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v20;
      *((_QWORD *)v17 + 4) = v22;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
    goto LABEL_8;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_7;
  }
  v21 = *((_QWORD *)v18 + 4);
  *((_QWORD *)v17 + 3) = v20;
  *((_QWORD *)v17 + 4) = v21;
  swift_release();
LABEL_8:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityPreviewView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD5D6D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClarityPreviewView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD5D6DA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void type metadata completion function for ClarityPreviewView()
{
  unint64_t v0;

  type metadata accessor for Binding<NavigationPath>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for PreviewView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PreviewViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ClarityCameraModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClarityCameraModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ClarityCameraModel.videoDeviceInput.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ClarityCameraModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for InCallServiceDidAppearNotificationHandler()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ClarityUIPreviewNavigationDestination()
{
  return &type metadata for ClarityUIPreviewNavigationDestination;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>>);
    v3 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<TupleView<(_ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>, ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>)>>, _EnvironmentKeyWritingModifier<Color?>>, _AppearanceActionModifier>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
    v4 = lazy protocol witness table accessor for type String and conformance String();
    v5[2] = v2;
    v5[3] = MEMORY[0x1E0DEA968];
    v5[4] = MEMORY[0x1E0CDF840];
    v5[5] = v3;
    v5[6] = v4;
    v5[7] = MEMORY[0x1E0CDF820];
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = lazy protocol witness table accessor for type _TaskModifier and conformance _TaskModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.navigationTitle<A, B>(_:icon:)>>.0, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _TaskModifier and conformance _TaskModifier()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier;
  if (!lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier)
  {
    v1 = type metadata accessor for _TaskModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9158], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier);
  }
  return result;
}

void *type metadata accessor for ClarityPreviewView.StartCallButtonStyle()
{
  return &unk_1E7643D08;
}

void *type metadata accessor for PreviewViewRepresentable()
{
  return &unk_1E7643D28;
}

unint64_t lazy protocol witness table accessor for type PreviewViewRepresentable and conformance PreviewViewRepresentable()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable;
  if (!lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PreviewViewRepresentable, &unk_1E7643D28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable;
  if (!lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PreviewViewRepresentable, &unk_1E7643D28);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PreviewViewRepresentable and conformance PreviewViewRepresentable);
  }
  return result;
}

uint64_t associated type witness table accessor for ButtonStyle.Body : View in ClarityPreviewView.StartCallButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>, MEMORY[0x1E0CDA280]);
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id outlined copy of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
    return a1;
  swift_retain();
  return (id)swift_retain();
}

void outlined consume of _ConditionalContent<PreviewViewRepresentable, ModifiedContent<Color, _OverlayModifier<ModifiedContent<Image, _AspectRatioLayout>?>>>.Storage(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_release();
    swift_release();
  }
  else
  {

  }
}

uint64_t objectdestroyTm_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;

  v1 = OUTLINED_FUNCTION_2_137();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<NavigationPath>)
              + 32);
  v5 = OUTLINED_FUNCTION_9_1();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (id *)(v3 + *(int *)(v1 + 20));

  swift_bridgeObjectRelease();
  v7 = v3 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 24))
    swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return partial apply for closure #2 in ClarityPreviewView.body.getter((uint64_t (*)(uint64_t))closure #1 in closure #1 in closure #1 in ClarityPreviewView.body.getter);
}

uint64_t partial apply for closure #2 in ClarityPreviewView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_137();
  OUTLINED_FUNCTION_49_3();
  return a1(v1 + v2);
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter()
{
  return closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle;
  if (!lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityPreviewView.StartCallButtonStyle, &unk_1E7643D08);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityPreviewView.StartCallButtonStyle and conformance ClarityPreviewView.StartCallButtonStyle);
  }
  return result;
}

uint64_t partial apply for closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #2 in closure #1 in closure #1 in ClarityPreviewView.body.getter(a1);
}

void sub_1BD5D7380()
{
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type PlatterButtonStyleView<Color> and conformance PlatterButtonStyleView<A>, &demangling cache variable for type metadata for PlatterButtonStyleView<Color>, MEMORY[0x1E0CDC060]);
}

void *specialized Sequence.first(where:)(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  char v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 0;
      v21 = v2;
      v22 = v2 & 0xC000000000000001;
      v20 = v2 + 32;
      do
      {
        if (v22)
          v5 = (id)MEMORY[0x1C3B73D18](v4, v2);
        else
          v5 = *(id *)(v20 + 8 * v4);
        v6 = v5;
        if (__OFADD__(v4++, 1))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v8 = objc_msgSend(v5, sel_calls);
        v2 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
        v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          v10 = _CocoaArrayWrapper.endIndex.getter();
          if (!v10)
            goto LABEL_21;
        }
        else
        {
          v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v10)
            goto LABEL_21;
        }
        if ((v9 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x1C3B73D18](0, v9);
        else
          v11 = *(id *)(v9 + 32);
        v12 = v11;
        v13 = static NSObject.== infix(_:_:)();

        if ((v13 & 1) != 0)
        {
LABEL_26:
          swift_bridgeObjectRelease_n();

          swift_bridgeObjectRelease();
          return v6;
        }
        if (v10 != 1)
        {
          v14 = 5;
          while (1)
          {
            v15 = (v9 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1C3B73D18](v14 - 4, v9)
                : *(id *)(v9 + 8 * v14);
            v16 = v15;
            v17 = v14 - 3;
            if (__OFADD__(v14 - 4, 1))
              break;
            v18 = static NSObject.== infix(_:_:)();

            if ((v18 & 1) != 0)
              goto LABEL_26;
            ++v14;
            if (v17 == v10)
              goto LABEL_21;
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_21:
        swift_bridgeObjectRelease_n();

        v2 = v21;
      }
      while (v4 != v3);
    }
  }

  swift_bridgeObjectRelease();
  return 0;
}

void *TUCall.associatedCallGroup(in:)(void *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  void *v4;

  v2 = objc_msgSend(a1, sel_currentCallGroups);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCallGroup);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v4 = specialized Sequence.first(where:)(v3, v1);
  swift_bridgeObjectRelease();
  return v4;
}

void TUCall.cnk_isAudio.getter(uint64_t a1)
{
  id v1;
  id v2;
  id v3;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_isVideo);
  if ((_DWORD)v1
    && (v1 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_isConversation), (_DWORD)v1)
    && (v2 = OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_callCenter),
        v3 = OUTLINED_FUNCTION_48_1(v2, sel_activeConversationForCall_),
        v2,
        v3))
  {
    objc_msgSend(v3, sel_resolvedAudioVideoMode);
    OUTLINED_FUNCTION_49_5();
  }
  else
  {
    OUTLINED_FUNCTION_25_1((uint64_t)v1, sel_isVideo);
  }
  OUTLINED_FUNCTION_18();
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return specialized == infix(_:_:)(a1, a3);
}

void TUCall.cnk_disconnect(reason:)(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = OUTLINED_FUNCTION_25_1(a1, sel_callCenter);
  objc_msgSend(v3, sel_disconnectCall_withReason_, v1, a1);

}

Swift::Void __swiftcall TUCall.cnk_answerOrJoin()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v2 = OUTLINED_FUNCTION_25_1(v0, sel_callCenter);
  objc_msgSend(v2, sel_answerOrJoinCall_, v1);

}

uint64_t TUCall.cnk_activeConversation.getter(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = OUTLINED_FUNCTION_25_1(a1, sel_callCenter);
  v3 = OUTLINED_FUNCTION_48_1(v2, sel_activeConversationForCall_);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

id TUCall.cnk_contactStoreConfiguration.getter()
{
  void *v0;

  v0 = (void *)objc_opt_self();
  return OUTLINED_FUNCTION_48_1(v0, sel_tu_contactStoreConfigurationForCall_);
}

uint64_t TUCall.cnk_supportsAVLessConversations.getter()
{
  return 0;
}

uint64_t TUCall.cnk_supportsVideoUpgrade.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isVideo) ^ 1;
}

uint64_t TUCall.cnk_eligibleForRedial.getter(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::UInt32 v16;
  char v17;
  char v18;

  v1 = OUTLINED_FUNCTION_25_1(a1, sel_handle);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_value);
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = v5;

    swift_bridgeObjectRelease();
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of TUCall.cnk_eligibleForRedial.getter);
      v9 = v8;
      v10 = OUTLINED_FUNCTION_25_1(v8, sel_service);
      if ((_DWORD)v10 != 3)
      {
        v10 = OUTLINED_FUNCTION_25_1((uint64_t)v10, sel_service);
        if ((_DWORD)v10 != 2)
          goto LABEL_11;
      }
      v11 = OUTLINED_FUNCTION_25_1((uint64_t)v10, sel_remoteParticipantHandles);
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
      _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, MEMORY[0x1E0DEFCF8]);
      v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      v13 = specialized Set.count.getter(v12);
      v14 = swift_bridgeObjectRelease();
      if (v13 != 1)
        goto LABEL_11;
      v15 = OUTLINED_FUNCTION_25_1(v14, sel_status);
      if ((_DWORD)v15 == 6)
      {
        v16 = OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_disconnectedReason);
        specialized Set.contains(_:)(v16, v9);
        v18 = v17;
      }
      else
      {
LABEL_11:
        v18 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = 0;
    }

  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

id TUCall.cnk_dialRequestForRedial.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_dialRequestForRedial);
}

void TUCall.isMergedWithAnotherCall.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = TUCall.associatedCallGroup(in:)(v1);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_calls);
    OUTLINED_FUNCTION_49_5();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_18();
}

uint64_t TUCall.cnk_everConnected.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Date();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  *(_QWORD *)&v7 = MEMORY[0x1E0C80A78](v6).n128_u64[0];
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, sel_dateConnected, v7);
  if (v10)
  {
    v11 = v10;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
    v12 = 1;
    OUTLINED_FUNCTION_72((uint64_t)v9, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v2) != 1)
      goto LABEL_6;
  }
  else
  {
    OUTLINED_FUNCTION_72((uint64_t)v9, 1);
  }
  v12 = 0;
LABEL_6:
  outlined destroy of Date?((uint64_t)v9);
  return v12;
}

id @nonobjc TUCall.setRemoteVideoPresentationState(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setRemoteVideoPresentationState_, a1);
}

id @nonobjc TUCall.setScreenShareAttributes(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setScreenShareAttributes_, a1);
}

id @nonobjc TUCall.setSharingScreen(_:attributes:)(char a1, uint64_t a2)
{
  void *v2;

  return objc_msgSend(v2, sel_setSharingScreen_attributes_, a1 & 1, a2);
}

uint64_t protocol witness for Call.callUUID.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((const char **)&selRef_callUUID);
}

uint64_t protocol witness for Call.callGroupUUID.getter in conformance TUCall@<X0>(uint64_t a1@<X8>)
{
  return @nonobjc TUCall.callGroupUUID.getter((const char **)&selRef_callGroupUUID, (void (*)(void))MEMORY[0x1E0CB0958], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], a1);
}

uint64_t protocol witness for Call.displayName.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((const char **)&selRef_displayName);
}

id @nonobjc TUCall.handle.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_handle);
}

uint64_t protocol witness for Call.imageURL.getter in conformance TUCall@<X0>(uint64_t a1@<X8>)
{
  return @nonobjc TUCall.callGroupUUID.getter((const char **)&selRef_imageURL, (void (*)(void))MEMORY[0x1E0CAFF00], (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a1);
}

uint64_t @nonobjc TUCall.callGroupUUID.getter@<X0>(const char **a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v7 = OUTLINED_FUNCTION_25_1((uint64_t)a1, *a1);
  if (v7)
  {
    v8 = v7;
    a2();

    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = a3(0);
  return __swift_storeEnumTagSinglePayload(a4, v9, 1, v10);
}

id @nonobjc TUCall.isActive.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isActive);
}

id @nonobjc TUCall.isConnected.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isConnected);
}

id @nonobjc TUCall.isConnecting.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isConnecting);
}

id @nonobjc TUCall.isConversation.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isConversation);
}

id @nonobjc TUCall.isOutgoing.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isOutgoing);
}

id @nonobjc TUCall.isScreening.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isScreening);
}

id @nonobjc TUCall.isTTY.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isTTY);
}

id @nonobjc TUCall.isRTT.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isRTT);
}

id @nonobjc TUCall.provider.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_provider);
}

uint64_t *@nonobjc TUCall.remoteParticipantHandles.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_remoteParticipantHandles);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_1((unint64_t *)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUHandle, 0x1E0DBD2F8, MEMORY[0x1E0DEFCF8]);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();
  OUTLINED_FUNCTION_49_5();
  return &lazy cache variable for type metadata for TUHandle;
}

id @nonobjc TUCall.screenShareAttributes.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_screenShareAttributes);
}

id @nonobjc TUCall.status.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_status);
}

uint64_t protocol witness for Call.uniqueProxyIdentifier.getter in conformance TUCall()
{
  return @nonobjc TUCall.callUUID.getter((const char **)&selRef_uniqueProxyIdentifier);
}

uint64_t @nonobjc TUCall.callUUID.getter(const char **a1)
{
  id v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_25_1((uint64_t)a1, *a1);
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void @nonobjc TUCall.uniqueProxyIdentifierUUID.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_uniqueProxyIdentifierUUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

}

id @nonobjc TUCall.wantsHoldMusic.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_wantsHoldMusic);
}

id @nonobjc TUCall.isPTT.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isPTT);
}

id @nonobjc TUCall.serviceStatus.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_serviceStatus);
}

id @nonobjc TUCall.transmissionMode.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_transmissionMode);
}

id @nonobjc TUCall.accessoryButtonEventsEnabled.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_accessoryButtonEventsEnabled);
}

id @nonobjc TUCall.activeRemoteParticipant.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_activeRemoteParticipant);
}

id @nonobjc TUCall.localSenderIdentity.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_localSenderIdentity);
}

uint64_t @nonobjc TUCall.contactIdentifiers.getter()
{
  void *v0;

  return outlined bridged method (pb) of @objc TUCall.contactIdentifiers.getter(v0);
}

id @nonobjc TUCall.bluetoothAudioFormat.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_bluetoothAudioFormat);
}

id @nonobjc TUCall.bluetoothAudioFormat.setter(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setBluetoothAudioFormat_, a1);
}

id (*protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_bluetoothAudioFormat);
  return protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall;
}

id protocol witness for Call.bluetoothAudioFormat.modify in conformance TUCall(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setBluetoothAudioFormat_, *(_QWORD *)a1);
}

id @nonobjc TUCall.screenSharingIntention.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_screenSharingIntention);
}

id @nonobjc TUCall.isSendingVideo.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isSendingVideo);
}

id @nonobjc TUCall.isSendingVideo.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setIsSendingVideo_, a1 & 1);
}

id (*protocol witness for Call.isSendingVideo.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_isSendingVideo);
  return protocol witness for Call.isSendingVideo.modify in conformance TUCall;
}

id protocol witness for Call.isSendingVideo.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_162(sel_setIsSendingVideo_, *a1);
}

id @nonobjc TUCall.isSharingScreen.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isSharingScreen);
}

id @nonobjc TUCall.isSharingScreen.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setSharingScreen_, a1 & 1);
}

id (*protocol witness for Call.isSharingScreen.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_isSharingScreen);
  return protocol witness for Call.isSharingScreen.modify in conformance TUCall;
}

id protocol witness for Call.isSharingScreen.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_162(sel_setSharingScreen_, *a1);
}

id @nonobjc TUCall.isUplinkMuted.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isUplinkMuted);
}

id @nonobjc TUCall.isUplinkMuted.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setUplinkMuted_, a1 & 1);
}

id (*protocol witness for Call.isUplinkMuted.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_isUplinkMuted);
  return protocol witness for Call.isUplinkMuted.modify in conformance TUCall;
}

id protocol witness for Call.isUplinkMuted.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_162(sel_setUplinkMuted_, *a1);
}

id @nonobjc TUCall.isThirdPartyVideo.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isThirdPartyVideo);
}

id @nonobjc TUCall.isUsingBaseband.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isUsingBaseband);
}

id @nonobjc TUCall.isEmergency.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isEmergency);
}

id @nonobjc TUCall.disconnectedReason.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_disconnectedReason);
}

id @nonobjc TUCall.shouldSuppressRingtone.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_shouldSuppressRingtone);
}

id @nonobjc TUCall.shouldSuppressRingtone.setter(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setShouldSuppressRingtone_, a1 & 1);
}

id (*protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall(uint64_t a1))(void **a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_shouldSuppressRingtone);
  return protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall;
}

id protocol witness for Call.shouldSuppressRingtone.modify in conformance TUCall(void **a1)
{
  return OUTLINED_FUNCTION_0_162(sel_setShouldSuppressRingtone_, *a1);
}

id @nonobjc TUCall.isEligibleForScreening.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_isEligibleForScreening);
}

id protocol witness for CallDurationProvider.callDuration.getter in conformance TUCall()
{
  return @nonobjc TUCall.callDuration.getter();
}

id @nonobjc TUCall.callDuration.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_callDuration);
}

void protocol witness for CallDurationProvider.callDurationString.getter in conformance TUCall()
{
  @nonobjc TUCall.callDurationString.getter();
}

void @nonobjc TUCall.callDurationString.getter()
{
  void *v0;

  outlined bridged method (pb) of @objc TUCall.callDurationString.getter(v0);
}

uint64_t specialized == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t result;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;

  if (a1 == a2)
  {
    v3 = 1;
    return v3 & 1;
  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUCall);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v2 = static NSObject.== infix(_:_:)();
LABEL_9:
      v3 = v2;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v3 & 1;
    }
    goto LABEL_10;
  }
  type metadata accessor for PlaceholderCall();
  if (swift_dynamicCastClass())
  {
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v2 = static PlaceholderCall.== infix(_:_:)();
      goto LABEL_9;
    }
LABEL_10:
    v3 = 0;
    return v3 & 1;
  }
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v5._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x203A736872202CLL;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  swift_getObjectType();
  v7._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t instantiation function for generic protocol witness table for TUCall(uint64_t a1)
{
  uint64_t result;

  result = _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_1(&lazy protocol witness table cache variable for type TUCall and conformance NSObject, (unint64_t *)&lazy cache variable for type metadata for TUCall, 0x1E0DBD1B0, MEMORY[0x1E0CB2120]);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t _sSo8TUHandleCSo8NSObjectCSH10ObjectiveCWlTm_1(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = _sSo8NSObjectCMaTm_0(255, a2);
    result = MEMORY[0x1C3B750C8](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of CallDurationProvider.callDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CallDurationProvider.callDurationString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Call.setRemoteVideoPresentationState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of Call.setScreenShareAttributes(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Call.setSharingScreen(_:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Call.callUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Call.callGroupUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Call.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Call.handle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Call.imageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Call.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Call.isConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Call.isConnecting.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Call.isConversation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Call.isOutgoing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Call.isVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Call.isScreening.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Call.isTTY.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Call.isRTT.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Call.provider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Call.remoteParticipantHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Call.screenShareAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Call.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Call.uniqueProxyIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of Call.uniqueProxyIdentifierUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Call.wantsHoldMusic.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Call.isPTT.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Call.serviceStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Call.transmissionMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Call.accessoryButtonEventsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Call.activeRemoteParticipant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Call.localSenderIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Call.contactIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Call.bluetoothAudioFormat.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of Call.screenSharingIntention.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Call.isSendingVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of Call.isSendingVideo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of Call.isSendingVideo.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of Call.isSharingScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of Call.isSharingScreen.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of Call.isSharingScreen.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of Call.isUplinkMuted.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of Call.isThirdPartyVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of Call.isUsingBaseband.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of Call.isEmergency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of Call.disconnectedReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 416))();
}

uint64_t dispatch thunk of Call.shouldSuppressRingtone.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 424))();
}

uint64_t dispatch thunk of Call.isEligibleForScreening.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of Call.cnk_disconnect(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 440))();
}

uint64_t dispatch thunk of Call.cnk_answerOrJoin()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of Call.cnk_activeConversation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of Call.cnk_contactStoreConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of Call.cnk_supportsAVLessConversations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t dispatch thunk of Call.cnk_supportsVideoUpgrade.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of Call.cnk_isAudio.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 488))();
}

uint64_t dispatch thunk of Call.cnk_eligibleForRedial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 496))();
}

uint64_t dispatch thunk of Call.cnk_dialRequestForRedial.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of Call.isMergedWithAnotherCall.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 512))();
}

uint64_t dispatch thunk of Call.cnk_everConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 520))();
}

void *Layout.InCallControlsButton.pillMinimumWidth.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillMinimumWidth;
}

void *Layout.InCallControlsButton.pillMinimumHeight.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillMinimumHeight;
}

double static Layout.ConversationControls.values.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  double v9;
  double v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  static Layout.ConversationControls.iOS.getter((uint64_t)&v17);
  v2 = v37;
  v3 = v36;
  v4 = v34;
  v5 = v31;
  v6 = v23;
  v7 = v22;
  v8 = v18;
  v9 = 3.0;
  if (*(double *)&v17 >= 310.0)
    v9 = 8.0;
  if (*(double *)&v17 >= 360.0)
    v9 = 10.0;
  v10 = 20.0 - *(double *)&v18;
  *(_OWORD *)a1 = v17;
  *(_OWORD *)(a1 + 16) = v8;
  v11 = v20;
  *(_OWORD *)(a1 + 32) = v19;
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = v21;
  *(_QWORD *)(a1 + 80) = v7;
  *(_DWORD *)(a1 + 88) = v6;
  v12 = v25;
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v26;
  *(double *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 152) = v27;
  *(_OWORD *)(a1 + 168) = v28;
  *(_OWORD *)(a1 + 184) = v29;
  *(_OWORD *)(a1 + 200) = v30;
  *(_QWORD *)(a1 + 216) = v5;
  *(double *)(a1 + 224) = v9;
  *(_OWORD *)(a1 + 232) = v32;
  *(_OWORD *)(a1 + 248) = v33;
  *(_QWORD *)(a1 + 264) = v4;
  *(_OWORD *)(a1 + 272) = v35;
  *(_QWORD *)(a1 + 288) = v3;
  *(_QWORD *)(a1 + 296) = v2;
  v13 = v39;
  *(_OWORD *)(a1 + 304) = v38;
  *(_OWORD *)(a1 + 320) = v13;
  v14 = v41;
  *(_OWORD *)(a1 + 336) = v40;
  *(_OWORD *)(a1 + 352) = v14;
  result = *(double *)&v42;
  v16 = v43;
  *(_OWORD *)(a1 + 368) = v42;
  *(_OWORD *)(a1 + 384) = v16;
  return result;
}

void *Layout.ShareCard.insetBuffer.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.insetBuffer;
}

__n128 static Layout.InCallControls.values.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;

  *(_OWORD *)a1 = xmmword_1BD667D80;
  *(_OWORD *)(a1 + 16) = xmmword_1BD667D90;
  *(_OWORD *)(a1 + 32) = xmmword_1BD667DA0;
  *(_OWORD *)(a1 + 48) = xmmword_1BD667DB0;
  *(_OWORD *)(a1 + 64) = xmmword_1BD667DC0;
  *(_OWORD *)(a1 + 80) = xmmword_1BD667DD0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_1BD667DE0;
  *(_OWORD *)(a1 + 128) = xmmword_1BD667DF0;
  *(_OWORD *)(a1 + 144) = xmmword_1BD667E00;
  *(_OWORD *)(a1 + 160) = xmmword_1BD667E10;
  *(_OWORD *)(a1 + 176) = xmmword_1BD667E20;
  *(_OWORD *)(a1 + 192) = xmmword_1BD667E30;
  *(_OWORD *)(a1 + 208) = xmmword_1BD667E40;
  *(_OWORD *)(a1 + 224) = xmmword_1BD667E50;
  *(_OWORD *)(a1 + 240) = xmmword_1BD667E60;
  *(_OWORD *)(a1 + 256) = xmmword_1BD667E70;
  *(_OWORD *)(a1 + 272) = xmmword_1BD667E80;
  *(_OWORD *)(a1 + 288) = xmmword_1BD667E90;
  *(_OWORD *)(a1 + 304) = xmmword_1BD667EA0;
  *(_OWORD *)(a1 + 320) = xmmword_1BD667EB0;
  *(_OWORD *)(a1 + 336) = xmmword_1BD667EC0;
  *(_OWORD *)(a1 + 352) = xmmword_1BD667ED0;
  __asm { FMOV            V1.2D, #17.0 }
  *(_OWORD *)(a1 + 368) = xmmword_1BD667EE0;
  *(_OWORD *)(a1 + 384) = _Q1;
  *(_OWORD *)(a1 + 400) = xmmword_1BD667EF0;
  *(_OWORD *)(a1 + 416) = xmmword_1BD667F00;
  *(_OWORD *)(a1 + 432) = xmmword_1BD667F10;
  *(_OWORD *)(a1 + 448) = xmmword_1BD667F20;
  *(_OWORD *)(a1 + 464) = xmmword_1BD667F30;
  *(_OWORD *)(a1 + 480) = xmmword_1BD667F40;
  *(_OWORD *)(a1 + 496) = xmmword_1BD667F50;
  *(_OWORD *)(a1 + 512) = xmmword_1BD667F60;
  __asm { FMOV            V1.2D, #8.0 }
  *(_OWORD *)(a1 + 528) = xmmword_1BD667F70;
  *(_OWORD *)(a1 + 544) = _Q1;
  *(_OWORD *)(a1 + 560) = xmmword_1BD667F80;
  *(_OWORD *)(a1 + 576) = xmmword_1BD667F90;
  *(_OWORD *)(a1 + 592) = xmmword_1BD667FA0;
  *(_OWORD *)(a1 + 608) = xmmword_1BD667FB0;
  *(_OWORD *)(a1 + 624) = xmmword_1BD667FC0;
  *(_OWORD *)(a1 + 640) = xmmword_1BD667FD0;
  *(_OWORD *)(a1 + 656) = xmmword_1BD667FE0;
  *(_OWORD *)(a1 + 672) = xmmword_1BD667FF0;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(a1 + 688) = _Q0;
  *(_OWORD *)(a1 + 704) = xmmword_1BD668000;
  OUTLINED_FUNCTION_26_70(a1, (__n128)xmmword_1BD668010);
  return result;
}

void static Layout.MultiwayFaceTime.values.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  int64x2_t v7;
  double v8;

  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  v3 = v2;
  OUTLINED_FUNCTION_2_0();
  v4 = 0.0;
  if (static AmbientState.isPresented)
    v5 = 10.0;
  else
    v5 = 0.0;
  if (static Platform.current.getter() == 2)
    v4 = -20.0;
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_98_17(v6, (__n128)xmmword_1BD667DC0);
  *(_OWORD *)(a1 + 32) = xmmword_1BD668020;
  *(_OWORD *)(a1 + 48) = xmmword_1BD668030;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v3;
  v7 = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 80) = xmmword_1BD667E80;
  *(int64x2_t *)(a1 + 96) = v7;
  *(int64x2_t *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = xmmword_1BD668040;
  *(_OWORD *)(a1 + 144) = xmmword_1BD668050;
  *(double *)(a1 + 160) = v5;
  *(double *)(a1 + 168) = v4;
  *(__n128 *)(a1 + 208) = OUTLINED_FUNCTION_45_47(v8, (__n128)xmmword_1BD668060);
  *(_OWORD *)(a1 + 224) = xmmword_1BD668070;
  OUTLINED_FUNCTION_42_57((__n128)xmmword_1BD668080, (__n128)xmmword_1BD668090);
  *(_OWORD *)(a1 + 288) = xmmword_1BD6680A0;
  *(_OWORD *)(a1 + 304) = xmmword_1BD6680B0;
  OUTLINED_FUNCTION_94_11((__n128)xmmword_1BD6680C0);
  OUTLINED_FUNCTION_22_92();
}

uint64_t *Layout.Captions.transcriptSidebarWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for transcriptSidebarWidth != -1)
    swift_once();
  return &static Layout.Captions.transcriptSidebarWidth;
}

uint64_t *Layout.Captions.transcriptVerticalSize.unsafeMutableAddressor()
{
  if (one-time initialization token for transcriptVerticalSize != -1)
    swift_once();
  return &static Layout.Captions.transcriptVerticalSize;
}

void *Layout.AudioVisualization.reducedMotionFixedRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.reducedMotionFixedRingScale;
}

void *Layout.AudioVisualization.minimumRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.minimumRingScale;
}

void *Layout.AudioVisualization.maximumRingScale.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.maximumRingScale;
}

void *Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier;
}

void *Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier;
}

uint64_t *Layout.ParticipantViews.screenSharingInteractionTouchInsets.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenSharingInteractionTouchInsets;
}

void static Layout.ParticipantViews.screenSharingCornerRadius.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 392))();
  OUTLINED_FUNCTION_0();
}

void *Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight;
}

double static Layout.Roster.values.getter()
{
  uint64_t v0;
  double v1;
  double result;

  v1 = dbl_1BD6680D0[OUTLINED_FUNCTION_101_18() == 0];
  *(_OWORD *)v0 = xmmword_1BD6680E0;
  *(_OWORD *)(v0 + 16) = xmmword_1BD6680F0;
  *(_QWORD *)(v0 + 32) = 0x4059000000000000;
  *(_QWORD *)(v0 + 40) = 30;
  *(_QWORD *)(v0 + 48) = 0x4055C00000000000;
  *(double *)(v0 + 56) = v1;
  *(_OWORD *)(v0 + 64) = xmmword_1BD668100;
  OUTLINED_FUNCTION_0();
  return result;
}

uint64_t static Layout.LocalParticipantViewCameraControls.values.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  double v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  double v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  Layout.LocalParticipantViewCameraControls.init()();
  result = static Platform.current.getter();
  v3 = 17.0;
  if (result == 1)
    v3 = v7;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(double *)(a1 + 40) = v3;
  *(double *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  return result;
}

__int128 *Layout.ConversationControlsAppLaunchPillView.margins.unsafeMutableAddressor()
{
  if (one-time initialization token for margins != -1)
    swift_once();
  return &static Layout.ConversationControlsAppLaunchPillView.margins;
}

void *Layout.ConversationControlsAppLaunchPillView.imageDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.imageDiameter;
}

void *Layout.ConversationControlsAppLaunchPillView.avatarDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.avatarDiameter;
}

void *Layout.ConversationControlsAppLaunchPillView.horizontalContentSpacing.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.horizontalContentSpacing;
}

void *Layout.PTT.topDetailContainerMarginScale.unsafeMutableAddressor()
{
  return &static Layout.PTT.topDetailContainerMarginScale;
}

void *Layout.PTT.bottomButtonContainerMarginScale.unsafeMutableAddressor()
{
  return &static Layout.PTT.bottomButtonContainerMarginScale;
}

void *Layout.PTT.horizontalContainerMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.horizontalContainerMargin;
}

void *Layout.PTT.maxiPadContainerWidth.unsafeMutableAddressor()
{
  return &static Layout.PTT.maxiPadContainerWidth;
}

void *Layout.PTT.fullScreenButtonInset.unsafeMutableAddressor()
{
  return &static Layout.PTT.fullScreenButtonInset;
}

void *Layout.Reactions.participantViewInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.participantViewInset;
}

void *Layout.Reactions.containingViewInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.containingViewInset;
}

void *Layout.PTT.fullScreenAvatarSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.fullScreenAvatarSize;
}

void *Layout.PTT.disclosureButtonTopOffset.unsafeMutableAddressor()
{
  return &static Layout.PTT.disclosureButtonTopOffset;
}

void *Layout.PTT.sessionDetailsLeadingMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.sessionDetailsLeadingMargin;
}

__int128 *Layout.ConversationControlsTrailingActionPillView.buttonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  return &static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets;
}

uint64_t *Layout.Captions.margin.unsafeMutableAddressor()
{
  if (one-time initialization token for margin != -1)
    swift_once();
  return &static Layout.Captions.margin;
}

void *Layout.ParticipantViews.startingTileScale.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.startingTileScale;
}

void static Layout.ParticipantViews.cornerRadius(for:)(char a1)
{
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_25_8();
  }
  else
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_0();
  }
}

void *Layout.InCallControlsButton.pillContentVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillContentVerticalInset;
}

void *Layout.InCallControlsButton.pillContentHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillContentHorizontalInset;
}

void *Layout.LocalParticipantView.shadowOffset.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.shadowOffset;
}

void *Layout.LocalParticipantView.shadowRadius.unsafeMutableAddressor()
{
  return &static Layout.LocalParticipantView.shadowRadius;
}

void static Layout.ParticipantViews.cornerRadius.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_0();
}

void *Layout.ParticipantViews.bottomShadowOffset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomShadowOffset;
}

void *Layout.ParticipantViews.bottomShadowRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomShadowRadius;
}

void *Layout.ParticipantViews.bottomBarHorizontalInsetRegular.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomBarHorizontalInsetRegular;
}

void *Layout.ParticipantViews.bottomBarButtonSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.bottomBarButtonSize;
}

uint64_t *Layout.ShareCard.appShelfSeparatorInsetBuffer.unsafeMutableAddressor()
{
  if (one-time initialization token for appShelfSeparatorInsetBuffer != -1)
    swift_once();
  return &static Layout.ShareCard.appShelfSeparatorInsetBuffer;
}

void *Layout.ShareCard.popoverWidth.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverWidth;
}

void *Layout.AudioVisualization.borderWidthFactor.unsafeMutableAddressor()
{
  return &static Layout.AudioVisualization.borderWidthFactor;
}

void *Layout.ShareCard.buttonIconTightSpacing.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.buttonIconTightSpacing;
}

void *Layout.ShareCard.buttonIconSpacing.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.buttonIconSpacing;
}

uint64_t *Layout.ShareCard.collaborateSubtitleBuffer.unsafeMutableAddressor()
{
  if (one-time initialization token for collaborateSubtitleBuffer != -1)
    swift_once();
  return &static Layout.ShareCard.collaborateSubtitleBuffer;
}

void *Layout.EffectsControlsView.browserRegularHeight.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserRegularHeight;
}

void *Layout.EffectsControlsView.cornerRadius.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.cornerRadius;
}

void *Layout.EffectsControlsView.buttonPadding.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.buttonPadding;
}

double static Layout.MediaPip.padding.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double result;
  int HasHomeButton;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)1
    || (v3 = objc_msgSend(v0, sel_currentDevice),
        v4 = objc_msgSend(v3, sel_userInterfaceIdiom),
        v3,
        result = 10.0,
        v4 == (id)5))
  {
    HasHomeButton = TUDeviceHasHomeButton();
    result = 24.0;
    if (HasHomeButton)
      return 20.0;
  }
  return result;
}

void *Layout.Captions.subtitleSmallBottomOffset.unsafeMutableAddressor()
{
  return &static Layout.Captions.subtitleSmallBottomOffset;
}

uint64_t *Layout.LocalParticipantView.tvSplitViewBottomOffset.unsafeMutableAddressor()
{
  if (one-time initialization token for tvSplitViewBottomOffset != -1)
    swift_once();
  return &static Layout.LocalParticipantView.tvSplitViewBottomOffset;
}

void *Layout.Reactions.controlsInset.unsafeMutableAddressor()
{
  return &static Layout.Reactions.controlsInset;
}

uint64_t *Layout.Reactions.defaultTipWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultTipWidth != -1)
    swift_once();
  return &static Layout.Reactions.defaultTipWidth;
}

uint64_t *Layout.Captions.bubbleSnapDistance.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleSnapDistance != -1)
    swift_once();
  return &static Layout.Captions.bubbleSnapDistance;
}

void *Layout.ShareCard.popoverSpacingWithButtonWhenAbove.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverSpacingWithButtonWhenAbove;
}

void *Layout.ShareCard.popoverSpacingWithButtonWhenUnder.unsafeMutableAddressor()
{
  return &static Layout.ShareCard.popoverSpacingWithButtonWhenUnder;
}

void *Layout.ParticipantViews.prominenceBorderWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.prominenceBorderWidth;
}

void *Layout.PTT.appNameDisclosureChevronMargin.unsafeMutableAddressor()
{
  return &static Layout.PTT.appNameDisclosureChevronMargin;
}

void *Layout.InCallControlsButton.discLabelTopSpacing.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.discLabelTopSpacing;
}

void *Layout.InCallControlsButton.pillImageToLabelSpacing.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillImageToLabelSpacing;
}

__int128 *Layout.ConversationControlsAppLaunchPillView.buttonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  return &static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets;
}

void static Layout.SharePlayDiscoverabilityView.values.getter()
{
  uint64_t v0;
  char v1;
  double v2;

  v1 = OUTLINED_FUNCTION_101_18();
  v2 = 12.0;
  if (v1 == 1)
    v2 = 16.0;
  *(_QWORD *)v0 = 0x4030000000000000;
  *(double *)(v0 + 8) = v2;
  *(_OWORD *)(v0 + 16) = xmmword_1BD668070;
  *(_OWORD *)(v0 + 32) = xmmword_1BD668110;
  *(_OWORD *)(v0 + 48) = xmmword_1BD668120;
  *(_OWORD *)(v0 + 64) = xmmword_1BD668130;
  *(_OWORD *)(v0 + 80) = xmmword_1BD668140;
  OUTLINED_FUNCTION_0();
}

void *Layout.ParticipantViews.screenShareInfoViewTopInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewTopInset;
}

void *Layout.ParticipantViews.screenShareInfoViewButtonRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewButtonRadius;
}

void *Layout.ParticipantViews.screenShareInfoViewHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHeight;
}

void *Layout.ParticipantViews.screenShareInfoViewAvatarImageInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewAvatarImageInset;
}

void *Layout.ParticipantViews.screenShareInfoViewHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHorizontalInset;
}

void *Layout.ParticipantViews.screenShareInfoViewHorizontalSpacing.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewHorizontalSpacing;
}

void *Layout.ParticipantViews.screenShareInfoViewFullScreenHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenShareInfoViewFullScreenHorizontalInset;
}

void *Layout.ParticipantMonogramViews.glowAlpha.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.glowAlpha;
}

void *Layout.ParticipantMonogramViews.contactViewMaximumSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMaximumSize;
}

void *Layout.ParticipantMonogramViews.contactRosterSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactRosterSizeMultiplier;
}

void *Layout.ParticipantMonogramViews.contactViewMinimumInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMinimumInset;
}

void *Layout.ParticipantMonogramViews.contactViewMicroPiPMinimumInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactViewMicroPiPMinimumInset;
}

void *Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier;
}

void *Layout.ParticipantMonogramViews.buttonPadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonPadding;
}

void *Layout.ParticipantMonogramViews.buttonWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonWidth;
}

void *Layout.ParticipantMonogramViews.buttonHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonHorizontalInset;
}

void *Layout.ParticipantMonogramViews.labelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelHorizontalInset;
}

void static Layout.ParticipantMonogramViews.glowSizeMultiplier.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 400))();
  OUTLINED_FUNCTION_0();
}

uint64_t *Layout.ParticipantViews.shortSizeBoundary.unsafeMutableAddressor()
{
  if (one-time initialization token for shortSizeBoundary != -1)
    swift_once();
  return &static Layout.ParticipantViews.shortSizeBoundary;
}

uint64_t *Layout.ParticipantViews.microSizeBoundary.unsafeMutableAddressor()
{
  if (one-time initialization token for microSizeBoundary != -1)
    swift_once();
  return &static Layout.ParticipantViews.microSizeBoundary;
}

void *Layout.ParticipantMonogramViews.labelSpacingScale.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingScale;
}

void *Layout.ParticipantMonogramViews.labelSpacingMaximum.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingMaximum;
}

void *Layout.ParticipantMonogramViews.labelSpacingMinimum.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.labelSpacingMinimum;
}

__int128 *Layout.Nickname.leadingImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for leadingImageSize != -1)
    swift_once();
  return &static Layout.Nickname.leadingImageSize;
}

uint64_t *Layout.Nickname.distanceBetweenLabels.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceBetweenLabels != -1)
    swift_once();
  return &static Layout.Nickname.distanceBetweenLabels;
}

uint64_t *Layout.Nickname.distanceBetweenImageAndLabels.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceBetweenImageAndLabels != -1)
    swift_once();
  return &static Layout.Nickname.distanceBetweenImageAndLabels;
}

uint64_t *Layout.Nickname.distanceFromEdge.unsafeMutableAddressor()
{
  if (one-time initialization token for distanceFromEdge != -1)
    swift_once();
  return &static Layout.Nickname.distanceFromEdge;
}

void *Layout.PTT.pillMinimumWidth.unsafeMutableAddressor()
{
  return &static Layout.PTT.pillMinimumWidth;
}

uint64_t *Layout.Reactions.pickerPadding.unsafeMutableAddressor()
{
  return &static Layout.Reactions.pickerPadding;
}

double static Layout.Reactions.defaultPickerWidth.getter()
{
  if (one-time initialization token for defaultTipWidth != -1)
    swift_once();
  return *(double *)&static Layout.Reactions.defaultTipWidth;
}

void *Layout.EffectsControlsView.browserExpandedHeight.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserExpandedHeight;
}

uint64_t *Layout.EffectsControlsView.browserVerticalPaddingFull.unsafeMutableAddressor()
{
  if (one-time initialization token for browserVerticalPaddingFull != -1)
    swift_once();
  return &static Layout.EffectsControlsView.browserVerticalPaddingFull;
}

uint64_t *Layout.EffectsControlsView.browserVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for browserVerticalPadding != -1)
    swift_once();
  return &static Layout.EffectsControlsView.browserVerticalPadding;
}

void *Layout.ParticipantViews.labelFadeSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.labelFadeSize;
}

void *Layout.ParticipantViews.shadowRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.shadowRadius;
}

void *Layout.PTT.pttActionButtonSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.pttActionButtonSize;
}

void *Layout.PTT.buttonLabelVerticalSpacing.unsafeMutableAddressor()
{
  return &static Layout.PTT.buttonLabelVerticalSpacing;
}

void *Layout.ParticipantAlertViews.cornerRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.cornerRadius;
}

void *Layout.ParticipantAlertViews.minimumWidth.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.minimumWidth;
}

void *Layout.ParticipantAlertViews.minimumHeight.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.minimumHeight;
}

void *Layout.ParticipantAlertViews.inset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantAlertViews.inset;
}

uint64_t *Layout.MediaPip.bottomInsetAfterPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomInsetAfterPadding != -1)
    swift_once();
  return &static Layout.MediaPip.bottomInsetAfterPadding;
}

void *Layout.MediaPip.controlsDodgingTopInset.unsafeMutableAddressor()
{
  return &static Layout.MediaPip.controlsDodgingTopInset;
}

void *Layout.EffectsControlsView.browserWidth.unsafeMutableAddressor()
{
  return &static Layout.EffectsControlsView.browserWidth;
}

void Layout.MultiwayFaceTime.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  int64x2_t v7;
  double v8;

  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  v3 = v2;
  OUTLINED_FUNCTION_2_0();
  v4 = 0.0;
  if (static AmbientState.isPresented)
    v5 = 10.0;
  else
    v5 = 0.0;
  if (static Platform.current.getter() == 2)
    v4 = -20.0;
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_98_17(v6, (__n128)xmmword_1BD667DC0);
  *(_OWORD *)(a1 + 32) = xmmword_1BD668020;
  *(_OWORD *)(a1 + 48) = xmmword_1BD668030;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v3;
  v7 = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 80) = xmmword_1BD667E80;
  *(int64x2_t *)(a1 + 96) = v7;
  *(int64x2_t *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = xmmword_1BD668040;
  *(_OWORD *)(a1 + 144) = xmmword_1BD668050;
  *(double *)(a1 + 160) = v5;
  *(double *)(a1 + 168) = v4;
  *(__n128 *)(a1 + 208) = OUTLINED_FUNCTION_45_47(v8, (__n128)xmmword_1BD668060);
  *(_OWORD *)(a1 + 224) = xmmword_1BD668070;
  OUTLINED_FUNCTION_42_57((__n128)xmmword_1BD668080, (__n128)xmmword_1BD668090);
  *(_OWORD *)(a1 + 288) = xmmword_1BD6680A0;
  *(_OWORD *)(a1 + 304) = xmmword_1BD6680B0;
  OUTLINED_FUNCTION_94_11((__n128)xmmword_1BD6680C0);
  OUTLINED_FUNCTION_22_92();
}

uint64_t (*Layout.MultiwayFaceTime.statusBarHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantLeadingAndTrailingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.participantBottomInsetVisibleHUD.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.localParticipantPortraitSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void Layout.MultiwayFaceTime.localParticipantPortraitSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 40) = a1;
  *(double *)(v2 + 48) = a2;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantPortraitSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantEnlargedSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantFullScreenCornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantEnlargedCornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantMinimizedCornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.additionalSafeAreaInsetBottomPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.participantGridEdgeInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void Layout.MultiwayFaceTime.participantGridEdgeInsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[12] = a1;
  v4[13] = a2;
  v4[14] = a3;
  v4[15] = a4;
}

uint64_t (*Layout.MultiwayFaceTime.participantGridEdgeInsets.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedPortraitInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedTVSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.localParticipantExpandedTVRectangleHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.bottomControlsHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLargeBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLeadingAnchorOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsExpandedTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.inCallControlsLargeExpandedTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.minimumCellGap.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.gridInterItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonTopPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.changeLayoutButtonLeadingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.changeLayoutButtonBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.MultiwayFaceTime.titleBarInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.controlsCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 248);
}

void Layout.MultiwayFaceTime.controlsCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 248) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.controlsCornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 256);
}

void Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 256) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.oneToOneShutterButtonDiameter.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.sharedContentScreenWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 264);
}

void Layout.MultiwayFaceTime.sharedContentScreenWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 264) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.sharedContentScreenWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.sharedContentScreenHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 272);
}

void Layout.MultiwayFaceTime.sharedContentScreenHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 272) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.sharedContentScreenHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 280);
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 280) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.organicLayoutMaxCountPhone.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 288);
}

uint64_t Layout.MultiwayFaceTime.organicLayoutMaxCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.organicLayoutMaxCount.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 296);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPhone.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 304);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCount.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 312);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 312) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPortrait.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 320);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 320) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountMediaPip.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 328);
}

uint64_t Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = result;
  return result;
}

uint64_t (*Layout.MultiwayFaceTime.gridLayoutMaxCountPortraitMediaPip.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.gridViewButtonPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void Layout.MultiwayFaceTime.gridViewButtonPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.gridViewButtonPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 344);
}

void Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 344) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.topCornerPaddingBetweenButtons.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

uint64_t (*Layout.MultiwayFaceTime.tvLocalPreviewLandscapeHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double static Layout.ConversationControls.iOS.getter@<D0>(uint64_t a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  OUTLINED_FUNCTION_53_49(v2);
  v4 = v3;
  v6 = v5;

  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_currentDevice);
  v9 = objc_msgSend(v8, sel_userInterfaceIdiom);

  if (v9 == (id)1
    || (v10 = objc_msgSend(v7, sel_currentDevice),
        v11 = objc_msgSend(v10, sel_userInterfaceIdiom),
        v10,
        v11 == (id)5))
  {
    v12 = v4 + -16.0;
    v13 = 0x4077700000000000;
  }
  else
  {
    v14 = OUTLINED_FUNCTION_55_37();
    OUTLINED_FUNCTION_53_49(v14);
    v16 = v15;

    v17 = OUTLINED_FUNCTION_55_37();
    OUTLINED_FUNCTION_53_49(v17);
    v19 = v18;

    if (v19 >= v16)
      v20 = v16;
    else
      v20 = v19;
    v12 = v20 + -16.0;
    v13 = *(_QWORD *)&v12;
  }
  *(_QWORD *)a1 = v13;
  *(_OWORD *)(a1 + 8) = xmmword_1BD668150;
  *(_OWORD *)(a1 + 24) = xmmword_1BD668160;
  *(_OWORD *)(a1 + 40) = xmmword_1BD668170;
  *(double *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = xmmword_1BD668180;
  *(_DWORD *)(a1 + 88) = 1051931443;
  *(_OWORD *)(a1 + 96) = xmmword_1BD667DC0;
  *(_OWORD *)(a1 + 112) = xmmword_1BD668190;
  *(_OWORD *)(a1 + 128) = xmmword_1BD6681A0;
  *(_OWORD *)(a1 + 144) = xmmword_1BD6681B0;
  *(_OWORD *)(a1 + 160) = xmmword_1BD6681C0;
  *(_OWORD *)(a1 + 176) = xmmword_1BD6681D0;
  *(int64x2_t *)(a1 + 192) = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 208) = xmmword_1BD6681E0;
  *(_OWORD *)(a1 + 224) = xmmword_1BD6681F0;
  *(_OWORD *)(a1 + 240) = xmmword_1BD668200;
  __asm { FMOV            V0.2D, #-15.0 }
  *(_OWORD *)(a1 + 256) = _Q0;
  *(_OWORD *)(a1 + 272) = xmmword_1BD668210;
  *(_QWORD *)(a1 + 288) = 10;
  *(_QWORD *)(a1 + 296) = 0x4010000000000000;
  *(int64x2_t *)(a1 + 304) = vdupq_n_s64(0x4043800000000000uLL);
  *(_OWORD *)(a1 + 320) = xmmword_1BD668220;
  *(_OWORD *)(a1 + 336) = xmmword_1BD668230;
  *(_OWORD *)(a1 + 352) = xmmword_1BD668240;
  result = 49.0;
  *(_OWORD *)(a1 + 368) = xmmword_1BD668250;
  *(_OWORD *)(a1 + 384) = xmmword_1BD668260;
  return result;
}

double Layout.ConversationControls.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_1BD668270;
  *(_OWORD *)(a1 + 16) = xmmword_1BD668280;
  *(_OWORD *)(a1 + 32) = xmmword_1BD668290;
  *(_QWORD *)(a1 + 48) = 0x4044000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0x4014000000000000;
  *(_DWORD *)(a1 + 88) = 1051931443;
  *(_OWORD *)(a1 + 96) = xmmword_1BD667DC0;
  *(_OWORD *)(a1 + 112) = xmmword_1BD668190;
  *(_OWORD *)(a1 + 128) = xmmword_1BD6681A0;
  *(_OWORD *)(a1 + 144) = xmmword_1BD6681B0;
  *(_OWORD *)(a1 + 160) = xmmword_1BD6681C0;
  *(_OWORD *)(a1 + 176) = xmmword_1BD6681D0;
  *(int64x2_t *)(a1 + 192) = vdupq_n_s64(0x4049000000000000uLL);
  *(_OWORD *)(a1 + 208) = xmmword_1BD6681E0;
  *(_OWORD *)(a1 + 224) = xmmword_1BD6681F0;
  *(_OWORD *)(a1 + 240) = xmmword_1BD668200;
  __asm { FMOV            V0.2D, #-15.0 }
  *(_OWORD *)(a1 + 256) = _Q0;
  *(_OWORD *)(a1 + 272) = xmmword_1BD668210;
  *(_QWORD *)(a1 + 288) = 10;
  *(_QWORD *)(a1 + 296) = 0x4008000000000000;
  *(int64x2_t *)(a1 + 304) = vdupq_n_s64(0x4043800000000000uLL);
  *(_OWORD *)(a1 + 320) = xmmword_1BD668220;
  *(_OWORD *)(a1 + 336) = xmmword_1BD668230;
  *(_OWORD *)(a1 + 352) = xmmword_1BD668240;
  result = 49.0;
  *(_OWORD *)(a1 + 368) = xmmword_1BD668250;
  *(_OWORD *)(a1 + 384) = xmmword_1BD668260;
  return result;
}

uint64_t (*Layout.ConversationControls.defaultWidthHUD.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultWidthNotice.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultOutsetMargin.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.defaultBannerOutsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void Layout.ConversationControls.defaultBannerOutsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

uint64_t (*Layout.ConversationControls.defaultBannerOutsets.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.menuContainerSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void Layout.ConversationControls.menuContainerSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 56) = a1;
  *(double *)(v2 + 64) = a2;
}

uint64_t (*Layout.ConversationControls.menuContainerSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.shadowOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void Layout.ConversationControls.shadowOffset.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 72) = a1;
  *(double *)(v2 + 80) = a2;
}

uint64_t (*Layout.ConversationControls.shadowOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

float Layout.ConversationControls.shadowOpacity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 88);
}

void Layout.ConversationControls.shadowOpacity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 88) = a1;
}

uint64_t (*Layout.ConversationControls.shadowOpacity.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.shadowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void Layout.ConversationControls.shadowRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*Layout.ConversationControls.shadowRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.contentInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void Layout.ConversationControls.contentInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*Layout.ConversationControls.contentInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.contentInsetInCall.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void Layout.ConversationControls.contentInsetInCall.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*Layout.ConversationControls.contentInsetInCall.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.horizontalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void Layout.ConversationControls.horizontalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 120) = a1;
}

uint64_t (*Layout.ConversationControls.horizontalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.verticalSpacer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.subtitleSpacer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.additionalInCallLeadingTrailingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterHUD.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.hudEphemeralTextVerticalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.hudEphemeralTextBottomSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterNotice.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.imageDiameterShareCard.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonDiscHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.systemApertureButtonDiscHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.defaultButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.buttonLabelOverflow.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.dialogButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.ConversationControls.secondaryControlHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.buttonTapOutsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 248);
}

void Layout.ConversationControls.buttonTapOutsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[31] = a1;
  v4[32] = a2;
  v4[33] = a3;
  v4[34] = a4;
}

uint64_t (*Layout.ConversationControls.buttonTapOutsets.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.menuVerticalOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 280);
}

void Layout.ConversationControls.menuVerticalOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 280) = a1;
}

uint64_t (*Layout.ConversationControls.menuVerticalOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.ConversationControls.maxPillButtonCharacterLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 288);
}

uint64_t Layout.ConversationControls.maxPillButtonCharacterLength.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = result;
  return result;
}

uint64_t (*Layout.ConversationControls.maxPillButtonCharacterLength.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.countdownRingWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 296);
}

void Layout.ConversationControls.countdownRingWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 296) = a1;
}

uint64_t (*Layout.ConversationControls.countdownRingWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.addParticipantButtonImageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 304);
}

void Layout.ConversationControls.addParticipantButtonImageSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 304) = a1;
  *(double *)(v2 + 312) = a2;
}

uint64_t (*Layout.ConversationControls.addParticipantButtonImageSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.sharePlayButtonImageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 320);
}

void Layout.ConversationControls.sharePlayButtonImageSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 320) = a1;
  *(double *)(v2 + 328) = a2;
}

uint64_t (*Layout.ConversationControls.sharePlayButtonImageSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.sharePlayButtonImageOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void Layout.ConversationControls.sharePlayButtonImageOffset.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 336) = a1;
  *(double *)(v2 + 344) = a2;
}

uint64_t (*Layout.ConversationControls.sharePlayButtonImageOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.micButtonImageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void Layout.ConversationControls.micButtonImageSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 352) = a1;
  *(double *)(v2 + 360) = a2;
}

uint64_t (*Layout.ConversationControls.micButtonImageSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.videoButtonImageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 368);
}

void Layout.ConversationControls.videoButtonImageSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 368) = a1;
  *(double *)(v2 + 376) = a2;
}

uint64_t (*Layout.ConversationControls.videoButtonImageSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.ConversationControls.endCallButtonImageSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 384);
}

void Layout.ConversationControls.endCallButtonImageSize.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 384) = a1;
  *(double *)(v2 + 392) = a2;
}

uint64_t (*Layout.ConversationControls.endCallButtonImageSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 1 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 280.0;
}

double default argument 3 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 39.0;
}

double default argument 4 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 5 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

float default argument 6 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.35;
}

double default argument 14 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(50.0);
}

double default argument 17 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(34.0);
}

double default argument 18 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(60.0);
}

double default argument 19 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(50.0);
}

double default argument 20 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(50.0);
}

double default argument 21 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(50.0);
}

double default argument 25 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return OUTLINED_FUNCTION_23_6(42.0);
}

double default argument 26 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return -15.0;
}

uint64_t default argument 28 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 10;
}

double default argument 30 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 39.0;
}

double default argument 31 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 55.0;
}

double default argument 32 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 0.0;
}

double default argument 33 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 35.0;
}

double default argument 34 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 49.0;
}

double default argument 35 of Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)()
{
  return 34.0;
}

uint64_t Layout.ConversationControls.init(defaultWidthHUD:defaultWidthNotice:defaultOutsetMargin:defaultBannerOutsets:menuContainerSize:shadowOffset:shadowOpacity:shadowRadius:contentInset:contentInsetInCall:horizontalSpacing:verticalSpacer:subtitleSpacer:additionalInCallLeadingTrailingInset:imageDiameterHUD:hudEphemeralTextVerticalSpacing:hudEphemeralTextBottomSpacing:imageDiameterNotice:imageDiameterShareCard:buttonDiscHeight:buttonSpacing:systemApertureButtonDiscHeight:defaultButtonSpacing:buttonLabelOverflow:dialogButtonSpacing:secondaryControlHeight:buttonTapOutsets:menuVerticalOffset:maxPillButtonCharacterLength:countdownRingWidth:addParticipantButtonImageSize:sharePlayButtonImageSize:sharePlayButtonImageOffset:micButtonImageSize:videoButtonImageSize:endCallButtonImageSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, __int128 a11, uint64_t a12, int a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, __int128 a20,__int128 a21,__int128 a22,__int128 a23,__int128 a24,uint64_t a25,uint64_t a26,__int128 a27,__int128 a28,__int128 a29,__int128 a30,__int128 a31,__int128 a32,uint64_t a33)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(double *)(a2 + 40) = a8;
  *(double *)(a2 + 48) = a9;
  *(double *)(a2 + 56) = a10;
  *(_OWORD *)(a2 + 64) = a11;
  *(_QWORD *)(a2 + 80) = a12;
  *(_DWORD *)(a2 + 88) = a13;
  *(_OWORD *)(a2 + 96) = a14;
  *(_OWORD *)(a2 + 112) = a15;
  *(_OWORD *)(a2 + 128) = a16;
  *(_OWORD *)(a2 + 144) = a17;
  *(_OWORD *)(a2 + 160) = a18;
  *(_OWORD *)(a2 + 176) = a19;
  *(_OWORD *)(a2 + 192) = a20;
  *(_OWORD *)(a2 + 208) = a21;
  *(_OWORD *)(a2 + 224) = a22;
  *(_OWORD *)(a2 + 240) = a23;
  *(_OWORD *)(a2 + 256) = a24;
  *(_QWORD *)(a2 + 272) = a25;
  *(_QWORD *)(a2 + 280) = a26;
  *(_QWORD *)(a2 + 288) = result;
  *(_OWORD *)(a2 + 296) = a27;
  *(_OWORD *)(a2 + 312) = a28;
  *(_OWORD *)(a2 + 328) = a29;
  *(_OWORD *)(a2 + 344) = a30;
  *(_OWORD *)(a2 + 360) = a31;
  *(_OWORD *)(a2 + 376) = a32;
  *(_QWORD *)(a2 + 392) = a33;
  return result;
}

void *Layout.ConversationControlsAppLaunchPillView.spacerToHUD.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsAppLaunchPillView.spacerToHUD;
}

double one-time initialization function for buttonContentInsets()
{
  double result;

  result = 6.0;
  static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets = xmmword_1BD6682A0;
  *(_OWORD *)&qword_1EF4FD5C0 = xmmword_1BD6682A0;
  return result;
}

{
  double result;

  result = 13.0;
  static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets = xmmword_1BD6682B0;
  *(_OWORD *)&qword_1EF4FD620 = xmmword_1BD6682B0;
  return result;
}

double static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets.getter()
{
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  return OUTLINED_FUNCTION_37_56((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.buttonContentInsets);
}

double one-time initialization function for buttonHUDContentInsets()
{
  double result;

  result = 13.0;
  static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets = xmmword_1BD6682B0;
  unk_1EF4FD5E0 = xmmword_1BD6682B0;
  return result;
}

__int128 *Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonHUDContentInsets != -1)
    swift_once();
  return &static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets;
}

double static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets.getter()
{
  if (one-time initialization token for buttonHUDContentInsets != -1)
    swift_once();
  return OUTLINED_FUNCTION_37_56((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.buttonHUDContentInsets);
}

double one-time initialization function for margins()
{
  double result;

  result = 12.0;
  __asm { FMOV            V1.2D, #12.0 }
  static Layout.ConversationControlsAppLaunchPillView.margins = xmmword_1BD6682C0;
  *(_OWORD *)&qword_1EF4FD600 = _Q1;
  return result;
}

{
  double result;

  result = 12.0;
  __asm { FMOV            V1.2D, #12.0 }
  static Layout.ConversationControlsTrailingActionPillView.margins = xmmword_1BD6682C0;
  unk_1EF4FD640 = _Q1;
  return result;
}

double static Layout.ConversationControlsAppLaunchPillView.margins.getter()
{
  if (one-time initialization token for margins != -1)
    swift_once();
  return OUTLINED_FUNCTION_37_56((uint64_t)&static Layout.ConversationControlsAppLaunchPillView.margins);
}

double static Layout.ConversationControlsAppLaunchPillView.imageDiameter.getter()
{
  return OUTLINED_FUNCTION_23_6(32.0);
}

double static Layout.ConversationControlsAppLaunchPillView.avatarDiameter.getter()
{
  return OUTLINED_FUNCTION_23_6(52.0);
}

void *Layout.ConversationControlsTrailingActionPillView.spacerToHUD.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.spacerToHUD;
}

double static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets.getter()
{
  if (one-time initialization token for buttonContentInsets != -1)
    swift_once();
  return OUTLINED_FUNCTION_37_56((uint64_t)&static Layout.ConversationControlsTrailingActionPillView.buttonContentInsets);
}

void *Layout.ConversationControlsTrailingActionPillView.horizontalContentSpacing.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.horizontalContentSpacing;
}

__int128 *Layout.ConversationControlsTrailingActionPillView.margins.unsafeMutableAddressor()
{
  if (one-time initialization token for margins != -1)
    swift_once();
  return &static Layout.ConversationControlsTrailingActionPillView.margins;
}

double static Layout.ConversationControlsTrailingActionPillView.margins.getter()
{
  if (one-time initialization token for margins != -1)
    swift_once();
  return OUTLINED_FUNCTION_37_56((uint64_t)&static Layout.ConversationControlsTrailingActionPillView.margins);
}

void *Layout.ConversationControlsTrailingActionPillView.imageDiameter.unsafeMutableAddressor()
{
  return &static Layout.ConversationControlsTrailingActionPillView.imageDiameter;
}

double static Layout.ConversationControlsTrailingActionPillView.imageDiameter.getter()
{
  return OUTLINED_FUNCTION_23_6(32.0);
}

double Layout.SharePlayDiscoverabilityView.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  __asm { FMOV            V0.2D, #16.0 }
  *a1 = _Q0;
  a1[1] = xmmword_1BD6682D0;
  a1[2] = xmmword_1BD668110;
  a1[3] = xmmword_1BD6682E0;
  result = 80.0;
  a1[4] = xmmword_1BD668130;
  a1[5] = xmmword_1BD668140;
  return result;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.insetBuffer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.verticalInsetBuffer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appInsetBuffer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconToTitlePadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.viewHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.SharePlayDiscoverabilityView.appIconWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void Layout.SharePlayDiscoverabilityView.appIconWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appIconAspectRatio.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appCellWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appScrollViewInsetBuffer.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appTitleToBottomPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.SharePlayDiscoverabilityView.appTitleToImagePadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 4 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_23_6(160.0);
}

double default argument 5 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_23_6(60.0);
}

double default argument 6 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return 102.0;
}

double default argument 8 of Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)()
{
  return OUTLINED_FUNCTION_23_6(80.0);
}

double static Layout.ShareCard.popoverWidth.getter()
{
  return 375.0;
}

uint64_t one-time initialization function for appShelfSeparatorInsetBuffer()
{
  uint64_t result;
  double v1;

  result = static Platform.current.getter();
  v1 = 4.0;
  if (result == 1)
    v1 = 8.0;
  static Layout.ShareCard.appShelfSeparatorInsetBuffer = *(_QWORD *)&v1;
  return result;
}

void static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

{
  char v0;

  OUTLINED_FUNCTION_35_51();
  if (!v0)
    OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_0();
}

uint64_t one-time initialization function for collaborateSubtitleBuffer()
{
  uint64_t result;
  double v1;

  result = static Platform.current.getter();
  v1 = 12.0;
  if (result == 1)
    v1 = 16.0;
  static Layout.ShareCard.collaborateSubtitleBuffer = *(_QWORD *)&v1;
  return result;
}

void static Layout.ShareCard.collaborateSubtitleBuffer.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double static Layout.ShareCard.buttonIconSpacing.getter()
{
  return 9.0;
}

double Layout.Roster.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_1BD6680E0;
  *(_OWORD *)(a1 + 16) = xmmword_1BD6680F0;
  *(_QWORD *)(a1 + 32) = 0x4059000000000000;
  *(_QWORD *)(a1 + 40) = 30;
  result = 87.0;
  *(_OWORD *)(a1 + 48) = xmmword_1BD6682F0;
  *(_OWORD *)(a1 + 64) = xmmword_1BD668100;
  return result;
}

uint64_t (*Layout.Roster.maxVisibleCellCount.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.cellSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.cornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.iconYOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.ParticipantViewCellHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t Layout.Roster.ParticipantListActionButtonMenuYOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t Layout.Roster.ParticipantListActionButtonMenuYOffset.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*Layout.Roster.ParticipantListActionButtonMenuYOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.floatingLayoutRosterCellWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidthSplitView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.Roster.minimumConfigurableCellWidthSplitViewOneToOne.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 0 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 3.5;
}

double default argument 4 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return OUTLINED_FUNCTION_23_6(100.0);
}

uint64_t default argument 5 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 30;
}

double default argument 6 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 87.0;
}

double default argument 8 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return OUTLINED_FUNCTION_23_6(100.0);
}

double default argument 9 of Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)()
{
  return 178.0;
}

uint64_t Layout.Roster.init(maxVisibleCellCount:cellSpacing:cornerRadius:iconYOffset:ParticipantViewCellHeight:ParticipantListActionButtonMenuYOffset:floatingLayoutRosterCellWidth:minimumConfigurableCellWidth:minimumConfigurableCellWidthSplitView:minimumConfigurableCellWidthSplitViewOneToOne:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(_QWORD *)(a2 + 40) = result;
  *(double *)(a2 + 48) = a8;
  *(double *)(a2 + 56) = a9;
  *(double *)(a2 + 64) = a10;
  *(_QWORD *)(a2 + 72) = a11;
  return result;
}

double static Layout.LocalParticipantView.shadowOffset.getter()
{
  return -7.0;
}

double static Layout.LocalParticipantView.localParticipantExpandedSizeMultiplier.getter()
{
  return 0.7;
}

double static Layout.LocalParticipantView.localParticipantReactionsSizeMultiplier.getter()
{
  return 1.5;
}

void one-time initialization function for tvSplitViewBottomOffset()
{
  static Layout.LocalParticipantView.tvSplitViewBottomOffset = 0x4024000000000000;
}

void static Layout.LocalParticipantView.tvSplitViewBottomOffset.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double static Layout.EffectsControlsView.browserWidth.getter()
{
  return 290.0;
}

uint64_t one-time initialization function for browserVerticalPadding()
{
  uint64_t result;
  double v1;

  result = static Platform.current.getter();
  v1 = 16.0;
  if (result == 1)
    v1 = 23.0;
  static Layout.EffectsControlsView.browserVerticalPadding = *(_QWORD *)&v1;
  return result;
}

void static Layout.EffectsControlsView.browserVerticalPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for browserVerticalPaddingFull()
{
  double v0;
  char v1;

  static Platform.current.getter();
  v0 = OUTLINED_FUNCTION_51_48();
  if (v1)
    v0 = 6.0;
  static Layout.EffectsControlsView.browserVerticalPaddingFull = *(_QWORD *)&v0;
}

void static Layout.EffectsControlsView.browserVerticalPaddingFull.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double static Layout.EffectsControlsView.browserRegularHeight.getter()
{
  return OUTLINED_FUNCTION_23_6(58.0);
}

double static Layout.EffectsControlsView.browserExpandedHeight.getter()
{
  return 75.0;
}

double Layout.LocalParticipantViewCameraControls.init()()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  char v4;
  double v5;
  char v6;
  double v7;
  double result;

  if (OUTLINED_FUNCTION_101_18() == 1)
    v1 = 40.0;
  else
    v1 = 44.0;
  if (static Platform.current.getter() == 1)
    v2 = 3.0;
  else
    v2 = 5.0;
  static Platform.current.getter();
  v3 = OUTLINED_FUNCTION_51_48();
  if (v4)
    v5 = 22.0;
  else
    v5 = v3;
  v6 = static Platform.current.getter();
  v7 = 0.0;
  if (v6 == 1)
    v7 = 10.0;
  *(_OWORD *)v0 = xmmword_1BD668300;
  *(double *)(v0 + 16) = v1;
  *(double *)(v0 + 24) = v2;
  *(_OWORD *)(v0 + 32) = xmmword_1BD668310;
  *(_QWORD *)(v0 + 48) = 0x4040800000000000;
  *(double *)(v0 + 56) = v5;
  *(double *)(v0 + 64) = v7;
  result = 20.0;
  *(_OWORD *)(v0 + 72) = xmmword_1BD668320;
  *(_QWORD *)(v0 + 88) = 0x4052000000000000;
  return result;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.largeButtonPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.largeButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonBottomPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.extraSmallButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.smallButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonBottomPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.expandedButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.fullButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.LocalParticipantViewCameraControls.shutterButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 1 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_23_6(40.0);
}

double default argument 2 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0;
  double result;

  v0 = static Platform.current.getter();
  result = 44.0;
  if (v0 == 1)
    return 40.0;
  return result;
}

double default argument 3 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0;
  double result;

  v0 = static Platform.current.getter();
  result = 5.0;
  if (v0 == 1)
    return 3.0;
  return result;
}

double default argument 6 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return 33.0;
}

double default argument 7 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  double result;
  char v1;

  static Platform.current.getter();
  result = OUTLINED_FUNCTION_51_48();
  if (v1)
    return 22.0;
  return result;
}

double default argument 8 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  char v0;
  double result;

  v0 = static Platform.current.getter();
  result = 0.0;
  if (v0 == 1)
    return 10.0;
  return result;
}

double default argument 10 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_23_6(44.0);
}

double default argument 11 of Layout.LocalParticipantViewCameraControls.init(largeButtonPadding:largeButtonSize:fullButtonSize:smallButtonPadding:smallButtonBottomPadding:extraSmallButtonSize:smallButtonSize:fullButtonPadding:fullButtonBottomPadding:expandedButtonSpacing:fullButtonSpacing:shutterButtonSize:)()
{
  return OUTLINED_FUNCTION_23_6(72.0);
}

void Layout.SharePlayDiscoverabilityView.init(insetBuffer:verticalInsetBuffer:appInsetBuffer:appIconToTitlePadding:viewHeight:appIconWidth:appIconHeight:appIconAspectRatio:appCellWidth:appScrollViewInsetBuffer:appTitleToBottomPadding:appTitleToImagePadding:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>, __int128 a10, uint64_t a11, uint64_t a12)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(double *)(a1 + 32) = a6;
  *(double *)(a1 + 40) = a7;
  *(double *)(a1 + 48) = a8;
  *(double *)(a1 + 56) = a9;
  *(_OWORD *)(a1 + 64) = a10;
  *(_QWORD *)(a1 + 80) = a11;
  *(_QWORD *)(a1 + 88) = a12;
}

void one-time initialization function for shortSizeBoundary()
{
  static Layout.ParticipantViews.shortSizeBoundary = 0x4066800000000000;
}

void static Layout.ParticipantViews.shortSizeBoundary.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for microSizeBoundary()
{
  static Layout.ParticipantViews.microSizeBoundary = 0x4056000000000000;
}

void static Layout.ParticipantViews.microSizeBoundary.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void *Layout.ParticipantViews.oneToOneCornerRadius.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.oneToOneCornerRadius;
}

double static Layout.ParticipantViews.screenSharingInteractionTouchInsets.getter()
{
  OUTLINED_FUNCTION_9_4();
  return *(double *)&static Layout.ParticipantViews.screenSharingInteractionTouchInsets;
}

uint64_t static Layout.ParticipantViews.screenSharingInteractionTouchInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_0();
  static Layout.ParticipantViews.screenSharingInteractionTouchInsets = *(_QWORD *)&a1;
  unk_1EF4D4170 = *(_QWORD *)&a2;
  qword_1EF4D4178 = *(_QWORD *)&a3;
  unk_1EF4D4180 = *(_QWORD *)&a4;
  return result;
}

void static Layout.ParticipantViews.screenSharingInteractionTouchInsets.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

double static Layout.ParticipantViews.shadowRadius.getter()
{
  return 25.0;
}

double static Layout.ParticipantViews.bottomShadowOffset.getter()
{
  return 0.0;
}

double static Layout.ParticipantViews.labelFadeSize.getter()
{
  return OUTLINED_FUNCTION_23_6(32.0);
}

double static Layout.ParticipantViews.startingTileScale.getter()
{
  return 0.75;
}

double static Layout.ParticipantViews.screenShareInfoViewHeight.getter()
{
  return OUTLINED_FUNCTION_23_6(40.0);
}

double static Layout.ParticipantViews.screenShareInfoViewButtonRadius.getter()
{
  return OUTLINED_FUNCTION_23_6(38.0);
}

double static Layout.ParticipantViews.screenShareInfoViewAvatarImageHeight.getter()
{
  return 28.0;
}

double static Layout.ParticipantViews.bottomBarButtonSize.getter()
{
  return OUTLINED_FUNCTION_23_6(32.0);
}

void *Layout.ParticipantViews.kickMemberButtonPadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.kickMemberButtonPadding;
}

void *Layout.ParticipantViews.kickMemberButtonSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.kickMemberButtonSize;
}

double static Layout.ParticipantViews.kickMemberButtonSize.getter()
{
  return OUTLINED_FUNCTION_23_6(32.0);
}

void *Layout.ParticipantViews.screenPoorConnectionLabelSidePadding.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenPoorConnectionLabelSidePadding;
}

void *Layout.ParticipantViews.screenPoorConnectionSymbolLabelVerticalSpacing.unsafeMutableAddressor()
{
  return &static Layout.ParticipantViews.screenPoorConnectionSymbolLabelVerticalSpacing;
}

double static Layout.ParticipantMonogramViews.glowAlpha.getter()
{
  return 0.2;
}

double static Layout.ParticipantMonogramViews.contactRosterSizeMultiplier.getter()
{
  return 0.55;
}

double static Layout.ParticipantMonogramViews.contactCanvasSizeMultiplier.getter()
{
  return 0.4;
}

double static Layout.ParticipantMonogramViews.contactViewMaximumSize.getter()
{
  return OUTLINED_FUNCTION_23_6(168.0);
}

double static Layout.ParticipantMonogramViews.labelSpacingScale.getter()
{
  return 0.05;
}

double static Layout.ParticipantMonogramViews.labelSpacingMaximum.getter()
{
  return 21.0;
}

void *Layout.ParticipantMonogramViews.buttonVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonVerticalInset;
}

double static Layout.ParticipantMonogramViews.buttonVerticalInset.getter()
{
  return 21.0;
}

void *Layout.ParticipantMonogramViews.buttonMargin.unsafeMutableAddressor()
{
  return &static Layout.ParticipantMonogramViews.buttonMargin;
}

double static Layout.ParticipantMonogramViews.buttonWidth.getter()
{
  return OUTLINED_FUNCTION_23_6(50.0);
}

double static Layout.ParticipantAlertViews.minimumWidth.getter()
{
  return OUTLINED_FUNCTION_23_6(240.0);
}

double static Layout.ParticipantAlertViews.minimumHeight.getter()
{
  return 47.0;
}

__n128 Layout.InCallControls.init()@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;

  *(_OWORD *)a1 = xmmword_1BD667D80;
  *(_OWORD *)(a1 + 16) = xmmword_1BD667D90;
  *(_OWORD *)(a1 + 32) = xmmword_1BD667DA0;
  *(_OWORD *)(a1 + 48) = xmmword_1BD667DB0;
  *(_OWORD *)(a1 + 64) = xmmword_1BD667DC0;
  *(_OWORD *)(a1 + 80) = xmmword_1BD667DD0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_1BD667DE0;
  *(_OWORD *)(a1 + 128) = xmmword_1BD667DF0;
  *(_OWORD *)(a1 + 144) = xmmword_1BD667E00;
  *(_OWORD *)(a1 + 160) = xmmword_1BD667E10;
  *(_OWORD *)(a1 + 176) = xmmword_1BD667E20;
  *(_OWORD *)(a1 + 192) = xmmword_1BD667E30;
  *(_OWORD *)(a1 + 208) = xmmword_1BD667E40;
  *(_OWORD *)(a1 + 224) = xmmword_1BD667E50;
  *(_OWORD *)(a1 + 240) = xmmword_1BD667E60;
  *(_OWORD *)(a1 + 256) = xmmword_1BD667E70;
  *(_OWORD *)(a1 + 272) = xmmword_1BD650830;
  *(_OWORD *)(a1 + 288) = xmmword_1BD667E90;
  *(_OWORD *)(a1 + 304) = xmmword_1BD667EA0;
  *(_OWORD *)(a1 + 320) = xmmword_1BD667EB0;
  *(_OWORD *)(a1 + 336) = xmmword_1BD667EC0;
  *(_OWORD *)(a1 + 352) = xmmword_1BD667ED0;
  __asm { FMOV            V1.2D, #17.0 }
  *(_OWORD *)(a1 + 368) = xmmword_1BD667EE0;
  *(_OWORD *)(a1 + 384) = _Q1;
  *(_OWORD *)(a1 + 400) = xmmword_1BD667EF0;
  *(_OWORD *)(a1 + 416) = xmmword_1BD667F00;
  *(_OWORD *)(a1 + 432) = xmmword_1BD667F10;
  *(_OWORD *)(a1 + 448) = xmmword_1BD667F20;
  *(_OWORD *)(a1 + 464) = xmmword_1BD667F30;
  *(_OWORD *)(a1 + 480) = xmmword_1BD667F40;
  *(_OWORD *)(a1 + 496) = xmmword_1BD667F50;
  *(_OWORD *)(a1 + 512) = xmmword_1BD667F60;
  __asm { FMOV            V1.2D, #8.0 }
  *(_OWORD *)(a1 + 528) = xmmword_1BD667F70;
  *(_OWORD *)(a1 + 544) = _Q1;
  *(_OWORD *)(a1 + 560) = xmmword_1BD667F80;
  *(_OWORD *)(a1 + 576) = xmmword_1BD667F90;
  *(_OWORD *)(a1 + 592) = xmmword_1BD667FA0;
  *(_OWORD *)(a1 + 608) = xmmword_1BD667FB0;
  *(_OWORD *)(a1 + 624) = xmmword_1BD667FC0;
  *(_OWORD *)(a1 + 640) = xmmword_1BD667FD0;
  *(_OWORD *)(a1 + 656) = xmmword_1BD667FE0;
  *(_OWORD *)(a1 + 672) = xmmword_1BD667FF0;
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(a1 + 688) = _Q0;
  *(_OWORD *)(a1 + 704) = xmmword_1BD668000;
  OUTLINED_FUNCTION_26_70(a1, (__n128)xmmword_1BD668010);
  return result;
}

uint64_t (*Layout.InCallControls.hotdogTopOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.glowScale.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.controlsTopOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.actionButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.messagesButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.copyLinkButtonImageSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void Layout.InCallControls.copyLinkButtonImageSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*Layout.InCallControls.copyLinkButtonImageSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonImageSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonEdgeSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonInnnerSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.changeLayoutButtonImageSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.buttonlabelTopOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.buttonlabelInterButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListHorizontalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void Layout.InCallControls.participantListHorizontalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*Layout.InCallControls.participantListHorizontalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListBottomInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void Layout.InCallControls.participantListBottomInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*Layout.InCallControls.participantListBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListContentVerticalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void Layout.InCallControls.participantListContentVerticalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*Layout.InCallControls.participantListContentVerticalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListInnerItemSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void Layout.InCallControls.participantListInnerItemSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 120) = a1;
}

uint64_t (*Layout.InCallControls.participantListInnerItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListInnerLmiButtonSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListAvatarToLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListTitleHeightOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListSubtitleIconSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListMessagesButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListAvatarSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListContentHorizontalLeadingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.participantListContentHorizontalTrailingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.parcitipantListFooterInterItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerAvatarDiameter.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerAvatarTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerTitleTopPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleTopPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleBottomPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t (*Layout.InCallControls.headerSubtitleImageOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantRowHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 248);
}

void Layout.InCallControls.participantRowHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 248) = a1;
}

uint64_t (*Layout.InCallControls.participantRowHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListLargeTitleVerticalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 256);
}

void Layout.InCallControls.participantListLargeTitleVerticalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 256) = a1;
}

uint64_t (*Layout.InCallControls.participantListLargeTitleVerticalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryIconSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 264);
}

void Layout.InCallControls.participantListSummaryIconSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 264) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryIconSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryHorizontalLeadingInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 272);
}

void Layout.InCallControls.participantListSummaryHorizontalLeadingInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 272) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryHorizontalLeadingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListSummaryInnerItemSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 280);
}

void Layout.InCallControls.participantListSummaryInnerItemSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 280) = a1;
}

uint64_t (*Layout.InCallControls.participantListSummaryInnerItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListDiscButtonSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 288);
}

void Layout.InCallControls.participantListDiscButtonSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 288) = a1;
}

uint64_t (*Layout.InCallControls.participantListDiscButtonSize.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListPillButtonMinimumHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 296);
}

void Layout.InCallControls.participantListPillButtonMinimumHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 296) = a1;
}

uint64_t (*Layout.InCallControls.participantListPillButtonMinimumHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListInnerLabelSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 304);
}

void Layout.InCallControls.participantListInnerLabelSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 304) = a1;
}

uint64_t (*Layout.InCallControls.participantListInnerLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListActionButtonHorizontalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 312);
}

void Layout.InCallControls.participantListActionButtonHorizontalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 312) = a1;
}

uint64_t (*Layout.InCallControls.participantListActionButtonHorizontalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelLeading.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 320);
}

void Layout.InCallControls.addParticipantLabelLeading.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 320) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelLeading.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelTopInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 328);
}

void Layout.InCallControls.addParticipantLabelTopInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 328) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantLabelBottomInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void Layout.InCallControls.addParticipantLabelBottomInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantLabelBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderLeadingInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 344);
}

void Layout.InCallControls.currentActivitySectionHeaderLeadingInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 344) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderLeadingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderBottomInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void Layout.InCallControls.currentActivitySectionHeaderBottomInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySectionHeaderTopInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 360);
}

void Layout.InCallControls.currentActivitySectionHeaderTopInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 360) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySectionHeaderTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivitySmallHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 368);
}

void Layout.InCallControls.currentActivitySmallHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 368) = a1;
}

uint64_t (*Layout.InCallControls.currentActivitySmallHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.currentActivityDefaultHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 376);
}

void Layout.InCallControls.currentActivityDefaultHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 376) = a1;
}

uint64_t (*Layout.InCallControls.currentActivityDefaultHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockTopOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 384);
}

void Layout.InCallControls.effectsDockTopOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 384) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockTopOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockExpandedTopOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

void Layout.InCallControls.effectsDockExpandedTopOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 392) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockExpandedTopOffset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockRegularSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 400);
}

void Layout.InCallControls.effectsDockRegularSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 400) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockRegularSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.effectsDockExpandedSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 408);
}

void Layout.InCallControls.effectsDockExpandedSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 408) = a1;
}

uint64_t (*Layout.InCallControls.effectsDockExpandedSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListVerticalLabelSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 416);
}

void Layout.InCallControls.participantListVerticalLabelSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 416) = a1;
}

uint64_t (*Layout.InCallControls.participantListVerticalLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantNameLabelLeadingInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 424);
}

void Layout.InCallControls.addParticipantNameLabelLeadingInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 424) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantNameLabelLeadingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.addParticipantNameLabelTrailingInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 432);
}

void Layout.InCallControls.addParticipantNameLabelTrailingInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 432) = a1;
}

uint64_t (*Layout.InCallControls.addParticipantNameLabelTrailingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListTopSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 440);
}

void Layout.InCallControls.participantListTopSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 440) = a1;
}

uint64_t (*Layout.InCallControls.participantListTopSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void Layout.InCallControls.callControlsInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

uint64_t (*Layout.InCallControls.callControlsInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 456);
}

void Layout.InCallControls.callControlsPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 456) = a1;
}

uint64_t (*Layout.InCallControls.callControlsPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.imageButtonRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 464);
}

void Layout.InCallControls.imageButtonRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 464) = a1;
}

uint64_t (*Layout.InCallControls.imageButtonRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonContentHorizontalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void Layout.InCallControls.pillButtonContentHorizontalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonContentHorizontalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonContentVerticalInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 480);
}

void Layout.InCallControls.pillButtonContentVerticalInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 480) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonContentVerticalInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonMinimumWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 488);
}

void Layout.InCallControls.pillButtonMinimumWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 488) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonMinimumWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.pillButtonMinimumHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void Layout.InCallControls.pillButtonMinimumHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

uint64_t (*Layout.InCallControls.pillButtonMinimumHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lmiCountdownButtonPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 504);
}

void Layout.InCallControls.lmiCountdownButtonPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 504) = a1;
}

uint64_t (*Layout.InCallControls.lmiCountdownButtonPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lmiButtonRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void Layout.InCallControls.lmiButtonRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

uint64_t (*Layout.InCallControls.lmiButtonRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.tableViewCellHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 520);
}

void Layout.InCallControls.tableViewCellHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 520) = a1;
}

uint64_t (*Layout.InCallControls.tableViewCellHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.tableViewFooterCellHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 528);
}

void Layout.InCallControls.tableViewFooterCellHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 528) = a1;
}

uint64_t (*Layout.InCallControls.tableViewFooterCellHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.toggleButtonVerticalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 536);
}

void Layout.InCallControls.toggleButtonVerticalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 536) = a1;
}

uint64_t (*Layout.InCallControls.toggleButtonVerticalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonInterItemSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 544);
}

void Layout.InCallControls.footerButtonInterItemSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 544) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonInterItemSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.actionButtonHorizontalPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 552);
}

void Layout.InCallControls.actionButtonHorizontalPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 552) = a1;
}

uint64_t (*Layout.InCallControls.actionButtonHorizontalPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.actionButtonVerticalPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 560);
}

void Layout.InCallControls.actionButtonVerticalPadding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 560) = a1;
}

uint64_t (*Layout.InCallControls.actionButtonVerticalPadding.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 568);
}

void Layout.InCallControls.footerButtonHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 568) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.footerButtonLeadingTrailingInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 576);
}

void Layout.InCallControls.footerButtonLeadingTrailingInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 576) = a1;
}

uint64_t (*Layout.InCallControls.footerButtonLeadingTrailingInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 584);
}

void Layout.InCallControls.callControlsHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 584) = a1;
}

uint64_t (*Layout.InCallControls.callControlsHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 592);
}

void Layout.InCallControls.callControlsWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 592) = a1;
}

uint64_t (*Layout.InCallControls.callControlsWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.callControlsExtraButtonWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 600);
}

void Layout.InCallControls.callControlsExtraButtonWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 600) = a1;
}

uint64_t (*Layout.InCallControls.callControlsExtraButtonWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionActivityTopInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 608);
}

void Layout.InCallControls.detailsSectionActivityTopInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 608) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionActivityTopInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionDefaultBottomInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 616);
}

void Layout.InCallControls.detailsSectionDefaultBottomInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 616) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionDefaultBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listLeadingContentInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 624);
}

void Layout.InCallControls.listLeadingContentInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 624) = a1;
}

uint64_t (*Layout.InCallControls.listLeadingContentInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listTrailingContentInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 632);
}

void Layout.InCallControls.listTrailingContentInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 632) = a1;
}

uint64_t (*Layout.InCallControls.listTrailingContentInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 640);
}

void Layout.InCallControls.listWidth.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 640) = a1;
}

uint64_t (*Layout.InCallControls.listWidth.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listMinHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 648);
}

void Layout.InCallControls.listMinHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 648) = a1;
}

uint64_t (*Layout.InCallControls.listMinHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.listMaxHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 656);
}

void Layout.InCallControls.listMaxHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 656) = a1;
}

uint64_t (*Layout.InCallControls.listMaxHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsSectionHeaderBottomInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 664);
}

void Layout.InCallControls.detailsSectionHeaderBottomInset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 664) = a1;
}

uint64_t (*Layout.InCallControls.detailsSectionHeaderBottomInset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.detailsTitleCellMinimumHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 672);
}

void Layout.InCallControls.detailsTitleCellMinimumHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 672) = a1;
}

uint64_t (*Layout.InCallControls.detailsTitleCellMinimumHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListTopLabelSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 680);
}

void Layout.InCallControls.participantListTopLabelSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 680) = a1;
}

uint64_t (*Layout.InCallControls.participantListTopLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.participantListBottomLabelSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 688);
}

void Layout.InCallControls.participantListBottomLabelSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 688) = a1;
}

uint64_t (*Layout.InCallControls.participantListBottomLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.minumumButtonLabelSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 696);
}

void Layout.InCallControls.minumumButtonLabelSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 696) = a1;
}

uint64_t (*Layout.InCallControls.minumumButtonLabelSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.interButtonRowVerticalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 704);
}

void Layout.InCallControls.interButtonRowVerticalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 704) = a1;
}

uint64_t (*Layout.InCallControls.interButtonRowVerticalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.interButtonSecondRowVerticalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 712);
}

void Layout.InCallControls.interButtonSecondRowVerticalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 712) = a1;
}

uint64_t (*Layout.InCallControls.interButtonSecondRowVerticalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.secondButtonRowHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 720);
}

void Layout.InCallControls.secondButtonRowHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 720) = a1;
}

uint64_t (*Layout.InCallControls.secondButtonRowHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.lastButtonRowVerticalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 728);
}

void Layout.InCallControls.lastButtonRowVerticalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 728) = a1;
}

uint64_t (*Layout.InCallControls.lastButtonRowVerticalSpacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.shareLinkButtonHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 736);
}

void Layout.InCallControls.shareLinkButtonHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 736) = a1;
}

uint64_t (*Layout.InCallControls.shareLinkButtonHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.liveCaptionButtonHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 744);
}

void Layout.InCallControls.liveCaptionButtonHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 744) = a1;
}

uint64_t (*Layout.InCallControls.liveCaptionButtonHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double Layout.InCallControls.openMessagesButtonHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 752);
}

void Layout.InCallControls.openMessagesButtonHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 752) = a1;
}

uint64_t (*Layout.InCallControls.openMessagesButtonHeight.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void *Layout.InCallControlsButton.pillDefaultAspectRatio.unsafeMutableAddressor()
{
  return &static Layout.InCallControlsButton.pillDefaultAspectRatio;
}

double static Layout.InCallControlsButton.pillDefaultAspectRatio.getter()
{
  return 1.71428571;
}

double static Layout.InCallControlsButton.pillMinimumHeight.getter()
{
  return OUTLINED_FUNCTION_23_6(42.0);
}

double static Layout.InCallControlsButton.pillMinimumWidth.getter()
{
  return OUTLINED_FUNCTION_23_6(72.0);
}

void *Layout.ParticipantContactAvatars.minSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantContactAvatars.minSize;
}

double static Layout.ParticipantContactAvatars.minSize.getter()
{
  return OUTLINED_FUNCTION_23_6(40.0);
}

void *Layout.ParticipantContactAvatars.maxSize.unsafeMutableAddressor()
{
  return &static Layout.ParticipantContactAvatars.maxSize;
}

double static Layout.ParticipantContactAvatars.maxSize.getter()
{
  return 125.0;
}

void *Layout.ParticipantRingView.morphingCircleDiameter.unsafeMutableAddressor()
{
  return &static Layout.ParticipantRingView.morphingCircleDiameter;
}

double static Layout.ParticipantRingView.morphingCircleDiameter.getter()
{
  return 135.0;
}

void *Layout.ParticipantRingView.stroke.unsafeMutableAddressor()
{
  return &static Layout.ParticipantRingView.stroke;
}

void *Layout.Staging.participantLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelHorizontalInset;
}

void *Layout.Staging.participantLabelNumberOfLines.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelNumberOfLines;
}

uint64_t static Layout.Staging.participantLabelNumberOfLines.getter()
{
  return 2;
}

void *Layout.Staging.participantLabelBaseline.unsafeMutableAddressor()
{
  return &static Layout.Staging.participantLabelBaseline;
}

double static Layout.Staging.participantLabelBaseline.getter()
{
  return 75.0;
}

void *Layout.Staging.secondaryParticipantLabelBaseline.unsafeMutableAddressor()
{
  return &static Layout.Staging.secondaryParticipantLabelBaseline;
}

double one-time initialization function for transcriptVerticalSize()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_bounds);
  v2 = v1;

  *(double *)&static Layout.Captions.transcriptVerticalSize = v2 * 0.45;
  OUTLINED_FUNCTION_12_1();
  return result;
}

void static Layout.Captions.transcriptVerticalSize.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void static Layout.Captions.lineHeight.getter()
{
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]), sel_lineHeight);
  OUTLINED_FUNCTION_33_70();
  OUTLINED_FUNCTION_12_1();
}

void *Layout.Captions.bubbleLines.unsafeMutableAddressor()
{
  return &static Layout.Captions.bubbleLines;
}

uint64_t static Layout.Captions.bubbleLines.getter()
{
  return 5;
}

void one-time initialization function for scrollGradientFraction()
{
  static Layout.Captions.scrollGradientFraction = 0x3FD0000000000000;
}

uint64_t *Layout.Captions.scrollGradientFraction.unsafeMutableAddressor()
{
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  return &static Layout.Captions.scrollGradientFraction;
}

void static Layout.Captions.scrollGradientFraction.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void *Layout.Captions.captionHeightBias.unsafeMutableAddressor()
{
  return &static Layout.Captions.captionHeightBias;
}

double static Layout.Captions.captionHeightBias.getter()
{
  return -1.0;
}

double static Layout.Captions.bubbleHeight.getter()
{
  double v0;
  double v1;

  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  OUTLINED_FUNCTION_9_4();
  v1 = *(double *)&static Layout.Captions.bubblePadding + *(double *)&static Layout.Captions.bubblePadding;
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]), sel_lineHeight);
  OUTLINED_FUNCTION_33_70();
  return v1 + v0 * 5.0 + -1.0;
}

uint64_t *Layout.Captions.bubblePadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  return &static Layout.Captions.bubblePadding;
}

void one-time initialization function for margin()
{
  static Layout.Captions.margin = 0x4024000000000000;
}

void static Layout.Captions.margin.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for transcriptSidebarWidth()
{
  static Layout.Captions.transcriptSidebarWidth = 0x4074000000000000;
}

void static Layout.Captions.transcriptSidebarWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

uint64_t *Layout.Captions.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  return &static Layout.Captions.cornerRadius;
}

void static Layout.Captions.cornerRadius.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double one-time initialization function for sizeToggleButtonSize()
{
  double result;

  if (one-time initialization token for headerImageSize != -1)
    swift_once();
  OUTLINED_FUNCTION_9_4();
  result = *(double *)&static Layout.Captions.headerImageSize;
  static Layout.Captions.sizeToggleButtonSize = static Layout.Captions.headerImageSize;
  return result;
}

uint64_t *Layout.Captions.headerImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for headerImageSize != -1)
    swift_once();
  return &static Layout.Captions.headerImageSize;
}

uint64_t *Layout.Captions.sizeToggleButtonSize.unsafeMutableAddressor()
{
  if (one-time initialization token for sizeToggleButtonSize != -1)
    swift_once();
  return &static Layout.Captions.sizeToggleButtonSize;
}

void static Layout.Captions.sizeToggleButtonSize.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for bubblePadding()
{
  static Layout.Captions.bubblePadding = 0x402A000000000000;
}

void static Layout.Captions.bubblePadding.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

{
  char v0;

  OUTLINED_FUNCTION_35_51();
  if (!v0)
    OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_32();
}

void static Layout.Captions.bubblePadding.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubblePadding, (double *)&static Layout.Captions.bubblePadding);
}

void static Layout.Captions.bubblePadding.modify()
{
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t *Layout.Captions.transcriptTrailingOffset.unsafeMutableAddressor()
{
  return &static Layout.Captions.transcriptTrailingOffset;
}

void static Layout.Captions.transcriptTrailingOffset.getter()
{
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_32();
}

void static Layout.Captions.transcriptTrailingOffset.setter(double a1)
{
  OUTLINED_FUNCTION_2_0();
  static Layout.Captions.transcriptTrailingOffset = *(_QWORD *)&a1;
  OUTLINED_FUNCTION_15_103();
}

void static Layout.Captions.transcriptTrailingOffset.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void static Layout.Captions.scrollGradientHeight.getter()
{
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]), sel_lineHeight);
  OUTLINED_FUNCTION_33_70();
  OUTLINED_FUNCTION_12_1();
}

void one-time initialization function for headerImageSize()
{
  static Layout.Captions.headerImageSize = 0x4040000000000000;
}

void static Layout.Captions.headerImageSize.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

void static Layout.Captions.headerImageSize.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for headerImageSize, (double *)&static Layout.Captions.headerImageSize);
}

void static Layout.Captions.headerImageSize.modify()
{
  if (one-time initialization token for headerImageSize != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for headerSmallImageSize()
{
  static Layout.Captions.headerSmallImageSize = 0x4030000000000000;
}

uint64_t *Layout.Captions.headerSmallImageSize.unsafeMutableAddressor()
{
  if (one-time initialization token for headerSmallImageSize != -1)
    swift_once();
  return &static Layout.Captions.headerSmallImageSize;
}

void static Layout.Captions.headerSmallImageSize.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

void static Layout.Captions.headerSmallImageSize.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for headerSmallImageSize, (double *)&static Layout.Captions.headerSmallImageSize);
}

void static Layout.Captions.headerSmallImageSize.modify()
{
  if (one-time initialization token for headerSmallImageSize != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void static Layout.Captions.bubbleHorizontalPadding.getter()
{
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  OUTLINED_FUNCTION_9_4();
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]), sel_lineHeight);
  OUTLINED_FUNCTION_33_70();
}

void one-time initialization function for bubbleAvatarPadding()
{
  static Layout.Captions.bubbleAvatarPadding = 0x4020000000000000;
}

uint64_t *Layout.Captions.bubbleAvatarPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleAvatarPadding != -1)
    swift_once();
  return &static Layout.Captions.bubbleAvatarPadding;
}

void static Layout.Captions.bubbleAvatarPadding.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

void static Layout.Captions.bubbleAvatarPadding.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleAvatarPadding, (double *)&static Layout.Captions.bubbleAvatarPadding);
}

void static Layout.Captions.bubbleAvatarPadding.modify()
{
  if (one-time initialization token for bubbleAvatarPadding != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for bubbleMiniAvatarPadding()
{
  static Layout.Captions.bubbleMiniAvatarPadding = 0x4010000000000000;
}

uint64_t *Layout.Captions.bubbleMiniAvatarPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for bubbleMiniAvatarPadding != -1)
    swift_once();
  return &static Layout.Captions.bubbleMiniAvatarPadding;
}

void static Layout.Captions.bubbleMiniAvatarPadding.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

void static Layout.Captions.bubbleMiniAvatarPadding.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleMiniAvatarPadding, (double *)&static Layout.Captions.bubbleMiniAvatarPadding);
}

void static Layout.Captions.bubbleMiniAvatarPadding.modify()
{
  if (one-time initialization token for bubbleMiniAvatarPadding != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for bubbleSnapDistance()
{
  static Layout.Captions.bubbleSnapDistance = 0x4062C00000000000;
}

void static Layout.Captions.bubbleSnapDistance.getter()
{
  static Layout.Captions.bubblePadding.getter();
}

void static Layout.Captions.bubbleSnapDistance.setter(double a1)
{
  static Layout.Captions.bubblePadding.setter(a1, (uint64_t)&one-time initialization token for bubbleSnapDistance, (double *)&static Layout.Captions.bubbleSnapDistance);
}

void static Layout.Captions.bubblePadding.setter(double a1, uint64_t a2, double *a3)
{
  char v5;

  OUTLINED_FUNCTION_35_51();
  if (!v5)
    OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_2_0();
  *a3 = a1;
  OUTLINED_FUNCTION_15_103();
}

void static Layout.Captions.bubbleSnapDistance.modify()
{
  if (one-time initialization token for bubbleSnapDistance != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for subtitleCornerRadius()
{
  static Layout.Captions.subtitleCornerRadius = 0x4028000000000000;
}

uint64_t *Layout.Captions.subtitleCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleCornerRadius != -1)
    swift_once();
  return &static Layout.Captions.subtitleCornerRadius;
}

void static Layout.Captions.subtitleCornerRadius.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleSmallCornerRadius()
{
  static Layout.Captions.subtitleSmallCornerRadius = 0x4032000000000000;
}

uint64_t *Layout.Captions.subtitleSmallCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleSmallCornerRadius != -1)
    swift_once();
  return &static Layout.Captions.subtitleSmallCornerRadius;
}

void static Layout.Captions.subtitleSmallCornerRadius.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

id one-time initialization function for subtitleSmallFont()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A90]);
  static Layout.Captions.subtitleSmallFont = (uint64_t)result;
  return result;
}

uint64_t *Layout.Captions.subtitleSmallFont.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleSmallFont != -1)
    swift_once();
  return &static Layout.Captions.subtitleSmallFont;
}

id static Layout.Captions.subtitleSmallFont.getter()
{
  return static Layout.Captions.subtitleSmallFont.getter((uint64_t)&one-time initialization token for subtitleSmallFont, (id *)&static Layout.Captions.subtitleSmallFont);
}

id one-time initialization function for subtitleFont()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 44.0, *MEMORY[0x1E0DC1438]);
  static Layout.Captions.subtitleFont = (uint64_t)result;
  return result;
}

uint64_t *Layout.Captions.subtitleFont.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleFont != -1)
    swift_once();
  return &static Layout.Captions.subtitleFont;
}

id static Layout.Captions.subtitleFont.getter()
{
  return static Layout.Captions.subtitleSmallFont.getter((uint64_t)&one-time initialization token for subtitleFont, (id *)&static Layout.Captions.subtitleFont);
}

id static Layout.Captions.subtitleSmallFont.getter(uint64_t a1, id *a2)
{
  char v3;

  OUTLINED_FUNCTION_35_51();
  if (!v3)
    OUTLINED_FUNCTION_36_8();
  return *a2;
}

void one-time initialization function for subtitleStyleMinWidth()
{
  static Layout.Captions.subtitleStyleMinWidth = 0x4072C00000000000;
}

uint64_t *Layout.Captions.subtitleStyleMinWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMinWidth != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleMinWidth;
}

void static Layout.Captions.subtitleStyleMinWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleMinWidthSmallLayout()
{
  static Layout.Captions.subtitleStyleMinWidthSmallLayout = 0x406F400000000000;
}

uint64_t *Layout.Captions.subtitleStyleMinWidthSmallLayout.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMinWidthSmallLayout != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleMinWidthSmallLayout;
}

void static Layout.Captions.subtitleStyleMinWidthSmallLayout.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleMaxWidth()
{
  static Layout.Captions.subtitleStyleMaxWidth = 0x408A300000000000;
}

uint64_t *Layout.Captions.subtitleStyleMaxWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMaxWidth != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleMaxWidth;
}

void static Layout.Captions.subtitleStyleMaxWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleMaxWidthSmallLayout()
{
  static Layout.Captions.subtitleStyleMaxWidthSmallLayout = 0x4075C00000000000;
}

uint64_t *Layout.Captions.subtitleStyleMaxWidthSmallLayout.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleMaxWidthSmallLayout != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleMaxWidthSmallLayout;
}

void static Layout.Captions.subtitleStyleMaxWidthSmallLayout.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleHorizontalPadding()
{
  static Layout.Captions.subtitleStyleHorizontalPadding = 0x4030000000000000;
}

uint64_t *Layout.Captions.subtitleStyleHorizontalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleHorizontalPadding;
}

void static Layout.Captions.subtitleStyleHorizontalPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleVerticalPadding()
{
  static Layout.Captions.subtitleStyleVerticalPadding = 0x401C000000000000;
}

uint64_t *Layout.Captions.subtitleStyleVerticalPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleVerticalPadding != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleVerticalPadding;
}

void static Layout.Captions.subtitleStyleVerticalPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleDefaultHeight()
{
  one-time initialization function for subtitleStyleDefaultHeight();
}

{
  double *v0;
  id *v1;
  char v2;
  double v3;
  double v4;

  OUTLINED_FUNCTION_97_11();
  if (!v2)
    OUTLINED_FUNCTION_96_15();
  objc_msgSend(*v1, sel_lineHeight);
  v4 = v3;
  if (one-time initialization token for subtitleStyleVerticalPadding != -1)
    swift_once();
  *v0 = v4
      + *(double *)&static Layout.Captions.subtitleStyleVerticalPadding
      + *(double *)&static Layout.Captions.subtitleStyleVerticalPadding;
  OUTLINED_FUNCTION_12_1();
}

uint64_t *Layout.Captions.subtitleStyleDefaultHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultHeight != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleDefaultHeight;
}

void static Layout.Captions.subtitleStyleDefaultHeight.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleDefaultWidth()
{
  one-time initialization function for subtitleStyleDefaultWidth();
}

{
  double *v0;
  double *v1;
  char v2;
  double v3;

  OUTLINED_FUNCTION_97_11();
  if (!v2)
    OUTLINED_FUNCTION_96_15();
  v3 = *v1;
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1)
    swift_once();
  *v0 = v3
      + *(double *)&static Layout.Captions.subtitleStyleHorizontalPadding
      + *(double *)&static Layout.Captions.subtitleStyleHorizontalPadding;
  OUTLINED_FUNCTION_12_1();
}

uint64_t *Layout.Captions.subtitleStyleDefaultWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultWidth != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleDefaultWidth;
}

void static Layout.Captions.subtitleStyleDefaultWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleDefaultSmallHeight()
{
  one-time initialization function for subtitleStyleDefaultHeight();
}

uint64_t *Layout.Captions.subtitleStyleDefaultSmallHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultSmallHeight != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleDefaultSmallHeight;
}

void static Layout.Captions.subtitleStyleDefaultSmallHeight.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleStyleDefaultSmallWidth()
{
  one-time initialization function for subtitleStyleDefaultWidth();
}

uint64_t *Layout.Captions.subtitleStyleDefaultSmallWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleStyleDefaultSmallWidth != -1)
    swift_once();
  return &static Layout.Captions.subtitleStyleDefaultSmallWidth;
}

void static Layout.Captions.subtitleStyleDefaultSmallWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleBadgeAvatarSmallSize()
{
  static Layout.Captions.subtitleBadgeAvatarSmallSize = 0x4040000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeAvatarSmallSize.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeAvatarSmallSize != -1)
    swift_once();
  return &static Layout.Captions.subtitleBadgeAvatarSmallSize;
}

void static Layout.Captions.subtitleBadgeAvatarSmallSize.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleBadgeAvatarSize()
{
  static Layout.Captions.subtitleBadgeAvatarSize = 0x4044000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeAvatarSize.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeAvatarSize != -1)
    swift_once();
  return &static Layout.Captions.subtitleBadgeAvatarSize;
}

void static Layout.Captions.subtitleBadgeAvatarSize.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleBadgeCornerRadius()
{
  static Layout.Captions.subtitleBadgeCornerRadius = 0x4039000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeCornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeCornerRadius != -1)
    swift_once();
  return &static Layout.Captions.subtitleBadgeCornerRadius;
}

void static Layout.Captions.subtitleBadgeCornerRadius.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleBadgeTopLeadingBottomPadding()
{
  static Layout.Captions.subtitleBadgeTopLeadingBottomPadding = 0x4014000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeTopLeadingBottomPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeTopLeadingBottomPadding != -1)
    swift_once();
  return &static Layout.Captions.subtitleBadgeTopLeadingBottomPadding;
}

void static Layout.Captions.subtitleBadgeTopLeadingBottomPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for subtitleBadgeTrailingPadding()
{
  static Layout.Captions.subtitleBadgeTrailingPadding = 0x4039000000000000;
}

uint64_t *Layout.Captions.subtitleBadgeTrailingPadding.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitleBadgeTrailingPadding != -1)
    swift_once();
  return &static Layout.Captions.subtitleBadgeTrailingPadding;
}

void static Layout.Captions.subtitleBadgeTrailingPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void *Layout.DebugOverlay.minimumMarginsBetweenSections.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.minimumMarginsBetweenSections;
}

void *Layout.DebugOverlay.explanationLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.explanationLabelHorizontalInset;
}

void *Layout.DebugOverlay.marginBetweenExplanationLabels.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.marginBetweenExplanationLabels;
}

void *Layout.DebugOverlay.buttonHeight.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonHeight;
}

double static Layout.DebugOverlay.buttonHeight.getter()
{
  return OUTLINED_FUNCTION_23_6(40.0);
}

void *Layout.DebugOverlay.buttonCornerRadius.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonCornerRadius;
}

void *Layout.DebugOverlay.buttonHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonHorizontalInset;
}

void *Layout.DebugOverlay.buttonLabelHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.buttonLabelHorizontalInset;
}

void *Layout.DebugOverlay.marginBetweenButtons.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.marginBetweenButtons;
}

void *Layout.DebugOverlay.bottomVerticalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.bottomVerticalInset;
}

double static Layout.DebugOverlay.bottomVerticalInset.getter()
{
  return OUTLINED_FUNCTION_23_6(60.0);
}

void *Layout.DebugOverlay.nameInputHeight.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputHeight;
}

double static Layout.DebugOverlay.nameInputHeight.getter()
{
  return OUTLINED_FUNCTION_23_6(60.0);
}

void *Layout.DebugOverlay.nameInputHorizontalInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputHorizontalInset;
}

double static Layout.DebugOverlay.nameInputHorizontalInset.getter()
{
  return OUTLINED_FUNCTION_23_6(40.0);
}

void *Layout.DebugOverlay.nameInputContentInset.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputContentInset;
}

void *Layout.DebugOverlay.nameInputMarginBetweenContent.unsafeMutableAddressor()
{
  return &static Layout.DebugOverlay.nameInputMarginBetweenContent;
}

float static Layout.AudioVisualization.minimumRingScale.getter()
{
  return 0.98;
}

float static Layout.AudioVisualization.maximumRingScale.getter()
{
  return 0.64;
}

double static Layout.AudioVisualization.borderWidthFactor.getter()
{
  return 0.06;
}

float static Layout.AudioVisualization.reducedMotionFixedRingScale.getter()
{
  return 0.35;
}

void one-time initialization function for borderWidth()
{
  static Layout.AnnotationDisc.borderWidth = 0x3FF0000000000000;
}

uint64_t *Layout.AnnotationDisc.borderWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for borderWidth != -1)
    swift_once();
  return &static Layout.AnnotationDisc.borderWidth;
}

void static Layout.AnnotationDisc.borderWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

uint64_t *Layout.AnnotationDisc.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  return &static Layout.AnnotationDisc.cornerRadius;
}

void static Layout.AnnotationDisc.cornerRadius.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

__n128 one-time initialization function for instrinsicContentSize()
{
  __n128 result;

  __asm { FMOV            V0.2D, #22.0 }
  static Layout.AnnotationDisc.instrinsicContentSize = (__int128)result;
  return result;
}

__int128 *Layout.AnnotationDisc.instrinsicContentSize.unsafeMutableAddressor()
{
  if (one-time initialization token for instrinsicContentSize != -1)
    swift_once();
  return &static Layout.AnnotationDisc.instrinsicContentSize;
}

double static Layout.AnnotationDisc.instrinsicContentSize.getter()
{
  return static Layout.AnnotationDisc.instrinsicContentSize.getter((uint64_t)&one-time initialization token for instrinsicContentSize, (uint64_t)&static Layout.AnnotationDisc.instrinsicContentSize);
}

double one-time initialization function for bottomInsetAfterPadding()
{
  double result;

  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_11_6();
  static Platform.current.getter();
  OUTLINED_FUNCTION_12_4();
  *(double *)&static Layout.MediaPip.bottomInsetAfterPadding = 16.0 - static Layout.MediaPip.padding.getter();
  OUTLINED_FUNCTION_0();
  return result;
}

void static Layout.MediaPip.bottomInsetAfterPadding.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double static Layout.MediaPip.controlsDodgingTopInset.getter()
{
  return OUTLINED_FUNCTION_23_6(58.0);
}

int64x2_t one-time initialization function for leadingImageSize()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4049000000000000uLL);
  static Layout.Nickname.leadingImageSize = (__int128)result;
  return result;
}

double static Layout.Nickname.leadingImageSize.getter()
{
  return static Layout.AnnotationDisc.instrinsicContentSize.getter((uint64_t)&one-time initialization token for leadingImageSize, (uint64_t)&static Layout.Nickname.leadingImageSize);
}

double static Layout.AnnotationDisc.instrinsicContentSize.getter(uint64_t a1, uint64_t a2)
{
  char v3;

  OUTLINED_FUNCTION_35_51();
  if (!v3)
    swift_once();
  return *(double *)a2;
}

void one-time initialization function for distanceFromEdge()
{
  static Layout.Nickname.distanceFromEdge = 0x4028000000000000;
}

void static Layout.Nickname.distanceFromEdge.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for distanceBetweenImageAndLabels()
{
  static Layout.Nickname.distanceBetweenImageAndLabels = 0x4022000000000000;
}

void static Layout.Nickname.distanceBetweenImageAndLabels.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void one-time initialization function for distanceBetweenLabels()
{
  static Layout.Nickname.distanceBetweenLabels = 0x4000000000000000;
}

void static Layout.Nickname.distanceBetweenLabels.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

double static Layout.PTT.topDetailContainerMarginScale.getter()
{
  return 0.09;
}

double static Layout.PTT.bottomButtonContainerMarginScale.getter()
{
  return 0.07;
}

double static Layout.PTT.pttActionButtonSize.getter()
{
  return OUTLINED_FUNCTION_23_6(80.0);
}

double static Layout.PTT.maxiPadContainerWidth.getter()
{
  return 375.0;
}

double static Layout.PTT.fullScreenAvatarSize.getter()
{
  return OUTLINED_FUNCTION_23_6(60.0);
}

void *Layout.PTT.pttAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.pttAppIconSize;
}

void *Layout.PTT.appIconSubtitleVerticalOffset.unsafeMutableAddressor()
{
  return &static Layout.PTT.appIconSubtitleVerticalOffset;
}

double static Layout.PTT.appIconSubtitleVerticalOffset.getter()
{
  return -3.0;
}

double static Layout.PTT.disclosureButtonTopOffset.getter()
{
  return -2.0;
}

void *Layout.PTT.minimumAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.minimumAppIconSize;
}

void *Layout.PTT.maximumAppIconSize.unsafeMutableAddressor()
{
  return &static Layout.PTT.maximumAppIconSize;
}

double static Layout.PTT.maximumAppIconSize.getter()
{
  return 23.0;
}

double static Layout.PTT.pillMinimumWidth.getter()
{
  return 77.0;
}

void one-time initialization function for defaultTipWidth()
{
  static Layout.Reactions.defaultTipWidth = closure #1 in variable initialization expression of static Layout.Reactions.defaultTipWidth();
}

double closure #1 in variable initialization expression of static Layout.Reactions.defaultTipWidth()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  v3 = 362.0;
  if (v2 != (id)1)
  {
    v4 = objc_msgSend(v0, sel_currentDevice);
    v5 = objc_msgSend(v4, sel_userInterfaceIdiom);

    if (v5 != (id)5)
    {
      v6 = (void *)objc_opt_self();
      v7 = objc_msgSend(v6, sel_mainScreen);
      objc_msgSend(v7, sel_bounds);
      v9 = v8;

      v10 = objc_msgSend(v6, sel_mainScreen);
      objc_msgSend(v10, sel_bounds);
      v12 = v11;

      if (v12 >= v9)
        v12 = v9;
      v13 = static Layout.MediaPip.padding.getter();
      if (one-time initialization token for shared != -1)
        swift_once();
      v14 = static Defaults.shared;
      (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
      v15 = static Platform.current.getter();
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 488))(v15);
      return v12 - (v13 + v13);
    }
  }
  return v3;
}

void static Layout.Reactions.defaultTipWidth.getter()
{
  static Layout.ShareCard.appShelfSeparatorInsetBuffer.getter();
}

void static Layout.Reactions.pickerPadding.getter()
{
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_32();
}

void static Layout.Reactions.pickerPadding.setter(double a1)
{
  OUTLINED_FUNCTION_2_0();
  static Layout.Reactions.pickerPadding = *(_QWORD *)&a1;
  OUTLINED_FUNCTION_15_103();
}

void static Layout.Reactions.pickerPadding.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for Layout()
{
  OUTLINED_FUNCTION_34_0();
}

void *__swift_memcpy360_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t getEnumTagSinglePayload for Layout.MultiwayFaceTime(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 360))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Layout.MultiwayFaceTime(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 360) = v3;
  return result;
}

void type metadata accessor for Layout.MultiwayFaceTime()
{
  OUTLINED_FUNCTION_34_0();
}

void *__swift_memcpy400_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t getEnumTagSinglePayload for Layout.ConversationControls(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 400))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Layout.ConversationControls(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 400) = v3;
  return result;
}

void type metadata accessor for Layout.ConversationControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ConversationControlsAppLaunchPillView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ConversationControlsTrailingActionPillView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.SharePlayDiscoverabilityView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ShareCard()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for Layout.Roster(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Layout.Roster(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

void type metadata accessor for Layout.Roster()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.LocalParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.EffectsControlsView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.LocalParticipantViewCameraControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ParticipantViews()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ParticipantMonogramViews()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ParticipantAlertViews()
{
  OUTLINED_FUNCTION_34_0();
}

void *__swift_memcpy760_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2F8uLL);
}

uint64_t getEnumTagSinglePayload for Layout.InCallControls(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 760))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Layout.InCallControls(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 760) = v3;
  return result;
}

void type metadata accessor for Layout.InCallControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.InCallControlsButton()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ParticipantContactAvatars()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.ParticipantRingView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.Staging()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.Captions()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.DebugOverlay()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.AudioVisualization()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.AnnotationDisc()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.MediaPip()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.Nickname()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.PTT()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Layout.Reactions()
{
  OUTLINED_FUNCTION_34_0();
}

double OUTLINED_FUNCTION_39_71()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void OUTLINED_FUNCTION_76_28(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 160) = a1;
}

double OUTLINED_FUNCTION_85_24()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

void OUTLINED_FUNCTION_87_18(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 128) = a1;
}

double OUTLINED_FUNCTION_93_13()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double OUTLINED_FUNCTION_99_14()
{
  return 11.0;
}

uint64_t OUTLINED_FUNCTION_101_18()
{
  return static Platform.current.getter();
}

Swift::Void __swiftcall ParticipantDimmingView.setHidden(_:)(Swift::Bool a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  void *v9;
  uint64_t v10;
  Swift::Bool v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for OS_dispatch_queue();
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    objc_msgSend(v2, sel_setHidden_, 0);
    v9 = (void *)objc_opt_self();
    v10 = OUTLINED_FUNCTION_2_12();
    *(_QWORD *)(v10 + 16) = v2;
    v11 = a1;
    *(_BYTE *)(v10 + 24) = a1;
    v20 = partial apply for closure #1 in ParticipantDimmingView.setHidden(_:);
    v21 = v10;
    v12 = MEMORY[0x1E0C809B0];
    v18 = MEMORY[0x1E0C809B0];
    v19 = 1107296256;
    v13 = OUTLINED_FUNCTION_42_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
    v14 = v2;
    swift_release();
    v15 = OUTLINED_FUNCTION_2_12();
    *(_QWORD *)(v15 + 16) = v14;
    *(_BYTE *)(v15 + 24) = v11;
    v20 = partial apply for closure #2 in ParticipantDimmingView.setHidden(_:);
    v21 = v15;
    v18 = v12;
    v19 = 1107296256;
    v16 = OUTLINED_FUNCTION_42_1((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> ());
    v17 = v14;
    swift_release();
    objc_msgSend(v9, sel_animateWithDuration_delay_options_animations_completion_, 4, v13, v16, 0.3, 0.0);
    _Block_release(v16);
    _Block_release(v13);
  }
  else
  {
    __break(1u);
  }
}

id ParticipantDimmingView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id ParticipantDimmingView.init(frame:)()
{
  uint64_t v0;
  double v1;
  objc_super *v2;
  SEL v3;
  id v4;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  v1 = OUTLINED_FUNCTION_15_0();
  v4 = objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
  objc_msgSend(v4, sel_setAlpha_, 0.0);
  if (one-time initialization token for unfocusedOverlay != -1)
    swift_once();
  objc_msgSend(v4, sel_setBackgroundColor_, static Colors.ParticipantGridView.unfocusedOverlay);
  objc_msgSend(v4, sel_setHidden_, 1);

  return v4;
}

id ParticipantDimmingView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantDimmingView.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ParticipantDimmingView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BD5DEFB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantDimmingView.setHidden(_:)()
{
  uint64_t v0;
  double v1;

  v1 = 1.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 0.0;
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, v1);
}

id partial apply for closure #2 in ParticipantDimmingView.setHidden(_:)(int a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setHidden_, ((*(unsigned __int8 *)(v1 + 24) ^ a1) & 1) == 0);
}

uint64_t type metadata accessor for ParticipantDimmingView()
{
  return objc_opt_self();
}

void NoticeView.noticeViewModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  _s15ConversationKit11ParticipantVWOcTm_2(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for NoticeViewModel);
}

uint64_t NoticeView.init(noticeViewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return outlined init with take of NoticeViewModel(a1, a2);
}

uint64_t outlined init with take of NoticeViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NoticeViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void NoticeView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  closure #1 in NoticeView.body.getter(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  v7 = static Edge.Set.all.getter();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v5, a1, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
  v8 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>)
              + 36);
  *(_BYTE *)v8 = v7;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_BYTE *)(v8 + 40) = 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>);
}

void closure #1 in NoticeView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - v15;
  *(_QWORD *)v16 = static VerticalAlignment.center.getter();
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  closure #1 in closure #1 in NoticeView.body.getter(a1, (uint64_t)&v16[*(int *)(v17 + 44)]);
  NoticeViewModel.actionButtons()();
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v16, (uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v10, v4);
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v13, a2, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0));
  v18((char *)(a2 + *(int *)(v19 + 48)), v7, v4);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v10, v4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
  v20(v7, v4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>);
}

uint64_t associated type witness table accessor for View.Body : View in NoticeView()
{
  return swift_getOpaqueTypeConformance2();
}

void closure #1 in closure #1 in NoticeView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[288];
  _BYTE v77[304];
  char v78;
  char v79;
  _QWORD v80[45];
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  _BYTE v84[295];
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;

  v73 = a2;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>.Storage);
  MEMORY[0x1E0C80A78](v71);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  MEMORY[0x1E0C80A78](v62);
  v64 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v70);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  MEMORY[0x1E0C80A78](v9);
  v75 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v74 = (uint64_t)&v57 - v17;
  v65 = static Alignment.center.getter();
  v66 = v18;
  v19 = *(id *)(a1 + 32);
  v20 = Image.init(uiImage:)();
  v21 = *(int *)(type metadata accessor for NoticeViewModel() + 40);
  v72 = (_QWORD *)a1;
  v22 = *(unsigned __int8 *)(a1 + v21);
  if (v22 == 1)
  {
    v80[0] = partial apply for closure #1 in Image.iconImage();
    v80[1] = v20;
    LOBYTE(v80[2]) = 0;
  }
  else
  {
    v80[0] = v20;
    v80[1] = 0;
    LOBYTE(v80[2]) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, MEMORY[0x1E0CD9318]);
  _ConditionalContent<>.init(storage:)();
  v23 = v81;
  v68 = v82;
  v67 = v83;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v24 = v91;
  v25 = v92;
  v26 = v93;
  v27 = v94;
  v29 = v95;
  v28 = v96;
  if ((v22 & 1) != 0)
  {
    v30 = v66;
    *(_QWORD *)v4 = v65;
    *((_QWORD *)v4 + 1) = v30;
    v31 = v68;
    *((_QWORD *)v4 + 2) = v23;
    *((_QWORD *)v4 + 3) = v31;
    v4[32] = v67;
    *((_QWORD *)v4 + 5) = v24;
    v4[48] = v25;
    *((_QWORD *)v4 + 7) = v26;
    v4[64] = v27;
    *((_QWORD *)v4 + 9) = v29;
    *((_QWORD *)v4 + 10) = v28;
    swift_storeEnumTagMultiPayload();
    outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v32 = (uint64_t)v69;
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v33 = *(int *)(v61 + 20);
    v60 = v23;
    v34 = v63;
    v35 = &v63[v33];
    v61 = (uint64_t)v15;
    v36 = *MEMORY[0x1E0CDB0C0];
    v58 = v95;
    v59 = v96;
    v37 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
    __asm { FMOV            V0.2D, #10.0 }
    *v34 = _Q0;
    v43 = v64;
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v34, v64, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_WORD *)(v43 + *(int *)(v62 + 36)) = 256;
    outlined init with copy of Participant.ScreenInfo?(v43, (uint64_t)&v8[*(int *)(v70 + 36)], &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    v44 = v66;
    *(_QWORD *)v8 = v65;
    *((_QWORD *)v8 + 1) = v44;
    v45 = v68;
    *((_QWORD *)v8 + 2) = v60;
    *((_QWORD *)v8 + 3) = v45;
    v8[32] = v67;
    *((_QWORD *)v8 + 5) = v24;
    v8[48] = v25;
    *((_QWORD *)v8 + 7) = v26;
    v8[64] = v27;
    *((_QWORD *)v8 + 9) = v58;
    *((_QWORD *)v8 + 10) = v59;
    outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v43, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    outlined destroy of AccountUpdateNotice((uint64_t)v34, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    outlined init with copy of Participant.ScreenInfo?((uint64_t)v8, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v32 = (uint64_t)v69;
    v15 = (char *)v61;
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
  }
  outlined init with take of Participant.VideoInfo?(v32, (uint64_t)v15, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  outlined consume of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage();
  v46 = v74;
  outlined init with take of Participant.VideoInfo?((uint64_t)v15, v74, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  v71 = static HorizontalAlignment.center.getter();
  closure #3 in closure #1 in closure #1 in NoticeView.body.getter(v72, v76);
  v77[296] = 1;
  memcpy(&v77[7], v76, 0x120uLL);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v47 = v97;
  v48 = v99;
  v49 = v101;
  v50 = v102;
  v79 = v98;
  v78 = v100;
  v51 = v75;
  outlined init with copy of Participant.ScreenInfo?(v46, v75, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  LOBYTE(v46) = v79;
  v52 = v78;
  v53 = v51;
  v54 = v73;
  outlined init with copy of Participant.ScreenInfo?(v53, v73, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  v55 = (void *)(v54
               + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>))
                        + 48));
  v56 = v71;
  v80[0] = v71;
  v80[1] = 0;
  LOBYTE(v80[2]) = 1;
  memcpy((char *)&v80[2] + 1, v77, 0x127uLL);
  v80[39] = v47;
  LOBYTE(v80[40]) = v46;
  v80[41] = v48;
  LOBYTE(v80[42]) = v52;
  v80[43] = v49;
  v80[44] = v50;
  memcpy(v55, v80, 0x168uLL);
  outlined retain of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>((uint64_t)v80);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
  v81 = v56;
  v82 = 0;
  v83 = 1;
  memcpy(v84, v77, sizeof(v84));
  v85 = v47;
  v86 = v46;
  v87 = v48;
  v88 = v52;
  v89 = v49;
  v90 = v50;
  outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>((uint64_t)&v81);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v75, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>);
}

uint64_t closure #3 in closure #1 in closure #1 in NoticeView.body.getter@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[144];
  _BYTE __dst[144];
  _BYTE v34[144];
  _BYTE v35[144];
  _QWORD __src[36];
  _BYTE v37[144];
  _BYTE v38[152];

  v3 = a1[1];
  __src[0] = *a1;
  __src[1] = v3;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v4 = Text.init<A>(_:)();
  v6 = v5;
  v8 = v7 & 1;
  static Font.Weight.semibold.getter();
  v9 = Text.fontWeight(_:)();
  v11 = v10;
  v13 = v12;
  LOBYTE(v3) = v14 & 1;
  outlined consume of Text.Storage(v4, v6, v8);
  swift_bridgeObjectRelease();
  v15 = static Alignment.leading.getter();
  LOBYTE(v29) = 1;
  LOBYTE(v27) = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v27, 0, v29, v15, v16, v9, v11, v3, v13);
  outlined consume of Text.Storage(v9, v11, v3);
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  v17 = a1[3];
  __src[0] = a1[2];
  __src[1] = v17;
  swift_bridgeObjectRetain();
  v18 = Text.init<A>(_:)();
  v20 = v19;
  v22 = v21;
  LOBYTE(v3) = v23 & 1;
  v24 = static Alignment.leading.getter();
  LOBYTE(v30) = 1;
  LOBYTE(v28) = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v28, 0, v30, v24, v25, v18, v20, v3, v22);
  outlined consume of Text.Storage(v18, v20, v3);
  swift_bridgeObjectRelease();
  memcpy(v32, __src, sizeof(v32));
  memcpy(v34, __dst, sizeof(v34));
  memcpy(v35, v32, sizeof(v35));
  memcpy(__src, __dst, 0x90uLL);
  memcpy(&__src[18], v32, 0x90uLL);
  memcpy(a2, __src, 0x120uLL);
  memcpy(v37, v32, sizeof(v37));
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v34);
  outlined retain of ModifiedContent<Text, _PaddingLayout>((uint64_t)v35);
  outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v37);
  memcpy(v38, __dst, 0x90uLL);
  return outlined release of ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _FlexFrameLayout>((uint64_t)v38);
}

void NoticeViewModel.actionButtons()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v1 = type metadata accessor for NoticeButtonStyle();
  MEMORY[0x1E0C80A78](v1);
  v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
  closure #1 in NoticeViewModel.actionButtons()(v0, (uint64_t)&v6[*(int *)(v7 + 44)]);
  *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  swift_storeEnumTagMultiPayload();
  v8 = (uint64_t *)((char *)v3 + *(int *)(v1 + 20));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<Material?>.Content);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>, MEMORY[0x1E0CDFB10]);
  lazy protocol witness table accessor for type NoticeButtonStyle and conformance NoticeButtonStyle();
  View.buttonStyle<A>(_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for NoticeButtonStyle);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?)>>);
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = type metadata accessor for NoticeViewModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = v24;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v10 = (void *)a2[4];
    v9 = a2[5];
    a1[4] = v10;
    a1[5] = v9;
    v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    a1[8] = a2[8];
    v12 = *(int *)(v4 + 36);
    v26 = (char *)a2 + v12;
    v27 = (char *)a1 + v12;
    v13 = type metadata accessor for UUID();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v27, v26, v13);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
    v16 = v6[12];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[13];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t destroy for NoticeView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for NoticeViewModel() + 36);
  v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for NoticeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v23;
  char *v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  a1[8] = a2[8];
  v9 = (int *)type metadata accessor for NoticeViewModel();
  v10 = v9[9];
  v23 = (char *)a2 + v10;
  v24 = (char *)a1 + v10;
  v11 = type metadata accessor for UUID();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v24, v23, v11);
  *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
  *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
  v14 = v9[12];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v9[13];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NoticeView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for NoticeViewModel();
  v8 = v7[9];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  *(_QWORD *)((char *)a1 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
  v12 = v7[12];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  v16 = v7[13];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for NoticeView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = (int *)type metadata accessor for NoticeViewModel();
  v6 = v5[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
  *(_OWORD *)(a1 + v5[13]) = *(_OWORD *)(a2 + v5[13]);
  return a1;
}

_QWORD *assignWithTake for NoticeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  a1[4] = a2[4];

  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for NoticeViewModel();
  v10 = v9[9];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
  *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
  *(_OWORD *)((char *)a1 + v9[12]) = *(_OWORD *)((char *)a2 + v9[12]);
  swift_release();
  *(_OWORD *)((char *)a1 + v9[13]) = *(_OWORD *)((char *)a2 + v9[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD5E0448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_4_148();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for NoticeView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD5E047C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_4_148();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for NoticeView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for NoticeView;
  if (!type metadata singleton initialization cache for NoticeView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for NoticeView()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NoticeViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, MEMORY[0x1E0CDFCC0]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>, ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>>, ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>)>>, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void closure #1 in NoticeViewModel.actionButtons()(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (uint64_t)&v33 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - v17;
  v19 = a1[6];
  if (v19)
  {
    v20 = a1[5];
    v21 = type metadata accessor for NoticeViewModel();
    v33 = (uint64_t)&v33;
    MEMORY[0x1E0C80A78](v21);
    *(&v33 - 2) = v20;
    *(&v33 - 1) = v19;
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    Button.init(action:label:)();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v23);
  }
  outlined init with take of Participant.VideoInfo?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  v24 = a1[8];
  if (v24)
  {
    v25 = a1[7];
    v26 = type metadata accessor for NoticeViewModel();
    MEMORY[0x1E0C80A78](v26);
    *(&v33 - 2) = v25;
    *(&v33 - 1) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    Button.init(action:label:)();
    v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v28);
  }
  outlined init with take of Participant.VideoInfo?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  v29 = v35;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v18, v35, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  v30 = v36;
  outlined init with copy of Participant.ScreenInfo?((uint64_t)v12, v36, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  v31 = v34;
  outlined init with copy of Participant.ScreenInfo?(v29, v34, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<ModifiedContent<Text, _FlexFrameLayout>>?, Button<ModifiedContent<Text, _FlexFrameLayout>>?));
  outlined init with copy of Participant.ScreenInfo?(v30, v31 + *(int *)(v32 + 48), &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Button<ModifiedContent<Text, _FlexFrameLayout>>?);
}

unint64_t lazy protocol witness table accessor for type NoticeButtonStyle and conformance NoticeButtonStyle()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle;
  if (!lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle)
  {
    v1 = type metadata accessor for NoticeButtonStyle();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for NoticeButtonStyle, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoticeButtonStyle and conformance NoticeButtonStyle);
  }
  return result;
}

void *closure #1 in closure #1 in closure #1 in NoticeViewModel.actionButtons()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD __src[18];

  __src[0] = a1;
  __src[1] = a2;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v4 = Text.init<A>(_:)();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Alignment.center.getter();
  LOBYTE(v15) = 1;
  LOBYTE(v14) = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v14, 0, v15, v11, v12, v4, v6, v10, v8);
  outlined consume of Text.Storage(v4, v6, v10);
  swift_bridgeObjectRelease();
  return memcpy(a3, __src, 0x90uLL);
}

void *partial apply for closure #1 in closure #2 in closure #1 in NoticeViewModel.actionButtons()@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in NoticeViewModel.actionButtons()(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined copy of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage()
{
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>, MEMORY[0x1E0CD89F0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout>);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, MEMORY[0x1E0CDFCF8]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined consume of _ConditionalContent<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _PositionLayout>>, Image>.Storage()
{
  return swift_release();
}

uint64_t outlined retain of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_BYTE *)(a1 + 184);
  outlined copy of Text.Storage(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _FlexFrameLayout>, ModifiedContent<Text, _FlexFrameLayout>)>>, _FrameLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_BYTE *)(a1 + 184);
  outlined consume of Text.Storage(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

double closure #1 in Image.iconImage()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  double result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;

  v2 = type metadata accessor for Image.ResizingMode();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  GeometryProxy.size.getter();
  v7 = v6 * 0.5;
  GeometryProxy.size.getter();
  v9 = v8 * 0.5;
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF6F8], v2);
  v10 = Image.resizable(capInsets:resizingMode:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v11 = v16;
  v12 = v17;
  v13 = v18;
  v14 = v19;
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_BYTE *)(a1 + 48) = v14;
  result = *(double *)&v20;
  *(_OWORD *)(a1 + 56) = v20;
  *(double *)(a1 + 72) = v7;
  *(double *)(a1 + 80) = v9;
  return result;
}

double partial apply for closure #1 in Image.iconImage()@<D0>(uint64_t a1@<X8>)
{
  return closure #1 in Image.iconImage()(a1);
}

void *Animation.InCallControls.shortTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.shortTimingParameters;
}

void *Animation.MultiwayView.inCallControlsAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.inCallControlsAnimationDuration;
}

void *Animation.AudioVisualization.preferredFramesPerSecond.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.preferredFramesPerSecond;
}

void *Animation.AudioVisualization.numberOfEchoes.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.numberOfEchoes;
}

void *Animation.AudioVisualization.echoTime.unsafeMutableAddressor()
{
  return &static Animation.AudioVisualization.echoTime;
}

void *Animation.ParticipantView.screenSharingRotationDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.screenSharingRotationDuration;
}

void *Animation.InCallControls.gridButtonTiming.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.gridButtonTiming;
}

__int128 *Animation.ConversationControls.springParameters.unsafeMutableAddressor()
{
  if (one-time initialization token for springParameters != -1)
    swift_once();
  return &static Animation.ConversationControls.springParameters;
}

void *Animation.LocalPreview.futureThrowTime.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.futureThrowTime;
}

void *Animation.ParticipantView.rotationDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.rotationDuration;
}

void *Animation.MultiwayView.fastProminenceTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.fastProminenceTimingParameters;
}

void *Animation.MultiwayView.slowProminenceTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.slowProminenceTimingParameters;
}

void *Animation.ParticipantView.flipDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.flipDuration;
}

void *Animation.ParticipantView.videoCrossFade.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.videoCrossFade;
}

void *Animation.MultiwayView.secondsBeforeHidingLeftParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsBeforeHidingLeftParticipants;
}

void *Animation.MultiwayView.secondsBeforeHidingWaitingParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsBeforeHidingWaitingParticipants;
}

void *Animation.LocalPreview.initialVelocityFactor.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.initialVelocityFactor;
}

void *Animation.LocalPreview.springMass.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.springMass;
}

uint64_t *Animation.LocalPreview.springStiffness.unsafeMutableAddressor()
{
  if (one-time initialization token for springStiffness != -1)
    swift_once();
  return &static Animation.LocalPreview.springStiffness;
}

void *Animation.LocalPreview.springDamping.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.springDamping;
}

void *Animation.MultiwayView.crossFadeDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.crossFadeDuration;
}

void *Animation.MultiwayView.inCallControlsDisappearingDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.inCallControlsDisappearingDuration;
}

void *Animation.MostActiveParticipantView.showShadowDuration.unsafeMutableAddressor()
{
  return &static Animation.MostActiveParticipantView.showShadowDuration;
}

void *Animation.MultiwayView.rosterVisibilityAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.rosterVisibilityAnimationDuration;
}

void *Animation.MultiwayView.secondsToWaitForFirstRemoteFrame.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsToWaitForFirstRemoteFrame;
}

void *Animation.MultiwayView.secondsToRestoreRungParticipants.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.secondsToRestoreRungParticipants;
}

void *Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration;
}

void *Animation.ParticipantView.blurLocalParticipantAfterFirstVideoFrameDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurLocalParticipantAfterFirstVideoFrameDuration;
}

void *Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration;
}

void *Animation.MultiwayView.unfocusedOverlayAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.unfocusedOverlayAnimationDuration;
}

void *Animation.InCallControls.defaultTimingParameters.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.defaultTimingParameters;
}

void static Animation.InCallControls.defaultTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1BD650870;
  a1[1] = xmmword_1BD668DA0;
  OUTLINED_FUNCTION_3_131((uint64_t)a1);
}

double static Animation.InCallControls.gridButtonTiming.getter()
{
  return 0.2;
}

void *Animation.InCallControls.minimumDragFlickVelocity.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.minimumDragFlickVelocity;
}

double static Animation.InCallControls.minimumDragFlickVelocity.getter()
{
  return 150.0;
}

void *Animation.InCallControls.timedParticipantStateCheckInterval.unsafeMutableAddressor()
{
  return &static Animation.InCallControls.timedParticipantStateCheckInterval;
}

double static Animation.MultiwayView.secondsBeforeHidingWaitingParticipants.getter()
{
  return 45.0;
}

double static Animation.MultiwayView.secondsBeforeHidingLeftParticipants.getter()
{
  return 7.0;
}

double static Animation.MultiwayView.secondsToRestoreRungParticipants.getter()
{
  return 10.0;
}

double static Animation.MultiwayView.secondsToWaitForFirstRemoteFrame.getter()
{
  return 3.0;
}

double static Animation.MultiwayView.inCallControlsDisappearingDuration.getter()
{
  return 10.0;
}

double static Animation.MultiwayView.inCallControlsAnimationDuration.getter()
{
  return 0.3;
}

double static Animation.MultiwayView.rosterVisibilityAnimationDuration.getter()
{
  return 0.3;
}

void *Animation.MultiwayView.captionsVisibilityAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.MultiwayView.captionsVisibilityAnimationDuration;
}

double static Animation.MultiwayView.captionsVisibilityAnimationDuration.getter()
{
  return 0.3;
}

double static Animation.MultiwayView.unfocusedOverlayAnimationDuration.getter()
{
  return 0.3;
}

void static Animation.MultiwayView.slowProminenceTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1BD650850;
  a1[1] = xmmword_1BD650860;
  OUTLINED_FUNCTION_3_131((uint64_t)a1);
}

void static Animation.MultiwayView.fastProminenceTimingParameters.getter(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1BD650870;
  a1[1] = xmmword_1BD650880;
  OUTLINED_FUNCTION_3_131((uint64_t)a1);
}

double static Animation.MultiwayView.crossFadeDuration.getter()
{
  return 0.3;
}

void *Animation.ParticipantView.secondsBeforeHidingSash.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.secondsBeforeHidingSash;
}

double static Animation.ParticipantView.secondsBeforeHidingSash.getter()
{
  return 5.0;
}

void *Animation.ParticipantView.appearingSashDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.appearingSashDuration;
}

double static Animation.ParticipantView.appearingSashDuration.getter()
{
  return 0.1;
}

void *Animation.ParticipantView.disappearingSashDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.disappearingSashDuration;
}

double static Animation.ParticipantView.blurRemoteParticipantChangingMirroredVideoDuration.getter()
{
  return 1.0;
}

double static Animation.ParticipantView.blurLocalParticipantAfterExternalCameraUsageChangeDuration.getter()
{
  return 1.0;
}

double static Animation.ParticipantView.rotationDuration.getter()
{
  return 0.4;
}

double static Animation.ParticipantView.screenSharingRotationDuration.getter()
{
  return 0.3;
}

void *Animation.ParticipantView.videoOverlayFadeDuration.unsafeMutableAddressor()
{
  return &static Animation.ParticipantView.videoOverlayFadeDuration;
}

double static Animation.ParticipantView.videoOverlayFadeDuration.getter()
{
  return 0.1;
}

double static Animation.MostActiveParticipantView.showShadowDuration.getter()
{
  return 0.15;
}

double static Animation.LocalPreview.futureThrowTime.getter()
{
  return 0.3;
}

double static Animation.LocalPreview.initialVelocityFactor.getter()
{
  return 0.00333333333;
}

double static Animation.LocalPreview.springMass.getter()
{
  return 4.5;
}

void one-time initialization function for springStiffness()
{
  static Animation.LocalPreview.springStiffness = 0x408C200000000000;
}

double static Animation.LocalPreview.springStiffness.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for springStiffness, (uint64_t)&static Animation.LocalPreview.springStiffness);
}

double static Animation.LocalPreview.springDamping.getter()
{
  return 95.0;
}

void *Animation.LocalPreview.callConnectedAnimationDuration.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.callConnectedAnimationDuration;
}

double static Animation.LocalPreview.callConnectedAnimationDuration.getter()
{
  return 0.6;
}

void *Animation.LocalPreview.snapshotOverlayAfterOrientationChangeDuration.unsafeMutableAddressor()
{
  return &static Animation.LocalPreview.snapshotOverlayAfterOrientationChangeDuration;
}

uint64_t static Animation.AudioVisualization.numberOfEchoes.getter()
{
  return 4;
}

double static Animation.AudioVisualization.echoTime.getter()
{
  return -0.025;
}

uint64_t static Animation.AudioVisualization.preferredFramesPerSecond.getter()
{
  return 24;
}

void one-time initialization function for expansionTranslation()
{
  static Animation.ConversationControls.expansionTranslation = 0x4044000000000000;
}

uint64_t *Animation.ConversationControls.expansionTranslation.unsafeMutableAddressor()
{
  if (one-time initialization token for expansionTranslation != -1)
    swift_once();
  return &static Animation.ConversationControls.expansionTranslation;
}

double static Animation.ConversationControls.expansionTranslation.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for expansionTranslation, (uint64_t)&static Animation.ConversationControls.expansionTranslation);
}

void one-time initialization function for hidingVelocity()
{
  static Animation.ConversationControls.hidingVelocity = 0xC059000000000000;
}

uint64_t *Animation.ConversationControls.hidingVelocity.unsafeMutableAddressor()
{
  if (one-time initialization token for hidingVelocity != -1)
    swift_once();
  return &static Animation.ConversationControls.hidingVelocity;
}

double static Animation.ConversationControls.hidingVelocity.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for hidingVelocity, (uint64_t)&static Animation.ConversationControls.hidingVelocity);
}

void *Animation.ConversationControls.restingVelocityMultiplier.unsafeMutableAddressor()
{
  return &static Animation.ConversationControls.restingVelocityMultiplier;
}

double static Animation.ConversationControls.restingVelocityMultiplier.getter()
{
  return 0.499;
}

double one-time initialization function for springParameters()
{
  double result;

  result = 0.375;
  static Animation.ConversationControls.springParameters = xmmword_1BD668DB0;
  xmmword_1EF4FD820 = xmmword_1BD668DC0;
  xmmword_1EF4FD830 = 0uLL;
  return result;
}

double static Animation.ConversationControls.springParameters.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;

  if (one-time initialization token for springParameters != -1)
    swift_once();
  v2 = xmmword_1EF4FD820;
  *a1 = static Animation.ConversationControls.springParameters;
  a1[1] = v2;
  result = *(double *)&xmmword_1EF4FD830;
  a1[2] = xmmword_1EF4FD830;
  return result;
}

void type metadata accessor for Animation()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.InCallControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.MultiwayView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.ParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.MostActiveParticipantView()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.LocalPreview()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.AudioVisualization()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Animation.ConversationControls()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t PhoneLockStateObserver.values.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  v3 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>((unint64_t *)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher, MEMORY[0x1E0C96190]);
  MEMORY[0x1C3B71234](v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

id PhoneLockStateObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static PhoneLockStateObserver.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return (id)static PhoneLockStateObserver.shared;
}

void static PhoneLockStateObserver.shared.setter(uint64_t a1)
{
  void *v2;

  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)static PhoneLockStateObserver.shared;
  static PhoneLockStateObserver.shared = a1;

}

uint64_t (*static PhoneLockStateObserver.shared.modify())()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t PhoneLockStateObserver.isLocked.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PhoneLockStateObserver.isLocked.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

char *PhoneLockStateObserver.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int *v15;
  uint32_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD aBlock[6];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR___CKPhoneLockStateObserver__isLocked];
  type metadata accessor for SpringBoardUtilities();
  v7 = v0;
  LOBYTE(aBlock[0]) = static SpringBoardUtilities.checkSpringBoardState(for:)();
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  *(_DWORD *)&v7[OBJC_IVAR___CKPhoneLockStateObserver_token] = 0;
  v8 = &v7[OBJC_IVAR___CKPhoneLockStateObserver_lockStateNotification];
  *(_QWORD *)v8 = 0xD00000000000002DLL;
  *((_QWORD *)v8 + 1) = 0x80000001BD66F7A0;

  v23.receiver = v7;
  v23.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v23, sel_init);
  type metadata accessor for OS_dispatch_queue();
  v10 = (char *)v9;
  swift_bridgeObjectRetain();
  v11 = static OS_dispatch_queue.main.getter();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in PhoneLockStateObserver.init();
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Int32) -> ();
  aBlock[3] = &block_descriptor_117;
  v13 = _Block_copy(aBlock);
  swift_release();
  v14 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  v15 = (int *)&v10[OBJC_IVAR___CKPhoneLockStateObserver_token];
  OUTLINED_FUNCTION_2_0();
  v16 = notify_register_dispatch((const char *)(v14 + 32), v15, v11, v13);
  swift_endAccess();
  swift_release();
  _Block_release(v13);

  if (v16)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationKit);
    v18 = Logger.logObject.getter();
    v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v20 = 67240192;
      LODWORD(aBlock[0]) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl(&dword_1BD004000, v18, v19, "Failed to observe PhoneLockState with status %{public}u", v20, 8u);
      MEMORY[0x1C3B751B8](v20, -1, -1);
    }

  }
  PhoneLockStateObserver.updateLockState()();

  return v10;
}

uint64_t sub_1BD5E1B2C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in PhoneLockStateObserver.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    PhoneLockStateObserver.updateLockState()();

  }
}

void partial apply for closure #1 in PhoneLockStateObserver.init()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in PhoneLockStateObserver.init()(a1, v1);
}

Swift::Bool __swiftcall PhoneLockStateObserver.updateLockState()()
{
  type metadata accessor for SpringBoardUtilities();
  static SpringBoardUtilities.checkSpringBoardState(for:)();
  PhoneLockStateObserver.isLocked.setter();
  return PhoneLockStateObserver.isLocked.getter();
}

uint64_t PhoneLockStateObserver.listen(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v9 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v9);
  type metadata accessor for MainActor();
  v10 = v3;
  swift_retain();
  v11 = static MainActor.shared.getter();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x1E0DF06E8];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v10;
  v12[5] = a1;
  v12[6] = a2;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v14 = type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  v15 = AnyCancellable.init(_:)();
  a3[3] = v14;
  result = swift_release();
  *a3 = v15;
  return result;
}

uint64_t closure #1 in PhoneLockStateObserver.listen(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v6[5] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>);
  v6[6] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator);
  v6[7] = v7;
  v6[8] = *(_QWORD *)(v7 - 8);
  v6[9] = swift_task_alloc();
  v6[10] = type metadata accessor for MainActor();
  v6[11] = static MainActor.shared.getter();
  v6[12] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[13] = v8;
  return swift_task_switch();
}

uint64_t closure #1 in PhoneLockStateObserver.listen(with:)()
{
  uint64_t v0;
  _QWORD *v1;

  PhoneLockStateObserver.values.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher> and conformance AsyncPublisher<A>, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>, MEMORY[0x1E0C95E98]);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  *(_QWORD *)(v0 + 112) = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = closure #1 in PhoneLockStateObserver.listen(with:);
  OUTLINED_FUNCTION_23_34();
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  int v1;
  _QWORD *v3;

  v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 == 2)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD))(v0 + 24))(v1 & 1);
    *(_QWORD *)(v0 + 112) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher>.Iterator and conformance AsyncPublisher<A>.Iterator, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>.Iterator, MEMORY[0x1E0C95E78]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v3;
    *v3 = v0;
    v3[1] = closure #1 in PhoneLockStateObserver.listen(with:);
    OUTLINED_FUNCTION_23_34();
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
  }
}

void implicit closure #2 in implicit closure #1 in PhoneLockStateObserver.listen(with:)()
{
  JUMPOUT(0x1C3B73268);
}

id PhoneLockStateObserver.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  int *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (int *)&v0[OBJC_IVAR___CKPhoneLockStateObserver_token];
  OUTLINED_FUNCTION_2_0();
  notify_cancel(*v2);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1BD5E214C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PhoneLockStateObserver.listen(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in PhoneLockStateObserver.listen(with:)(a1, v4, v5, v6, v7, v8);
}

void partial apply for implicit closure #2 in implicit closure #1 in PhoneLockStateObserver.listen(with:)()
{
  implicit closure #2 in implicit closure #1 in PhoneLockStateObserver.listen(with:)();
}

uint64_t ObjC metadata update function for PhoneLockStateObserver()
{
  return type metadata accessor for PhoneLockStateObserver();
}

uint64_t type metadata accessor for PhoneLockStateObserver()
{
  uint64_t result;

  result = type metadata singleton initialization cache for PhoneLockStateObserver;
  if (!type metadata singleton initialization cache for PhoneLockStateObserver)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for PhoneLockStateObserver()
{
  unint64_t v0;

  type metadata accessor for Published<Bool>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1BD5E22CC()
{
  return lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type AsyncPublisher<Published<Bool>.Publisher> and conformance AsyncPublisher<A>, &demangling cache variable for type metadata for AsyncPublisher<Published<Bool>.Publisher>, MEMORY[0x1E0C95E98]);
}

uint64_t sub_1BD5E22F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PhoneLockStateObserver.isLocked.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BD5E2324()
{
  return PhoneLockStateObserver.isLocked.setter();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = type metadata accessor for CaptionSectioner.Caption(0);
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  v18 = a4 >> 1;
  v19 = a3;
  v8 = __OFSUB__(a4 >> 1, a3);
  v9 = (a4 >> 1) - a3;
  if (v8)
    goto LABEL_19;
  if (v9)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v9 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v19 + i >= v18 || i >= v9)
        goto LABEL_18;
      outlined init with copy of ConversationControlsAppLaunchButtonType(a2 + *(_QWORD *)(v16 + 72) * (v19 + i), (uint64_t)v4, type metadata accessor for CaptionSectioner.Caption);
      v13 = *v4;
      outlined destroy of Participant.State();
      v14 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v14 = v20;
      }
      v15 = *(_QWORD *)(v14 + 16);
      if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v14 = v20;
      }
      *(_QWORD *)(v14 + 16) = v15 + 1;
      *(_QWORD *)(v14 + 8 * v15 + 32) = v13;
      if (v11 == v9)
        return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t CaptionsView.init(viewModel:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void CaptionsView.body.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, _ConditionalContent<TranscriptSubtitle, TranscriptView>>);
  closure #1 in CaptionsView.body.getter((uint64_t)a1 + *(int *)(v3 + 44));
  OUTLINED_FUNCTION_0();
}

void closure #1 in CaptionsView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *object;
  id v28;
  Swift::String v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  _BYTE v57[12];
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t countAndFlagsBits;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  unsigned __int8 v71;
  Swift::String v72;

  v68 = a1;
  v69 = type metadata accessor for TranscriptView(0);
  MEMORY[0x1E0C80A78](v69);
  v2 = &v57[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v5 = &v57[-v4];
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TranscriptSubtitle, TranscriptView>.Storage);
  MEMORY[0x1E0C80A78](v65);
  v67 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v66 = type metadata accessor for TranscriptSubtitle(0);
  MEMORY[0x1E0C80A78](v66);
  v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (static Platform.current.getter() == 2
    && (swift_retain(),
        CaptionsViewModel.source.getter(),
        swift_release(),
        CaptionsStateSource.isMinimized.getter(),
        v10 = v9,
        swift_release(),
        (v10 & 1) != 0))
  {
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    v11 = CaptionsStateSource.sections.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.isGroupCall.getter();
    v13 = v12;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.allowsMinimization.getter();
    v15 = v14;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.onRequestMinimize.getter();
    v17 = v16;
    v19 = v18;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.onRequestDismissControls.getter();
    v21 = v20;
    v23 = v22;
    swift_release();
    CaptionsViewModel.layoutIdiom.getter(&v71);
    v70 = v71;
    TranscriptSubtitle.init(sections:isGroupCall:allowsMinimization:onRequestMinimize:onRequestDismissControls:layoutIdiom:)(v11, v13 & 1, v15 & 1, v17, v19, v21, v23, &v70, (uint64_t)v8);
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v8, (uint64_t)v67, type metadata accessor for TranscriptSubtitle);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle and conformance TranscriptSubtitle);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptView and conformance TranscriptView);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    v63 = CaptionsStateSource.sections.getter();
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.callName.getter();
    v25 = v24;
    object = v26;
    swift_release();
    if (object)
    {
      countAndFlagsBits = v25;
    }
    else
    {
      v28 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v72._object = (void *)0xE000000000000000;
      v29._countAndFlagsBits = 0x454D495445434146;
      v29._object = (void *)0xE800000000000000;
      v30.value._countAndFlagsBits = 0x61737265766E6F43;
      v30.value._object = (void *)0xEF74694B6E6F6974;
      v31._countAndFlagsBits = 0;
      v31._object = (void *)0xE000000000000000;
      v72._countAndFlagsBits = 0;
      v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v72);
      countAndFlagsBits = v32._countAndFlagsBits;
      object = v32._object;

    }
    swift_retain();
    CaptionsViewModel.source.getter();
    CaptionsStateSource.groupImage.getter();
    v34 = v33;
    swift_release();
    v64 = v5;
    v61 = object;
    if (v34)
      v60 = Image.init(uiImage:)();
    else
      v60 = 0;
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.participants.getter();
    v59 = v35;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.isGroupCall.getter();
    v58 = v36;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.isMinimized.getter();
    v38 = v37;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.languageModelDownloadingProgress.getter();
    v40 = v39;
    v42 = v41;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.allowsMinimization.getter();
    v44 = v43;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.onRequestMinimize.getter();
    v46 = v45;
    v48 = v47;
    swift_release();
    swift_retain();
    CaptionsViewModel.source.getter();
    swift_release();
    CaptionsStateSource.onRequestDismissControls.getter();
    v50 = v49;
    v52 = v51;
    swift_release();
    v53 = countAndFlagsBits;
    *(_QWORD *)v2 = v63;
    *((_QWORD *)v2 + 1) = v53;
    v54 = v60;
    *((_QWORD *)v2 + 2) = v61;
    *((_QWORD *)v2 + 3) = v54;
    *((_QWORD *)v2 + 4) = v59;
    v2[40] = v58 & 1;
    v2[41] = v38 & 1;
    v2[56] = v42 & 1;
    v2[57] = v44 & 1;
    *((_QWORD *)v2 + 8) = v46;
    *((_QWORD *)v2 + 9) = v48;
    *((_QWORD *)v2 + 10) = v50;
    *((_QWORD *)v2 + 11) = v52;
    v55 = (uint64_t *)&v2[*(int *)(v69 + 56)];
    *((_QWORD *)v2 + 6) = v40;
    *v55 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    swift_storeEnumTagMultiPayload();
    v56 = (uint64_t)v64;
    outlined init with take of StagedCollaboration((uint64_t)v2, (uint64_t)v64, type metadata accessor for TranscriptView);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v56, (uint64_t)v67, type metadata accessor for TranscriptView);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle and conformance TranscriptSubtitle);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptView and conformance TranscriptView);
    _ConditionalContent<>.init(storage:)();
  }
  outlined destroy of Participant.State();
}

uint64_t TranscriptSubtitle.init(sections:isGroupCall:allowsMinimization:onRequestMinimize:onRequestDismissControls:layoutIdiom:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  __int128 v28;
  uint64_t result;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v33 = a4;
  v34 = a6;
  v31 = a2;
  v32 = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v30 - v18;
  v20 = *a8;
  v35 = 0;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
  State.init(wrappedValue:)();
  v21 = v38;
  *(_OWORD *)(a9 + 88) = v37;
  *(_QWORD *)(a9 + 104) = v21;
  type metadata accessor for TranscriptSubtitle(0);
  v22 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v22);
  outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  State.init(wrappedValue:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(a9 + 8) = a1;
  *(_BYTE *)(a9 + 16) = v31;
  *(_BYTE *)(a9 + 17) = v32;
  *(_QWORD *)(a9 + 24) = v33;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = v34;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)a9 = v20;
  if (v20 == 1)
  {
    v23 = one-time initialization token for subtitleStyleDefaultSmallWidth;
    swift_retain();
    swift_retain();
    if (v23 != -1)
      swift_once();
    v24 = &static Layout.Captions.subtitleStyleDefaultSmallWidth;
  }
  else
  {
    v25 = one-time initialization token for subtitleStyleDefaultWidth;
    swift_retain();
    swift_retain();
    if (v25 != -1)
      swift_once();
    v24 = &static Layout.Captions.subtitleStyleDefaultWidth;
  }
  v35 = *v24;
  State.init(wrappedValue:)();
  v26 = *((_QWORD *)&v37 + 1);
  *(_QWORD *)(a9 + 56) = v37;
  *(_QWORD *)(a9 + 64) = v26;
  if (v20)
  {
    if (one-time initialization token for subtitleStyleDefaultSmallHeight != -1)
      swift_once();
    v27 = &static Layout.Captions.subtitleStyleDefaultSmallHeight;
  }
  else
  {
    if (one-time initialization token for subtitleStyleDefaultHeight != -1)
      swift_once();
    v27 = &static Layout.Captions.subtitleStyleDefaultHeight;
  }
  v35 = *v27;
  State.init(wrappedValue:)();
  swift_release();
  v28 = v37;
  result = swift_release();
  *(_OWORD *)(a9 + 72) = v28;
  return result;
}

uint64_t CaptionsView.groupImage.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  CaptionsViewModel.source.getter();
  swift_release();
  CaptionsStateSource.groupImage.getter();
  v1 = v0;
  swift_release();
  if (v1)
    return Image.init(uiImage:)();
  else
    return 0;
}

void TranscriptView.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  int v49;
  double v50;
  id v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  v2 = v1;
  v106 = a1;
  v3 = type metadata accessor for TranscriptView(0);
  v103 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v104 = v4;
  v105 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v90);
  v91 = (uint64_t *)((char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = type metadata accessor for Material();
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize();
  v107 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v74 - v11;
  v86 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v86);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>);
  MEMORY[0x1E0C80A78](v87);
  v89 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v88);
  v93 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v17);
  v94 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v92);
  v95 = (uint64_t)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v98);
  v99 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  v101 = *(_QWORD *)(v21 - 8);
  v102 = v21;
  MEMORY[0x1E0C80A78](v21);
  v100 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1E0C80A78](v96);
  v97 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)v1;
  v24 = *(_QWORD *)(v1 + 16);
  v85 = *(_QWORD *)(v1 + 8);
  v25 = *(_QWORD *)(v1 + 32);
  v79 = *(_QWORD *)(v1 + 24);
  v78 = v25;
  v84 = *(unsigned __int8 *)(v1 + 40);
  v83 = *(unsigned __int8 *)(v1 + 41);
  v82 = *(_QWORD *)(v1 + 48);
  v81 = *(unsigned __int8 *)(v1 + 56);
  v80 = *(unsigned __int8 *)(v1 + 57);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  specialized Environment.wrappedValue.getter();
  v26 = v107;
  (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v9, *MEMORY[0x1E0CD9928], v7);
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  v27 = dispatch thunk of static Comparable.< infix(_:_:)();
  v28 = *(void (**)(char *, uint64_t))(v26 + 8);
  v28(v9, v7);
  v28(v12, v7);
  v29 = *(_QWORD *)(v2 + 64);
  v30 = *(_QWORD *)(v2 + 88);
  LOBYTE(v9) = (v27 & 1) == 0;
  v76 = *(_OWORD *)(v2 + 72);
  swift_retain();
  swift_retain();
  specialized Environment.wrappedValue.getter();
  KeyPath = swift_getKeyPath();
  v32 = v86;
  *(_QWORD *)&v14[*(int *)(v86 + 68)] = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  swift_storeEnumTagMultiPayload();
  v33 = v85;
  *(_QWORD *)v14 = v77;
  *((_QWORD *)v14 + 1) = v33;
  v34 = v79;
  *((_QWORD *)v14 + 2) = v24;
  *((_QWORD *)v14 + 3) = v34;
  *((_QWORD *)v14 + 4) = v78;
  v14[40] = v84;
  v14[41] = v83;
  *((_QWORD *)v14 + 6) = v82;
  v14[56] = v81;
  v14[57] = v80;
  v14[58] = (char)v9;
  *((_QWORD *)v14 + 8) = v29;
  *(_OWORD *)(v14 + 72) = v76;
  *((_QWORD *)v14 + 11) = v30;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(&v14[*(int *)(v32 + 60)], v12, v7);
  v35 = &v14[*(int *)(v32 + 64)];
  v110 = 1;
  State.init(wrappedValue:)();
  v36 = v109;
  *v35 = v108;
  *((_QWORD *)v35 + 1) = v36;
  if ((*(_BYTE *)(v2 + 41) & 1) != 0)
  {
    static Material.regular.getter();
  }
  else
  {
    if (one-time initialization token for background != -1)
      swift_once();
    v108 = static Colors.Captions.background;
    swift_retain();
  }
  v37 = AnyShapeStyle.init<A>(_:)();
  v38 = (uint64_t)v93;
  v39 = (uint64_t)v89;
  v40 = static Edge.Set.all.getter();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, v39, type metadata accessor for TranscriptList);
  v41 = v39 + *(int *)(v87 + 36);
  *(_QWORD *)v41 = v37;
  *(_BYTE *)(v41 + 8) = v40;
  outlined destroy of Participant.State();
  if (one-time initialization token for cornerRadius != -1)
    swift_once();
  v42 = static Layout.Captions.cornerRadius;
  v43 = v91;
  v44 = (char *)v91 + *(int *)(v90 + 20);
  v45 = *MEMORY[0x1E0CDB0C0];
  v46 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
  *v43 = v42;
  v43[1] = v42;
  v47 = v38 + *(int *)(v88 + 36);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v43, v47, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v47
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of FeatureEligibility?(v39, v38, &demangling cache variable for type metadata for ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>);
  outlined destroy of Participant.State();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>);
  v48 = 0.0;
  v49 = *(unsigned __int8 *)(v2 + 41);
  if (v49 == 1)
  {
    if (one-time initialization token for bubblePadding != -1)
      swift_once();
    swift_beginAccess();
    v50 = *(double *)&static Layout.Captions.bubblePadding + *(double *)&static Layout.Captions.bubblePadding;
    v51 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v51, sel_lineHeight);
    v53 = v52;

    v48 = v50 + v53 * 5.0 + -1.0;
  }
  v54 = static Alignment.center.getter();
  v55 = (uint64_t)v94;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0, 1, *(_QWORD *)&v48, v49 ^ 1, 0, 1, v54, v56);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  v57 = *(_BYTE *)(v2 + 41);
  v58 = v95;
  outlined init with copy of FeatureEligibility?(v55, v95, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
  v59 = (_BYTE *)(v58 + *(int *)(v92 + 36));
  *v59 = 0;
  v59[1] = v57;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
  LOBYTE(v55) = *(_BYTE *)(v2 + 41);
  v60 = swift_getKeyPath();
  v61 = swift_allocObject();
  *(_BYTE *)(v61 + 16) = v55;
  v62 = v99;
  outlined init with copy of FeatureEligibility?(v58, v99, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>);
  v63 = (uint64_t *)(v62 + *(int *)(v98 + 36));
  *v63 = v60;
  v63[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v63[2] = v61;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>);
  v64 = v2;
  v65 = v105;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v64, v105, type metadata accessor for TranscriptView);
  v66 = (*(unsigned __int8 *)(v103 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
  v67 = swift_allocObject();
  outlined init with take of StagedCollaboration(v65, v67 + v66, type metadata accessor for TranscriptView);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  v68 = v100;
  View.onTapGesture(count:perform:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
  v69 = static SafeAreaRegions.all.getter();
  LOBYTE(v66) = static Edge.Set.all.getter();
  v71 = v101;
  v70 = v102;
  v72 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v97, v68, v102);
  v73 = v72 + *(int *)(v96 + 36);
  *(_QWORD *)v73 = v69;
  *(_BYTE *)(v73 + 8) = v66;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
  outlined init with take of Any?(v72, v106, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout>);
}

void TranscriptList.body.getter(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for TranscriptList(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptList);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for TranscriptList);
  *a1 = partial apply for closure #1 in TranscriptList.body.getter;
  a1[1] = (uint64_t (*)())v7;
}

uint64_t closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v6 = type metadata accessor for ScrollViewProxy();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = type metadata accessor for TranscriptList(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (v11 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13, type metadata accessor for TranscriptList);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *a3 = partial apply for closure #1 in closure #1 in TranscriptList.body.getter;
  a3[1] = (void (*)())v15;
  return result;
}

void closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unsigned int v52;
  int v53;
  int v54;
  char v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  int v69;
  int v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v95 = a4;
  v7 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v96);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>,);
  MEMORY[0x1E0C80A78](v97);
  v99 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _);
  MEMORY[0x1E0C80A78](v98);
  v100 = (uint64_t)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeSt);
  MEMORY[0x1E0C80A78](v92);
  v93 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  TranscriptList.lastTwoCaptionsIDs()();
  v22 = v21;
  GeometryProxy.size.getter();
  v24 = v23;
  v26 = v25;
  *(_QWORD *)v12 = static HorizontalAlignment.leading.getter();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v27 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>)
                             + 44)];
  *(_QWORD *)&v101 = a2;
  v94 = a3;
  closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a2, a1, v22, a3, v27, 0.0, 0.0, v24, v26);
  swift_bridgeObjectRelease();
  v28 = static Edge.Set.leading.getter();
  v29 = MEMORY[0x1C3B71FFC](0);
  v30 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v30 & v28) != v28)
    LOBYTE(v29) = MEMORY[0x1C3B71FFC](v29 | v28);
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v15, &demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  v39 = &v15[*(int *)(v13 + 36)];
  *v39 = v29;
  *((_QWORD *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>);
  v40 = static Edge.Set.trailing.getter();
  v41 = MEMORY[0x1C3B71FFC](0);
  v42 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v42 & v40) != v40)
    LOBYTE(v41) = MEMORY[0x1C3B71FFC](v41 | v40);
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>);
  v51 = &v17[*(int *)(v96 + 36)];
  *v51 = v41;
  *((_QWORD *)v51 + 1) = v44;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v50;
  v51[40] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>);
  v52 = static Edge.Set.top.getter();
  v53 = MEMORY[0x1C3B71FFC](0);
  v54 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v54 & v52) != v52)
    LOBYTE(v53) = MEMORY[0x1C3B71FFC](v53 | v52);
  v55 = *(_BYTE *)(v101 + 40);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v101, (uint64_t)v9, type metadata accessor for TranscriptList);
  if ((v55 & 1) != 0)
  {
    v56 = *(_QWORD *)(*(_QWORD *)v9 + 16);
    outlined destroy of Participant.State();
    if (v56)
    {
      if (one-time initialization token for scrollGradientFraction != -1)
        swift_once();
      v57 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      objc_msgSend(v57, sel_lineHeight);

    }
  }
  else
  {
    outlined destroy of Participant.State();
  }
  v58 = (uint64_t)v99;
  EdgeInsets.init(_all:)();
  v60 = v59;
  v62 = v61;
  v64 = v63;
  v66 = v65;
  outlined init with copy of FeatureEligibility?((uint64_t)v17, v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>, _PaddingLayout>);
  v67 = v58 + *(int *)(v97 + 36);
  *(_BYTE *)v67 = v53;
  *(_QWORD *)(v67 + 8) = v60;
  *(_QWORD *)(v67 + 16) = v62;
  *(_QWORD *)(v67 + 24) = v64;
  *(_QWORD *)(v67 + 32) = v66;
  *(_BYTE *)(v67 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>, _PaddingLayout>);
  v68 = static Edge.Set.bottom.getter();
  v69 = MEMORY[0x1C3B71FFC](0);
  v70 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v70 & v68) != v68)
    LOBYTE(v69) = MEMORY[0x1C3B71FFC](v69 | v68);
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  v71 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v71, sel_lineHeight);

  EdgeInsets.init(_all:)();
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v80 = v100;
  outlined init with copy of FeatureEligibility?(v58, v100, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>,);
  v81 = v80 + *(int *)(v98 + 36);
  *(_BYTE *)v81 = v69;
  *(_QWORD *)(v81 + 8) = v73;
  *(_QWORD *)(v81 + 16) = v75;
  *(_QWORD *)(v81 + 24) = v77;
  *(_QWORD *)(v81 + 32) = v79;
  *(_BYTE *)(v81 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _PaddingLayout>,);
  if (static Platform.current.getter() == 2)
    v82 = static Alignment.bottomTrailing.getter();
  else
    v82 = static Alignment.topTrailing.getter();
  v84 = v82;
  v85 = v83;
  v86 = v95;
  v87 = (uint64_t)v93;
  v88 = v92;
  closure #2 in closure #1 in closure #1 in TranscriptList.body.getter(v101, v94, (uint64_t *)&v102);
  v101 = v102;
  v89 = v103;
  outlined init with copy of FeatureEligibility?(v80, v87, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _);
  v90 = v87 + *(int *)(v88 + 36);
  *(_OWORD *)v90 = v101;
  *(_QWORD *)(v90 + 16) = v89;
  *(_QWORD *)(v90 + 24) = v84;
  *(_QWORD *)(v90 + 32) = v85;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v80, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>)>>, _);
  outlined init with take of Any?(v87, v86, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeSt);
}

void TranscriptList.lastTwoCaptionsIDs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)v0;
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v5)
  {
    v6 = v5 - 1;
    v7 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = specialized BidirectionalCollection.suffix(_:)(2, *(_QWORD *)(v4 + v9 + v10 * v6 + *(int *)(v7 + 24)));
    v13 = v12;
    v15 = v14;
    v17 = v16;
    swift_bridgeObjectRetain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(v11, v13, v15, v17);
    v19 = v18;
    swift_unknownObjectRelease();
    v20 = specialized Set.init<A>(_:)(v19);
    v21 = *(_QWORD *)(v20 + 16);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v0, (uint64_t)v3, type metadata accessor for TranscriptList);
    if (v21 == 2)
    {
      outlined destroy of Participant.State();
    }
    else
    {
      v22 = *(_QWORD *)(*(_QWORD *)v3 + 16);
      outlined destroy of Participant.State();
      if (v22 >= 2)
      {
        v23 = *(_QWORD *)(*(_QWORD *)v0 + 16);
        v24 = v23 >= 2;
        v25 = v23 - 2;
        if (v24)
        {
          v26 = specialized BidirectionalCollection.suffix(_:)(2 - *(_QWORD *)(v20 + 16), *(_QWORD *)(*(_QWORD *)v0 + v9 + v25 * v10 + *(int *)(v7 + 24)));
          v28 = v27;
          v30 = v29;
          v32 = v31;
          swift_bridgeObjectRetain();
          _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs10ArraySliceVy15ConversationKit16CaptionSectionerV0H0VG_AJ0H2IDVs5NeverOTg504_s15f84Kit14TranscriptList33_28E431076EC11867EF27B9C11E6DD7B1LLV18lastTwoCaptionsIDsShyAA16hI68V0Q2IDVGyFAiG0Q0Vcfu_32e0c6332a02d4f1db5ccccca02d9fc0cdAlITf3nnnpk_nTf1cn_nTm(v26, v28, v30, v32);
          v34 = v33;
          swift_unknownObjectRelease();
          v35 = specialized Set.init<A>(_:)(v34);
          specialized Set.union<A>(_:)(v35, v20);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

void closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, CGFloat a6@<D0>, CGFloat a7@<D1>, CGFloat a8@<D2>, CGFloat a9@<D3>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  unint64_t v94;
  uint64_t v95;
  CGRect v96;

  v79 = a4;
  v78 = a3;
  *(_QWORD *)&v80 = a2;
  v91 = a5;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>);
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v85 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>);
  MEMORY[0x1E0C80A78](v84);
  v87 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  MEMORY[0x1E0C80A78](v83);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v89 = (char *)&v78 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v78 - v24;
  v26 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v78 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  MEMORY[0x1E0C80A78](v32);
  v82 = (uint64_t)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v78 - v35;
  v37 = *(_BYTE *)(a1 + 40);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v31, type metadata accessor for TranscriptList);
  v90 = v17;
  if ((v37 & 1) == 0)
  {
    outlined destroy of Participant.State();
    goto LABEL_5;
  }
  v38 = *(_QWORD *)(*(_QWORD *)v31 + 16);
  outlined destroy of Participant.State();
  if (!v38)
  {
LABEL_5:
    v43 = *(unsigned __int8 *)(a1 + 41);
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v28, type metadata accessor for TranscriptList);
    v44 = v43 != 1 || *(_QWORD *)(*(_QWORD *)v28 + 16) == 0;
    v40 = (uint64_t)v36;
    v41 = v79;
    v42 = v78;
    outlined destroy of Participant.State();
    *(_QWORD *)v22 = static HorizontalAlignment.leading.getter();
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = 0;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    closure #1 in TranscriptList.callHeader.getter(a1, v44, &v22[*(int *)(v45 + 44)]);
    outlined init with take of Any?((uint64_t)v22, (uint64_t)v25, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    outlined init with take of Any?((uint64_t)v25, v40, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>);
    v39 = 0;
    goto LABEL_9;
  }
  v39 = 1;
  v40 = (uint64_t)v36;
  v41 = v79;
  v42 = v78;
LABEL_9:
  v46 = v80;
  v81 = v40;
  __swift_storeEnumTagSinglePayload(v40, v39, 1, v20);
  v47 = static Axis.Set.vertical.getter();
  LODWORD(v79) = v47;
  *(_QWORD *)&v80 = &v78;
  MEMORY[0x1E0C80A78](v47);
  *(&v78 - 8) = a1;
  *(&v78 - 7) = v46;
  *(&v78 - 6) = v42;
  *((CGFloat *)&v78 - 5) = a6;
  *((CGFloat *)&v78 - 4) = a7;
  *((CGFloat *)&v78 - 3) = a8;
  *((CGFloat *)&v78 - 2) = a9;
  *(&v78 - 1) = v41;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v48 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v49 = type metadata accessor for DynamicTypeSize();
  v50 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  v53 = lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>();
  v54 = lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]();
  v92 = v51;
  *(_QWORD *)&v93 = v52;
  *((_QWORD *)&v93 + 1) = v53;
  v94 = v54;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v92 = v50;
  *(_QWORD *)&v93 = MEMORY[0x1E0DEAFA0];
  *((_QWORD *)&v93 + 1) = OpaqueTypeConformance2;
  v94 = MEMORY[0x1E0DEAFB8];
  v56 = swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  v92 = v48;
  *(_QWORD *)&v93 = v49;
  *((_QWORD *)&v93 + 1) = v56;
  v94 = v57;
  swift_getOpaqueTypeConformance2();
  v58 = v85;
  ScrollView.init(_:showsIndicators:content:)();
  v96.origin.x = a6;
  v96.origin.y = a7;
  v96.size.width = a8;
  v96.size.height = a9;
  CGRectGetHeight(v96);
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  v59 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v59, sel_lineHeight);

  TranscriptList.maskGradient(viewHeight:gradientHeight:)((uint64_t)&v92);
  v60 = v92;
  v80 = v93;
  v61 = v94;
  v62 = v95;
  v63 = v86;
  v64 = (uint64_t)v87;
  v65 = v88;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v87, v58, v88);
  v66 = v64 + *(int *)(v84 + 36);
  *(_QWORD *)v66 = v60;
  *(_OWORD *)(v66 + 8) = v80;
  *(_QWORD *)(v66 + 24) = v61;
  *(_QWORD *)(v66 + 32) = v62;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v65);
  v67 = static Alignment.center.getter();
  v69 = v68;
  v70 = (uint64_t)v89;
  v71 = (uint64_t)&v89[*(int *)(v83 + 36)];
  closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter((_QWORD *)a1, v71);
  v72 = (uint64_t *)(v71
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>)
                           + 36));
  *v72 = v67;
  v72[1] = v69;
  outlined init with take of Any?(v64, v70, &demangling cache variable for type metadata for ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>);
  v74 = v81;
  v73 = v82;
  outlined init with copy of FeatureEligibility?(v81, v82, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  v75 = (uint64_t)v90;
  outlined init with copy of FeatureEligibility?(v70, (uint64_t)v90, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  v76 = v91;
  outlined init with copy of FeatureEligibility?(v73, v91, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>));
  outlined init with copy of FeatureEligibility?(v75, v76 + *(int *)(v77 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v70, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v74, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?)>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v73, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, _QWORD *);
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t (**v41)();
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t OpaqueTypeConformance2;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  double v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char v109;

  v97 = a4;
  v77 = a2;
  v87 = a5;
  v86 = type metadata accessor for DynamicTypeSize();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for ScrollViewProxy();
  v89 = *(_QWORD *)(v96 - 8);
  v94 = *(_QWORD *)(v89 + 64);
  MEMORY[0x1E0C80A78](v96);
  v78 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TranscriptList(0);
  v17 = *(_QWORD *)(v82 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v82);
  v91 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for PinnedScrollableViews();
  MEMORY[0x1E0C80A78](v19);
  v92 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>);
  v20 = *(v92 - 1);
  MEMORY[0x1E0C80A78](v92);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  MEMORY[0x1E0C80A78](v90);
  v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v80 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v93 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v83 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v95 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  static HorizontalAlignment.leading.getter();
  v88 = a1;
  v98 = a1;
  v99 = v77;
  v100 = a3;
  v101 = a6;
  v102 = a7;
  v103 = a8;
  v104 = a9;
  LODWORD(v105) = 0;
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews);
  MEMORY[0x1C3B74228](&v105, v19, v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)> and conformance TupleView<A>);
  LazyVStack.init(alignment:spacing:pinnedViews:content:)();
  v28 = a1;
  v29 = v91;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v28, v91, type metadata accessor for TranscriptList);
  v30 = *(unsigned __int8 *)(v17 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = v31 + v18;
  v33 = v30 | 7;
  v34 = swift_allocObject();
  v77 = v31;
  outlined init with take of StagedCollaboration(v29, v34 + v31, type metadata accessor for TranscriptList);
  v35 = *(void (**)(char *, char *, _QWORD *))(v20 + 16);
  v36 = v24;
  v73 = v24;
  v37 = v24;
  v38 = v22;
  v39 = v22;
  v40 = v92;
  v35(v37, v39, v92);
  v41 = (uint64_t (**)())&v36[*(int *)(v90 + 36)];
  *v41 = partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
  v41[1] = (uint64_t (*)())v34;
  (*(void (**)(char *, _QWORD *))(v20 + 8))(v38, v40);
  v105 = *(_QWORD *)v88;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v88, v29, type metadata accessor for TranscriptList);
  v42 = v89;
  v92 = *(_QWORD **)(v89 + 16);
  v43 = v78;
  v44 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v92)(v78, v97, v96);
  v45 = *(unsigned __int8 *)(v42 + 80);
  v75 = ((v32 + v45) & ~v45) + v94;
  v76 = (v32 + v45) & ~v45;
  v74 = v33 | v45;
  v46 = swift_allocObject();
  outlined init with take of StagedCollaboration(v29, v46 + v31, type metadata accessor for TranscriptList);
  v89 = *(_QWORD *)(v42 + 32);
  v47 = v43;
  ((void (*)(uint64_t, char *, uint64_t))v89)(v46 + ((v32 + v45) & ~v45), v43, v44);
  swift_bridgeObjectRetain();
  v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  v49 = lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>();
  v50 = lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]();
  v51 = v90;
  v52 = (uint64_t)v73;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
  v53 = v88;
  v109 = *(_BYTE *)(v88 + 41);
  v54 = v47;
  v55 = v47;
  v56 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v92)(v55, v97, v96);
  v57 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v89)(v57 + ((v45 + 16) & ~v45), v54, v56);
  v105 = v51;
  v106 = v48;
  v107 = v49;
  v108 = v50;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v59 = v79;
  v60 = v93;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  v61 = v60;
  v62 = v59;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v61, v59);
  v63 = v85;
  v64 = v84;
  v65 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v53 + *(int *)(v82 + 60), v86);
  v66 = v91;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v53, v91, type metadata accessor for TranscriptList);
  v67 = v96;
  ((void (*)(char *, uint64_t, uint64_t))v92)(v54, v97, v96);
  v68 = swift_allocObject();
  outlined init with take of StagedCollaboration(v66, v68 + v77, type metadata accessor for TranscriptList);
  ((void (*)(uint64_t, char *, uint64_t))v89)(v68 + v76, v54, v67);
  v105 = v62;
  v106 = MEMORY[0x1E0DEAFA0];
  v107 = OpaqueTypeConformance2;
  v108 = MEMORY[0x1E0DEAFB8];
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize);
  v69 = v81;
  v70 = v95;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v70, v69);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  double *v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  unsigned __int8 v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;

  v58 = a3;
  v60 = a4;
  v14 = type metadata accessor for TranscriptList(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v17 = type metadata accessor for GeometryProxy();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>);
  v51 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v63 = (char *)&v47 - v23;
  v59 = static Color.clear.getter();
  if (one-time initialization token for scrollGradientFraction != -1)
    swift_once();
  v50 = (id)objc_opt_self();
  v49 = *MEMORY[0x1E0DC4A88];
  v24 = objc_msgSend(v50, sel_preferredFontForTextStyle_);
  objc_msgSend(v24, sel_lineHeight);

  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v57 = v64;
  v56 = v65;
  v55 = v66;
  v54 = v67;
  v53 = v68;
  v52 = v69;
  v70 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v17);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)a1, (uint64_t)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptList);
  v25 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v26 = (v19 + *(unsigned __int8 *)(v15 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v27 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (v16 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v29 + v25, v20, v17);
  outlined init with take of StagedCollaboration((uint64_t)v27, v29 + v26, type metadata accessor for TranscriptList);
  *(_QWORD *)(v29 + v28) = v58;
  v30 = (double *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v30 = a5;
  v30[1] = a6;
  v30[2] = a7;
  v30[3] = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
  type metadata accessor for CaptionSectioner.SectionID(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance [A]);
  lazy protocol witness table accessor for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.SpeakerSection and conformance CaptionSectioner.SpeakerSection);
  v31 = v63;
  ForEach<>.init(_:content:)();
  v58 = static Color.clear.getter();
  v32 = objc_msgSend(v50, sel_preferredFontForTextStyle_, v49);
  objc_msgSend(v32, sel_lineHeight);

  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v50 = v70;
  LODWORD(v49) = v71;
  v48 = v72;
  LOBYTE(v26) = v73;
  v33 = v74;
  v34 = v75;
  v35 = v51;
  v36 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v37 = v61;
  v38 = v62;
  v36(v61, v31, v62);
  v39 = v60;
  v40 = v57;
  *v60 = v59;
  v39[1] = v40;
  *((_BYTE *)v39 + 16) = v56;
  v39[3] = v55;
  *((_BYTE *)v39 + 32) = v54;
  v41 = v52;
  v39[5] = v53;
  v39[6] = v41;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>));
  v36((char *)v39 + *(int *)(v42 + 48), v37, v38);
  v43 = (char *)v39 + *(int *)(v42 + 64);
  v44 = v50;
  *(_QWORD *)v43 = v58;
  *((_QWORD *)v43 + 1) = v44;
  v43[16] = v49;
  *((_QWORD *)v43 + 3) = v48;
  v43[32] = v26;
  *((_QWORD *)v43 + 5) = v33;
  *((_QWORD *)v43 + 6) = v34;
  strcpy(v43 + 56, "scroll-target");
  *((_WORD *)v43 + 35) = -4864;
  v45 = *(void (**)(char *, uint64_t))(v35 + 8);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v45(v63, v38);
  swift_bridgeObjectRelease();
  swift_release();
  v45(v37, v38);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
  MEMORY[0x1E0C80A78](v16);
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a3, a1, (uint64_t)&v19[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>);
  lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?();
  lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>();
  return Section<>.init(header:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a4;
  v33 = a5;
  v16 = type metadata accessor for TranscriptList(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for GeometryProxy();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x1E0C80A78](v20);
  v36 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for CaptionSectioner.SpeakerSection(0) + 24));
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v20);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a3, (uint64_t)v19, type metadata accessor for TranscriptList);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = (v22 + *(unsigned __int8 *)(v17 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v26 + v23, (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
  outlined init with take of StagedCollaboration((uint64_t)v19, v26 + v24, type metadata accessor for TranscriptList);
  *(_QWORD *)(v26 + v25) = v32;
  v27 = (double *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v27 = a6;
  v27[1] = a7;
  v27[2] = a8;
  v27[3] = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [CaptionSectioner.Caption]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [CaptionSectioner.Caption] and conformance [A]);
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  v34 = v28;
  v35 = v29;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.Caption and conformance CaptionSectioner.Caption);
  return ForEach<>.init(_:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  double *v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  unsigned int v54;
  int v55;
  int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  int v77;
  int v78;
  char v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v106 = a4;
  v122 = a3;
  v102 = a2;
  v121 = a5;
  v14 = type metadata accessor for RedactionReasons();
  v119 = *(_QWORD *)(v14 - 8);
  v120 = v14;
  MEMORY[0x1E0C80A78](v14);
  v118 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for GeometryProxy();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v16;
  v105 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v103 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for CaptionSectioner.Caption(0);
  v104 = *(_QWORD *)(v116 - 8);
  v97 = *(_QWORD *)(v104 + 64);
  MEMORY[0x1E0C80A78](v116);
  v98 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TranscriptList(0);
  v99 = *(_QWORD *)(v21 - 8);
  v22 = *(_QWORD *)(v99 + 64);
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v107 = (uint64_t)&v93 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v93 - v26;
  v28 = type metadata accessor for CaptionRow(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
  MEMORY[0x1E0C80A78](v101);
  v100 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v108);
  v110 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v113);
  v115 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  v112 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v111 = (char *)&v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v30, type metadata accessor for CaptionSectioner.Caption);
  v35 = &v30[*(int *)(v28 + 20)];
  v96 = v30;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v37 = v102;
  v94 = v18;
  v36(v35, v102, v18);
  v38 = &v30[*(int *)(v28 + 24)];
  v123 = 0;
  State.init(wrappedValue:)();
  v39 = v125;
  *(_QWORD *)v38 = v124;
  *((_QWORD *)v38 + 1) = v39;
  v95 = static Anchor.Source<A>.bounds.getter();
  outlined init with copy of ConversationControlsAppLaunchButtonType(v122, (uint64_t)v27, type metadata accessor for TranscriptList);
  v117 = a1;
  v40 = a1;
  v41 = v98;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v40, v98, type metadata accessor for CaptionSectioner.Caption);
  v42 = v103;
  v36(v103, v37, v18);
  v43 = (*(unsigned __int8 *)(v99 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  v44 = (v22 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (*(unsigned __int8 *)(v104 + 80) + v44 + 8) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  v46 = (v97 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = v17;
  v48 = (*(unsigned __int8 *)(v17 + 80) + v46 + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v49 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v27, v49 + v43, type metadata accessor for TranscriptList);
  *(_QWORD *)(v49 + v44) = v106;
  outlined init with take of StagedCollaboration(v41, v49 + v45, type metadata accessor for CaptionSectioner.Caption);
  v50 = (double *)(v49 + v46);
  *v50 = a6;
  v50[1] = a7;
  v50[2] = a8;
  v50[3] = a9;
  v51 = v42;
  v52 = (uint64_t)v100;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v49 + v48, v51, v94);
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v96, v52, type metadata accessor for CaptionRow);
  v53 = (uint64_t *)(v52 + *(int *)(v101 + 36));
  *v53 = v95;
  v53[1] = (uint64_t)partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
  v53[2] = v49;
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  v54 = static Edge.Set.top.getter();
  v55 = MEMORY[0x1C3B71FFC](0);
  v56 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v56 & v54) != v54)
    LOBYTE(v55) = MEMORY[0x1C3B71FFC](v55 | v54);
  v57 = v122;
  v58 = *(_BYTE *)(v122 + 41);
  v59 = v107;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v122, v107, type metadata accessor for TranscriptList);
  if ((v58 & 1) != 0)
  {
    outlined destroy of Participant.State();
    v60 = v118;
    v61 = (uint64_t)v115;
    v62 = v113;
    v63 = (uint64_t)v110;
    v64 = (uint64_t)v109;
  }
  else
  {
    v65 = *(_BYTE *)(v59 + 40);
    outlined destroy of Participant.State();
    v60 = v118;
    v61 = (uint64_t)v115;
    v62 = v113;
    v63 = (uint64_t)v110;
    v64 = (uint64_t)v109;
    if ((v65 & 1) == 0)
    {
      v66 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      objc_msgSend(v66, sel_lineHeight);

    }
  }
  EdgeInsets.init(_all:)();
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;
  outlined init with copy of FeatureEligibility?(v52, v63, &demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
  v75 = v63 + *(int *)(v108 + 36);
  *(_BYTE *)v75 = v55;
  *(_QWORD *)(v75 + 8) = v68;
  *(_QWORD *)(v75 + 16) = v70;
  *(_QWORD *)(v75 + 24) = v72;
  *(_QWORD *)(v75 + 32) = v74;
  *(_BYTE *)(v75 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
  v76 = static Edge.Set.leading.getter();
  v77 = MEMORY[0x1C3B71FFC](0);
  v78 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v78 & v76) != v76)
    LOBYTE(v77) = MEMORY[0x1C3B71FFC](v77 | v76);
  v79 = *(_BYTE *)(v57 + 41);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v57, v64, type metadata accessor for TranscriptList);
  if ((v79 & 1) != 0)
  {
    outlined destroy of Participant.State();
    goto LABEL_21;
  }
  v80 = *(unsigned __int8 *)(v64 + 40);
  outlined destroy of Participant.State();
  if (v80 == 1)
  {
    if (*(_BYTE *)(v57 + 41) == 1)
    {
      if (one-time initialization token for headerSmallImageSize != -1)
        swift_once();
      swift_beginAccess();
      if (one-time initialization token for bubbleMiniAvatarPadding == -1)
        goto LABEL_20;
    }
    else
    {
      if (one-time initialization token for headerImageSize != -1)
        swift_once();
      swift_beginAccess();
      if (one-time initialization token for bubbleAvatarPadding == -1)
        goto LABEL_20;
    }
    swift_once();
LABEL_20:
    swift_beginAccess();
  }
LABEL_21:
  EdgeInsets.init(_all:)();
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v88 = v87;
  outlined init with copy of FeatureEligibility?(v63, v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  v89 = v61 + *(int *)(v62 + 36);
  *(_BYTE *)v89 = v77;
  *(_QWORD *)(v89 + 8) = v82;
  *(_QWORD *)(v89 + 16) = v84;
  *(_QWORD *)(v89 + 24) = v86;
  *(_QWORD *)(v89 + 32) = v88;
  *(_BYTE *)(v89 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v63, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>);
  if (*(_BYTE *)(v117 + *(int *)(v116 + 48)) == 2)
  {
    static RedactionReasons.placeholder.getter();
    v90 = v120;
  }
  else
  {
    v126 = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RedactionReasons]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [RedactionReasons] and conformance [A]);
    v90 = v120;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  v91 = v111;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v60, v90);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v112 + 32))(v121, v91, v114);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, BOOL *a6@<X8>, CGFloat a7@<D0>, CGFloat a8@<D1>, CGFloat a9@<D2>, CGFloat a10@<D3>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  void (*v31)(char *, uint64_t, uint64_t);
  BOOL v32;
  int v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL *v39;
  CGRect v40;
  CGRect v41;

  v37 = a3;
  v38 = a5;
  v36 = a1;
  v39 = a6;
  v16 = type metadata accessor for GeometryProxy();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v36 - v21;
  v23 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (uint64_t *)((char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = static Platform.current.getter();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v28, type metadata accessor for TranscriptList);
  if (v29 == 2)
    v30 = 1;
  else
    v30 = v28[41];
  outlined destroy of Participant.State();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a4, (uint64_t)v25, type metadata accessor for CaptionSectioner.Caption);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v31(v22, v38, v16);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    outlined destroy of Participant.State();
    v32 = 1;
  }
  else
  {
    v33 = specialized Set.contains(_:)(*v25, v37);
    v31(v19, (uint64_t)v22, v16);
    if ((v33 & 1) != 0)
    {
      type metadata accessor for CGRect(0);
      GeometryProxy.subscript.getter();
      v41.origin.x = a7;
      v41.origin.y = a8;
      v41.size.width = a9;
      v41.size.height = a10;
      v32 = CGRectIntersectsRect(v41, v40);
      v34 = *(void (**)(char *, uint64_t))(v17 + 8);
      v34(v19, v16);
      v34(v22, v16);
      outlined destroy of Participant.State();
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t))(v17 + 8);
      v35(v19, v16);
      v35(v22, v16);
      outlined destroy of Participant.State();
      v32 = 0;
    }
  }
  *v39 = v32;
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  unsigned int v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;

  v112 = a2;
  v5 = type metadata accessor for CaptionSectioner.Caption(0);
  v100 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RedactionReasons();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for CaptionSectioner.SectionID(0);
  MEMORY[0x1E0C80A78](v105);
  v97 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (CaptionSectioner.SectionID?, CaptionSectioner.SectionID?));
  MEMORY[0x1E0C80A78](v104);
  v106 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1E0C80A78](v14);
  v103 = (uint64_t)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  MEMORY[0x1E0C80A78](v16);
  v99 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v107 = (uint64_t)&v87 - v19;
  MEMORY[0x1E0C80A78](v20);
  v108 = (uint64_t)&v87 - v21;
  v22 = type metadata accessor for ContentSizeCategory();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for CaptionHeader(0);
  MEMORY[0x1E0C80A78](v102);
  v109 = (uint64_t *)((char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v110);
  v111 = (uint64_t)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.redacted(reason:)>>.0);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  if (*(_BYTE *)(a1 + 40) != 1)
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v30);
  v90 = (char *)&v87 - v31;
  v91 = v33;
  v92 = v32;
  v93 = v30;
  v94 = v5;
  v101 = v11;
  v95 = v9;
  v87 = v8;
  v96 = a3;
  v98 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  v34 = v112 + *(int *)(v98 + 20);
  Participant.contactDetails.getter();
  v35 = v114;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v89 = Participant.name(_:)();
  v88 = v36;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
  v37 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Participant(0) - 8) + 80);
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BD6441D0;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v34, v39 + v38, type metadata accessor for Participant);
  type metadata accessor for TranscriptList(0);
  specialized Environment.wrappedValue.getter();
  v40 = ContentSizeCategory.isAccessibilityCategory.getter();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  if (*(_BYTE *)(a1 + 41) == 1)
  {
    v41 = (uint64_t)v106;
    v42 = v107;
    if (one-time initialization token for headerSmallImageSize != -1)
      swift_once();
    swift_beginAccess();
    v43 = static Layout.Captions.headerSmallImageSize;
    v44 = v94;
    v45 = v112;
    if (one-time initialization token for bubbleMiniAvatarPadding != -1)
      swift_once();
    v46 = &static Layout.Captions.bubbleMiniAvatarPadding;
  }
  else
  {
    v41 = (uint64_t)v106;
    v42 = v107;
    if (one-time initialization token for headerImageSize != -1)
      swift_once();
    swift_beginAccess();
    v43 = static Layout.Captions.headerImageSize;
    v44 = v94;
    v45 = v112;
    if (one-time initialization token for bubbleAvatarPadding != -1)
      swift_once();
    v46 = &static Layout.Captions.bubbleAvatarPadding;
  }
  swift_beginAccess();
  v48 = *v46;
  v49 = v109;
  v50 = v88;
  *v109 = v89;
  v49[1] = v50;
  v49[2] = 0;
  v49[3] = v39;
  *((_BYTE *)v49 + 32) = v40 & 1;
  v49[5] = v43;
  v49[6] = v48;
  v51 = (uint64_t *)((char *)v49 + *(int *)(v102 + 40));
  *v51 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  v52 = static Edge.Set.top.getter();
  v53 = MEMORY[0x1C3B71FFC](0);
  v54 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v54 & v52) != v52)
    v53 = MEMORY[0x1C3B71FFC](v53 | v52);
  LODWORD(v112) = v53;
  v55 = v103;
  specialized Collection.first.getter(*(_QWORD *)a1, v103);
  v56 = v98;
  if (__swift_getEnumTagSinglePayload(v55, 1, v98) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    v57 = 1;
    v58 = v105;
    v59 = v108;
  }
  else
  {
    v59 = v108;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v55, v108, type metadata accessor for CaptionSectioner.SectionID);
    outlined destroy of Participant.State();
    v57 = 0;
    v58 = v105;
  }
  v60 = v45;
  __swift_storeEnumTagSinglePayload(v59, v57, 1, v58);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v45, v42, type metadata accessor for CaptionSectioner.SectionID);
  __swift_storeEnumTagSinglePayload(v42, 0, 1, v58);
  v61 = v41 + *(int *)(v104 + 48);
  outlined init with copy of FeatureEligibility?(v59, v41, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  outlined init with copy of FeatureEligibility?(v42, v61, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  if (__swift_getEnumTagSinglePayload(v41, 1, v58) != 1)
  {
    outlined init with copy of FeatureEligibility?(v41, v99, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    if (__swift_getEnumTagSinglePayload(v61, 1, v58) != 1)
    {
      outlined init with take of StagedCollaboration(v61, v97, type metadata accessor for CaptionSectioner.SectionID);
      v62 = static UUID.== infix(_:_:)();
      outlined destroy of Participant.State();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v107, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v108, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      outlined destroy of Participant.State();
      v56 = v98;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
      if ((v62 & 1) != 0)
        goto LABEL_27;
LABEL_26:
      v63 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      objc_msgSend(v63, sel_lineHeight);

      goto LABEL_27;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v107, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v108, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
    outlined destroy of Participant.State();
LABEL_24:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for (CaptionSectioner.SectionID?, CaptionSectioner.SectionID?));
    goto LABEL_26;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v59, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
  if (__swift_getEnumTagSinglePayload(v61, 1, v58) != 1)
    goto LABEL_24;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for CaptionSectioner.SectionID?);
LABEL_27:
  EdgeInsets.init(_all:)();
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = v111;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v109, v111, type metadata accessor for CaptionHeader);
  v73 = v72 + *(int *)(v110 + 36);
  *(_BYTE *)v73 = v112;
  *(_QWORD *)(v73 + 8) = v65;
  *(_QWORD *)(v73 + 16) = v67;
  *(_QWORD *)(v73 + 24) = v69;
  *(_QWORD *)(v73 + 32) = v71;
  *(_BYTE *)(v73 + 40) = 0;
  outlined destroy of Participant.State();
  v74 = *(_QWORD *)(v60 + *(int *)(v56 + 24));
  v75 = *(_QWORD *)(v74 + 16);
  if (v75)
  {
    v76 = v74 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    v77 = *(_QWORD *)(v100 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(v76, (uint64_t)v7, type metadata accessor for CaptionSectioner.Caption);
      v78 = v7[*(int *)(v44 + 48)];
      outlined destroy of Participant.State();
      if (v78 != 2)
        break;
      v76 += v77;
      if (!--v75)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    v113 = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [RedactionReasons]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [RedactionReasons] and conformance [A]);
    v79 = v87;
    dispatch thunk of SetAlgebra.init<A>(_:)();
  }
  else
  {
LABEL_32:
    static RedactionReasons.placeholder.getter();
    v79 = v87;
  }
  lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  v80 = v91;
  v81 = v101;
  v82 = v111;
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v79);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v82, &demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
  v84 = v90;
  v85 = v93;
  v83(v90, v80, v93);
  v86 = v96;
  v83((char *)v96, (uint64_t)v84, v85);
  return __swift_storeEnumTagSinglePayload(v86, 0, 1, v85);
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  type metadata accessor for TranscriptList(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

void closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v84;
  int v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[2];
  char v110;

  v98 = a4;
  v107 = a3;
  v103 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v103);
  v102 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v106 = (char *)&v97 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1E0C80A78](v9);
  v105 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v97 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v97 - v15);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v97 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v97 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v97 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v26);
  v101 = (uint64_t)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v100 = (uint64_t)&v97 - v29;
  MEMORY[0x1E0C80A78](v30);
  v99 = (uint64_t *)((char *)&v97 - v31);
  MEMORY[0x1E0C80A78](v32);
  v34 = (uint64_t *)((char *)&v97 - v33);
  MEMORY[0x1E0C80A78](v35);
  v37 = (uint64_t *)((char *)&v97 - v36);
  MEMORY[0x1E0C80A78](v38);
  v40 = (uint64_t *)((char *)&v97 - v39);
  v41 = *a1;
  v108 = *a2;
  v104 = v41;
  specialized BidirectionalCollection.last.getter(v41, (uint64_t)v25);
  v42 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v42) == 1)
  {
    v43 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    v44 = (uint64_t)v25;
LABEL_5:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, v43);
    v47 = 0;
    v48 = 1;
    goto LABEL_7;
  }
  v45 = *(_QWORD *)&v25[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  specialized BidirectionalCollection.last.getter(v45, (uint64_t)v40);
  swift_bridgeObjectRelease();
  v46 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v46) == 1)
  {
    v43 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    v44 = (uint64_t)v40;
    goto LABEL_5;
  }
  v47 = *v40;
  outlined destroy of Participant.State();
  v48 = 0;
LABEL_7:
  specialized BidirectionalCollection.last.getter(v108, (uint64_t)v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v42) == 1)
  {
    v49 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    v50 = (uint64_t)v22;
    goto LABEL_11;
  }
  v51 = *(_QWORD *)&v22[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  specialized BidirectionalCollection.last.getter(v51, (uint64_t)v37);
  swift_bridgeObjectRelease();
  v52 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v52) == 1)
  {
    v49 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    v50 = (uint64_t)v37;
LABEL_11:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v50, v49);
    v53 = 0;
    v54 = 1;
    if ((v48 & 1) != 0)
      goto LABEL_13;
    goto LABEL_12;
  }
  v53 = *v37;
  outlined destroy of Participant.State();
  v54 = 0;
  if ((v48 & 1) == 0)
LABEL_12:
    v54 = (v47 == v53) & ~v54;
LABEL_13:
  v55 = v104;
  specialized Collection.first.getter(v104, (uint64_t)v19);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v42) == 1)
  {
    v56 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    v57 = (uint64_t)v19;
LABEL_17:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v57, v56);
    v60 = 0;
    v61 = 1;
    goto LABEL_21;
  }
  v58 = *(_QWORD *)&v19[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  specialized Collection.first.getter(v58, (uint64_t)v34);
  swift_bridgeObjectRelease();
  v59 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v59) == 1)
  {
    v56 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    v57 = (uint64_t)v34;
    goto LABEL_17;
  }
  v60 = *v34;
  outlined destroy of Participant.State();
  v61 = 0;
LABEL_21:
  specialized Collection.first.getter(v108, (uint64_t)v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v42) == 1)
  {
    v62 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
LABEL_25:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, v62);
    v65 = 0;
    v66 = 1;
    goto LABEL_27;
  }
  v63 = *(uint64_t *)((char *)v16 + *(int *)(v42 + 24));
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  v16 = v99;
  specialized Collection.first.getter(v63, (uint64_t)v99);
  swift_bridgeObjectRelease();
  v64 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v64) == 1)
  {
    v62 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    goto LABEL_25;
  }
  v65 = *v16;
  outlined destroy of Participant.State();
  v66 = 0;
LABEL_27:
  v67 = (uint64_t)v105;
  if ((v61 & 1) == 0)
    v66 = (v60 == v65) & ~v66;
  specialized BidirectionalCollection.last.getter(v55, (uint64_t)v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v42) == 1)
  {
    v68 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    v69 = (uint64_t)v13;
LABEL_33:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, v68);
    v73 = 0;
    v74 = 0;
    goto LABEL_35;
  }
  v70 = *(_QWORD *)&v13[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
  v71 = v100;
  specialized BidirectionalCollection.last.getter(v70, v100);
  swift_bridgeObjectRelease();
  v72 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload(v71, 1, v72) == 1)
  {
    v68 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    v69 = v71;
    goto LABEL_33;
  }
  v75 = (uint64_t *)(v71 + *(int *)(v72 + 36));
  v73 = *v75;
  v74 = v75[1];
  swift_bridgeObjectRetain();
  outlined destroy of Participant.State();
LABEL_35:
  specialized BidirectionalCollection.last.getter(v108, v67);
  if (__swift_getEnumTagSinglePayload(v67, 1, v42) == 1)
  {
    v76 = &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?;
    v77 = v67;
  }
  else
  {
    v78 = *(_QWORD *)(v67 + *(int *)(v42 + 24));
    swift_bridgeObjectRetain();
    outlined destroy of Participant.State();
    v79 = v101;
    specialized BidirectionalCollection.last.getter(v78, v101);
    swift_bridgeObjectRelease();
    v80 = type metadata accessor for CaptionSectioner.Caption(0);
    if (__swift_getEnumTagSinglePayload(v79, 1, v80) != 1)
    {
      v86 = (uint64_t *)(v79 + *(int *)(v80 + 36));
      v81 = *v86;
      v82 = v86[1];
      swift_bridgeObjectRetain();
      outlined destroy of Participant.State();
      if (v74)
        goto LABEL_40;
LABEL_47:
      v88 = (uint64_t)v106;
      v87 = v107;
      if (v82)
      {
        swift_bridgeObjectRelease();
        v85 = 1;
      }
      else
      {
        v85 = 0;
      }
      goto LABEL_52;
    }
    v76 = &demangling cache variable for type metadata for CaptionSectioner.Caption?;
    v77 = v79;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v77, v76);
  v81 = 0;
  v82 = 0;
  if (!v74)
    goto LABEL_47;
LABEL_40:
  if (v82)
  {
    if (v73 == v81 && v74 == v82)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = 0;
    }
    else
    {
      v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = v84 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v85 = 1;
  }
  v88 = (uint64_t)v106;
  v87 = v107;
LABEL_52:
  outlined init with copy of ConversationControlsAppLaunchButtonType(v87, v88, type metadata accessor for TranscriptList);
  if (v66)
  {
    v89 = v88 + *(int *)(v103 + 64);
    v90 = *(_BYTE *)v89;
    v91 = *(_QWORD *)(v89 + 8);
    LOBYTE(v109[0]) = v90;
    v109[1] = v91;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    outlined destroy of Participant.State();
    if (v110 == 1 && ((v54 ^ 1 | v85) & 1) != 0)
    {
      MEMORY[0x1E0C80A78](v92);
      *(&v97 - 2) = v98;
      static Animation.default.getter();
      withAnimation<A>(_:_:)();
      swift_release();
      return;
    }
  }
  else
  {
    outlined destroy of Participant.State();
  }
  v93 = v102;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v87, v102, type metadata accessor for TranscriptList);
  if ((v66 & 1) != 0)
  {
    outlined destroy of Participant.State();
  }
  else
  {
    v94 = v93 + *(int *)(v103 + 64);
    v95 = *(_BYTE *)v94;
    v96 = *(_QWORD *)(v94 + 8);
    LOBYTE(v109[0]) = v95;
    v109[1] = v96;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    outlined destroy of Participant.State();
    if ((v110 & 1) != 0)
    {
      strcpy((char *)v109, "scroll-target");
      HIWORD(v109[1]) = -4864;
      static UnitPoint.bottom.getter();
      ScrollViewProxy.scrollTo<A>(_:anchor:)();
    }
  }
}

uint64_t closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  static UnitPoint.bottom.getter();
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v25 = a3;
  v30 = type metadata accessor for DispatchWorkItemFlags();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrollViewProxy();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = type metadata accessor for DispatchTime();
  v11 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - v15;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v26 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  MEMORY[0x1C3B72C50](v13, 0.05);
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v7);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_137;
  v19 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  v21 = v29;
  v20 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v22 = (void *)v26;
  MEMORY[0x1C3B735B0](v16, v6, v21, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v20);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  return ((uint64_t (*)(char *, uint64_t))v27)(v16, v28);
}

uint64_t closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t (*v24)(char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;
  char v46;

  v34 = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrollViewProxy();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = type metadata accessor for DispatchTime();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v31 - v18;
  v20 = (char *)(a3 + *(int *)(type metadata accessor for TranscriptList(0) + 64));
  v21 = *v20;
  v22 = *((_QWORD *)v20 + 1);
  LOBYTE(aBlock) = v21;
  v41 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  result = State.wrappedValue.getter();
  if (v46 == 1)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v31 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    MEMORY[0x1C3B72C50](v16, 0.05);
    v24 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
    v32 = v13;
    v33 = v24;
    v24(v16, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v10);
    v25 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v25, (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    v44 = partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter;
    v45 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v41 = 1107296256;
    v42 = thunk for @escaping @callee_guaranteed () -> ();
    v43 = &block_descriptor_118;
    v27 = _Block_copy(&aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    v28 = v35;
    v29 = v39;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v30 = (void *)v31;
    MEMORY[0x1C3B735B0](v19, v9, v28, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
    return v33(v19, v32);
  }
  return result;
}

uint64_t closure #1 in closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  static UnitPoint.bottom.getter();
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

double TranscriptList.maskGradient(viewHeight:gradientHeight:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Gradient.Stop>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD645390;
  static Color.clear.getter();
  *(_QWORD *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 40) = v3;
  static Color.black.getter();
  *(_QWORD *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 56) = v4;
  static Color.black.getter();
  *(_QWORD *)(v2 + 64) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 72) = v5;
  static Color.clear.getter();
  *(_QWORD *)(v2 + 80) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 88) = v6;
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  MEMORY[0x1C3B72968](v2);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  return result;
}

void closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
  MEMORY[0x1E0C80A78](v3);
  v36 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
  MEMORY[0x1E0C80A78](v34);
  v37 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
  MEMORY[0x1E0C80A78](v38);
  v35 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v34 - v20;
  v22 = a1[4];
  v23 = one-time initialization token for headerImageSize;
  swift_bridgeObjectRetain();
  if (v23 != -1)
    swift_once();
  swift_beginAccess();
  v40 = 0;
  v41 = v22;
  v42 = static Layout.Captions.headerImageSize;
  lazy protocol witness table accessor for type GroupIconView and conformance GroupIconView();
  v24 = 1;
  View.accessibilityHidden(_:)();
  swift_bridgeObjectRelease();
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  *(_QWORD *)&v18[*(int *)(v16 + 36)] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>);
  outlined init with take of Any?((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  v25 = v38;
  if (!*(_QWORD *)(*a1 + 16))
  {
    v26 = static HorizontalAlignment.center.getter();
    v27 = (uint64_t)v36;
    *v36 = v26;
    *(_QWORD *)(v27 + 8) = 0;
    *(_BYTE *)(v27 + 16) = 1;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter((uint64_t)a1, (char *)(v27 + *(int *)(v28 + 44)));
    v29 = v37;
    outlined init with copy of FeatureEligibility?(v27, v37, &demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    *(_WORD *)(v29 + *(int *)(v34 + 36)) = 257;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v27, &demangling cache variable for type metadata for VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>);
    v30 = static HierarchicalShapeStyle.primary.getter();
    v31 = v35;
    outlined init with copy of FeatureEligibility?(v29, v35, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
    *(_DWORD *)(v31 + *(int *)(v25 + 36)) = v30;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>);
    outlined init with take of Any?(v31, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    v24 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v12, v24, 1, v25);
  outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  v32 = v39;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?));
  outlined init with copy of FeatureEligibility?((uint64_t)v9, v32 + *(int *)(v33 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>);
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD __src[14];

  v47 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v41);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image?>);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v40 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - v21;
  v49 = a1;
  v48 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Image?);
  lazy protocol witness table accessor for type Image? and conformance <A> A?();
  Label.init(title:icon:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v19, v14);
  v23 = 1;
  if ((*(_BYTE *)(a1 + 56) & 1) == 0)
  {
    v24 = *(_QWORD *)(a1 + 48);
    LOBYTE(__src[1]) = 0;
    v50 = 0x3FF0000000000000;
    __src[0] = v24;
    lazy protocol witness table accessor for type Double and conformance Double();
    v25 = v4;
    ProgressView.init<A>(value:total:)();
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    v26 = v42;
    v27 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v6, v25, v43);
    memcpy(&v6[*(int *)(v41 + 36)], __src, 0x70uLL);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
    v28 = (uint64_t)v6;
    if (one-time initialization token for progressBar != -1)
      swift_once();
    v29 = static Colors.Captions.progressBar;
    KeyPath = swift_getKeyPath();
    v31 = v44;
    outlined init with copy of FeatureEligibility?(v28, v44, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
    v32 = (uint64_t *)(v31 + *(int *)(v7 + 36));
    *v32 = KeyPath;
    v32[1] = v29;
    swift_retain();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v28, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>);
    outlined init with take of Any?(v31, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    v23 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v13, v23, 1, v7);
  v33 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v34 = v45;
  v33(v45, v22, v14);
  v35 = v46;
  outlined init with copy of FeatureEligibility?((uint64_t)v13, v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  v36 = v47;
  v33(v47, v34, v14);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?));
  outlined init with copy of FeatureEligibility?(v35, (uint64_t)&v36[*(int *)(v37 + 48)], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  v38 = *(void (**)(char *, uint64_t))(v15 + 8);
  v38(v22, v14);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?);
  return ((uint64_t (*)(char *, uint64_t))v38)(v34, v14);
}

uint64_t closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;

  v3 = *(_BYTE *)(a1 + 56);
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if ((v3 & 1) != 0)
  {
    v23 = 0xE000000000000000;
    v5 = 0x80000001BD699CC0;
    v6 = 0xD000000000000016;
  }
  else
  {
    v6 = 0xD00000000000001ALL;
    v23 = 0xE000000000000000;
    v5 = 0x80000001BD699D00;
  }
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v9 = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v7, (NSBundle)v4, v8, *(Swift::String *)(&v23 - 1));

  lazy protocol witness table accessor for type String and conformance String();
  v10 = Text.init<A>(_:)();
  v12 = v11;
  v14 = v13;
  if (static Platform.current.getter() == 2)
    static Font.headline.getter();
  else
    static Font.caption.getter();
  v15 = Text.font(_:)();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release();
  outlined consume of Text.Storage(v10, v12, v14 & 1);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

uint64_t closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  if (*(_BYTE *)(a1 + 56) == 1)
  {
    swift_bridgeObjectRelease();
    result = Image.init(systemName:)();
  }
  else
  {
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  int v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t (*v46)(char *, uint64_t);
  uint64_t v47;

  v41 = a2;
  v45 = a3;
  v4 = type metadata accessor for ScrollViewProxy();
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  v5 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptList(0);
  v38 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v8);
  v39 = (uint64_t)&v36 - v9;
  v10 = type metadata accessor for ContentSizeCategory();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v36 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - v17;
  specialized Environment.wrappedValue.getter();
  LOBYTE(v6) = ContentSizeCategory.isAccessibilityCategory.getter();
  v46 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v47 = v10;
  result = v46(v18, v10);
  if ((v6 & 1) == 0)
  {
    v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    specialized Environment.wrappedValue.getter();
    v24 = a1;
    v25 = v39;
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v39, type metadata accessor for TranscriptList);
    v27 = v42;
    v26 = v43;
    v28 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v41, v44);
    v29 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v30 = (v7 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v21 = swift_allocObject();
    outlined init with take of StagedCollaboration(v25, v21 + v29, type metadata accessor for TranscriptList);
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v21 + v30, v27, v28);
    LODWORD(v28) = static Platform.current.getter();
    v31 = v40;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v40, v15, v47);
    if ((_DWORD)v28)
      LOBYTE(v32) = 0;
    else
      v32 = ContentSizeCategory.isAccessibilityCategory.getter();
    v33 = (uint64_t)v37;
    v46(v31, v47);
    v34 = *(unsigned __int8 *)(v24 + 57);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v24, v33, type metadata accessor for TranscriptList);
    if (v34 == 1)
    {
      v35 = *(_BYTE *)(v33 + 41);
      outlined destroy of Participant.State();
      if ((v35 & 1) == 0)
      {
        v23 = v45;
        if ((v32 & 1) != 0)
        {
          swift_release();
          v20 = 0;
          v22 = 0;
          v21 = 0;
        }
        else
        {
          v22 = (uint64_t)partial apply for closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter;
          v20 = 1;
        }
        goto LABEL_12;
      }
    }
    else
    {
      outlined destroy of Participant.State();
    }
    swift_release();
    v20 = 0;
    v22 = 0;
    v21 = 0;
    v23 = v45;
LABEL_12:
    result = v46(v15, v47);
    goto LABEL_13;
  }
  v20 = 0;
  v21 = 0;
  v22 = 1;
  v23 = v45;
LABEL_13:
  *v23 = v20;
  v23[1] = v22;
  v23[2] = v21;
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1)
{
  (*(void (**)(uint64_t))(a1 + 64))(1);
  static UnitPoint.bottom.getter();
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t closure #1 in TranscriptList.callHeader.getter@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  _QWORD v48[34];
  _QWORD v49[2];
  char v50;
  _BYTE v51[155];
  uint64_t v52;
  char v53;
  _BYTE v54[7];
  uint64_t v55;
  char v56;
  _BYTE v57[7];
  uint64_t v58;
  uint64_t v59;
  char v60;
  _BYTE v61[7];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned __int8 v67;
  char v68;
  char v69;
  _BYTE v70[7];
  _BYTE v71[7];
  _BYTE v72[7];
  _BYTE v73[155];
  _BYTE v74[168];
  uint64_t v75;
  char v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[160];

  v45 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Divider?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v47 = static VerticalAlignment.center.getter();
  closure #1 in closure #1 in TranscriptList.callHeader.getter(a1, (uint64_t)v81);
  if (*(_BYTE *)(a1 + 41) == 1)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    objc_msgSend(v11, sel_lineHeight);

  }
  v74[160] = 0;
  memcpy(&v74[7], v81, 0x94uLL);
  v46 = 0;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v12 = v76;
  v13 = v77;
  v14 = v78;
  v44 = v79;
  v42 = v75;
  v43 = v80;
  v15 = static Edge.Set.bottom.getter();
  v16 = MEMORY[0x1C3B71FFC](0);
  v17 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v17 & v15) != v15)
    LOBYTE(v16) = MEMORY[0x1C3B71FFC](v16 | v15);
  if ((a2 & 1) != 0)
  {
    if (one-time initialization token for bubblePadding != -1)
      swift_once();
    swift_beginAccess();
  }
  memcpy(v73, v74, sizeof(v73));
  v68 = v12;
  v67 = v14;
  EdgeInsets.init(_all:)();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = v68;
  v27 = v67;
  v69 = 0;
  if ((a2 & 1) != 0)
  {
    Divider.init()();
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  v29 = type metadata accessor for Divider();
  v30 = (uint64_t)v10;
  v39 = v10;
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v28, 1, v29);
  v31 = v69;
  outlined init with copy of FeatureEligibility?(v30, (uint64_t)v7, &demangling cache variable for type metadata for Divider?);
  v48[0] = v47;
  v48[1] = 0;
  LOBYTE(v48[2]) = v46;
  memcpy((char *)&v48[2] + 1, v73, 0x9BuLL);
  v32 = v42;
  v48[22] = v42;
  LOBYTE(v48[23]) = v26;
  *(_DWORD *)((char *)&v48[23] + 1) = *(_DWORD *)v72;
  HIDWORD(v48[23]) = *(_DWORD *)&v72[3];
  v48[24] = v13;
  LOBYTE(v48[25]) = v27;
  *(_DWORD *)((char *)&v48[25] + 1) = *(_DWORD *)v71;
  HIDWORD(v48[25]) = *(_DWORD *)&v71[3];
  v41 = v13;
  v33 = v44;
  v40 = v27;
  v34 = v43;
  v48[26] = v44;
  v48[27] = v43;
  v35 = v16;
  LOBYTE(v48[28]) = v16;
  *(_DWORD *)((char *)&v48[28] + 1) = *(_DWORD *)v70;
  HIDWORD(v48[28]) = *(_DWORD *)&v70[3];
  v48[29] = v19;
  v48[30] = v21;
  v48[31] = v23;
  v48[32] = v25;
  LOBYTE(v48[33]) = v31;
  v36 = v45;
  memcpy(v45, v48, 0x109uLL);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?));
  outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v36 + *(int *)(v37 + 48), &demangling cache variable for type metadata for Divider?);
  outlined retain of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>((uint64_t)v48);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v39, &demangling cache variable for type metadata for Divider?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Divider?);
  v49[0] = v47;
  v49[1] = 0;
  v50 = v46;
  memcpy(v51, v73, sizeof(v51));
  v52 = v32;
  v53 = v26;
  *(_DWORD *)v54 = *(_DWORD *)v72;
  *(_DWORD *)&v54[3] = *(_DWORD *)&v72[3];
  v55 = v41;
  v56 = v40;
  *(_DWORD *)v57 = *(_DWORD *)v71;
  *(_DWORD *)&v57[3] = *(_DWORD *)&v71[3];
  v58 = v33;
  v59 = v34;
  v60 = v35;
  *(_DWORD *)v61 = *(_DWORD *)v70;
  *(_DWORD *)&v61[3] = *(_DWORD *)&v70[3];
  v62 = v19;
  v63 = v21;
  v64 = v23;
  v65 = v25;
  v66 = v31;
  return outlined release of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>((uint64_t)v49);
}

uint64_t closure #1 in closure #1 in TranscriptList.callHeader.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  Class isa;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t KeyPath;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[7];
  char v105;
  _BYTE v106[7];
  char v107;

  v90 = a2;
  v94 = type metadata accessor for Font.Leading();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  KeyPath = (uint64_t)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptList(0);
  MEMORY[0x1E0C80A78](v4);
  v88 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v6);
  v87 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for PersonNameComponents();
  v8 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v85 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContentSizeCategory();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  specialized Environment.wrappedValue.getter();
  LOBYTE(v4) = ContentSizeCategory.isAccessibilityCategory.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v17 = 0;
  v18 = 0;
  v95 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  if ((v4 & 1) == 0)
  {
    if (*(_BYTE *)(a1 + 40) == 1)
    {
      v17 = *(_QWORD *)(a1 + 24);
      swift_retain();
    }
    else
    {
      v17 = 0;
    }
    v18 = *(_QWORD *)(a1 + 32);
    v24 = *(unsigned __int8 *)(a1 + 41);
    if (v24 == 1)
    {
      v25 = one-time initialization token for headerSmallImageSize;
      swift_bridgeObjectRetain();
      if (v25 != -1)
        swift_once();
      v26 = &static Layout.Captions.headerSmallImageSize;
    }
    else
    {
      v27 = one-time initialization token for headerImageSize;
      swift_bridgeObjectRetain();
      if (v27 != -1)
        swift_once();
      v26 = &static Layout.Captions.headerImageSize;
    }
    swift_beginAccess();
    v95 = *v26;
    v28 = static Edge.Set.trailing.getter();
    v29 = MEMORY[0x1C3B71FFC](0);
    v30 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v30 & v28) != v28)
      LOBYTE(v29) = MEMORY[0x1C3B71FFC](v29 | v28);
    if (v24)
    {
      if (one-time initialization token for bubbleMiniAvatarPadding == -1)
        goto LABEL_18;
    }
    else if (one-time initialization token for bubbleAvatarPadding == -1)
    {
LABEL_18:
      swift_beginAccess();
      EdgeInsets.init(_all:)();
      v20 = v31;
      v21 = v32;
      v22 = v33;
      v23 = v34;
      v19 = v29;
      goto LABEL_19;
    }
    swift_once();
    goto LABEL_18;
  }
LABEL_19:
  v96 = v23;
  v97 = v19;
  v91 = v22;
  v92 = v21;
  v35 = *(unsigned __int8 *)(a1 + 40);
  v99 = v18;
  v100 = v17;
  v98 = v20;
  if (v35 == 1)
  {
    v36 = KeyPath;
    v37 = *(_QWORD *)(a1 + 8);
    v38 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
  specialized Collection.first.getter(*(_QWORD *)(a1 + 32), (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) != 1)
  {
    v40 = *(void **)&v12[*(int *)(v6 + 28)];
    if (v40)
    {
      v84 = v8;
      v41 = v40;
      outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v41);
      if (v43)
      {
        v44 = v42;
        if ((objc_msgSend(v41, sel_shouldHideContact) & 1) != 0)
        {
          v87 = v44;
          swift_bridgeObjectRetain();
          v45 = v85;
          PersonNameComponents.init()();
          PersonNameComponents.givenName.setter();
          PersonNameComponents.familyName.setter();
          if (one-time initialization token for initials != -1)
            swift_once();
          swift_beginAccess();
          v46 = (id)static NSPersonNameComponentsFormatter.initials;
          isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          v48 = objc_msgSend(v46, sel_stringFromPersonNameComponents_, isa);

          v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v51 = v50;

          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v45, v86);
          v102 = v49;
          v103 = v51;
          lazy protocol witness table accessor for type String and conformance String();
          StringProtocol.localizedUppercase.getter();

          swift_bridgeObjectRelease();
          v52 = 0;
          v39 = KeyPath;
          goto LABEL_32;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    v53 = v87;
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v87, type metadata accessor for Participant);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v53, v54, v55, v56, v57, v58, v59, v60, v84, v85, v86, v87, v88, KeyPath, v90, v91, v92, v93, v94,
      v95);
    v52 = v101;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of Participant.State();
    v39 = KeyPath;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v37 = Participant.name(_:)();
    v38 = v61;
    swift_bridgeObjectRelease();
    outlined destroy of Participant.State();
    goto LABEL_33;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  v37 = 0;
  v38 = 0;
  v39 = KeyPath;
LABEL_33:
  v62 = v88;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, v88, type metadata accessor for TranscriptList);
  if (!v38)
  {
    v37 = *(_QWORD *)(v62 + 8);
    v38 = *(_QWORD *)(v62 + 16);
    swift_bridgeObjectRetain();
  }
  v36 = v39;
  outlined destroy of Participant.State();
LABEL_36:
  v102 = v37;
  v103 = v38;
  lazy protocol witness table accessor for type String and conformance String();
  v63 = Text.init<A>(_:)();
  v65 = v64;
  v67 = v66;
  v69 = v68 & 1;
  KeyPath = swift_getKeyPath();
  static Font.subheadline.getter();
  v70 = v93;
  v71 = v36;
  v72 = v36;
  v73 = v94;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v93 + 104))(v72, *MEMORY[0x1E0CDD6D8], v94);
  v88 = Font.leading(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v73);
  v74 = swift_getKeyPath();
  v75 = static HierarchicalShapeStyle.primary.getter();
  v107 = v69;
  v105 = 0;
  v76 = v90;
  *(_DWORD *)(v90 + 65) = v102;
  *(_DWORD *)(v76 + 68) = *(_DWORD *)((char *)&v102 + 3);
  *(_DWORD *)(v76 + 89) = *(_DWORD *)v106;
  *(_DWORD *)(v76 + 92) = *(_DWORD *)&v106[3];
  *(_DWORD *)(v76 + 121) = *(_DWORD *)v104;
  *(_DWORD *)(v76 + 124) = *(_DWORD *)&v104[3];
  v77 = v99;
  v78 = v100;
  *(_QWORD *)v76 = v100;
  *(_QWORD *)(v76 + 8) = v77;
  v79 = v77;
  v80 = v97;
  *(_QWORD *)(v76 + 16) = v95;
  *(_QWORD *)(v76 + 24) = v80;
  *(_QWORD *)(v76 + 32) = v98;
  v81 = v91;
  *(_QWORD *)(v76 + 40) = v92;
  *(_QWORD *)(v76 + 48) = v81;
  *(_QWORD *)(v76 + 56) = v96;
  *(_BYTE *)(v76 + 64) = 0;
  *(_QWORD *)(v76 + 72) = v63;
  *(_QWORD *)(v76 + 80) = v65;
  *(_BYTE *)(v76 + 88) = v69;
  v87 = v67;
  v82 = KeyPath;
  *(_QWORD *)(v76 + 96) = v67;
  *(_QWORD *)(v76 + 104) = v82;
  *(_QWORD *)(v76 + 112) = 2;
  *(_BYTE *)(v76 + 120) = 0;
  *(_QWORD *)(v76 + 128) = v74;
  *(_QWORD *)(v76 + 136) = v88;
  *(_DWORD *)(v76 + 144) = v75;
  outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(v78, v79);
  outlined copy of Text.Storage(v63, v65, v69);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined consume of Text.Storage(v63, v65, v69);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(v100, v99);
}

uint64_t CaptionsSizeToggleButton.init(configuration:action:)(char a1)
{
  return a1 & 1;
}

void TranscriptSubtitle.SubtitlePadding.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static Edge.Set.top.getter();
  v11 = static Edge.Set.bottom.getter();
  v12 = MEMORY[0x1C3B71FFC](0);
  v13 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v13 & v10) != v10)
    v12 = MEMORY[0x1C3B71FFC](v12 | v10);
  v14 = MEMORY[0x1C3B71FFC](v12);
  if (MEMORY[0x1C3B71FFC](v14 & v11) != v11)
    LOBYTE(v12) = MEMORY[0x1C3B71FFC](v12 | v11);
  if (one-time initialization token for subtitleStyleVerticalPadding != -1)
    swift_once();
  EdgeInsets.init(_all:)();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v6, a1, v23);
  v24 = &v6[*(int *)(v4 + 36)];
  *v24 = v12;
  *((_QWORD *)v24 + 1) = v16;
  *((_QWORD *)v24 + 2) = v18;
  *((_QWORD *)v24 + 3) = v20;
  *((_QWORD *)v24 + 4) = v22;
  v24[40] = 0;
  v25 = static Edge.Set.leading.getter();
  v26 = static Edge.Set.trailing.getter();
  v27 = MEMORY[0x1C3B71FFC](0);
  v28 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v28 & v25) != v25)
    v27 = MEMORY[0x1C3B71FFC](v27 | v25);
  v29 = MEMORY[0x1C3B71FFC](v27);
  if (MEMORY[0x1C3B71FFC](v29 & v26) != v26)
    LOBYTE(v27) = MEMORY[0x1C3B71FFC](v27 | v26);
  if (one-time initialization token for subtitleStyleHorizontalPadding != -1)
    swift_once();
  EdgeInsets.init(_all:)();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  v38 = &v9[*(int *)(v7 + 36)];
  *v38 = v27;
  *((_QWORD *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
  outlined init with take of Any?((uint64_t)v9, a2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout>);
}

void TranscriptSubtitle.ParticipantBadgeModifier.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a1;
  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>>.Storage);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(0);
  outlined init with copy of FeatureEligibility?(v2 + *(int *)(v16 + 20), (uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of StagedCollaboration((uint64_t)v12, (uint64_t)v15, type metadata accessor for Participant);
    if (*(_BYTE *)(v2 + *(int *)(v16 + 24)) == 1)
    {
      *(_QWORD *)v9 = static HorizontalAlignment.leading.getter();
      *((_QWORD *)v9 + 1) = 0xC018000000000000;
      v9[16] = 0;
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      closure #1 in TranscriptSubtitle.ParticipantBadgeModifier.body(content:)((uint64_t)v15, v22, (uint64_t)&v9[*(int *)(v17 + 44)]);
      outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
      lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>);
      outlined destroy of Participant.State();
      return;
    }
    outlined destroy of Participant.State();
  }
  v18 = v21;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v19(v5, v22, v3);
  v19(v7, (uint64_t)v5, v3);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
}

void closure #1 in TranscriptSubtitle.ParticipantBadgeModifier.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t KeyPath;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v39 = a2;
  v40 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>);
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v34 - v7;
  v8 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TranscriptParticipantBadge(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  MEMORY[0x1E0C80A78](v35);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v34 - v20;
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v10, type metadata accessor for Participant);
  KeyPath = swift_getKeyPath();
  v23 = Image.init(systemName:)();
  *(_QWORD *)v13 = KeyPath;
  v13[8] = 0;
  outlined init with take of StagedCollaboration((uint64_t)v10, (uint64_t)&v13[v11[5]], type metadata accessor for Participant);
  v24 = &v13[v11[6]];
  v41 = v23;
  State.init(wrappedValue:)();
  v25 = *((_QWORD *)&v42 + 1);
  *(_QWORD *)v24 = v42;
  *((_QWORD *)v24 + 1) = v25;
  v26 = v11[7];
  v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<(), Never>?);
  State.init(wrappedValue:)();
  *(_OWORD *)&v13[v26] = v42;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v13, (uint64_t)v15, type metadata accessor for TranscriptParticipantBadge);
  *(_QWORD *)&v15[*(int *)(v35 + 36)] = 0x3FF0000000000000;
  outlined destroy of Participant.State();
  outlined init with copy of FeatureEligibility?((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  *(_OWORD *)&v18[*(int *)(v16 + 36)] = xmmword_1BD6681C0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>);
  outlined init with take of Any?((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  v28 = v36;
  v27 = v37;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v29(v36, v39, v4);
  outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  v30 = v38;
  v29(v38, (uint64_t)v28, v4);
  v31 = v40;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>));
  v29((char *)(v31 + *(int *)(v32 + 48)), (uint64_t)v30, v4);
  v33 = *(void (**)(char *, uint64_t))(v27 + 8);
  v33(v28, v4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
  v33(v30, v4);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>);
}

uint64_t TranscriptSubtitle.placeholderFont.getter()
{
  _BYTE *v0;
  id v2;

  if (*v0 == 1)
    return static Font.body.getter();
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 38.0, *MEMORY[0x1E0DC1438]);
  return Font.init(_:)();
}

__n128 TranscriptSubtitle.body.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __n128 result;
  _OWORD v26[2];
  uint64_t v27;

  v3 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v26 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v26 - v16;
  specialized BidirectionalCollection.last.getter(*(_QWORD *)(v1 + 8), (uint64_t)v8);
  v18 = type metadata accessor for CaptionSectioner.SpeakerSection(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.SpeakerSection?);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v3);
  }
  else
  {
    v19 = *(_QWORD *)&v8[*(int *)(v18 + 24)];
    swift_bridgeObjectRetain();
    outlined destroy of Participant.State();
    specialized BidirectionalCollection.last.getter(v19, (uint64_t)v14);
    swift_bridgeObjectRelease();
    outlined init with copy of FeatureEligibility?((uint64_t)v14, (uint64_t)v11, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v3) == 1)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v3);
    }
    else
    {
      outlined init with take of StagedCollaboration((uint64_t)v11, (uint64_t)v5, type metadata accessor for CaptionSectioner.Caption);
      if (v5[*(int *)(v3 + 48)])
      {
        v20 = 1;
      }
      else
      {
        outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v5, (uint64_t)v17, type metadata accessor for CaptionSectioner.Caption);
        v20 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v17, v20, 1, v3);
      outlined destroy of Participant.State();
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  }
  v21 = static HorizontalAlignment.center.getter();
  closure #2 in TranscriptSubtitle.body.getter(v1, (uint64_t)v17, (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26);
  v22 = v27;
  v24 = v26[0];
  v23 = v26[1];
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = 0x4030000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v24;
  *(_OWORD *)(a1 + 40) = v23;
  *(_QWORD *)(a1 + 56) = v22;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  return result;
}

uint64_t closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)();
  uint64_t v18;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = type metadata accessor for TranscriptSubtitle(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v12, v13);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + v11 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v12, v16 + v14, type metadata accessor for TranscriptSubtitle);
  outlined init with take of Any?((uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v17 = 0;
  v18 = 0;
  if (*(_BYTE *)(a1 + 17) == 1)
  {
    if (static Platform.current.getter() == 2)
    {
      outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)v12, type metadata accessor for TranscriptSubtitle);
      v18 = swift_allocObject();
      outlined init with take of StagedCollaboration((uint64_t)v12, v18 + v14, type metadata accessor for TranscriptSubtitle);
      v17 = partial apply for closure #2 in closure #2 in TranscriptSubtitle.body.getter;
    }
    else
    {
      v17 = 0;
      v18 = 0;
    }
  }
  *a3 = partial apply for closure #1 in closure #2 in TranscriptSubtitle.body.getter;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v16;
  a3[2] = 0;
  a3[3] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v17;
  a3[4] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v18;
  swift_retain();
  outlined copy of CaptionsSizeToggleButton?(0, (uint64_t)v17);
  outlined consume of CaptionsSizeToggleButton?(0, (uint64_t)v17);
  return swift_release();
}

uint64_t closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v102 = a3;
  v93 = a1;
  v100 = a4;
  v5 = type metadata accessor for ScrollViewProxy();
  v97 = *(_QWORD *)(v5 - 8);
  v98 = v5;
  MEMORY[0x1E0C80A78](v5);
  v95 = v6;
  v96 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v91 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v92 = v7;
  v94 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TranscriptSubtitle(0);
  v88 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v89 = v8;
  v90 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v79);
  v12 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = type metadata accessor for Material();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  MEMORY[0x1E0C80A78](v74);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v77);
  v80 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  MEMORY[0x1E0C80A78](v78);
  v81 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v101);
  v87 = (uint64_t)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v84 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v17 = static Alignment.center.getter();
  v17[1] = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, _ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>);
  closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(a2, (uint64_t)v17 + *(int *)(v28 + 44));
  v29 = static SafeAreaRegions.all.getter();
  v30 = static Edge.Set.all.getter();
  outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>);
  v31 = &v19[*(int *)(v74 + 36)];
  *(_QWORD *)v31 = v29;
  v31[8] = v30;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>);
  static Material.regular.getter();
  v32 = static Edge.Set.all.getter();
  v33 = &v22[*(int *)(v20 + 36)];
  v34 = v75;
  v35 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v33, v14, v76);
  v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v32;
  v36 = (uint64_t)a2;
  outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
  if (*a2 == 1)
  {
    if (one-time initialization token for subtitleSmallCornerRadius != -1)
      swift_once();
    v37 = &static Layout.Captions.subtitleSmallCornerRadius;
  }
  else
  {
    if (one-time initialization token for subtitleCornerRadius != -1)
      swift_once();
    v37 = &static Layout.Captions.subtitleCornerRadius;
  }
  v38 = (uint64_t)v81;
  v39 = *v37;
  v40 = (char *)v12 + *(int *)(v79 + 20);
  v41 = *MEMORY[0x1E0CDB0C0];
  v42 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v40, v41, v42);
  *v12 = v39;
  v12[1] = v39;
  v43 = (uint64_t)v80;
  v44 = (uint64_t)&v80[*(int *)(v77 + 36)];
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v12, v44, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)(v44
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>);
  outlined destroy of Participant.State();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  v45 = (uint64_t)v83;
  State.wrappedValue.getter();
  v46 = *(_BYTE *)(v36 + 16);
  KeyPath = swift_getKeyPath();
  v48 = v38 + *(int *)(v78 + 36);
  *(_QWORD *)v48 = KeyPath;
  *(_BYTE *)(v48 + 8) = 0;
  v49 = type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(0);
  outlined init with take of Any?(v45, v48 + *(int *)(v49 + 20), &demangling cache variable for type metadata for Participant?);
  *(_BYTE *)(v48 + *(int *)(v49 + 24)) = v46;
  outlined init with take of Any?(v43, v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
  v50 = static Edge.Set.bottom.getter();
  v51 = MEMORY[0x1C3B71FFC](0);
  v52 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v52 & v50) != v50)
    LOBYTE(v51) = MEMORY[0x1C3B71FFC](v51 | v50);
  EdgeInsets.init(_all:)();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v61 = v87;
  outlined init with copy of FeatureEligibility?(v38, v87, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  v62 = v61 + *(int *)(v101 + 36);
  *(_BYTE *)v62 = v51;
  *(_QWORD *)(v62 + 8) = v54;
  *(_QWORD *)(v62 + 16) = v56;
  *(_QWORD *)(v62 + 24) = v58;
  *(_QWORD *)(v62 + 32) = v60;
  *(_BYTE *)(v62 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
  v63 = v90;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v36, v90, type metadata accessor for TranscriptSubtitle);
  v64 = v94;
  outlined init with copy of FeatureEligibility?(v102, v94, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v66 = v96;
  v65 = v97;
  v67 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v93, v98);
  v68 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v69 = (v89 + *(unsigned __int8 *)(v91 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  v70 = (v92 + *(unsigned __int8 *)(v65 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v71 = swift_allocObject();
  outlined init with take of StagedCollaboration(v63, v71 + v68, type metadata accessor for TranscriptSubtitle);
  outlined init with take of Any?(v64, v71 + v69, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v71 + v70, v66, v67);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  lazy protocol witness table accessor for type CaptionSectioner.Caption? and conformance <A> A?();
  v72 = v84;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>, _PaddingLayout>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v85 + 32))(v100, v72, v86);
}

void closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  __int128 v77;

  v56 = a2;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>.Storage);
  MEMORY[0x1E0C80A78](v55);
  v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>);
  MEMORY[0x1E0C80A78](v54);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v49 - v15;
  v17 = *((_QWORD *)a1 + 13);
  v68 = *(_OWORD *)(a1 + 88);
  *(_QWORD *)&v69 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
  v18 = State.wrappedValue.getter();
  if ((_QWORD)v65)
  {
    v53 = v16;
    v49[1] = v49;
    MEMORY[0x1E0C80A78](v18);
    *(_QWORD *)&v52 = v5;
    static Axis.Set.vertical.getter();
    v50 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>);
    v51 = v9;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>> and conformance VStack<A>);
    ScrollView.init(_:showsIndicators:content:)();
    swift_bridgeObjectRelease();
    v19 = *((_QWORD *)a1 + 8);
    *(_QWORD *)&v68 = *((_QWORD *)a1 + 7);
    *((_QWORD *)&v68 + 1) = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    v20 = *((_QWORD *)a1 + 10);
    *(_QWORD *)&v68 = *((_QWORD *)a1 + 9);
    *((_QWORD *)&v68 + 1) = v20;
    State.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v21 = v50;
    v22 = v52;
    (*(void (**)(char *, char *, _QWORD))(v50 + 16))(v11, v8, v52);
    v23 = &v11[*(int *)(v51 + 36)];
    v24 = v69;
    *(_OWORD *)v23 = v68;
    *((_OWORD *)v23 + 1) = v24;
    *((_OWORD *)v23 + 2) = v70;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    v25 = *((_QWORD *)a1 + 10);
    v64 = *((_QWORD *)a1 + 9);
    *(_QWORD *)&v65 = v25;
    State.wrappedValue.getter();
    if (one-time initialization token for subtitleStyleVerticalPadding != -1)
      swift_once();
    TranscriptSubtitle.maskGradient(viewHeight:gradientHeight:)((uint64_t)&v64);
    v26 = v64;
    v52 = v65;
    v27 = v66;
    v28 = v67;
    outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>);
    v29 = &v13[*(int *)(v54 + 36)];
    *(_QWORD *)v29 = v26;
    *(_OWORD *)(v29 + 8) = v52;
    *((_QWORD *)v29 + 3) = v27;
    *((_QWORD *)v29 + 4) = v28;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>);
    v30 = (uint64_t)v53;
    outlined init with take of Any?((uint64_t)v13, (uint64_t)v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>);
    outlined init with copy of FeatureEligibility?(v30, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v30, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>);
    return;
  }
  v31 = *a1;
  if ((v31 & 1) != 0)
  {
    if (one-time initialization token for subtitleStyleMinWidthSmallLayout != -1)
      goto LABEL_21;
  }
  else if (one-time initialization token for subtitleStyleMinWidth != -1)
  {
LABEL_21:
    swift_once();
  }
  v53 = (char *)static VerticalAlignment.center.getter();
  closure #2 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter((uint64_t)&v68);
  v52 = v68;
  v32 = v69;
  v33 = v70;
  v34 = v71;
  v35 = v72;
  v51 = v73;
  if (v31)
  {
    if (one-time initialization token for subtitleStyleMinWidthSmallLayout != -1)
      swift_once();
    if (one-time initialization token for subtitleSmallFont != -1)
      swift_once();
    v36 = &static Layout.Captions.subtitleSmallFont;
  }
  else
  {
    if (one-time initialization token for subtitleStyleMinWidth != -1)
      swift_once();
    if (one-time initialization token for subtitleFont != -1)
      swift_once();
    v36 = &static Layout.Captions.subtitleFont;
  }
  objc_msgSend((id)*v36, sel_lineHeight);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v37 = v68;
  v38 = BYTE8(v68);
  v39 = v69;
  v40 = BYTE8(v69);
  v41 = v70;
  v42 = BYTE8(v70);
  v43 = v71;
  v44 = v73;
  v45 = v75;
  v46 = v76;
  LOBYTE(v64) = 0;
  v57 = v35;
  v63 = BYTE8(v68);
  v62 = BYTE8(v69);
  v61 = BYTE8(v70);
  v60 = v72;
  v59 = v74;
  v58 = v76;
  v47 = v72;
  v48 = v74;
  *(_QWORD *)v4 = v53;
  *((_QWORD *)v4 + 1) = 0x4010000000000000;
  v4[16] = 0;
  *(_OWORD *)(v4 + 24) = v52;
  *(_OWORD *)(v4 + 40) = v32;
  *(_OWORD *)(v4 + 56) = v33;
  *((_QWORD *)v4 + 9) = v34;
  v4[80] = v35;
  *((_QWORD *)v4 + 11) = v51;
  *((_QWORD *)v4 + 12) = v37;
  v4[104] = v38;
  *((_QWORD *)v4 + 14) = v39;
  v4[120] = v40;
  *((_QWORD *)v4 + 16) = v41;
  v4[136] = v42;
  *((_QWORD *)v4 + 18) = v43;
  v4[152] = v47;
  *((_QWORD *)v4 + 20) = v44;
  v4[168] = v48;
  *((_QWORD *)v4 + 22) = v45;
  v4[184] = v46;
  *((_OWORD *)v4 + 12) = v77;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>();
  _ConditionalContent<>.init(storage:)();
}

void *closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _BYTE v10[232];
  _BYTE __src[239];

  v8 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(a1, a2, a3, (uint64_t)v10);
  memcpy(&__src[7], v10, 0xE8uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = 0xC000000000000000;
  *(_BYTE *)(a4 + 16) = 0;
  return memcpy((void *)(a4 + 17), __src, 0xEFuLL);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  _BYTE __dst[161];
  _BYTE v30[7];
  char v31;
  _BYTE v32[7];
  char v33;
  _BYTE v34[168];
  _OWORD __src[10];
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  *(_QWORD *)&__src[0] = a1;
  *((_QWORD *)&__src[0] + 1) = a2;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v6 = Text.init<A>(_:)();
  v8 = v7;
  v10 = v9;
  if (*a3 == 1)
  {
    if (one-time initialization token for subtitleSmallFont != -1)
      swift_once();
    v11 = &static Layout.Captions.subtitleSmallFont;
  }
  else
  {
    if (one-time initialization token for subtitleFont != -1)
      swift_once();
    v11 = &static Layout.Captions.subtitleFont;
  }
  v12 = (id)*v11;
  Font.init(_:)();
  v13 = Text.font(_:)();
  v15 = v14;
  v17 = v16;
  v28 = v18;
  swift_release();
  outlined consume of Text.Storage(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  if (*a3 == 1)
  {
    if (one-time initialization token for subtitleSmallFont != -1)
      swift_once();
    v20 = &static Layout.Captions.subtitleSmallFont;
  }
  else
  {
    if (one-time initialization token for subtitleFont != -1)
      swift_once();
    v20 = &static Layout.Captions.subtitleFont;
  }
  v21 = (void *)*v20;
  v41 = v13;
  v42 = v15;
  v43 = v17 & 1;
  v44 = v28;
  v45 = KeyPath;
  v46 = 1;
  objc_msgSend(v21, sel_lineHeight);
  static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, __src);
  outlined consume of Text.Storage(v13, v15, v17 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v22 = static Color.clear.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v23 = v36;
  v24 = v37;
  v25 = v38;
  v26 = v39;
  memcpy(__dst, __src, 0xA0uLL);
  memcpy((void *)a4, __src, 0xA0uLL);
  v33 = v24;
  v31 = v26;
  *(_DWORD *)(a4 + 177) = *(_DWORD *)v32;
  *(_DWORD *)(a4 + 180) = *(_DWORD *)&v32[3];
  *(_DWORD *)(a4 + 193) = *(_DWORD *)v30;
  *(_DWORD *)(a4 + 196) = *(_DWORD *)&v30[3];
  *(_QWORD *)(a4 + 160) = v22;
  *(_QWORD *)(a4 + 168) = v23;
  *(_BYTE *)(a4 + 176) = v24;
  *(_QWORD *)(a4 + 184) = v25;
  *(_BYTE *)(a4 + 192) = v26;
  *(_OWORD *)(a4 + 200) = v40;
  strcpy((char *)(a4 + 216), "scrolling-text");
  *(_BYTE *)(a4 + 231) = -18;
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>((uint64_t)__dst);
  memcpy(v34, __src, 0xA0uLL);
  return outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>((uint64_t)v34);
}

double TranscriptSubtitle.maskGradient(viewHeight:gradientHeight:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Gradient.Stop>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD645390;
  static Color.clear.getter();
  *(_QWORD *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 40) = v3;
  static Color.black.getter();
  *(_QWORD *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 56) = v4;
  static Color.black.getter();
  *(_QWORD *)(v2 + 64) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 72) = v5;
  static Color.clear.getter();
  *(_QWORD *)(v2 + 80) = Gradient.Stop.init(color:location:)();
  *(_QWORD *)(v2 + 88) = v6;
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  MEMORY[0x1C3B72968](v2);
  LinearGradient.init(gradient:startPoint:endPoint:)();
  result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  return result;
}

uint64_t closure #2 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;

  swift_bridgeObjectRelease();
  v28 = Image.init(systemName:)();
  v27 = TranscriptSubtitle.placeholderFont.getter();
  KeyPath = swift_getKeyPath();
  v25 = static Color.secondary.getter();
  v24 = swift_getKeyPath();
  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v29._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD699CC0;
  v3._countAndFlagsBits = 0xD000000000000016;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v29);

  lazy protocol witness table accessor for type String and conformance String();
  v6 = Text.init<A>(_:)();
  v8 = v7;
  v10 = v9 & 1;
  TranscriptSubtitle.placeholderFont.getter();
  v11 = Text.font(_:)();
  v13 = v12;
  v15 = v14;
  swift_release();
  outlined consume of Text.Storage(v6, v8, v10);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  v16 = Text.foregroundColor(_:)();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  swift_release();
  outlined consume of Text.Storage(v11, v13, v15 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 16) = v27;
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 32) = v25;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = v20 & 1;
  *(_QWORD *)(a1 + 64) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of Text.Storage(v16, v18, v20 & 1);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v16, v18, v20 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v36 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v34 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v34 - v18;
  v20 = TranscriptSubtitle.scrollViewParameters(for:)(a4);
  v22 = v21;
  v24 = v23;
  v35 = v20;
  v25 = *(_QWORD *)(a3 + 64);
  *(_QWORD *)&v38 = *(_QWORD *)(a3 + 56);
  *((_QWORD *)&v38 + 1) = v25;
  *(_QWORD *)&v37 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.setter();
  v26 = *(_QWORD *)(a3 + 80);
  *(_QWORD *)&v38 = *(_QWORD *)(a3 + 72);
  *((_QWORD *)&v38 + 1) = v26;
  *(_QWORD *)&v37 = v24;
  State.wrappedValue.setter();
  outlined init with copy of FeatureEligibility?(a4, (uint64_t)v13, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v27 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v27) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    v28 = 1;
  }
  else
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)&v13[*(int *)(v27 + 20)], (uint64_t)v19, type metadata accessor for Participant);
    outlined destroy of Participant.State();
    v28 = 0;
  }
  v29 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, v28, 1, v29);
  type metadata accessor for TranscriptSubtitle(0);
  outlined init with copy of FeatureEligibility?((uint64_t)v19, (uint64_t)v16, &demangling cache variable for type metadata for Participant?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  State.wrappedValue.setter();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v10, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v27) == 1)
  {
    static Animation.snappy(duration:extraBounce:)();
    v30 = *(_OWORD *)(a3 + 88);
    v39 = *(_QWORD *)(a3 + 104);
    v37 = xmmword_1BD6690E0;
    v38 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
    v31 = State.wrappedValue.setter();
  }
  else
  {
    static Animation.snappy(duration:extraBounce:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  }
  MEMORY[0x1E0C80A78](v31);
  *(&v34 - 6) = a3;
  *(&v34 - 5) = a4;
  *(&v34 - 4) = v22;
  *(&v34 - 3) = v24;
  v32 = v36;
  *(&v34 - 2) = v35;
  *(&v34 - 1) = v32;
  swift_retain();
  withAnimation<A>(_:_:)();
  return swift_release_n();
}

uint64_t TranscriptSubtitle.scrollViewParameters(for:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  double v17;
  uint64_t inited;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  Class isa;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double Height;
  double v33;
  double v34;
  uint64_t v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CaptionSectioner.Caption(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v5, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) != 1)
  {
    outlined init with take of StagedCollaboration((uint64_t)v5, (uint64_t)v8, type metadata accessor for CaptionSectioner.Caption);
    v9 = *v1;
    if (v9 == 1)
    {
      if (one-time initialization token for subtitleSmallFont != -1)
        swift_once();
      v10 = &static Layout.Captions.subtitleSmallFont;
    }
    else
    {
      if (one-time initialization token for subtitleFont != -1)
        swift_once();
      v10 = &static Layout.Captions.subtitleFont;
    }
    v12 = &v8[*(int *)(v6 + 36)];
    v13 = *(_QWORD *)v12;
    v14 = *((_QWORD *)v12 + 1);
    v15 = (id)*v10;
    swift_bridgeObjectRetain();
    v11 = (void *)MEMORY[0x1C3B72E00](v13, v14);
    swift_bridgeObjectRelease();
    if (v9)
    {
      if (one-time initialization token for subtitleStyleMaxWidthSmallLayout != -1)
        swift_once();
      v16 = &static Layout.Captions.subtitleStyleMaxWidthSmallLayout;
    }
    else
    {
      if (one-time initialization token for subtitleStyleMaxWidth != -1)
        swift_once();
      v16 = &static Layout.Captions.subtitleStyleMaxWidth;
    }
    v17 = *(double *)v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
    v19 = (void *)*MEMORY[0x1E0DC1138];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    *(_QWORD *)(inited + 64) = v20;
    *(_QWORD *)(inited + 40) = v15;
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey);
    v21 = v15;
    v22 = v19;
    Dictionary.init(dictionaryLiteral:)();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_boundingRectWithSize_options_attributes_context_, 1, isa, 0, v17, 1.79769313e308);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    v37.origin.x = v25;
    v37.origin.y = v27;
    v37.size.width = v29;
    v37.size.height = v31;
    Height = CGRectGetHeight(v37);
    objc_msgSend(v21, sel_lineHeight);
    v34 = ceil(Height / v33);
    if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          v11 = (void *)(uint64_t)v34;
          if ((uint64_t)v34 <= 1)
          {
            v38.origin.x = v25;
            v38.origin.y = v27;
            v38.size.width = v29;
            v38.size.height = v31;
            CGRectGetWidth(v38);
            goto LABEL_34;
          }
          if (*v1 == 1)
          {
            if (one-time initialization token for subtitleStyleMaxWidthSmallLayout == -1)
            {
LABEL_34:
              if (one-time initialization token for subtitleStyleHorizontalPadding == -1)
                goto LABEL_35;
              goto LABEL_46;
            }
          }
          else if (one-time initialization token for subtitleStyleMaxWidth == -1)
          {
            goto LABEL_34;
          }
          swift_once();
          goto LABEL_34;
        }
LABEL_45:
        __break(1u);
LABEL_46:
        swift_once();
LABEL_35:
        if (one-time initialization token for subtitleStyleVerticalPadding != -1)
          swift_once();
        if (*v1 == 1)
        {
          if (one-time initialization token for subtitleStyleMinWidthSmallLayout == -1)
            goto LABEL_41;
        }
        else if (one-time initialization token for subtitleStyleMinWidth == -1)
        {
LABEL_41:
          v39.origin.x = v25;
          v39.origin.y = v27;
          v39.size.width = v29;
          v39.size.height = v31;
          CGRectGetHeight(v39);
          objc_msgSend(v21, sel_lineHeight);

          outlined destroy of Participant.State();
          return (uint64_t)v11;
        }
        swift_once();
        goto LABEL_41;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  if (*v1 == 1)
  {
    if (one-time initialization token for subtitleStyleDefaultSmallWidth != -1)
      swift_once();
    if (one-time initialization token for subtitleStyleDefaultSmallHeight == -1)
      return 1;
  }
  else
  {
    if (one-time initialization token for subtitleStyleDefaultWidth != -1)
      swift_once();
    if (one-time initialization token for subtitleStyleDefaultHeight == -1)
      return 1;
  }
  swift_once();
  return 1;
}

uint64_t static Animation.snappy(duration:extraBounce:)()
{
  return static Animation.spring(response:dampingFraction:blendDuration:)();
}

uint64_t closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
  v9 = type metadata accessor for CaptionSectioner.Caption(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for CaptionSectioner.Caption?);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v12 = &v8[*(int *)(v9 + 36)];
    v10 = *(_QWORD *)v12;
    v11 = *((_QWORD *)v12 + 1);
    swift_bridgeObjectRetain();
    outlined destroy of Participant.State();
  }
  v13 = *(_QWORD *)(a1 + 104);
  v16 = *(_OWORD *)(a1 + 88);
  v17 = v13;
  v15[0] = v10;
  v15[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<String?>);
  result = State.wrappedValue.setter();
  if (a3 >= 2)
  {
    strcpy((char *)&v16, "scrolling-text");
    HIBYTE(v16) = -18;
    return ScrollViewProxy.scrollTo<A>(_:anchor:)();
  }
  return result;
}

uint64_t TranscriptParticipantBadge.font.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  if (v4 == 1)
    return static Font.body.getter();
  else
    return static Font.callout.getter();
}

double TranscriptParticipantBadge.avatarSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  char v5;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v1, v2);
  specialized Environment.wrappedValue.getter();
  outlined consume of Environment<CGFloat>.Content(v1, v2);
  if (v5 == 1)
  {
    if (one-time initialization token for subtitleBadgeAvatarSmallSize != -1)
      swift_once();
    v3 = &static Layout.Captions.subtitleBadgeAvatarSmallSize;
  }
  else
  {
    if (one-time initialization token for subtitleBadgeAvatarSize != -1)
      swift_once();
    v3 = &static Layout.Captions.subtitleBadgeAvatarSize;
  }
  return *(double *)v3;
}

uint64_t TranscriptParticipantBadge.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  int v35;
  int v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t (*v56)(void);
  _BYTE *v57;
  void *v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE v88[12];
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  _BYTE v135[7];
  _BYTE v136[7];
  _BYTE v137[7];
  _BYTE v138[11];
  __int16 v139;
  _BYTE v140[7];
  _BYTE v141[11];
  __int16 v142;
  _BYTE v143[7];
  _QWORD v144[31];
  __int128 v145;
  __int128 v146;
  uint64_t v147;

  v2 = v1;
  v125 = a1;
  v123 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v123);
  v124 = &v88[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for TaskPriority();
  v119 = *(_QWORD *)(v4 - 8);
  v120 = v4;
  MEMORY[0x1E0C80A78](v4);
  v117 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v118 = type metadata accessor for TranscriptParticipantBadge(0);
  v111 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v112 = v6;
  v121 = &v88[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  MEMORY[0x1E0C80A78](v107);
  v108 = &v88[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = type metadata accessor for RoundedRectangle();
  MEMORY[0x1E0C80A78](v109);
  v9 = (uint64_t *)&v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104 = type metadata accessor for Material();
  MEMORY[0x1E0C80A78](v104);
  v103 = &v88[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  MEMORY[0x1E0C80A78](v105);
  v110 = &v88[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v106 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  MEMORY[0x1E0C80A78](v106);
  v126 = &v88[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
  MEMORY[0x1E0C80A78](v127);
  v116 = &v88[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  v114 = *(_QWORD *)(v14 - 8);
  v115 = v14;
  MEMORY[0x1E0C80A78](v14);
  v113 = &v88[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = static VerticalAlignment.center.getter();
  v122 = v2;
  closure #1 in TranscriptParticipantBadge.body.getter(v2, (uint64_t)v144);
  v92 = v144[1];
  v93 = v144[0];
  v16 = v144[2];
  v91 = BYTE1(v144[2]);
  v17 = v144[4];
  v94 = v144[3];
  v95 = v144[5];
  v18 = v144[6];
  v98 = v144[8];
  v99 = v144[7];
  v96 = BYTE1(v144[9]);
  v97 = LOBYTE(v144[9]);
  v100 = v144[11];
  v101 = v144[10];
  v89 = LOBYTE(v144[12]);
  v102 = v144[13];
  v19 = static Edge.Set.top.getter();
  v20 = static Edge.Set.leading.getter();
  v21 = static Edge.Set.bottom.getter();
  v22 = MEMORY[0x1C3B71FFC](0);
  v23 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v23 & v19) != v19)
    v22 = MEMORY[0x1C3B71FFC](v22 | v19);
  v24 = MEMORY[0x1C3B71FFC](v22);
  if (MEMORY[0x1C3B71FFC](v24 & v20) != v20)
    v22 = MEMORY[0x1C3B71FFC](v22 | v20);
  v25 = MEMORY[0x1C3B71FFC](v22);
  if (MEMORY[0x1C3B71FFC](v25 & v21) != v21)
    LOBYTE(v22) = MEMORY[0x1C3B71FFC](v22 | v21);
  if (one-time initialization token for subtitleBadgeTopLeadingBottomPadding != -1)
    swift_once();
  EdgeInsets.init(_all:)();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = static Edge.Set.trailing.getter();
  v35 = MEMORY[0x1C3B71FFC](0);
  v36 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v36 & v34) != v34)
    LOBYTE(v35) = MEMORY[0x1C3B71FFC](v35 | v34);
  v132 = 0;
  v131 = v16;
  v130 = v17;
  v129 = v18;
  v128 = v89;
  v37 = v17;
  v38 = v18;
  v89 = v89;
  v133 = 0;
  if (one-time initialization token for subtitleBadgeTrailingPadding != -1)
    swift_once();
  EdgeInsets.init(_all:)();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v47 = v133;
  v134 = 0;
  static Material.regular.getter();
  v48 = AnyShapeStyle.init<A>(_:)();
  v49 = static Edge.Set.all.getter();
  v144[0] = v90;
  v144[1] = 0x4018000000000000;
  LOBYTE(v144[2]) = 0;
  *(_DWORD *)((char *)&v144[2] + 1) = *(_DWORD *)v143;
  HIDWORD(v144[2]) = *(_DWORD *)&v143[3];
  v144[3] = v93;
  v144[4] = v92;
  LOBYTE(v144[5]) = v16;
  BYTE1(v144[5]) = v91;
  *(_DWORD *)((char *)&v144[5] + 2) = *(_DWORD *)&v141[7];
  HIWORD(v144[5]) = v142;
  v144[6] = v94;
  LOBYTE(v144[7]) = v37;
  HIDWORD(v144[7]) = *(_DWORD *)&v141[3];
  *(_DWORD *)((char *)&v144[7] + 1) = *(_DWORD *)v141;
  v144[8] = v95;
  LOBYTE(v144[9]) = v38;
  *(_DWORD *)((char *)&v144[9] + 1) = *(_DWORD *)v140;
  HIDWORD(v144[9]) = *(_DWORD *)&v140[3];
  v144[10] = v99;
  v144[11] = v98;
  LOBYTE(v144[12]) = v97;
  BYTE1(v144[12]) = v96;
  *(_DWORD *)((char *)&v144[12] + 2) = *(_DWORD *)&v138[7];
  HIWORD(v144[12]) = v139;
  v144[13] = v101;
  v144[14] = v100;
  LOBYTE(v144[15]) = v89;
  HIDWORD(v144[15]) = *(_DWORD *)&v138[3];
  *(_DWORD *)((char *)&v144[15] + 1) = *(_DWORD *)v138;
  v144[16] = v102;
  LOBYTE(v144[17]) = v22;
  HIDWORD(v144[17]) = *(_DWORD *)&v137[3];
  *(_DWORD *)((char *)&v144[17] + 1) = *(_DWORD *)v137;
  v144[18] = v27;
  v144[19] = v29;
  v144[20] = v31;
  v144[21] = v33;
  LOBYTE(v144[22]) = v47;
  HIDWORD(v144[22]) = *(_DWORD *)&v136[3];
  *(_DWORD *)((char *)&v144[22] + 1) = *(_DWORD *)v136;
  LOBYTE(v144[23]) = v35;
  HIDWORD(v144[23]) = *(_DWORD *)&v135[3];
  *(_DWORD *)((char *)&v144[23] + 1) = *(_DWORD *)v135;
  v144[24] = v40;
  v144[25] = v42;
  v144[26] = v44;
  v144[27] = v46;
  LOBYTE(v144[28]) = v134;
  v144[29] = v48;
  LOBYTE(v144[30]) = v49;
  if (one-time initialization token for subtitleBadgeCornerRadius != -1)
    swift_once();
  v50 = static Layout.Captions.subtitleBadgeCornerRadius;
  v51 = v109;
  v52 = (char *)v9 + *(int *)(v109 + 20);
  v53 = *MEMORY[0x1E0CDB0C0];
  v54 = type metadata accessor for RoundedCornerStyle();
  v55 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104);
  v55(v52, v53, v54);
  *v9 = v50;
  v9[1] = v50;
  v56 = MEMORY[0x1E0CDA088];
  v57 = v108;
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, (uint64_t)v108, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
  *(_WORD *)&v57[*(int *)(v107 + 36)] = 256;
  v58 = v110;
  outlined init with copy of FeatureEligibility?((uint64_t)v57, (uint64_t)&v110[*(int *)(v105 + 36)], &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  memcpy(v58, v144, 0xF1uLL);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>((uint64_t)v144);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v57, &demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
  outlined destroy of Participant.State();
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>((uint64_t)v144);
  v107 = static Alignment.center.getter();
  v108 = v59;
  v60 = v126;
  v61 = (uint64_t)&v126[*(int *)(v106 + 36)];
  v62 = static Layout.Captions.subtitleBadgeCornerRadius;
  v55((char *)v9 + *(int *)(v51 + 20), v53, v54);
  *v9 = v62;
  v9[1] = v62;
  static Color.white.getter();
  v63 = Color.opacity(_:)();
  swift_release();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v9, v61, (uint64_t (*)(_QWORD))v56);
  v64 = v61
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _StrokedShape<RoundedRectangle>)
               + 36);
  v65 = v146;
  *(_OWORD *)v64 = v145;
  *(_OWORD *)(v64 + 16) = v65;
  *(_QWORD *)(v64 + 32) = v147;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<_StrokedShape<RoundedRectangle>, Color>);
  *(_QWORD *)(v61 + *(int *)(v66 + 52)) = v63;
  *(_WORD *)(v61 + *(int *)(v66 + 56)) = 256;
  v67 = static Alignment.center.getter();
  v69 = v68;
  v70 = (uint64_t *)(v61
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<_StrokedShape<RoundedRectangle>, Color>, _BackgroundModifier<EmptyView>>)
                           + 36));
  *v70 = v67;
  v70[1] = v69;
  outlined destroy of Participant.State();
  v71 = (uint64_t *)(v61
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>)
                           + 36));
  v72 = v108;
  *v71 = v107;
  v71[1] = (uint64_t)v72;
  outlined init with take of Any?((uint64_t)v58, (uint64_t)v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
  v74 = v121;
  v73 = v122;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v122, (uint64_t)v121, type metadata accessor for TranscriptParticipantBadge);
  v75 = *(unsigned __int8 *)(v111 + 80);
  v76 = (v75 + 16) & ~v75;
  v111 = v75 | 7;
  v112 += v76;
  v77 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v74, v77 + v76, type metadata accessor for TranscriptParticipantBadge);
  v78 = v117;
  static TaskPriority.userInitiated.getter();
  v79 = (uint64_t)v116;
  v80 = &v116[*(int *)(v127 + 36)];
  v81 = type metadata accessor for _TaskModifier();
  v82 = v119;
  v83 = v120;
  (*(void (**)(char *, _BYTE *, uint64_t))(v119 + 16))(&v80[*(int *)(v81 + 20)], v78, v120);
  *(_QWORD *)v80 = &async function pointer to partial apply for closure #3 in TranscriptParticipantBadge.body.getter;
  *((_QWORD *)v80 + 1) = v77;
  v84 = v126;
  outlined init with copy of FeatureEligibility?((uint64_t)v126, v79, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v78, v83);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v84, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v73 + *(int *)(v118 + 20), (uint64_t)v124, type metadata accessor for Participant);
  outlined init with copy of ConversationControlsAppLaunchButtonType(v73, (uint64_t)v74, type metadata accessor for TranscriptParticipantBadge);
  v85 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v74, v85 + v76, type metadata accessor for TranscriptParticipantBadge);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type Participant and conformance Participant);
  v86 = v113;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  outlined destroy of Participant.State();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v79, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v114 + 32))(v125, v86, v115);
}

uint64_t closure #1 in TranscriptParticipantBadge.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void **v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for Image.ResizingMode();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void **)(a1 + *(int *)(type metadata accessor for TranscriptParticipantBadge(0) + 24));
  v10 = *v8;
  v9 = v8[1];
  v37 = v10;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Image>);
  State.wrappedValue.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDF6F8], v4);
  v34 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  TranscriptParticipantBadge.avatarSize.getter();
  TranscriptParticipantBadge.avatarSize.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v33 = v41;
  v32 = v42;
  v31 = v43;
  v30 = v44;
  v29 = v45;
  v28 = v46;
  Participant.contactDetails.getter();
  v11 = v37;
  v12 = v39;
  v13 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v35 = v12;
  v36 = v13;
  lazy protocol witness table accessor for type String and conformance String();
  v14 = Text.init<A>(_:)();
  v16 = v15;
  v18 = v17 & 1;
  TranscriptParticipantBadge.font.getter();
  v19 = Text.font(_:)();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release();
  outlined consume of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v34;
  *(_QWORD *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 257;
  *(_QWORD *)(a2 + 24) = v33;
  *(_BYTE *)(a2 + 32) = v32;
  *(_QWORD *)(a2 + 40) = v31;
  *(_BYTE *)(a2 + 48) = v30;
  v26 = v28;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v26;
  *(_WORD *)(a2 + 72) = 256;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v21;
  *(_BYTE *)(a2 + 96) = v23 & 1;
  *(_QWORD *)(a2 + 104) = v25;
  swift_retain();
  outlined copy of Text.Storage(v19, v21, v23 & 1);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v19, v21, v23 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t closure #3 in TranscriptParticipantBadge.body.getter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 48) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #3 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v2 = type metadata accessor for TranscriptParticipantBadge(0);
  v3 = v1 + *(int *)(v2 + 20);
  v4 = *(void **)(v3 + *(int *)(OUTLINED_FUNCTION_14_2() + 28));
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 40);

    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v5 + *(int *)(v2 + 28));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Never>?>);
    State.wrappedValue.getter();
    if (*(_QWORD *)(v0 + 32))
    {
      MEMORY[0x1C3B73268](*(_QWORD *)(v0 + 32), MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
      swift_release();
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *closure #4 in TranscriptParticipantBadge.body.getter(uint64_t a1)
{
  uint64_t v1;
  void *result;
  uint64_t v3;

  v1 = a1 + *(int *)(type metadata accessor for TranscriptParticipantBadge(0) + 20);
  result = *(void **)(v1 + *(int *)(type metadata accessor for Participant(0) + 28));
  if (result)
  {

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Task<(), Never>?>);
    result = (void *)State.wrappedValue.getter();
    if (v3)
    {
      MEMORY[0x1C3B73268](v3, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
      return (void *)swift_release();
    }
  }
  return result;
}

uint64_t CaptionsSizeToggleButton.Configuration.symbolDescriber.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = &type metadata for SymbolImageDescribers.Captions;
  *(_QWORD *)(a2 + 32) = &protocol witness table for SymbolImageDescribers.Captions;
  *(_BYTE *)a2 = (result & 1) == 0;
  return result;
}

BOOL static CaptionsSizeToggleButton.Configuration.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CaptionsSizeToggleButton.Configuration.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

Swift::Int CaptionsSizeToggleButton.Configuration.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CaptionsSizeToggleButton.Configuration(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static CaptionsSizeToggleButton.Configuration.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance CaptionsSizeToggleButton.Configuration()
{
  char *v0;

  return CaptionsSizeToggleButton.Configuration.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance CaptionsSizeToggleButton.Configuration(uint64_t a1)
{
  char *v1;

  CaptionsSizeToggleButton.Configuration.hash(into:)(a1, *v1);
}

uint64_t CaptionsSizeToggleButton.configuration.getter(char a1)
{
  return a1 & 1;
}

uint64_t CaptionsSizeToggleButton.configuration.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t (*CaptionsSizeToggleButton.configuration.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for CaptionsSizeToggleButton.action : CaptionsSizeToggleButton@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (void (*)())v5;
  return swift_retain();
}

uint64_t key path setter for CaptionsSizeToggleButton.action : CaptionsSizeToggleButton(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = partial apply for thunk for @callee_guaranteed () -> ();
  *(_QWORD *)(a2 + 16) = v5;
  return result;
}

void CaptionsSizeToggleButton.action.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_0();
}

void CaptionsSizeToggleButton.action.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CaptionsSizeToggleButton.action.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void CaptionsSizeToggleButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = type metadata accessor for BorderlessButtonStyle();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_77();
  v4 = v3 - v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>>);
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_2();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v40 = v16 - v15;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>> and conformance Button<A>);
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v4, v37);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v8, v5);
  v17 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v12, v34);
  v19 = (uint64_t *)(v1 + *(int *)(v35 + 36));
  *v19 = KeyPath;
  v19[1] = v17;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v34);
  v20 = static Edge.Set.top.getter();
  v21 = static Edge.Set.trailing.getter();
  v22 = MEMORY[0x1C3B71FFC](0);
  v23 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v23 & v20) != v20)
    v22 = MEMORY[0x1C3B71FFC](v22 | v20);
  v24 = MEMORY[0x1C3B71FFC](v22);
  if (MEMORY[0x1C3B71FFC](v24 & v21) != v21)
    LOBYTE(v22) = MEMORY[0x1C3B71FFC](v22 | v21);
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  outlined init with copy of FeatureEligibility?(v1, v40, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  v33 = v40 + *(int *)(v39 + 36);
  *(_BYTE *)v33 = v22;
  *(_QWORD *)(v33 + 8) = v26;
  *(_QWORD *)(v33 + 16) = v28;
  *(_QWORD *)(v33 + 24) = v30;
  *(_QWORD *)(v33 + 32) = v32;
  *(_BYTE *)(v33 + 40) = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with take of Any?(v40, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
}

void closure #1 in CaptionsSizeToggleButton.body.getter(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t KeyPath;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  Swift::String *v47;
  Swift::String v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;

  v61 = a2;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  MEMORY[0x1E0C80A78](v53);
  v4 = (uint64_t *)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Image.ResizingMode();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  MEMORY[0x1E0C80A78](v49);
  v15 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v57);
  v56 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>);
  MEMORY[0x1E0C80A78](v58);
  v55 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v59);
  v60 = (uint64_t)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63._object = &type metadata for SymbolImageDescribers.Captions;
  v64._countAndFlagsBits = (uint64_t)&protocol witness table for SymbolImageDescribers.Captions;
  LOBYTE(v62._countAndFlagsBits) = (a1 & 1) == 0;
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v62, (uint64_t)&type metadata for SymbolImageDescribers.Captions);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v25 + 16))(v24, v22);
  specialized Image.init(describer:)((uint64_t)v24, (uint64_t)&type metadata for SymbolImageDescribers.Captions, (uint64_t)&protocol witness table for SymbolImageDescribers.Captions);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0CDF6F8], v10);
  Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  static SymbolRenderingMode.hierarchical.getter();
  v26 = type metadata accessor for SymbolRenderingMode();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v26);
  v27 = Image.symbolRenderingMode(_:)();
  swift_release();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for SymbolRenderingMode?);
  v28 = static Color.white.getter();
  v30 = v50;
  v29 = v51;
  v31 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, *MEMORY[0x1E0CDF7D8], v52);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v4 + *(int *)(v53 + 28), v30, v31);
  *v4 = KeyPath;
  outlined init with copy of FeatureEligibility?((uint64_t)v4, (uint64_t)v15 + *(int *)(v49 + 36), &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  *v15 = v27;
  v15[1] = v28;
  swift_retain();
  swift_retain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Image.Scale>);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  swift_release();
  swift_release();
  v33 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v65._object = (void *)0xE000000000000000;
  v34._object = (void *)0x80000001BD699CE0;
  v34._countAndFlagsBits = 0xD00000000000001ALL;
  v35.value._countAndFlagsBits = 0x61737265766E6F43;
  v35.value._object = (void *)0xEF74694B6E6F6974;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v65._countAndFlagsBits = 0;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v65);

  v62 = v37;
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type String and conformance String();
  v38 = (uint64_t)v54;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  v39 = static Font.largeTitle.getter();
  v40 = swift_getKeyPath();
  v41 = v56;
  outlined init with copy of FeatureEligibility?(v38, v56, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  v42 = (uint64_t *)(v41 + *(int *)(v57 + 36));
  *v42 = v40;
  v42[1] = v39;
  v43 = (uint64_t)v55;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
  v44 = static Color.black.getter();
  outlined init with copy of FeatureEligibility?(v41, v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
  v45 = (uint64_t *)(v43 + *(int *)(v58 + 36));
  *v45 = v44;
  v45[1] = 0x4034000000000000;
  v45[2] = 0;
  v45[3] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
  if (one-time initialization token for sizeToggleButtonSize != -1)
    swift_once();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v46 = v60;
  outlined init with copy of FeatureEligibility?(v43, v60, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>);
  v47 = (Swift::String *)(v46 + *(int *)(v59 + 36));
  v48 = v63;
  *v47 = v62;
  v47[1] = v48;
  v47[2] = v64;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>);
  outlined init with take of Any?(v46, v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout>);
}

void partial apply for closure #1 in CaptionsSizeToggleButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  closure #1 in CaptionsSizeToggleButton.body.getter(*(_BYTE *)(v1 + 16), a1);
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect> and conformance <> ModifiedContent<A, B>);
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    OUTLINED_FUNCTION_24_31(0, v2);
    v1();
    OUTLINED_FUNCTION_85_25();
  }
  OUTLINED_FUNCTION_45_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Image.Scale> and conformance _EnvironmentKeyWritingModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void protocol witness for View.body.getter in conformance CaptionsSizeToggleButton(uint64_t a1@<X8>)
{
  CaptionsSizeToggleButton.body.getter(a1);
}

uint64_t GroupIconView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  Class isa;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  unsigned __int8 v85;
  __int128 v86;

  v59 = a2;
  v60 = a3;
  v62 = type metadata accessor for PersonNameComponents();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v67 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v58 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v58 - v13;
  v15 = type metadata accessor for Image.ResizingMode();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v16 + 104))(v19, *MEMORY[0x1E0CDF6F8], v15, v17);
    swift_retain();
    v20 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v70 = v20;
    v71 = v82;
    v72 = v83;
    v73 = v84;
    v74 = v85;
    v75 = v86;
    v76 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView.GroupImage, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    result = swift_release();
    v22 = v77;
    v23 = v78;
    v24 = v79;
    v25 = v80;
    v26 = v81;
    v27 = v60;
    goto LABEL_21;
  }
  v28 = v6;
  v63 = v11;
  v65 = v8;
  v66 = v5;
  v29 = v59;
  v30 = *(_QWORD *)(v59 + 16);
  v31 = MEMORY[0x1E0DEE9D8];
  if (!v30)
    goto LABEL_20;
  v70 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  specialized ContiguousArray.reserveCapacity(_:)();
  v32 = v28;
  v33 = v29 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v64 = *(_QWORD *)(v32 + 72);
  v34 = v67;
  v35 = v66;
  v36 = (uint64_t)v63;
  do
  {
    v68 = v30;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v33, (uint64_t)v14, type metadata accessor for Participant);
    v37 = *(void **)&v14[*(int *)(v35 + 28)];
    v38 = (uint64_t)v65;
    if (!v37)
      goto LABEL_13;
    v39 = v37;
    outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v39);
    if (!v40)
    {

LABEL_13:
      outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, v38, type metadata accessor for Participant);
      swift_retain();
      ParticipantContactDetailsCache.contactDetails(for:)(v38, v49, v50, v51, v52, v53, v54, v55, v58, v59, v60, v61, v62, (uint64_t)v63, v64, (uint64_t)v65, v66, v67, v68,
        v69);
      v48 = v77;
      v56 = (id)v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      v36 = (uint64_t)v63;
      outlined destroy of Participant.State();
      goto LABEL_14;
    }
    if ((objc_msgSend(v39, sel_shouldHideContact) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    PersonNameComponents.init()();
    PersonNameComponents.givenName.setter();
    PersonNameComponents.familyName.setter();
    if (one-time initialization token for initials != -1)
      swift_once();
    swift_beginAccess();
    v41 = (id)static NSPersonNameComponentsFormatter.initials;
    isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    v43 = objc_msgSend(v41, sel_stringFromPersonNameComponents_, isa);

    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v45 = v34;
    v47 = v46;

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v45, v62);
    *(_QWORD *)&v77 = v44;
    *((_QWORD *)&v77 + 1) = v47;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.localizedUppercase.getter();

    swift_bridgeObjectRelease();
    v48 = 0;
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined init with copy of ConversationControlsAppLaunchButtonType((uint64_t)v14, v36, type metadata accessor for Participant);
    v34 = v67;
    v35 = v66;
    if (!v48)
    {
      v57 = *(_QWORD *)(v36 + *(int *)(v66 + 28));
      if (v57)
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel__initWithHandle_, v57);
      else
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
    }
    outlined destroy of Participant.State();
    outlined destroy of Participant.State();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v33 += v64;
    v30 = v68 - 1;
  }
  while (v68 != 1);
  v31 = v70;
  swift_bridgeObjectRelease();
LABEL_20:
  v27 = v60;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v70 = v31;
  v71 = v82;
  v72 = v83;
  v73 = v84;
  v74 = v85;
  v75 = v86;
  v76 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView.GroupImage, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>();
  result = _ConditionalContent<>.init(storage:)();
  v22 = v77;
  v23 = v78;
  v24 = v79;
  v25 = v80;
  v26 = v81;
LABEL_21:
  *(_OWORD *)v27 = v22;
  *(_OWORD *)(v27 + 16) = v23;
  *(_OWORD *)(v27 + 32) = v24;
  *(_QWORD *)(v27 + 48) = v25;
  *(_BYTE *)(v27 + 56) = v26;
  return result;
}

id GroupIconView.GroupImage.makeUIViewController(context:)()
{
  id v0;
  id v1;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultSettings);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97470]), sel_initWithSettings_, v0);

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, sel_setContacts_, isa);

  return v1;
}

void GroupIconView.GroupImage.updateUIViewController(_:context:)(void *a1)
{
  Class isa;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, sel_setContacts_, isa);

}

id protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance GroupIconView.GroupImage()
{
  return GroupIconView.GroupImage.makeUIViewController(context:)();
}

void protocol witness for UIViewControllerRepresentable.updateUIViewController(_:context:) in conformance GroupIconView.GroupImage(void *a1)
{
  GroupIconView.GroupImage.updateUIViewController(_:context:)(a1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance GroupIconView.GroupImage()
{
  lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage();
  return static UIViewControllerRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance GroupIconView.GroupImage()
{
  lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance GroupIconView.GroupImage()
{
  lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage();
  UIViewControllerRepresentable.body.getter();
  __break(1u);
}

uint64_t protocol witness for View.body.getter in conformance GroupIconView@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return GroupIconView.body.getter(*v1, v1[1], a1);
}

void CaptionHeader.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  char v22;
  char v23;
  _OWORD v24[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.top.getter();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  closure #1 in CaptionHeader.body.getter(v2, (uint64_t)&v6[*(int *)(v13 + 44)]);
  v14 = static Alignment.topLeading.getter();
  v23 = 1;
  v22 = 1;
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v22, 0, v23, v14, v15);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>);
  v16 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v16, sel_lineHeight);

  static Alignment.top.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of FeatureEligibility?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  v17 = &v12[*(int *)(v10 + 36)];
  v18 = v24[1];
  *(_OWORD *)v17 = v24[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v24[2];
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
  v19 = static Color.primary.getter();
  KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v12, a1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
  v21 = (uint64_t *)(a1
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>)
                           + 36));
  *v21 = KeyPath;
  v21[1] = v19;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>);
}

void closure #1 in CaptionHeader.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;

  v67 = a2;
  v3 = type metadata accessor for Font.Leading();
  v64 = *(_QWORD *)(v3 - 8);
  v65 = v3;
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RedactionReasons();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v62 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  MEMORY[0x1E0C80A78](v18);
  v66 = (uint64_t)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v62 - v21;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v23 = 1;
  }
  else
  {
    v62 = v14;
    type metadata accessor for CaptionHeader(0);
    specialized Environment.wrappedValue.getter();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    dispatch thunk of SetAlgebra.init()();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
    v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v8, v5);
    v25(v11, v5);
    if ((v24 & 1) != 0)
    {
      v26 = *(_QWORD *)(a1 + 16);
      swift_retain();
    }
    else
    {
      v26 = Image.init(systemName:)();
    }
    v27 = *(_QWORD *)(a1 + 24);
    v28 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    v29 = static Edge.Set.trailing.getter();
    v30 = MEMORY[0x1C3B71FFC](0);
    v31 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v31 & v29) != v29)
      LOBYTE(v30) = MEMORY[0x1C3B71FFC](v30 | v29);
    EdgeInsets.init(_all:)();
    v68 = v26;
    v69 = v27;
    v70 = v28;
    v71 = v30;
    v72 = v32;
    v73 = v33;
    v74 = v34;
    v75 = v35;
    v76 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<GroupIconView, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<GroupIconView, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    v36 = (uint64_t)v62;
    View.accessibilityHidden(_:)();
    swift_bridgeObjectRelease();
    swift_release();
    outlined init with take of Any?(v36, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
    outlined init with take of Any?((uint64_t)v17, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>);
    v23 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v22, v23, 1, v12);
  v37 = *(_QWORD *)(a1 + 8);
  v68 = *(_QWORD *)a1;
  v69 = v37;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v38 = Text.init<A>(_:)();
  v40 = v39;
  v42 = v41 & 1;
  static Color.secondary.getter();
  v43 = Text.foregroundColor(_:)();
  v45 = v44;
  v47 = v46;
  swift_release();
  v48 = v47 & 1;
  outlined consume of Text.Storage(v38, v40, v42);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  v50 = v63;
  v49 = v64;
  v51 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E0CDD6D8], v65);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  v52 = Text.font(_:)();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  swift_release();
  v56 &= 1u;
  outlined consume of Text.Storage(v43, v45, v48);
  swift_bridgeObjectRelease();
  v59 = v66;
  outlined init with copy of FeatureEligibility?((uint64_t)v22, v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  v60 = v67;
  outlined init with copy of FeatureEligibility?(v59, v67, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  v61 = v60
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text))
               + 48);
  *(_QWORD *)v61 = v52;
  *(_QWORD *)(v61 + 8) = v54;
  *(_BYTE *)(v61 + 16) = v56;
  *(_QWORD *)(v61 + 24) = v58;
  outlined copy of Text.Storage(v52, v54, v56);
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
  outlined consume of Text.Storage(v52, v54, v56);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v59, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?);
}

uint64_t *HeightKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  return &static HeightKey.defaultValue;
}

double protocol witness for static PreferenceKey.defaultValue.getter in conformance HeightKey@<D0>(uint64_t *a1@<X8>)
{
  uint64_t *v2;
  double result;

  v2 = HeightKey.defaultValue.unsafeMutableAddressor();
  result = *(double *)v2;
  *a1 = *v2;
  return result;
}

double protocol witness for static PreferenceKey.reduce(value:nextValue:) in conformance HeightKey(uint64_t a1)
{
  return TPNumberPadCharacter.rawValue.getter(a1);
}

void CaptionRow.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (**v57)();
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t __src[21];

  v2 = v1;
  v4 = type metadata accessor for CaptionRow(0);
  v69 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v70 = v5;
  v67 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptLabel(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
  MEMORY[0x1E0C80A78](v64);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
  MEMORY[0x1E0C80A78](v66);
  v65 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
  MEMORY[0x1E0C80A78](v75);
  v68 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v71 = (uint64_t)&v62 - v17;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>>.Storage);
  MEMORY[0x1E0C80A78](v73);
  v74 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v72);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v62 - v25;
  v27 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  if (*(_BYTE *)(v2 + v27[10]) == 1)
  {
    *(_QWORD *)v21 = static VerticalAlignment.center.getter();
    *((_QWORD *)v21 + 1) = 0;
    v21[16] = 1;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    closure #1 in CaptionRow.body.getter((uint64_t)&v21[*(int *)(v28 + 44)]);
    v29 = static Edge.Set.top.getter();
    v30 = static Edge.Set.bottom.getter();
    v31 = MEMORY[0x1C3B71FFC](0);
    v32 = MEMORY[0x1C3B71FFC]();
    if (MEMORY[0x1C3B71FFC](v32 & v29) != v29)
      v31 = MEMORY[0x1C3B71FFC](v31 | v29);
    v33 = MEMORY[0x1C3B71FFC](v31);
    if (MEMORY[0x1C3B71FFC](v33 & v30) != v30)
      LOBYTE(v31) = MEMORY[0x1C3B71FFC](v31 | v30);
    outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v23, &demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    v34 = &v23[*(int *)(v72 + 36)];
    *v34 = v31;
    *(_OWORD *)(v34 + 8) = 0u;
    *(_OWORD *)(v34 + 24) = 0u;
    v34[40] = 1;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, &demangling cache variable for type metadata for HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>);
    v35 = &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>;
    outlined init with take of Any?((uint64_t)v23, (uint64_t)v26, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    outlined init with copy of FeatureEligibility?((uint64_t)v26, v74, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v36 = (uint64_t)v26;
  }
  else
  {
    v63 = a1;
    v37 = (_QWORD *)(v2 + v27[9]);
    v38 = *(_QWORD *)(v2 + v27[11]);
    v39 = v37[1];
    *v8 = *v37;
    v8[1] = v39;
    v8[2] = v38;
    v40 = (_QWORD *)((char *)v8 + *(int *)(v6 + 24));
    *v40 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)v8 + *(int *)(v6 + 28)) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = static Alignment.leading.getter();
    LOBYTE(v61) = 1;
    LOBYTE(v60) = 1;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v60, 0, v61, v41, v42, v62, v63, v64, v65, v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      __src[0],
      __src[1],
      __src[2],
      __src[3],
      __src[4],
      __src[5],
      __src[6],
      __src[7],
      __src[8],
      __src[9],
      __src[10],
      __src[11],
      __src[12],
      __src[13],
      __src[14],
      __src[15],
      __src[16],
      __src[17],
      __src[18],
      __src[19],
      __src[20]);
    outlined destroy of Participant.State();
    v43 = (uint64_t *)(v2 + *(int *)(v4 + 24));
    v44 = *v43;
    v45 = v43[1];
    __src[0] = v44;
    __src[1] = v45;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
    State.wrappedValue.getter();
    v46 = v2;
    static Alignment.top.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    memcpy(&v13[*(int *)(v64 + 36)], __src, 0x70uLL);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    v47 = static Anchor.Source<A>.bounds.getter();
    v48 = v2;
    v49 = v67;
    outlined init with copy of ConversationControlsAppLaunchButtonType(v48, v67, type metadata accessor for CaptionRow);
    v50 = v46;
    v51 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    v52 = swift_allocObject();
    outlined init with take of StagedCollaboration(v49, v52 + v51, type metadata accessor for CaptionRow);
    v53 = v65;
    outlined init with copy of FeatureEligibility?((uint64_t)v13, v65, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
    v54 = (uint64_t *)(v53 + *(int *)(v66 + 36));
    *v54 = v47;
    v54[1] = (uint64_t)partial apply for closure #2 in CaptionRow.body.getter;
    v54[2] = v52;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>);
    outlined init with copy of ConversationControlsAppLaunchButtonType(v50, v49, type metadata accessor for CaptionRow);
    v55 = swift_allocObject();
    outlined init with take of StagedCollaboration(v49, v55 + v51, type metadata accessor for CaptionRow);
    v56 = v68;
    outlined init with copy of FeatureEligibility?(v53, v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    v57 = (uint64_t (**)())(v56 + *(int *)(v75 + 36));
    *v57 = partial apply for closure #3 in CaptionRow.body.getter;
    v57[1] = (uint64_t (*)())v55;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    v35 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>;
    v58 = v56;
    v59 = v71;
    outlined init with take of Any?(v58, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    outlined init with copy of FeatureEligibility?(v59, v74, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v36 = v59;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v36, v35);
}

void closure #1 in CaptionRow.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[12];
  int v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t);
  void (*v68)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t *v72;
  _BYTE *v73;
  uint64_t v74;
  _BYTE *v75;
  Swift::String v76;
  Swift::String v77;

  v74 = a1;
  v1 = type metadata accessor for Divider();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v64[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  MEMORY[0x1E0C80A78](v5);
  v73 = &v64[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v75 = &v64[-v8];
  MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t *)&v64[-v10];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v64[-v12];
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  v14 = *(int *)(v69 + 44);
  v71 = v13;
  v15 = &v13[v14];
  Divider.init()();
  if (one-time initialization token for divider != -1)
    swift_once();
  v16 = static Colors.Captions.divider;
  swift_retain();
  v17 = static Edge.Set.all.getter();
  v68 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16);
  v68(v15, v4, v1);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Divider, _BackgroundStyleModifier<Color>>);
  v18 = &v15[*(int *)(v66 + 36)];
  *(_QWORD *)v18 = v16;
  v18[8] = v17;
  v67 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v67(v4, v1);
  v19 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v77._object = (void *)0xE000000000000000;
  v20._object = (void *)0x80000001BD699D40;
  v20._countAndFlagsBits = 0xD000000000000016;
  v21.value._countAndFlagsBits = 0x61737265766E6F43;
  v21.value._object = (void *)0xEF74694B6E6F6974;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v77._countAndFlagsBits = 0;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v77);

  v76 = v23;
  lazy protocol witness table accessor for type String and conformance String();
  v24 = Text.init<A>(_:)();
  v26 = v25;
  v28 = v27;
  v29 = static Platform.current.getter();
  v70 = v1;
  if (v29 == 2)
    static Font.headline.getter();
  else
    static Font.caption.getter();
  v30 = Text.font(_:)();
  v32 = v31;
  v34 = v33;
  swift_release();
  outlined consume of Text.Storage(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  v35 = Text.foregroundColor(_:)();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  swift_release();
  outlined consume of Text.Storage(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  if (one-time initialization token for bubblePadding != -1)
    swift_once();
  v42 = v39 & 1;
  swift_beginAccess();
  v65 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v51 = static HorizontalAlignment.center.getter();
  v52 = (uint64_t)v72;
  *v72 = v51;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = 1;
  v53 = v52 + *(int *)(v69 + 44);
  Divider.init()();
  v54 = static Colors.Captions.divider;
  swift_retain();
  v55 = static Edge.Set.all.getter();
  v56 = v70;
  v68((_BYTE *)v53, v4, v70);
  v57 = v53 + *(int *)(v66 + 36);
  *(_QWORD *)v57 = v54;
  *(_BYTE *)(v57 + 8) = v55;
  v67(v4, v56);
  v58 = (uint64_t)v71;
  v59 = v75;
  outlined init with copy of FeatureEligibility?((uint64_t)v71, (uint64_t)v75, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  v60 = v73;
  outlined init with copy of FeatureEligibility?(v52, (uint64_t)v73, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  v61 = v74;
  outlined init with copy of FeatureEligibility?((uint64_t)v59, v74, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>));
  v63 = v61 + *(int *)(v62 + 48);
  *(_QWORD *)v63 = v35;
  *(_QWORD *)(v63 + 8) = v37;
  *(_BYTE *)(v63 + 16) = v42;
  *(_QWORD *)(v63 + 24) = v41;
  *(_BYTE *)(v63 + 32) = v65;
  *(_QWORD *)(v63 + 40) = v44;
  *(_QWORD *)(v63 + 48) = v46;
  *(_QWORD *)(v63 + 56) = v48;
  *(_QWORD *)(v63 + 64) = v50;
  *(_BYTE *)(v63 + 72) = 0;
  *(_QWORD *)(v63 + 80) = 0x3FF0000000000000;
  outlined init with copy of FeatureEligibility?((uint64_t)v60, v61 + *(int *)(v62 + 64), &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined copy of Text.Storage(v35, v37, v42);
  swift_bridgeObjectRetain();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v60, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
  outlined consume of Text.Storage(v35, v37, v42);
  swift_bridgeObjectRelease();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>);
}

void TranscriptLabel.init(text:lowConfidenceRanges:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t *v6;

  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  v5 = OUTLINED_FUNCTION_107_14();
  v6 = (_QWORD *)((char *)a4 + *(int *)(v5 + 24));
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a4 + *(int *)(v5 + 28)) = 0;
  OUTLINED_FUNCTION_18();
}

void closure #2 in CaptionRow.body.getter(CGFloat *a1@<X8>)
{
  CGRect v2;

  type metadata accessor for CaptionRow(0);
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  *a1 = CGRectGetHeight(v2);
}

uint64_t closure #3 in CaptionRow.body.getter()
{
  type metadata accessor for CaptionRow(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<CGFloat>);
  State.wrappedValue.getter();
  return State.wrappedValue.setter();
}

void TranscriptLabel.text.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void TranscriptLabel.text.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*TranscriptLabel.text.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptLabel.lowConfidenceRanges.getter()
{
  return swift_bridgeObjectRetain();
}

void TranscriptLabel.lowConfidenceRanges.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*TranscriptLabel.lowConfidenceRanges.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void TranscriptLabel.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (**v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_93();
  v51 = v3;
  v52 = v4;
  v50 = v5;
  v6 = type metadata accessor for TranscriptLabel(0);
  v47 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v48 = v7;
  v49 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  type metadata accessor for AttributedString();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v15 = v14 - v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_11_2();
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_0_7();
  v19 = v0;
  TranscriptLabel.attributedString.getter(v15);
  v20 = Text.init(_:)();
  v42 = v21;
  v43 = v20;
  HIDWORD(v41) = v22;
  v44 = v23;
  KeyPath = swift_getKeyPath();
  if (static Platform.current.getter() == 2)
    v25 = static Font.headline.getter();
  else
    v25 = static Font.body.getter();
  v26 = v25;
  v27 = swift_getKeyPath();
  v28 = static Alignment.center.getter();
  v30 = v29;
  closure #1 in TranscriptLabel.body.getter(v19, v11);
  v31 = (uint64_t *)(v11 + *(int *)(v45 + 36));
  *v31 = v28;
  v31[1] = v30;
  outlined init with copy of FeatureEligibility?(v11, v1 + *(int *)(v16 + 36), &demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  v32 = v42;
  *(_QWORD *)v1 = v43;
  *(_QWORD *)(v1 + 8) = v32;
  *(_BYTE *)(v1 + 16) = BYTE4(v41) & 1;
  *(_QWORD *)(v1 + 24) = v44;
  *(_QWORD *)(v1 + 32) = KeyPath;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_QWORD *)(v1 + 56) = v27;
  *(_QWORD *)(v1 + 64) = v26;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v11, &demangling cache variable for type metadata for _BackgroundModifier<Canvas<EmptyView>?>);
  v33 = static Alignment.center.getter();
  v35 = v34;
  v36 = v19;
  v37 = v49;
  outlined init with copy of ConversationControlsAppLaunchButtonType(v36, v49, type metadata accessor for TranscriptLabel);
  v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v39 = swift_allocObject();
  outlined init with take of StagedCollaboration(v37, v39 + v38, type metadata accessor for TranscriptLabel);
  outlined init with copy of FeatureEligibility?(v1, v2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  v40 = (uint64_t (**)())(v2 + *(int *)(v46 + 36));
  *v40 = partial apply for closure #1 in closure #2 in TranscriptLabel.body.getter;
  v40[1] = (uint64_t (*)())v39;
  v40[2] = (uint64_t (*)())v33;
  v40[3] = v35;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
  outlined init with take of Any?(v2, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
}

uint64_t TranscriptLabel.attributedString.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, _QWORD);
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(_BYTE *, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _BYTE v100[40];

  v96 = a1;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lower: AttributedString.Index, upper: AttributedString.Index));
  MEMORY[0x1E0C80A78](v94);
  v93 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v92 = (char *)&v79 - v4;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<AttributedString.Index>);
  MEMORY[0x1E0C80A78](v91);
  v90 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v97 = (uint64_t)&v79 - v7;
  v8 = type metadata accessor for AttributedString.Index();
  v84 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v95 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v79 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v79 - v14;
  v16 = type metadata accessor for RedactionReasons();
  v88 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v87 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v86 = (char *)&v79 - v19;
  v81 = type metadata accessor for AttributedString.CharacterView();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v22);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  v23 = v1;
  AttributedString.characters.getter();
  type metadata accessor for TranscriptLabel(0);
  v24 = v86;
  specialized Environment.wrappedValue.getter();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
  v25 = v87;
  dispatch thunk of SetAlgebra.init()();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons);
  v26 = v24;
  v27 = v25;
  v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  v29 = *(void (**)(char *, uint64_t))(v88 + 8);
  v29(v27, v16);
  v29(v26, v16);
  if ((v28 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v21, v81);
  v30 = *(char **)(*(_QWORD *)(v23 + 16) + 16);
  if (!v30)
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v21, v81);
  v79 = swift_bridgeObjectRetain();
  v31 = (char *)(v79 + 40);
  v32 = v95;
  v83 = v15;
  v82 = v21;
  v89 = v12;
  while (1)
  {
    v33 = *((_QWORD *)v31 - 1);
    v34 = *(_QWORD *)v31;
    AttributedString.CharacterView.startIndex.getter();
    result = AttributedString.CharacterView._index(_:offsetBy:)();
    if (__OFADD__(v33, v34))
      break;
    AttributedString.CharacterView._index(_:offsetBy:)();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type AttributedString.Index and conformance AttributedString.Index);
    v37 = v36;
    result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if ((result & 1) == 0)
      goto LABEL_13;
    v87 = v30;
    v88 = v37;
    v86 = v31;
    v38 = v94;
    v39 = v92;
    v40 = &v92[*(int *)(v94 + 48)];
    v41 = v84;
    v42 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
    v42(v92, v12, v8);
    v42(v40, v32, v8);
    v43 = v93;
    v44 = &v93[*(int *)(v38 + 48)];
    v42(v93, v39, v8);
    v42(v44, v40, v8);
    v45 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v46 = v90;
    v45(v90, v43, v8);
    v47 = *(void (**)(char *, uint64_t))(v41 + 8);
    v47(v44, v8);
    v48 = *(int *)(v38 + 48);
    v49 = v91;
    v50 = &v43[v48];
    v45(v43, v39, v8);
    v45(v50, v40, v8);
    v45(&v46[*(int *)(v49 + 36)], v50, v8);
    v85 = v47;
    v47(v43, v8);
    v51 = (uint64_t)v46;
    v52 = v97;
    outlined init with take of Any?(v51, v97, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v79 - 2) = v54;
    swift_getKeyPath();
    if (one-time initialization token for lowConfidenceTermUnderline != -1)
      swift_once();
    v98 = static Colors.Captions.lowConfidenceTermUnderline;
    v55 = (id)static Colors.Captions.lowConfidenceTermUnderline;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Range<AttributedString.Index> and conformance Range<A>);
    v57 = v56;
    v58 = (void (*)(_BYTE *, _QWORD))AttributedString.subscript.modify();
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute();
    AttributedSubstring.subscript.setter();
    v58(v100, 0);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    v59 = v89;
    v60 = v95;
    result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if ((result & 1) == 0)
      goto LABEL_14;
    v61 = v86 + 16;
    v62 = v94;
    v63 = v92;
    v64 = &v92[*(int *)(v94 + 48)];
    v42(v92, v59, v8);
    v42(v64, v60, v8);
    v65 = v93;
    v66 = &v93[*(int *)(v62 + 48)];
    v42(v93, v63, v8);
    v42(v66, v64, v8);
    v67 = (uint64_t)v90;
    v45(v90, v65, v8);
    v68 = v66;
    v69 = v85;
    v85(v68, v8);
    v88 = v57;
    v70 = v69;
    v71 = *(int *)(v62 + 48);
    v31 = v61;
    v72 = &v65[v71];
    v73 = v63;
    v74 = v91;
    v45(v65, v73, v8);
    v45(v72, v64, v8);
    v45((char *)(v67 + *(int *)(v74 + 36)), v72, v8);
    v75 = v70;
    v70(v65, v8);
    outlined init with take of Any?(v67, v97, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    v76 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v76);
    *(&v79 - 2) = v77;
    swift_getKeyPath();
    v98 = 257;
    v99 = 0;
    v78 = (void (*)(_BYTE *, _QWORD))AttributedString.subscript.modify();
    lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute();
    v32 = v95;
    AttributedSubstring.subscript.setter();
    v78(v100, 0);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v97, &demangling cache variable for type metadata for Range<AttributedString.Index>);
    v75(v32, v8);
    v12 = v89;
    v75(v89, v8);
    v75(v83, v8);
    v30 = v87 - 1;
    v21 = v82;
    if (v87 == (char *)1)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v21, v81);
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t closure #1 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for ColorRenderingMode();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptLabel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  if (*(_BYTE *)(a1 + *(int *)(v11 + 28)) == 1)
  {
    outlined init with copy of ConversationControlsAppLaunchButtonType(a1, (uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptLabel);
    v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v13 = swift_allocObject();
    outlined init with take of StagedCollaboration((uint64_t)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for TranscriptLabel);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CDAE98], v4);
    Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)();
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Canvas<EmptyView>);
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v14);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Canvas<EmptyView>);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v16);
  }
}

uint64_t closure #1 in closure #2 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v14[0] = a1;
  v14[2] = a3;
  v4 = type metadata accessor for GeometryProxy();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = type metadata accessor for TranscriptLabel(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v14[3] = *(_QWORD *)(a2 + 16);
  v14[1] = swift_getKeyPath();
  outlined init with copy of ConversationControlsAppLaunchButtonType(a2, (uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TranscriptLabel);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 16))((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14[0], v4);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (v9 + *(unsigned __int8 *)(v5 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  outlined init with take of StagedCollaboration((uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v10, type metadata accessor for TranscriptLabel);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [_NSRange]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [_NSRange] and conformance [A]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)> and conformance TupleView<A>);
  return ForEach<>.init(_:id:content:)();
}

void closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter(Swift::Int *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  void *v16;
  uint64_t v17;
  id v18;
  Swift::OpaquePointer v19;
  __C::_NSRange v20;
  Swift::String v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v24[10];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v41 = type metadata accessor for BorderlessButtonStyle();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v38 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ButtonMenuStyle();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v24[9] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<Color, Text>);
  v24[8] = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24[7] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v28 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v31 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>);
  MEMORY[0x1E0C80A78](v27);
  v39 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>);
  MEMORY[0x1E0C80A78](v36);
  v42 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v43 = (char *)v24 - v13;
  v15 = *a1;
  v14 = a1[1];
  if (one-time initialization token for shared != -1)
    swift_once();
  v17 = *a2;
  v16 = (void *)a2[1];
  v18 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  v19._rawValue = (void *)a2[2];
  GeometryProxy.size.getter();
  v20.location = v15;
  v20.length = v14;
  v21._countAndFlagsBits = v17;
  v21._object = v16;
  TextLayoutEngine.frame(for:text:font:lowConfidenceRanges:viewSize:)(v20, v21, (UIFont)v18, v19, (CGSize)__PAIR128__(v23, v22));
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD6755B0;
  v3._countAndFlagsBits = 0xD000000000000025;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.UnderlineColorAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.UIKitAttributes.UnderlineStyleAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

uint64_t closure #1 in TranscriptLabel._debugCanvas.getter()
{
  return GraphicsContext.withCGContext(content:)();
}

void closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(CGContext *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  UIGraphicsPushContext(a1);
  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  static Color.red.getter();
  TextLayoutEngine.draw(text:font:color:lowConfidenceRanges:viewSize:)(v3, v4);
}

char *LayoutIdiomEnvironmentKey.defaultValue.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  return &static LayoutIdiomEnvironmentKey.defaultValue;
}

void static LayoutIdiomEnvironmentKey.defaultValue.getter(_BYTE *a1@<X8>)
{
  if (one-time initialization token for defaultValue != -1)
    swift_once();
  *a1 = static LayoutIdiomEnvironmentKey.defaultValue;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for static EnvironmentKey.defaultValue.getter in conformance LayoutIdiomEnvironmentKey@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (one-time initialization token for defaultValue != -1)
    result = swift_once();
  *a1 = static LayoutIdiomEnvironmentKey.defaultValue;
  return result;
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance LayoutIdiomEnvironmentKey()
{
  lazy protocol witness table accessor for type MultiwayViewController.LayoutIdiom and conformance MultiwayViewController.LayoutIdiom();
  return static EnvironmentKey<>._valuesEqual(_:_:)();
}

uint64_t EnvironmentValues.layoutIdiom.getter()
{
  lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey();
  return EnvironmentValues.subscript.getter();
}

uint64_t key path getter for EnvironmentValues.layoutIdiom : EnvironmentValues@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.layoutIdiom.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EnvironmentValues.layoutIdiom : EnvironmentValues()
{
  return EnvironmentValues.layoutIdiom.setter();
}

uint64_t EnvironmentValues.layoutIdiom.setter()
{
  lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey();
  return EnvironmentValues.subscript.setter();
}

void EnvironmentValues.layoutIdiom.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey();
  EnvironmentValues.subscript.getter();
  OUTLINED_FUNCTION_18();
}

void EnvironmentValues.layoutIdiom.modify(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  EnvironmentValues.subscript.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues.sizeCategory : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentSizeCategory();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t type metadata accessor for TranscriptLabel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptLabel);
}

uint64_t partial apply for closure #1 in closure #2 in TranscriptLabel.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for TranscriptLabel(0);
  v0 = OUTLINED_FUNCTION_0_147();
  return closure #1 in closure #2 in TranscriptLabel.body.getter(v0, v1, v2);
}

unint64_t lazy protocol witness table accessor for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey;
  if (!lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LayoutIdiomEnvironmentKey, &type metadata for LayoutIdiomEnvironmentKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LayoutIdiomEnvironmentKey and conformance LayoutIdiomEnvironmentKey);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CaptionsView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration;
  if (!lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionsSizeToggleButton.Configuration, &type metadata for CaptionsSizeToggleButton.Configuration);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionsSizeToggleButton.Configuration and conformance CaptionsSizeToggleButton.Configuration);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CaptionsSizeToggleButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptLabel()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for CaptionsView()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for CaptionsSizeToggleButton()
{
  return swift_release();
}

void initializeBufferWithCopyOfBuffer for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  OUTLINED_FUNCTION_0();
}

uint64_t assignWithCopy for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CaptionsSizeToggleButton(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for CaptionsSizeToggleButton()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for CaptionsSizeToggleButton.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD5F3408 + 4 * byte_1BD6690F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD5F343C + 4 * byte_1BD6690F0[v4]))();
}

uint64_t sub_1BD5F343C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5F3444(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD5F344CLL);
  return result;
}

uint64_t sub_1BD5F3458(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD5F3460);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD5F3464(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD5F346C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CaptionsSizeToggleButton.Configuration()
{
  OUTLINED_FUNCTION_34_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t destroy for TranscriptLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for RedactionReasons();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithCopy for TranscriptLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v6, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for TranscriptLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for TranscriptLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)a1 + v7, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptLabel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5F39AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    v3 = OUTLINED_FUNCTION_295(*(int *)(v1 + 24));
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptLabel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5F3A04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    v5 = OUTLINED_FUNCTION_146_0(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

void type metadata completion function for TranscriptLabel()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for LayoutIdiomEnvironmentKey()
{
  OUTLINED_FUNCTION_34_0();
}

void sub_1BD5F3AFC()
{
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<TranscriptSubtitle, TranscriptView>> and conformance ZStack<A>);
}

void sub_1BD5F3B28()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>> and conformance _OverlayModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>, _OverlayModifier<GeometryReader<ForEach<[_NSRange], Int, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<Visibility>>, _FrameLayout>, _OffsetEffect>)>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundModifier<Canvas<EmptyView>?> and conformance _BackgroundModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _BackgroundModifier<Canvas<EmptyView>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>);
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_QWORD *)(a1 + 64) = a2[8];
    v8 = a2[11];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    v9 = *(int *)(a3 + 56);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 88) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(int *)(a3 + 56);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 56);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v9, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(int *)(a3 + 56);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TranscriptView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 56);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v7, &demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5F454C()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_93_0(*v0);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v3 = OUTLINED_FUNCTION_295(*(int *)(v1 + 56));
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5F45A4()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
    v5 = OUTLINED_FUNCTION_146_0(*(int *)(v4 + 56));
    OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for TranscriptView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptView);
}

void type metadata completion function for TranscriptView()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9958], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptSubtitle(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v5 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v5;
    v6 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v6;
    v7 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v7;
    v8 = a2[13];
    v9 = *(int *)(a3 + 52);
    v10 = (char *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v8;
    v12 = (int *)type metadata accessor for Participant(0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
          goto LABEL_20;
        case 4u:
          v17 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
          v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v18 = *(int *)(v74 + 48);
          v19 = &v10[v18];
          v20 = &v11[v18];
          *(_OWORD *)v19 = *(_OWORD *)&v11[v18];
          v21 = *(_QWORD *)&v11[v18 + 16];
          v22 = *(_QWORD *)&v11[v18 + 24];
          *((_QWORD *)v19 + 2) = v21;
          *((_QWORD *)v19 + 3) = v22;
          *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
          *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
          v19[48] = v20[48];
          *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
          v19[88] = v20[88];
          v19[89] = v20[89];
          v23 = *((_QWORD *)v20 + 15);
          swift_bridgeObjectRetain();
          if (v23)
          {
            if (v23 == 1)
            {
              v24 = v19 + 96;
              v25 = v20 + 96;
              v26 = 209;
              goto LABEL_14;
            }
            v28 = *((_QWORD *)v20 + 16);
            *((_QWORD *)v19 + 15) = v23;
            *((_QWORD *)v19 + 16) = v28;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v19 + 96), (uint64_t)(v20 + 96), v23);
          }
          else
          {
            v27 = *((_OWORD *)v20 + 7);
            *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
            *((_OWORD *)v19 + 7) = v27;
            *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
          }
          *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
          v29 = *((_OWORD *)v20 + 10);
          *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
          *((_OWORD *)v19 + 10) = v29;
          *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
          v19[192] = v20[192];
          v24 = v19 + 208;
          v25 = v20 + 208;
          *((_QWORD *)v19 + 25) = *((_QWORD *)v20 + 25);
          v26 = 97;
LABEL_14:
          memcpy(v24, v25, v26);
          v30 = *((_QWORD *)v20 + 39);
          if (v30)
          {
            v31 = *((_QWORD *)v20 + 40);
            v32 = *((_QWORD *)v20 + 41);
            *((_QWORD *)v19 + 39) = v30;
            *((_QWORD *)v19 + 40) = v31;
            *((_QWORD *)v19 + 41) = v32;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
            *((_QWORD *)v19 + 41) = *((_QWORD *)v20 + 41);
          }
          v33 = *(int *)(v74 + 64);
          v34 = &v10[v33];
          v35 = &v11[v33];
          v36 = *((_QWORD *)v35 + 1);
          if (v36)
          {
            *(_QWORD *)v34 = *(_QWORD *)v35;
            *((_QWORD *)v34 + 1) = v36;
            v37 = *((_QWORD *)v35 + 3);
            *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
            *((_QWORD *)v34 + 3) = v37;
            v34[32] = v35[32];
            *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
            *((_QWORD *)v34 + 7) = *((_QWORD *)v35 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v38 = *((_OWORD *)v35 + 1);
            *(_OWORD *)v34 = *(_OWORD *)v35;
            *((_OWORD *)v34 + 1) = v38;
            v39 = *((_OWORD *)v35 + 3);
            *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
            *((_OWORD *)v34 + 3) = v39;
          }
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          v40 = v12[5];
          v41 = &v10[v40];
          v42 = &v11[v40];
          v43 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          v44 = v12[6];
          v45 = &v10[v44];
          v46 = &v11[v44];
          v45[4] = v46[4];
          *(_DWORD *)v45 = *(_DWORD *)v46;
          v47 = v12[7];
          v48 = &v10[v47];
          v49 = &v11[v47];
          v50 = *(void **)v49;
          if (*(_QWORD *)v49)
          {
            v51 = *((_QWORD *)v49 + 1);
            *(_QWORD *)v48 = v50;
            *((_QWORD *)v48 + 1) = v51;
            v48[16] = v49[16];
            v52 = *((_QWORD *)v49 + 4);
            *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
            *((_QWORD *)v48 + 4) = v52;
            v53 = v50;
            swift_bridgeObjectRetain();
          }
          else
          {
            v54 = *((_OWORD *)v49 + 1);
            *(_OWORD *)v48 = *(_OWORD *)v49;
            *((_OWORD *)v48 + 1) = v54;
            *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
          }
          *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
          v55 = v12[9];
          v56 = &v10[v55];
          v57 = &v11[v55];
          v58 = *((_QWORD *)v57 + 1);
          *(_QWORD *)v56 = *(_QWORD *)v57;
          *((_QWORD *)v56 + 1) = v58;
          v10[v12[10]] = v11[v12[10]];
          *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
          v59 = v12[12];
          v60 = *(void **)&v11[v59];
          *(_QWORD *)&v10[v59] = v60;
          v10[v12[13]] = v11[v12[13]];
          v75 = (uint64_t)v12;
          v61 = v12[14];
          v62 = &v10[v61];
          v63 = &v11[v61];
          v64 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v65 = v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          v67 = type metadata accessor for Participant.CountdownInfo(0);
          v68 = *(int *)(v67 + 20);
          v69 = &v62[v68];
          v70 = &v63[v68];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
          {
            v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v69, v70, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
          }
          v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
          v10[*(int *)(v75 + 60)] = v11[*(int *)(v75 + 60)];
          *(_QWORD *)&v10[*(int *)(v75 + 64)] = *(_QWORD *)&v11[*(int *)(v75 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v75);
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          goto LABEL_21;
      }
    }
    v72 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
    *(_QWORD *)&v10[*(int *)(v72 + 28)] = *(_QWORD *)&v11[*(int *)(v72 + 28)];
  }
  swift_retain();
  return v3;
}

uint64_t destroy for TranscriptSubtitle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = (int *)type metadata accessor for Participant(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v6 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
        break;
      case 4u:
        v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v4, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v16 = v4 + *(int *)(v15 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v16 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v16 + 96);
        if (*(_QWORD *)(v16 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v4 + *(int *)(v15 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v7 = v4 + v5[5];
    v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = (id *)(v4 + v5[7]);
    if (*v9)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v4 + v5[14];
    v11 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  return swift_release();
}

uint64_t initializeWithCopy for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  v8 = *(int *)(a3 + 52);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v11 = (int *)type metadata accessor for Participant(0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
        goto LABEL_18;
      case 4u:
        v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
        v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v16 = *(int *)(v72 + 48);
        v17 = &v9[v16];
        v18 = &v10[v16];
        *(_OWORD *)v17 = *(_OWORD *)&v10[v16];
        v19 = *(_QWORD *)&v10[v16 + 16];
        v20 = *(_QWORD *)&v10[v16 + 24];
        *((_QWORD *)v17 + 2) = v19;
        *((_QWORD *)v17 + 3) = v20;
        *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
        *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
        v17[48] = v18[48];
        *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
        *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
        v17[88] = v18[88];
        v17[89] = v18[89];
        v21 = *((_QWORD *)v18 + 15);
        swift_bridgeObjectRetain();
        if (v21)
        {
          if (v21 == 1)
          {
            v22 = v17 + 96;
            v23 = v18 + 96;
            v24 = 209;
            goto LABEL_12;
          }
          v26 = *((_QWORD *)v18 + 16);
          *((_QWORD *)v17 + 15) = v21;
          *((_QWORD *)v17 + 16) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(v17 + 96), (uint64_t)(v18 + 96), v21);
        }
        else
        {
          v25 = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 7) = v25;
          *((_QWORD *)v17 + 16) = *((_QWORD *)v18 + 16);
        }
        *((_DWORD *)v17 + 34) = *((_DWORD *)v18 + 34);
        v27 = *((_OWORD *)v18 + 10);
        *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
        *((_OWORD *)v17 + 10) = v27;
        *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
        v17[192] = v18[192];
        v22 = v17 + 208;
        v23 = v18 + 208;
        *((_QWORD *)v17 + 25) = *((_QWORD *)v18 + 25);
        v24 = 97;
LABEL_12:
        memcpy(v22, v23, v24);
        v28 = *((_QWORD *)v18 + 39);
        if (v28)
        {
          v29 = *((_QWORD *)v18 + 40);
          v30 = *((_QWORD *)v18 + 41);
          *((_QWORD *)v17 + 39) = v28;
          *((_QWORD *)v17 + 40) = v29;
          *((_QWORD *)v17 + 41) = v30;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 312) = *(_OWORD *)(v18 + 312);
          *((_QWORD *)v17 + 41) = *((_QWORD *)v18 + 41);
        }
        v31 = *(int *)(v72 + 64);
        v32 = &v9[v31];
        v33 = &v10[v31];
        v34 = *((_QWORD *)v33 + 1);
        if (v34)
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          *((_QWORD *)v32 + 1) = v34;
          v35 = *((_QWORD *)v33 + 3);
          *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
          *((_QWORD *)v32 + 3) = v35;
          v32[32] = v33[32];
          *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
          *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v36 = *((_OWORD *)v33 + 1);
          *(_OWORD *)v32 = *(_OWORD *)v33;
          *((_OWORD *)v32 + 1) = v36;
          v37 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v37;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v38 = v11[5];
        v39 = &v9[v38];
        v40 = &v10[v38];
        v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        v42 = v11[6];
        v43 = &v9[v42];
        v44 = &v10[v42];
        v43[4] = v44[4];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v45 = v11[7];
        v46 = &v9[v45];
        v47 = &v10[v45];
        v48 = *(void **)v47;
        if (*(_QWORD *)v47)
        {
          v49 = *((_QWORD *)v47 + 1);
          *(_QWORD *)v46 = v48;
          *((_QWORD *)v46 + 1) = v49;
          v46[16] = v47[16];
          v50 = *((_QWORD *)v47 + 4);
          *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
          *((_QWORD *)v46 + 4) = v50;
          v51 = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          v52 = *((_OWORD *)v47 + 1);
          *(_OWORD *)v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v52;
          *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
        }
        *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
        v53 = v11[9];
        v54 = &v9[v53];
        v55 = &v10[v53];
        v56 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = v56;
        v9[v11[10]] = v10[v11[10]];
        *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
        v57 = v11[12];
        v58 = *(void **)&v10[v57];
        *(_QWORD *)&v9[v57] = v58;
        v9[v11[13]] = v10[v11[13]];
        v73 = (uint64_t)v11;
        v59 = v11[14];
        v60 = &v9[v59];
        v61 = &v10[v59];
        v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        v65 = type metadata accessor for Participant.CountdownInfo(0);
        v66 = *(int *)(v65 + 20);
        v67 = &v60[v66];
        v68 = &v61[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v67, v68, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
        }
        v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
        v9[*(int *)(v73 + 60)] = v10[*(int *)(v73 + 60)];
        *(_QWORD *)&v9[*(int *)(v73 + 64)] = *(_QWORD *)&v10[*(int *)(v73 + 64)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v73);
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_19;
    }
  }
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(_QWORD *)&v9[*(int *)(v70 + 28)] = *(_QWORD *)&v10[*(int *)(v70 + 28)];
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  size_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  id v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int *v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void *v124;
  void *v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  v8 = *(int *)(a3 + 52);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      outlined destroy of Participant.State();
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of Participant.State();
      v17 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v18 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v10, v18);
          goto LABEL_48;
        case 4u:
          v30 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v9, v10, v30);
          v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v31 = *(int *)(v146 + 48);
          v32 = &v9[v31];
          v33 = &v10[v31];
          *(_OWORD *)v32 = *(_OWORD *)&v10[v31];
          *((_QWORD *)v32 + 2) = *(_QWORD *)&v10[v31 + 16];
          v34 = *(_QWORD *)&v10[v31 + 24];
          *((_WORD *)v32 + 16) = *((_WORD *)v33 + 16);
          *((_QWORD *)v32 + 3) = v34;
          *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
          v32[48] = v33[48];
          v35 = *(_OWORD *)(v33 + 72);
          v36 = *(_OWORD *)(v33 + 56);
          v32[88] = v33[88];
          *(_OWORD *)(v32 + 56) = v36;
          *(_OWORD *)(v32 + 72) = v35;
          v32[89] = v33[89];
          v37 = *((_QWORD *)v33 + 15);
          swift_bridgeObjectRetain();
          if (v37)
          {
            if (v37 == 1)
            {
              v38 = v32 + 96;
              v39 = v33 + 96;
              v40 = 209;
              goto LABEL_42;
            }
            *((_QWORD *)v32 + 15) = v37;
            *((_QWORD *)v32 + 16) = *((_QWORD *)v33 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))((uint64_t)(v32 + 96), (uint64_t)(v33 + 96), v37);
          }
          else
          {
            v87 = *((_OWORD *)v33 + 6);
            v88 = *((_OWORD *)v33 + 7);
            *((_QWORD *)v32 + 16) = *((_QWORD *)v33 + 16);
            *((_OWORD *)v32 + 6) = v87;
            *((_OWORD *)v32 + 7) = v88;
          }
          *((_DWORD *)v32 + 34) = *((_DWORD *)v33 + 34);
          *((_QWORD *)v32 + 18) = *((_QWORD *)v33 + 18);
          *((_QWORD *)v32 + 19) = *((_QWORD *)v33 + 19);
          v89 = *((_OWORD *)v33 + 10);
          v90 = *((_OWORD *)v33 + 11);
          v32[192] = v33[192];
          *((_OWORD *)v32 + 10) = v89;
          *((_OWORD *)v32 + 11) = v90;
          *((_QWORD *)v32 + 25) = *((_QWORD *)v33 + 25);
          v38 = v32 + 208;
          v39 = v33 + 208;
          v40 = 97;
LABEL_42:
          memcpy(v38, v39, v40);
          v91 = *((_QWORD *)v33 + 39);
          if (v91)
          {
            v92 = *((_QWORD *)v33 + 40);
            *((_QWORD *)v32 + 39) = v91;
            *((_QWORD *)v32 + 40) = v92;
            *((_QWORD *)v32 + 41) = *((_QWORD *)v33 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v93 = *(_OWORD *)(v33 + 312);
            *((_QWORD *)v32 + 41) = *((_QWORD *)v33 + 41);
            *(_OWORD *)(v32 + 312) = v93;
          }
          v94 = *(int *)(v146 + 64);
          v95 = &v9[v94];
          v96 = &v10[v94];
          if (*((_QWORD *)v96 + 1))
          {
            *(_QWORD *)v95 = *(_QWORD *)v96;
            *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
            *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
            *((_QWORD *)v95 + 3) = *((_QWORD *)v96 + 3);
            v95[32] = v96[32];
            *((_QWORD *)v95 + 5) = *((_QWORD *)v96 + 5);
            *((_QWORD *)v95 + 6) = *((_QWORD *)v96 + 6);
            *((_QWORD *)v95 + 7) = *((_QWORD *)v96 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v97 = *(_OWORD *)v96;
            v98 = *((_OWORD *)v96 + 1);
            v99 = *((_OWORD *)v96 + 3);
            *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
            *((_OWORD *)v95 + 3) = v99;
            *(_OWORD *)v95 = v97;
            *((_OWORD *)v95 + 1) = v98;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
    }
    v100 = v11[5];
    v101 = &v9[v100];
    v102 = &v10[v100];
    v103 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v101, v102, v103);
    v104 = v11[6];
    v105 = &v9[v104];
    v106 = &v10[v104];
    *v105 = *v106;
    v105[1] = v106[1];
    v105[2] = v106[2];
    v105[3] = v106[3];
    v105[4] = v106[4];
    v107 = v11[7];
    v108 = &v9[v107];
    v109 = &v10[v107];
    v110 = *(void **)&v9[v107];
    v111 = *(void **)&v10[v107];
    if (v110)
    {
      if (v111)
      {
        *(_QWORD *)v108 = v111;
        v112 = v111;

        v113 = *((_QWORD *)v109 + 1);
        v108[16] = v109[16];
        *((_QWORD *)v108 + 1) = v113;
        *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
        *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers((id *)v108);
        v116 = *((_QWORD *)v109 + 4);
        v117 = *((_OWORD *)v109 + 1);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v117;
        *((_QWORD *)v108 + 4) = v116;
      }
    }
    else if (v111)
    {
      *(_QWORD *)v108 = v111;
      v114 = *((_QWORD *)v109 + 1);
      v108[16] = v109[16];
      *((_QWORD *)v108 + 1) = v114;
      *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
      *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
      v115 = v111;
      swift_bridgeObjectRetain();
    }
    else
    {
      v118 = *(_OWORD *)v109;
      v119 = *((_OWORD *)v109 + 1);
      *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
      *(_OWORD *)v108 = v118;
      *((_OWORD *)v108 + 1) = v119;
    }
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v120 = v11[9];
    v121 = &v9[v120];
    v122 = &v10[v120];
    *(_QWORD *)v121 = *(_QWORD *)v122;
    *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9[v11[10]] = v10[v11[10]];
    *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v123 = v11[12];
    v124 = *(void **)&v9[v123];
    v125 = *(void **)&v10[v123];
    *(_QWORD *)&v9[v123] = v125;
    v126 = v125;

    v9[v11[13]] = v10[v11[13]];
    v127 = v11[14];
    v128 = &v9[v127];
    v129 = &v10[v127];
    v130 = type metadata accessor for Date();
    v131 = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v130);
    v132 = __swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130);
    if (v131)
    {
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
        __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        goto LABEL_62;
      }
    }
    else
    {
      v133 = *(_QWORD *)(v130 - 8);
      if (!v132)
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 24))(v128, v129, v130);
LABEL_62:
        v135 = type metadata accessor for Participant.CountdownInfo(0);
        v136 = *(int *)(v135 + 20);
        v137 = &v128[v136];
        v148 = v129;
        v138 = &v129[v136];
        v139 = __swift_getEnumTagSinglePayload((uint64_t)&v128[v136], 1, v130);
        v140 = __swift_getEnumTagSinglePayload((uint64_t)v138, 1, v130);
        if (v139)
        {
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v137, v138, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v130);
LABEL_68:
            v128[*(int *)(v135 + 24)] = v148[*(int *)(v135 + 24)];
            v9[v11[15]] = v10[v11[15]];
            *(_QWORD *)&v9[v11[16]] = *(_QWORD *)&v10[v11[16]];
            swift_retain();
            swift_release();
            goto LABEL_69;
          }
        }
        else
        {
          v141 = *(_QWORD *)(v130 - 8);
          if (!v140)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v137, v138, v130);
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v130);
        }
        v142 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v133 + 8))(v128, v130);
    }
    v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_62;
  }
  if (v13)
  {
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_69;
  }
  v14 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      goto LABEL_28;
    case 4u:
      v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v10, v19);
      v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v20 = *(int *)(v145 + 48);
      v21 = &v9[v20];
      v22 = &v10[v20];
      *(_OWORD *)v21 = *(_OWORD *)&v10[v20];
      *((_QWORD *)v21 + 2) = *(_QWORD *)&v10[v20 + 16];
      v23 = *(_QWORD *)&v10[v20 + 24];
      *((_WORD *)v21 + 16) = *((_WORD *)v22 + 16);
      *((_QWORD *)v21 + 3) = v23;
      *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
      v21[48] = v22[48];
      v24 = *(_OWORD *)(v22 + 72);
      v25 = *(_OWORD *)(v22 + 56);
      v21[88] = v22[88];
      *(_OWORD *)(v21 + 56) = v25;
      *(_OWORD *)(v21 + 72) = v24;
      v21[89] = v22[89];
      v26 = *((_QWORD *)v22 + 15);
      swift_bridgeObjectRetain();
      if (v26)
      {
        if (v26 == 1)
        {
          v27 = v21 + 96;
          v28 = v22 + 96;
          v29 = 209;
          goto LABEL_22;
        }
        *((_QWORD *)v21 + 15) = v26;
        *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8))((uint64_t)(v21 + 96), (uint64_t)(v22 + 96), v26);
      }
      else
      {
        v41 = *((_OWORD *)v22 + 6);
        v42 = *((_OWORD *)v22 + 7);
        *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
        *((_OWORD *)v21 + 6) = v41;
        *((_OWORD *)v21 + 7) = v42;
      }
      *((_DWORD *)v21 + 34) = *((_DWORD *)v22 + 34);
      *((_QWORD *)v21 + 18) = *((_QWORD *)v22 + 18);
      *((_QWORD *)v21 + 19) = *((_QWORD *)v22 + 19);
      v43 = *((_OWORD *)v22 + 10);
      v44 = *((_OWORD *)v22 + 11);
      v21[192] = v22[192];
      *((_OWORD *)v21 + 10) = v43;
      *((_OWORD *)v21 + 11) = v44;
      *((_QWORD *)v21 + 25) = *((_QWORD *)v22 + 25);
      v27 = v21 + 208;
      v28 = v22 + 208;
      v29 = 97;
LABEL_22:
      memcpy(v27, v28, v29);
      v45 = *((_QWORD *)v22 + 39);
      if (v45)
      {
        v46 = *((_QWORD *)v22 + 40);
        *((_QWORD *)v21 + 39) = v45;
        *((_QWORD *)v21 + 40) = v46;
        *((_QWORD *)v21 + 41) = *((_QWORD *)v22 + 41);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v47 = *(_OWORD *)(v22 + 312);
        *((_QWORD *)v21 + 41) = *((_QWORD *)v22 + 41);
        *(_OWORD *)(v21 + 312) = v47;
      }
      v48 = *(int *)(v145 + 64);
      v49 = &v9[v48];
      v50 = &v10[v48];
      if (*((_QWORD *)v50 + 1))
      {
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
        *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
        v49[32] = v50[32];
        *((_QWORD *)v49 + 5) = *((_QWORD *)v50 + 5);
        *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
        *((_QWORD *)v49 + 7) = *((_QWORD *)v50 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v51 = *(_OWORD *)v50;
        v52 = *((_OWORD *)v50 + 1);
        v53 = *((_OWORD *)v50 + 3);
        *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
        *((_OWORD *)v49 + 3) = v53;
        *(_OWORD *)v49 = v51;
        *((_OWORD *)v49 + 1) = v52;
      }
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      v54 = v11[5];
      v55 = &v9[v54];
      v56 = &v10[v54];
      v57 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
      v58 = v11[6];
      v59 = &v9[v58];
      v60 = &v10[v58];
      v61 = *(_DWORD *)v60;
      v59[4] = v60[4];
      *(_DWORD *)v59 = v61;
      v62 = v11[7];
      v63 = &v9[v62];
      v64 = &v10[v62];
      v65 = *(void **)v64;
      if (*(_QWORD *)v64)
      {
        *(_QWORD *)v63 = v65;
        v66 = *((_QWORD *)v64 + 1);
        v63[16] = v64[16];
        *((_QWORD *)v63 + 1) = v66;
        *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
        *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
        v67 = v65;
        swift_bridgeObjectRetain();
      }
      else
      {
        v68 = *(_OWORD *)v64;
        v69 = *((_OWORD *)v64 + 1);
        *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
        *(_OWORD *)v63 = v68;
        *((_OWORD *)v63 + 1) = v69;
      }
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      v70 = v11[9];
      v71 = &v9[v70];
      v72 = &v10[v70];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
      v9[v11[10]] = v10[v11[10]];
      *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
      v73 = v11[12];
      v74 = v11;
      v75 = *(void **)&v10[v73];
      *(_QWORD *)&v9[v73] = v75;
      v9[v74[13]] = v10[v74[13]];
      v147 = (uint64_t)v74;
      v76 = v74[14];
      v77 = &v9[v76];
      v78 = &v10[v76];
      v79 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v80 = v75;
      if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
      }
      v82 = type metadata accessor for Participant.CountdownInfo(0);
      v83 = *(int *)(v82 + 20);
      v84 = &v77[v83];
      v85 = &v78[v83];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v78[v83], 1, v79))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v84, v85, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v79);
      }
      v77[*(int *)(v82 + 24)] = v78[*(int *)(v82 + 24)];
      v9[*(int *)(v147 + 60)] = v10[*(int *)(v147 + 60)];
      *(_QWORD *)&v9[*(int *)(v147 + 64)] = *(_QWORD *)&v10[*(int *)(v147 + 64)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v147);
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      goto LABEL_29;
  }
LABEL_69:
  v143 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(_QWORD *)&v9[*(int *)(v143 + 28)] = *(_QWORD *)&v10[*(int *)(v143 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

void outlined destroy of Participant.State()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_311();
  v2 = v1(v0);
  OUTLINED_FUNCTION_17_1(v2);
  OUTLINED_FUNCTION_0();
}

uint64_t initializeWithTake for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v4 = *(int *)(a3 + 52);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v17 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v5, v6, v17);
        goto LABEL_7;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v5[*(int *)(v11 + 48)], &v6[*(int *)(v11 + 48)], 0x150uLL);
        v12 = *(int *)(v11 + 64);
        v13 = &v5[v12];
        v14 = &v6[v12];
        v15 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v15;
        v16 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v16;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
    v18 = v7[5];
    v19 = &v5[v18];
    v20 = &v6[v18];
    v21 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    v22 = v7[6];
    v23 = &v5[v22];
    v24 = &v6[v22];
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    v25 = v7[7];
    v26 = &v5[v25];
    v27 = &v6[v25];
    v28 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v28;
    *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
    *(_QWORD *)&v5[v7[8]] = *(_QWORD *)&v6[v7[8]];
    *(_OWORD *)&v5[v7[9]] = *(_OWORD *)&v6[v7[9]];
    v5[v7[10]] = v6[v7[10]];
    *(_QWORD *)&v5[v7[11]] = *(_QWORD *)&v6[v7[11]];
    *(_QWORD *)&v5[v7[12]] = *(_QWORD *)&v6[v7[12]];
    v5[v7[13]] = v6[v7[13]];
    v29 = v7[14];
    v30 = &v5[v29];
    v31 = &v6[v29];
    v32 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
    }
    v34 = type metadata accessor for Participant.CountdownInfo(0);
    v35 = *(int *)(v34 + 20);
    v36 = &v30[v35];
    v37 = &v31[v35];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v36, v37, v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
    }
    v30[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
    v5[v7[15]] = v6[v7[15]];
    *(_QWORD *)&v5[v7[16]] = *(_QWORD *)&v6[v7[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(_QWORD *)&v5[*(int *)(v39 + 28)] = *(_QWORD *)&v6[*(int *)(v39 + 28)];
  return a1;
}

uint64_t assignWithTake for TranscriptSubtitle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  v7 = *(int *)(a3 + 52);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = (int *)type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      outlined destroy of Participant.State();
      goto LABEL_6;
    }
    if (a1 != a2)
    {
      outlined destroy of Participant.State();
      v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v52 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v8, v9, v52);
          goto LABEL_23;
        case 4u:
          v45 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v8, v9, v45);
          v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v8[*(int *)(v46 + 48)], &v9[*(int *)(v46 + 48)], 0x150uLL);
          v47 = *(int *)(v46 + 64);
          v48 = &v8[v47];
          v49 = &v9[v47];
          v50 = *((_OWORD *)v49 + 1);
          *(_OWORD *)v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v50;
          v51 = *((_OWORD *)v49 + 3);
          *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
          *((_OWORD *)v48 + 3) = v51;
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
    }
    v53 = v10[5];
    v54 = &v8[v53];
    v55 = &v9[v53];
    v56 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
    v57 = v10[6];
    v58 = &v8[v57];
    v59 = &v9[v57];
    *v58 = *v59;
    v58[1] = v59[1];
    v58[2] = v59[2];
    v58[3] = v59[3];
    v58[4] = v59[4];
    v60 = v10[7];
    v61 = &v8[v60];
    v62 = &v9[v60];
    v63 = *(void **)&v8[v60];
    if (v63)
    {
      if (*(_QWORD *)v62)
      {
        *(_QWORD *)v61 = *(_QWORD *)v62;

        *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
        v61[16] = v62[16];
        v64 = *((_QWORD *)v62 + 4);
        *((_QWORD *)v61 + 3) = *((_QWORD *)v62 + 3);
        *((_QWORD *)v61 + 4) = v64;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      outlined destroy of Participant.RemoteIdentifiers((id *)v61);
    }
    v65 = *((_OWORD *)v62 + 1);
    *(_OWORD *)v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v65;
    *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
LABEL_29:
    *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
    swift_bridgeObjectRelease();
    v66 = v10[9];
    v67 = &v8[v66];
    v68 = &v9[v66];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = v70;
    *((_QWORD *)v67 + 1) = v69;
    swift_bridgeObjectRelease();
    v8[v10[10]] = v9[v10[10]];
    *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
    swift_bridgeObjectRelease();
    v71 = v10[12];
    v72 = *(void **)&v8[v71];
    *(_QWORD *)&v8[v71] = *(_QWORD *)&v9[v71];

    v8[v10[13]] = v9[v10[13]];
    v73 = v10[14];
    v74 = &v8[v73];
    v75 = &v9[v73];
    v76 = type metadata accessor for Date();
    v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v76);
    v78 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76);
    if (v77)
    {
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
        goto LABEL_35;
      }
    }
    else
    {
      v79 = *(_QWORD *)(v76 - 8);
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 40))(v74, v75, v76);
LABEL_35:
        v81 = type metadata accessor for Participant.CountdownInfo(0);
        v82 = *(int *)(v81 + 20);
        v83 = &v74[v82];
        v91 = v75;
        v84 = &v75[v82];
        v85 = __swift_getEnumTagSinglePayload((uint64_t)&v74[v82], 1, v76);
        v86 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v76);
        if (v85)
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v83, v84, v76);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v76);
LABEL_41:
            v74[*(int *)(v81 + 24)] = v91[*(int *)(v81 + 24)];
            v8[v10[15]] = v9[v10[15]];
            *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
            swift_release();
            goto LABEL_42;
          }
        }
        else
        {
          v87 = *(_QWORD *)(v76 - 8);
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v83, v84, v76);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v83, v76);
        }
        v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v76);
    }
    v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_35;
  }
  if (v12)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  v13 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v8, v9, v23);
      goto LABEL_12;
    case 4u:
      v16 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v8, v9, v16);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v8[*(int *)(v17 + 48)], &v9[*(int *)(v17 + 48)], 0x150uLL);
      v18 = *(int *)(v17 + 64);
      v19 = &v8[v18];
      v20 = &v9[v18];
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      v22 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v19 + 3) = v22;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      break;
  }
  v24 = v10[5];
  v25 = &v8[v24];
  v26 = &v9[v24];
  v27 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = v10[6];
  v29 = &v8[v28];
  v30 = &v9[v28];
  *(_DWORD *)v29 = *(_DWORD *)v30;
  v29[4] = v30[4];
  v31 = v10[7];
  v32 = &v8[v31];
  v33 = &v9[v31];
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  *(_QWORD *)&v8[v10[8]] = *(_QWORD *)&v9[v10[8]];
  *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
  v8[v10[10]] = v9[v10[10]];
  *(_QWORD *)&v8[v10[11]] = *(_QWORD *)&v9[v10[11]];
  *(_QWORD *)&v8[v10[12]] = *(_QWORD *)&v9[v10[12]];
  v8[v10[13]] = v9[v10[13]];
  v35 = v10[14];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v38 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
  }
  v40 = type metadata accessor for Participant.CountdownInfo(0);
  v41 = *(int *)(v40 + 20);
  v42 = &v36[v41];
  v43 = &v37[v41];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v37[v41], 1, v38))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v42, v43, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v38);
  }
  v36[*(int *)(v40 + 24)] = v37[*(int *)(v40 + 24)];
  v8[v10[15]] = v9[v10[15]];
  *(_QWORD *)&v8[v10[16]] = *(_QWORD *)&v9[v10[16]];
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_42:
  v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  *(_QWORD *)&v8[*(int *)(v89 + 28)] = *(_QWORD *)&v9[*(int *)(v89 + 28)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSubtitle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5F733C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
    v3 = OUTLINED_FUNCTION_295(*(int *)(v1 + 52));
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSubtitle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5F7394()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
    v5 = OUTLINED_FUNCTION_146_0(*(int *)(v4 + 52));
    OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for TranscriptSubtitle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptSubtitle);
}

void type metadata completion function for TranscriptSubtitle()
{
  unint64_t v0;

  type metadata accessor for State<Participant?>();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for State<Participant?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for State<Participant?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Participant?);
    v0 = type metadata accessor for State();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for State<Participant?>);
  }
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptSubtitle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for TranscriptList(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptList);
}

void sub_1BD5F752C()
{
  EnvironmentValues.sizeCategory.getter();
  OUTLINED_FUNCTION_0();
}

void key path getter for EnvironmentValues.menuIndicatorVisibility : EnvironmentValues, serialized()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_91_20();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.menuIndicatorVisibility : EnvironmentValues, serialized()
{
  OUTLINED_FUNCTION_104_14();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD5F7588()
{
  return swift_deallocObject();
}

uint64_t sub_1BD5F7598()
{
  uint64_t v0;

  type metadata accessor for TranscriptView(0);
  OUTLINED_FUNCTION_49_53();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_68_32();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = OUTLINED_FUNCTION_45_48();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    OUTLINED_FUNCTION_297();
  }
  return OUTLINED_FUNCTION_6_10();
}

void partial apply for closure #1 in TranscriptView.body.getter()
{
  uint64_t v0;

  type metadata accessor for TranscriptView(0);
  OUTLINED_FUNCTION_76_29();
  if (*(_BYTE *)(v0 + 41) == 1)
    (*(void (**)(_QWORD))(v0 + 64))(0);
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptList and conformance TranscriptList);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<AnyShapeStyle> and conformance _BackgroundStyleModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD5F7848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_42_2();
  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_50_49();
  v5 = v4 & ~v3;
  v7 = v5 + *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?)
                 - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = v1 + v5 + *(int *)(v0 + 52);
  v11 = OUTLINED_FUNCTION_14_2();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    OUTLINED_FUNCTION_238();
    switch(OUTLINED_FUNCTION_121_0())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v12 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_75(v12);
        break;
      case 4u:
        v24 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_75(v24);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_55_38();
        if (*(_QWORD *)(v2 + 120) >= 2uLL)
          OUTLINED_FUNCTION_103_11();
        if (*(_QWORD *)(v2 + 312))
        {
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_101_19();
        }
        if (*(_QWORD *)(v10 + *(int *)(v7 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_100_13();
          OUTLINED_FUNCTION_99_15();
        }
        break;
      default:
        break;
    }
    v13 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_2_18(v13);
    v14 = (id *)(v10 + *(int *)(v11 + 28));
    if (*v14)
    {

      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_68_3();
    OUTLINED_FUNCTION_22_93();
    OUTLINED_FUNCTION_68_3();

    OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    OUTLINED_FUNCTION_830();
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    OUTLINED_FUNCTION_83_29();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  OUTLINED_FUNCTION_83_29();
  v15 = v1 + v9;
  v16 = (int *)OUTLINED_FUNCTION_46_43();
  if (!__swift_getEnumTagSinglePayload(v1 + v9, 1, (uint64_t)v16))
  {
    v17 = v15 + v16[5];
    OUTLINED_FUNCTION_238();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v18 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_15_27(v18);
        break;
      case 4u:
        v25 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_15_27(v25);
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v27 = v17 + *(int *)(v26 + 48);
        OUTLINED_FUNCTION_69_30();
        if (*(_QWORD *)(v27 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v27 + 96);
        if (*(_QWORD *)(v27 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v17 + *(int *)(v26 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v19 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_12_16(v19);
    v20 = (id *)(v17 + *(int *)(v11 + 28));
    if (*v20)
    {

      OUTLINED_FUNCTION_68_32();
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_93();
    swift_bridgeObjectRelease();

    v21 = OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_12_116())
      OUTLINED_FUNCTION_7_130();
    OUTLINED_FUNCTION_830();
    if (!OUTLINED_FUNCTION_12_116())
      OUTLINED_FUNCTION_7_130();
    swift_release();
    v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
    v22(v15 + v16[6], v21);
    v22(v15 + v16[7], v21);
    OUTLINED_FUNCTION_83_29();
    OUTLINED_FUNCTION_22_93();
    OUTLINED_FUNCTION_68_3();
  }
  return OUTLINED_FUNCTION_8_117();
}

uint64_t partial apply for closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_62_37();
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?)
                                      - 8)
                          + 80);
  return closure #1 in closure #2 in TranscriptSubtitle.body.getter(a1, (unsigned __int8 *)(v2 + v3), v2 + ((v4 + v7) & ~v7), a2);
}

uint64_t outlined copy of CaptionsSizeToggleButton?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
    return swift_retain();
  return result;
}

uint64_t outlined consume of CaptionsSizeToggleButton?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
    return swift_release();
  return result;
}

uint64_t sub_1BD5F7C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for TranscriptSubtitle(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v2 + *(int *)(v1 + 52);
  v4 = OUTLINED_FUNCTION_14_2();
  if (!OUTLINED_FUNCTION_4_40(v3))
  {
    OUTLINED_FUNCTION_238();
    switch(OUTLINED_FUNCTION_109())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v5 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_17_1(v5);
        break;
      case 4u:
        v9 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_17_1(v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v11 = v3 + *(int *)(v10 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v11 + 120) >= 2uLL)
          OUTLINED_FUNCTION_103_11();
        if (*(_QWORD *)(v11 + 312))
        {
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_101_19();
        }
        if (*(_QWORD *)(v3 + *(int *)(v10 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_100_13();
          OUTLINED_FUNCTION_99_15();
        }
        break;
      default:
        break;
    }
    v6 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_2_18(v6);
    v7 = (id *)(v3 + *(int *)(v4 + 28));
    if (*v7)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_93();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    OUTLINED_FUNCTION_830();
    if (!OUTLINED_FUNCTION_7_23())
      OUTLINED_FUNCTION_5_62();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  swift_release();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #2 in closure #2 in TranscriptSubtitle.body.getter()
{
  uint64_t v0;

  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_76_29();
  (*(void (**)(_QWORD))(v0 + 24))(0);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptSubtitle.ParticipantBadgeModifier);
}

uint64_t sub_1BD5F7EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for TranscriptSubtitle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?)
                 - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v31 = *(_QWORD *)(v5 + 64);
  v7 = OUTLINED_FUNCTION_30_78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = v0 + v3 + *(int *)(v1 + 52);
  v11 = (int *)OUTLINED_FUNCTION_14_2();
  if (!OUTLINED_FUNCTION_4_40(v10))
  {
    OUTLINED_FUNCTION_238();
    switch(OUTLINED_FUNCTION_47_36())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v12 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_2_18(v12);
        break;
      case 4u:
        v25 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_2_18(v25);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        OUTLINED_FUNCTION_31_64();
        if (*(_QWORD *)(v6 + 120) >= 2uLL)
          OUTLINED_FUNCTION_95_20();
        if (*(_QWORD *)(v6 + 312))
        {
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_94_12();
        }
        if (OUTLINED_FUNCTION_65_30())
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_93_14();
          OUTLINED_FUNCTION_92_19();
        }
        break;
      default:
        break;
    }
    v13 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_15_27(v13);
    v14 = (id *)(v10 + v11[7]);
    if (*v14)
    {

      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_44_54();
    OUTLINED_FUNCTION_22_93();
    OUTLINED_FUNCTION_44_54();

    OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_10_4())
      OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_830();
    if (!OUTLINED_FUNCTION_10_4())
      OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_61_32();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Participant?>);
  OUTLINED_FUNCTION_61_32();
  v15 = v0 + v6;
  v16 = (int *)OUTLINED_FUNCTION_46_43();
  if (!__swift_getEnumTagSinglePayload(v0 + v6, 1, (uint64_t)v16))
  {
    v30 = v6;
    v17 = v15 + v16[5];
    OUTLINED_FUNCTION_238();
    v29 = v7;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v18 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_12_16(v18);
        break;
      case 4u:
        v26 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_12_16(v26);
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v28 = v17 + *(int *)(v27 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v28 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v28 + 96);
        if (*(_QWORD *)(v28 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v17 + *(int *)(v27 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v19 = v17 + v11[5];
    v20 = OUTLINED_FUNCTION_33_0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v21 = (id *)(v17 + v11[7]);
    if (*v21)
    {

      OUTLINED_FUNCTION_71_26();
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_93();
    swift_bridgeObjectRelease();

    v22 = OUTLINED_FUNCTION_33();
    if (!OUTLINED_FUNCTION_81_25())
      OUTLINED_FUNCTION_60_33();
    OUTLINED_FUNCTION_830();
    if (!OUTLINED_FUNCTION_81_25())
      OUTLINED_FUNCTION_60_33();
    swift_release();
    v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
    v23(v15 + v16[6], v22);
    v23(v15 + v16[7], v22);
    OUTLINED_FUNCTION_61_32();
    OUTLINED_FUNCTION_22_93();
    OUTLINED_FUNCTION_44_54();
    v7 = v29;
    v6 = v30;
  }
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + ((v6 + v31 + v9) & ~v9), v7);
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_24_74();
}

uint64_t partial apply for closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for TranscriptSubtitle(0);
  OUTLINED_FUNCTION_62_37();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
  OUTLINED_FUNCTION_74_23();
  v8 = v7 & ~v6;
  v10 = *(_QWORD *)(v9 + 64);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_30_78() - 8) + 80);
  return closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(a1, a2, v2 + v3, v2 + v8, v2 + ((v8 + v10 + v11) & ~v11));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptSubtitle.ParticipantBadgeModifier and conformance TranscriptSubtitle.ParticipantBadgeModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, TranscriptSubtitle.ParticipantBadgeModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>> and conformance ZStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>, ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>>>, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type CaptionSectioner.Caption? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for CaptionSectioner.Caption?);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.Caption and conformance CaptionSectioner.Caption);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEE998], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionSectioner.Caption? and conformance <A> A?);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter()
{
  uint64_t *v0;

  return closure #1 in closure #2 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(v0[2], v0[3], v0[6]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _MaskEffect<LinearGradient> and conformance _MaskEffect<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>, _MaskEffect<LinearGradient>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>> and conformance ScrollView<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ScrollView<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>> and conformance HStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding;
  if (!lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptSubtitle.SubtitlePadding, &unk_1E7644F00);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptSubtitle.SubtitlePadding and conformance TranscriptSubtitle.SubtitlePadding);
  }
  return result;
}

void *partial apply for closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #2 in TranscriptSubtitle.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32), a1);
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>(uint64_t a1)
{
  outlined copy of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _FlexFrameLayout>, TranscriptSubtitle.SubtitlePadding>(uint64_t a1)
{
  outlined consume of Text.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BD5F88DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD5F8900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_107_14();
  OUTLINED_FUNCTION_77_23();
  v3 = OUTLINED_FUNCTION_32_61();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v6 = type metadata accessor for RedactionReasons();
    OUTLINED_FUNCTION_75(v6);
  }
  else
  {
    OUTLINED_FUNCTION_108_16();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + ((v1 + v2 + v5) & ~v5), v3);
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_16_33();
}

void partial apply for closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter()
{
  Swift::Int *v0;
  uint64_t *v1;

  type metadata accessor for TranscriptLabel(0);
  OUTLINED_FUNCTION_32_61();
  v0 = (Swift::Int *)OUTLINED_FUNCTION_37_57();
  closure #1 in closure #1 in closure #2 in TranscriptLabel.body.getter(v0, v1);
}

void sub_1BD5F8A04()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_91_20();
  OUTLINED_FUNCTION_0();
}

void sub_1BD5F8A20()
{
  OUTLINED_FUNCTION_104_14();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a9)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Rectangle, _FrameLayout>, _OffsetEffect>, _EnvironmentKeyWritingModifier<Color?>>, _OpacityEffect>?(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  result = a9;
  if (a9)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroyTm_22()
{
  uint64_t v0;

  OUTLINED_FUNCTION_107_14();
  OUTLINED_FUNCTION_49_53();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v0 = type metadata accessor for RedactionReasons();
    OUTLINED_FUNCTION_17_1(v0);
  }
  else
  {
    OUTLINED_FUNCTION_297();
  }
  return OUTLINED_FUNCTION_6_10();
}

uint64_t partial apply for closure #1 in TranscriptLabel._debugCanvas.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_311();
  type metadata accessor for TranscriptLabel(v0);
  OUTLINED_FUNCTION_28_71();
  return closure #1 in TranscriptLabel._debugCanvas.getter();
}

void partial apply for closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(CGContext *a1)
{
  uint64_t v1;

  closure #1 in closure #1 in TranscriptLabel._debugCanvas.getter(a1, *(uint64_t **)(v1 + 16));
}

void sub_1BD5F8B78()
{
  AttributeScopes.UIKitAttributes.underlineColor.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DC18A0], MEMORY[0x1E0DC18B0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineColorAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineColorAttribute);
  }
  return result;
}

uint64_t sub_1BD5F8BD8()
{
  return swift_release();
}

uint64_t sub_1BD5F8BE0(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BD5F8BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineColorAttribute>) & 1;
}

uint64_t sub_1BD5F8C0C(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineColorAttribute>);
}

_QWORD *sub_1BD5F8C28(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BD5F8C34()
{
  AttributeScopes.UIKitAttributes.underlineStyle.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DC18B8], MEMORY[0x1E0DC18C8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes.UnderlineStyleAttribute and conformance AttributeScopes.UIKitAttributes.UnderlineStyleAttribute);
  }
  return result;
}

uint64_t sub_1BD5F8C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return key path index equality operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, a3, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineStyleAttribute>) & 1;
}

uint64_t sub_1BD5F8CB4(uint64_t a1, uint64_t a2)
{
  return key path index hash operator for (KeyPath<AttributeScopes.FoundationAttributes, AttributeScopes.FoundationAttributes.LinkAttribute>)(a1, a2, &demangling cache variable for type metadata for KeyPath<AttributeScopes.UIKitAttributes, AttributeScopes.UIKitAttributes.UnderlineStyleAttribute>);
}

uint64_t key path setter for EnvironmentValues.accentColor : EnvironmentValues, serialized()
{
  swift_retain();
  return EnvironmentValues.accentColor.setter();
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptList(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_BYTE *)(a1 + 58) = *((_BYTE *)a2 + 58);
    *(_QWORD *)(a1 + 64) = a2[8];
    v10 = a2[11];
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    v11 = a3[15];
    v22 = (uint64_t)a2 + v11;
    v23 = a1 + v11;
    *(_QWORD *)(a1 + 88) = v10;
    v12 = type metadata accessor for DynamicTypeSize();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v13(v23, v22, v12);
    v14 = a3[16];
    v15 = a3[17];
    v16 = v7 + v14;
    v17 = (uint64_t)a2 + v14;
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
    v18 = (_QWORD *)(v7 + v15);
    v19 = (uint64_t *)((char *)a2 + v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t destroy for TranscriptList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 60);
  v5 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v6 = a1 + *(int *)(a2 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = type metadata accessor for ContentSizeCategory();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v9 = a3[15];
  v20 = a2 + v9;
  v21 = a1 + v9;
  *(_QWORD *)(a1 + 88) = v8;
  v10 = type metadata accessor for DynamicTypeSize();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v11(v21, v20, v10);
  v12 = a3[16];
  v13 = a3[17];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  v16 = (_QWORD *)(a1 + v13);
  v17 = (_QWORD *)(a2 + v13);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  v9 = a3[15];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[16];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v16 = a3[17];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v16, &demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(_OWORD *)(a2 + 80);
  v8 = a3[15];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v11 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TranscriptList(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  v7 = a3[15];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[16];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[17];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v14, &demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptList()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5F9604()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_93_0(*v0);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    OUTLINED_FUNCTION_45_48();
    OUTLINED_FUNCTION_44_6();
    if (v2)
    {
      v3 = *(int *)(v1 + 60);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>);
      v3 = *(int *)(v1 + 68);
    }
    v4 = OUTLINED_FUNCTION_295(v3);
    OUTLINED_FUNCTION_1_16(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptList()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5F9674()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_13();
  if (v4)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v3 = v2;
    OUTLINED_FUNCTION_45_48();
    OUTLINED_FUNCTION_45_7();
    if (v4)
    {
      v5 = *(int *)(v3 + 60);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>);
      v5 = *(int *)(v3 + 68);
    }
    v6 = OUTLINED_FUNCTION_146_0(v5);
    OUTLINED_FUNCTION_0_29(v6, v7, v8, v9);
  }
}

void type metadata completion function for TranscriptList()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for DynamicTypeSize();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Environment<ContentSizeCategory>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB388], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t initializeBufferWithCopyOfBuffer for TranscriptSubtitle.ParticipantBadgeModifier(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _OWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)(a1 + v9);
    v11 = (char *)(v3 + v9);
    v12 = (int *)type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v74 = v6;
      v15 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
          goto LABEL_20;
        case 4u:
          v17 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v11, v17);
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v18 = *(int *)(v76 + 48);
          v19 = &v10[v18];
          v20 = &v11[v18];
          *(_OWORD *)v19 = *(_OWORD *)&v11[v18];
          v21 = *(_QWORD *)&v11[v18 + 16];
          v22 = *(_QWORD *)&v11[v18 + 24];
          *((_QWORD *)v19 + 2) = v21;
          *((_QWORD *)v19 + 3) = v22;
          *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
          *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
          v19[48] = v20[48];
          *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
          v19[88] = v20[88];
          v19[89] = v20[89];
          v73 = v19 + 96;
          v23 = *((_QWORD *)v20 + 15);
          swift_bridgeObjectRetain();
          if (v23)
          {
            if (v23 == 1)
            {
              v24 = v19 + 96;
              v25 = v20 + 96;
              v26 = 209;
              goto LABEL_14;
            }
            v28 = *((_QWORD *)v20 + 16);
            *((_QWORD *)v19 + 15) = v23;
            *((_QWORD *)v19 + 16) = v28;
            (**(void (***)(_OWORD *, uint64_t, uint64_t))(v23 - 8))(v73, (uint64_t)(v20 + 96), v23);
          }
          else
          {
            v27 = *((_OWORD *)v20 + 7);
            *v73 = *((_OWORD *)v20 + 6);
            *((_OWORD *)v19 + 7) = v27;
            *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
          }
          *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
          v29 = *((_OWORD *)v20 + 10);
          *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
          *((_OWORD *)v19 + 10) = v29;
          *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
          v19[192] = v20[192];
          v24 = v19 + 208;
          v25 = v20 + 208;
          *((_QWORD *)v19 + 25) = *((_QWORD *)v20 + 25);
          v26 = 97;
LABEL_14:
          memcpy(v24, v25, v26);
          v30 = *((_QWORD *)v20 + 39);
          if (v30)
          {
            v31 = *((_QWORD *)v20 + 40);
            v32 = *((_QWORD *)v20 + 41);
            *((_QWORD *)v19 + 39) = v30;
            *((_QWORD *)v19 + 40) = v31;
            *((_QWORD *)v19 + 41) = v32;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
            *((_QWORD *)v19 + 41) = *((_QWORD *)v20 + 41);
          }
          v33 = *(int *)(v76 + 64);
          v34 = &v10[v33];
          v35 = &v11[v33];
          v36 = *((_QWORD *)v35 + 1);
          if (v36)
          {
            *(_QWORD *)v34 = *(_QWORD *)v35;
            *((_QWORD *)v34 + 1) = v36;
            v37 = *((_QWORD *)v35 + 3);
            *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
            *((_QWORD *)v34 + 3) = v37;
            v34[32] = v35[32];
            *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
            *((_QWORD *)v34 + 7) = *((_QWORD *)v35 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v38 = *((_OWORD *)v35 + 1);
            *(_OWORD *)v34 = *(_OWORD *)v35;
            *((_OWORD *)v34 + 1) = v38;
            v39 = *((_OWORD *)v35 + 3);
            *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
            *((_OWORD *)v34 + 3) = v39;
          }
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          v40 = v12[5];
          v41 = &v10[v40];
          v42 = &v11[v40];
          v43 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          v44 = v12[6];
          v45 = &v10[v44];
          v46 = &v11[v44];
          v45[4] = v46[4];
          *(_DWORD *)v45 = *(_DWORD *)v46;
          v47 = v12[7];
          v48 = &v10[v47];
          v49 = &v11[v47];
          v50 = *(void **)v49;
          v75 = v3;
          if (*(_QWORD *)v49)
          {
            v51 = *((_QWORD *)v49 + 1);
            *(_QWORD *)v48 = v50;
            *((_QWORD *)v48 + 1) = v51;
            v48[16] = v49[16];
            v52 = *((_QWORD *)v49 + 4);
            *((_QWORD *)v48 + 3) = *((_QWORD *)v49 + 3);
            *((_QWORD *)v48 + 4) = v52;
            v53 = v50;
            swift_bridgeObjectRetain();
          }
          else
          {
            v54 = *((_OWORD *)v49 + 1);
            *(_OWORD *)v48 = *(_OWORD *)v49;
            *((_OWORD *)v48 + 1) = v54;
            *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
          }
          *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
          v55 = v12[9];
          v56 = &v10[v55];
          v57 = &v11[v55];
          v58 = *((_QWORD *)v57 + 1);
          *(_QWORD *)v56 = *(_QWORD *)v57;
          *((_QWORD *)v56 + 1) = v58;
          v10[v12[10]] = v11[v12[10]];
          *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
          v59 = v12[12];
          v60 = *(void **)&v11[v59];
          *(_QWORD *)&v10[v59] = v60;
          v10[v12[13]] = v11[v12[13]];
          v77 = (uint64_t)v12;
          v61 = v12[14];
          v62 = &v10[v61];
          v63 = &v11[v61];
          v64 = type metadata accessor for Date();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v65 = v60;
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
          }
          v3 = v75;
          v67 = type metadata accessor for Participant.CountdownInfo(0);
          v68 = *(int *)(v67 + 20);
          v69 = &v62[v68];
          v70 = &v63[v68];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v63[v68], 1, v64))
          {
            v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
            memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v69, v70, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v64);
          }
          v6 = v74;
          v62[*(int *)(v67 + 24)] = v63[*(int *)(v67 + 24)];
          v10[*(int *)(v77 + 60)] = v11[*(int *)(v77 + 60)];
          *(_QWORD *)&v10[*(int *)(v77 + 64)] = *(_QWORD *)&v11[*(int *)(v77 + 64)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v77);
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          goto LABEL_21;
      }
    }
    *(_BYTE *)(a1 + *(int *)(v6 + 24)) = *(_BYTE *)(v3 + *(int *)(v6 + 24));
  }
  return a1;
}

uint64_t destroy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for Participant(0);
  result = __swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
        break;
      case 4u:
        v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v4, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v16 = v4 + *(int *)(v15 + 48);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v16 + 120) >= 2uLL)
          __swift_destroy_boxed_opaque_existential_1(v16 + 96);
        if (*(_QWORD *)(v16 + 312))
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v4 + *(int *)(v15 + 64) + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      default:
        break;
    }
    v8 = v4 + v5[5];
    v9 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = (id *)(v4 + v5[7]);
    if (*v10)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v11 = v4 + v5[14];
    v12 = type metadata accessor for Date();
    if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v11 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v13, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v13, v12);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(v4 + v8);
  v11 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v74 = v4;
    v13 = type metadata accessor for Participant.State(0);
    v72 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
        goto LABEL_18;
      case 4u:
        v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
        v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v16 = *(int *)(v71 + 48);
        v17 = &v9[v16];
        v18 = &v10[v16];
        *(_OWORD *)v17 = *(_OWORD *)&v10[v16];
        v19 = *(_QWORD *)&v10[v16 + 16];
        v20 = *(_QWORD *)&v10[v16 + 24];
        *((_QWORD *)v17 + 2) = v19;
        *((_QWORD *)v17 + 3) = v20;
        *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
        *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
        v17[48] = v18[48];
        *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
        *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
        v17[88] = v18[88];
        v17[89] = v18[89];
        v21 = *((_QWORD *)v18 + 15);
        swift_bridgeObjectRetain();
        if (v21)
        {
          if (v21 == 1)
          {
            v22 = v17 + 96;
            v23 = v18 + 96;
            v24 = 209;
            goto LABEL_12;
          }
          v26 = *((_QWORD *)v18 + 16);
          *((_QWORD *)v17 + 15) = v21;
          *((_QWORD *)v17 + 16) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(v17 + 96), (uint64_t)(v18 + 96), v21);
        }
        else
        {
          v25 = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 7) = v25;
          *((_QWORD *)v17 + 16) = *((_QWORD *)v18 + 16);
        }
        *((_DWORD *)v17 + 34) = *((_DWORD *)v18 + 34);
        v27 = *((_OWORD *)v18 + 10);
        *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
        *((_OWORD *)v17 + 10) = v27;
        *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
        v17[192] = v18[192];
        v22 = v17 + 208;
        v23 = v18 + 208;
        *((_QWORD *)v17 + 25) = *((_QWORD *)v18 + 25);
        v24 = 97;
LABEL_12:
        memcpy(v22, v23, v24);
        v28 = *((_QWORD *)v18 + 39);
        if (v28)
        {
          v29 = *((_QWORD *)v18 + 40);
          v30 = *((_QWORD *)v18 + 41);
          *((_QWORD *)v17 + 39) = v28;
          *((_QWORD *)v17 + 40) = v29;
          *((_QWORD *)v17 + 41) = v30;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 312) = *(_OWORD *)(v18 + 312);
          *((_QWORD *)v17 + 41) = *((_QWORD *)v18 + 41);
        }
        v31 = *(int *)(v71 + 64);
        v32 = &v9[v31];
        v33 = &v10[v31];
        v34 = *((_QWORD *)v33 + 1);
        if (v34)
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          *((_QWORD *)v32 + 1) = v34;
          v35 = *((_QWORD *)v33 + 3);
          *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
          *((_QWORD *)v32 + 3) = v35;
          v32[32] = v33[32];
          *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
          *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v36 = *((_OWORD *)v33 + 1);
          *(_OWORD *)v32 = *(_OWORD *)v33;
          *((_OWORD *)v32 + 1) = v36;
          v37 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v37;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v38 = v11[5];
        v39 = &v9[v38];
        v40 = &v10[v38];
        v41 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
        v42 = v11[6];
        v43 = &v9[v42];
        v44 = &v10[v42];
        v43[4] = v44[4];
        *(_DWORD *)v43 = *(_DWORD *)v44;
        v45 = v11[7];
        v46 = &v9[v45];
        v47 = &v10[v45];
        v48 = *(void **)v47;
        v73 = a1;
        if (*(_QWORD *)v47)
        {
          v49 = *((_QWORD *)v47 + 1);
          *(_QWORD *)v46 = v48;
          *((_QWORD *)v46 + 1) = v49;
          v46[16] = v47[16];
          v50 = *((_QWORD *)v47 + 4);
          *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
          *((_QWORD *)v46 + 4) = v50;
          v51 = v48;
          swift_bridgeObjectRetain();
        }
        else
        {
          v52 = *((_OWORD *)v47 + 1);
          *(_OWORD *)v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v52;
          *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
        }
        *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
        v53 = v11[9];
        v54 = &v9[v53];
        v55 = &v10[v53];
        v56 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = v56;
        v9[v11[10]] = v10[v11[10]];
        *(_QWORD *)&v9[v11[11]] = *(_QWORD *)&v10[v11[11]];
        v57 = v11[12];
        v58 = *(void **)&v10[v57];
        *(_QWORD *)&v9[v57] = v58;
        v9[v11[13]] = v10[v11[13]];
        v59 = v11[14];
        v60 = &v9[v59];
        v61 = &v10[v59];
        v62 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = v58;
        if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
        }
        a1 = v73;
        v65 = type metadata accessor for Participant.CountdownInfo(0);
        v66 = *(int *)(v65 + 20);
        v67 = &v60[v66];
        v68 = &v61[v66];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v67, v68, v62);
          __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
        }
        a3 = v72;
        v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
        v9[v11[15]] = v10[v11[15]];
        *(_QWORD *)&v9[v11[16]] = *(_QWORD *)&v10[v11[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
        v4 = v74;
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_19;
    }
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  int EnumTagSinglePayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  size_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  char *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void *v124;
  void *v125;
  id v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v4 = a2;
  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(v4 + v10);
  v13 = (int *)type metadata accessor for Participant(0);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!(_DWORD)v6)
  {
    if (EnumTagSinglePayload)
    {
      outlined destroy of Participant.State();
      goto LABEL_7;
    }
    v148 = a3;
    v149 = v4;
    if (a1 != v4)
    {
      outlined destroy of Participant.State();
      v18 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v19 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v11, v12, v19);
          goto LABEL_48;
        case 4u:
          v31 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v11, v12, v31);
          v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v32 = *(int *)(v144 + 48);
          v33 = &v11[v32];
          v34 = &v12[v32];
          *(_OWORD *)v33 = *(_OWORD *)&v12[v32];
          *((_QWORD *)v33 + 2) = *(_QWORD *)&v12[v32 + 16];
          v35 = *(_QWORD *)&v12[v32 + 24];
          *((_WORD *)v33 + 16) = *((_WORD *)v34 + 16);
          *((_QWORD *)v33 + 3) = v35;
          *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
          v33[48] = v34[48];
          v36 = *(_OWORD *)(v34 + 72);
          v37 = *(_OWORD *)(v34 + 56);
          v33[88] = v34[88];
          *(_OWORD *)(v33 + 56) = v37;
          *(_OWORD *)(v33 + 72) = v36;
          v33[89] = v34[89];
          v38 = *((_QWORD *)v34 + 15);
          swift_bridgeObjectRetain();
          if (v38)
          {
            if (v38 == 1)
            {
              v39 = v33 + 96;
              v40 = v34 + 96;
              v41 = 209;
              goto LABEL_42;
            }
            *((_QWORD *)v33 + 15) = v38;
            *((_QWORD *)v33 + 16) = *((_QWORD *)v34 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8))((uint64_t)(v33 + 96), (uint64_t)(v34 + 96), v38);
          }
          else
          {
            v87 = *((_OWORD *)v34 + 6);
            v88 = *((_OWORD *)v34 + 7);
            *((_QWORD *)v33 + 16) = *((_QWORD *)v34 + 16);
            *((_OWORD *)v33 + 6) = v87;
            *((_OWORD *)v33 + 7) = v88;
          }
          *((_DWORD *)v33 + 34) = *((_DWORD *)v34 + 34);
          *((_QWORD *)v33 + 18) = *((_QWORD *)v34 + 18);
          *((_QWORD *)v33 + 19) = *((_QWORD *)v34 + 19);
          v89 = *((_OWORD *)v34 + 10);
          v90 = *((_OWORD *)v34 + 11);
          v33[192] = v34[192];
          *((_OWORD *)v33 + 10) = v89;
          *((_OWORD *)v33 + 11) = v90;
          *((_QWORD *)v33 + 25) = *((_QWORD *)v34 + 25);
          v39 = v33 + 208;
          v40 = v34 + 208;
          v41 = 97;
LABEL_42:
          memcpy(v39, v40, v41);
          v91 = *((_QWORD *)v34 + 39);
          if (v91)
          {
            v92 = *((_QWORD *)v34 + 40);
            *((_QWORD *)v33 + 39) = v91;
            *((_QWORD *)v33 + 40) = v92;
            *((_QWORD *)v33 + 41) = *((_QWORD *)v34 + 41);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v93 = *(_OWORD *)(v34 + 312);
            *((_QWORD *)v33 + 41) = *((_QWORD *)v34 + 41);
            *(_OWORD *)(v33 + 312) = v93;
          }
          v94 = *(int *)(v144 + 64);
          v95 = &v11[v94];
          v96 = &v12[v94];
          if (*((_QWORD *)v96 + 1))
          {
            *(_QWORD *)v95 = *(_QWORD *)v96;
            *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
            *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
            *((_QWORD *)v95 + 3) = *((_QWORD *)v96 + 3);
            v95[32] = v96[32];
            *((_QWORD *)v95 + 5) = *((_QWORD *)v96 + 5);
            *((_QWORD *)v95 + 6) = *((_QWORD *)v96 + 6);
            *((_QWORD *)v95 + 7) = *((_QWORD *)v96 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v97 = *(_OWORD *)v96;
            v98 = *((_OWORD *)v96 + 1);
            v99 = *((_OWORD *)v96 + 3);
            *((_OWORD *)v95 + 2) = *((_OWORD *)v96 + 2);
            *((_OWORD *)v95 + 3) = v99;
            *(_OWORD *)v95 = v97;
            *((_OWORD *)v95 + 1) = v98;
          }
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          break;
      }
    }
    v100 = v13[5];
    v101 = &v11[v100];
    v102 = &v12[v100];
    v103 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v101, v102, v103);
    v104 = v13[6];
    v105 = &v11[v104];
    v106 = &v12[v104];
    *v105 = *v106;
    v105[1] = v106[1];
    v105[2] = v106[2];
    v105[3] = v106[3];
    v105[4] = v106[4];
    v107 = v13[7];
    v108 = &v11[v107];
    v109 = &v12[v107];
    v110 = *(void **)&v11[v107];
    v111 = *(void **)&v12[v107];
    if (v110)
    {
      if (v111)
      {
        *(_QWORD *)v108 = v111;
        v112 = v111;

        v113 = *((_QWORD *)v109 + 1);
        v108[16] = v109[16];
        *((_QWORD *)v108 + 1) = v113;
        *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
        *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        outlined destroy of Participant.RemoteIdentifiers((id *)v108);
        v116 = *((_QWORD *)v109 + 4);
        v117 = *((_OWORD *)v109 + 1);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v117;
        *((_QWORD *)v108 + 4) = v116;
      }
    }
    else if (v111)
    {
      *(_QWORD *)v108 = v111;
      v114 = *((_QWORD *)v109 + 1);
      v108[16] = v109[16];
      *((_QWORD *)v108 + 1) = v114;
      *((_QWORD *)v108 + 3) = *((_QWORD *)v109 + 3);
      *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
      v115 = v111;
      swift_bridgeObjectRetain();
    }
    else
    {
      v118 = *(_OWORD *)v109;
      v119 = *((_OWORD *)v109 + 1);
      *((_QWORD *)v108 + 4) = *((_QWORD *)v109 + 4);
      *(_OWORD *)v108 = v118;
      *((_OWORD *)v108 + 1) = v119;
    }
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v120 = v13[9];
    v121 = &v11[v120];
    v122 = &v12[v120];
    *(_QWORD *)v121 = *(_QWORD *)v122;
    *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11[v13[10]] = v12[v13[10]];
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v123 = v13[12];
    v124 = *(void **)&v11[v123];
    v125 = *(void **)&v12[v123];
    *(_QWORD *)&v11[v123] = v125;
    v126 = v125;

    v11[v13[13]] = v12[v13[13]];
    v127 = v13[14];
    v128 = &v11[v127];
    v129 = &v12[v127];
    v130 = type metadata accessor for Date();
    LODWORD(v124) = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v130);
    v131 = __swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130);
    if ((_DWORD)v124)
    {
      if (!v131)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
        __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        goto LABEL_62;
      }
    }
    else
    {
      v132 = *(_QWORD *)(v130 - 8);
      if (!v131)
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 24))(v128, v129, v130);
LABEL_62:
        v134 = type metadata accessor for Participant.CountdownInfo(0);
        v135 = *(int *)(v134 + 20);
        v136 = &v128[v135];
        v145 = v129;
        v137 = &v129[v135];
        v138 = __swift_getEnumTagSinglePayload((uint64_t)&v128[v135], 1, v130);
        v139 = __swift_getEnumTagSinglePayload((uint64_t)v137, 1, v130);
        if (v138)
        {
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v136, v137, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v136, 0, 1, v130);
LABEL_68:
            a3 = v148;
            v128[*(int *)(v134 + 24)] = v145[*(int *)(v134 + 24)];
            v11[v13[15]] = v12[v13[15]];
            *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
            swift_retain();
            swift_release();
LABEL_69:
            v4 = v149;
            goto LABEL_70;
          }
        }
        else
        {
          v140 = *(_QWORD *)(v130 - 8);
          if (!v139)
          {
            (*(void (**)(char *, char *, uint64_t))(v140 + 24))(v136, v137, v130);
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v140 + 8))(v136, v130);
        }
        v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        goto LABEL_68;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v128, v130);
    }
    v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
    goto LABEL_62;
  }
  if (!EnumTagSinglePayload)
  {
    v149 = v4;
    v15 = type metadata accessor for Participant.State(0);
    v147 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v16 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
        goto LABEL_28;
      case 4u:
        v20 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v12, v20);
        v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v21 = *(int *)(v143 + 48);
        v22 = &v11[v21];
        v23 = &v12[v21];
        *(_OWORD *)v22 = *(_OWORD *)&v12[v21];
        *((_QWORD *)v22 + 2) = *(_QWORD *)&v12[v21 + 16];
        v24 = *(_QWORD *)&v12[v21 + 24];
        *((_WORD *)v22 + 16) = *((_WORD *)v23 + 16);
        *((_QWORD *)v22 + 3) = v24;
        *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
        v22[48] = v23[48];
        v25 = *(_OWORD *)(v23 + 72);
        v26 = *(_OWORD *)(v23 + 56);
        v22[88] = v23[88];
        *(_OWORD *)(v22 + 56) = v26;
        *(_OWORD *)(v22 + 72) = v25;
        v22[89] = v23[89];
        v27 = *((_QWORD *)v23 + 15);
        swift_bridgeObjectRetain();
        if (v27)
        {
          if (v27 == 1)
          {
            v28 = v22 + 96;
            v29 = v23 + 96;
            v30 = 209;
            goto LABEL_22;
          }
          *((_QWORD *)v22 + 15) = v27;
          *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))((uint64_t)(v22 + 96), (uint64_t)(v23 + 96), v27);
        }
        else
        {
          v42 = *((_OWORD *)v23 + 6);
          v43 = *((_OWORD *)v23 + 7);
          *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
          *((_OWORD *)v22 + 6) = v42;
          *((_OWORD *)v22 + 7) = v43;
        }
        *((_DWORD *)v22 + 34) = *((_DWORD *)v23 + 34);
        *((_QWORD *)v22 + 18) = *((_QWORD *)v23 + 18);
        *((_QWORD *)v22 + 19) = *((_QWORD *)v23 + 19);
        v44 = *((_OWORD *)v23 + 10);
        v45 = *((_OWORD *)v23 + 11);
        v22[192] = v23[192];
        *((_OWORD *)v22 + 10) = v44;
        *((_OWORD *)v22 + 11) = v45;
        *((_QWORD *)v22 + 25) = *((_QWORD *)v23 + 25);
        v28 = v22 + 208;
        v29 = v23 + 208;
        v30 = 97;
LABEL_22:
        memcpy(v28, v29, v30);
        v46 = *((_QWORD *)v23 + 39);
        if (v46)
        {
          v47 = *((_QWORD *)v23 + 40);
          *((_QWORD *)v22 + 39) = v46;
          *((_QWORD *)v22 + 40) = v47;
          *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v48 = *(_OWORD *)(v23 + 312);
          *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
          *(_OWORD *)(v22 + 312) = v48;
        }
        v49 = *(int *)(v143 + 64);
        v50 = &v11[v49];
        v51 = &v12[v49];
        if (*((_QWORD *)v51 + 1))
        {
          *(_QWORD *)v50 = *(_QWORD *)v51;
          *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
          *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
          *((_QWORD *)v50 + 3) = *((_QWORD *)v51 + 3);
          v50[32] = v51[32];
          *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
          *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
          *((_QWORD *)v50 + 7) = *((_QWORD *)v51 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v52 = *(_OWORD *)v51;
          v53 = *((_OWORD *)v51 + 1);
          v54 = *((_OWORD *)v51 + 3);
          *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
          *((_OWORD *)v50 + 3) = v54;
          *(_OWORD *)v50 = v52;
          *((_OWORD *)v50 + 1) = v53;
        }
LABEL_28:
        swift_storeEnumTagMultiPayload();
LABEL_29:
        v55 = v13[5];
        v56 = &v11[v55];
        v57 = &v12[v55];
        v58 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
        v59 = v13[6];
        v60 = &v11[v59];
        v61 = &v12[v59];
        v62 = *(_DWORD *)v61;
        v60[4] = v61[4];
        *(_DWORD *)v60 = v62;
        v63 = v13[7];
        v64 = &v11[v63];
        v65 = &v12[v63];
        v66 = *(void **)v65;
        v146 = a1;
        if (*(_QWORD *)v65)
        {
          *(_QWORD *)v64 = v66;
          v67 = *((_QWORD *)v65 + 1);
          v64[16] = v65[16];
          *((_QWORD *)v64 + 1) = v67;
          *((_QWORD *)v64 + 3) = *((_QWORD *)v65 + 3);
          *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
          v68 = v66;
          swift_bridgeObjectRetain();
        }
        else
        {
          v69 = *(_OWORD *)v65;
          v70 = *((_OWORD *)v65 + 1);
          *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
          *(_OWORD *)v64 = v69;
          *((_OWORD *)v64 + 1) = v70;
        }
        *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
        v71 = v13[9];
        v72 = &v11[v71];
        v73 = &v12[v71];
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
        v11[v13[10]] = v12[v13[10]];
        *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
        v74 = v13[12];
        v75 = *(void **)&v12[v74];
        *(_QWORD *)&v11[v74] = v75;
        v11[v13[13]] = v12[v13[13]];
        v76 = v13[14];
        v77 = &v11[v76];
        v78 = &v12[v76];
        v79 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v80 = v75;
        if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
          __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        }
        a1 = v146;
        v82 = type metadata accessor for Participant.CountdownInfo(0);
        v83 = *(int *)(v82 + 20);
        v84 = &v77[v83];
        v85 = &v78[v83];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v78[v83], 1, v79))
        {
          v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v84, v85, v79);
          __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v79);
        }
        a3 = v147;
        v77[*(int *)(v82 + 24)] = v78[*(int *)(v82 + 24)];
        v11[v13[15]] = v12[v13[15]];
        *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_7:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_70:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v3 = a3;
  v4 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = (int *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for Participant.State(0);
    v42 = v3;
    v43 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v19 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_7;
      case 4u:
        v12 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v7[*(int *)(v13 + 48)], &v8[*(int *)(v13 + 48)], 0x150uLL);
        v14 = *(int *)(v13 + 64);
        v15 = &v7[v14];
        v16 = &v8[v14];
        v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        v18 = *((_OWORD *)v16 + 3);
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        *((_OWORD *)v15 + 3) = v18;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
    v20 = v9[5];
    v21 = &v7[v20];
    v22 = &v8[v20];
    v23 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = v9[6];
    v25 = &v7[v24];
    v26 = &v8[v24];
    *(_DWORD *)v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    v27 = v9[7];
    v28 = &v7[v27];
    v29 = &v8[v27];
    v30 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v30;
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
    *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
    v7[v9[10]] = v8[v9[10]];
    *(_QWORD *)&v7[v9[11]] = *(_QWORD *)&v8[v9[11]];
    *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
    v7[v9[13]] = v8[v9[13]];
    v31 = v9[14];
    v32 = &v7[v31];
    v33 = &v8[v31];
    v34 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    v36 = type metadata accessor for Participant.CountdownInfo(0);
    v37 = *(int *)(v36 + 20);
    v38 = &v32[v37];
    v39 = &v33[v37];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v33[v37], 1, v34))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v38, v39, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v34);
    }
    v32[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
    v7[v9[15]] = v8[v9[15]];
    *(_QWORD *)&v7[v9[16]] = *(_QWORD *)&v8[v9[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
    v3 = v42;
    v4 = v43;
  }
  *(_BYTE *)(a1 + *(int *)(v3 + 24)) = *(_BYTE *)(v4 + *(int *)(v3 + 24));
  return a1;
}

uint64_t assignWithTake for TranscriptSubtitle.ParticipantBadgeModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  int v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *__src;
  uint64_t v95;
  uint64_t *v96;

  v4 = a2;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)v4 + v10;
  v13 = (int *)type metadata accessor for Participant(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (v15)
    {
      outlined destroy of Participant.State();
      goto LABEL_6;
    }
    if ((uint64_t *)a1 != v4)
    {
      outlined destroy of Participant.State();
      v18 = type metadata accessor for Participant.State(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 5u:
          v55 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v11, v12, v55);
          goto LABEL_23;
        case 4u:
          v48 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v11, v12, v48);
          v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          memcpy(&v11[*(int *)(v49 + 48)], &v12[*(int *)(v49 + 48)], 0x150uLL);
          v50 = *(int *)(v49 + 64);
          v51 = &v11[v50];
          v52 = &v12[v50];
          v53 = *((_OWORD *)v52 + 1);
          *(_OWORD *)v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v53;
          v54 = *((_OWORD *)v52 + 3);
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
          *((_OWORD *)v51 + 3) = v54;
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          break;
      }
    }
    v96 = v4;
    v56 = v13[5];
    v57 = &v11[v56];
    v58 = &v12[v56];
    v59 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
    v60 = v13[6];
    v61 = &v11[v60];
    v62 = &v12[v60];
    *v61 = *v62;
    v61[1] = v62[1];
    v61[2] = v62[2];
    v61[3] = v62[3];
    v61[4] = v62[4];
    v63 = v13[7];
    v64 = &v11[v63];
    v65 = &v12[v63];
    v66 = *(void **)&v11[v63];
    if (v66)
    {
      if (*(_QWORD *)v65)
      {
        *(_QWORD *)v64 = *(_QWORD *)v65;

        *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
        v64[16] = v65[16];
        v67 = *((_QWORD *)v65 + 4);
        *((_QWORD *)v64 + 3) = *((_QWORD *)v65 + 3);
        *((_QWORD *)v64 + 4) = v67;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      outlined destroy of Participant.RemoteIdentifiers((id *)v64);
    }
    v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v68;
    *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
LABEL_29:
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    swift_bridgeObjectRelease();
    v69 = v13[9];
    v70 = &v11[v69];
    v71 = &v12[v69];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    *(_QWORD *)v70 = v73;
    *((_QWORD *)v70 + 1) = v72;
    swift_bridgeObjectRelease();
    v11[v13[10]] = v12[v13[10]];
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    swift_bridgeObjectRelease();
    v74 = v13[12];
    v75 = *(void **)&v11[v74];
    *(_QWORD *)&v11[v74] = *(_QWORD *)&v12[v74];

    v11[v13[13]] = v12[v13[13]];
    v76 = v13[14];
    v77 = &v11[v76];
    v78 = &v12[v76];
    v79 = type metadata accessor for Date();
    v80 = __swift_getEnumTagSinglePayload((uint64_t)v77, 1, v79);
    __src = v78;
    v81 = __swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79);
    v95 = a3;
    if (v80)
    {
      if (!v81)
      {
        v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        goto LABEL_35;
      }
    }
    else
    {
      v83 = *(_QWORD *)(v79 - 8);
      if (!v81)
      {
        v82 = v78;
        (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v77, v78, v79);
LABEL_35:
        v85 = type metadata accessor for Participant.CountdownInfo(0);
        v86 = *(int *)(v85 + 20);
        v87 = &v77[v86];
        v88 = &v82[v86];
        v89 = __swift_getEnumTagSinglePayload((uint64_t)&v77[v86], 1, v79);
        v90 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v79);
        if (v89)
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v87, v88, v79);
            __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v79);
LABEL_41:
            v77[*(int *)(v85 + 24)] = __src[*(int *)(v85 + 24)];
            v11[v13[15]] = v12[v13[15]];
            *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
            swift_release();
LABEL_42:
            a3 = v95;
            v4 = v96;
            goto LABEL_43;
          }
        }
        else
        {
          v91 = *(_QWORD *)(v79 - 8);
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 40))(v87, v88, v79);
            goto LABEL_41;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v87, v79);
        }
        v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v79);
    }
    v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    v82 = v78;
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_35;
  }
  if (!v15)
  {
    v16 = type metadata accessor for Participant.State(0);
    v95 = a3;
    v96 = v4;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v26 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v11, v12, v26);
        goto LABEL_12;
      case 4u:
        v19 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v11[*(int *)(v20 + 48)], &v12[*(int *)(v20 + 48)], 0x150uLL);
        v21 = *(int *)(v20 + 64);
        v22 = &v11[v21];
        v23 = &v12[v21];
        v24 = *((_OWORD *)v23 + 1);
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v24;
        v25 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v25;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        break;
    }
    v27 = v13[5];
    v28 = &v11[v27];
    v29 = &v12[v27];
    v30 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v31 = v13[6];
    v32 = &v11[v31];
    v33 = &v12[v31];
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v34 = v13[7];
    v35 = &v11[v34];
    v36 = &v12[v34];
    v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    *((_QWORD *)v35 + 4) = *((_QWORD *)v36 + 4);
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    v11[v13[10]] = v12[v13[10]];
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    *(_QWORD *)&v11[v13[12]] = *(_QWORD *)&v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    v38 = v13[14];
    v39 = &v11[v38];
    v40 = &v12[v38];
    v41 = type metadata accessor for Date();
    if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
    }
    v43 = type metadata accessor for Participant.CountdownInfo(0);
    v44 = *(int *)(v43 + 20);
    v45 = &v39[v44];
    v46 = &v40[v44];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v44], 1, v41))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v45, v46, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v41);
    }
    v39[*(int *)(v43 + 24)] = v40[*(int *)(v43 + 24)];
    v11[v13[15]] = v12[v13[15]];
    *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
    goto LABEL_42;
  }
LABEL_6:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_43:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *((_BYTE *)v4 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptSubtitle.ParticipantBadgeModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5FC1D4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 == 254)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    v3 = OUTLINED_FUNCTION_295(*(int *)(v2 + 20));
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptSubtitle.ParticipantBadgeModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5FC238(uint64_t a1, char a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a3 == 254)
  {
    *(_BYTE *)(a1 + 8) = -a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
    v5 = OUTLINED_FUNCTION_146_0(*(int *)(a4 + 20));
    OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

void type metadata completion function for TranscriptSubtitle.ParticipantBadgeModifier()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Participant?, type metadata accessor for Participant, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void *type metadata accessor for TranscriptSubtitle.SubtitlePadding()
{
  return &unk_1E7644F00;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>>);
    v2[3] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptList, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, _FixedSizeLayout>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onTapGesture(count:perform:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD5FC3C8()
{
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ScrollViewReader<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, CaptionsSizeToggleButton?)>> and conformance VStack<A>);
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.SubtitlePadding()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in TranscriptSubtitle.ParticipantBadgeModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptList()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)();

  type metadata accessor for TranscriptList(0);
  v0 = OUTLINED_FUNCTION_0_147();
  return closure #1 in TranscriptList.body.getter(v0, v1, v2);
}

void partial apply for closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_104();
  v0 = OUTLINED_FUNCTION_37_57();
  closure #1 in closure #1 in TranscriptList.body.getter(v0, v1, v2, v3);
}

uint64_t objectdestroy_108Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_42_2();
  v1 = *(_QWORD *)(type metadata accessor for TranscriptList(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 64);
  v3 = OUTLINED_FUNCTION_30_78();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_69_30();
  OUTLINED_FUNCTION_90_20();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_98_18();
  OUTLINED_FUNCTION_97_12();
  v6 = OUTLINED_FUNCTION_45_48();
  OUTLINED_FUNCTION_2_18(v6);
  OUTLINED_FUNCTION_87();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_121_0() == 1)
  {
    v7 = OUTLINED_FUNCTION_79_26();
    OUTLINED_FUNCTION_75(v7);
  }
  else
  {
    OUTLINED_FUNCTION_108_16();
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v9 + v5) & ~v5), v3);
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_8_117();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for TranscriptList(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  OUTLINED_FUNCTION_30_78();
  return closure #1 in closure #2 in closure #1 in closure #1 in TranscriptList.body.getter(v0 + v2);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 72), a1, *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>> and conformance LazyVStack<A>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _PreferenceActionModifier<AutoScrollKey> and conformance _PreferenceActionModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<LazyVStack<TupleView<(ModifiedContent<Color, _FrameLayout>, ForEach<[CaptionSectioner.SpeakerSection], CaptionSectioner.SectionID, Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>>, IDView<ModifiedContent<Color, _FrameLayout>, String>)>>, _PreferenceActionModifier<AutoScrollKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [CaptionSectioner.SpeakerSection]);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionSectioner.SpeakerSection and conformance CaptionSectioner.SpeakerSection);
    v3 = v2;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF30], v1, &v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [CaptionSectioner.SpeakerSection] and conformance <A> [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GroupIconView and conformance GroupIconView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView;
  if (!lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for GroupIconView, &unk_1E76451C8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView and conformance GroupIconView);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(_QWORD *)(v1 + 16), a1);
}

uint64_t partial apply for closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type Image? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type Image? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Image? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Image?);
    v2 = MEMORY[0x1E0CDF820];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Image? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Double and conformance Double()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Double and conformance Double;
  if (!lazy protocol witness table cache variable for type Double and conformance Double)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Double and conformance Double);
  }
  return result;
}

void sub_1BD5FC7F8(uint64_t *a1@<X8>)
{
  *a1 = EnvironmentValues.accentColor.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(void ***)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64));
}

uint64_t objectdestroy_105Tm()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_77_23();
  OUTLINED_FUNCTION_89_27();
  OUTLINED_FUNCTION_69_30();
  OUTLINED_FUNCTION_90_20();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_98_18();
  OUTLINED_FUNCTION_97_12();
  v0 = OUTLINED_FUNCTION_45_48();
  OUTLINED_FUNCTION_75(v0);
  OUTLINED_FUNCTION_87();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v1 = OUTLINED_FUNCTION_79_26();
    OUTLINED_FUNCTION_17_1(v1);
  }
  else
  {
    OUTLINED_FUNCTION_297();
  }
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_311();
  type metadata accessor for TranscriptList(v0);
  OUTLINED_FUNCTION_28_71();
  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

void partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_104();
  v0 = (uint64_t *)OUTLINED_FUNCTION_36_60();
  closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(v0, v1, v2, v3);
}

uint64_t partial apply for closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_30_78();
  OUTLINED_FUNCTION_49_3();
  return closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, a2, v2 + v5);
}

uint64_t partial apply for closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_104();
  v0 = OUTLINED_FUNCTION_36_60();
  return closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(v0, v1, v2, v3);
}

uint64_t objectdestroy_124Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_30_78();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_30_78();
  OUTLINED_FUNCTION_44(v0);
  return closure #1 in closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter()
{
  return closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t, _QWORD, double, double, double, double))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter);
}

unint64_t lazy protocol witness table accessor for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>;
  if (!lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView>);
    v2[0] = lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?();
    v2[1] = lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>();
    v2[2] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFF98], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Section<(<<opaque return type of View.redacted(reason:)>>.0)?, ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>, EmptyView> and conformance <> Section<A, B, C>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for (<<opaque return type of View.redacted(reason:)>>.0)?);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
    v2[2] = lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type (<<opaque return type of View.redacted(reason:)>>.0)? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionHeader, _PaddingLayout>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionHeader and conformance CaptionHeader);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CaptionHeader, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for CaptionHeader(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionHeader);
}

unint64_t lazy protocol witness table accessor for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    v4[1] = v2;
    v4[2] = v3;
    v4[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[CaptionSectioner.Caption], CaptionSectioner.CaptionID, <<opaque return type of View.redacted(reason:)>>.0> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type CaptionRow and conformance CaptionRow);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, AutoScrollKey> and conformance _AnchorWritingModifier<A, B>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CaptionRow, _AnchorWritingModifier<CGRect, AutoScrollKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for CaptionRow(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CaptionRow);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_93();
  v1 = OUTLINED_FUNCTION_32_61();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  type metadata accessor for TranscriptList(0);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = OUTLINED_FUNCTION_45_48();
  OUTLINED_FUNCTION_75(v4);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_109() == 1)
  {
    v5 = OUTLINED_FUNCTION_79_26();
    OUTLINED_FUNCTION_17_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_297();
  }
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1)
{
  return partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, (uint64_t (*)(uint64_t, unint64_t, unint64_t, _QWORD, double, double, double, double))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, unint64_t, _QWORD, double, double, double, double))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = OUTLINED_FUNCTION_32_61();
  v5 = (*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  type metadata accessor for TranscriptList(0);
  OUTLINED_FUNCTION_74_23();
  v8 = (v5 + v6) & ~v7;
  v10 = (*(_QWORD *)(v9 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(a1, v2 + v5, v2 + v8, *(_QWORD *)(v2 + v10), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(double *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 24));
}

uint64_t sub_1BD5FCF6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = type metadata accessor for TranscriptList(0);
  v2 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v3 = (int *)OUTLINED_FUNCTION_46_43();
  v4 = *((_QWORD *)v3 - 1);
  v18 = (v2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = *(_QWORD *)(v4 + 64);
  v5 = OUTLINED_FUNCTION_32_61();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v17 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_89_27();
  OUTLINED_FUNCTION_69_30();
  OUTLINED_FUNCTION_90_20();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_98_18();
  OUTLINED_FUNCTION_97_12();
  v7 = OUTLINED_FUNCTION_45_48();
  OUTLINED_FUNCTION_15_27(v7);
  OUTLINED_FUNCTION_87();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ContentSizeCategory>.Content);
  if (OUTLINED_FUNCTION_47_36() == 1)
  {
    v8 = OUTLINED_FUNCTION_79_26();
    OUTLINED_FUNCTION_2_18(v8);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  v9 = v0 + v18 + v3[5];
  OUTLINED_FUNCTION_238();
  switch(OUTLINED_FUNCTION_47_36())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v10 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_2_18(v10);
      break;
    case 4u:
      v15 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_2_18(v15);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_31_64();
      if (*(_QWORD *)(v2 + 120) >= 2uLL)
        OUTLINED_FUNCTION_95_20();
      if (*(_QWORD *)(v2 + 312))
      {
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_94_12();
      }
      if (OUTLINED_FUNCTION_65_30())
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_93_14();
        OUTLINED_FUNCTION_92_19();
      }
      break;
    default:
      break;
  }
  v11 = OUTLINED_FUNCTION_14_2();
  v12 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_16(v12);
  v13 = (id *)(v9 + *(int *)(v11 + 28));
  if (*v13)
  {

    OUTLINED_FUNCTION_68_32();
  }
  OUTLINED_FUNCTION_44_54();
  OUTLINED_FUNCTION_22_93();
  OUTLINED_FUNCTION_44_54();
  OUTLINED_FUNCTION_102_15();
  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_12_116())
    OUTLINED_FUNCTION_7_130();
  OUTLINED_FUNCTION_830();
  if (!OUTLINED_FUNCTION_12_116())
    OUTLINED_FUNCTION_7_130();
  OUTLINED_FUNCTION_61_32();
  OUTLINED_FUNCTION_58_41(v3[6]);
  OUTLINED_FUNCTION_96_16(v3[7]);
  swift_release();
  OUTLINED_FUNCTION_22_93();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v0 + ((v6 + ((v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) & ~v6), v5);
  return OUTLINED_FUNCTION_24_74();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(type metadata accessor for TranscriptList(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_46_43();
  OUTLINED_FUNCTION_74_23();
  v10 = (v8 + 8) & ~v9;
  v12 = (*(_QWORD *)(v11 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_32_61() - 8) + 80);
  closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in TranscriptList.body.getter(a1, v2 + v6, *(_QWORD *)(v2 + v7), v2 + v10, v2 + ((v13 + v12 + 32) & ~v13), a2, *(CGFloat *)(v2 + v12), *(CGFloat *)(v2 + v12 + 8), *(CGFloat *)(v2 + v12 + 16), *(CGFloat *)(v2 + v12 + 24));
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  outlined copy of Text.Storage(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined copy of ModifiedContent<GroupIconView, _PaddingLayout>?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  outlined consume of Text.Storage(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t outlined consume of ModifiedContent<GroupIconView, _PaddingLayout>?(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for TranscriptParticipantBadge(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptParticipantBadge);
}

_QWORD *initializeBufferWithCopyOfBuffer for CaptionRow(_QWORD *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  __int128 v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  int *v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v13 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_QWORD *)a2;
    v89 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
    v7 = v89[5];
    v8 = (char *)a1 + v7;
    v9 = &a2[v7];
    v10 = type metadata accessor for Participant.State(0);
    v90 = a3;
    v91 = a2;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v11 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        goto LABEL_18;
      case 4u:
        v14 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v16 = *(int *)(v15 + 48);
        v17 = &v8[v16];
        v18 = &v9[v16];
        *(_OWORD *)v17 = *(_OWORD *)&v9[v16];
        v19 = *(_QWORD *)&v9[v16 + 16];
        v20 = *(_QWORD *)&v9[v16 + 24];
        *((_QWORD *)v17 + 2) = v19;
        *((_QWORD *)v17 + 3) = v20;
        *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
        *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
        v17[48] = v18[48];
        *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
        *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
        v17[88] = v18[88];
        v17[89] = v18[89];
        v21 = *((_QWORD *)v18 + 15);
        swift_bridgeObjectRetain();
        if (v21)
        {
          if (v21 == 1)
          {
            v22 = v17 + 96;
            v23 = v18 + 96;
            v24 = 209;
            goto LABEL_12;
          }
          v26 = *((_QWORD *)v18 + 16);
          *((_QWORD *)v17 + 15) = v21;
          *((_QWORD *)v17 + 16) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(v17 + 96), (uint64_t)(v18 + 96), v21);
        }
        else
        {
          v25 = *((_OWORD *)v18 + 7);
          *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
          *((_OWORD *)v17 + 7) = v25;
          *((_QWORD *)v17 + 16) = *((_QWORD *)v18 + 16);
        }
        *((_DWORD *)v17 + 34) = *((_DWORD *)v18 + 34);
        v27 = *((_OWORD *)v18 + 10);
        *((_OWORD *)v17 + 9) = *((_OWORD *)v18 + 9);
        *((_OWORD *)v17 + 10) = v27;
        *((_OWORD *)v17 + 11) = *((_OWORD *)v18 + 11);
        v17[192] = v18[192];
        v22 = v17 + 208;
        v23 = v18 + 208;
        *((_QWORD *)v17 + 25) = *((_QWORD *)v18 + 25);
        v24 = 97;
LABEL_12:
        memcpy(v22, v23, v24);
        v28 = *((_QWORD *)v18 + 39);
        if (v28)
        {
          v29 = *((_QWORD *)v18 + 40);
          v30 = *((_QWORD *)v18 + 41);
          *((_QWORD *)v17 + 39) = v28;
          *((_QWORD *)v17 + 40) = v29;
          *((_QWORD *)v17 + 41) = v30;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v17 + 312) = *(_OWORD *)(v18 + 312);
          *((_QWORD *)v17 + 41) = *((_QWORD *)v18 + 41);
        }
        v31 = *(int *)(v15 + 64);
        v32 = &v8[v31];
        v33 = &v9[v31];
        v34 = *((_QWORD *)v33 + 1);
        if (v34)
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          *((_QWORD *)v32 + 1) = v34;
          v35 = *((_QWORD *)v33 + 3);
          *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
          *((_QWORD *)v32 + 3) = v35;
          v32[32] = v33[32];
          *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
          *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v36 = *((_OWORD *)v33 + 1);
          *(_OWORD *)v32 = *(_OWORD *)v33;
          *((_OWORD *)v32 + 1) = v36;
          v37 = *((_OWORD *)v33 + 3);
          *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
          *((_OWORD *)v32 + 3) = v37;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v38 = (int *)type metadata accessor for Participant(0);
        v39 = v38[5];
        v40 = &v8[v39];
        v41 = &v9[v39];
        v42 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
        v43 = v38[6];
        v44 = &v8[v43];
        v45 = &v9[v43];
        v44[4] = v45[4];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v46 = v38[7];
        v47 = &v8[v46];
        v48 = &v9[v46];
        v49 = *(void **)v48;
        v92 = a1;
        if (*(_QWORD *)v48)
        {
          v50 = *((_QWORD *)v48 + 1);
          *(_QWORD *)v47 = v49;
          *((_QWORD *)v47 + 1) = v50;
          v47[16] = v48[16];
          v51 = *((_QWORD *)v48 + 4);
          *((_QWORD *)v47 + 3) = *((_QWORD *)v48 + 3);
          *((_QWORD *)v47 + 4) = v51;
          v52 = v49;
          swift_bridgeObjectRetain();
        }
        else
        {
          v53 = *((_OWORD *)v48 + 1);
          *(_OWORD *)v47 = *(_OWORD *)v48;
          *((_OWORD *)v47 + 1) = v53;
          *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
        }
        *(_QWORD *)&v8[v38[8]] = *(_QWORD *)&v9[v38[8]];
        v54 = v38[9];
        v55 = &v8[v54];
        v56 = &v9[v54];
        v57 = *((_QWORD *)v56 + 1);
        *v55 = *(_QWORD *)v56;
        v55[1] = v57;
        v8[v38[10]] = v9[v38[10]];
        *(_QWORD *)&v8[v38[11]] = *(_QWORD *)&v9[v38[11]];
        v58 = v38[12];
        v59 = *(void **)&v9[v58];
        *(_QWORD *)&v8[v58] = v59;
        v8[v38[13]] = v9[v38[13]];
        v60 = v38[14];
        v61 = &v8[v60];
        v62 = &v9[v60];
        v63 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v64 = v59;
        if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
        }
        v66 = type metadata accessor for Participant.CountdownInfo(0);
        v67 = *(int *)(v66 + 20);
        v68 = &v61[v67];
        v69 = &v62[v67];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v62[v67], 1, v63))
        {
          v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        }
        else
        {
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
          v71(v68, v69, v63);
          __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v63);
        }
        v61[*(int *)(v66 + 24)] = v62[*(int *)(v66 + 24)];
        v8[v38[15]] = v9[v38[15]];
        *(_QWORD *)&v8[v38[16]] = *(_QWORD *)&v9[v38[16]];
        v72 = v89[6];
        v13 = v92;
        v73 = (char *)v92 + v72;
        v74 = &v91[v72];
        swift_retain();
        v71(v73, v74, v63);
        v71((char *)v92 + v89[7], &v91[v89[7]], v63);
        *(_QWORD *)((char *)v92 + v89[8]) = *(_QWORD *)&v91[v89[8]];
        v75 = v89[9];
        v76 = (_QWORD *)((char *)v92 + v75);
        v77 = &v91[v75];
        v78 = *((_QWORD *)v77 + 1);
        *v76 = *(_QWORD *)v77;
        v76[1] = v78;
        *((_BYTE *)v92 + v89[10]) = v91[v89[10]];
        *(_QWORD *)((char *)v92 + v89[11]) = *(_QWORD *)&v91[v89[11]];
        *((_BYTE *)v92 + v89[12]) = v91[v89[12]];
        v79 = *(int *)(v90 + 20);
        v80 = (char *)v92 + v79;
        v81 = &v91[v79];
        v82 = type metadata accessor for GeometryProxy();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        v84 = *(int *)(v90 + 24);
        v85 = (_QWORD *)((char *)v92 + v84);
        v86 = &v91[v84];
        v87 = *((_QWORD *)v86 + 1);
        *v85 = *(_QWORD *)v86;
        v85[1] = v87;
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return v13;
}

uint64_t destroy for CaptionRow(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  v5 = a1 + v4[5];
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 4u:
      v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v5, v18);
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v20 = v5 + *(int *)(v19 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v20 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v20 + 96);
      if (*(_QWORD *)(v20 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v5 + *(int *)(v19 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v7 = (int *)type metadata accessor for Participant(0);
  v8 = v5 + v7[5];
  v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = (id *)(v5 + v7[7]);
  if (*v10)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = v5 + v7[14];
  v12 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v11 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v13, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v13, v12);
  swift_release();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14(a1 + v4[6], v12);
  v14(a1 + v4[7], v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1 + *(int *)(a2 + 20);
  v16 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return swift_release();
}

char *initializeWithCopy for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  size_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v86 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  v6 = v86[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Participant.State(0);
  v88 = a2;
  v89 = a1;
  v87 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      goto LABEL_16;
    case 4u:
      v11 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v13 = *(int *)(v12 + 48);
      v14 = &v7[v13];
      v15 = &v8[v13];
      *(_OWORD *)v14 = *(_OWORD *)&v8[v13];
      v16 = *(_QWORD *)&v8[v13 + 16];
      v17 = *(_QWORD *)&v8[v13 + 24];
      *((_QWORD *)v14 + 2) = v16;
      *((_QWORD *)v14 + 3) = v17;
      *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
      *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
      v14[48] = v15[48];
      *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
      *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
      v14[88] = v15[88];
      v14[89] = v15[89];
      v18 = *((_QWORD *)v15 + 15);
      swift_bridgeObjectRetain();
      if (v18)
      {
        if (v18 == 1)
        {
          v19 = v14 + 96;
          v20 = v15 + 96;
          v21 = 209;
          goto LABEL_10;
        }
        v23 = *((_QWORD *)v15 + 16);
        *((_QWORD *)v14 + 15) = v18;
        *((_QWORD *)v14 + 16) = v23;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(v14 + 96), (uint64_t)(v15 + 96), v18);
      }
      else
      {
        v22 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v22;
        *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
      }
      *((_DWORD *)v14 + 34) = *((_DWORD *)v15 + 34);
      v24 = *((_OWORD *)v15 + 10);
      *((_OWORD *)v14 + 9) = *((_OWORD *)v15 + 9);
      *((_OWORD *)v14 + 10) = v24;
      *((_OWORD *)v14 + 11) = *((_OWORD *)v15 + 11);
      v14[192] = v15[192];
      v19 = v14 + 208;
      v20 = v15 + 208;
      *((_QWORD *)v14 + 25) = *((_QWORD *)v15 + 25);
      v21 = 97;
LABEL_10:
      memcpy(v19, v20, v21);
      v25 = *((_QWORD *)v15 + 39);
      if (v25)
      {
        v26 = *((_QWORD *)v15 + 40);
        v27 = *((_QWORD *)v15 + 41);
        *((_QWORD *)v14 + 39) = v25;
        *((_QWORD *)v14 + 40) = v26;
        *((_QWORD *)v14 + 41) = v27;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v14 + 312) = *(_OWORD *)(v15 + 312);
        *((_QWORD *)v14 + 41) = *((_QWORD *)v15 + 41);
      }
      v28 = *(int *)(v12 + 64);
      v29 = &v7[v28];
      v30 = &v8[v28];
      v31 = *((_QWORD *)v30 + 1);
      if (v31)
      {
        *(_QWORD *)v29 = *(_QWORD *)v30;
        *((_QWORD *)v29 + 1) = v31;
        v32 = *((_QWORD *)v30 + 3);
        *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
        *((_QWORD *)v29 + 3) = v32;
        v29[32] = v30[32];
        *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
        *((_QWORD *)v29 + 7) = *((_QWORD *)v30 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v33 = *((_OWORD *)v30 + 1);
        *(_OWORD *)v29 = *(_OWORD *)v30;
        *((_OWORD *)v29 + 1) = v33;
        v34 = *((_OWORD *)v30 + 3);
        *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
        *((_OWORD *)v29 + 3) = v34;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v35 = (int *)type metadata accessor for Participant(0);
      v36 = v35[5];
      v37 = &v7[v36];
      v38 = &v8[v36];
      v39 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      v40 = v35[6];
      v41 = &v7[v40];
      v42 = &v8[v40];
      v41[4] = v42[4];
      *(_DWORD *)v41 = *(_DWORD *)v42;
      v43 = v35[7];
      v44 = &v7[v43];
      v45 = &v8[v43];
      v46 = *(void **)v45;
      if (*(_QWORD *)v45)
      {
        v47 = *((_QWORD *)v45 + 1);
        *(_QWORD *)v44 = v46;
        *((_QWORD *)v44 + 1) = v47;
        v44[16] = v45[16];
        v48 = *((_QWORD *)v45 + 4);
        *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
        *((_QWORD *)v44 + 4) = v48;
        v49 = v46;
        swift_bridgeObjectRetain();
      }
      else
      {
        v50 = *((_OWORD *)v45 + 1);
        *(_OWORD *)v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v50;
        *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      }
      *(_QWORD *)&v7[v35[8]] = *(_QWORD *)&v8[v35[8]];
      v51 = v35[9];
      v52 = &v7[v51];
      v53 = &v8[v51];
      v54 = *((_QWORD *)v53 + 1);
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *((_QWORD *)v52 + 1) = v54;
      v7[v35[10]] = v8[v35[10]];
      *(_QWORD *)&v7[v35[11]] = *(_QWORD *)&v8[v35[11]];
      v55 = v35[12];
      v56 = *(void **)&v8[v55];
      *(_QWORD *)&v7[v55] = v56;
      v7[v35[13]] = v8[v35[13]];
      v57 = v35[14];
      v58 = &v7[v57];
      v59 = &v8[v57];
      v60 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v56;
      if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
        __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
      }
      v63 = type metadata accessor for Participant.CountdownInfo(0);
      v64 = *(int *)(v63 + 20);
      v65 = &v58[v64];
      v66 = &v59[v64];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v59[v64], 1, v60))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
      }
      else
      {
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        v68(v65, v66, v60);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v60);
      }
      v58[*(int *)(v63 + 24)] = v59[*(int *)(v63 + 24)];
      v7[v35[15]] = v8[v35[15]];
      *(_QWORD *)&v7[v35[16]] = *(_QWORD *)&v8[v35[16]];
      v69 = v86[6];
      v70 = &v89[v69];
      v71 = &v88[v69];
      swift_retain();
      v68(v70, v71, v60);
      v68(&v89[v86[7]], &v88[v86[7]], v60);
      *(_QWORD *)&v89[v86[8]] = *(_QWORD *)&v88[v86[8]];
      v72 = v86[9];
      v73 = &v89[v72];
      v74 = &v88[v72];
      v75 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v89[v86[10]] = v88[v86[10]];
      *(_QWORD *)&v89[v86[11]] = *(_QWORD *)&v88[v86[11]];
      v89[v86[12]] = v88[v86[12]];
      v76 = *(int *)(v87 + 20);
      v77 = &v89[v76];
      v78 = &v88[v76];
      v79 = type metadata accessor for GeometryProxy();
      v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v80(v77, v78, v79);
      v81 = *(int *)(v87 + 24);
      v82 = &v89[v81];
      v83 = &v88[v81];
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      swift_retain();
      return v89;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      goto LABEL_17;
  }
}

char *assignWithCopy for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  size_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int EnumTagSinglePayload;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v91;
  char *v93;
  char *v94;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v91 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  v5 = v91[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v93 = a2;
  if (a1 != a2)
  {
    outlined destroy of Participant.State();
    v8 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
        goto LABEL_17;
      case 4u:
        v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, v7, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v12 = *(int *)(v11 + 48);
        v13 = &v6[v12];
        v14 = &v7[v12];
        *(_OWORD *)v13 = *(_OWORD *)&v7[v12];
        *((_QWORD *)v13 + 2) = *(_QWORD *)&v7[v12 + 16];
        v15 = *(_QWORD *)&v7[v12 + 24];
        *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
        *((_QWORD *)v13 + 3) = v15;
        *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
        v13[48] = v14[48];
        v16 = *(_OWORD *)(v14 + 72);
        v17 = *(_OWORD *)(v14 + 56);
        v13[88] = v14[88];
        *(_OWORD *)(v13 + 56) = v17;
        *(_OWORD *)(v13 + 72) = v16;
        v13[89] = v14[89];
        v18 = *((_QWORD *)v14 + 15);
        swift_bridgeObjectRetain();
        if (v18)
        {
          if (v18 == 1)
          {
            v19 = v13 + 96;
            v20 = v14 + 96;
            v21 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v13 + 15) = v18;
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(v13 + 96), (uint64_t)(v14 + 96), v18);
        }
        else
        {
          v22 = *((_OWORD *)v14 + 6);
          v23 = *((_OWORD *)v14 + 7);
          *((_QWORD *)v13 + 16) = *((_QWORD *)v14 + 16);
          *((_OWORD *)v13 + 6) = v22;
          *((_OWORD *)v13 + 7) = v23;
        }
        *((_DWORD *)v13 + 34) = *((_DWORD *)v14 + 34);
        *((_QWORD *)v13 + 18) = *((_QWORD *)v14 + 18);
        *((_QWORD *)v13 + 19) = *((_QWORD *)v14 + 19);
        v24 = *((_OWORD *)v14 + 10);
        v25 = *((_OWORD *)v14 + 11);
        v13[192] = v14[192];
        *((_OWORD *)v13 + 10) = v24;
        *((_OWORD *)v13 + 11) = v25;
        *((_QWORD *)v13 + 25) = *((_QWORD *)v14 + 25);
        v19 = v13 + 208;
        v20 = v14 + 208;
        v21 = 97;
LABEL_11:
        memcpy(v19, v20, v21);
        v26 = *((_QWORD *)v14 + 39);
        if (v26)
        {
          v27 = *((_QWORD *)v14 + 40);
          *((_QWORD *)v13 + 39) = v26;
          *((_QWORD *)v13 + 40) = v27;
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v28 = *(_OWORD *)(v14 + 312);
          *((_QWORD *)v13 + 41) = *((_QWORD *)v14 + 41);
          *(_OWORD *)(v13 + 312) = v28;
        }
        v29 = *(int *)(v11 + 64);
        v30 = &v6[v29];
        v31 = &v7[v29];
        if (*((_QWORD *)v31 + 1))
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
          *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
          v30[32] = v31[32];
          *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
          *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
          *((_QWORD *)v30 + 7) = *((_QWORD *)v31 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v32 = *(_OWORD *)v31;
          v33 = *((_OWORD *)v31 + 1);
          v34 = *((_OWORD *)v31 + 3);
          *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
          *((_OWORD *)v30 + 3) = v34;
          *(_OWORD *)v30 = v32;
          *((_OWORD *)v30 + 1) = v33;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  v35 = (int *)type metadata accessor for Participant(0);
  v36 = v35[5];
  v37 = &v6[v36];
  v38 = &v7[v36];
  v39 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = v35[6];
  v41 = &v6[v40];
  v42 = &v7[v40];
  *v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  v41[3] = v42[3];
  v41[4] = v42[4];
  v43 = v35[7];
  v44 = &v6[v43];
  v45 = &v7[v43];
  v46 = *(void **)&v6[v43];
  v47 = *(void **)&v7[v43];
  v94 = a1;
  if (v46)
  {
    if (v47)
    {
      *(_QWORD *)v44 = v47;
      v48 = v47;

      v49 = *((_QWORD *)v45 + 1);
      v44[16] = v45[16];
      *((_QWORD *)v44 + 1) = v49;
      *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v44);
      v52 = *((_QWORD *)v45 + 4);
      v53 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v53;
      *((_QWORD *)v44 + 4) = v52;
    }
  }
  else if (v47)
  {
    *(_QWORD *)v44 = v47;
    v50 = *((_QWORD *)v45 + 1);
    v44[16] = v45[16];
    *((_QWORD *)v44 + 1) = v50;
    *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    v51 = v47;
    swift_bridgeObjectRetain();
  }
  else
  {
    v54 = *(_OWORD *)v45;
    v55 = *((_OWORD *)v45 + 1);
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    *(_OWORD *)v44 = v54;
    *((_OWORD *)v44 + 1) = v55;
  }
  *(_QWORD *)&v6[v35[8]] = *(_QWORD *)&v7[v35[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v35[9];
  v57 = &v6[v56];
  v58 = &v7[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v35[10]] = v7[v35[10]];
  *(_QWORD *)&v6[v35[11]] = *(_QWORD *)&v7[v35[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = v35[12];
  v60 = *(void **)&v6[v59];
  v61 = *(void **)&v7[v59];
  *(_QWORD *)&v6[v59] = v61;
  v62 = v61;

  v6[v35[13]] = v7[v35[13]];
  v63 = v35[14];
  v64 = &v6[v63];
  v65 = &v7[v63];
  v66 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v66);
  v68 = __swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66);
  if (EnumTagSinglePayload)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v69 = *(_QWORD *)(v66 - 8);
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v66);
LABEL_30:
    v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v64, v65, v66);
LABEL_31:
  v71 = type metadata accessor for Participant.CountdownInfo(0);
  v72 = *(int *)(v71 + 20);
  v73 = &v64[v72];
  v74 = &v65[v72];
  v75 = __swift_getEnumTagSinglePayload((uint64_t)&v64[v72], 1, v66);
  v76 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v66);
  if (!v75)
  {
    v77 = *(_QWORD *)(v66 - 8);
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v73, v74, v66);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v66);
    goto LABEL_36;
  }
  if (v76)
  {
LABEL_36:
    v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v73, v74, v66);
  __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v66);
LABEL_37:
  v64[*(int *)(v71 + 24)] = v65[*(int *)(v71 + 24)];
  v6[v35[15]] = v7[v35[15]];
  *(_QWORD *)&v6[v35[16]] = *(_QWORD *)&v7[v35[16]];
  swift_retain();
  swift_release();
  v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24);
  v79(&v94[v91[6]], &v93[v91[6]], v66);
  v79(&v94[v91[7]], &v93[v91[7]], v66);
  *(_QWORD *)&v94[v91[8]] = *(_QWORD *)&v93[v91[8]];
  swift_retain();
  swift_release();
  v80 = v91[9];
  v81 = &v94[v80];
  v82 = &v93[v80];
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94[v91[10]] = v93[v91[10]];
  *(_QWORD *)&v94[v91[11]] = *(_QWORD *)&v93[v91[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94[v91[12]] = v93[v91[12]];
  v83 = *(int *)(a3 + 20);
  v84 = &v94[v83];
  v85 = &v93[v83];
  v86 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
  v87 = *(int *)(a3 + 24);
  v88 = &v94[v87];
  v89 = &v93[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
  swift_retain();
  swift_release();
  return v94;
}

char *initializeWithTake for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v45;
  char *v47;
  char *v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v45 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  v5 = v45[5];
  v47 = a2;
  v48 = a1;
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v16 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v6, v7, v16);
      goto LABEL_5;
    case 4u:
      v9 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v6[*(int *)(v10 + 48)], &v7[*(int *)(v10 + 48)], 0x150uLL);
      v11 = *(int *)(v10 + 64);
      v12 = &v6[v11];
      v13 = &v7[v11];
      v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      v15 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v15;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      break;
  }
  v17 = (int *)type metadata accessor for Participant(0);
  v18 = v17[5];
  v19 = &v6[v18];
  v20 = &v7[v18];
  v21 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = v17[6];
  v23 = &v6[v22];
  v24 = &v7[v22];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  v25 = v17[7];
  v26 = &v6[v25];
  v27 = &v7[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  *(_QWORD *)&v6[v17[8]] = *(_QWORD *)&v7[v17[8]];
  *(_OWORD *)&v6[v17[9]] = *(_OWORD *)&v7[v17[9]];
  v6[v17[10]] = v7[v17[10]];
  *(_QWORD *)&v6[v17[11]] = *(_QWORD *)&v7[v17[11]];
  *(_QWORD *)&v6[v17[12]] = *(_QWORD *)&v7[v17[12]];
  v6[v17[13]] = v7[v17[13]];
  v29 = v17[14];
  v30 = &v6[v29];
  v31 = &v7[v29];
  v32 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v34 = type metadata accessor for Participant.CountdownInfo(0);
  v35 = *(int *)(v34 + 20);
  v36 = &v30[v35];
  v37 = &v31[v35];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v31[v35], 1, v32))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
  }
  else
  {
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32);
    v39(v36, v37, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v32);
  }
  v30[*(int *)(v34 + 24)] = v31[*(int *)(v34 + 24)];
  v6[v17[15]] = v7[v17[15]];
  *(_QWORD *)&v6[v17[16]] = *(_QWORD *)&v7[v17[16]];
  v39(&v48[v45[6]], &v47[v45[6]], v32);
  v39(&v48[v45[7]], &v47[v45[7]], v32);
  *(_QWORD *)&v48[v45[8]] = *(_QWORD *)&v47[v45[8]];
  *(_OWORD *)&v48[v45[9]] = *(_OWORD *)&v47[v45[9]];
  v48[v45[10]] = v47[v45[10]];
  *(_QWORD *)&v48[v45[11]] = *(_QWORD *)&v47[v45[11]];
  v48[v45[12]] = v47[v45[12]];
  v40 = *(int *)(a3 + 20);
  v41 = &v48[v40];
  v42 = &v47[v40];
  v43 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  *(_OWORD *)&v48[*(int *)(a3 + 24)] = *(_OWORD *)&v47[*(int *)(a3 + 24)];
  return v48;
}

char *assignWithTake for CaptionRow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int EnumTagSinglePayload;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v68;
  int *v69;
  char *v71;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v69 = (int *)type metadata accessor for CaptionSectioner.Caption(0);
  v5 = v69[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v71 = a2;
  if (a1 != a2)
  {
    outlined destroy of Participant.State();
    v8 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v16 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v6, v7, v16);
        goto LABEL_5;
      case 4u:
        v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v6[*(int *)(v10 + 48)], &v7[*(int *)(v10 + 48)], 0x150uLL);
        v11 = *(int *)(v10 + 64);
        v12 = &v6[v11];
        v13 = &v7[v11];
        v14 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v14;
        v15 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v15;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        break;
    }
  }
  v17 = (int *)type metadata accessor for Participant(0);
  v18 = v17[5];
  v19 = &v6[v18];
  v20 = &v7[v18];
  v21 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = v17[6];
  v23 = &v6[v22];
  v24 = &v7[v22];
  *v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  v23[3] = v24[3];
  v23[4] = v24[4];
  v25 = v17[7];
  v26 = &v6[v25];
  v27 = &v7[v25];
  v28 = *(void **)&v6[v25];
  if (v28)
  {
    if (*(_QWORD *)v27)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;

      *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
      v26[16] = v27[16];
      v29 = *((_QWORD *)v27 + 4);
      *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
      *((_QWORD *)v26 + 4) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v26);
  }
  v30 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v30;
  *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
LABEL_11:
  *(_QWORD *)&v6[v17[8]] = *(_QWORD *)&v7[v17[8]];
  swift_bridgeObjectRelease();
  v31 = v17[9];
  v32 = &v6[v31];
  v33 = &v7[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v6[v17[10]] = v7[v17[10]];
  *(_QWORD *)&v6[v17[11]] = *(_QWORD *)&v7[v17[11]];
  swift_bridgeObjectRelease();
  v36 = v17[12];
  v37 = *(void **)&v6[v36];
  *(_QWORD *)&v6[v36] = *(_QWORD *)&v7[v36];

  v6[v17[13]] = v7[v17[13]];
  v38 = v17[14];
  v39 = &v6[v38];
  v40 = &v7[v38];
  v41 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v41);
  v43 = __swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41);
  if (EnumTagSinglePayload)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v44 = *(_QWORD *)(v41 - 8);
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v41);
LABEL_16:
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v39, v40, v41);
LABEL_17:
  v46 = type metadata accessor for Participant.CountdownInfo(0);
  v47 = *(int *)(v46 + 20);
  v48 = &v39[v47];
  v68 = v40;
  v49 = &v40[v47];
  v50 = __swift_getEnumTagSinglePayload((uint64_t)&v39[v47], 1, v41);
  v51 = __swift_getEnumTagSinglePayload((uint64_t)v49, 1, v41);
  if (!v50)
  {
    v52 = *(_QWORD *)(v41 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v48, v49, v41);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v41);
    goto LABEL_22;
  }
  if (v51)
  {
LABEL_22:
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v48, v49, v41);
  __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v41);
LABEL_23:
  v39[*(int *)(v46 + 24)] = v68[*(int *)(v46 + 24)];
  v6[v17[15]] = v7[v17[15]];
  *(_QWORD *)&v6[v17[16]] = *(_QWORD *)&v7[v17[16]];
  swift_release();
  v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40);
  v54(&a1[v69[6]], &v71[v69[6]], v41);
  v54(&a1[v69[7]], &v71[v69[7]], v41);
  *(_QWORD *)&a1[v69[8]] = *(_QWORD *)&v71[v69[8]];
  swift_release();
  v55 = v69[9];
  v56 = &a1[v55];
  v57 = (uint64_t *)&v71[v55];
  v59 = *v57;
  v58 = v57[1];
  *(_QWORD *)v56 = v59;
  *((_QWORD *)v56 + 1) = v58;
  swift_bridgeObjectRelease();
  a1[v69[10]] = v71[v69[10]];
  *(_QWORD *)&a1[v69[11]] = *(_QWORD *)&v71[v69[11]];
  swift_bridgeObjectRelease();
  a1[v69[12]] = v71[v69[12]];
  v60 = *(int *)(a3 + 20);
  v61 = &a1[v60];
  v62 = &v71[v60];
  v63 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  v64 = *(int *)(a3 + 24);
  v65 = &a1[v64];
  v66 = &v71[v64];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionRow()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5FF7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_46_43();
  OUTLINED_FUNCTION_44_6();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_32_61();
    OUTLINED_FUNCTION_44_6();
    if (!v9)
    {
      OUTLINED_FUNCTION_18();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 20);
  }
  OUTLINED_FUNCTION_1_16(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for CaptionRow()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5FF868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_46_43();
  OUTLINED_FUNCTION_45_7();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    OUTLINED_FUNCTION_32_61();
    OUTLINED_FUNCTION_45_7();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      OUTLINED_FUNCTION_18();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 20);
  }
  OUTLINED_FUNCTION_0_29(v9, a2, a2, v8);
}

uint64_t type metadata completion function for CaptionRow()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for CaptionSectioner.Caption(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GeometryProxy();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CaptionHeader(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(a3 + 40);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CaptionHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = type metadata accessor for RedactionReasons();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 40);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for RedactionReasons();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 40);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v6, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 40);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CaptionHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 40);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1 + v7, (uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptionHeader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD5FFEC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_220();
  if (v2)
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(v0 + 8));
    OUTLINED_FUNCTION_18();
  }
  else
  {
    OUTLINED_FUNCTION_56_45();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    v3 = OUTLINED_FUNCTION_295(*(int *)(v1 + 40));
    OUTLINED_FUNCTION_1_16(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for CaptionHeader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD5FFF20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_13();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    v5 = OUTLINED_FUNCTION_146_0(*(int *)(v4 + 40));
    OUTLINED_FUNCTION_0_29(v5, v6, v7, v8);
  }
}

void type metadata completion function for CaptionHeader()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<RedactionReasons>.Content, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for GroupIconView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void initializeBufferWithCopyOfBuffer for GroupIconView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for GroupIconView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for GroupIconView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

void *type metadata accessor for GroupIconView()
{
  return &unk_1E76451C8;
}

unint64_t initializeBufferWithCopyOfBuffer for TranscriptParticipantBadge(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v83 = a3;
    v84 = a2;
    v9 = *(int *)(a3 + 20);
    v10 = (_BYTE *)(a1 + v9);
    v11 = (_BYTE *)(a2 + v9);
    v12 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v13 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_18;
      case 4u:
        v16 = type metadata accessor for Date();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v18 = *(int *)(v17 + 48);
        v19 = &v10[v18];
        v20 = &v11[v18];
        *(_OWORD *)v19 = *(_OWORD *)&v11[v18];
        v21 = *(_QWORD *)&v11[v18 + 16];
        v22 = *(_QWORD *)&v11[v18 + 24];
        *((_QWORD *)v19 + 2) = v21;
        *((_QWORD *)v19 + 3) = v22;
        *((_WORD *)v19 + 16) = *((_WORD *)v20 + 16);
        *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
        v19[48] = v20[48];
        *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
        *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
        v19[88] = v20[88];
        v19[89] = v20[89];
        v23 = *((_QWORD *)v20 + 15);
        swift_bridgeObjectRetain();
        if (v23)
        {
          if (v23 == 1)
          {
            v24 = v19 + 96;
            v25 = v20 + 96;
            v26 = 209;
            goto LABEL_12;
          }
          v28 = *((_QWORD *)v20 + 16);
          *((_QWORD *)v19 + 15) = v23;
          *((_QWORD *)v19 + 16) = v28;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v19 + 96), (uint64_t)(v20 + 96), v23);
        }
        else
        {
          v27 = *((_OWORD *)v20 + 7);
          *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
          *((_OWORD *)v19 + 7) = v27;
          *((_QWORD *)v19 + 16) = *((_QWORD *)v20 + 16);
        }
        *((_DWORD *)v19 + 34) = *((_DWORD *)v20 + 34);
        v29 = *((_OWORD *)v20 + 10);
        *((_OWORD *)v19 + 9) = *((_OWORD *)v20 + 9);
        *((_OWORD *)v19 + 10) = v29;
        *((_OWORD *)v19 + 11) = *((_OWORD *)v20 + 11);
        v19[192] = v20[192];
        v24 = v19 + 208;
        v25 = v20 + 208;
        *((_QWORD *)v19 + 25) = *((_QWORD *)v20 + 25);
        v26 = 97;
LABEL_12:
        memcpy(v24, v25, v26);
        v30 = *((_QWORD *)v20 + 39);
        if (v30)
        {
          v31 = *((_QWORD *)v20 + 40);
          v32 = *((_QWORD *)v20 + 41);
          *((_QWORD *)v19 + 39) = v30;
          *((_QWORD *)v19 + 40) = v31;
          *((_QWORD *)v19 + 41) = v32;
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v19 + 312) = *(_OWORD *)(v20 + 312);
          *((_QWORD *)v19 + 41) = *((_QWORD *)v20 + 41);
        }
        v33 = *(int *)(v17 + 64);
        v34 = &v10[v33];
        v35 = &v11[v33];
        v36 = *((_QWORD *)v35 + 1);
        if (v36)
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *((_QWORD *)v34 + 1) = v36;
          v37 = *((_QWORD *)v35 + 3);
          *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
          *((_QWORD *)v34 + 3) = v37;
          v34[32] = v35[32];
          *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
          *((_QWORD *)v34 + 7) = *((_QWORD *)v35 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v38 = *((_OWORD *)v35 + 1);
          *(_OWORD *)v34 = *(_OWORD *)v35;
          *((_OWORD *)v34 + 1) = v38;
          v39 = *((_OWORD *)v35 + 3);
          *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 3) = v39;
        }
LABEL_18:
        swift_storeEnumTagMultiPayload();
LABEL_19:
        v40 = (int *)type metadata accessor for Participant(0);
        v41 = v40[5];
        v42 = &v10[v41];
        v43 = &v11[v41];
        v44 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        v45 = v40[6];
        v46 = &v10[v45];
        v47 = &v11[v45];
        v46[4] = v47[4];
        *(_DWORD *)v46 = *(_DWORD *)v47;
        v48 = v40[7];
        v49 = &v10[v48];
        v50 = &v11[v48];
        v51 = *(void **)v50;
        v82 = a1;
        if (*(_QWORD *)v50)
        {
          v52 = *((_QWORD *)v50 + 1);
          *(_QWORD *)v49 = v51;
          *((_QWORD *)v49 + 1) = v52;
          v49[16] = v50[16];
          v53 = *((_QWORD *)v50 + 4);
          *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
          *((_QWORD *)v49 + 4) = v53;
          v54 = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          v55 = *((_OWORD *)v50 + 1);
          *(_OWORD *)v49 = *(_OWORD *)v50;
          *((_OWORD *)v49 + 1) = v55;
          *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
        }
        *(_QWORD *)&v10[v40[8]] = *(_QWORD *)&v11[v40[8]];
        v56 = v40[9];
        v57 = &v10[v56];
        v58 = &v11[v56];
        v59 = v58[1];
        *v57 = *v58;
        v57[1] = v59;
        v10[v40[10]] = v11[v40[10]];
        *(_QWORD *)&v10[v40[11]] = *(_QWORD *)&v11[v40[11]];
        v60 = v40[12];
        v61 = *(void **)&v11[v60];
        *(_QWORD *)&v10[v60] = v61;
        v10[v40[13]] = v11[v40[13]];
        v62 = v40[14];
        v63 = &v10[v62];
        v64 = &v11[v62];
        v65 = type metadata accessor for Date();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66 = v61;
        if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
        {
          v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
        }
        v15 = v82;
        v68 = type metadata accessor for Participant.CountdownInfo(0);
        v69 = *(int *)(v68 + 20);
        v70 = &v63[v69];
        v71 = &v64[v69];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v64[v69], 1, v65))
        {
          v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v70, v71, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v65);
        }
        v63[*(int *)(v68 + 24)] = v64[*(int *)(v68 + 24)];
        v10[v40[15]] = v11[v40[15]];
        *(_QWORD *)&v10[v40[16]] = *(_QWORD *)&v11[v40[16]];
        v73 = *(int *)(v83 + 24);
        v74 = *(int *)(v83 + 28);
        v75 = (_QWORD *)(v82 + v73);
        v76 = (_QWORD *)(v84 + v73);
        v77 = v76[1];
        *v75 = *v76;
        v75[1] = v77;
        v78 = (_QWORD *)(v82 + v74);
        v79 = (_QWORD *)(v84 + v74);
        v80 = v79[1];
        *v78 = *v79;
        v78[1] = v80;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_19;
    }
  }
  swift_retain();
  return v15;
}

uint64_t destroy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v5 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 4u:
      v14 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v4, v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v16 = v4 + *(int *)(v15 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v16 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v16 + 96);
      if (*(_QWORD *)(v16 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v4 + *(int *)(v15 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v6 = (int *)type metadata accessor for Participant(0);
  v7 = v4 + v6[5];
  v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (id *)(v4 + v6[7]);
  if (*v9)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v4 + v6[14];
  v11 = type metadata accessor for Date();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(type metadata accessor for Participant.CountdownInfo(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v12, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  size_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v79 = a3;
  v80 = a2;
  v8 = *(int *)(a3 + 20);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  v11 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v12 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_16;
    case 4u:
      v13 = type metadata accessor for Date();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v15 = *(int *)(v14 + 48);
      v16 = &v9[v15];
      v17 = &v10[v15];
      *(_OWORD *)v16 = *(_OWORD *)&v10[v15];
      v18 = *(_QWORD *)&v10[v15 + 16];
      v19 = *(_QWORD *)&v10[v15 + 24];
      *((_QWORD *)v16 + 2) = v18;
      *((_QWORD *)v16 + 3) = v19;
      *((_WORD *)v16 + 16) = *((_WORD *)v17 + 16);
      *((_QWORD *)v16 + 5) = *((_QWORD *)v17 + 5);
      v16[48] = v17[48];
      *(_OWORD *)(v16 + 56) = *(_OWORD *)(v17 + 56);
      *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
      v16[88] = v17[88];
      v16[89] = v17[89];
      v20 = *((_QWORD *)v17 + 15);
      swift_bridgeObjectRetain();
      if (v20)
      {
        if (v20 == 1)
        {
          v21 = v16 + 96;
          v22 = v17 + 96;
          v23 = 209;
          goto LABEL_10;
        }
        v25 = *((_QWORD *)v17 + 16);
        *((_QWORD *)v16 + 15) = v20;
        *((_QWORD *)v16 + 16) = v25;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(v16 + 96), (uint64_t)(v17 + 96), v20);
      }
      else
      {
        v24 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v24;
        *((_QWORD *)v16 + 16) = *((_QWORD *)v17 + 16);
      }
      *((_DWORD *)v16 + 34) = *((_DWORD *)v17 + 34);
      v26 = *((_OWORD *)v17 + 10);
      *((_OWORD *)v16 + 9) = *((_OWORD *)v17 + 9);
      *((_OWORD *)v16 + 10) = v26;
      *((_OWORD *)v16 + 11) = *((_OWORD *)v17 + 11);
      v16[192] = v17[192];
      v21 = v16 + 208;
      v22 = v17 + 208;
      *((_QWORD *)v16 + 25) = *((_QWORD *)v17 + 25);
      v23 = 97;
LABEL_10:
      memcpy(v21, v22, v23);
      v27 = *((_QWORD *)v17 + 39);
      if (v27)
      {
        v28 = *((_QWORD *)v17 + 40);
        v29 = *((_QWORD *)v17 + 41);
        *((_QWORD *)v16 + 39) = v27;
        *((_QWORD *)v16 + 40) = v28;
        *((_QWORD *)v16 + 41) = v29;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v16 + 312) = *(_OWORD *)(v17 + 312);
        *((_QWORD *)v16 + 41) = *((_QWORD *)v17 + 41);
      }
      v30 = *(int *)(v14 + 64);
      v31 = &v9[v30];
      v32 = &v10[v30];
      v33 = *((_QWORD *)v32 + 1);
      if (v33)
      {
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = v33;
        v34 = *((_QWORD *)v32 + 3);
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        *((_QWORD *)v31 + 3) = v34;
        v31[32] = v32[32];
        *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
        *((_QWORD *)v31 + 7) = *((_QWORD *)v32 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v35 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v35;
        v36 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v36;
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
LABEL_17:
      v37 = (int *)type metadata accessor for Participant(0);
      v38 = v37[5];
      v39 = &v9[v38];
      v40 = &v10[v38];
      v41 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      v42 = v37[6];
      v43 = &v9[v42];
      v44 = &v10[v42];
      v43[4] = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v45 = v37[7];
      v46 = &v9[v45];
      v47 = &v10[v45];
      v48 = *(void **)v47;
      v81 = a1;
      if (*(_QWORD *)v47)
      {
        v49 = *((_QWORD *)v47 + 1);
        *(_QWORD *)v46 = v48;
        *((_QWORD *)v46 + 1) = v49;
        v46[16] = v47[16];
        v50 = *((_QWORD *)v47 + 4);
        *((_QWORD *)v46 + 3) = *((_QWORD *)v47 + 3);
        *((_QWORD *)v46 + 4) = v50;
        v51 = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        v52 = *((_OWORD *)v47 + 1);
        *(_OWORD *)v46 = *(_OWORD *)v47;
        *((_OWORD *)v46 + 1) = v52;
        *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
      }
      *(_QWORD *)&v9[v37[8]] = *(_QWORD *)&v10[v37[8]];
      v53 = v37[9];
      v54 = &v9[v53];
      v55 = &v10[v53];
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v9[v37[10]] = v10[v37[10]];
      *(_QWORD *)&v9[v37[11]] = *(_QWORD *)&v10[v37[11]];
      v57 = v37[12];
      v58 = *(void **)&v10[v57];
      *(_QWORD *)&v9[v57] = v58;
      v9[v37[13]] = v10[v37[13]];
      v59 = v37[14];
      v60 = &v9[v59];
      v61 = &v10[v59];
      v62 = type metadata accessor for Date();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63 = v58;
      if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
      }
      v65 = type metadata accessor for Participant.CountdownInfo(0);
      v66 = *(int *)(v65 + 20);
      v67 = &v60[v66];
      v68 = &v61[v66];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v61[v66], 1, v62))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v67, v68, v62);
        __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v62);
      }
      v60[*(int *)(v65 + 24)] = v61[*(int *)(v65 + 24)];
      v9[v37[15]] = v10[v37[15]];
      *(_QWORD *)&v9[v37[16]] = *(_QWORD *)&v10[v37[16]];
      v70 = *(int *)(v79 + 24);
      v71 = *(int *)(v79 + 28);
      v72 = (_QWORD *)(v81 + v70);
      v73 = (_QWORD *)(v80 + v70);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      v75 = (_QWORD *)(v81 + v71);
      v76 = (_QWORD *)(v80 + v71);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      return v81;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_17;
  }
}

uint64_t assignWithCopy for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  size_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  int EnumTagSinglePayload;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  v91 = a3;
  v92 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  if (a1 != a2)
  {
    outlined destroy of Participant.State();
    v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
        goto LABEL_17;
      case 4u:
        v15 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v17 = *(int *)(v16 + 48);
        v18 = &v11[v17];
        v19 = &v12[v17];
        *(_OWORD *)v18 = *(_OWORD *)&v12[v17];
        *((_QWORD *)v18 + 2) = *(_QWORD *)&v12[v17 + 16];
        v20 = *(_QWORD *)&v12[v17 + 24];
        *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
        *((_QWORD *)v18 + 3) = v20;
        *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
        v18[48] = v19[48];
        v21 = *(_OWORD *)(v19 + 72);
        v22 = *(_OWORD *)(v19 + 56);
        v18[88] = v19[88];
        *(_OWORD *)(v18 + 56) = v22;
        *(_OWORD *)(v18 + 72) = v21;
        v18[89] = v19[89];
        v23 = *((_QWORD *)v19 + 15);
        swift_bridgeObjectRetain();
        if (v23)
        {
          if (v23 == 1)
          {
            v24 = v18 + 96;
            v25 = v19 + 96;
            v26 = 209;
            goto LABEL_11;
          }
          *((_QWORD *)v18 + 15) = v23;
          *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(v18 + 96), (uint64_t)(v19 + 96), v23);
        }
        else
        {
          v27 = *((_OWORD *)v19 + 6);
          v28 = *((_OWORD *)v19 + 7);
          *((_QWORD *)v18 + 16) = *((_QWORD *)v19 + 16);
          *((_OWORD *)v18 + 6) = v27;
          *((_OWORD *)v18 + 7) = v28;
        }
        *((_DWORD *)v18 + 34) = *((_DWORD *)v19 + 34);
        *((_QWORD *)v18 + 18) = *((_QWORD *)v19 + 18);
        *((_QWORD *)v18 + 19) = *((_QWORD *)v19 + 19);
        v29 = *((_OWORD *)v19 + 10);
        v30 = *((_OWORD *)v19 + 11);
        v18[192] = v19[192];
        *((_OWORD *)v18 + 10) = v29;
        *((_OWORD *)v18 + 11) = v30;
        *((_QWORD *)v18 + 25) = *((_QWORD *)v19 + 25);
        v24 = v18 + 208;
        v25 = v19 + 208;
        v26 = 97;
LABEL_11:
        memcpy(v24, v25, v26);
        v31 = *((_QWORD *)v19 + 39);
        if (v31)
        {
          v32 = *((_QWORD *)v19 + 40);
          *((_QWORD *)v18 + 39) = v31;
          *((_QWORD *)v18 + 40) = v32;
          *((_QWORD *)v18 + 41) = *((_QWORD *)v19 + 41);
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v33 = *(_OWORD *)(v19 + 312);
          *((_QWORD *)v18 + 41) = *((_QWORD *)v19 + 41);
          *(_OWORD *)(v18 + 312) = v33;
        }
        v34 = *(int *)(v16 + 64);
        v35 = &v11[v34];
        v36 = &v12[v34];
        if (*((_QWORD *)v36 + 1))
        {
          *(_QWORD *)v35 = *(_QWORD *)v36;
          *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
          *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
          *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
          v35[32] = v36[32];
          *((_QWORD *)v35 + 5) = *((_QWORD *)v36 + 5);
          *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
          *((_QWORD *)v35 + 7) = *((_QWORD *)v36 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v37 = *(_OWORD *)v36;
          v38 = *((_OWORD *)v36 + 1);
          v39 = *((_OWORD *)v36 + 3);
          *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
          *((_OWORD *)v35 + 3) = v39;
          *(_OWORD *)v35 = v37;
          *((_OWORD *)v35 + 1) = v38;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
  }
  v40 = (int *)type metadata accessor for Participant(0);
  v41 = v40[5];
  v42 = &v11[v41];
  v43 = &v12[v41];
  v44 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = v40[6];
  v46 = &v11[v45];
  v47 = &v12[v45];
  *v46 = *v47;
  v46[1] = v47[1];
  v46[2] = v47[2];
  v46[3] = v47[3];
  v46[4] = v47[4];
  v48 = v40[7];
  v49 = &v11[v48];
  v50 = &v12[v48];
  v51 = *(void **)&v11[v48];
  v52 = *(void **)&v12[v48];
  if (v51)
  {
    if (v52)
    {
      *(_QWORD *)v49 = v52;
      v53 = v52;

      v54 = *((_QWORD *)v50 + 1);
      v49[16] = v50[16];
      *((_QWORD *)v49 + 1) = v54;
      *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
      *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of Participant.RemoteIdentifiers((id *)v49);
      v57 = *((_QWORD *)v50 + 4);
      v58 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v58;
      *((_QWORD *)v49 + 4) = v57;
    }
  }
  else if (v52)
  {
    *(_QWORD *)v49 = v52;
    v55 = *((_QWORD *)v50 + 1);
    v49[16] = v50[16];
    *((_QWORD *)v49 + 1) = v55;
    *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    v56 = v52;
    swift_bridgeObjectRetain();
  }
  else
  {
    v59 = *(_OWORD *)v50;
    v60 = *((_OWORD *)v50 + 1);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    *(_OWORD *)v49 = v59;
    *((_OWORD *)v49 + 1) = v60;
  }
  *(_QWORD *)&v11[v40[8]] = *(_QWORD *)&v12[v40[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = v40[9];
  v62 = &v11[v61];
  v63 = &v12[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[v40[10]] = v12[v40[10]];
  *(_QWORD *)&v11[v40[11]] = *(_QWORD *)&v12[v40[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = v40[12];
  v65 = *(void **)&v11[v64];
  v66 = *(void **)&v12[v64];
  *(_QWORD *)&v11[v64] = v66;
  v67 = v66;

  v11[v40[13]] = v12[v40[13]];
  v68 = v40[14];
  v69 = &v11[v68];
  v70 = &v12[v68];
  v71 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v69, 1, v71);
  v73 = __swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71);
  v93 = a1;
  if (EnumTagSinglePayload)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v74 = *(_QWORD *)(v71 - 8);
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v71);
LABEL_30:
    v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v69, v70, v71);
LABEL_31:
  v76 = type metadata accessor for Participant.CountdownInfo(0);
  v77 = *(int *)(v76 + 20);
  v78 = &v69[v77];
  v79 = &v70[v77];
  v80 = __swift_getEnumTagSinglePayload((uint64_t)&v69[v77], 1, v71);
  v81 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v71);
  if (!v80)
  {
    v82 = *(_QWORD *)(v71 - 8);
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v78, v79, v71);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v78, v71);
    goto LABEL_36;
  }
  if (v81)
  {
LABEL_36:
    v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v78, v79, v71);
  __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v71);
LABEL_37:
  v69[*(int *)(v76 + 24)] = v70[*(int *)(v76 + 24)];
  v11[v40[15]] = v12[v40[15]];
  *(_QWORD *)&v11[v40[16]] = *(_QWORD *)&v12[v40[16]];
  swift_retain();
  swift_release();
  v84 = *(int *)(v91 + 24);
  v85 = v93 + v84;
  v86 = v92 + v84;
  *(_QWORD *)(v93 + v84) = *(_QWORD *)(v92 + v84);
  swift_retain();
  swift_release();
  *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
  swift_retain();
  swift_release();
  v87 = *(int *)(v91 + 28);
  v88 = v93 + v87;
  v89 = v92 + v87;
  *(_QWORD *)(v93 + v87) = *(_QWORD *)(v92 + v87);
  swift_retain();
  swift_release();
  *(_QWORD *)(v88 + 8) = *(_QWORD *)(v89 + 8);
  swift_retain();
  swift_release();
  return v93;
}

uint64_t initializeWithTake for TranscriptParticipantBadge(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = a3[5];
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v5, v6, v15);
      goto LABEL_5;
    case 4u:
      v8 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      memcpy(&v5[*(int *)(v9 + 48)], &v6[*(int *)(v9 + 48)], 0x150uLL);
      v10 = *(int *)(v9 + 64);
      v11 = &v5[v10];
      v12 = &v6[v10];
      v13 = *((_OWORD *)v12 + 1);
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v13;
      v14 = *((_OWORD *)v12 + 3);
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 3) = v14;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  v16 = (int *)type metadata accessor for Participant(0);
  v17 = v16[5];
  v18 = &v5[v17];
  v19 = &v6[v17];
  v20 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = v16[6];
  v22 = &v5[v21];
  v23 = &v6[v21];
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  v24 = v16[7];
  v25 = &v5[v24];
  v26 = &v6[v24];
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  *(_QWORD *)&v5[v16[8]] = *(_QWORD *)&v6[v16[8]];
  *(_OWORD *)&v5[v16[9]] = *(_OWORD *)&v6[v16[9]];
  v5[v16[10]] = v6[v16[10]];
  *(_QWORD *)&v5[v16[11]] = *(_QWORD *)&v6[v16[11]];
  *(_QWORD *)&v5[v16[12]] = *(_QWORD *)&v6[v16[12]];
  v5[v16[13]] = v6[v16[13]];
  v28 = v16[14];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v31 = type metadata accessor for Date();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  v33 = type metadata accessor for Participant.CountdownInfo(0);
  v34 = *(int *)(v33 + 20);
  v35 = &v29[v34];
  v36 = &v30[v34];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v30[v34], 1, v31))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v35, v36, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
  }
  v29[*(int *)(v33 + 24)] = v30[*(int *)(v33 + 24)];
  v5[v16[15]] = v6[v16[15]];
  *(_QWORD *)&v5[v16[16]] = *(_QWORD *)&v6[v16[16]];
  v38 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  return a1;
}

uint64_t assignWithTake for TranscriptParticipantBadge(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  int EnumTagSinglePayload;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  v66 = a3;
  v67 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)a2 + v10;
  v68 = a1;
  if ((uint64_t *)a1 != a2)
  {
    outlined destroy of Participant.State();
    v13 = type metadata accessor for Participant.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 5u:
        v21 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v11, v12, v21);
        goto LABEL_5;
      case 4u:
        v14 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        memcpy(&v11[*(int *)(v15 + 48)], &v12[*(int *)(v15 + 48)], 0x150uLL);
        v16 = *(int *)(v15 + 64);
        v17 = &v11[v16];
        v18 = &v12[v16];
        v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v19;
        v20 = *((_OWORD *)v18 + 3);
        *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 3) = v20;
LABEL_5:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
  }
  v22 = (int *)type metadata accessor for Participant(0);
  v23 = v22[5];
  v24 = &v11[v23];
  v25 = &v12[v23];
  v26 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = v22[6];
  v28 = &v11[v27];
  v29 = &v12[v27];
  *v28 = *v29;
  v28[1] = v29[1];
  v28[2] = v29[2];
  v28[3] = v29[3];
  v28[4] = v29[4];
  v30 = v22[7];
  v31 = &v11[v30];
  v32 = &v12[v30];
  v33 = *(void **)&v11[v30];
  if (v33)
  {
    if (*(_QWORD *)v32)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;

      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      v31[16] = v32[16];
      v34 = *((_QWORD *)v32 + 4);
      *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
      *((_QWORD *)v31 + 4) = v34;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    outlined destroy of Participant.RemoteIdentifiers((id *)v31);
  }
  v35 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v35;
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
LABEL_11:
  *(_QWORD *)&v11[v22[8]] = *(_QWORD *)&v12[v22[8]];
  swift_bridgeObjectRelease();
  v36 = v22[9];
  v37 = &v11[v36];
  v38 = &v12[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v11[v22[10]] = v12[v22[10]];
  *(_QWORD *)&v11[v22[11]] = *(_QWORD *)&v12[v22[11]];
  swift_bridgeObjectRelease();
  v41 = v22[12];
  v42 = *(void **)&v11[v41];
  *(_QWORD *)&v11[v41] = *(_QWORD *)&v12[v41];

  v11[v22[13]] = v12[v22[13]];
  v43 = v22[14];
  v44 = &v11[v43];
  v45 = &v12[v43];
  v46 = type metadata accessor for Date();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v46);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46);
  if (EnumTagSinglePayload)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v49 = *(_QWORD *)(v46 - 8);
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v46);
LABEL_16:
    v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v44, v45, v46);
LABEL_17:
  v51 = type metadata accessor for Participant.CountdownInfo(0);
  v52 = *(int *)(v51 + 20);
  v53 = &v44[v52];
  v54 = &v45[v52];
  v55 = __swift_getEnumTagSinglePayload((uint64_t)&v44[v52], 1, v46);
  v56 = __swift_getEnumTagSinglePayload((uint64_t)v54, 1, v46);
  if (!v55)
  {
    v57 = *(_QWORD *)(v46 - 8);
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v53, v54, v46);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v46);
    goto LABEL_22;
  }
  if (v56)
  {
LABEL_22:
    v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v53, v54, v46);
  __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v46);
LABEL_23:
  v44[*(int *)(v51 + 24)] = v45[*(int *)(v51 + 24)];
  v11[v22[15]] = v12[v22[15]];
  *(_QWORD *)&v11[v22[16]] = *(_QWORD *)&v12[v22[16]];
  swift_release();
  v59 = *(int *)(v66 + 24);
  v60 = v68 + v59;
  v61 = (uint64_t)v67 + v59;
  *(_QWORD *)(v68 + v59) = *(uint64_t *)((char *)v67 + v59);
  swift_release();
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  swift_release();
  v62 = *(int *)(v66 + 28);
  v63 = v68 + v62;
  v64 = (uint64_t)v67 + v62;
  *(_QWORD *)(v68 + v62) = *(uint64_t *)((char *)v67 + v62);
  swift_release();
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  swift_release();
  return v68;
}

uint64_t getEnumTagSinglePayload for TranscriptParticipantBadge()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD60215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_44_6();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_295(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_1_16(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_93_0(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
    OUTLINED_FUNCTION_18();
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptParticipantBadge()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD6021B8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_45_7();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_146_0(*(int *)(a4 + 20));
    OUTLINED_FUNCTION_0_29(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for TranscriptParticipantBadge()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Participant(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1BD602294()
{
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type ScrollViewReader<GeometryReader<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(VStack<TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<GroupIconView, _PaddingLayout>?, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)>>, _FrameLayout>, _PaddingLayout>, Divider?)>>?, ModifiedContent<ModifiedContent<ScrollView<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0>, _MaskEffect<LinearGradient>>, _OverlayModifier<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, AccessibilityAttachmentModifier>, _OpacityEffect>, ModifiedContent<ModifiedContent<VStack<TupleView<(Label<Text, Image?>, ModifiedContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>?)>>, _FixedSizeLayout>, _Foregro);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>> and conformance VStack<A>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier> and conformance _ViewModifier_Content<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<VStack<TupleView<(ModifiedContent<ModifiedContent<TranscriptParticipantBadge, _TraitWritingModifier<ZIndexTraitKey>>, _OffsetEffect>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>)>>, _ViewModifier_Content<TranscriptSubtitle.ParticipantBadgeModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

void sub_1BD602360()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ViewModifier_Content<TranscriptSubtitle.SubtitlePadding> and conformance _ViewModifier_Content<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<TranscriptSubtitle.SubtitlePadding>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in TranscriptParticipantBadge()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CaptionRow()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CaptionHeader()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in GroupIconView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _MaskEffect<Circle> and conformance _MaskEffect<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void lazy protocol witness table accessor for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<GroupIconView.GroupImage, _FrameLayout> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage;
  if (!lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for GroupIconView.GroupImage, &unk_1E7645298);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage;
  if (!lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for GroupIconView.GroupImage, &unk_1E7645298);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupIconView.GroupImage and conformance GroupIconView.GroupImage);
  }
  return result;
}

void partial apply for closure #2 in CaptionRow.body.getter()
{
  CGFloat *v0;

  type metadata accessor for CaptionRow(0);
  OUTLINED_FUNCTION_0_147();
  closure #2 in CaptionRow.body.getter(v0);
}

uint64_t objectdestroy_157Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_42_2();
  type metadata accessor for CaptionRow(0);
  OUTLINED_FUNCTION_50_49();
  v4 = v3 & ~v2;
  v5 = (int *)OUTLINED_FUNCTION_46_43();
  v6 = v0 + v4 + v5[5];
  OUTLINED_FUNCTION_238();
  switch(OUTLINED_FUNCTION_47_36())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v7 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_2_18(v7);
      break;
    case 4u:
      v13 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_2_18(v13);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_31_64();
      if (*(_QWORD *)(v1 + 120) >= 2uLL)
        OUTLINED_FUNCTION_95_20();
      if (*(_QWORD *)(v1 + 312))
      {
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_94_12();
      }
      if (OUTLINED_FUNCTION_65_30())
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_93_14();
        OUTLINED_FUNCTION_92_19();
      }
      break;
    default:
      break;
  }
  v8 = OUTLINED_FUNCTION_14_2();
  v9 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_16(v9);
  v10 = (id *)(v6 + *(int *)(v8 + 28));
  if (*v10)
  {

    OUTLINED_FUNCTION_68_32();
  }
  OUTLINED_FUNCTION_44_54();
  OUTLINED_FUNCTION_22_93();
  OUTLINED_FUNCTION_44_54();
  OUTLINED_FUNCTION_102_15();
  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_12_116())
    OUTLINED_FUNCTION_7_130();
  OUTLINED_FUNCTION_830();
  if (!OUTLINED_FUNCTION_12_116())
    OUTLINED_FUNCTION_7_130();
  OUTLINED_FUNCTION_61_32();
  OUTLINED_FUNCTION_58_41(v5[6]);
  OUTLINED_FUNCTION_96_16(v5[7]);
  swift_release();
  OUTLINED_FUNCTION_22_93();
  swift_bridgeObjectRelease();
  v11 = OUTLINED_FUNCTION_32_61();
  OUTLINED_FUNCTION_75(v11);
  swift_release();
  return OUTLINED_FUNCTION_8_117();
}

uint64_t partial apply for closure #3 in CaptionRow.body.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_311();
  type metadata accessor for CaptionRow(v0);
  OUTLINED_FUNCTION_28_71();
  return closure #3 in CaptionRow.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>> and conformance HStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _PreferenceActionModifier<HeightKey> and conformance _PreferenceActionModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, HeightKey> and conformance _AnchorWritingModifier<A, B>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<TranscriptLabel, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type TranscriptLabel and conformance TranscriptLabel);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<TranscriptLabel, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  swift_retain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 104);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_BYTE *)(a1 + 120);
  swift_release();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t partial apply for closure #3 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  type metadata accessor for TranscriptParticipantBadge(0);
  OUTLINED_FUNCTION_49_3();
  v3 = v0 + v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #3 in TranscriptParticipantBadge.body.getter(v3);
}

uint64_t objectdestroy_163Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v13;

  OUTLINED_FUNCTION_93();
  type metadata accessor for TranscriptParticipantBadge(0);
  OUTLINED_FUNCTION_50_49();
  v6 = v1 + (v5 & ~v4);
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)v6, *(_BYTE *)(v6 + 8));
  v7 = v6 + *(int *)(v0 + 20);
  OUTLINED_FUNCTION_238();
  switch(OUTLINED_FUNCTION_121_0())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v8 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v8);
      break;
    case 4u:
      v13 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v13);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      OUTLINED_FUNCTION_55_38();
      if (*(_QWORD *)(v3 + 120) >= 2uLL)
        OUTLINED_FUNCTION_103_11();
      if (*(_QWORD *)(v3 + 312))
      {
        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_101_19();
      }
      if (*(_QWORD *)(v7 + *(int *)(v2 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_100_13();
        OUTLINED_FUNCTION_99_15();
      }
      break;
    default:
      break;
  }
  v9 = OUTLINED_FUNCTION_14_2();
  v10 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_15_27(v10);
  v11 = (id *)(v7 + *(int *)(v9 + 28));
  if (*v11)
  {

    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_22_93();
  OUTLINED_FUNCTION_68_3();

  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_10_4())
    OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_830();
  if (!OUTLINED_FUNCTION_10_4())
    OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_83_29();
  OUTLINED_FUNCTION_108_16();
  swift_release();
  OUTLINED_FUNCTION_297();
  swift_release();
  return OUTLINED_FUNCTION_16_33();
}

void *partial apply for closure #4 in TranscriptParticipantBadge.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for TranscriptParticipantBadge(0);
  v1 = OUTLINED_FUNCTION_44(v0);
  return closure #4 in TranscriptParticipantBadge.body.getter(v1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type _TaskModifier and conformance _TaskModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>> and conformance _OverlayModifier<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<AnyShapeStyle> and conformance _BackgroundStyleModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>> and conformance HStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *type metadata accessor for GroupIconView.GroupImage()
{
  return &unk_1E7645298;
}

void *type metadata accessor for HeightKey()
{
  return &unk_1E76452C0;
}

void sub_1BD602F58()
{
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _MaskEffect<Circle>>, ModifiedContent<GroupIconView.GroupImage, _FrameLayout>> and conformance <> _ConditionalContent<A, B>);
}

void lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>(uint64_t a1)
{
  void (*v1)(void);
  void (*v2)(void);
  uint64_t *v3;

  if (!OUTLINED_FUNCTION_44_19(a1))
  {
    OUTLINED_FUNCTION_24_31(0, v3);
    v2();
    v1();
    OUTLINED_FUNCTION_85_25();
  }
  OUTLINED_FUNCTION_45_0();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Image.Scale>>, AccessibilityAttachmentModifier>, _EnvironmentKeyWritingModifier<Font?>>, _ShadowEffect>, _FrameLayout> and conformance <> ModifiedContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    v3 = v2;
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>> and conformance HStack<A>);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<GroupIconView, _PaddingLayout>, AccessibilityAttachmentModifier>?, Text)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD603104()
{
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>((uint64_t)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<HStack<TupleView<(VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>, ModifiedContent<ModifiedContent<Text, _PaddingLayout>, _TraitWritingModifier<LayoutPriorityTraitKey>>, VStack<ModifiedContent<Divider, _BackgroundStyleModifier<Color>>>)>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<TranscriptLabel, _FlexFrameLayout>, _FlexFrameLayout>, _AnchorWritingModifier<CGRect, HeightKey>>, _PreferenceActionModifier<HeightKey>>> and conformance <> _ConditionalContent<A, B>);
}

uint64_t sub_1BD603138()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier>);
  type metadata accessor for Participant(255);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _ClipEffect<Circle>>, Text)>>, _PaddingLayout>, _PaddingLayout>, _BackgroundStyleModifier<AnyShapeStyle>>, _ClipEffect<RoundedRectangle>>, _OverlayModifier<StrokeShapeView<RoundedRectangle, Color, EmptyView>>>, _TaskModifier> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type Participant and conformance Participant);
  return swift_getOpaqueTypeConformance2();
}

double partial apply for thunk for @callee_guaranteed () -> (@out CGFloat)()
{
  uint64_t v0;

  return thunk for @callee_guaranteed () -> (@out CGFloat)(*(void (**)(double *__return_ptr))(v0 + 16));
}

void OUTLINED_FUNCTION_85_25()
{
  JUMPOUT(0x1C3B750C8);
}

uint64_t OUTLINED_FUNCTION_89_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_93_14()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_99_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_101_19()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_102_15()
{
  uint64_t v0;
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_103_11()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 96);
}

uint64_t OUTLINED_FUNCTION_104_14()
{
  return EnvironmentValues.menuIndicatorVisibility.setter();
}

void __swiftcall UIStackView.__allocating_init(arrangedSubviews:)(UIStackView *__return_ptr retstr, Swift::OpaquePointer arrangedSubviews)
{
  id v2;
  Class isa;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithArrangedSubviews_, isa);
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_18();
}

void ConversationHUDEphemeralNotice.__allocating_init(controlsManager:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  ConversationHUDEphemeralNotice.init(controlsManager:)(v0);
}

void ConversationHUDEphemeralNotice.ephemeralAlertStack.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack);
  if (!v1)
  {
    v2 = closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertStack.getter(v0);
    OUTLINED_FUNCTION_17_3(v2);
    OUTLINED_FUNCTION_134();
    v1 = 0;
  }
  v3 = v1;
  OUTLINED_FUNCTION_18();
}

void *closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertStack.getter(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  UIStackView *v4;
  void *v5;
  void *v6;
  double v7;
  _QWORD *v8;
  id v9;
  Swift::OpaquePointer arrangedSubviews;
  uint64_t v12;

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIStackView);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441C0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)(v2 + 32) = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x88))();
  *(_QWORD *)(v2 + 40) = (*(uint64_t (**)(void))((*v3 & *a1) + 0xA0))();
  specialized Array._endMutation()();
  UIStackView.__allocating_init(arrangedSubviews:)(v4, (Swift::OpaquePointer)v2);
  v6 = v5;
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v6, sel_setAlignment_, 0);
  objc_msgSend(v6, sel_setDistribution_, 2);
  LODWORD(v7) = 1132068864;
  objc_msgSend(v6, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v12 = type metadata accessor for ConversationHUDEphemeralNotice();
  arrangedSubviews._rawValue = a1;
  objc_allocWithZone(MEMORY[0x1E0DC3D80]);
  v8 = a1;
  v9 = @nonobjc UITapGestureRecognizer.init(target:action:)(&arrangedSubviews, (uint64_t)sel_didTapEphemeralAlertStack);
  objc_msgSend(v6, sel_addGestureRecognizer_, v9, arrangedSubviews._rawValue);

  return v6;
}

id ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  Class isa;
  Class v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  void *v13;
  id v14;

  v1 = OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    OUTLINED_FUNCTION_9_114((uint64_t)objc_msgSend(v5, sel_setNumberOfLines_, 1), sel_setClipsToBounds_);
    objc_msgSend(v5, sel_setLineBreakMode_, 4);
    v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
    isa = UIFont.withTraits(_:)(0x8002u).super.isa;

    v8 = UIFont.caseSensitive()().super.isa;
    OUTLINED_FUNCTION_10_34(v9, sel_setFont_);

    OUTLINED_FUNCTION_9_114(v10, sel_setAdjustsFontForContentSizeCategory_);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    OUTLINED_FUNCTION_10_34((uint64_t)v11, sel_setTextColor_);

    LODWORD(v12) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel);
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.setter);
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel);
  if (!v1)
  {
    v2 = closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter();
    OUTLINED_FUNCTION_17_3(v2);
    OUTLINED_FUNCTION_134();
    v1 = 0;
  }
  v3 = v1;
  OUTLINED_FUNCTION_18();
}

id closure #1 in ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  id v0;
  id v1;
  Class isa;
  Class v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  v3 = UIFont.caseSensitive()().super.isa;
  objc_msgSend(v0, sel_setFont_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  return v0;
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel);
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.setter);
}

void ConversationHUDEphemeralNotice.init(controlsManager:)(void *a1)
{
  char *v1;
  id v3;
  id v4;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice_controlsManager] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ConversationHUDEphemeralNotice();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ConversationHUDEphemeralNotice.setupRootView()();
}

void *sub_1BD603910()
{
  void *v0;
  void *v1;

  return v1;
}

id ConversationHUDEphemeralNotice.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void ConversationHUDEphemeralNotice.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertStack] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertTitleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice____lazy_storage___ephemeralAlertSubtitleLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void ConversationHUDEphemeralNotice.didTapEphemeralAlertStack()()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                                       + OBJC_IVAR____TtC15ConversationKit30ConversationHUDEphemeralNotice_controlsManager))
                                                 + 0x7F8))(0, 0, 0);
  OUTLINED_FUNCTION_0();
}

void ConversationHUDEphemeralNotice.setupRootView()()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;

  v1 = v0;
  ConversationHUDEphemeralNotice.ephemeralAlertStack.getter();
  v3 = v2;
  objc_msgSend(v1, sel_addSubview_, v2);

  v4 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_8_118();
  v6 = v5;
  v7 = objc_msgSend(v5, sel_leadingAnchor);

  v9 = OUTLINED_FUNCTION_123(v8, sel_leadingAnchor);
  v10 = OUTLINED_FUNCTION_48_1(v7, sel_constraintEqualToAnchor_);

  OUTLINED_FUNCTION_8_118();
  v12 = v11;
  v13 = objc_msgSend(v11, sel_trailingAnchor);

  v15 = OUTLINED_FUNCTION_123(v14, sel_trailingAnchor);
  v16 = OUTLINED_FUNCTION_48_1(v13, sel_constraintEqualToAnchor_);

  OUTLINED_FUNCTION_8_118();
  v18 = v17;
  v19 = objc_msgSend(v17, sel_bottomAnchor);

  v21 = OUTLINED_FUNCTION_123(v20, sel_bottomAnchor);
  v22 = OUTLINED_FUNCTION_48_1(v19, sel_constraintEqualToAnchor_);

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!__OFADD__(v23, 3))
  {
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(v23 + 3, 1);
    OUTLINED_FUNCTION_26_0();
    v24 = v10;
    OUTLINED_FUNCTION_36_0();
  }
  __break(1u);
  JUMPOUT(0x1BD603DB8);
}

id ConversationHUDEphemeralNotice.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDEphemeralNotice.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDEphemeralNotice.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDEphemeralNotice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConversationHUDEphemeralNotice()
{
  return objc_opt_self();
}

void sub_1BD603F18(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD603F58(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xA0))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ConversationHUDEphemeralNotice()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertTitleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.ephemeralAlertSubtitleLabel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationHUDEphemeralNotice.__allocating_init(controlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

void static Fonts.InCallControls.tableViewCellTitleLabel.getter()
{
  static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E0DC4A88]);
}

uint64_t *Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleLabelTopConstraintConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant;
}

uint64_t *Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleLabelBottomConstraintConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant;
}

void static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter()
{
  OUTLINED_FUNCTION_4_149(MEMORY[0x1E0DC4AB8]);
}

void static Fonts.Notices.systemApertureButtonFont.getter()
{
  OUTLINED_FUNCTION_0_163(MEMORY[0x1E0DC4A90]);
}

void static Fonts.ConversationControls.noticeButtonFont.getter()
{
  type metadata accessor for UIFont();
  OUTLINED_FUNCTION_12_79(*MEMORY[0x1E0DC4B10]);
  OUTLINED_FUNCTION_0();
}

id static Fonts.ConversationControls.screenSharingCountdownFont.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E0DC1420]);
}

id static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E0DC4AD0]);
}

void static Fonts.ConversationControls.secondaryLabelFont.getter()
{
  static Fonts.ConversationControls.secondaryLabelFont.getter((void *)0x8000);
}

void static Fonts.ShareCard.titleLabel.getter()
{
  if (objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4A88], *MEMORY[0x1E0DC1448]))
  {
    OUTLINED_FUNCTION_5_138();
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_0();
  }
  else
  {
    __break(1u);
  }
}

void static Fonts.ConversationControls.primaryLabelFont.getter()
{
  static Fonts.ConversationControls.secondaryLabelFont.getter((void *)0x8002);
}

void static Fonts.ConversationControls.secondaryLabelFont.getter(void *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  OUTLINED_FUNCTION_9_115();
  OUTLINED_FUNCTION_37_0();
  UIFont.caseSensitive()();

  OUTLINED_FUNCTION_0();
}

void static Fonts.ConversationControls.secondaryPillButtonFont.getter()
{
  OUTLINED_FUNCTION_0_163(MEMORY[0x1E0DC4A90]);
}

void static Fonts.InCallControls.tableViewHeaderTitleLabel.getter()
{
  static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E0DC4A88]);
}

uint64_t *Fonts.PTT.channelNameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for channelNameLabel != -1)
    swift_once();
  return &static Fonts.PTT.channelNameLabel;
}

uint64_t *Fonts.ParticipantViews.bottomBarRegular.unsafeMutableAddressor()
{
  if (one-time initialization token for bottomBarRegular != -1)
    swift_once();
  return &static Fonts.ParticipantViews.bottomBarRegular;
}

uint64_t *Fonts.PTT.disclosureButtonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for disclosureButtonLabel != -1)
    swift_once();
  return &static Fonts.PTT.disclosureButtonLabel;
}

id static Fonts.InCallControls.button.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E0DC4A98]);
}

void *Fonts.ParticipantViews.monogramFontName.unsafeMutableAddressor()
{
  return &static Fonts.ParticipantViews.monogramFontName;
}

uint64_t *Fonts.ParticipantViews.screenShareInfo.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareInfo != -1)
    swift_once();
  return &static Fonts.ParticipantViews.screenShareInfo;
}

uint64_t *Fonts.ParticipantViews.screenShareInfoFullScreen.unsafeMutableAddressor()
{
  if (one-time initialization token for screenShareInfoFullScreen != -1)
    swift_once();
  return &static Fonts.ParticipantViews.screenShareInfoFullScreen;
}

uint64_t *Fonts.ParticipantViews.ringButton.unsafeMutableAddressor()
{
  if (one-time initialization token for ringButton != -1)
    swift_once();
  return &static Fonts.ParticipantViews.ringButton;
}

uint64_t *Fonts.ParticipantViews.title.unsafeMutableAddressor()
{
  if (one-time initialization token for title != -1)
    swift_once();
  return &static Fonts.ParticipantViews.title;
}

uint64_t *Fonts.ParticipantViews.subtitle.unsafeMutableAddressor()
{
  if (one-time initialization token for subtitle != -1)
    swift_once();
  return &static Fonts.ParticipantViews.subtitle;
}

void static Fonts.Notices.titlePrimaryFont.getter()
{
  OUTLINED_FUNCTION_0_163(MEMORY[0x1E0DC4B10]);
}

void static Fonts.Notices.titleSecondaryFont.getter()
{
  static Fonts.Notices.systemApertureButtonFont.getter(MEMORY[0x1E0DC4B10], 256);
}

void static Fonts.InCallControls.tableViewParticipantCellTitleLabel.getter()
{
  OUTLINED_FUNCTION_4_149(MEMORY[0x1E0DC4AD0]);
}

id static Fonts.InCallControls.tableViewCellSubtitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E0DC4B10]);
}

void static Fonts.InCallControls.joinCountdownLabel.getter()
{
  static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter(MEMORY[0x1E0DC4B10]);
}

void static Fonts.InCallControls.collectionViewSectionHeaderTitleLabel.getter(_QWORD *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a1);
  OUTLINED_FUNCTION_9_115();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

uint64_t *Fonts.PTT.buttonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabel != -1)
    swift_once();
  return &static Fonts.PTT.buttonLabel;
}

uint64_t *Fonts.PTT.detailTitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for detailTitleLabel != -1)
    swift_once();
  return &static Fonts.PTT.detailTitleLabel;
}

uint64_t *Fonts.ParticipantViews.alertTitle.unsafeMutableAddressor()
{
  if (one-time initialization token for alertTitle != -1)
    swift_once();
  return &static Fonts.ParticipantViews.alertTitle;
}

unint64_t static Fonts.ParticipantViews.monogramFontName.getter()
{
  return 0xD00000000000001BLL;
}

void one-time initialization function for title(uint64_t a1)
{
  one-time initialization function for title(a1, MEMORY[0x1E0DC4A88], (Class *)&static Fonts.ParticipantViews.title);
}

id static Fonts.ParticipantViews.title.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for title, (id *)&static Fonts.ParticipantViews.title);
}

void one-time initialization function for subtitle(uint64_t a1)
{
  one-time initialization function for subtitle(a1, MEMORY[0x1E0DC4AB8], &static Fonts.ParticipantViews.subtitle);
}

id static Fonts.ParticipantViews.subtitle.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for subtitle, (id *)&static Fonts.ParticipantViews.subtitle);
}

void one-time initialization function for screenShareInfo(uint64_t a1)
{
  one-time initialization function for title(a1, MEMORY[0x1E0DC4B10], (Class *)&static Fonts.ParticipantViews.screenShareInfo);
}

id static Fonts.ParticipantViews.screenShareInfo.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for screenShareInfo, (id *)&static Fonts.ParticipantViews.screenShareInfo);
}

id one-time initialization function for screenShareInfoFullScreen(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E0DC4AB8], &static Fonts.ParticipantViews.screenShareInfoFullScreen);
}

id static Fonts.ParticipantViews.screenShareInfoFullScreen.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for screenShareInfoFullScreen, (id *)&static Fonts.ParticipantViews.screenShareInfoFullScreen);
}

void one-time initialization function for bottomBarRegular(uint64_t a1)
{
  one-time initialization function for title(a1, MEMORY[0x1E0DC4A88], (Class *)&static Fonts.ParticipantViews.bottomBarRegular);
}

id static Fonts.ParticipantViews.bottomBarRegular.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for bottomBarRegular, (id *)&static Fonts.ParticipantViews.bottomBarRegular);
}

id one-time initialization function for monogram()
{
  void *v0;
  id result;

  v0 = (void *)objc_opt_self();
  result = outlined bridged method (mnnbnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(116.0, *MEMORY[0x1E0DC1438], 0xD00000000000001BLL, 0x80000001BD6824E0, v0);
  static Fonts.ParticipantViews.monogram = (uint64_t)result;
  return result;
}

uint64_t *Fonts.ParticipantViews.monogram.unsafeMutableAddressor()
{
  if (one-time initialization token for monogram != -1)
    swift_once();
  return &static Fonts.ParticipantViews.monogram;
}

void static Fonts.ParticipantViews.monogram.getter()
{
  id v0;

  if (one-time initialization token for monogram != -1)
    swift_once();
  v0 = (id)static Fonts.ParticipantViews.monogram;
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for alertTitle(uint64_t a1)
{
  one-time initialization function for title(a1, MEMORY[0x1E0DC4B10], (Class *)&static Fonts.ParticipantViews.alertTitle);
}

void one-time initialization function for title(uint64_t a1, _QWORD *a2, Class *a3)
{
  void *v3;
  id v5;
  Class isa;

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a2);
  OUTLINED_FUNCTION_10_117();
  OUTLINED_FUNCTION_14_18();
  isa = UIFont.caseSensitive()().super.isa;

  *a3 = isa;
  OUTLINED_FUNCTION_18();
}

id static Fonts.ParticipantViews.alertTitle.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for alertTitle, (id *)&static Fonts.ParticipantViews.alertTitle);
}

void one-time initialization function for ringButton(uint64_t a1)
{
  one-time initialization function for subtitle(a1, MEMORY[0x1E0DC4AB8], &static Fonts.ParticipantViews.ringButton);
}

id static Fonts.ParticipantViews.ringButton.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ringButton, (id *)&static Fonts.ParticipantViews.ringButton);
}

void one-time initialization function for participantLabel(uint64_t a1)
{
  one-time initialization function for participantLabel(35.0, a1, &static Fonts.StagingArea.participantLabel);
}

_QWORD *Fonts.StagingArea.participantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for participantLabel != -1)
    swift_once();
  return &static Fonts.StagingArea.participantLabel;
}

id static Fonts.StagingArea.participantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for participantLabel, (id *)&static Fonts.StagingArea.participantLabel);
}

void one-time initialization function for smallParticipantLabel(uint64_t a1)
{
  one-time initialization function for participantLabel(24.0, a1, &static Fonts.StagingArea.smallParticipantLabel);
}

_QWORD *Fonts.StagingArea.smallParticipantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for smallParticipantLabel != -1)
    swift_once();
  return &static Fonts.StagingArea.smallParticipantLabel;
}

id static Fonts.StagingArea.smallParticipantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for smallParticipantLabel, (id *)&static Fonts.StagingArea.smallParticipantLabel);
}

void one-time initialization function for secondaryParticipantLabel(uint64_t a1)
{
  one-time initialization function for participantLabel(15.0, a1, &static Fonts.StagingArea.secondaryParticipantLabel);
}

_QWORD *Fonts.StagingArea.secondaryParticipantLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for secondaryParticipantLabel != -1)
    swift_once();
  return &static Fonts.StagingArea.secondaryParticipantLabel;
}

id static Fonts.StagingArea.secondaryParticipantLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for secondaryParticipantLabel, (id *)&static Fonts.StagingArea.secondaryParticipantLabel);
}

void one-time initialization function for explanationLabel(uint64_t a1)
{
  one-time initialization function for subtitle(a1, MEMORY[0x1E0DC4B10], &static Fonts.DebugOverlay.explanationLabel);
}

_QWORD *Fonts.DebugOverlay.explanationLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for explanationLabel != -1)
    swift_once();
  return &static Fonts.DebugOverlay.explanationLabel;
}

id static Fonts.DebugOverlay.explanationLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for explanationLabel, (id *)&static Fonts.DebugOverlay.explanationLabel);
}

id one-time initialization function for buttonLabel(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E0DC4A98], &static Fonts.DebugOverlay.buttonLabel);
}

_QWORD *Fonts.DebugOverlay.buttonLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for buttonLabel != -1)
    swift_once();
  return &static Fonts.DebugOverlay.buttonLabel;
}

id static Fonts.DebugOverlay.buttonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for buttonLabel, (id *)&static Fonts.DebugOverlay.buttonLabel);
}

void one-time initialization function for nameInputLabel(uint64_t a1)
{
  one-time initialization function for participantLabel(14.0, a1, &static Fonts.DebugOverlay.nameInputLabel);
}

void one-time initialization function for participantLabel(double a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  id v5;

  v5 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, a1, *MEMORY[0x1E0DC1440]);
  OUTLINED_FUNCTION_5_138();
  OUTLINED_FUNCTION_14_18();
  *a3 = v3;
}

_QWORD *Fonts.DebugOverlay.nameInputLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for nameInputLabel != -1)
    swift_once();
  return &static Fonts.DebugOverlay.nameInputLabel;
}

id static Fonts.DebugOverlay.nameInputLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for nameInputLabel, (id *)&static Fonts.DebugOverlay.nameInputLabel);
}

id static Fonts.InCallControls.tableViewHeaderSubtitleLabel.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E0DC4AB8]);
}

id static Fonts.InCallControls.actionButton.getter()
{
  return static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(MEMORY[0x1E0DC4AB8]);
}

id static Fonts.InCallControls.tableViewStatusCellTitleLabel.getter(_QWORD *a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a1);
}

void one-time initialization function for tableHeaderSingleLabelTopConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant = 0x4042000000000000;
}

double static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleLabelTopConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleLabelTopConstraintConstant);
}

void one-time initialization function for tableHeaderSingleLabelBottomConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant = 0x4038000000000000;
}

double static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleLabelBottomConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleLabelBottomConstraintConstant);
}

void one-time initialization function for tableHeaderDualLabelTopConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant = 0x4039000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderDualLabelTopConstraintConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderDualLabelTopConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderDualLabelTopConstraintConstant);
}

void one-time initialization function for tableHeaderDualLabelBottomConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant = 0x402A000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderDualLabelBottomConstraintConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderDualLabelBottomConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderDualLabelBottomConstraintConstant);
}

void one-time initialization function for tableHeaderInterLabelConstraintConstant()
{
  static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant = 0x4034000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderInterLabelConstraintConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderInterLabelConstraintConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant;
}

double static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderInterLabelConstraintConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderInterLabelConstraintConstant);
}

void one-time initialization function for tableHeaderSingleVerticalPaddingConstant()
{
  static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant = 0x402E000000000000;
}

uint64_t *Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant.unsafeMutableAddressor()
{
  if (one-time initialization token for tableHeaderSingleVerticalPaddingConstant != -1)
    swift_once();
  return &static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant;
}

double static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant.getter()
{
  return static SystemApertureConstants.sensorRegionHeight.getter(&one-time initialization token for tableHeaderSingleVerticalPaddingConstant, (uint64_t)&static Fonts.InCallControls.tableHeaderSingleVerticalPaddingConstant);
}

void static Fonts.ConversationControls.disclosureLabelFont.getter()
{
  OUTLINED_FUNCTION_0_163(MEMORY[0x1E0DC4AB8]);
}

void static Fonts.Notices.systemApertureButtonFont.getter(_QWORD *a1, uint64_t a2)
{
  if (objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *a1, a2))
    OUTLINED_FUNCTION_0();
  else
    __break(1u);
}

void static Fonts.ConversationControls.ephemeralAlertPrimaryLabelFont.getter()
{
  void *v0;

  type metadata accessor for UIFont();
  OUTLINED_FUNCTION_12_79(*MEMORY[0x1E0DC4A90]);
  UIFont.withTraits(_:)(0x10000u);
  OUTLINED_FUNCTION_37_0();
  UIFont.caseSensitive()();

  OUTLINED_FUNCTION_0();
}

void static Fonts.ConversationControls.ephemeralAlertSecondaryLabelFont.getter()
{
  static Fonts.InCallControls.tableViewCellTitleLabel.getter(MEMORY[0x1E0DC4AA0]);
}

void static Fonts.InCallControls.tableViewCellTitleLabel.getter(_QWORD *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a1);
  OUTLINED_FUNCTION_5_138();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

void one-time initialization function for nameLabel(uint64_t a1)
{
  one-time initialization function for subtitle(a1, MEMORY[0x1E0DC4AB8], &static Fonts.Roster.nameLabel);
}

_QWORD *Fonts.Roster.nameLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for nameLabel != -1)
    swift_once();
  return &static Fonts.Roster.nameLabel;
}

id static Fonts.Roster.nameLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for nameLabel, (id *)&static Fonts.Roster.nameLabel);
}

void one-time initialization function for collaborateSubtitleLabel(uint64_t a1)
{
  one-time initialization function for subtitle(a1, MEMORY[0x1E0DC4AB8], &static Fonts.ShareCard.collaborateSubtitleLabel);
}

void one-time initialization function for subtitle(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  id v5;

  v5 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a2);
  OUTLINED_FUNCTION_5_138();
  OUTLINED_FUNCTION_14_18();
  *a3 = v3;
  OUTLINED_FUNCTION_18();
}

uint64_t *Fonts.ShareCard.collaborateSubtitleLabel.unsafeMutableAddressor()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1)
    swift_once();
  return &static Fonts.ShareCard.collaborateSubtitleLabel;
}

id static Fonts.ShareCard.collaborateSubtitleLabel.getter()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return (id)static Fonts.ShareCard.collaborateSubtitleLabel;
}

void static Fonts.ShareCard.collaborateSubtitleLabel.setter(uint64_t a1)
{
  void *v2;

  if (one-time initialization token for collaborateSubtitleLabel != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  v2 = (void *)static Fonts.ShareCard.collaborateSubtitleLabel;
  static Fonts.ShareCard.collaborateSubtitleLabel = a1;

}

uint64_t (*static Fonts.ShareCard.collaborateSubtitleLabel.modify())()
{
  if (one-time initialization token for collaborateSubtitleLabel != -1)
    swift_once();
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

id one-time initialization function for channelNameLabel(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E0DC4AE8], &static Fonts.PTT.channelNameLabel);
}

id static Fonts.PTT.channelNameLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for channelNameLabel, (id *)&static Fonts.PTT.channelNameLabel);
}

id one-time initialization function for disclosureButtonLabel(uint64_t a1)
{
  return one-time initialization function for screenShareInfoFullScreen(a1, MEMORY[0x1E0DC4B58], &static Fonts.PTT.disclosureButtonLabel);
}

id one-time initialization function for screenShareInfoFullScreen(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a2);
  *a3 = result;
  return result;
}

id static Fonts.PTT.disclosureButtonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for disclosureButtonLabel, (id *)&static Fonts.PTT.disclosureButtonLabel);
}

id one-time initialization function for buttonLabel()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 16.0, *MEMORY[0x1E0DC1440]);
  static Fonts.PTT.buttonLabel = (uint64_t)result;
  return result;
}

id static Fonts.PTT.buttonLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for buttonLabel, (id *)&static Fonts.PTT.buttonLabel);
}

void one-time initialization function for detailTitleLabel()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B50]);
  OUTLINED_FUNCTION_10_117();
  OUTLINED_FUNCTION_37_0();
  static Fonts.PTT.detailTitleLabel = v0;
}

id static Fonts.PTT.detailTitleLabel.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for detailTitleLabel, (id *)&static Fonts.PTT.detailTitleLabel);
}

void type metadata accessor for Fonts()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.ParticipantViews()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.StagingArea()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.DebugOverlay()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.InCallControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.ConversationControls()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.Roster()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.ShareCard()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.PTT()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for Fonts.Notices()
{
  OUTLINED_FUNCTION_34_0();
}

id outlined bridged method (mnnbnn) of @objc static UIFont.systemFont(ofSize:weight:design:)(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_systemFontOfSize_weight_design_, v8, a1, a2);

  return v9;
}

uint64_t TimerService.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_50_50();
  TimerService.init()();
  return v0;
}

uint64_t TimerService.TimerTaskObservation.timerTask.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

uint64_t TimerService.TimerTaskObservation.timerTask.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*TimerService.TimerTaskObservation.timerTask.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

uint64_t TimerService.TimerTaskObservation.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  return v0;
}

uint64_t TimerService.TimerTaskObservation.__deallocating_deinit()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocClassInstance();
}

uint64_t TimerService.TimerTaskObservation.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_15();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t TimerService.TimerTaskObservation.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

NSObject *TimerService.init()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  swift_defaultActor_initialize();
  v0[14].isa = 0;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    v8 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136446210;
    v5 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v6, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v1, "%{public}s created", v4);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  return v0;
}

uint64_t TimerService.start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v7 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  v17 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_27_4((uint64_t)v16, v18, v19, v17);
  v20 = (_QWORD *)OUTLINED_FUNCTION_15();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v7;
  v20[5] = a1;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a5;
  v20[10] = a6;
  swift_retain();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  return swift_release();
}

uint64_t closure #1 in TimerService.start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return TimerService._start(duration:onFire:onCancel:)(a5, a6, a7, a8, v15, v16);
}

uint64_t TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = v6;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  v7[13] = *v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v7[14] = swift_task_alloc();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t TimerService._start(duration:onFire:onCancel:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_31_8();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_48_52();
    v4 = OUTLINED_FUNCTION_4_150(4.8751e-34);
    *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_25_75(v4, v5, v6);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_5_139(&dword_1BD004000, v7, v8, "%{public}s timerTask starting");
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 120) = v9;
  OUTLINED_FUNCTION_45_49(v9, (uint64_t)TimerService._start(duration:onFire:onCancel:));
  return TimerService.cancel()();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (v0[16])
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[17] = v1;
    *v1 = v0;
    v1[1] = TimerService._start(duration:onFire:onCancel:);
    return Task<>.value.getter();
  }
  else
  {
    v3 = v0[13];
    type metadata accessor for TimerService.TimerTaskObservation();
    v4 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_28_72(v4);
    OUTLINED_FUNCTION_19();
    v5 = OUTLINED_FUNCTION_15();
    v0[19] = v5;
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = v3;
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v6 = (_QWORD *)swift_task_alloc();
    v0[20] = v6;
    OUTLINED_FUNCTION_45_49(v6, (uint64_t)TimerService._start(duration:onFire:onCancel:));
    return OUTLINED_FUNCTION_21_95((uint64_t)partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:), v5);
  }
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[13];
  type metadata accessor for TimerService.TimerTaskObservation();
  v3 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_28_72(v3);
  OUTLINED_FUNCTION_19();
  v4 = OUTLINED_FUNCTION_15();
  v1[19] = v4;
  *(_QWORD *)(v4 + 16) = v0;
  *(_QWORD *)(v4 + 24) = v2;
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  v5 = (_QWORD *)swift_task_alloc();
  v1[20] = v5;
  OUTLINED_FUNCTION_45_49(v5, (uint64_t)TimerService._start(duration:onFire:onCancel:));
  return OUTLINED_FUNCTION_21_95((uint64_t)partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:), v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v15 = *(_OWORD *)(v0 + 48);
  v18 = (_QWORD *)(*(_QWORD *)(v0 + 144) + 16);
  static TaskPriority.userInitiated.getter();
  v7 = type metadata accessor for TaskPriority();
  OUTLINED_FUNCTION_27_4(v1, v8, v9, v7);
  v10 = lazy protocol witness table accessor for type TimerService and conformance TimerService();
  v11 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = v10;
  *(_OWORD *)(v11 + 32) = v15;
  *(_QWORD *)(v11 + 48) = v4;
  *(_QWORD *)(v11 + 56) = v3;
  *(_QWORD *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v2;
  *(_QWORD *)(v11 + 88) = v17;
  *(_QWORD *)(v11 + 96) = v16;
  swift_retain_n();
  swift_retain();
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  v13 = v12;
  OUTLINED_FUNCTION_2_0();
  *v18 = v13;
  OUTLINED_FUNCTION_19();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TimerService._start(duration:onFire:onCancel:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_2_8();
}

uint64_t closure #1 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = _typeName(_:qualified:)();
    v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "%{public}s backgroundTask expired", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }

  static TaskPriority.userInitiated.getter();
  v12 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_39_72();
  v2 = v1;
  if (v1)
  {
    MEMORY[0x1C3B73268](v1, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    OUTLINED_FUNCTION_43();
  }
  **(_BYTE **)(v0 + 16) = v2 == 0;
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #2 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[14] = v12;
  v8[15] = v13;
  v8[12] = v10;
  v8[13] = v11;
  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[7] = a4;
  return swift_task_switch();
}

uint64_t closure #2 in TimerService._start(duration:onFire:onCancel:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for AsyncCancellableTimer();
  v1 = OUTLINED_FUNCTION_50_50();
  v0[16] = v1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  v0[17] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  return AsyncCancellableTimer.wait(with:)(v0[7], v0[8]);
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return OUTLINED_FUNCTION_2_8();
}

{
  NSObject *v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(void);

  if ((static Task<>.isCancelled.getter() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_17_2();
    v4 = OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.conversationKit);
    v5 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_14(v5))
    {
      v6 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v6 = 136446210;
      v7 = OUTLINED_FUNCTION_10_118();
      v1[6] = OUTLINED_FUNCTION_34_56(v7, v8, v9, v10);
      OUTLINED_FUNCTION_13_2();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v2, "%{public}s timerTask cancelled", v6);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v11 = (_QWORD *)OUTLINED_FUNCTION_7_20();
    v1[19] = v11;
    *v11 = v1;
    v11[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v12, (uint64_t)&static Logger.conversationKit);
    v13 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v14 = 136446210;
      v15 = OUTLINED_FUNCTION_10_118();
      v1[5] = OUTLINED_FUNCTION_34_56(v15, v16, v17, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v0, v2, "%{public}s timerTask fired", v14);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v19 = (_QWORD *)OUTLINED_FUNCTION_7_20();
    v1[20] = v19;
    OUTLINED_FUNCTION_45_49(v19, (uint64_t)closure #2 in TimerService._start(duration:onFire:onCancel:));
  }
  return OUTLINED_FUNCTION_165(v21);
}

{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *v0;
  v1 = v5;
  OUTLINED_FUNCTION_9_7(&v5);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 168) = v2;
  v3 = OUTLINED_FUNCTION_44_55(v2, (uint64_t)closure #2 in TimerService._start(duration:onFire:onCancel:));
  return OUTLINED_FUNCTION_8_119(v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *v0;
  v1 = v5;
  OUTLINED_FUNCTION_9_7(&v5);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 168) = v2;
  v3 = OUTLINED_FUNCTION_44_55(v2, (uint64_t)closure #2 in TimerService._start(duration:onFire:onCancel:));
  return OUTLINED_FUNCTION_8_119(v3);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  OUTLINED_FUNCTION_18_55();
  OUTLINED_FUNCTION_1_6();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  return OUTLINED_FUNCTION_8_119(*(_QWORD *)(v0 + 112));
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(void);

  swift_release();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v1 = (void *)v0[18];
  v2 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationKit);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[18];
  if (v7)
  {
    v9 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136446466;
    v10 = _typeName(_:qualified:)();
    v0[2] = OUTLINED_FUNCTION_34_56(v10, v11, v12, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[3] = v8;
    v14 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v15 = String.init<A>(reflecting:)();
    v0[4] = OUTLINED_FUNCTION_34_56(v15, v16, v17, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_9();
    OUTLINED_FUNCTION_10_9();
    _os_log_impl(&dword_1BD004000, v5, v6, "%{public}s timerTask cancelled with error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_10_9();

  v19 = (_QWORD *)OUTLINED_FUNCTION_7_20();
  v0[22] = v19;
  *v19 = v0;
  v19[1] = closure #2 in TimerService._start(duration:onFire:onCancel:);
  return OUTLINED_FUNCTION_165(v21);
}

uint64_t TimerService.cancel()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = *v0;
  return OUTLINED_FUNCTION_18_96();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;

  OUTLINED_FUNCTION_31_8();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_48_52();
    v4 = OUTLINED_FUNCTION_4_150(4.8751e-34);
    v7 = OUTLINED_FUNCTION_25_75(v4, v5, v6);
    OUTLINED_FUNCTION_9_116(v7);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_5_139(&dword_1BD004000, v8, v9, "%{public}s cancel");
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }

  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v10 + 112);
  if (v11)
  {
    v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 88);
    v13 = swift_retain();
    v14 = v12(v13);
    OUTLINED_FUNCTION_19();
    if (v14)
    {
      MEMORY[0x1C3B73268](v14, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
      OUTLINED_FUNCTION_43();
    }
    v15 = *(_QWORD *)(v10 + 112);
    if (v15)
    {
      v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 88);
      v17 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
      v11 = v16(v17);
      OUTLINED_FUNCTION_43();
    }
    else
    {
      v11 = 0;
    }
  }
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v11);
}

uint64_t TimerService.beginBackgroundTask(expirationHandler:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = *v2;
  return OUTLINED_FUNCTION_18_96();
}

uint64_t TimerService.beginBackgroundTask(expirationHandler:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_31_8();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_48_52();
    v4 = OUTLINED_FUNCTION_4_150(4.8751e-34);
    v7 = OUTLINED_FUNCTION_25_75(v4, v5, v6);
    OUTLINED_FUNCTION_9_116(v7);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_5_139(&dword_1BD004000, v8, v9, "%{public}s beginBackgroundTask");
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }

  *(_QWORD *)(v1 + 96) = objc_opt_self();
  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 104) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_14_107();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();
  *(_QWORD *)(v0 + 112) = objc_msgSend(v1, sel_sharedApplication);
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_2_8();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = v0[8];
  if (v1)
  {
    v0[2] = MEMORY[0x1E0C809B0];
    v2 = v0[9];
    v0[6] = v1;
    v0[7] = v2;
    v0[3] = 1107296256;
    v0[4] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v0[5] = &block_descriptor_119;
    v3 = _Block_copy(v0 + 2);
    swift_retain();
    OUTLINED_FUNCTION_19();
  }
  else
  {
    v3 = 0;
  }
  v4 = (void *)v0[14];
  v5 = objc_msgSend(v4, sel_beginBackgroundTaskWithExpirationHandler_, v3);
  _Block_release(v3);

  return ((uint64_t (*)(id))v0[1])(v5);
}

uint64_t TimerService.endBackgroundTask(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return OUTLINED_FUNCTION_18_96();
}

uint64_t TimerService.endBackgroundTask(_:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_31_8();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationKit);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_48_52();
    v4 = OUTLINED_FUNCTION_4_150(4.8751e-34);
    v7 = OUTLINED_FUNCTION_25_75(v4, v5, v6);
    OUTLINED_FUNCTION_9_116(v7);
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_5_139(&dword_1BD004000, v8, v9, "%{public}s beginBackgroundTask");
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_60();
  }

  *(_QWORD *)(v1 + 48) = objc_opt_self();
  type metadata accessor for MainActor();
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_14_107();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();
  *(_QWORD *)(v0 + 64) = objc_msgSend(v1, sel_sharedApplication);
  OUTLINED_FUNCTION_58_4();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  objc_msgSend(v1, sel_endBackgroundTask_, *(_QWORD *)(v0 + 24));

  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t TimerService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t TimerService.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t TimerService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t protocol witness for Actor.unownedExecutor.getter in conformance TimerService()
{
  return TimerService.unownedExecutor.getter();
}

uint64_t sub_1BD606C18()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in TimerService.start(duration:onFire:onCancel:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in MultiwayViewController.registerForSystemEventsIfNecessary();
  OUTLINED_FUNCTION_32_62();
  return closure #1 in TimerService.start(duration:onFire:onCancel:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t type metadata accessor for TimerService.TimerTaskObservation()
{
  return objc_opt_self();
}

uint64_t sub_1BD606D04()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in TimerService._start(duration:onFire:onCancel:)()
{
  uint64_t v0;

  return closure #1 in TimerService._start(duration:onFire:onCancel:)(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type TimerService and conformance TimerService()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type TimerService and conformance TimerService;
  if (!lazy protocol witness table cache variable for type TimerService and conformance TimerService)
  {
    v1 = type metadata accessor for TimerService();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TimerService, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TimerService and conformance TimerService);
  }
  return result;
}

uint64_t type metadata accessor for TimerService()
{
  return objc_opt_self();
}

uint64_t sub_1BD606D88()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in TimerService._start(duration:onFire:onCancel:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  OUTLINED_FUNCTION_32_62();
  return closure #2 in TimerService._start(duration:onFire:onCancel:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1BD606E64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_39_72();
  *a1 = result;
  return result;
}

uint64_t method lookup function for TimerService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimerService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimerService.start(duration:onFire:onCancel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TimerService._start(duration:onFire:onCancel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of TimerService.cancel()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = dispatch thunk of TimerService.cancel();
  return v3();
}

uint64_t dispatch thunk of TimerService.cancel()(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1_6();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t method lookup function for TimerService.TimerTaskObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.timerTask.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of TimerService.TimerTaskObservation.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BD607004()
{
  OUTLINED_FUNCTION_67_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tgq5TATQ0_;
  return closure #1 in closure #1 in TimerService._start(duration:onFire:onCancel:)(a1, v4, v5, v6);
}

uint64_t OUTLINED_FUNCTION_39_72()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t *ClarityUIFavoritesList.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static ClarityUIFavoritesList.shared;
}

uint64_t ClarityUIFavoritesList.favorites.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ClarityUIFavoritesList.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

uint64_t key path getter for ClarityUIFavoritesList.favorites : ClarityUIFavoritesList@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ClarityUIFavoritesList.favorites.getter();
  *a1 = result;
  return result;
}

void sub_1BD607208(uint64_t *a1@<X8>)
{
  *a1 = ClarityUIFavoritesList.favorites.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ClarityUIFavoritesList.favorites : ClarityUIFavoritesList()
{
  swift_bridgeObjectRetain();
  return ClarityUIFavoritesList.favorites.setter();
}

unint64_t lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList;
  if (!lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList)
  {
    v1 = type metadata accessor for ClarityUIFavoritesList();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUIFavoritesList, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList);
  }
  return result;
}

uint64_t type metadata accessor for ClarityUIFavoritesList()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ClarityUIFavoritesList;
  if (!type metadata singleton initialization cache for ClarityUIFavoritesList)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClarityUIFavoritesList.favorites.setter()
{
  swift_getKeyPath();
  specialized ClarityUIFavoritesList.withMutation<A, B>(keyPath:_:)();
  OUTLINED_FUNCTION_22();
  return swift_bridgeObjectRelease();
}

uint64_t ClarityUIFavoritesList.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t specialized ClarityUIFavoritesList.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ClarityUIFavoritesList.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void (*ClarityUIFavoritesList.favorites.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC15ConversationKit22ClarityUIFavoritesList___observationRegistrar;
  *v4 = v2;
  v4[5] = lazy protocol witness table accessor for type ClarityUIFavoritesList and conformance ClarityUIFavoritesList();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  swift_beginAccess();
  return ClarityUIFavoritesList.favorites.modify;
}

void ClarityUIFavoritesList.favorites.modify(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  free(v1);
}

_QWORD *ClarityUIFavoritesList.().init()()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v0[2] = MEMORY[0x1E0DEE9D8];
  if (one-time initialization token for shared != -1)
    swift_once();
  v0[3] = static ClarityUIPreferences.shared;
  v1 = objc_allocWithZone(MEMORY[0x1E0C97298]);
  swift_retain();
  v0[4] = objc_msgSend(v1, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD645380;
  *(_QWORD *)(v2 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(_QWORD *)(v2 + 40) = v3;
  v4 = (id)TUPreferredFaceTimeBundleIdentifier();
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 56) = v7;
  v0[6] = v2;
  ObservationRegistrar.init()();
  v0[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD140]), sel_initWithContactStore_prefetchCount_, v0[4], 0);
  ClarityUIFavoritesList.populateFavorites()();
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v0, sel_populateFavorites, *MEMORY[0x1E0DBD178], 0);

  return v0;
}

uint64_t ClarityUIFavoritesList.populateFavorites()()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  BOOL v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  _QWORD v37[2];
  __int128 v38;
  uint64_t *v39;
  __int128 v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
    goto LABEL_45;
  v46 = (id)v2[5];
  v8 = objc_msgSend(v46, sel_favoritesEntries);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for CNFavoritesEntry);
  v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62)
    goto LABEL_46;
  v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_47:
    v48 = MEMORY[0x1E0DEE9D8];
    goto LABEL_48;
  }
LABEL_4:
  v11 = 0;
  v49 = v1 & 0xC000000000000001;
  v12 = (_QWORD *)v2[6];
  v42 = v1 & 0xFFFFFFFFFFFFFF8;
  v41 = v1 + 32;
  v50 = v12[2];
  v37[1] = &v51;
  v37[0] = v12 + 9;
  v48 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v9 = 138412290;
  v40 = v9;
  v38 = xmmword_1BD6441D0;
  v43 = v10;
  v45 = v12;
  v39 = v2;
  v44 = v1;
  do
  {
    if (v49)
    {
      v13 = (id)MEMORY[0x1C3B73D18](v11, v1);
    }
    else
    {
      if (v11 >= *(_QWORD *)(v42 + 16))
        goto LABEL_43;
      v13 = *(id *)(v41 + 8 * v11);
    }
    v14 = v13;
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1BD6081B0);
    }
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v14, sel_bundleIdentifier);
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v19 = v18;

    if (!v50)
      goto LABEL_18;
    v20 = v12[4] == v17 && v12[5] == v19;
    if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      goto LABEL_16;
    if (v50 == 1)
      goto LABEL_18;
    v31 = v12[6] == v17 && v12[7] == v19;
    if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static ClarityUIContact.requiredDescriptors(for:)(v2[4]);
    }
    if (v50 == 2)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v47 = v14;
    v32 = (_QWORD *)v37[0];
    v33 = 2;
    do
    {
      v34 = v33 + 1;
      if (__OFADD__(v33, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRetain();
        v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v10)
          goto LABEL_47;
        goto LABEL_4;
      }
      v35 = *(v32 - 1) == v17 && *v32 == v19;
      if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        goto LABEL_16;
      v32 += 2;
      ++v33;
    }
    while (v34 != v50);
    v12 = v45;
    swift_bridgeObjectRelease();
    v15 = v11 + 1;
    v14 = v47;
LABEL_19:
    swift_bridgeObjectRelease();
    if (one-time initialization token for clarityUI != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Log.clarityUI);
    v22 = v14;
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = v1;
      v27 = v2;
      v28 = v15;
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = v40;
      *(_QWORD *)(v25 + 4) = v22;
      *v29 = v22;
      _os_log_impl(&dword_1BD004000, v23, v24, "Skipping inapplicable favorite: %@", (uint8_t *)v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      v30 = v29;
      v15 = v28;
      v2 = v27;
      v1 = v26;
      MEMORY[0x1C3B751B8](v30, -1, -1);
      MEMORY[0x1C3B751B8](v25, -1, -1);

    }
    else
    {

      v23 = v22;
    }

    v11 = v15;
  }
  while (v15 != v10);
LABEL_48:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  ClarityUIFavoritesList.favorites.setter();
  return swift_bridgeObjectRelease();
}

uint64_t ClarityUIFavoritesList.deinit()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22ClarityUIFavoritesList___observationRegistrar;
  v3 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t ClarityUIFavoritesList.__deallocating_deinit()
{
  ClarityUIFavoritesList.deinit();
  return swift_deallocClassInstance();
}

uint64_t ClarityUIOutgoingCallAction.init(favoritesEntry:index:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::String v4;
  char v5;
  uint64_t result;

  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5 = CNFavoritesEntry.callType.getter() & 1;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)a2 = 0x657469726F766146;
  *(_QWORD *)(a2 + 8) = 0xE90000000000002DLL;
  *(_BYTE *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = partial apply for closure #1 in ClarityUIOutgoingCallAction.init(favoritesEntry:index:);
  *(_QWORD *)(a2 + 32) = result;
  return result;
}

uint64_t sub_1BD6083E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in ClarityUIOutgoingCallAction.init(favoritesEntry:index:)()
{
  CNFavoritesEntry.makeCall()();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for ClarityUIFavoritesList()
{
  return type metadata accessor for ClarityUIFavoritesList();
}

uint64_t type metadata completion function for ClarityUIFavoritesList()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ClarityUIFavoritesList()
{
  return swift_lookUpClassMethod();
}

__n128 InCallControlsFramesCache.frame(for:state:using:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t inited;
  Swift::Int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  _OWORD v20[2];
  char v21;
  _BYTE v22[40];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<InCallControlsState>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(inited + 32) = a2;
  InCallControlsFramesCache.measureFrames(for:states:using:)(a1, inited, a3);
  swift_setDeallocating();
  v10 = InCallControlsFramesCache.cacheKey(for:)(a1);
  swift_beginAccess();
  specialized Dictionary.subscript.getter(v10, *(_QWORD *)(v4 + 16));
  if (v11)
  {
    specialized Dictionary.subscript.getter();
    v18 = (__n128)v20[1];
    v19 = v20[0];
    v12 = v21;
    swift_endAccess();
    swift_bridgeObjectRelease();
    outlined init with take of CGRect?((uint64_t)v20, (uint64_t)v22);
    if ((v22[32] & 1) == 0)
      goto LABEL_8;
  }
  else
  {
    swift_endAccess();
    v18 = 0u;
    v19 = 0u;
    v12 = 1;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  v14 = String.init<A>(reflecting:)();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
LABEL_8:
  result = v18;
  *(_OWORD *)a4 = v19;
  *(__n128 *)(a4 + 16) = v18;
  *(_BYTE *)(a4 + 32) = v12;
  return result;
}

uint64_t InCallControlsFramesCache.measureFrames(for:states:using:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  char **v6;
  id v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  Swift::Int v12;
  _QWORD *v13;
  _QWORD *v14;
  Swift::UInt *v15;
  Swift::UInt v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double x;
  double y;
  double width;
  double height;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  void *v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  char v57;
  uint64_t v58;
  _BOOL8 v59;
  Swift::Int v60;
  unint64_t v61;
  char v62;
  Swift::Bool v63;
  unint64_t v64;
  char v65;
  CGFloat *v66;
  CGFloat *v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  _QWORD *v74;
  _QWORD *v75;
  char **v76;
  char **v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t result;
  _QWORD *v91;
  int64_t v92;
  unint64_t v93;
  int64_t v94;
  unint64_t v95;
  unint64_t v96;
  int64_t v97;
  unint64_t v98;
  int64_t v99;
  int64_t v100;
  CGFloat *v101;
  double v102;
  id v103;
  uint64_t v104;
  Swift::UInt *v105;
  void *v106;
  int64_t v107;
  uint64_t v108;
  char v109[40];
  _QWORD *v110;
  char **v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _BYTE v115[48];
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;

  v5 = a1;
  v6 = &selRef_associatedAppBundleIdentifier;
  v7 = objc_msgSend(a1, sel_superview);
  v8 = (uint64_t)&selRef_associatedAppBundleIdentifier;
  if (!v7)
  {
LABEL_41:
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_42:
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_1BD645380;
      v72 = objc_msgSend(v5, v6[464]);
      if (v72)
      {
        v73 = v72;
        objc_msgSend(v72, *(SEL *)(v8 + 1824));
        v75 = v74;
        v77 = v76;
        v79 = v78;
        v81 = v80;

        v110 = v75;
        v111 = v77;
        v112 = v79;
        v113 = v81;
        type metadata accessor for CGRect(0);
        v82 = String.init<A>(reflecting:)();
        v84 = v83;
      }
      else
      {
        v84 = 0xE300000000000000;
        v82 = 7104878;
      }
      v85 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v71 + 56) = MEMORY[0x1E0DEA968];
      v86 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v71 + 64) = v86;
      *(_QWORD *)(v71 + 32) = v82;
      *(_QWORD *)(v71 + 40) = v84;
      v110 = v5;
      type metadata accessor for UIView();
      v87 = v5;
      v88 = String.init<A>(reflecting:)();
      *(_QWORD *)(v71 + 96) = v85;
      *(_QWORD *)(v71 + 104) = v86;
      *(_QWORD *)(v71 + 72) = v88;
      *(_QWORD *)(v71 + 80) = v89;
      os_log(_:dso:log:type:_:)();
      return swift_bridgeObjectRelease();
    }
LABEL_77:
    swift_once();
    goto LABEL_42;
  }
  v9 = v7;
  objc_msgSend(v7, sel_bounds);
  if (v10 <= 0.0 || (objc_msgSend(v9, sel_bounds), v11 <= 0.0))
  {

    goto LABEL_41;
  }
  v12 = InCallControlsFramesCache.cacheKey(for:)(v5);
  swift_beginAccess();
  specialized Dictionary.subscript.getter(v12, *(_QWORD *)(v3 + 16));
  v14 = v13;
  swift_endAccess();
  if (!v14)
  {
    type metadata accessor for CGRect(0);
    lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState();
    v14 = (_QWORD *)Dictionary.init(dictionaryLiteral:)();
  }
  v15 = (Swift::UInt *)(a3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v105 = v15;
  v16 = *v15;
  objc_msgSend(v9, sel_bounds);
  v18 = v17;
  v20 = v19;
  v21 = swift_bridgeObjectRetain();
  specialized Set.init<A>(_:)(v21);
  v23 = v22;
  v108 = v22;
  specialized Set.contains(_:)(v16, v22);
  v106 = v9;
  v104 = v16;
  if ((v24 & 1) != 0)
  {
    specialized Dictionary.subscript.getter();
    outlined init with take of CGRect?((uint64_t)v109, (uint64_t)v115);
    if (v115[32] == 1)
    {
      objc_msgSend(v5, sel_frame);
      v121.origin.x = v25;
      v121.origin.y = v26;
      v121.size.width = v27;
      v121.size.height = v28;
      v116.origin.x = 0.0;
      v116.origin.y = 0.0;
      v116.size.width = v18;
      v116.size.height = v20;
      v117 = CGRectIntersection(v116, v121);
      x = v117.origin.x;
      y = v117.origin.y;
      width = v117.size.width;
      height = v117.size.height;
      swift_isUniquelyReferenced_nonNull_native();
      v110 = v14;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v16, x, y, width, height);
      v14 = v110;
      swift_bridgeObjectRelease();
    }
    specialized Set._Variant.remove(_:)(v16);
    v23 = v108;
  }
  v33 = v23 + 56;
  v34 = 1 << *(_BYTE *)(v23 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & *(_QWORD *)(v23 + 56);
  v37 = (unint64_t)(v34 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v107 = v37;
  while (1)
  {
    if (v36)
    {
      v38 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      v39 = v38 | (v8 << 6);
      goto LABEL_29;
    }
    v40 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v40 >= v37)
      goto LABEL_47;
    v41 = *(_QWORD *)(v33 + 8 * v40);
    ++v8;
    if (!v41)
    {
      v8 = v40 + 1;
      if (v40 + 1 >= v37)
        goto LABEL_47;
      v41 = *(_QWORD *)(v33 + 8 * v8);
      if (!v41)
      {
        v8 = v40 + 2;
        if (v40 + 2 >= v37)
          goto LABEL_47;
        v41 = *(_QWORD *)(v33 + 8 * v8);
        if (!v41)
          break;
      }
    }
LABEL_28:
    v36 = (v41 - 1) & v41;
    v39 = __clz(__rbit64(v41)) + (v8 << 6);
LABEL_29:
    v43 = *(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * v39);
    if (v14[2])
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v43);
      if ((v44 & 1) != 0)
        continue;
    }
    MultiwayViewConstraintsController.inCallControlsState.setter(v43);
    v45 = objc_msgSend(v5, v6[464]);
    objc_msgSend(v45, sel_layoutIfNeeded);

    v46 = v5;
    objc_msgSend(v5, sel_frame);
    v122.origin.x = v47;
    v122.origin.y = v48;
    v122.size.width = v49;
    v122.size.height = v50;
    v118.origin.x = 0.0;
    v118.origin.y = 0.0;
    v118.size.width = v18;
    v118.size.height = v20;
    v119 = CGRectIntersection(v118, v122);
    v51 = v119.origin.x;
    v52 = v119.origin.y;
    v53 = v119.size.width;
    v54 = v119.size.height;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v110 = v14;
    v56 = specialized __RawDictionaryStorage.find<A>(_:)(v43);
    v58 = v14[2];
    v59 = (v57 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
      goto LABEL_79;
    v61 = v56;
    v62 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<InCallControlsState, CGRect>);
    v63 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v60);
    v5 = v46;
    if (v63)
    {
      v64 = specialized __RawDictionaryStorage.find<A>(_:)(v43);
      if ((v62 & 1) != (v65 & 1))
        goto LABEL_81;
      v61 = v64;
    }
    v14 = v110;
    if ((v62 & 1) != 0)
    {
      v66 = (CGFloat *)(v110[7] + 32 * v61);
      *v66 = v51;
      v66[1] = v52;
      v66[2] = v53;
      v66[3] = v54;
    }
    else
    {
      v110[(v61 >> 6) + 8] |= 1 << v61;
      *(_QWORD *)(v14[6] + 8 * v61) = v43;
      v67 = (CGFloat *)(v14[7] + 32 * v61);
      *v67 = v51;
      v67[1] = v52;
      v67[2] = v53;
      v67[3] = v54;
      v68 = v14[2];
      v69 = __OFADD__(v68, 1);
      v70 = v68 + 1;
      if (v69)
        goto LABEL_80;
      v14[2] = v70;
    }
    v6 = &selRef_associatedAppBundleIdentifier;
    v37 = v107;
    v33 = v23 + 56;
    swift_bridgeObjectRelease();
  }
  v42 = v40 + 3;
  if (v42 < v37)
  {
    v41 = *(_QWORD *)(v33 + 8 * v42);
    if (!v41)
    {
      while (1)
      {
        v8 = v42 + 1;
        if (__OFADD__(v42, 1))
          break;
        if (v8 >= v37)
          goto LABEL_47;
        v41 = *(_QWORD *)(v33 + 8 * v8);
        ++v42;
        if (v41)
          goto LABEL_28;
      }
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    v8 = v42;
    goto LABEL_28;
  }
LABEL_47:
  swift_release();
  specialized _NativeDictionary.makeIterator()(&v110, v14);
  v91 = v110;
  v8 = (uint64_t)v111;
  v92 = v113;
  v93 = v114;
  v94 = (unint64_t)(v112 + 64) >> 6;
  swift_bridgeObjectRetain_n();
  while (2)
  {
    if (v93)
    {
      v95 = __clz(__rbit64(v93));
      v93 &= v93 - 1;
      v96 = v95 | (v92 << 6);
LABEL_68:
      v101 = (CGFloat *)(v91[7] + 32 * v96);
      v120.origin.x = *v101;
      v102 = v101[1];
      v120.size.width = v101[2];
      v120.size.height = v101[3];
      v120.origin.y = v102;
      if (CGRectIsEmpty(v120) || v102 < 1.0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for CGRect(0);
        lazy protocol witness table accessor for type InCallControlsState and conformance InCallControlsState();
        Dictionary.init(dictionaryLiteral:)();
        goto LABEL_72;
      }
      continue;
    }
    break;
  }
  v97 = v92 + 1;
  if (__OFADD__(v92, 1))
    goto LABEL_76;
  if (v97 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v97);
  v99 = v92 + 1;
  if (v98)
    goto LABEL_67;
  v99 = v92 + 2;
  if (v92 + 2 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v99);
  if (v98)
    goto LABEL_67;
  v99 = v92 + 3;
  if (v92 + 3 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v99);
  if (v98)
    goto LABEL_67;
  v99 = v92 + 4;
  if (v92 + 4 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v99);
  if (v98)
    goto LABEL_67;
  v99 = v92 + 5;
  if (v92 + 5 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v99);
  if (v98)
    goto LABEL_67;
  v99 = v92 + 6;
  if (v92 + 6 >= v94)
    goto LABEL_71;
  v98 = *(_QWORD *)(v8 + 8 * v99);
  if (v98)
  {
LABEL_67:
    v93 = (v98 - 1) & v98;
    v96 = __clz(__rbit64(v98)) + (v99 << 6);
    v92 = v99;
    goto LABEL_68;
  }
  v100 = v92 + 7;
  while (v100 < v94)
  {
    v98 = *(_QWORD *)(v8 + 8 * v100++);
    if (v98)
    {
      v99 = v100 - 1;
      goto LABEL_67;
    }
  }
LABEL_71:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_72:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  specialized Dictionary._Variant.setValue(_:forKey:)();
  swift_endAccess();
  if (*v105 != v104)
  {
    MultiwayViewConstraintsController.inCallControlsState.setter(v104);
    v103 = objc_msgSend(v5, v6[464]);
    objc_msgSend(v103, sel_layoutIfNeeded);

  }
  return swift_bridgeObjectRelease();
}

Swift::Int InCallControlsFramesCache.cacheKey(for:)(void *a1)
{
  id v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  _BYTE v11[72];
  _BYTE __dst[72];

  v1 = objc_msgSend(a1, sel_superview);
  v2 = (Swift::UInt64)v1;
  if (v1)
  {
    objc_msgSend(v1, sel_bounds);
    v4 = v3;
    v6 = v5;

    v7 = v4;
    v2 = v6;
  }
  else
  {
    v7 = 0;
  }
  Hasher.init()();
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v7;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  memcpy(__dst, v11, sizeof(__dst));
  return Hasher.finalize()();
}

uint64_t InCallControlsFramesCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InCallControlsFramesCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t InCallControlsFramesCache.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [InCallControlsState : CGRect]);
  *(_QWORD *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t InCallControlsFramesCache.init()()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [InCallControlsState : CGRect]);
  *(_QWORD *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t type metadata accessor for InCallControlsFramesCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallControlsFramesCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsFramesCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

char *ParticipantView.__allocating_init(frame:localParticipant:)(char a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  OUTLINED_FUNCTION_15_0();
  return ParticipantView.init(frame:localParticipant:)(a1);
}

void ParticipantView.isInRoster.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster, (void (*)(uint64_t))ParticipantView.isInRoster.didset);
}

Swift::Void __swiftcall ParticipantView.reset()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_2(**(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView)
                                     + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView));
  OUTLINED_FUNCTION_0();
}

void ParticipantView.configure(with:)(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint8_t *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int EnumCaseMultiPayload;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  const void *v63;
  const void *v64;
  char v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char v86;
  uint64_t v87;
  char v88;
  char *v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, _QWORD);
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _DWORD v133[2];
  uint64_t v134;
  char *v135;
  char *v136;
  int v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  Swift::Int v151;
  char *v152;
  id v153;
  uint64_t v154;
  char *v155;
  int *v156;
  uint64_t v157;
  _QWORD v158[13];
  unsigned __int8 v159;
  _QWORD v160[8];
  __int16 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  char v173;
  uint64_t v174[24];

  v2 = v1;
  v149 = OUTLINED_FUNCTION_15_6();
  v156 = (int *)type metadata accessor for ParticipantViewModel.ParticipantDetails(0);
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v133 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v133 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v138 = (uint64_t)v133 - v15;
  MEMORY[0x1E0C80A78](v14);
  v157 = (uint64_t)v133 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantViewModel?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_41();
  v142 = v21;
  v154 = type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v133 - v26;
  Hasher.init(_seed:)();
  ParticipantViewModel.hash(into:)();
  v28 = Hasher._finalize()();
  if ((v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash + 8] & 1) == 0
    && *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash] == v28)
  {
    return;
  }
  v151 = v28;
  v152 = v25;
  v140 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v29 = type metadata accessor for Logger();
  v30 = __swift_project_value_buffer(v29, (uint64_t)&static Logger.conversationKit);
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)a1, (uint64_t)v27, type metadata accessor for ParticipantViewModel);
  v31 = v2;
  v150 = v30;
  v32 = Logger.logObject.getter();
  v33 = static os_log_type_t.default.getter();
  LODWORD(v155) = v33;
  v34 = os_log_type_enabled(v32, v33);
  v139 = v7;
  v135 = v13;
  v136 = v10;
  v153 = a1;
  if (v34)
  {
    v35 = OUTLINED_FUNCTION_105();
    v148 = OUTLINED_FUNCTION_105();
    v174[0] = v148;
    *(_DWORD *)v35 = 136315394;
    v147 = v35 + 4;
    v36 = &v31[OBJC_IVAR____TtC15ConversationKit15ParticipantView_loggingIdentifier];
    v37 = OUTLINED_FUNCTION_33_0();
    v38 = v142;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v142, v36, v37);
    __swift_storeEnumTagSinglePayload(v38, 0, 1, v37);
    specialized >> prefix<A>(_:)(v38);
    v40 = v39;
    v42 = v41;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v160[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v40, v42, v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v27, (uint64_t)v19, type metadata accessor for ParticipantViewModel);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v154);
    specialized >> prefix<A>(_:)((uint64_t)v19);
    v44 = v43;
    v46 = v45;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for ParticipantViewModel?);
    v160[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of AccountUpdateNotice((uint64_t)v27, type metadata accessor for ParticipantViewModel);
    _os_log_impl(&dword_1BD004000, v32, (os_log_type_t)v155, "Configuring participant view %s with %s...", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  outlined destroy of AccountUpdateNotice((uint64_t)v27, type metadata accessor for ParticipantViewModel);
  v47 = v31;
  v48 = Logger.logObject.getter();
  v49 = static os_log_type_t.default.getter();
  v50 = os_log_type_enabled(v48, v49);
  v155 = v47;
  if (v50)
  {
    v51 = (uint8_t *)OUTLINED_FUNCTION_105();
    v174[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v51 = 136315138;
    v160[0] = v47;
    v52 = v47;
    v53 = String.init<A>(reflecting:)();
    v160[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v48, v49, "... for %s.", v51, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v55 = v157;
  v57 = (uint64_t)v152;
  v56 = (uint64_t)v153;
  v58 = v140;
  v134 = *(_QWORD *)v140;
  v133[1] = v140[8];
  *(_QWORD *)v140 = v151;
  v58[8] = 0;
  ParticipantView.configureViewVisibility(for:)(v56);
  _s15ConversationKit11ParticipantVWOcTm_2(v56, v57, type metadata accessor for ParticipantViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v60 = (_QWORD *)&demangling cache variable for type metadata for Participant.CountdownInfo?;
  v61 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (!EnumCaseMultiPayload)
  {
    v66 = (const void *)(v57
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                                + 48));
    OUTLINED_FUNCTION_47_37();
    OUTLINED_FUNCTION_24_1(v174, v66);
    v65 = 0;
    OUTLINED_FUNCTION_9_117();
    v166 = 0u;
    v167 = 0u;
    v168 = 0u;
    v169 = 0u;
    v170 = 0u;
    v171 = 0u;
    v172 = 0;
    v173 = -1;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v67 = v57
        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                 + 48);
    v69 = *(void **)v67;
    v68 = *(_QWORD *)(v67 + 8);
    v70 = *(_QWORD *)(v67 + 16);
    v146 = *(_QWORD *)(v67 + 24);
    v147 = v68;
    v71 = *(_QWORD *)(v67 + 32);
    v145 = *(_QWORD *)(v67 + 40);
    v72 = v57;
    v74 = *(_QWORD *)(v67 + 48);
    v73 = *(_QWORD *)(v67 + 56);
    v141 = *(unsigned __int8 *)(v67 + 64);
    v75 = *(unsigned __int8 *)(v67 + 65);
    v151 = *(_QWORD *)(v67 + 72);
    v152 = (char *)v73;
    v76 = *(_QWORD *)(v67 + 80);
    v78 = *(_QWORD *)(v67 + 88);
    v77 = *(_QWORD *)(v67 + 96);
    v149 = v78;
    v150 = v76;
    v148 = v77;
    v79 = v138;
    outlined init with take of ParticipantViewModel.ParticipantDetails(v72, v138);
    _s15ConversationKit11ParticipantVWOcTm_2(v79, v55, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if (v75)
      v80 = 256;
    else
      v80 = 0;
    memset(v174, 0, 24);
    v174[3] = 1;
    OUTLINED_FUNCTION_54_47((uint64_t)v174);
    v172 = 0;
    v170 = 0u;
    v171 = 0u;
    v168 = 0u;
    v169 = 0u;
    v166 = 0u;
    v167 = 0u;
    v173 = -1;
    v153 = v69;
    v81 = v69;
    v154 = v70;
    swift_bridgeObjectRetain();
    v144 = v71;
    OUTLINED_FUNCTION_35_0();
    v143 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    outlined copy of (title: String, subtitle: String?)?(v151, v150);
    if (one-time initialization token for shared != -1)
      swift_once();
    v141 |= v80;
    v82 = OUTLINED_FUNCTION_22_6();
    v55 = v157;
    v83 = (uint64_t)v135;
    _s15ConversationKit11ParticipantVWOcTm_2(v157, (uint64_t)v135, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    v84 = (uint64_t)v136;
    if ((v82 & 1) != 0)
      v85 = *(unsigned __int8 *)(v83 + v156[7]) ^ 1;
    else
      v85 = 1;
    v137 = v85;
    outlined destroy of AccountUpdateNotice(v83, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    v86 = OUTLINED_FUNCTION_22_6();
    _s15ConversationKit11ParticipantVWOcTm_2(v55, v84, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    if ((v86 & 1) != 0)
    {
      v88 = *(_BYTE *)(v84 + v156[7]);
      OUTLINED_FUNCTION_140_1(v87, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      v61 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((v88 & 1) != 0)
      {
        v89 = ParticipantView.infoView.getter();
        v90 = (*(uint64_t (**)(void))((*v61 & *(_QWORD *)v89) + 0xE8))();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_50_51();
        outlined destroy of AccountUpdateNotice(v138, type metadata accessor for ParticipantViewModel.ParticipantDetails);
        LODWORD(v138) = 0;
        v65 = v90 ^ 1;
LABEL_27:
        v60 = &demangling cache variable for type metadata for Participant.CountdownInfo?;
        goto LABEL_28;
      }
    }
    else
    {
      OUTLINED_FUNCTION_140_1(v87, type metadata accessor for ParticipantViewModel.ParticipantDetails);
      v61 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    }
    outlined destroy of AccountUpdateNotice(v138, type metadata accessor for ParticipantViewModel.ParticipantDetails);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_50_51();
    LODWORD(v138) = 0;
    v65 = 1;
    goto LABEL_27;
  }
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
  v63 = (const void *)(v57 + *(int *)(v62 + 48));
  v64 = (const void *)(v57 + *(int *)(v62 + 64));
  OUTLINED_FUNCTION_47_37();
  OUTLINED_FUNCTION_24_1(v174, v63);
  outlined init with take of ParticipantVideoOverlayView.ViewModel(v64, &v166);
  OUTLINED_FUNCTION_9_117();
  v65 = 1;
LABEL_13:
  LODWORD(v138) = 1;
LABEL_28:
  v91 = *(_QWORD *)&v155[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  if (v60[72] != -1)
    swift_once();
  v92 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 632))();
  v93 = (uint64_t)v139;
  _s15ConversationKit11ParticipantVWOcTm_2(v55, (uint64_t)v139, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  v95 = v156;
  if ((v92 & 1) != 0)
    v96 = *(_BYTE *)(v93 + v156[7]);
  else
    v96 = 0;
  OUTLINED_FUNCTION_140_1(v94, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  v139 = (char *)v91;
  *(_BYTE *)(v91 + OBJC_IVAR____TtC15ConversationKit20ParticipantVideoView_shouldSkipTransformsForLayerHostMode) = v96;
  v97 = OUTLINED_FUNCTION_33_0();
  v98 = v142;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v142, v55, v97);
  __swift_storeEnumTagSinglePayload(v98, 0, 1, v97);
  v99 = v155;
  v100 = (uint64_t)&v155[OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier];
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of UUID?(v98, v100);
  swift_endAccess();
  v101 = ParticipantView.infoView.getter();
  v102 = v95[6];
  v103 = (uint64_t *)(v55 + v95[5]);
  v104 = v55;
  v105 = *v103;
  v106 = v103[1];
  v107 = *(unsigned __int8 *)(v104 + v102);
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))((*v61 & *(_QWORD *)v101) + 0x128);
  OUTLINED_FUNCTION_26_22();
  v108(v105, v106, v107, v65 & 1);

  swift_bridgeObjectRelease();
  v109 = *(void **)&v99[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView];
  if (v109)
    objc_msgSend(v109, sel_setHidden_, v138);
  objc_msgSend(*(id *)&v99[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView], sel_setHidden_, (*(_BYTE *)(v157 + v156[9]) & 1) == 0);
  if (v154)
  {
    v160[0] = v153;
    v160[1] = v147;
    v160[2] = v154;
    v160[3] = v146;
    v110 = v144;
    v160[4] = v144;
    v160[5] = v145;
    v111 = v143;
    v112 = (uint64_t)v152;
    v160[6] = v143;
    v160[7] = v152;
    v113 = v141;
    v161 = v141 & 0xFF01;
    v115 = v150;
    v114 = v151;
    v162 = v151;
    v163 = v150;
    v164 = v149;
    v165 = v148;
    v116 = v153;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_0();
    outlined copy of (title: String, subtitle: String?)?(v114, v115);
    ParticipantMonogramView.configure(with:)((uint64_t)v160);
    v117 = OUTLINED_FUNCTION_46_44();
    outlined consume of ParticipantMonogramView.ViewModel?(v117, v118, v119, v120, v110, v121, v111, v112, v113, v114, v115);
  }
  else
  {
    OUTLINED_FUNCTION_67_2(**(_QWORD **)(*(_QWORD *)&v99[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView]
                                       + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_audioVisualizationView));
  }
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v174, (uint64_t)v158, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  if (v158[3] == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v158, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  }
  else
  {
    OUTLINED_FUNCTION_24_1(v160, v158);
    ParticipantVideoView.configure(with:)((uint64_t)v160);
    outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v160);
  }
  v122 = v155;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v166, (uint64_t)v158, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
  if (v159 == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v158, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
    v123 = OUTLINED_FUNCTION_15();
    swift_unknownObjectWeakInit();
    swift_retain();
    ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(1, (uint64_t)partial apply for closure #1 in ParticipantView.configure(with:), v123, 0.0);
    swift_release_n();
  }
  else
  {
    outlined init with take of ParticipantVideoOverlayView.ViewModel(v158, v160);
    OUTLINED_FUNCTION_18_4(*(id *)&v122[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView], sel_setHidden_);
    ParticipantVideoOverlayView.configure(with:)((unsigned __int8 *)v160);
    ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(1, 0, 0, 1.0);
    outlined destroy of ParticipantVideoOverlayView.ViewModel((uint64_t)v160);
  }
  ParticipantView.setKickMemberButtonIsVisible(_:)(*(_BYTE *)(v157 + v156[8]));
  if ((v137 & 1) != 0)
    ParticipantView.setInfoViewIsVisible(_:animated:)(0, 0);
  v132 = v150;
  v131 = v151;
  v130 = v141;
  v124 = OUTLINED_FUNCTION_46_44();
  outlined consume of ParticipantMonogramView.ViewModel?(v124, v125, v126, v127, v144, v128, v143, (uint64_t)v152, v130, v131, v132);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v166, &demangling cache variable for type metadata for ParticipantVideoOverlayView.ViewModel?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v174, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  OUTLINED_FUNCTION_315(v129, type metadata accessor for ParticipantViewModel.ParticipantDetails);
}

Swift::Void __swiftcall ParticipantView.updateAudioVisualization(with:)(Swift::Float with)
{
  ParticipantMonogramView.updateAudioVisualization(with:)(with);
  OUTLINED_FUNCTION_0();
}

Swift::Void __swiftcall ParticipantView.setInfoViewIsVisible(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  char *v2;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  char *v17;
  char *v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer];
  if (v5)
    objc_msgSend(v5, sel_invalidate);
  v6 = ParticipantView.infoView.getter();
  OUTLINED_FUNCTION_18_4(v6, sel_setHidden_);

  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = _;
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = v2;
  *(_BYTE *)(v8 + 24) = _;
  if (animated)
  {
    if (_)
      v9 = 0.1;
    else
      v9 = 0.25;
    v10 = (void *)objc_opt_self();
    v11 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v11 + 16) = partial apply for closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:);
    *(_QWORD *)(v11 + 24) = v7;
    v12 = MEMORY[0x1E0C809B0];
    v13 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v27, v29);
    v14 = v2;
    swift_retain();
    swift_release();
    v15 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v12, 1107296256, v28, v30);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 131076, v13, v15, v9, 0.0);
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_19();
    _Block_release(v15);
    _Block_release(v13);
  }
  else
  {
    v16 = v2;
    v17 = ParticipantView.infoView.getter();
    v18 = v17;
    v19 = 0.0;
    if (_)
      v19 = 1.0;
    objc_msgSend(v17, sel_setAlpha_, v19);

    v20 = ParticipantView.infoView.getter();
    objc_msgSend(v20, sel_alpha);
    v22 = v21;

    if (v22 >= 0.5)
    {
      OUTLINED_FUNCTION_11_0();
      swift_release();
    }
    else
    {
      v23 = ParticipantView.infoView.getter();
      OUTLINED_FUNCTION_40_3(v23, sel_setHidden_);

      v24 = &v16[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate];
      OUTLINED_FUNCTION_1();
      if (MEMORY[0x1C3B752C0](v24))
      {
        v25 = *((_QWORD *)v24 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, Swift::Bool, uint64_t, uint64_t))(v25 + 40))(v16, _, ObjectType, v25);
        OUTLINED_FUNCTION_11_0();
        OUTLINED_FUNCTION_19();
        swift_unknownObjectRelease();
      }
      else
      {
        OUTLINED_FUNCTION_11_0();
        OUTLINED_FUNCTION_19();
      }
    }
  }
}

Swift::Void __swiftcall ParticipantView.setKickMemberButtonIsVisible(_:)(Swift::Bool a1)
{
  char *v1;
  void *v3;
  char v4;
  double v5;

  v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton];
  v4 = ~a1;
  objc_msgSend(v3, sel_setHidden_, !a1);
  v5 = 0.8;
  if (!a1)
    v5 = 0.0;
  objc_msgSend(v3, sel_setAlpha_, v5);
  if ((v4 & 1) != 0)
    OUTLINED_FUNCTION_18();
  else
    objc_msgSend(v1, sel_bringSubviewToFront_, v3);
}

void ParticipantView.updateGradientOverlayView(isHidden:alpha:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v6;
  id v7;
  id v8;

  v6 = a1;
  v7 = OUTLINED_FUNCTION_25_1(a1, sel_traitCollection);
  v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8)
    goto LABEL_6;
  if (v6 != 2)
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView), sel_setHidden_, v6 & 1);
  if ((a3 & 1) != 0)
LABEL_6:
    OUTLINED_FUNCTION_91();
  else
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView), sel_setAlpha_, *(double *)&a2);
}

void ParticipantView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(char a1, uint64_t a2, char a3, char a4)
{
  ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_0();
}

void ParticipantView.customCornerRadius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ParticipantView.customCornerRadius.didset();
}

void ParticipantView.transform.setter(_OWORD *a1)
{
  void *v1;
  objc_class *v3;
  __int128 v4;
  objc_super v5;
  objc_super v6;
  _OWORD v7[3];

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v7[2] = a1[2];
  objc_msgSendSuper2(&v6, sel_setTransform_, v7);
  v5.receiver = v1;
  v5.super_class = v3;
  objc_msgSendSuper2(&v5, sel_transform);
  ParticipantView.updateOverlayTransforms(with:)((double *)v7);
}

void ParticipantView.registerVideoLayers(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[22];
  _BYTE v16[176];
  _BYTE v17[176];
  _QWORD v18[22];

  type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView), sel_isHidden) & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    return;
  }
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v5, type metadata accessor for ParticipantViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      memset(v18, 0, 24);
      v18[3] = 1;
      OUTLINED_FUNCTION_54_47((uint64_t)v18);
      OUTLINED_FUNCTION_315(v11, type metadata accessor for ParticipantViewModel);
      goto LABEL_11;
    }
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v8 = (uint64_t)&v5[*(int *)(v7 + 64)];
    OUTLINED_FUNCTION_24_1(v17, &v5[*(int *)(v7 + 48)]);
    v9 = outlined destroy of ParticipantVideoOverlayView.ViewModel(v8);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel));
    v9 = (uint64_t)OUTLINED_FUNCTION_24_1(v17, &v5[*(int *)(v10 + 48)]);
  }
  OUTLINED_FUNCTION_315(v9, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  OUTLINED_FUNCTION_24_1(v18, v17);
LABEL_11:
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t)v15, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  if (v15[3] == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    OUTLINED_FUNCTION_24_1(v16, v15);
    ParticipantVideoView.registerVideoLayers(with:)((uint64_t)v16, v12, v13, v14);
    outlined destroy of ParticipantVideoView.ViewModel((uint64_t)v16);
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ParticipantVideoView.ViewModel?);
  OUTLINED_FUNCTION_91();
}

Swift::Void __swiftcall ParticipantView.configureWithRecordingLocalVideo(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  _QWORD *v5;
  char *v6;

  v2 = v1;
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((OUTLINED_FUNCTION_22_6() & 1) == 0
    || (v4 = OUTLINED_FUNCTION_72_31(),
        v5 = (_QWORD *)MEMORY[0x1E0DEEDD8],
        (*(void (**)(Swift::Bool))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v4) + 0xF0))(a1),
        v4,
        (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView), sel_isHidden) & 1) != 0)|| a1)
  {
    OUTLINED_FUNCTION_45_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_72_31();
    (*(void (**)(uint64_t))((*v5 & *(_QWORD *)v6) + 0x130))(1);

  }
}

Swift::Void __swiftcall ParticipantView.updateLayerTransform(to:)(CGAffineTransform *to)
{
  CGFloat tx;
  CGFloat ty;
  id v4;
  __int128 v5;
  __int128 v6;
  CATransform3D v7;
  CGAffineTransform m;

  v5 = *(_OWORD *)&to->c;
  v6 = *(_OWORD *)&to->a;
  tx = to->tx;
  ty = to->ty;
  v4 = OUTLINED_FUNCTION_25_1((uint64_t)to, sel_layer);
  *(_OWORD *)&m.a = v6;
  *(_OWORD *)&m.c = v5;
  m.tx = tx;
  m.ty = ty;
  CATransform3DMakeAffineTransform(&v7, &m);
  objc_msgSend(v4, sel_setTransform_, &v7);

  ParticipantView.updateOverlayTransforms(with:)(&to->a);
}

void ParticipantView.shouldOverrideShadowHidden.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden, (void (*)(uint64_t))ParticipantView.shouldOverrideShadowHidden.didset);
}

void ParticipantView.isExpanded.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ParticipantView.isExpanded.didset();
  OUTLINED_FUNCTION_9_0();
}

double ParticipantView.transform.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  double result;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v1 = objc_msgSendSuper2(&v13, sel_transform);
  *(_QWORD *)&result = OUTLINED_FUNCTION_58_42((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11).n128_u64[0];
  return result;
}

void ParticipantView.updateOverlayTransforms(with:)(double *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  CGAffineTransform *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  CGAffineTransform *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  void *v35;
  CGAffineTransform *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  SEL v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  void *v54;
  CGAffineTransform *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  SEL v64;
  CGAffineTransform v65;
  CGAffineTransform v66;
  CGAffineTransform v67;

  v3 = v1;
  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  objc_msgSend(OUTLINED_FUNCTION_25_1((uint64_t)a1, sel_traitCollection), sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_14_18();
  v10 = 0.0;
  if (!v2)
    v10 = closure #1 in ParticipantView.updateOverlayTransforms(with:)();
  v67.a = v4;
  v67.b = v5;
  v67.c = v6;
  v67.d = v7;
  v67.tx = v8;
  v67.ty = v9;
  v11 = CGAffineTransformInvert(&v66, &v67);
  OUTLINED_FUNCTION_48_53((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, *(uint64_t *)&v65.a, *(uint64_t *)&v65.b, *(uint64_t *)&v65.c, *(uint64_t *)&v65.d, *(uint64_t *)&v65.tx, *(uint64_t *)&v65.ty, *(__int128 *)&v66.a);
  v19 = CGAffineTransformRotate(&v66, &v67, v10);
  OUTLINED_FUNCTION_48_53((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, *(uint64_t *)&v65.a, *(uint64_t *)&v65.b, *(uint64_t *)&v65.c, *(uint64_t *)&v65.d, *(uint64_t *)&v65.tx, *(uint64_t *)&v65.ty, *(__int128 *)&v66.a);
  v27 = ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)&v67);
  if (v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant] == 1)
  {
    v35 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
    OUTLINED_FUNCTION_16_100(v27, v28, v29, v30, v31, v32, v33, v34, *(uint64_t *)&v65.a, *(uint64_t *)&v65.b, *(uint64_t *)&v65.c, *(uint64_t *)&v65.d, *(uint64_t *)&v65.tx, *(uint64_t *)&v65.ty, *(CGAffineTransform **)&v66.a, *(uint64_t *)&v66.b, *(uint64_t *)&v66.c, *(uint64_t *)&v66.d, *(uint64_t *)&v66.tx,
      *(uint64_t *)&v66.ty);
    v66 = v65;
    v36 = CGAffineTransformRotate(&v65, &v66, v10);
    *(_QWORD *)&v44 = OUTLINED_FUNCTION_22_94((uint64_t)v36, v37, v38, v39, v40, v41, v42, v43, *(__int128 *)&v65.a).n128_u64[0];
    objc_msgSend(v35, v45, v44);
  }
  objc_msgSend(objc_msgSend(v3, sel_traitCollection), sel_userInterfaceIdiom);
  OUTLINED_FUNCTION_14_18();
  if (!v2)
  {
    v54 = *(void **)&v3[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
    v55 = OUTLINED_FUNCTION_16_100(v46, v47, v48, v49, v50, v51, v52, v53, *(uint64_t *)&v65.a, *(uint64_t *)&v65.b, *(uint64_t *)&v65.c, *(uint64_t *)&v65.d, *(uint64_t *)&v65.tx, *(uint64_t *)&v65.ty, *(CGAffineTransform **)&v66.a, *(uint64_t *)&v66.b, *(uint64_t *)&v66.c, *(uint64_t *)&v66.d, *(uint64_t *)&v66.tx,
            *(uint64_t *)&v66.ty);
    *(_QWORD *)&v63 = OUTLINED_FUNCTION_22_94((uint64_t)v55, v56, v57, v58, v59, v60, v61, v62, *(__int128 *)&v65.a).n128_u64[0];
    objc_msgSend(v54, v64, v63);
  }
}

void (*ParticipantView.transform.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t v4;
  objc_super v6;
  objc_super v7;
  objc_super v8;

  v3 = (objc_super *)malloc(0xE0uLL);
  *a1 = v3;
  v3[13].receiver = v1;
  v4 = OUTLINED_FUNCTION_15_6();
  v3[13].super_class = (Class)v4;
  v3[11].receiver = v1;
  v3[11].super_class = (Class)v4;
  objc_msgSendSuper2(v3 + 11, sel_transform);
  v3[3] = v6;
  v3[4] = v7;
  v3[5] = v8;
  return ParticipantView.transform.modify;
}

void ParticipantView.transform.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 48);
  v4 = *a1 + 96;
  v6 = *(_QWORD *)(*a1 + 56);
  v5 = *(_QWORD *)(*a1 + 64);
  v8 = *(_QWORD *)(*a1 + 72);
  v7 = *(_QWORD *)(*a1 + 80);
  v9 = *(_QWORD *)(*a1 + 88);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)(v2 + 144) = *(_OWORD *)(v2 + 208);
    *(_QWORD *)(v2 + 96) = v3;
    *(_QWORD *)(v2 + 104) = v6;
    *(_QWORD *)(v2 + 112) = v5;
    *(_QWORD *)(v2 + 120) = v8;
    *(_QWORD *)(v2 + 128) = v7;
    *(_QWORD *)(v2 + 136) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 144), sel_setTransform_, v4);
  }
  else
  {
    v10 = *(_QWORD *)(v2 + 208);
    v11 = *(_QWORD *)(v2 + 216);
    *(_QWORD *)(v2 + 160) = v10;
    *(_QWORD *)(v2 + 168) = v11;
    *(_QWORD *)(v2 + 96) = v3;
    *(_QWORD *)(v2 + 104) = v6;
    *(_QWORD *)(v2 + 112) = v5;
    *(_QWORD *)(v2 + 120) = v8;
    *(_QWORD *)(v2 + 128) = v7;
    *(_QWORD *)(v2 + 136) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 160), sel_setTransform_, v4);
    *(_QWORD *)(v2 + 192) = v10;
    *(_QWORD *)(v2 + 200) = v11;
    v12 = objc_msgSendSuper2((objc_super *)(v2 + 192), sel_transform);
    OUTLINED_FUNCTION_58_42((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
    ParticipantView.updateOverlayTransforms(with:)((double *)v2);
  }
  free((void *)v2);
}

double closure #1 in ParticipantView.updateOverlayTransforms(with:)()
{
  id v0;
  char *v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = (char *)objc_msgSend(v0, sel_orientation);

  result = 0.0;
  if ((unint64_t)(v1 - 2) <= 2)
    return dbl_1BD669FF0[(_QWORD)(v1 - 2)];
  return result;
}

id ParticipantView.monogramView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView);
}

char *ParticipantView.infoView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  }
  else
  {
    v4 = v0;
    v5 = *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant);
    v6 = objc_allocWithZone((Class)type metadata accessor for ParticipantInfoView());
    v7 = ParticipantInfoView.init(localParticipant:)(v5);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void ParticipantView.infoView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView) = a1;

}

id ParticipantView.kickMemberButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton);
}

void ParticipantView.participantIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, a1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ParticipantView.delegate : ParticipantView@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for ParticipantView.delegate : ParticipantView(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void ParticipantView.delegate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void ParticipantView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantView.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD60B158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantView.isInRoster.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ParticipantView.isInRoster : ParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantView.isInRoster.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  swift_beginAccess();
  if (*v3 != v2)
    ParticipantView.isInRosterDidChange()();
}

void ParticipantView.isInRosterDidChange()()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  _BYTE *v4;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_layer);
  closure #1 in ParticipantView.updateShadowVisibility()(v2);

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster];
  swift_beginAccess();
  ParticipantMonogramView.isInRoster.setter(*v3);
  LOBYTE(v3) = *v3;
  v4 = (_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView]
               + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  *v4 = (_BYTE)v3;
  ParticipantVideoOverlayView.isInRoster.didset();
}

void ParticipantView.isInRoster.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantView.isInRoster.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ParticipantView.isInRoster.setter);
}

void ParticipantView.shouldOverrideShadowHidden.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ParticipantView.shouldOverrideShadowHidden : ParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantView.shouldOverrideShadowHidden.didset(char a1)
{
  char *v1;
  int v2;
  char *v3;
  id v4;

  v2 = a1 & 1;
  v3 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden];
  swift_beginAccess();
  if (*v3 != v2)
  {
    v4 = objc_msgSend(v1, sel_layer);
    closure #1 in ParticipantView.updateShadowVisibility()(v4);

  }
}

void ParticipantView.shouldOverrideShadowHidden.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[3] = v1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
  OUTLINED_FUNCTION_1();
  *((_BYTE *)v2 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantView.shouldOverrideShadowHidden.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))ParticipantView.shouldOverrideShadowHidden.setter);
}

uint64_t ParticipantView.wantsShadow.getter()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  _BYTE *v3;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  swift_beginAccess();
  if ((*v1 & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden);
    swift_beginAccess();
    v2 = *v3 ^ 1;
  }
  return v2 & 1;
}

double ParticipantView.customCornerRadius.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius;
  OUTLINED_FUNCTION_1();
  return *(double *)v1;
}

double key path getter for ParticipantView.customCornerRadius : ParticipantView@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void ParticipantView.customCornerRadius.didset()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  double *v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;

  v1 = v0;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView);
  v5 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius);
  if (v2)
  {
    OUTLINED_FUNCTION_1();
    v6 = *v5;
    v7 = v3;
    v8 = v4;
    v2 = v2;
    objc_msgSend(v2, sel__setContinuousCornerRadius_, v6);
  }
  else
  {
    v9 = v3;
    v10 = v4;
  }
  OUTLINED_FUNCTION_1();
  objc_msgSend(v3, sel__setContinuousCornerRadius_, *v5);
  objc_msgSend(v4, sel__setContinuousCornerRadius_, *v5);

  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                       + OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView))
                                 + 0x88))(*v5);
  v12 = *(_QWORD *)v5;
  v13 = (_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView)
                 + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_customCornerRadius);
  OUTLINED_FUNCTION_2_0();
  *v13 = v12;
  ParticipantMonogramView.customCornerRadius.didset();
  v14 = OUTLINED_FUNCTION_72_31();
  (*(void (**)(double))((*v11 & *(_QWORD *)v14) + 0xC0))(*v5);

}

void ParticipantView.customCornerRadius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantView.customCornerRadius.modify()
{
  InCallControlsViewController.topInset.modify();
}

void ParticipantView.isExpanded.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for ParticipantView.isExpanded : ParticipantView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantView.isExpanded.didset()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  _BYTE *v3;

  v1 = v0;
  v2 = ParticipantView.infoView.getter();
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded);
  OUTLINED_FUNCTION_1();
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2) + 0xA8))(*v3);

  if ((*v3 & 1) == 0)
    ParticipantView.hideAlert()();
  OUTLINED_FUNCTION_9_0();
}

uint64_t ParticipantView.hideAlert()()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  result = (uint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView), sel_isHidden);
  if ((result & 1) == 0)
  {
    v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v3 = (void *)objc_opt_self();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = partial apply for closure #1 in ParticipantView.hideAlert();
    *(_QWORD *)(v4 + 24) = v2;
    v15 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
    v16 = v4;
    v5 = MEMORY[0x1E0C809B0];
    v11 = MEMORY[0x1E0C809B0];
    v12 = 1107296256;
    v13 = thunk for @escaping @callee_guaranteed () -> ();
    v14 = &block_descriptor_42_0;
    v6 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v15 = partial apply for closure #3 in ParticipantView.hideAlert();
    v16 = v7;
    v11 = v5;
    v12 = 1107296256;
    v13 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    v14 = &block_descriptor_46;
    v8 = _Block_copy(&v11);
    swift_release();
    objc_msgSend(v3, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v6, v8, 0.15, 0.0);
    _Block_release(v8);
    _Block_release(v6);
    v9 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, sel_invalidate);

    }
    return swift_release();
  }
  return result;
}

void ParticipantView.isExpanded.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ParticipantView.isExpanded.modify()
{
  InCallControlsViewController.topInset.modify();
}

char *ParticipantView.init(frame:localParticipant:)(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  double v26;
  objc_super *v27;
  SEL v28;
  id v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, _UNKNOWN **);
  char *v52;
  id v53;
  char *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  Class isa;
  char *v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  id v88;
  id v89;
  double v90;
  double v91;
  double v92;
  double v93;
  void *v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  void *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t ObjectType;
  void *v104;
  void *v105;
  void *v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unsigned __int8 v119[24];
  ValueMetadata *v120;
  _UNKNOWN **v121;

  v3 = OUTLINED_FUNCTION_15_6();
  v4 = type metadata accessor for NSNotificationCenter.Publisher();
  v113 = *(_QWORD *)(v4 - 8);
  v114 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v112 = v5;
  v6 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  v119[0] = 0;
  v10 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(_QWORD *)&v8[v9] = ParticipantMonogramView.init(colorStyle:)(v119);
  v11 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView;
  v12 = objc_allocWithZone((Class)type metadata accessor for ParticipantVideoView());
  *(_QWORD *)&v8[v11] = OUTLINED_FUNCTION_19_85(v12);
  v13 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  v14 = objc_allocWithZone((Class)type metadata accessor for ParticipantAlertView());
  *(_QWORD *)&v8[v13] = OUTLINED_FUNCTION_19_85(v14);
  v15 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView;
  v16 = objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView());
  *(_QWORD *)&v8[v15] = OUTLINED_FUNCTION_19_85(v16);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView] = 0;
  v17 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView;
  type metadata accessor for ParticipantBorderView();
  v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v8[v17] = OUTLINED_FUNCTION_19_85(v18);
  v19 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  *(_QWORD *)&v8[v19] = OUTLINED_FUNCTION_19_85(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  v20 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  type metadata accessor for ParticipantViewButton();
  v120 = &type metadata for ImageNames.ParticipantView;
  v121 = &protocol witness table for ImageNames.ParticipantView;
  v119[0] = 4;
  *(_QWORD *)&v8[v20] = ParticipantViewButton.__allocating_init(imageName:)((uint64_t)v119);
  v21 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  v22 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  *(_QWORD *)&v8[v21] = OUTLINED_FUNCTION_19_85(v22);
  v23 = &v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  UUID.init()();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = 0;
  v24 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_7(v24);
  OUTLINED_FUNCTION_40_4((uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate]);
  v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster] = 0;
  v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius] = 0;
  v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded] = 0;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))() & 1) != 0)
    v25 = 0;
  else
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC4028]), sel_initWithPrivateStyle_, 2030);
  *(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView] = v25;
  v8[OBJC_IVAR____TtC15ConversationKit15ParticipantView_localParticipant] = a1 & 1;

  v117 = v8;
  v118 = v3;
  v26 = OUTLINED_FUNCTION_15_0();
  v29 = objc_msgSendSuper2(v27, v28, v26);
  objc_opt_self();
  v30 = (char *)v29;
  v31 = OUTLINED_FUNCTION_60_34();
  OUTLINED_FUNCTION_48_1(v30, sel_setBackgroundColor_);

  v32 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  v33 = *(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320);
  v34 = *(id *)&v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView];
  if ((v33() & 1) != 0)
  {
    if (one-time initialization token for background != -1)
      swift_once();
    v35 = (id)static Colors.ParticipantViews.background;
  }
  else
  {
    v35 = OUTLINED_FUNCTION_60_34();
  }
  v36 = v35;
  OUTLINED_FUNCTION_48_1(v34, sel_setBackgroundColor_);

  objc_msgSend(v30, sel_addSubview_, *(_QWORD *)&v30[v32]);
  v37 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  v38 = *(void **)&v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
  v39 = &v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster];
  OUTLINED_FUNCTION_1();
  LOBYTE(v39) = *v39;
  v40 = v38;
  ParticipantMonogramView.isInRoster.setter((char)v39);

  v41 = *(_QWORD *)&v30[v37] + OBJC_IVAR____TtC15ConversationKit23ParticipantMonogramView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v41 + 8) = &protocol witness table for ParticipantView;
  swift_unknownObjectWeakAssign();
  v42 = *(_QWORD *)&v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_backgroundEffectsView];
  if (v42)
    objc_msgSend(v30, sel_insertSubview_atIndex_, v42, 0);
  v43 = *(void **)&v30[v32];
  OUTLINED_FUNCTION_48_1(v43, sel_addSubview_);
  v44 = *(void **)&v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView];
  objc_msgSend(v44, sel_setAlpha_, 0.0);
  v45 = *(id *)&v30[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  v46 = v44;
  OUTLINED_FUNCTION_40_3(v45, sel_setHidden_);
  OUTLINED_FUNCTION_40_3(v45, sel_setClipsToBounds_);
  OUTLINED_FUNCTION_48_1(v43, sel_addSubview_);

  v47 = v46;
  OUTLINED_FUNCTION_40_3(v47, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);
  OUTLINED_FUNCTION_40_3(v47, sel_setClipsToBounds_);
  objc_msgSend(*(id *)&v30[v32], sel_addSubview_, v47);

  v48 = OUTLINED_FUNCTION_49_54();
  objc_msgSend(v48, sel_setAlpha_, 0.0);

  v49 = OUTLINED_FUNCTION_49_54();
  OUTLINED_FUNCTION_40_3(v49, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);

  v50 = OUTLINED_FUNCTION_49_54();
  v51 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v50) + 0x108);
  v52 = v30;
  v51(v30, &protocol witness table for ParticipantView);

  v53 = *(id *)&v30[v32];
  v54 = ParticipantView.infoView.getter();
  OUTLINED_FUNCTION_48_1(v53, sel_addSubview_);

  v55 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  v56 = *(void **)&v52[OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView];
  objc_msgSend(v56, sel_setAlpha_, 0.0);
  OUTLINED_FUNCTION_40_3(v56, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);
  OUTLINED_FUNCTION_18_4(v56, sel_setUserInteractionEnabled_);
  objc_msgSend(*(id *)&v30[v32], sel_addSubview_, v56);
  v57 = (void *)objc_opt_self();
  v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v58 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v58 + 16) = xmmword_1BD644B60;
  v59 = objc_msgSend(v56, sel_centerXAnchor);
  v60 = OUTLINED_FUNCTION_2_11((uint64_t)v59, sel_centerXAnchor);
  v61 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v60);

  *(_QWORD *)(v58 + 32) = v61;
  v62 = objc_msgSend(*(id *)&v52[v55], sel_centerYAnchor);
  v63 = OUTLINED_FUNCTION_2_11((uint64_t)v62, sel_centerYAnchor);
  v64 = OUTLINED_FUNCTION_39_4((uint64_t)v63, sel_constraintEqualToAnchor_);

  *(_QWORD *)(v58 + 40) = v64;
  v65 = objc_msgSend(*(id *)&v52[v55], sel_widthAnchor);
  v66 = OUTLINED_FUNCTION_2_11((uint64_t)v65, sel_widthAnchor);
  v67 = OUTLINED_FUNCTION_39_4((uint64_t)v66, sel_constraintLessThanOrEqualToAnchor_);

  *(_QWORD *)(v58 + 48) = v67;
  OUTLINED_FUNCTION_45_50();
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_48_1(v57, sel_activateConstraints_);

  OUTLINED_FUNCTION_18_4(*(id *)&v52[v55], sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v69 = v52;
  v70 = objc_msgSend(v69, sel_layer);
  OUTLINED_FUNCTION_40_3(v70, sel_setShadowPathIsBounds_);

  v71 = *(void **)&v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView];
  OUTLINED_FUNCTION_18_4(v71, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_40_3(v71, sel_setHidden_);
  OUTLINED_FUNCTION_65(*(id *)&v30[v32], sel_addSubview_);
  v72 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  v73 = *(void **)&v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
  v74 = (void *)objc_opt_self();
  v75 = v73;
  v76 = objc_msgSend(v74, sel_systemFontOfSize_, 12.0);
  OUTLINED_FUNCTION_65(v75, sel_setFont_);

  v77 = *(id *)&v69[v72];
  v78 = OUTLINED_FUNCTION_5_39((uint64_t)v77, sel_redColor);
  OUTLINED_FUNCTION_48_1(v77, sel_setTextColor_);

  objc_msgSend(*(id *)&v69[v72], sel_setNumberOfLines_, 0);
  v79 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  v80 = *(id *)&v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton];
  v81 = OUTLINED_FUNCTION_5_39((uint64_t)v80, sel_blackColor);
  OUTLINED_FUNCTION_48_1(v80, sel_setTintColor_);

  v82 = *(void **)&v69[v79];
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_38_66();
  v83 = v82;
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #2 in ParticipantView.init(frame:localParticipant:), (uint64_t)v80);

  swift_release_n();
  v84 = *(void **)&v69[v79];
  objc_msgSend(v84, sel_setAlpha_, 0.0);
  OUTLINED_FUNCTION_40_3(v84, sel_setHidden_);
  OUTLINED_FUNCTION_65(v69, sel_addSubview_);
  v85 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  v86 = *(void **)&v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
  OUTLINED_FUNCTION_40_3(v86, (SEL)&selRef_configureForTripleDeviceWithZoomFactor_minimumZoomFactor_displayMinimumZoomFactor_maximumZoomFactor_displayMaximumZoomFactor_switchOverZoomFactor1_displaySwitchOverZoomFactor1_switchOverZoomFactor2_displaySwitchOverZoomFactor2_);
  OUTLINED_FUNCTION_18_4(v86, sel_setUserInteractionEnabled_);
  OUTLINED_FUNCTION_18_4(v86, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v87 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v87 + 16) = xmmword_1BD6443F0;
  v88 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
  v89 = v86;
  LODWORD(v90) = 1050514104;
  LODWORD(v91) = 1000812206;
  LODWORD(v92) = 1048863561;
  LODWORD(v93) = 1.0;
  *(_QWORD *)(v87 + 32) = objc_msgSend(v88, sel_initWithControlPoints__::, v90, v91, v92, v93);
  OUTLINED_FUNCTION_45_50();
  GradientView.interpolations.setter(v116);

  v94 = *(void **)&v69[v85];
  v95 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v95 + 16) = xmmword_1BD6441C0;
  v96 = v94;
  v97 = objc_msgSend(OUTLINED_FUNCTION_5_39((uint64_t)v96, sel_blackColor), sel_colorWithAlphaComponent_, 0.5);
  OUTLINED_FUNCTION_14_18();
  *(_QWORD *)(v95 + 32) = v88;
  *(_QWORD *)(v95 + 40) = OUTLINED_FUNCTION_5_39(v98, sel_clearColor);
  v116 = v95;
  specialized Array._endMutation()();
  v99 = v96;
  GradientView.colors.setter(v95);

  v100 = &v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate];
  OUTLINED_FUNCTION_1();
  v101 = MEMORY[0x1C3B752C0](v100);
  if (!v101
    || (v99 = (void *)v101,
        v102 = *((_QWORD *)v100 + 1),
        ObjectType = swift_getObjectType(),
        (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v102 + 56))(&v115, ObjectType, v102),
        OUTLINED_FUNCTION_10(),
        v115 == 2)
    || (v115 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_71();
    v106 = (void *)OUTLINED_FUNCTION_41_46();
    objc_msgSend(v106, sel_setStartPoint_, 0.5, 0.0);

    OUTLINED_FUNCTION_33_71();
    v105 = (void *)OUTLINED_FUNCTION_41_46();
    objc_msgSend(v105, sel_setEndPoint_, 0.5, 0.333333333, v111);
  }
  else
  {
    OUTLINED_FUNCTION_33_71();
    v104 = (void *)OUTLINED_FUNCTION_41_46();
    objc_msgSend(v104, sel_setStartPoint_, 0.5, 1.0);

    OUTLINED_FUNCTION_33_71();
    v105 = (void *)OUTLINED_FUNCTION_41_46();
    objc_msgSend(v105, sel_setEndPoint_, 0.5, 0.6, v111);
  }

  objc_msgSend(v69, sel_addSubview_, *(_QWORD *)&v69[v85]);
  v107 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v108 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  NSNotificationCenter.publisher(for:object:)();

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_38_66();
  lazy protocol witness table accessor for type NSNotificationCenter.Publisher and conformance NSNotificationCenter.Publisher();
  v109 = Publisher<>.sink(receiveValue:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
  *(_QWORD *)&v69[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = v109;
  swift_release();
  ParticipantView.isInRosterDidChange()();

  return v69;
}

uint64_t ParticipantView.didTapKickMember()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void closure #3 in ParticipantView.init(frame:localParticipant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  objc_super v5;
  __int128 v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    v5.receiver = v3;
    v5.super_class = (Class)type metadata accessor for ParticipantView();
    objc_msgSendSuper2(&v5, sel_transform);
    ParticipantView.updateOverlayTransforms(with:)((double *)&v6);

  }
}

void ParticipantView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ParticipantView.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  unsigned __int8 v19[24];
  ValueMetadata *v20;
  _UNKNOWN **v21;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView;
  *(_QWORD *)&v1[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F10]));
  v3 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView;
  v19[0] = 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  *(_QWORD *)&v1[v3] = ParticipantMonogramView.init(colorStyle:)(v19);
  v5 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView;
  v6 = objc_allocWithZone((Class)type metadata accessor for ParticipantVideoView());
  *(_QWORD *)&v1[v5] = OUTLINED_FUNCTION_70_0(v6);
  v7 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView;
  v8 = objc_allocWithZone((Class)type metadata accessor for ParticipantAlertView());
  *(_QWORD *)&v1[v7] = OUTLINED_FUNCTION_70_0(v8);
  v9 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView;
  v10 = objc_allocWithZone((Class)type metadata accessor for ParticipantVideoOverlayView());
  *(_QWORD *)&v1[v9] = OUTLINED_FUNCTION_70_0(v10);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView____lazy_storage___infoView] = 0;
  v11 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView;
  type metadata accessor for ParticipantBorderView();
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  *(_QWORD *)&v1[v11] = OUTLINED_FUNCTION_70_0(v12);
  v13 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel;
  *(_QWORD *)&v1[v13] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  v14 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton;
  type metadata accessor for ParticipantViewButton();
  v20 = &type metadata for ImageNames.ParticipantView;
  v21 = &protocol witness table for ImageNames.ParticipantView;
  v19[0] = 4;
  *(_QWORD *)&v1[v14] = ParticipantViewButton.__allocating_init(imageName:)((uint64_t)v19);
  v15 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView;
  v16 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  *(_QWORD *)&v1[v15] = OUTLINED_FUNCTION_70_0(v16);
  v17 = &v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_mostRecentViewModelHash];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  UUID.init()();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_orientationCancellable] = 0;
  v18 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_12_7(v18);
  OUTLINED_FUNCTION_40_4((uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate]);
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_shouldOverrideShadowHidden] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_isExpanded] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void ParticipantView.__deallocating_deinit()
{
  char *v0;
  objc_class *v1;
  void *v2;
  void *v3;
  objc_super v4;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideInfoViewTimer];
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer];
  if (v3)
    objc_msgSend(v3, sel_invalidate);
  v4.receiver = v0;
  v4.super_class = v1;
  objc_msgSendSuper2(&v4, sel_dealloc);
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall ParticipantView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantView._layout()();
}

id ParticipantView._layout()()
{
  char *v0;
  char *v1;
  id result;
  uint64_t inited;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  CGRect v39;
  CGRect v40;

  v1 = v0;
  objc_msgSend(v0, sel_bounds);
  result = (id)CGRectIsInfinite(v39);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    result = (id)CGRectIsEmpty(v40);
    if ((result & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BD64B8D0;
      v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_contentView];
      *(_QWORD *)(inited + 32) = v4;
      v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
      *(_QWORD *)(inited + 40) = v5;
      v6 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
      *(_QWORD *)(inited + 48) = v6;
      v7 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoOverlayView];
      *(_QWORD *)(inited + 56) = v7;
      v8 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_prominenceBorderView];
      *(_QWORD *)(inited + 64) = v8;
      v9 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
      *(_QWORD *)(inited + 72) = v9;
      v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView];
      *(_QWORD *)(inited + 80) = v10;
      v11 = v4;
      v12 = v5;
      v13 = v6;
      v14 = v7;
      v15 = v8;
      v16 = v9;
      v17 = v10;
      *(_QWORD *)(inited + 88) = ParticipantView.infoView.getter();
      specialized Array._endMutation()();
      v18 = inited;
      v19 = inited & 0xC000000000000001;
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v18 & 0xC000000000000001) == 0, v18);
      specialized Array._checkSubscript(_:wasNativeTypeChecked:)(7, (inited & 0xC000000000000001) == 0, inited);
      if ((inited & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1C3B73D18](0, inited);
      else
        v20 = *(id *)(inited + 32);
      v21 = v20;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v21, sel_setFrame_);

      if (v19)
        v22 = (id)MEMORY[0x1C3B73D18](1, v18);
      else
        v22 = *(id *)(v18 + 40);
      v23 = v22;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v23, sel_setFrame_);

      if (v19)
        v24 = (id)MEMORY[0x1C3B73D18](2, v18);
      else
        v24 = *(id *)(v18 + 48);
      v25 = v24;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v25, sel_setFrame_);

      if (v19)
        v26 = (id)MEMORY[0x1C3B73D18](3, v18);
      else
        v26 = *(id *)(v18 + 56);
      v27 = v26;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v27, sel_setFrame_);

      if (v19)
        v28 = (id)MEMORY[0x1C3B73D18](4, v18);
      else
        v28 = *(id *)(v18 + 64);
      v29 = v28;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v29, sel_setFrame_);

      if (v19)
        v30 = (id)MEMORY[0x1C3B73D18](5, v18);
      else
        v30 = *(id *)(v18 + 72);
      v31 = v30;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v31, sel_setFrame_);

      if (v19)
        v32 = (id)MEMORY[0x1C3B73D18](6, v18);
      else
        v32 = *(id *)(v18 + 80);
      v33 = v32;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v33, sel_setFrame_);

      if (v19)
        v34 = (id)MEMORY[0x1C3B73D18](7, v18);
      else
        v34 = *(id *)(v18 + 88);
      v35 = v34;
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v35, sel_setFrame_);
      swift_bridgeObjectRelease();

      v36 = objc_msgSend(v1, sel_traitCollection);
      v37 = objc_msgSend(v36, sel_userInterfaceIdiom);

      if (!v37)
      {
        v38 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_gradientOverlayView];
        objc_msgSend(v1, sel_bounds);
        objc_msgSend(v38, sel_setFrame_);
      }
      return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_kickMemberButton], sel_setFrame_, 10.0, 10.0, 32.0, 32.0);
    }
  }
  return result;
}

uint64_t ParticipantView.configureViewVisibility(for:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t j;
  id v36;
  void *v37;
  _QWORD v39[3];
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1E0C80A78](v4);
  i = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
  v9 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_monogramView];
  v10 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_videoView];
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  v43 = v8;
  specialized Array._endMutation()();
  _s15ConversationKit11ParticipantVWOcTm_2(a1, i, type metadata accessor for ParticipantViewModel);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v39[1] = v7;
      v23 = i
          + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantMonogramView.ViewModel))
                   + 48);
      v24 = *(void **)v23;
      v25 = *(_QWORD *)(v23 + 80);
      v40 = *(_QWORD *)(v23 + 72);
      v41 = v24;
      v39[2] = *(_QWORD *)(v23 + 96);
      v39[0] = v9;
      v26 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      outlined consume of AnsweringMachineCallStatus?(v40, v25);
      v19 = specialized MutableCollection._halfStablePartition(isSuffixElement:)(&v43, v1);
      if (v43 >> 62)
        goto LABEL_39;
      v27 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_11;
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel, ParticipantVideoOverlayView.ViewModel));
    v13 = *(_DWORD *)(v12 + 48);
    v14 = i + *(int *)(v12 + 64);
    v15 = v9;
    v16 = v10;
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v14);
  }
  else
  {
    v13 = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ParticipantViewModel.ParticipantDetails, ParticipantVideoView.ViewModel))
                    + 48);
    v17 = v9;
    v18 = v10;
  }
  outlined destroy of ParticipantVideoView.ViewModel(i + v13);
  outlined destroy of AccountUpdateNotice(i, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  v19 = specialized MutableCollection._halfStablePartition(isSuffixElement:)(&v43, v2);
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    i = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    i = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (i < v19)
  {
    __break(1u);
    goto LABEL_36;
  }
  specialized Array.replaceSubrange<A>(_:with:)();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BD6443F0;
  *(_QWORD *)(v20 + 32) = v10;
  v42 = v20;
  specialized Array._endMutation()();
  v21 = v42;
  v22 = v10;
  while (1)
  {
    v31 = v43;
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v19)
    {
      if (v19 < 1)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      for (i = 0; i != v19; ++i)
      {
        if ((v31 & 0xC000000000000001) != 0)
          v32 = (id)MEMORY[0x1C3B73D18](i, v31);
        else
          v32 = *(id *)(v31 + 8 * i + 32);
        v33 = v32;
        objc_msgSend(v32, sel_setHidden_, 1);

      }
    }
    swift_bridgeObjectRelease();
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v34)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v34 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v34)
        return swift_bridgeObjectRelease();
    }
    if (v34 >= 1)
      break;
LABEL_37:
    __break(1u);
    do
    {
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_11:
      ;
    }
    while (v27 < v19);
    specialized Array.replaceSubrange<A>(_:with:)();
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1BD6443F0;
    v29 = (void *)v39[0];
    *(_QWORD *)(v28 + 32) = v39[0];
    v42 = v28;
    specialized Array._endMutation()();
    v21 = v42;
    v30 = v29;
    outlined destroy of AccountUpdateNotice(i, type metadata accessor for ParticipantViewModel.ParticipantDetails);
  }
  for (j = 0; j != v34; ++j)
  {
    if ((v21 & 0xC000000000000001) != 0)
      v36 = (id)MEMORY[0x1C3B73D18](j, v21);
    else
      v36 = *(id *)(v21 + 8 * j + 32);
    v37 = v36;
    objc_msgSend(v36, sel_setHidden_, 0);

  }
  return swift_bridgeObjectRelease();
}

void closure #1 in ParticipantView.configure(with:)(char a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  if ((a1 & 1) != 0)
  {
    v2 = a2 + 16;
    swift_beginAccess();
    v3 = (void *)MEMORY[0x1C3B752C0](v2);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_setHidden_, 1);

    }
  }
}

Swift::Void __swiftcall ParticipantView.updateDebugOverlayLabel(text:)(Swift::String_optional text)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  const char *v5;

  if (text.value._object)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(text.value._countAndFlagsBits, (uint64_t)text.value._object, v2);
    v3 = objc_msgSend(v2, sel_superview);

    if (v3)
    {
      OUTLINED_FUNCTION_18();
      return;
    }
    OUTLINED_FUNCTION_65(v1, sel_addSubview_);
    v5 = sel_setNeedsLayout;
    v4 = v1;
  }
  else
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_debugLabel];
    v5 = sel_removeFromSuperview;
  }
  objc_msgSend(v4, v5);
}

void closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)(uint64_t a1, char a2)
{
  char *v3;
  double v4;
  char *v5;

  v3 = ParticipantView.infoView.getter();
  v5 = v3;
  v4 = 0.0;
  if ((a2 & 1) != 0)
    v4 = 1.0;
  objc_msgSend(v3, sel_setAlpha_, v4);

}

void closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(char a1, uint64_t a2, char a3)
{
  char *v5;
  double v6;
  double v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  if ((a1 & 1) != 0)
  {
    v5 = ParticipantView.infoView.getter();
    objc_msgSend(v5, sel_alpha);
    v7 = v6;

    if (v7 < 0.5)
    {
      v8 = ParticipantView.infoView.getter();
      objc_msgSend(v8, sel_setHidden_, 1);

      v9 = a2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_delegate;
      swift_beginAccess();
      if (MEMORY[0x1C3B752C0](v9))
      {
        v10 = *(_QWORD *)(v9 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 40))(a2, a3 & 1, ObjectType, v10);
        swift_unknownObjectRelease();
      }
    }
  }
}

id closure #1 in ParticipantView.updateShadowVisibility()(void *a1)
{
  id v2;
  double v3;
  id v4;
  id v5;

  if ((ParticipantView.wantsShadow.getter() & 1) != 0)
  {
    if (one-time initialization token for shadow != -1)
      swift_once();
    v2 = objc_msgSend((id)static Colors.ParticipantViews.shadow, sel_CGColor);
    objc_msgSend(a1, sel_setShadowColor_, v2);

    objc_msgSend(a1, sel_setShadowRadius_, 25.0);
    LODWORD(v3) = 1062501089;
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    v5 = objc_msgSend(v4, sel_CGColor);

    objc_msgSend(a1, sel_setShadowColor_, v5);
    LODWORD(v3) = 0;
  }
  return objc_msgSend(a1, sel_setShadowOpacity_, v3);
}

Swift::Void __swiftcall ParticipantView.showLivePhotosAlert(success:)(Swift::Bool success)
{
  id v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String_optional v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  unint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  if (success)
  {
    v9 = 0xE000000000000000;
    v3 = 0x80000001BD690770;
    v4 = 0xD000000000000027;
  }
  else
  {
    v4 = 0xD000000000000028;
    v9 = 0xE000000000000000;
    v3 = 0x80000001BD690740;
  }
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v7 = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, v5, (NSBundle)v2, v6, *(Swift::String *)(&v9 - 1));

  ParticipantView.showAlert(with:)(v8._countAndFlagsBits, (uint64_t)v8._object);
  swift_bridgeObjectRelease();
}

void ParticipantView.showAlert(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v5 = OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_hideAlertViewTimer);
  if (v6)
    objc_msgSend(v6, sel_invalidate);
  v7 = *(char **)(v2 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);
  v8 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
  swift_bridgeObjectRetain();
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(a1, a2, v8);
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setHidden_, 0);
  objc_msgSend(v7, sel_setAlpha_, 0.0);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = (void *)objc_opt_self();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = partial apply for closure #1 in ParticipantView.showAlert(with:);
  *(_QWORD *)(v11 + 24) = v9;
  v23 = (void (*)(uint64_t))partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  v24 = v11;
  v12 = MEMORY[0x1E0C809B0];
  v19 = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = thunk for @escaping @callee_guaranteed () -> ();
  v22 = &block_descriptor_31_2;
  v13 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_completion_, v13, 0, 0.25);
  _Block_release(v13);
  v14 = (void *)objc_opt_self();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = partial apply for closure #3 in ParticipantView.showAlert(with:);
  v24 = v15;
  v19 = v12;
  v20 = 1107296256;
  v21 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v22 = &block_descriptor_35_1;
  v16 = _Block_copy(&v19);
  swift_release();
  v17 = objc_msgSend(v14, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v16, 3.0);
  swift_release();
  _Block_release(v16);
  v18 = *(void **)(v2 + v5);
  *(_QWORD *)(v2 + v5) = v17;

}

void closure #2 in ParticipantView.init(frame:localParticipant:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  OUTLINED_FUNCTION_1();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    a3();

  }
  OUTLINED_FUNCTION_32();
}

void closure #1 in ParticipantView.showAlert(with:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

BOOL sub_1BD60DDD8(char *a1)
{
  double v1;
  id v3;

  if (a1)
  {
    v3 = *(id *)&a1[OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView];

    objc_msgSend(v3, sel_setAlpha_, v1);
  }
  return a1 == 0;
}

void closure #3 in ParticipantView.hideAlert()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);

    objc_msgSend(v5, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v2);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(id *)(v6 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_alertView);

    objc_msgSend(v8, sel_setHidden_, 1);
  }
}

id ParticipantView.__allocating_init(frame:)()
{
  objc_class *v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

void ParticipantView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void (*protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_isInRoster);
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *v4;
  return protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView;
}

void protocol witness for ParticipantTile.isInRoster.modify in conformance ParticipantView(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ParticipantView.isInRoster.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

void (*protocol witness for ParticipantTile.customCornerRadius.modify in conformance ParticipantView(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantView.customCornerRadius.modify;
}

void (*protocol witness for ParticipantTile.isExpanded.modify in conformance ParticipantView(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantView.isExpanded.modify;
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapToggleFocus()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD60E120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_63_32();
    OUTLINED_FUNCTION_42_58(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 8));
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapShutter(isEnabled:)(Swift::Bool isEnabled)
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD60E180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;

  if (!a1)
  {
    if ((v3 & 1) != 0)
      goto LABEL_6;
LABEL_9:
    ParticipantView.showLivePhotosAlert(success:)(0);
    return;
  }
  v4 = *(_QWORD *)(v2 + 8);
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, ObjectType, v4);
  OUTLINED_FUNCTION_10();
  if ((v3 & 1) != 0)
  {
    if ((v6 & 1) == 0)
LABEL_7:
      OUTLINED_FUNCTION_5_72();
LABEL_6:
    ParticipantView.showLivePhotosAlert(success:)(1);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_9;
}

Swift::Void __swiftcall ParticipantView.participantViewDidTapRing()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_72();
}

void sub_1BD60E258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_63_32();
    OUTLINED_FUNCTION_42_58(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 24));
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1BD60E280()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantView.configure(with:)(char a1)
{
  uint64_t v1;

  closure #1 in ParticipantView.configure(with:)(a1, v1);
}

uint64_t outlined consume of ParticipantMonogramView.ViewModel?(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;

  if (a3)
  {
    v11 = (void *)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return outlined consume of AnsweringMachineCallStatus?(a10, a11);
  }
  return result;
}

uint64_t sub_1BD60E330()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)()
{
  uint64_t v0;

  closure #1 in ParticipantView.setInfoViewIsVisible(_:animated:)(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void partial apply for closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(char a1)
{
  uint64_t v1;

  closure #2 in ParticipantView.setInfoViewIsVisible(_:animated:)(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void partial apply for closure #2 in ParticipantView.init(frame:localParticipant:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ParticipantView.init(frame:localParticipant:)(a1, v1, (void (*)(void))ParticipantView.didTapKickMember());
}

void partial apply for closure #3 in ParticipantView.init(frame:localParticipant:)(uint64_t a1)
{
  uint64_t v1;

  closure #3 in ParticipantView.init(frame:localParticipant:)(a1, v1);
}

void sub_1BD60E6E0(char *a1)
{
  ParticipantView.isInRoster.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD60E704(char *a1)
{
  ParticipantView.shouldOverrideShadowHidden.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD60E728(double *a1)
{
  ParticipantView.customCornerRadius.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD60E74C(char *a1)
{
  ParticipantView.isExpanded.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapToggleFocus(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapShutter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapRing(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewDidTapKickMember(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantView(_:didUpdateSashVisibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.participantViewShouldShowShutterTappedAlert(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ParticipantViewDelegate.layoutIdiom.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for ParticipantView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ParticipantView;
  if (!type metadata singleton initialization cache for ParticipantView)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for ParticipantView()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID?();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ParticipantView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantView.__allocating_init(frame:localParticipant:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

void partial apply for closure #1 in ParticipantView.showAlert(with:)()
{
  closure #1 in ParticipantView.showAlert(with:)();
}

uint64_t sub_1BD60E8F8()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #3 in ParticipantView.showAlert(with:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ParticipantView.init(frame:localParticipant:)(a1, v1, (void (*)(void))ParticipantView.hideAlert());
}

void partial apply for closure #1 in ParticipantView.hideAlert()()
{
  closure #1 in ParticipantView.showAlert(with:)();
}

void partial apply for closure #3 in ParticipantView.hideAlert()(uint64_t a1)
{
  uint64_t v1;

  closure #3 in ParticipantView.hideAlert()(a1, v1);
}

void ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:)(void *a1, char a2)
{
  swift_allocObject();
  ConversationControlsDialogButtonProvider.init(controlsManager:context:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsDialogButtonProvider.init(controlsManager:context:)(void *a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  void *v7;

  *(_QWORD *)(v2 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, 2);
  v4 = (void *)objc_opt_self();
  v5 = a1;
  swift_retain();
  ControlsButtonProvider.backgroundStyle.setter(objc_msgSend(v4, sel_secondarySystemFillColor), 0, 64);
  swift_retain();
  ControlsButtonProvider.prominentTitleFont.getter();
  v7 = v6;
  swift_release();
  ControlsButtonProvider.titleFont.setter(v7);
  swift_release();

  OUTLINED_FUNCTION_18();
}

void ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_164();
  __break(1u);
}

void ConversationControlsDialogButtonProvider.init(controlsManager:context:shape:)()
{
  OUTLINED_FUNCTION_0_164();
  __break(1u);
}

uint64_t ConversationControlsDialogButtonProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v1);
  return v0;
}

uint64_t ConversationControlsDialogButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  v0 = ControlsButtonProvider.deinit();
  OUTLINED_FUNCTION_1_24(v0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConversationControlsDialogButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsDialogButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsDialogButtonProvider.__allocating_init(controlsManager:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

UIImage_optional __swiftcall UIImage.init(bundleIdentifier:usingIconCrop:)(Swift::String bundleIdentifier, Swift::Bool usingIconCrop)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  Swift::Bool v10;
  CGImage *v11;
  objc_class *Width;
  id v13;
  id v14;
  id v15;
  CGImage *v16;
  double v17;
  double v18;
  size_t BitsPerComponent;
  CGColorSpace *v20;
  uint32_t BitmapInfo;
  CGContext *v22;
  CGContext *v23;
  CGFloat x;
  CGFloat y;
  CGFloat v26;
  CGFloat height;
  CGImage *Image;
  CGImageRef v29;
  uint64_t v30;
  UIImage_optional result;
  __C::CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  object = bundleIdentifier._object;
  countAndFlagsBits = bundleIdentifier._countAndFlagsBits;
  v5 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  OUTLINED_FUNCTION_35_0();
  v13 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(countAndFlagsBits, (uint64_t)object, 1);

  if (!v13)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
    OUTLINED_FUNCTION_35_0();
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_DWORD *)v9 = 136315138;
      OUTLINED_FUNCTION_35_0();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v7, v8, "Unable to acquire app record for bundleIdentifier:%s, app is uninstalled.", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, *MEMORY[0x1E0D3A870]);
  type metadata accessor for ISIcon();
  v15 = ISIcon.__allocating_init(bundleIdentifier:)(countAndFlagsBits, (uint64_t)object);
  v11 = (CGImage *)objc_msgSend(v15, sel_prepareImageForDescriptor_, v14);

  if (!v11)
  {
LABEL_27:

    goto LABEL_9;
  }
  v16 = (CGImage *)-[CGImage CGImage](v11, sel_CGImage);

  if (!v16)
  {

    goto LABEL_8;
  }
  if (!usingIconCrop)
  {
    v11 = (CGImage *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v16);
    goto LABEL_26;
  }
  Width = (objc_class *)CGImageGetWidth(v16);
  v17 = (double)(uint64_t)Width;
  v18 = (double)(uint64_t)Width / 0.79;
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  BitsPerComponent = CGImageGetBitsPerComponent(v16);
  v20 = CGImageGetColorSpace(v16);
  if (!v20)
  {
    Width = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
    v20 = Width;
    if (!Width)
      goto LABEL_35;
  }
  BitmapInfo = CGImageGetBitmapInfo(v16);
  v22 = CGBitmapContextCreate(0, (uint64_t)v18, (uint64_t)v18, BitsPerComponent, 0, v20, BitmapInfo);

  if (v22)
  {
    CGContextSetInterpolationQuality(v22, kCGInterpolationHigh);
    v23 = v22;
    v32.origin.x = 0.0;
    v32.origin.y = 0.0;
    v32.size.width = v18;
    v32.size.height = v18;
    CGContextRef.draw(_:in:byTiling:)(v16, v32, 0);

  }
  v33.origin.x = 0.0;
  v33.origin.y = 0.0;
  v33.size.width = v18;
  v33.size.height = v18;
  v34 = CGRectInset(v33, (v18 - v17) * 0.5, (v18 - v17) * 0.5);
  if (v22)
  {
    x = v34.origin.x;
    y = v34.origin.y;
    v26 = v34.size.width;
    height = v34.size.height;
    Image = CGBitmapContextCreateImage(v22);
    v11 = Image;
    if (!Image)
    {

      goto LABEL_9;
    }
    v35.origin.x = x;
    v35.origin.y = y;
    v35.size.width = v26;
    v35.size.height = height;
    v29 = CGImageCreateWithImageInRect(Image, v35);

    if (v29)
    {
      v11 = (CGImage *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v29);

      v16 = v22;
LABEL_26:

      goto LABEL_27;
    }

  }
  else
  {

  }
LABEL_8:
  v11 = 0;
LABEL_9:
  Width = v11;
LABEL_36:
  result.value.super.isa = Width;
  result.is_nil = v10;
  return result;
}

id ISIcon.__allocating_init(bundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithBundleIdentifier_, v5);

  return v6;
}

id @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

unint64_t type metadata accessor for ISIcon()
{
  unint64_t result;

  result = lazy cache variable for type metadata for ISIcon;
  if (!lazy cache variable for type metadata for ISIcon)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for ISIcon);
  }
  return result;
}

uint64_t specialized OptionSet.union(_:)(unsigned int a1, int a2)
{
  return a2 | a1;
}

uint64_t specialized SetAlgebra<>.init(arrayLiteral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    v3 = (int *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~(_DWORD)v2) == 0)
        v4 = 0;
      v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t specialized OptionSet<>.remove(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

unint64_t specialized OptionSet<>.remove(_:)(unsigned int a1)
{
  int *v1;
  int v2;
  int v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *v1 & a1;
  if (v3)
  {
    *v1 = v2 & ~a1;
    v4 = v2 & a1;
  }
  else
  {
    v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

void specialized Sequence.contains(where:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  unsigned __int8 v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  void *v24;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for TUConversationParticipant();
    lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v1 = v19;
    v18 = v20;
    v2 = v21;
    v3 = v22;
    v4 = v23;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_32;
    type metadata accessor for TUConversationParticipant();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v24;
    swift_unknownObjectRelease();
    if (!v24)
      goto LABEL_32;
LABEL_31:
    v15 = objc_msgSend(v11, sel_capabilities);
    v16 = objc_msgSend(v15, sel_isGondolaCallingAvailable);

    if ((v16 & 1) == 0)
      goto LABEL_32;
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_32;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v17)
      goto LABEL_32;
    v13 = *(_QWORD *)(v18 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v17)
        goto LABEL_32;
      v13 = *(_QWORD *)(v18 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v17)
          goto LABEL_32;
        v13 = *(_QWORD *)(v18 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v17)
            goto LABEL_32;
          v13 = *(_QWORD *)(v18 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v17)
              goto LABEL_32;
            v13 = *(_QWORD *)(v18 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v14 < v17)
              {
                v13 = *(_QWORD *)(v18 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              outlined consume of [String : Application].Iterator._Variant();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t PeoplePickerViewModel.__allocating_init(activeConversation:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 1;
  *(_QWORD *)(result + 32) = a1;
  return result;
}

Swift::Bool __swiftcall PeoplePickerViewModel.isWebCapableAvailable(for:)(Swift::String a1)
{
  PeoplePickerViewModel.isWebCapableAvailable(for:)();
}

uint64_t PeoplePickerViewModel.update(for:style:)(uint64_t a1, char *a2)
{
  char v2;
  char v4;

  v2 = *a2;
  PeoplePickerViewModel.updateRecipientsState(for:)(a1);
  v4 = v2;
  return PeoplePickerViewModel.updateExplanationType(for:)(&v4);
}

Swift::Bool __swiftcall PeoplePickerViewModel.isModernAvailable(for:)(Swift::String a1)
{
  PeoplePickerViewModel.isWebCapableAvailable(for:)();
}

void PeoplePickerViewModel.isWebCapableAvailable(for:)()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  OUTLINED_FUNCTION_3_132();
}

void sub_1BD60F5E0(uint64_t a1)
{
  void *v1;
  void *v2;

  OUTLINED_FUNCTION_1_156(a1);

  OUTLINED_FUNCTION_18();
}

Swift::Bool __swiftcall PeoplePickerViewModel.isMultiwayAvailable(for:)(Swift::String a1)
{
  PeoplePickerViewModel.isMultiwayAvailable(for:)();
}

Swift::Bool __swiftcall PeoplePickerViewModel.isAudioAvailable(for:)(Swift::String a1)
{
  PeoplePickerViewModel.isMultiwayAvailable(for:)();
}

Swift::Bool __swiftcall PeoplePickerViewModel.isVideoAvailable(for:)(Swift::String a1)
{
  PeoplePickerViewModel.isMultiwayAvailable(for:)();
}

void PeoplePickerViewModel.isMultiwayAvailable(for:)()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  OUTLINED_FUNCTION_3_132();
}

void sub_1BD60F660(uint64_t a1)
{
  void *v1;
  void *v2;

  OUTLINED_FUNCTION_1_156(a1);

  OUTLINED_FUNCTION_18();
}

BOOL PeoplePickerExplanationType.shouldIgnoreEmails.getter(char a1)
{
  return a1 != 1;
}

uint64_t specialized OptionSet<>.update(with:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

unint64_t specialized OptionSet<>.update(with:)(unsigned int a1)
{
  int *v1;
  int v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t specialized SetAlgebra.subtracting(_:)(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t specialized SetAlgebra.subtracting(_:)(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL specialized SetAlgebra.isDisjoint(with:)(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL specialized SetAlgebra.isDisjoint(with:)(int a1, int a2)
{
  return (a2 & a1) == 0;
}

void protocol witness for OptionSet.init(rawValue:) in conformance PeoplePickerRecipientsState(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  TPNumberPadCharacter.rawValue.getter(*a1);
  *a2 = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance PeoplePickerRecipientsState@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = TPNumberPadCharacter.rawValue.getter(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance PeoplePickerRecipientsState@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = specialized SetAlgebra<>.init(arrayLiteral:)(a1);
  *a2 = result;
  return result;
}

ConversationKit::PeoplePickerExplanationType_optional __swiftcall PeoplePickerExplanationType.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4)
    LOBYTE(rawValue) = 4;
  return (ConversationKit::PeoplePickerExplanationType_optional)rawValue;
}

uint64_t PeoplePickerExplanationType.rawValue.getter(uint64_t result)
{
  return result;
}

ConversationKit::PeoplePickerExplanationType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance PeoplePickerExplanationType@<W0>(Swift::Int *a1@<X0>, ConversationKit::PeoplePickerExplanationType_optional *a2@<X8>)
{
  ConversationKit::PeoplePickerExplanationType_optional result;

  result.value = PeoplePickerExplanationType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance PeoplePickerExplanationType(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = PeoplePickerExplanationType.rawValue.getter(*v1);
  OUTLINED_FUNCTION_0();
}

uint64_t PeoplePickerViewModel.explanationType.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PeoplePickerViewModel.init(activeConversation:)(uint64_t a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = a1;
  return v1;
}

uint64_t PeoplePickerViewModel.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PeoplePickerViewModel.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t PeoplePickerViewModel.updateRecipientsState(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;

  if (*(_QWORD *)(a1 + 16) == 1)
  {
    specialized Collection.first.getter(a1);
    if (v3)
    {
      v4 = (void *)MEMORY[0x1C3B72E00]();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    v5 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v5)
    {
      v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v8 = v7;

      v9._countAndFlagsBits = v6;
      v9._object = v8;
      PeoplePickerViewModel.isVideoAvailable(for:)(v9);
    }
  }
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v14 = 0;
  v15 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v14 << 6);
LABEL_26:
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain();
    v24 = (void *)MEMORY[0x1C3B72E00](v22, v23);
    swift_bridgeObjectRelease();
    v25 = (id)TUCopyIDSCanonicalAddressForDestinationID();

    if (v25)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v28 = v27;

      v29._countAndFlagsBits = v26;
      v29._object = v28;
      PeoplePickerViewModel.isMultiwayAvailable(for:)(v29);
    }
  }
  v18 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v18 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v10 + 8 * v18);
  ++v14;
  if (v19)
    goto LABEL_25;
  v14 = v18 + 1;
  if (v18 + 1 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v10 + 8 * v14);
  if (v19)
    goto LABEL_25;
  v14 = v18 + 2;
  if (v18 + 2 >= v15)
    goto LABEL_28;
  v19 = *(_QWORD *)(v10 + 8 * v14);
  if (v19)
  {
LABEL_25:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
    goto LABEL_26;
  }
  v20 = v18 + 3;
  if (v20 < v15)
  {
    v19 = *(_QWORD *)(v10 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v14 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_31;
        if (v14 >= v15)
          goto LABEL_28;
        v19 = *(_QWORD *)(v10 + 8 * v14);
        ++v20;
        if (v19)
          goto LABEL_25;
      }
    }
    v14 = v20;
    goto LABEL_25;
  }
LABEL_28:
  swift_release();
  if (one-time initialization token for conversationKit == -1)
    goto LABEL_29;
LABEL_32:
  swift_once();
LABEL_29:
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BD6441D0;
  v31 = String.init<A>(reflecting:)();
  v33 = v32;
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v33;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  *(_QWORD *)(v1 + 24) = 1;
  return result;
}

uint64_t PeoplePickerViewModel.updateExplanationType(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v7;
  char v8;
  uint64_t result;
  Swift::Bool v10;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (!*a1)
  {
    if ((v3 & 8) != 0)
      v8 = 1;
    else
      v8 = 2;
    if ((v3 & 0x10) != 0)
      v7 = v8;
    else
      v7 = 0;
    goto LABEL_27;
  }
  v4 = *(void **)(v1 + 32);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v5, sel_link);

    if ((v3 & 0x10) == 0 && !v6)
      goto LABEL_5;
    if ((v3 & 8) != 0)
    {

      if (v6)
        v7 = 1;
      else
        v7 = 3;
      goto LABEL_27;
    }
    if ((v3 & 4) != 0)
    {

      if (v6)
        v7 = 0;
      else
        v7 = 3;
      goto LABEL_27;
    }
    if ((v3 & 0x10) != 0)
    {
      v10 = TUConversation.isGondolaCallingAvailable()();

      if (v10)
        v7 = 2;
      else
        v7 = 3;
    }
    else
    {
LABEL_5:

      v7 = 0;
    }
LABEL_27:
    result = swift_beginAccess();
    *(_BYTE *)(v2 + 16) = v7;
    return result;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  os_log(_:dso:log:type:_:)();
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

uint64_t protocol witness for PeoplePickerViewModelProtocol.update(for:style:) in conformance PeoplePickerViewModel(uint64_t a1, char *a2)
{
  return PeoplePickerViewModel.update(for:style:)(a1, a2);
}

uint64_t specialized closure #1 in PeoplePickerViewModel.updateRecipientsState(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t result;

  if ((a3 & 1) != 0)
    PeoplePickerViewModel.isModernAvailable(for:)(*(Swift::String *)&a1);
  swift_beginAccess();
  v6 = *a5 | 0x10;
  result = swift_beginAccess();
  *a5 = v6;
  return result;
}

Swift::Bool __swiftcall TUConversation.isGondolaCallingAvailable()()
{
  void *v0;
  id v1;
  uint64_t v2;
  char v3;

  v1 = objc_msgSend(v0, sel_activeRemoteParticipants);
  type metadata accessor for TUConversationParticipant();
  lazy protocol witness table accessor for type TUConversationParticipant and conformance NSObject();
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.contains(where:)(v2);
  LOBYTE(v1) = v3;
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

unint64_t type metadata accessor for TUConversationParticipant()
{
  unint64_t result;

  result = lazy cache variable for type metadata for TUConversationParticipant;
  if (!lazy cache variable for type metadata for TUConversationParticipant)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for TUConversationParticipant);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType;
  if (!lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerExplanationType, &type metadata for PeoplePickerExplanationType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerExplanationType and conformance PeoplePickerExplanationType);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PeoplePickerExplanationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD60FFC4 + 4 * byte_1BD66A065[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD60FFF8 + 4 * byte_1BD66A060[v4]))();
}

uint64_t sub_1BD60FFF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD610000(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD610008);
  return result;
}

uint64_t sub_1BD610014(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD61001CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD610020(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD610028(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeoplePickerExplanationType()
{
  return &type metadata for PeoplePickerExplanationType;
}

uint64_t dispatch thunk of PeoplePickerViewModelProtocol.update(for:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for PeoplePickerViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for PeoplePickerViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeoplePickerViewModel.__allocating_init(activeConversation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *type metadata accessor for PeoplePickerRecipientsState()
{
  return &unk_1E7645B18;
}

unint64_t lazy protocol witness table accessor for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerRecipientsState, &unk_1E7645B18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerRecipientsState, &unk_1E7645B18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerRecipientsState, &unk_1E7645B18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState;
  if (!lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PeoplePickerRecipientsState, &unk_1E7645B18);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PeoplePickerRecipientsState and conformance PeoplePickerRecipientsState);
  }
  return result;
}

uint64_t ConversationRemoteParticipantsStateProvider.__allocating_init(remoteParticipants:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)();
  return v0;
}

Swift::Void __swiftcall ConversationRemoteParticipantsStateProvider.onParticipantsChanged(_:)(Swift::OpaquePointer a1)
{
  CurrentValueSubject.send(_:)();
}

uint64_t ConversationRemoteParticipantsStateProvider.onCaptionsUpdated(for:)()
{
  return PassthroughSubject.send(_:)();
}

void ConversationRemoteParticipantsStateProvider.participants.getter()
{
  CurrentValueSubject.value.getter();
  OUTLINED_FUNCTION_36();
}

uint64_t ConversationRemoteParticipantsStateProvider.participantsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>>);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *(_QWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type CurrentValueSubject<[Participant], Never> and conformance CurrentValueSubject<A, B>, &demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>, MEMORY[0x1E0C95FB8]);
  lazy protocol witness table accessor for type [Participant] and conformance <A> [A]();
  Publisher<>.removeDuplicates()();
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<CurrentValueSubject<[Participant], Never>>, MEMORY[0x1E0C958E0]);
  v5 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t ConversationRemoteParticipantsStateProvider.participantCaptionsUpdatePublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<Participant, Never>);
  lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type PassthroughSubject<Participant, Never> and conformance PassthroughSubject<A, B>, &demangling cache variable for type metadata for PassthroughSubject<Participant, Never>, MEMORY[0x1E0C95F48]);
  return Publisher.eraseToAnyPublisher()();
}

uint64_t ConversationRemoteParticipantsStateProvider.stateManager.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v0 + 32);
}

uint64_t ConversationRemoteParticipantsStateProvider.stateManager.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ConversationRemoteParticipantsStateProvider.stateManager.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_0();
  v4 = MEMORY[0x1C3B752C0](v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return IDSCapabilitiesChecker.delegate.modify;
}

void ConversationRemoteParticipantsStateProvider.init(remoteParticipants:)()
{
  _QWORD *v0;

  v0[5] = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CurrentValueSubject<[Participant], Never>);
  OUTLINED_FUNCTION_14_0();
  v0[2] = CurrentValueSubject.init(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<Participant, Never>);
  OUTLINED_FUNCTION_14_0();
  v0[3] = PassthroughSubject.init()();
  OUTLINED_FUNCTION_36();
}

unint64_t lazy protocol witness table accessor for type [Participant] and conformance <A> [A]()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type [Participant] and conformance <A> [A];
  if (!lazy protocol witness table cache variable for type [Participant] and conformance <A> [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Participant]);
    v2 = lazy protocol witness table accessor for type Participant and conformance Participant();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF30], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Participant] and conformance <A> [A]);
  }
  return result;
}

uint64_t ConversationRemoteParticipantsStateProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 32);
  return v0;
}

uint64_t ConversationRemoteParticipantsStateProvider.__deallocating_deinit()
{
  ConversationRemoteParticipantsStateProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.participantsPublisher.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.participantsPublisher.getter();
}

void protocol witness for ConversationRemoteParticipantsStateProviding.participants.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  ConversationRemoteParticipantsStateProvider.participants.getter();
}

uint64_t protocol witness for ConversationRemoteParticipantsStateProviding.participantCaptionsUpdatePublisher.getter in conformance ConversationRemoteParticipantsStateProvider()
{
  return ConversationRemoteParticipantsStateProvider.participantCaptionsUpdatePublisher.getter();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participantsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participants.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProviding.participantCaptionsUpdatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for ConversationRemoteParticipantsStateProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationRemoteParticipantsStateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationRemoteParticipantsStateProvider.__allocating_init(remoteParticipants:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ConversationKit::InCallControlsShareLinkCell::ViewModel __swiftcall InCallControlsShareLinkCell.ViewModel.init(isLinkSharingEnabled:gridLayoutStyle:)(Swift::Bool isLinkSharingEnabled, ConversationKit::MultiwayViewController::LayoutStyle gridLayoutStyle)
{
  Swift::Bool *v2;
  char v3;
  ConversationKit::InCallControlsShareLinkCell::ViewModel result;

  v3 = *(_BYTE *)gridLayoutStyle;
  *v2 = isLinkSharingEnabled;
  v2[1] = v3;
  result.isLinkSharingEnabled = isLinkSharingEnabled;
  return result;
}

uint64_t InCallControlsShareLinkCell.ViewModel.isLinkSharingEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void InCallControlsShareLinkCell.ViewModel.gridLayoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

void InCallControlsShareLinkCell.ViewModel.hash(into:)()
{
  Swift::UInt8 *v0;
  Swift::UInt v1;

  v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
}

BOOL static InCallControlsShareLinkCell.ViewModel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

Swift::Int InCallControlsShareLinkCell.ViewModel.hashValue.getter()
{
  uint64_t v0;
  Swift::UInt v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v11;
  char v12;

  v1 = *(unsigned __int8 *)(v0 + 1);
  v2 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_3_133(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  Hasher._combine(_:)(v1);
  return OUTLINED_FUNCTION_4_6();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance InCallControlsShareLinkCell.ViewModel()
{
  Swift::UInt8 *v0;
  Swift::UInt v1;

  Hasher.init(_seed:)();
  v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton()
{
  id v0;
  Swift::String v1;
  Swift::String_optional v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;

  type metadata accessor for InCallControlButton();
  LOBYTE(v8) = 7;
  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v9._object = (void *)0xE000000000000000;
  v1._countAndFlagsBits = 0x494C5F4552414853;
  v1._object = (void *)0xEA00000000004B4ELL;
  v2.value._countAndFlagsBits = 0x61737265766E6F43;
  v2.value._object = (void *)0xEF74694B6E6F6974;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, (NSBundle)v0, v3, v9);

  LOWORD(v7) = 256;
  v4 = InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v5 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1, v7, v8);
  if (v5)
    objc_msgSend(v5, sel_setNumberOfLines_, 2);
  objc_msgSend(v5, sel_setAdjustsFontSizeToFitWidth_, 1);
  return v4;
}

void InCallControlsShareLinkCell.buttonHeightConstraint.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint) = a1;

}

uint64_t key path setter for InCallControlsShareLinkCell.delegate : InCallControlsShareLinkCell(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t InCallControlsShareLinkCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t InCallControlsShareLinkCell.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*InCallControlsShareLinkCell.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

id InCallControlsShareLinkCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

_QWORD *InCallControlsShareLinkCell.init(frame:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  double v4;
  objc_super *v5;
  SEL v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_7();
  v1 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton;
  v2 = v0;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate]);
  v3 = &v2[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;

  v11 = type metadata accessor for InCallControlsShareLinkCell();
  v4 = OUTLINED_FUNCTION_15_0();
  v7 = objc_msgSendSuper2(v5, v6, v4, v2, v11);
  v8 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v7) + 0xB8);
  v9 = v7;
  v8();

  return v9;
}

uint64_t type metadata accessor for InCallControlsShareLinkCell()
{
  return objc_opt_self();
}

Swift::Void __swiftcall InCallControlsShareLinkCell.configureSubviews()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  Class isa;
  _QWORD v41[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  v6 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
  MEMORY[0x1C3B7370C](v4);
  v7 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in InCallControlsShareLinkCell.configureSubviews(), v8);
  swift_release_n();
  if (one-time initialization token for brickButton != -1)
    swift_once();
  v9 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x188);
  v10 = swift_bridgeObjectRetain();
  v9(v10);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v11 = OUTLINED_FUNCTION_0_59();
  objc_msgSend(v11, sel_addSubview_, v7);

  v13 = OUTLINED_FUNCTION_9(v12, sel_heightAnchor);
  v14 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToConstant_, 52.0);

  InCallControlsShareLinkCell.buttonHeightConstraint.setter((uint64_t)v14);
  InCallControlsShareLinkCell.updateConstraintsConstants()();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BD64AAB0;
  v16 = OUTLINED_FUNCTION_9(v15, sel_leadingAnchor);
  v17 = objc_msgSend(OUTLINED_FUNCTION_0_59(), sel_leadingAnchor);
  OUTLINED_FUNCTION_14();
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, &selRef_associatedAppBundleIdentifier);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  if (v19)
  {
    v20 = (void *)objc_opt_self();
    *(_QWORD *)(v15 + 40) = v19;
    v21 = OUTLINED_FUNCTION_9((uint64_t)v19, sel_centerYAnchor);
    v22 = OUTLINED_FUNCTION_0_59();
    v23 = objc_msgSend(v22, sel_centerYAnchor);
    OUTLINED_FUNCTION_8_10();
    v24 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 48) = v22;
    v26 = OUTLINED_FUNCTION_9(v25, sel_topAnchor);
    v27 = OUTLINED_FUNCTION_0_59();
    v28 = objc_msgSend(v27, sel_topAnchor);
    OUTLINED_FUNCTION_8_10();
    v29 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 56) = v27;
    v31 = OUTLINED_FUNCTION_9(v30, sel_bottomAnchor);
    v32 = OUTLINED_FUNCTION_0_59();
    v33 = objc_msgSend(v32, sel_bottomAnchor);
    OUTLINED_FUNCTION_8_10();
    v34 = OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_14();

    *(_QWORD *)(v15 + 64) = v32;
    v36 = OUTLINED_FUNCTION_9(v35, sel_trailingAnchor);
    v37 = OUTLINED_FUNCTION_0_59();
    v38 = objc_msgSend(v37, sel_trailingAnchor);

    v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
    *(_QWORD *)(v15 + 72) = v39;
    v41[1] = v15;
    specialized Array._endMutation()();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_activateConstraints_, isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BD611070()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in InCallControlsShareLinkCell.configureSubviews()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(char *, id, uint64_t, uint64_t);
  id v9;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (char *)MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = v3;
    if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3) + 0x88))())
    {
      v6 = v5;
      ObjectType = swift_getObjectType();
      v8 = *(void (**)(char *, id, uint64_t, uint64_t))(v6 + 8);
      v9 = *(id *)&v4[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton];
      v8(v4, v9, ObjectType, v6);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void partial apply for closure #1 in InCallControlsShareLinkCell.configureSubviews()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in InCallControlsShareLinkCell.configureSubviews()(a1, v1);
}

id InCallControlsShareLinkCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsShareLinkCell.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;

  v1 = OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton;
  *(_QWORD *)&v0[v1] = closure #1 in variable initialization expression of InCallControlsShareLinkCell.shareLinkButton();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint] = 0;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_delegate]);
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id InCallControlsShareLinkCell.configure(with:delegate:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  id result;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v4 = v3;
  v6 = *a1;
  v7 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_3_133(v7, v8, v9, v10, v11, v12, v13, v14, v44, v48);
  OUTLINED_FUNCTION_375(v15, v16, v17, v18, v19, v20, v21, v22, v45, v49);
  result = (id)OUTLINED_FUNCTION_4_6();
  v24 = (char *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash;
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_previousViewModelHash + 8) & 1) != 0
    || result != *(id *)v24)
  {
    v25 = OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_3_133(v25, v26, v27, v28, v29, v30, v31, v32, v46, v50);
    OUTLINED_FUNCTION_375(v33, v34, v35, v36, v37, v38, v39, v40, v47, v51);
    *(_QWORD *)v24 = OUTLINED_FUNCTION_4_6();
    v24[8] = 0;
    v41 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x90);
    v42 = swift_unknownObjectRetain();
    v41(v42, a3);
    v43 = *(void **)((char *)v3 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton);
    objc_msgSend(*(id *)((char *)v4 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton), sel_setHidden_, 0);
    return objc_msgSend(v43, sel_setEnabled_, v6);
  }
  return result;
}

Swift::Void __swiftcall InCallControlsShareLinkCell.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  objc_super v11;

  isa = a1.value.super.isa;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for InCallControlsShareLinkCell();
  objc_msgSendSuper2(&v11, sel_traitCollectionDidChange_, isa);
  if (isa)
    isa = (Class)-[objc_class preferredContentSizeCategory](isa, sel_preferredContentSizeCategory);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (isa)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_13;
  }
  else
  {

  }
  InCallControlsShareLinkCell.updateConstraintsConstants()();
LABEL_13:

}

void InCallControlsShareLinkCell.updateConstraintsConstants()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_buttonHeightConstraint);
  if (v1)
  {
    v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit27InCallControlsShareLinkCell_shareLinkButton)
                  + OBJC_IVAR____TtC15ConversationKit19InCallControlButton_label);
    v4 = v1;
    v3 = objc_msgSend(v2, sel_font);
    if (!v3)
      v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    NSLayoutConstraint.setConstant(_:scaledToFont:)(v3, 52.0);

  }
  else
  {
    __break(1u);
  }
}

id InCallControlsShareLinkCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsShareLinkCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t lazy protocol witness table accessor for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel;
  if (!lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for InCallControlsShareLinkCell.ViewModel, &type metadata for InCallControlsShareLinkCell.ViewModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type InCallControlsShareLinkCell.ViewModel and conformance InCallControlsShareLinkCell.ViewModel);
  }
  return result;
}

uint64_t sub_1BD611670@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of InCallControlsShareLinkCellDelegate.shareLinkCell(cell:tappedCopyLinkButton:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for InCallControlsShareLinkCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.configureSubviews()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of InCallControlsShareLinkCell.configure(with:delegate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t storeEnumTagSinglePayload for InCallControlsShareLinkCell.ViewModel(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD6117A0 + 4 * byte_1BD66A455[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BD6117D4 + 4 * byte_1BD66A450[v4]))();
}

uint64_t sub_1BD6117D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD6117DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BD6117E4);
  return result;
}

uint64_t sub_1BD6117F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BD6117F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD6117FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BD611804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InCallControlsShareLinkCell.ViewModel()
{
  return &type metadata for InCallControlsShareLinkCell.ViewModel;
}

void static ParticipantVideoOverlayView.ViewModel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char __dst[112];
  char v4[128];

  outlined init with copy of ParticipantVideoOverlayView.ViewModel(a1, __dst);
  outlined init with copy of ParticipantVideoOverlayView.ViewModel(a2, v4);
  __asm { BR              X10 }
}

uint64_t sub_1BD61187C()
{
  uint64_t v0;
  char v1;
  char v3;

  if (v3)
  {
    outlined destroy of ParticipantVideoOverlayView.ViewModel(v0);
    v1 = 0;
  }
  else
  {
    v1 = 1;
  }
  return v1 & 1;
}

id ParticipantVideoOverlayView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ParticipantVideoOverlayView.configure(with:)(unsigned __int8 *a1)
{
  char __dst[120];

  OUTLINED_FUNCTION_14_108((uint64_t)a1, sel_setText_);
  outlined init with copy of ParticipantVideoOverlayView.ViewModel(a1, __dst);
  __asm { BR              X10 }
}

id sub_1BD611F3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v4;

  OUTLINED_FUNCTION_40_3(v1, sel_setHidden_);
  OUTLINED_FUNCTION_40_3(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView), sel_setHidden_);
  OUTLINED_FUNCTION_40_3(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView), sel_setHidden_);
  OUTLINED_FUNCTION_40_3(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView), sel_setHidden_);
  v2 = OUTLINED_FUNCTION_40_3(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView), sel_setHidden_);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation) = v4;
  return OUTLINED_FUNCTION_25_1((uint64_t)v2, sel_stopAnimating);
}

uint64_t ParticipantVideoOverlayView.imageAndLabelTransform.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer);
  objc_msgSend(v8, sel_transform);
  result = static CGAffineTransform.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    v10[0] = v2;
    v10[1] = v3;
    v10[2] = v4;
    v10[3] = v5;
    v10[4] = v6;
    v10[5] = v7;
    return (uint64_t)objc_msgSend(v8, sel_setTransform_, v10);
  }
  return result;
}

id ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(char a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  if (*((_BYTE *)v4 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation) == 1)
  {
    v10 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v10 + 16) = v5;
    *(double *)(v10 + 24) = a4;
    if ((a1 & 1) != 0)
    {
      v11 = one-time initialization token for shared;
      v12 = v5;
      if (v11 != -1)
        swift_once();
      if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 576))() & 1) == 0)
      {
        v13 = OUTLINED_FUNCTION_15();
        swift_unknownObjectWeakInit();
        v14 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v14 + 16) = v13;
        *(_QWORD *)(v14 + 24) = a2;
        *(_QWORD *)(v14 + 32) = a3;
        *(double *)(v14 + 40) = a4;
        if (a4 <= 0.0)
          v15 = 0x20000;
        else
          v15 = 0x10000;
        v16 = (void *)objc_opt_self();
        v17 = MEMORY[0x1E0C809B0];
        v18 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v23, v25);
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
        swift_retain();
        swift_release();
        v19 = OUTLINED_FUNCTION_15();
        *(_QWORD *)(v19 + 16) = partial apply for closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:);
        *(_QWORD *)(v19 + 24) = v14;
        v20 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed (@unowned Bool) -> (), v17, 1107296256, v24, v26);
        swift_retain();
        swift_release();
        objc_msgSend(v16, sel_animateWithDuration_delay_options_animations_completion_, v15, v18, v20, 0.1, 0.0);
        _Block_release(v20);
        _Block_release(v18);
        swift_release();
        return (id)swift_release();
      }
    }
    else
    {
      v22 = v5;
    }
    objc_msgSend(v5, sel_setAlpha_, a4);
    if (a2)
      OUTLINED_FUNCTION_42_59();
    return (id)swift_release();
  }
  else
  {
    result = objc_msgSend(v4, sel_setAlpha_, 1.0);
    if (a2)
      return (id)OUTLINED_FUNCTION_42_59();
  }
  return result;
}

void ParticipantVideoOverlayView.isInRoster.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  swift_beginAccess();
  *v3 = a1;
  ParticipantVideoOverlayView.isInRoster.didset();
}

uint64_t ParticipantVideoOverlayView.WantsAlphaAnimation.BOOLValue.getter(char a1)
{
  return a1 & 1;
}

BOOL static ParticipantVideoOverlayView.WantsAlphaAnimation.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void ParticipantVideoOverlayView.WantsAlphaAnimation.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

void ParticipantVideoOverlayView.WantsAlphaAnimation.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_12_9();
  Hasher._combine(_:)(a1 & 1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ParticipantVideoOverlayView.WantsAlphaAnimation(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ParticipantVideoOverlayView.WantsAlphaAnimation.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  char *v0;

  ParticipantVideoOverlayView.WantsAlphaAnimation.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ParticipantVideoOverlayView.WantsAlphaAnimation(uint64_t a1)
{
  char *v1;

  ParticipantVideoOverlayView.WantsAlphaAnimation.hash(into:)(a1, *v1);
}

double ParticipantVideoOverlayView.imageAndLabelTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer), sel_transform);
  result = *(double *)&v4;
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  return result;
}

double key path getter for ParticipantVideoOverlayView.imageAndLabelTransform : ParticipantVideoOverlayView@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;

  ParticipantVideoOverlayView.imageAndLabelTransform.getter(v4);
  v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

uint64_t key path setter for ParticipantVideoOverlayView.imageAndLabelTransform : ParticipantVideoOverlayView(_OWORD *a1)
{
  __int128 v1;
  _OWORD v3[3];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  v3[2] = a1[2];
  return ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)v3);
}

void (*ParticipantVideoOverlayView.imageAndLabelTransform.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer), sel_transform);
  *((_OWORD *)v3 + 6) = v5;
  *((_OWORD *)v3 + 7) = v6;
  *((_OWORD *)v3 + 8) = v7;
  return ParticipantVideoOverlayView.imageAndLabelTransform.modify;
}

void ParticipantVideoOverlayView.imageAndLabelTransform.modify(uint64_t *a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;

  v2 = (_OWORD *)*a1;
  if ((a2 & 1) != 0)
    v3 = *a1;
  else
    v3 = *a1 + 48;
  v4 = v2[7];
  *(_OWORD *)v3 = v2[6];
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v2[8];
  ParticipantVideoOverlayView.imageAndLabelTransform.setter((uint64_t *)v3);
  free(v2);
}

uint64_t ParticipantVideoOverlayView.isInRoster.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  OUTLINED_FUNCTION_1();
  return *v1;
}

uint64_t key path getter for ParticipantVideoOverlayView.isInRoster : ParticipantVideoOverlayView@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void ParticipantVideoOverlayView.isInRoster.didset()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster);
  OUTLINED_FUNCTION_1();
  ParticipantMonogramView.isInRoster.setter(*v1);
}

void (*ParticipantVideoOverlayView.isInRoster.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return ParticipantVideoOverlayView.isInRoster.modify;
}

void ParticipantVideoOverlayView.isInRoster.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ParticipantVideoOverlayView.isInRoster.didset();
  OUTLINED_FUNCTION_0();
}

char *ParticipantVideoOverlayView.init()()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  UIActivityIndicatorView *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  Class isa;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  char *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70[3];
  objc_super v71;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3F58]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(_QWORD *)&v4[v5] = OUTLINED_FUNCTION_26_71(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  *(_QWORD *)&v4[v6] = OUTLINED_FUNCTION_26_71(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  v7 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(_QWORD *)&v4[v7] = OUTLINED_FUNCTION_26_71(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  v8 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  LOBYTE(v70[0]) = 1;
  v9 = objc_allocWithZone((Class)type metadata accessor for ParticipantMonogramView());
  v10 = ParticipantMonogramView.init(colorStyle:)((unsigned __int8 *)v70);
  *(_QWORD *)&v4[v8] = v10;
  v11 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  OUTLINED_FUNCTION_17_8((uint64_t)v10, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_4_151(v12);
  *(_QWORD *)&v4[v11] = v13;
  v14 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  *(_QWORD *)&v4[v14] = OUTLINED_FUNCTION_26_71(objc_allocWithZone(MEMORY[0x1E0DC3890]));
  v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v4[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  v71.receiver = v4;
  v71.super_class = v1;
  v15 = (char *)objc_msgSendSuper2(&v71, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  v17 = *(void **)&v15[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView];
  v18 = v15;
  v19 = v17;
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_light);

  v20 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  v21 = one-time initialization token for overlayContent;
  v22 = *(id *)&v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView];
  if (v21 != -1)
    swift_once();
  objc_msgSend(v22, sel_setTintColor_, static Colors.ParticipantViews.overlayContent);

  OUTLINED_FUNCTION_40_3(*(id *)&v18[v20], sel_setContentMode_);
  v66 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  v23 = *(void **)&v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView];
  objc_opt_self();
  v24 = v23;
  v25 = OUTLINED_FUNCTION_25_1((uint64_t)v24, sel_whiteColor);
  OUTLINED_FUNCTION_48_1(v24, sel_setColor_);

  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView]);
  v68 = v16;
  v69 = v15;
  OUTLINED_FUNCTION_48_1(v18, sel_addSubview_);
  v26 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  v27 = *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer];
  OUTLINED_FUNCTION_51_49();
  v28 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  v29 = OUTLINED_FUNCTION_51_49();
  v30 = OUTLINED_FUNCTION_25_1((uint64_t)v29, sel_contentView);
  objc_msgSend(v30, sel_addSubview_, v27);

  v31 = *(void **)&v18[v26];
  OUTLINED_FUNCTION_40_3(v31, sel_setAxis_);
  objc_msgSend(v31, sel_setSpacing_, 3.0);
  objc_msgSend(v31, sel_setAlignment_, 3);
  OUTLINED_FUNCTION_18_4(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(*(id *)&v18[v20], sel_setTranslatesAutoresizingMaskIntoConstraints_);
  OUTLINED_FUNCTION_18_4(*(id *)&v18[v28], sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v32 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v33 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v33 + 16) = xmmword_1BD644B60;
  v34 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v31, sel_centerYAnchor), sel_centerYAnchor);
  v35 = OUTLINED_FUNCTION_22_95();
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v33 + 32) = &selRef_associatedAppBundleIdentifier;
  v36 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v18[v26], sel_centerXAnchor), sel_centerXAnchor);
  v37 = OUTLINED_FUNCTION_22_95();
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v33 + 40) = &selRef_associatedAppBundleIdentifier;
  v38 = objc_msgSend(*(id *)&v18[v28], sel_widthAnchor);
  v39 = OUTLINED_FUNCTION_123((uint64_t)v38, sel_widthAnchor);
  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v39, -20.0);
  OUTLINED_FUNCTION_8_5();

  *(_QWORD *)(v33 + 48) = &selRef_associatedAppBundleIdentifier;
  v70[0] = v33;
  specialized Array._endMutation()();
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v32, sel_activateConstraints_, isa);

  v42 = objc_msgSend(*(id *)&v18[v20], sel_widthAnchor);
  v43 = OUTLINED_FUNCTION_35_52(v42);

  v44 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint;
  OUTLINED_FUNCTION_33_72();
  v45 = *(void **)&v18[v44];
  if (v45)
    OUTLINED_FUNCTION_40_3(v45, sel_setActive_);
  v46 = objc_msgSend(*(id *)&v18[v20], sel_heightAnchor, v66);
  v47 = OUTLINED_FUNCTION_35_52(v46);

  v48 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint;
  OUTLINED_FUNCTION_33_72();
  v49 = *(id *)&v18[v48];
  if (v49)
    v49 = OUTLINED_FUNCTION_40_3(v49, sel_setActive_);
  v50 = *(void **)&v18[v28];
  OUTLINED_FUNCTION_14_108((uint64_t)v49, sel_setNumberOfLines_);
  OUTLINED_FUNCTION_40_3(v50, sel_setTextAlignment_);
  v51 = OUTLINED_FUNCTION_14_108((uint64_t)objc_msgSend(v50, sel_setTextColor_, static Colors.ParticipantViews.overlayContent), sel_setLineBreakMode_);
  v52 = OUTLINED_FUNCTION_25_1((uint64_t)v51, sel_layer);
  OUTLINED_FUNCTION_17_8((uint64_t)v52, &lazy cache variable for type metadata for CAFilter);
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  CAFilter.__allocating_init(type:)(v53, v54);
  v56 = v55;
  OUTLINED_FUNCTION_48_1(v52, sel_setCompositingFilter_);

  v57 = *(void **)&v18[v28];
  OUTLINED_FUNCTION_40_3(v57, sel_setAdjustsFontSizeToFitWidth_);
  objc_msgSend(v57, sel_setMinimumScaleFactor_, 0.8);
  v58 = objc_msgSend(*(id *)&v69[v68], sel_contentView);
  v59 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  objc_msgSend(v58, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView]);

  v60 = *(void **)&v18[v59];
  OUTLINED_FUNCTION_18_4(v60, sel_setTranslatesAutoresizingMaskIntoConstraints_);
  v61 = &v18[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster];
  OUTLINED_FUNCTION_1();
  LOBYTE(v61) = *v61;
  v62 = v60;
  ParticipantMonogramView.isInRoster.setter((char)v61);

  v63 = objc_msgSend(*(id *)&v69[v68], sel_contentView);
  v64 = *(id *)&v18[v67];
  OUTLINED_FUNCTION_59_2((uint64_t)v64, sel_addSubview_);

  return v18;
}

id ParticipantVideoOverlayView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantVideoOverlayView.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  UIActivityIndicatorView *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  *(_QWORD *)&v1[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v3 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v4 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  v5 = OUTLINED_FUNCTION_27_74();
  *(_QWORD *)&v1[v4] = OUTLINED_FUNCTION_70_0(v5);
  v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(_QWORD *)&v1[v6] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  v7 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  v8 = objc_allocWithZone((Class)OUTLINED_FUNCTION_21_96());
  v16 = OUTLINED_FUNCTION_37_58((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v22, v23, SWORD2(v23), SBYTE6(v23), HIBYTE(v23));
  *(_QWORD *)&v1[v7] = v16;
  v17 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  OUTLINED_FUNCTION_17_8((uint64_t)v16, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_4_151(v18);
  *(_QWORD *)&v1[v17] = v19;
  v20 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  v21 = OUTLINED_FUNCTION_27_74();
  *(_QWORD *)&v1[v20] = OUTLINED_FUNCTION_70_0(v21);
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  OUTLINED_FUNCTION_5_140();
  __break(1u);
}

id ParticipantVideoOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantVideoOverlayView.init(frame:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  UIActivityIndicatorView *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView;
  *(_QWORD *)&v1[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v3 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageAndLabelContainer;
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3CA8]));
  v4 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView;
  v5 = OUTLINED_FUNCTION_27_74();
  *(_QWORD *)&v1[v4] = OUTLINED_FUNCTION_70_0(v5);
  v6 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_labelView;
  *(_QWORD *)&v1[v6] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint] = 0;
  v7 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView;
  v8 = objc_allocWithZone((Class)OUTLINED_FUNCTION_21_96());
  v16 = OUTLINED_FUNCTION_37_58((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v22, v23, SWORD2(v23), SBYTE6(v23), HIBYTE(v23));
  *(_QWORD *)&v1[v7] = v16;
  v17 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView;
  OUTLINED_FUNCTION_17_8((uint64_t)v16, &lazy cache variable for type metadata for UIActivityIndicatorView);
  OUTLINED_FUNCTION_4_151(v18);
  *(_QWORD *)&v1[v17] = v19;
  v20 = OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView;
  v21 = OUTLINED_FUNCTION_27_74();
  *(_QWORD *)&v1[v20] = OUTLINED_FUNCTION_70_0(v21);
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_wantsAlphaAnimation] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_isInRoster] = 0;

  OUTLINED_FUNCTION_5_140();
  __break(1u);
}

Swift::Void __swiftcall ParticipantVideoOverlayView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  ParticipantVideoOverlayView._layout()();
}

id ParticipantVideoOverlayView._layout()()
{
  char *v0;
  id result;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  CGRect v11;
  CGRect v12;

  objc_msgSend(v0, sel_bounds);
  result = (id)CGRectIsInfinite(v11);
  if ((result & 1) == 0)
  {
    objc_msgSend(v0, sel_bounds);
    result = (id)CGRectIsEmpty(v12);
    if ((result & 1) == 0)
    {
      objc_msgSend(v0, sel_bounds);
      v3 = v2;
      v5 = v4;
      v6 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_monogramView];
      v7 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_snapshotView];
      v8 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_visualEffectView];
      v9 = v6;
      v10 = v7;
      objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, v3, v5);
      objc_msgSend(v9, sel_setFrame_, 0.0, 0.0, v3, v5);
      objc_msgSend(v10, sel_setFrame_, 0.0, 0.0, v3, v5);

      return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_spinnerView], sel_setFrame_, 0.0, 0.0, v3, v5);
    }
  }
  return result;
}

void ParticipantVideoOverlayView.setImage(_:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;

  if (a1)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4B50]);
    v12 = objc_msgSend(a1, sel_imageByApplyingSymbolConfiguration_, v3);

    v4 = v12;
  }
  else
  {
    v4 = 0;
  }
  v13 = v4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageView), sel_setImage_);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewWidthConstraint);
  if (v5)
  {
    v6 = v5;
    if (v13)
      objc_msgSend(v13, sel_size);
    else
      v7 = 0.0;
    objc_msgSend(v6, sel_setConstant_, v7);

  }
  v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit27ParticipantVideoOverlayView_imageViewHeightConstraint);
  if (v8)
  {
    v9 = v8;
    if (v13)
    {
      objc_msgSend(v13, sel_size);
      v11 = v10;
    }
    else
    {
      v11 = 0.0;
    }
    objc_msgSend(v9, sel_setConstant_, v11);

  }
}

void closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(uint64_t a1, void (*a2)(BOOL), double a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  double v8;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = v6;
    if (a2)
    {
      objc_msgSend(v6, sel_alpha);
      a2(v8 == a3);
    }

  }
}

id ParticipantVideoOverlayView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ParticipantVideoOverlayView.ViewModel.hash(into:)()
{
  unsigned __int8 *v0;
  char __dst[128];

  outlined init with copy of ParticipantVideoOverlayView.ViewModel(v0, __dst);
  __asm { BR              X10 }
}

uint64_t sub_1BD613ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v0 = v8;
  outlined init with take of Notice(&v7, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  String.hash(into:)();
  OUTLINED_FUNCTION_27();
  if (v0)
  {
    OUTLINED_FUNCTION_30_51(1u);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_91();
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    OUTLINED_FUNCTION_30_51(0);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void ParticipantVideoOverlayView.ViewModel.hashValue.getter()
{
  OUTLINED_FUNCTION_12_9();
  ParticipantVideoOverlayView.ViewModel.hash(into:)();
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ParticipantVideoOverlayView.ViewModel()
{
  Hasher.init(_seed:)();
  ParticipantVideoOverlayView.ViewModel.hash(into:)();
  return Hasher._finalize()();
}

uint64_t sub_1BD613D14()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, *(double *)(v0 + 24));
}

uint64_t sub_1BD613D4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD613D70()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)()
{
  uint64_t v0;

  closure #2 in ParticipantVideoOverlayView.setAlpha(_:animated:completion:)(*(_QWORD *)(v0 + 16), *(void (**)(BOOL))(v0 + 24), *(double *)(v0 + 40));
}

uint64_t sub_1BD613DB4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation;
  if (!lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoOverlayView.WantsAlphaAnimation, &type metadata for ParticipantVideoOverlayView.WantsAlphaAnimation);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoOverlayView.WantsAlphaAnimation and conformance ParticipantVideoOverlayView.WantsAlphaAnimation);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel;
  if (!lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ParticipantVideoOverlayView.ViewModel, &type metadata for ParticipantVideoOverlayView.ViewModel);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ParticipantVideoOverlayView.ViewModel and conformance ParticipantVideoOverlayView.ViewModel);
  }
  return result;
}

void sub_1BD613E64(char *a1)
{
  ParticipantVideoOverlayView.isInRoster.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ParticipantVideoOverlayView()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoOverlayView.WantsAlphaAnimation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD613EF0 + 4 * byte_1BD66A571[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD613F24 + 4 * byte_1BD66A56C[v4]))();
}

uint64_t sub_1BD613F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD613F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD613F34);
  return result;
}

uint64_t sub_1BD613F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD613F48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD613F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD613F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoOverlayView.WantsAlphaAnimation()
{
  return &type metadata for ParticipantVideoOverlayView.WantsAlphaAnimation;
}

void destroy for ParticipantVideoOverlayView.ViewModel(uint64_t a1)
{
  unsigned int v2;
  id v3;

  v2 = *(unsigned __int8 *)(a1 + 104);
  if (v2 >= 6)
    v2 = *(_DWORD *)a1 + 6;
  switch(v2)
  {
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      goto LABEL_9;
    case 2u:
      swift_bridgeObjectRelease();

      v3 = *(id *)(a1 + 56);
      goto LABEL_12;
    case 3u:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v3 = *(id *)(a1 + 80);
      goto LABEL_12;
    case 4u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80))
      {
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
      }
      return;
    case 5u:
      v3 = *(id *)a1;
LABEL_12:

      break;
    default:
      return;
  }
}

char *initializeWithCopy for ParticipantVideoOverlayView.ViewModel(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  __int128 v29;

  v4 = __src[104];
  if (v4 >= 6)
    v4 = *(_DWORD *)__src + 6;
  switch(v4)
  {
    case 0u:
      *__dst = *__src;
      __dst[104] = 0;
      break;
    case 1u:
      v5 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v5;
      (**(void (***)(char *, unsigned __int8 *))(v5 - 8))(__dst, __src);
      v6 = *((_QWORD *)__src + 6);
      *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
      *((_QWORD *)__dst + 6) = v6;
      __dst[104] = 1;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      v7 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v7;
      v8 = (void *)*((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v8;
      *((_WORD *)__dst + 16) = *((_WORD *)__src + 16);
      *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
      __dst[48] = __src[48];
      v9 = (void *)*((_QWORD *)__src + 7);
      *((_QWORD *)__dst + 7) = v9;
      __dst[104] = 2;
      swift_bridgeObjectRetain();
      v10 = v8;
      goto LABEL_9;
    case 3u:
      v11 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v11;
      v12 = (void *)*((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v12;
      *((_WORD *)__dst + 16) = *((_WORD *)__src + 16);
      *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
      __dst[48] = __src[48];
      v14 = (void *)*((_QWORD *)__src + 7);
      v13 = *((_QWORD *)__src + 8);
      *((_QWORD *)__dst + 7) = v14;
      *((_QWORD *)__dst + 8) = v13;
      v9 = (void *)*((_QWORD *)__src + 10);
      *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
      *((_QWORD *)__dst + 10) = v9;
      __dst[104] = 3;
      swift_bridgeObjectRetain();
      v15 = v12;
      v16 = v14;
      swift_bridgeObjectRetain();
LABEL_9:
      v17 = v9;
      break;
    case 4u:
      v18 = *(void **)__src;
      v19 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = *(_QWORD *)__src;
      *((_QWORD *)__dst + 1) = v19;
      v20 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 3) = v20;
      v21 = *((_QWORD *)__src + 5);
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      *((_QWORD *)__dst + 5) = v21;
      v22 = *((_QWORD *)__src + 7);
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      *((_QWORD *)__dst + 7) = v22;
      __dst[64] = __src[64];
      __dst[65] = __src[65];
      v23 = *((_QWORD *)__src + 10);
      v24 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23)
      {
        *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
        *((_QWORD *)__dst + 10) = v23;
        v25 = *((_QWORD *)__src + 11);
        v26 = *((_QWORD *)__src + 12);
        *((_QWORD *)__dst + 11) = v25;
        *((_QWORD *)__dst + 12) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v29 = *(_OWORD *)(__src + 88);
        *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
        *(_OWORD *)(__dst + 88) = v29;
      }
      __dst[104] = 4;
      break;
    case 5u:
      v27 = *(void **)__src;
      *(_QWORD *)__dst = *(_QWORD *)__src;
      __dst[104] = 5;
      v28 = v27;
      break;
    default:
      memcpy(__dst, __src, 0x69uLL);
      break;
  }
  return __dst;
}

unsigned __int8 *assignWithCopy for ParticipantVideoOverlayView.ViewModel(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  __int128 v23;

  if (__dst != __src)
  {
    v4 = __dst[104];
    if (v4 >= 6)
      v4 = *(_DWORD *)__dst + 6;
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();

        v5 = (id)*((_QWORD *)__dst + 7);
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v5 = (id)*((_QWORD *)__dst + 10);
        goto LABEL_12;
      case 4u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)__dst + 10))
        {
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
        v5 = *(id *)__dst;
LABEL_12:

        break;
      default:
        break;
    }
    v6 = __src[104];
    if (v6 >= 6)
      v6 = *(_DWORD *)__src + 6;
    switch(v6)
    {
      case 0u:
        *__dst = *__src;
        __dst[104] = 0;
        break;
      case 1u:
        v7 = *((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v7;
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v7 - 8))(__dst, __src);
        *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        __dst[104] = 1;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        v8 = (void *)*((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v8;
        __dst[32] = __src[32];
        __dst[33] = __src[33];
        v9 = *((_QWORD *)__src + 5);
        __dst[48] = __src[48];
        *((_QWORD *)__dst + 5) = v9;
        v10 = (void *)*((_QWORD *)__src + 7);
        *((_QWORD *)__dst + 7) = v10;
        __dst[104] = 2;
        swift_bridgeObjectRetain();
        v11 = v8;
        goto LABEL_21;
      case 3u:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        v12 = (void *)*((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 3) = v12;
        __dst[32] = __src[32];
        __dst[33] = __src[33];
        v13 = *((_QWORD *)__src + 5);
        __dst[48] = __src[48];
        *((_QWORD *)__dst + 5) = v13;
        v14 = (void *)*((_QWORD *)__src + 7);
        *((_QWORD *)__dst + 7) = v14;
        *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
        *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
        v10 = (void *)*((_QWORD *)__src + 10);
        *((_QWORD *)__dst + 10) = v10;
        __dst[104] = 3;
        swift_bridgeObjectRetain();
        v15 = v12;
        v16 = v14;
        swift_bridgeObjectRetain();
LABEL_21:
        v17 = v10;
        break;
      case 4u:
        v18 = *(void **)__src;
        *(_QWORD *)__dst = *(_QWORD *)__src;
        *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
        *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
        *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
        *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
        *((_QWORD *)__dst + 5) = *((_QWORD *)__src + 5);
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        *((_QWORD *)__dst + 7) = *((_QWORD *)__src + 7);
        __dst[64] = __src[64];
        __dst[65] = __src[65];
        v19 = *((_QWORD *)__src + 10);
        v20 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
        {
          *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
          *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
          *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
          *((_QWORD *)__dst + 12) = *((_QWORD *)__src + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v23 = *(_OWORD *)(__src + 88);
          *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
          *(_OWORD *)(__dst + 88) = v23;
        }
        __dst[104] = 4;
        break;
      case 5u:
        v21 = *(void **)__src;
        *(_QWORD *)__dst = *(_QWORD *)__src;
        __dst[104] = 5;
        v22 = v21;
        break;
      default:
        memcpy(__dst, __src, 0x69uLL);
        break;
    }
  }
  return __dst;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

id *assignWithTake for ParticipantVideoOverlayView.ViewModel(id *__dst, id *__src)
{
  unsigned int v4;
  id v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;

  if (__dst != __src)
  {
    v4 = *((unsigned __int8 *)__dst + 104);
    if (v4 >= 6)
      v4 = *(_DWORD *)__dst + 6;
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();

        v5 = __dst[7];
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v5 = __dst[10];
        goto LABEL_12;
      case 4u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (__dst[10])
        {
          swift_bridgeObjectRelease();
LABEL_10:
          swift_bridgeObjectRelease();
        }
        break;
      case 5u:
        v5 = *__dst;
LABEL_12:

        break;
      default:
        break;
    }
    v6 = *((unsigned __int8 *)__src + 104);
    if (v6 >= 6)
      v6 = *(_DWORD *)__src + 6;
    switch(v6)
    {
      case 0u:
        *(_BYTE *)__dst = *(_BYTE *)__src;
        *((_BYTE *)__dst + 104) = 0;
        return __dst;
      case 1u:
        v7 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v7;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        __dst[6] = __src[6];
        v8 = 1;
        goto LABEL_23;
      case 2u:
        v9 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v9;
        v10 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v10;
        v8 = 2;
        goto LABEL_23;
      case 3u:
        memcpy(__dst, __src, 0x58uLL);
        v8 = 3;
        goto LABEL_23;
      case 4u:
        memcpy(__dst, __src, 0x68uLL);
        v8 = 4;
        goto LABEL_23;
      case 5u:
        *__dst = *__src;
        v8 = 5;
LABEL_23:
        *((_BYTE *)__dst + 104) = v8;
        break;
      default:
        memcpy(__dst, __src, 0x69uLL);
        break;
    }
  }
  return __dst;
}

uint64_t getEnumTagSinglePayload for ParticipantVideoOverlayView.ViewModel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 >= 7)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ParticipantVideoOverlayView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_BYTE *)(result + 104) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for ParticipantVideoOverlayView.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 104);
  if (result >= 6)
    return (*(_DWORD *)a1 + 6);
  return result;
}

uint64_t destructiveInjectEnumTag for ParticipantVideoOverlayView.ViewModel(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 5)
  {
    v2 = a2 - 6;
    *(_QWORD *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 6;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 104) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantVideoOverlayView.ViewModel()
{
  return &type metadata for ParticipantVideoOverlayView.ViewModel;
}

uint64_t specialized Sequence.forEach(_:)(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1C3B73D18](i - 4, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i);
        swift_unknownObjectRetain();
      }
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      a2(v7);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      if (v8 == v5)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

void ScreenSharingInteractionController.session(_:didUpdateState:)(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;
  NSObject *osloga;
  uint64_t v13;

  v4 = *a2;
  v5 = OUTLINED_FUNCTION_4_152(*v2);
  if (v5)
  {
    v6 = v5;
    swift_release();
    if (v6 == a1)
      __asm { BR              X10 }
  }
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  oslog = OUTLINED_FUNCTION_3(v7, (uint64_t)&static Log.screenSharing);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315138;
    OUTLINED_FUNCTION_46_45((uint64_t)"session(_:didUpdateState:)", v10, (uint64_t)oslog, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_48(&dword_1BD004000, osloga, v8, "Dropping message from non-current session %s", v9);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

}

void *ScreenSharingInteractionActivity.activityIdentifier.unsafeMutableAddressor()
{
  return &static ScreenSharingInteractionActivity.activityIdentifier;
}

unint64_t static ScreenSharingInteractionActivity.activityIdentifier.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t ScreenSharingInteractionActivity.remoteControlAllowed.getter(char a1)
{
  return a1 & 1;
}

void ScreenSharingInteractionActivity.metadata.getter()
{
  uint64_t v0;

  type metadata accessor for GroupActivityMetadata.ActivityType();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v0);
  GroupActivityMetadata.init()();
  static GroupActivityMetadata.ActivityType.screenSharing.getter();
  GroupActivityMetadata.type.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t ScreenSharingInteractionActivity.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001BD69AA30)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

Swift::Int ScreenSharingInteractionActivity.CodingKeys.hashValue.getter()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

unint64_t ScreenSharingInteractionActivity.CodingKeys.stringValue.getter()
{
  return 0xD000000000000014;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ScreenSharingInteractionActivity.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = ScreenSharingInteractionActivity.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ScreenSharingInteractionActivity.CodingKeys()
{
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ScreenSharingInteractionActivity.CodingKeys()
{
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t ScreenSharingInteractionActivity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ScreenSharingInteractionActivity.CodingKeys>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

uint64_t ScreenSharingInteractionActivity.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for KeyedDecodingContainer<ScreenSharingInteractionActivity.CodingKeys>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v6 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6 & 1;
}

ConversationKit::ScreenSharingInteractionActivity __swiftcall ScreenSharingInteractionActivity.init(remoteControlAllowed:)(Swift::Bool remoteControlAllowed)
{
  return (ConversationKit::ScreenSharingInteractionActivity)remoteControlAllowed;
}

unint64_t protocol witness for static GroupActivity.activityIdentifier.getter in conformance ScreenSharingInteractionActivity()
{
  return 0xD00000000000002CLL;
}

uint64_t protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity()
{
  uint64_t v0;

  ScreenSharingInteractionActivity.metadata.getter();
  return protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for Decodable.init(from:) in conformance ScreenSharingInteractionActivity@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = ScreenSharingInteractionActivity.init(from:)(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ScreenSharingInteractionActivity(_QWORD *a1)
{
  return ScreenSharingInteractionActivity.encode(to:)(a1);
}

CNKScreenSharingInteractionControllerFactory __swiftcall CNKScreenSharingInteractionControllerFactory.init()()
{
  return (CNKScreenSharingInteractionControllerFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CNKScreenSharingInteractionControllerFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)CNKScreenSharingInteractionControllerFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

void ScreenSharingInteractionController.__allocating_init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = objc_allocWithZone(v3);
  swift_getObjectType();
  OUTLINED_FUNCTION_60_35();
  OUTLINED_FUNCTION_8_14();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_112(v7, v8, v9);
  OUTLINED_FUNCTION_23_92();
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_65_1();
}

void *CNKScreenSharingInteractionControllerFactory.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return static ScreenSharingInteractionController.shared;
}

uint64_t key path getter for ScreenSharingInteractionController.session : ScreenSharingInteractionController@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

void key path setter for ScreenSharingInteractionController.session : ScreenSharingInteractionController()
{
  swift_retain();
  ScreenSharingInteractionController.session.setter();
}

uint64_t ScreenSharingInteractionController.session.didset()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;

  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))())
  {
    if (one-time initialization token for $isScreenSharingInteractive != -1)
      swift_once();
    v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
    __swift_project_value_buffer(v1, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    return swift_release();
  }
  else
  {
    if (one-time initialization token for $isScreenSharingInteractive != -1)
      swift_once();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Parameter<Bool>);
    __swift_project_value_buffer(v3, (uint64_t)static ScreenSharingSpectatorTip.$isScreenSharingInteractive);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    return swift_endAccess();
  }
}

uint64_t ScreenSharingInteractionController.session.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_6();
  static Published.subscript.getter();
  swift_release();
  OUTLINED_FUNCTION_19();
  return v1;
}

void ScreenSharingInteractionController.session.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_11_8();
  v1 = v0;
  static Published.subscript.setter();
  ScreenSharingInteractionController.session.didset();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_43_1();
}

void ScreenSharingInteractionController.$session.getter()
{
  ScreenSharingInteractionController.$session.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
}

void ScreenSharingInteractionController.$session.setter(uint64_t a1)
{
  ScreenSharingInteractionController.$session.setter(a1, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
}

void ScreenSharingInteractionController.remoteControlStatus.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_4_152(*v0);
  if (v1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 424))(v1);
    OUTLINED_FUNCTION_43();
  }
  OUTLINED_FUNCTION_0();
}

void ScreenSharingInteractionController.latestRemoteControlDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of FeatureEligibility?(v0, v1, v2);
  OUTLINED_FUNCTION_43_1();
}

void ScreenSharingInteractionController.latestRemoteControlDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate;
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(a1, v3, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_endAccess();
  OUTLINED_FUNCTION_43_1();
}

void key path setter for ScreenSharingInteractionController.latestRemoteControlDate : ScreenSharingInteractionController(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of FeatureEligibility?(a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for Date?);
  ScreenSharingInteractionController.latestRemoteControlDate.setter((uint64_t)v4);
}

void ScreenSharingInteractionController.hasJoinedOneToOneConversation.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(char a1)
{
  ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(a1, &OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation, "Setting hasJoinedOneToOneConversation=%{BOOL}d");
}

void (*ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation);
  OUTLINED_FUNCTION_2_0();
  *((_BYTE *)v3 + 32) = *v4;
  return ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify;
}

void ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t ScreenSharingInteractionController.hasJoinedOneToOneConversation.didset(char a1, _QWORD *a2, const char *a3)
{
  NSObject *v3;
  void *v5;
  unsigned __int8 *v6;
  uint64_t result;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  v5 = (void *)(a1 & 1);
  v6 = (unsigned __int8 *)v3 + *a2;
  result = OUTLINED_FUNCTION_2_0();
  if (*v6 != (_DWORD)v5)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    v9 = __swift_project_value_buffer(v8, (uint64_t)&static Log.screenSharing);
    v10 = v3;
    OUTLINED_FUNCTION_19_73();
    v11 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_4_14(v11))
    {
      v12 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v12 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl(&dword_1BD004000, v3, v9, a3, v12, 8u);
      OUTLINED_FUNCTION_60();
    }

    return ScreenSharingInteractionController.updateInteractionSession()();
  }
  return result;
}

void ScreenSharingInteractionController.isBroadcastingScreenSharing.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32();
}

void ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(char a1)
{
  ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(a1, &OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing, "Setting isBroadcastingScreenSharing=%{BOOL}d");
}

void ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter(char a1, _QWORD *a2, const char *a3)
{
  uint64_t v3;
  char *v7;
  char v8;

  v7 = (char *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v8 = *v7;
  *v7 = a1;
  ScreenSharingInteractionController.hasJoinedOneToOneConversation.didset(v8, a2, a3);
  OUTLINED_FUNCTION_2_3();
}

_QWORD *key path getter for ScreenSharingInteractionController.remoteControlState : ScreenSharingInteractionController@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x178))(&v4);
  *a2 = v4;
  return result;
}

void key path setter for ScreenSharingInteractionController.remoteControlState : ScreenSharingInteractionController(unint64_t *a1)
{
  outlined copy of RemoteControlState(*a1);
  ScreenSharingInteractionController.remoteControlState.setter();
}

uint64_t ScreenSharingInteractionController.remoteControlState.didset()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(void);

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (void (*)(void))(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
  v2();
  swift_release();
  return (*(uint64_t (**)(void))((*v1 & *v0) + 0x1D8))();
}

uint64_t ScreenSharingInteractionController.remoteControlState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_64();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

void ScreenSharingInteractionController.remoteControlState.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  static Published.subscript.setter();
  ScreenSharingInteractionController.remoteControlState.didset();
  OUTLINED_FUNCTION_43_1();
}

void ScreenSharingInteractionController.$remoteControlState.getter()
{
  ScreenSharingInteractionController.$session.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState, &demangling cache variable for type metadata for Published<RemoteControlState>);
}

void ScreenSharingInteractionController.$session.getter(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_9_0();
}

void ScreenSharingInteractionController.$remoteControlState.setter(uint64_t a1)
{
  ScreenSharingInteractionController.$session.setter(a1, &demangling cache variable for type metadata for Published<RemoteControlState>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState, &demangling cache variable for type metadata for Published<RemoteControlState>);
}

void ScreenSharingInteractionController.$session.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, a1, v7);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_84_21(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_65_1();
}

uint64_t key path getter for ScreenSharingInteractionController.onUpdateUI : ScreenSharingInteractionController@<X0>(_QWORD **a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x1A8))();
  v5 = v4;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 24) = v5;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (void (*)())result;
  return result;
}

uint64_t key path setter for ScreenSharingInteractionController.onUpdateUI : ScreenSharingInteractionController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void (*)(), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *(uint64_t (**)(void (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1B0);
  swift_retain();
  return v6(partial apply for thunk for @callee_guaranteed () -> (), v5);
}

uint64_t ScreenSharingInteractionController.onUpdateUI.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_11_8();
  return OUTLINED_FUNCTION_21_6();
}

void ScreenSharingInteractionController.onUpdateUI.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

uint64_t (*ScreenSharingInteractionController.onUpdateUI.modify())()
{
  OUTLINED_FUNCTION_2_0();
  return CallRecordingPillViewController.cancellable.modify;
}

void ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getObjectType();
  OUTLINED_FUNCTION_60_35();
  OUTLINED_FUNCTION_8_14();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0_112(v5, v6, v7);
  OUTLINED_FUNCTION_23_92();
  __swift_destroy_boxed_opaque_existential_1(a3);
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[29] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupSession<ScreenSharingInteractionActivity>.State>.Publisher);
  v4[30] = v5;
  v4[31] = *(_QWORD *)(v5 - 8);
  v4[32] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions);
  v4[33] = v6;
  v4[34] = *(_QWORD *)(v6 - 8);
  v4[35] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
  v4[36] = v7;
  v4[37] = *(_QWORD *)(v7 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = type metadata accessor for MainActor();
  v4[40] = static MainActor.shared.getter();
  v4[41] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[42] = v8;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[34];
  v1 = v0[35];
  v3 = v0[33];
  lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity();
  static GroupActivity.sessions()();
  GroupSession.Sessions.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[43] = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable;
  OUTLINED_FUNCTION_2_0();
  v0[44] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator and conformance GroupSession<A>.Sessions.Iterator, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
  v4 = (_QWORD *)swift_task_alloc();
  v0[45] = v4;
  OUTLINED_FUNCTION_58_43(v4);
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 352);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
  }
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 192);
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 368);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

id closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  _QWORD *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;

  v2 = *(_QWORD *)(v0 + 376);
  if (v2)
  {
    outlined init with copy of FeatureEligibility?(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 344), v0 + 96, (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
    if (*(_QWORD *)(v0 + 120))
    {
      v4 = OUTLINED_FUNCTION_64();
      outlined init with copy of RadarReporting(v4, v5);
      OUTLINED_FUNCTION_86_18(v6, (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      dispatch thunk of Cancellable.cancel()();
      v7 = __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    }
    else
    {
      OUTLINED_FUNCTION_86_18(v3, (uint64_t *)&demangling cache variable for type metadata for Cancellable?);
    }
    v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v10 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 232)) + 0x148);
    if ((((uint64_t (*)(uint64_t))v10)(v7) & 1) != 0
      && (v11 = (*(uint64_t (**)(void))((*v9 & **(_QWORD **)(v0 + 232)) + 0xF8))(), swift_release(), !v11))
    {
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v23, (uint64_t)&static Log.screenSharing);
      OUTLINED_FUNCTION_78_24();
      v24 = Logger.logObject.getter();
      v25 = static os_log_type_t.default.getter();
      if (OUTLINED_FUNCTION_23(v25))
      {
        v26 = (uint8_t *)OUTLINED_FUNCTION_105();
        v34 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v26 = 136315138;
        *(_QWORD *)(v0 + 208) = v2;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        v27 = dispatch thunk of CustomStringConvertible.description.getter();
        *(_QWORD *)(v0 + 216) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_16_8();
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v24, v1, "Creating screen sharing interaction sesion for group session: %s", v26);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_16_8();
      v31 = *(void **)(v0 + 232);
      v32 = (void *)objc_opt_self();
      OUTLINED_FUNCTION_11_8();
      v33 = v31;
      result = objc_msgSend(v32, sel_sharedInstance);
      if (result)
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
        OUTLINED_FUNCTION_74_24();
        OUTLINED_FUNCTION_15();
        ScreenSharingInteractionSession.init(session:controller:serverBag:contactManager:)();
      }
      __break(1u);
    }
    else
    {
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v12 = *(void **)(v0 + 232);
      v13 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v13, (uint64_t)&static Log.screenSharing);
      v14 = v12;
      v15 = Logger.logObject.getter();
      v16 = static os_log_type_t.error.getter();
      v17 = os_log_type_enabled(v15, v16);
      v18 = *(uint64_t **)(v0 + 232);
      if (v17)
      {
        v19 = OUTLINED_FUNCTION_105();
        *(_QWORD *)(v0 + 200) = OUTLINED_FUNCTION_105();
        *(_DWORD *)v19 = 67109378;
        *(_DWORD *)(v19 + 4) = v10() & 1;
        *(_WORD *)(v19 + 8) = 2080;
        v20 = OUTLINED_FUNCTION_4_152(*v18);
        if (v20)
        {
          *(_QWORD *)(v0 + 224) = v20;
          OUTLINED_FUNCTION_74_24();
          v21 = String.init<A>(reflecting:)();
          v18 = v22;
        }
        else
        {
          v21 = OUTLINED_FUNCTION_64_29();
        }
        v29 = *(void **)(v0 + 232);
        *(_QWORD *)(v19 + 10) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, (unint64_t)v18, (uint64_t *)(v0 + 200));

        OUTLINED_FUNCTION_27();
        _os_log_impl(&dword_1BD004000, v15, v16, "Dropping screen sharing interaction session as we aren't expecting a session hasJoinedOneToOneConversation=%{BOOL}d && self.session=%s", (uint8_t *)v19, 0x12u);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      GroupSession.end()();
      OUTLINED_FUNCTION_19();
      *(_QWORD *)(v0 + 352) = static MainActor.shared.getter();
      lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator and conformance GroupSession<A>.Sessions.Iterator, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.Sessions.Iterator);
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 360) = v30;
      OUTLINED_FUNCTION_58_43(v30);
      return (id)dispatch thunk of AsyncIteratorProtocol.next()();
    }
  }
  else
  {
    OUTLINED_FUNCTION_20_6(*(_QWORD *)(v0 + 296));
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

void closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>.State);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (void **)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v10)
  {
    v11 = (void *)v10;
    (*(void (**)(void **, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if ((*(unsigned int (**)(void **, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0CB4110])
    {
      (*(void (**)(void **, uint64_t))(v7 + 96))(v9, v6);
      v12 = *v9;
      if (one-time initialization token for screenSharing != -1)
        swift_once();
      v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)&static Log.screenSharing);
      swift_retain();
      v14 = v12;
      swift_retain();
      v15 = v12;
      v16 = Logger.logObject.getter();
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v19 = (_QWORD *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v26 = a3;
        v27 = v25;
        *(_DWORD *)v18 = 136315394;
        lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type GroupSession<ScreenSharingInteractionActivity> and conformance GroupSession<A>, &demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
        v20 = dispatch thunk of CustomStringConvertible.description.getter();
        v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v18 + 12) = 2112;
        v22 = v12;
        v23 = _swift_stdlib_bridgeErrorToNSError();
        v26 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v19 = v23;

        _os_log_impl(&dword_1BD004000, v16, v17, "Invalidating ScreenSharingInteractionSession since %s was invalidated with reason %@", (uint8_t *)v18, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v19, -1, -1);
        v24 = v25;
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v24, -1, -1);
        MEMORY[0x1C3B751B8](v18, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      ScreenSharingInteractionController.resetSession()();

    }
    else
    {

      (*(void (**)(void **, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void ScreenSharingInteractionController.addDelegate(_:)(uint64_t a1)
{
  ScreenSharingInteractionController.addDelegate(_:)(a1, (SEL *)&selRef_addObject_);
}

void ScreenSharingInteractionController.removeDelegate(_:)(uint64_t a1)
{
  ScreenSharingInteractionController.addDelegate(_:)(a1, (SEL *)&selRef_removeObject_);
}

void ScreenSharingInteractionController.addDelegate(_:)(uint64_t a1, SEL *a2)
{
  char *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  char *v7;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  v7 = v2;
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v6);
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers], *a2, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_unknownObjectRelease();

}

void @objc ScreenSharingInteractionController.addDelegate(_:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();

}

Swift::Void __swiftcall ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()()
{
  void *v0;
  uint64_t *v1;
  os_log_type_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  _QWORD *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27[3];

  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v7, (uint64_t)&static Log.screenSharing);
  v8 = v0;
  v9 = OUTLINED_FUNCTION_19_73();
  v10 = static os_log_type_t.default.getter();
  v11 = OUTLINED_FUNCTION_23(v10);
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v11)
  {
    v13 = OUTLINED_FUNCTION_105();
    v25[1] = ObjectType;
    v14 = (uint8_t *)v13;
    v15 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 136315138;
    v27[0] = v15;
    v26 = OUTLINED_FUNCTION_80_24(*v1);
    type metadata accessor for TURemoteControlStatus(0);
    v16 = String.init<A>(reflecting:)();
    v26 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, v27);
    OUTLINED_FUNCTION_26_38();
    OUTLINED_FUNCTION_27();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v9, v2, "Notifying observers of changed remote control status: %s", v14);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v18 = OUTLINED_FUNCTION_80_24(*v1);
  if (v18 != 2)
  {
    static Date.now.getter();
    type metadata accessor for Date();
    v19 = OUTLINED_FUNCTION_66_35();
    __swift_storeEnumTagSinglePayload(v19, v20, v21, v22);
    v23 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of Participant?((uint64_t)v6, v23, (uint64_t *)&demangling cache variable for type metadata for Date?);
    swift_endAccess();
  }
  v24 = OUTLINED_FUNCTION_15();
  *(_BYTE *)(v24 + 16) = v18 == 2;
  *(_QWORD *)(v24 + 24) = ObjectType;
  (*(void (**)(uint64_t (*)(void *), uint64_t))((*v12 & *v1) + 0x220))(partial apply for closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus(), v24);
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(void *a1, char a2)
{
  uint64_t result;
  uint64_t v5;

  result = (uint64_t)objc_msgSend(a1, sel_respondsToSelector_, sel_screenSharingInteractionController_didUpdateRemoteControlStatus_);
  if ((result & 1) != 0)
  {
    v5 = one-time initialization token for shared;
    swift_unknownObjectRetain();
    if (v5 != -1)
      swift_once();
    objc_msgSend(a1, sel_screenSharingInteractionController_didUpdateRemoteControlStatus_, static ScreenSharingInteractionController.shared, a2 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

void ScreenSharingInteractionController.resetSession()()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v1, (uint64_t)&static Log.screenSharing);
  v2 = v0;
  v3 = OUTLINED_FUNCTION_38_3();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315138;
    if (OUTLINED_FUNCTION_33_73(*v2))
    {
      OUTLINED_FUNCTION_74_24();
      v6 = String.init<A>(reflecting:)();
      v0 = v7;
    }
    else
    {
      v6 = OUTLINED_FUNCTION_64_29();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, (unint64_t)v0, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();

    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v4, "Resetting session %s", v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v8 = OUTLINED_FUNCTION_33_73(*v2);
  if (v8)
  {
    OUTLINED_FUNCTION_77_24(v8);
    OUTLINED_FUNCTION_43();
  }
  ScreenSharingInteractionController.session.setter();
  ScreenSharingInteractionController.remoteControlState.setter();
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
}

uint64_t ScreenSharingInteractionController.sessionDidRequestRemoteControl(_:)()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_4_152(*v0);
  return swift_release();
}

Swift::Void __swiftcall ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()();
}

uint64_t closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_4_152(**(_QWORD **)(v0 + 24));
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = (_QWORD *)OUTLINED_FUNCTION_19_13();
    *(_QWORD *)(v0 + 40) = v2;
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v2, (uint64_t)closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding(), v5);
  }
  else
  {
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_35_53();
  }
  return OUTLINED_FUNCTION_16(v3);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_7_132();
  if (!v0)
    OUTLINED_FUNCTION_83_30();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

Swift::Void __swiftcall ScreenSharingInteractionController.handleRemoteControlUserResponse(allowRemoteControl:)(Swift::Bool allowRemoteControl)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_4_152(*v1);
  if (v3)
  {
    (*(void (**)(Swift::Bool))(*(_QWORD *)v3 + 664))(allowRemoteControl);
    OUTLINED_FUNCTION_155_2();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()();
}

void ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int EnumTagSinglePayload;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  v4 = (_QWORD *)OUTLINED_FUNCTION_15();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v3);
  v6 = v0;
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of AsyncStream<Bool>?(v1, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    OUTLINED_FUNCTION_84_21(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
    if (v4[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ()?);
  swift_task_create();
  swift_release();
  OUTLINED_FUNCTION_65_1();
}

uint64_t closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_4_152(**(_QWORD **)(v0 + 24));
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = (_QWORD *)OUTLINED_FUNCTION_19_13();
    *(_QWORD *)(v0 + 40) = v2;
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v2, (uint64_t)closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding(), v5);
  }
  else
  {
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_35_53();
  }
  return OUTLINED_FUNCTION_16(v3);
}

Swift::Void __swiftcall ScreenSharingInteractionController.endRemoteControlSession()()
{
  ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()();
}

uint64_t closure #1 in ScreenSharingInteractionController.endRemoteControlSession()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionController.endRemoteControlSession()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_4_152(**(_QWORD **)(v0 + 24));
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = (_QWORD *)OUTLINED_FUNCTION_19_13();
    *(_QWORD *)(v0 + 40) = v2;
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v2, (uint64_t)closure #1 in ScreenSharingInteractionController.endRemoteControlSession(), v5);
  }
  else
  {
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_35_53();
  }
  return OUTLINED_FUNCTION_16(v3);
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_7_132();
  if (!v0)
    OUTLINED_FUNCTION_83_30();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ScreenSharingInteractionController.updateInteractionSession()()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t (*v12)(void);
  char v13;
  uint64_t result;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *v17;
  char v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  v2 = __swift_project_value_buffer(v1, (uint64_t)&static Log.screenSharing);
  v3 = v0;
  v4 = OUTLINED_FUNCTION_38_3();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = OUTLINED_FUNCTION_105();
    v23 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v6 = 136315906;
    v7 = v6 + 4;
    OUTLINED_FUNCTION_46_45((uint64_t)"updateInteractionSession()", v21, v2, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 1024;
    OUTLINED_FUNCTION_42_60();
    OUTLINED_FUNCTION_91_21();
    *(_WORD *)(v6 + 18) = 1024;
    OUTLINED_FUNCTION_90_21();
    v8();
    OUTLINED_FUNCTION_91_21();
    *(_WORD *)(v6 + 24) = 2080;
    if (OUTLINED_FUNCTION_4_152(*v3))
    {
      OUTLINED_FUNCTION_74_24();
      v9 = String.init<A>(reflecting:)();
      v7 = v10;
    }
    else
    {
      v9 = OUTLINED_FUNCTION_64_29();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v7, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_27();

    _os_log_impl(&dword_1BD004000, v4, v5, "%s isBroadcastingScreenSharing=%{BOOL}d hasJoinedOneToOneConversation%{BOOL}d session=%s", (uint8_t *)v6, 0x22u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v11 = OUTLINED_FUNCTION_42_60();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_90_21();
    v0 = v3;
    v13 = v12();
  }
  else
  {
    v13 = 0;
  }
  result = OUTLINED_FUNCTION_33_73(*v3);
  if ((v13 & 1) == 0)
  {
    if (!result)
      return result;
    v17 = *(NSObject **)(result + 24);
    swift_retain();
    v18 = GroupSession.isLocallyInitiated.getter();
    OUTLINED_FUNCTION_43();
    if ((v18 & 1) != 0)
    {
      OUTLINED_FUNCTION_38_3();
      v19 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_5_3(v19))
      {
        v20 = (uint8_t *)OUTLINED_FUNCTION_105();
        *(_WORD *)v20 = 0;
        OUTLINED_FUNCTION_130(&dword_1BD004000, v17, (os_log_type_t)v2, "Resetting interaction session", v20);
        OUTLINED_FUNCTION_60();
      }

      ScreenSharingInteractionController.resetSession()();
    }
    return swift_release();
  }
  if (result)
    return swift_release();
  OUTLINED_FUNCTION_38_3();
  v15 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v15))
  {
    v16 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v16 = 0;
    OUTLINED_FUNCTION_130(&dword_1BD004000, v0, (os_log_type_t)v2, "Starting interaction session", v16);
    OUTLINED_FUNCTION_60();
  }

  return ScreenSharingInteractionController.startInteractionSession()();
}

uint64_t ScreenSharingInteractionController.startInteractionSession()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int EnumTagSinglePayload;
  id v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2_20();
  v3 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  v4 = (_QWORD *)OUTLINED_FUNCTION_15();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v3);
  v6 = v0;
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_88_19((uint64_t)v6, &demangling cache variable for type metadata for TaskPriority?);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
    if (v4[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = &async function pointer to partial apply for closure #1 in ScreenSharingInteractionController.startInteractionSession();
  *(_QWORD *)(v7 + 24) = v4;
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in ScreenSharingInteractionController.startInteractionSession()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FeatureEligibility?);
  v4[6] = swift_task_alloc();
  v5 = type metadata accessor for FeatureEligibilityDomain();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v6 = type metadata accessor for FeatureEligibility();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #1 in ScreenSharingInteractionController.startInteractionSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t));
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void (*v28)(uint64_t, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  NSObject *v41;
  os_log_type_t v42;
  _BOOL8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  void (*v82)(uint64_t, _QWORD, uint64_t);
  os_log_type_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  void (*v85)(uint64_t, uint64_t);
  unsigned int v86;
  void (*v87)(uint64_t);
  _QWORD *v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v88 = (_QWORD *)(*(_QWORD *)(v0 + 40)
                 + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker);
  __swift_project_boxed_opaque_existential_1(v88, v88[3]);
  v86 = *MEMORY[0x1E0D20C68];
  v87 = *(void (**)(uint64_t))(v2 + 104);
  v87(v1);
  dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)();
  v85 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v85(v1, v3);
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = OUTLINED_FUNCTION_17_2();
  v9 = __swift_project_value_buffer(v8, (uint64_t)&static Log.screenSharing);
  *(_QWORD *)(v0 + 136) = v9;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t)))(v6 + 16);
  v10(v4, v5, v7);
  v11 = v9;
  Logger.logObject.getter();
  v12 = OUTLINED_FUNCTION_12_0();
  v13 = OUTLINED_FUNCTION_5_3(v12);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 80);
  v89 = (void (*)(uint64_t, uint64_t, uint64_t))v10;
  if (v13)
  {
    v83 = v6;
    v16 = *(_QWORD *)(v0 + 48);
    v79 = *(_QWORD *)(v0 + 88);
    v17 = (uint8_t *)swift_slowAlloc();
    v90 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v17 = 136315138;
    v10(v16, v14, (uint64_t (*)(uint64_t, uint64_t))v15);
    v18 = OUTLINED_FUNCTION_66_35();
    __swift_storeEnumTagSinglePayload(v18, v19, v20, v15);
    specialized >> prefix<A>(_:)(v16);
    v22 = v21;
    v24 = v23;
    OUTLINED_FUNCTION_88_19(v21, &demangling cache variable for type metadata for FeatureEligibility?);
    *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v24, &v90);
    OUTLINED_FUNCTION_26_38();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_79_27(v79);
    OUTLINED_FUNCTION_48(&dword_1BD004000, v11, v83, "Loaded drawToHighlight eligibility %s", v17);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_79_27(*(_QWORD *)(v0 + 88));

  *(_QWORD *)(v0 + 144) = v7;
  v25 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *MEMORY[0x1E0D20C48];
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 88) + 104);
  v28(v25, *MEMORY[0x1E0D20C48], v26);
  lazy protocol witness table accessor for type UUID and conformance UUID(lazy protocol witness table cache variable for type FeatureEligibility and conformance FeatureEligibility, (void (*)(uint64_t))MEMORY[0x1E0D20C50]);
  v30 = v29;
  OUTLINED_FUNCTION_21_6();
  v31 = dispatch thunk of static Equatable.== infix(_:_:)();
  v7(v25, v26);
  if ((v31 & 1) != 0)
  {
    OUTLINED_FUNCTION_99_16();
    v32 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_23_5(v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v33 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v31, (os_log_type_t)v25, "Draw to highlight restricted by OS", v33);
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_9_118();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    OUTLINED_FUNCTION_535();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v77 = v30;
    LODWORD(v78) = v27;
    v81 = (uint64_t)v28;
    v84 = v7;
    v36 = *(_QWORD *)(v0 + 96);
    v35 = *(_QWORD *)(v0 + 104);
    v38 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 80);
    v39 = *(_QWORD *)(v0 + 56);
    v40 = (void (*)(uint64_t, uint64_t))v88[3];
    v41 = __swift_project_boxed_opaque_existential_1(v88, (uint64_t)v40);
    ((void (*)(uint64_t, _QWORD, uint64_t))v87)(v38, v86, v39);
    dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)();
    v85(v38, v39);
    v89(v36, v35, v37);
    OUTLINED_FUNCTION_99_16();
    v42 = OUTLINED_FUNCTION_12_0();
    v43 = os_log_type_enabled(v41, v42);
    v51 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 80);
    if (v43)
    {
      v53 = *(_QWORD *)(v0 + 48);
      v54 = (uint8_t *)OUTLINED_FUNCTION_105();
      v90 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v54 = 136315138;
      v89(v53, v51, v52);
      v55 = OUTLINED_FUNCTION_66_35();
      __swift_storeEnumTagSinglePayload(v55, v56, v57, v52);
      specialized >> prefix<A>(_:)(v53);
      v59 = v58;
      v61 = v60;
      OUTLINED_FUNCTION_88_19(v58, &demangling cache variable for type metadata for FeatureEligibility?);
      *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v59, v61, &v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v62 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_65_31(v62, v63, v64, v65, v66, v67, v68, v69, v76, v77, v78, v81, v84);
      OUTLINED_FUNCTION_48(&dword_1BD004000, v41, v42, "Loaded remoteControl eligibility %s", v54);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_65_31(v43, v44, v45, v46, v47, v48, v49, v50, v76, v30, v78, v81, v84);

    OUTLINED_FUNCTION_99_16();
    v70 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_23_5(v70))
    {
      v71 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v71 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v41, (os_log_type_t)v51, "Started screen sharing, beginning interaction activity", v71);
      OUTLINED_FUNCTION_60();
    }
    v72 = *(_QWORD *)(v0 + 112);
    v73 = *(_QWORD *)(v0 + 80);

    v82(v72, v80, v73);
    v74 = dispatch thunk of static Equatable.== infix(_:_:)();
    v40(v72, v73);
    *(_BYTE *)(v0 + 168) = (v74 & 1) == 0;
    v75 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v75;
    lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity();
    *v75 = v0;
    v75[1] = closure #1 in ScreenSharingInteractionController.startInteractionSession();
    return GroupActivity.activate()();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_72_32();
  OUTLINED_FUNCTION_9_118();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 160);
  v2 = v1;
  v3 = v1;
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 160);
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v8 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v8 = v10;
    OUTLINED_FUNCTION_48_3();
    OUTLINED_FUNCTION_48_3();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v5, "Error starting screen sharing interaction activity: %@", v7);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_48_3();
  OUTLINED_FUNCTION_72_32();
  OUTLINED_FUNCTION_9_118();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ScreenSharingInteractionController.notifyObservers(with:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_20();
  v18 = type metadata accessor for DispatchQoS();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_11_2();
  v8 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v8 + 16) = 0;
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock];
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  v11 = v2;
  os_unfair_lock_lock(v10);
  v12 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers], sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKScreenSharingInteractionControllerDelegate);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(_QWORD *)(v8 + 16) = v13;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = (_QWORD *)OUTLINED_FUNCTION_15();
  v15[2] = v8;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = partial apply for closure #2 in ScreenSharingInteractionController.notifyObservers(with:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_122;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_43();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v4, v3, v16);
  _Block_release(v16);

  OUTLINED_FUNCTION_4_30(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v18);
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #2 in ScreenSharingInteractionController.notifyObservers(with:)(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = swift_bridgeObjectRetain();
    specialized Sequence.forEach(_:)(v5, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id ScreenSharingInteractionController.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = OUTLINED_FUNCTION_4_152(*v0);
  if (v1)
  {
    OUTLINED_FUNCTION_77_24(v1);
    OUTLINED_FUNCTION_43();
  }
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask))
  {
    v2 = swift_retain();
    MEMORY[0x1C3B73268](v2, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    OUTLINED_FUNCTION_43();
  }
  v4.receiver = v0;
  v4.super_class = (Class)ObjC metadata update function for ScreenSharingInteractionController();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t ScreenSharingInteractionController.requestRemoteControl()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RemoteControlMessage?);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for RemoteControlMessage(0);
  v1[11] = OUTLINED_FUNCTION_6_15();
  v1[12] = OUTLINED_FUNCTION_5_55();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant?);
  v1[13] = OUTLINED_FUNCTION_6_15();
  v1[14] = OUTLINED_FUNCTION_5_55();
  v2 = type metadata accessor for Participant();
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = OUTLINED_FUNCTION_6_15();
  v1[18] = OUTLINED_FUNCTION_5_55();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  os_log_type_t v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  NSObject *v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  NSObject *log;
  os_log_type_t type;
  uint64_t (*v59)(_QWORD, _QWORD);
  uint64_t v60[2];

  v2 = (void **)(v1 + 64);
  v3 = OUTLINED_FUNCTION_4_152(**(_QWORD **)(v1 + 64));
  *(_QWORD *)(v1 + 152) = v3;
  if (!v3)
  {
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v11 = *v2;
    v12 = OUTLINED_FUNCTION_17_2();
    v13 = __swift_project_value_buffer(v12, (uint64_t)&static Log.screenSharing);
    v14 = v11;
    Logger.logObject.getter();
    v15 = OUTLINED_FUNCTION_232();
    v16 = OUTLINED_FUNCTION_5_3(v15);
    v17 = *v2;
    if (v16)
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_105();
      v60[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)(v1 + 16) = v17;
      ObjC metadata update function for ScreenSharingInteractionController();
      v19 = v17;
      v20 = String.init<A>(reflecting:)();
      *(_QWORD *)(v1 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v60);
      OUTLINED_FUNCTION_26_38();

      OUTLINED_FUNCTION_30_4();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v13, v0, "Couldn't request remoteControl because we can't find the session on self: %s", v18);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_16;
  }
  v4 = (_QWORD *)v3;
  GroupSession.activeParticipants.getter();
  OUTLINED_FUNCTION_11_8();
  v5 = OUTLINED_FUNCTION_21_6();
  v7 = specialized _NativeSet.filter(_:)(v5, v6);
  v8 = v7;
  if (*(_QWORD *)(v7 + 16) != 1)
  {
    OUTLINED_FUNCTION_43();
    goto LABEL_10;
  }
  v10 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 120);
  specialized Collection.first.getter(v7, v10);
  OUTLINED_FUNCTION_43();
  if (__swift_getEnumTagSinglePayload(v10, 1, v9) == 1)
  {
    outlined destroy of AsyncStream<Bool>?(*(_QWORD *)(v1 + 112), (uint64_t *)&demangling cache variable for type metadata for Participant?);
LABEL_10:
    if (one-time initialization token for screenSharing != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v22, (uint64_t)&static Log.screenSharing);
    OUTLINED_FUNCTION_78_24();
    Logger.logObject.getter();
    v23 = OUTLINED_FUNCTION_232();
    if (os_log_type_enabled(v8, v23))
    {
      v24 = (uint8_t *)OUTLINED_FUNCTION_105();
      v60[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v1 + 32) = v4[3];
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSession<ScreenSharingInteractionActivity>);
      v25 = String.init<A>(reflecting:)();
      *(_QWORD *)(v1 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_16_8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v23, "Couldn't request remoteControl because we can't find the remote participant on session: %s", v24);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    swift_release_n();
LABEL_16:
    OUTLINED_FUNCTION_50_53();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_625();
    OUTLINED_FUNCTION_633();
    OUTLINED_FUNCTION_575();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 32))(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  UUID.init()();
  type metadata accessor for RemoteControlRequest(0);
  static Date.now.getter();
  OUTLINED_FUNCTION_64();
  swift_storeEnumTagMultiPayload();
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v29 = *(_QWORD *)(v1 + 136);
  v28 = *(_QWORD *)(v1 + 144);
  v31 = *(_QWORD *)(v1 + 120);
  v30 = *(_QWORD *)(v1 + 128);
  v33 = *(_QWORD *)(v1 + 88);
  v32 = *(_QWORD *)(v1 + 96);
  v34 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v34, (uint64_t)&static Log.screenSharing);
  outlined init with copy of RemoteControlMessage(v32, v33);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  v35(v29, v28, v31);
  v36 = Logger.logObject.getter();
  type = static os_log_type_t.default.getter();
  v37 = os_log_type_enabled(v36, type);
  v38 = *(_QWORD *)(v1 + 128);
  v39 = *(_QWORD *)(v1 + 120);
  if (v37)
  {
    v55 = v35;
    v40 = *(_QWORD *)(v1 + 104);
    v56 = *(_QWORD *)(v1 + 136);
    v42 = *(_QWORD *)(v1 + 80);
    v41 = *(_QWORD *)(v1 + 88);
    v43 = *(_QWORD *)(v1 + 72);
    v44 = OUTLINED_FUNCTION_105();
    v60[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v44 = 136315394;
    outlined init with copy of RemoteControlMessage(v41, v43);
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v42);
    specialized >> prefix<A>(_:)(v43);
    v46 = v45;
    log = v36;
    v48 = v47;
    OUTLINED_FUNCTION_86_18(v45, &demangling cache variable for type metadata for RemoteControlMessage?);
    *(_QWORD *)(v1 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v48, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of RemoteControlMessage(v41);
    *(_WORD *)(v44 + 12) = 2080;
    v55(v40, v56, v39);
    __swift_storeEnumTagSinglePayload(v40, 0, 1, v39);
    specialized >> prefix<A>(_:)(v40);
    v50 = v49;
    v52 = v51;
    outlined destroy of AsyncStream<Bool>?(v40, (uint64_t *)&demangling cache variable for type metadata for Participant?);
    *(_QWORD *)(v1 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v52, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_92_20();
    _os_log_impl(&dword_1BD004000, log, type, "Sending remote control message: %s to: %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  outlined destroy of RemoteControlMessage(*(_QWORD *)(v1 + 88));
  v53 = *(_QWORD *)(v38 + 8);
  OUTLINED_FUNCTION_92_20();

  *(_QWORD *)(v1 + 160) = v53;
  v59 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(*v4 + 536) + *(_QWORD *)(*v4 + 536));
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 168) = v54;
  *v54 = v1;
  v54[1] = ScreenSharingInteractionController.requestRemoteControl();
  return v59(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 144));
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_2_14();
  return OUTLINED_FUNCTION_4_4();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release();
  outlined destroy of RemoteControlMessage(v2);
  v3 = OUTLINED_FUNCTION_21_6();
  v1(v3);
  OUTLINED_FUNCTION_50_53();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release();
  outlined destroy of RemoteControlMessage(v2);
  v3 = OUTLINED_FUNCTION_64();
  v1(v3);
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_625();
  OUTLINED_FUNCTION_633();
  OUTLINED_FUNCTION_575();
  OUTLINED_FUNCTION_535();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ScreenSharingInteractionController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ScreenSharingInteractionController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ScreenSharingInteractionController@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ScreenSharingInteractionController();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void ScreenSharingInteractionController.screenSharingStateMonitor(_:didUpdateScreenSharingBroadcastingState:)(uint64_t a1, char a2)
{
  ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(a2);
}

unint64_t lazy protocol witness table accessor for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity.CodingKeys, &unk_1E76462C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity.CodingKeys, &unk_1E76462C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity.CodingKeys, &unk_1E76462C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity.CodingKeys, &unk_1E76462C0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity.CodingKeys and conformance ScreenSharingInteractionActivity.CodingKeys);
  }
  return result;
}

void specialized _NativeSet.extractSubset(using:count:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationParticipant>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUScreenSharingRequest>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUConversationMember>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t *)&demangling cache variable for type metadata for _SetStorage<UUID>, &lazy protocol witness table cache variable for type UUID and conformance UUID, MEMORY[0x1E0CB09C8]);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<TUHandle>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _SetStorage<SGURL>);
}

{
  specialized _NativeSet.extractSubset(using:count:)(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x1E0CB4250], (uint64_t *)&demangling cache variable for type metadata for _SetStorage<Participant>, &lazy protocol witness table cache variable for type Participant and conformance Participant, MEMORY[0x1E0CB4260]);
}

void specialized _NativeSet.extractSubset(using:count:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;

  if (!a3)
  {
LABEL_35:
    OUTLINED_FUNCTION_19();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v8 = OUTLINED_FUNCTION_102_16();
  v9 = v8;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = v8 + 56;
  while (1)
  {
    if (v10)
    {
      OUTLINED_FUNCTION_330_1();
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_35;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_35;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_35;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v9 + 40);
    v19 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v14);
    v20 = NSObject._rawHashValue(seed:)(v18) & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_40_2();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        v24 = v22 == v23;
        if (v22 == v23)
          v22 = 0;
        v21 |= v24;
        if (*(_QWORD *)(v12 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_38_2();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_39_3();
LABEL_33:
    OUTLINED_FUNCTION_24_54();
    *(_QWORD *)(v12 + v25) |= v26;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v27) = v19;
    OUTLINED_FUNCTION_85_26();
    if (v28)
      goto LABEL_38;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_35;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void specialized _NativeSet.extractSubset(using:count:)(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;

  if (!a3)
  {
LABEL_35:
    OUTLINED_FUNCTION_19();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
  v6 = OUTLINED_FUNCTION_102_16();
  v7 = v6;
  v27 = a2;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = v6 + 56;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v13 >= v27)
      goto LABEL_35;
    v14 = a1[v13];
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v27)
        goto LABEL_35;
      v14 = a1[v9];
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v27)
          goto LABEL_35;
        v14 = a1[v9];
        if (!v14)
          break;
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    v19 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_40_2();
      while (++v22 != v23 || (v21 & 1) == 0)
      {
        v24 = v22 == v23;
        if (v22 == v23)
          v22 = 0;
        v21 |= v24;
        if (*(_QWORD *)(v10 + 8 * v22) != -1)
        {
          OUTLINED_FUNCTION_38_2();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_39_3();
LABEL_33:
    *(_QWORD *)(v10 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v25 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    *v25 = v17;
    v25[1] = v18;
    OUTLINED_FUNCTION_85_26();
    if (v26)
      goto LABEL_38;
  }
  v15 = v13 + 3;
  if (v15 >= v27)
    goto LABEL_35;
  v14 = a1[v15];
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v27)
      goto LABEL_35;
    v14 = a1[v9];
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
}

void specialized _NativeSet.extractSubset(using:count:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t *a6, _QWORD *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a7;
  v42 = a8;
  v40 = a5;
  v13 = ((uint64_t (*)(_QWORD))a5)(0);
  v43 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  if (!a3)
  {
LABEL_36:
    OUTLINED_FUNCTION_19();
    return;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    v16 = static _SetStorage.allocate(capacity:)();
    v17 = v16;
    v38 = a1;
    v39 = a2;
    if (a2 < 1)
      v18 = 0;
    else
      v18 = *a1;
    v19 = 0;
    v20 = v16 + 56;
    while (1)
    {
      if (v18)
      {
        OUTLINED_FUNCTION_330_1();
        v22 = v21 | (v19 << 6);
      }
      else
      {
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_39;
        if (v23 >= v39)
          goto LABEL_36;
        v24 = v38[v23];
        ++v19;
        if (!v24)
        {
          v19 = v23 + 1;
          if (v23 + 1 >= v39)
            goto LABEL_36;
          v24 = v38[v19];
          if (!v24)
          {
            v19 = v23 + 2;
            if (v23 + 2 >= v39)
              goto LABEL_36;
            v24 = v38[v19];
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v39)
                goto LABEL_36;
              v24 = v38[v25];
              if (!v24)
              {
                while (1)
                {
                  v19 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    break;
                  if (v19 >= v39)
                    goto LABEL_36;
                  v24 = v38[v19];
                  ++v25;
                  if (v24)
                    goto LABEL_24;
                }
LABEL_40:
                __break(1u);
                return;
              }
              v19 = v25;
            }
          }
        }
LABEL_24:
        v18 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      v26 = a4;
      v27 = *(_QWORD *)(a4 + 48);
      v28 = *(_QWORD *)(v43 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v15, v27 + v28 * v22, v13);
      lazy protocol witness table accessor for type UUID and conformance UUID(v41, v40);
      v29 = dispatch thunk of Hashable._rawHashValue(seed:)() & ~(-1 << *(_BYTE *)(v17 + 32));
      if (((-1 << v29) & ~*(_QWORD *)(v20 + 8 * (v29 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_40_2();
        while (++v31 != v32 || (v30 & 1) == 0)
        {
          v33 = v31 == v32;
          if (v31 == v32)
            v31 = 0;
          v30 |= v33;
          if (*(_QWORD *)(v20 + 8 * v31) != -1)
          {
            OUTLINED_FUNCTION_38_2();
            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_39_3();
LABEL_34:
      OUTLINED_FUNCTION_24_54();
      *(_QWORD *)(v20 + v34) |= v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(*(_QWORD *)(v17 + 48) + v36 * v28, v15, v13);
      ++*(_QWORD *)(v17 + 16);
      if (__OFSUB__(a3--, 1))
        goto LABEL_38;
      a4 = v26;
      if (!a3)
        goto LABEL_36;
    }
  }
}

id specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _DWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *v37;
  id v38;
  id v39;
  void (*v40)(void);
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  objc_super v57;
  unint64_t v58;
  uint64_t v59[5];

  v55 = a1;
  v56 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v6);
  v54 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<RemoteControlState>);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FeatureEligibilityChecker();
  v59[3] = v16;
  v59[4] = MEMORY[0x1E0D20C78];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v59);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(boxed_opaque_existential_1, a3, v16);
  *(_QWORD *)&a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = 0;
  v18 = &a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_QWORD *)v18 + 4) = 0;
  v19 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock;
  type metadata accessor for Lock();
  v20 = swift_allocObject();
  v21 = a4;
  v22 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v20 + 16) = v22;
  *v22 = 0;
  *(_QWORD *)&a4[v19] = v20;
  v23 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers;
  *(_QWORD *)&v21[v23] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v24 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session];
  v58 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v24, v15, v12);
  v25 = (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate];
  v26 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v26);
  v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation] = 0;
  v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing] = 0;
  v27 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState];
  v58 = 0xA000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v27, v11, v8);
  v28 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI];
  *(_QWORD *)v28 = TPNumberPadCharacter.rawValue.getter;
  *((_QWORD *)v28 + 1) = 0;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)&static Log.screenSharing);
  v30 = Logger.logObject.getter();
  v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_1BD004000, v30, v31, "Setting up DeviceRestrictionController and disabling restrictions on launch", v32, 2u);
    MEMORY[0x1C3B751B8](v32, -1, -1);
  }

  v33 = &v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_deviceRestrictionController];
  v34 = type metadata accessor for DeviceRestrictionController();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v56, v34);
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
  outlined init with copy of RadarReporting((uint64_t)v59, (uint64_t)&v21[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker]);

  v37 = (objc_class *)type metadata accessor for ScreenSharingInteractionController();
  v57.receiver = v21;
  v57.super_class = v37;
  v38 = objc_msgSendSuper2(&v57, sel_init);
  v39 = v55;
  if ((objc_msgSend(v55, sel_screenSharingDrawToHighlightEnabled) & 1) != 0
    || objc_msgSend(v39, sel_screenSharingRemoteControlEnabled))
  {
    if (one-time initialization token for sharedMonitor != -1)
      swift_once();
    v40 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingStateMonitor.sharedMonitor) + 0x140);
    v41 = v38;
    v40();

    v42 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v54, 1, 1, v42);
    type metadata accessor for MainActor();
    v43 = (char *)v41;
    v44 = static MainActor.shared.getter();
    v45 = (_QWORD *)swift_allocObject();
    v46 = MEMORY[0x1E0DF06E8];
    v45[2] = v44;
    v45[3] = v46;
    v45[4] = v43;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    v48 = v47;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
    *(_QWORD *)&v43[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = v48;
    swift_release();
  }
  else
  {
    if (one-time initialization token for screenTime != -1)
      swift_once();
    __swift_project_value_buffer(v29, (uint64_t)&static Log.screenTime);
    v49 = Logger.logObject.getter();
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1BD004000, v49, v50, "Not starting screen sharing interaction controller, as the correct feature flags are not set.", v51, 2u);
      MEMORY[0x1C3B751B8](v51, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
  }
  return v38;
}

id specialized ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *boxed_opaque_existential_1;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _DWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  objc_class *v41;
  id v42;
  id v43;
  void (*v44)(void);
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  objc_super v61;
  unint64_t v62;
  uint64_t v63[5];

  v59 = a1;
  v60 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v11);
  v58 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<RemoteControlState>);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63[3] = a6;
  v63[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v63);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a3, a6);
  *(_QWORD *)&a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = 0;
  v22 = &a4[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_groupSessionStateCancellable];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((_QWORD *)v22 + 4) = 0;
  v23 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_lock;
  type metadata accessor for Lock();
  v24 = swift_allocObject();
  v25 = a4;
  v26 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v24 + 16) = v26;
  *v26 = 0;
  *(_QWORD *)&a4[v23] = v24;
  v27 = OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_observers;
  *(_QWORD *)&v25[v27] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v28 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__session];
  v62 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v28, v20, v17);
  v29 = (uint64_t)&v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_latestRemoteControlDate];
  v30 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload(v29, 1, 1, v30);
  v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_hasJoinedOneToOneConversation] = 0;
  v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_isBroadcastingScreenSharing] = 0;
  v31 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController__remoteControlState];
  v62 = 0xA000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v31, v16, v13);
  v32 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_onUpdateUI];
  *(_QWORD *)v32 = TPNumberPadCharacter.rawValue.getter;
  *((_QWORD *)v32 + 1) = 0;
  if (one-time initialization token for screenSharing != -1)
    swift_once();
  v33 = type metadata accessor for Logger();
  __swift_project_value_buffer(v33, (uint64_t)&static Log.screenSharing);
  v34 = Logger.logObject.getter();
  v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_1BD004000, v34, v35, "Setting up DeviceRestrictionController and disabling restrictions on launch", v36, 2u);
    MEMORY[0x1C3B751B8](v36, -1, -1);
  }

  v37 = &v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_deviceRestrictionController];
  v38 = type metadata accessor for DeviceRestrictionController();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v60, v38);
  DeviceRestrictionController.setRestrictionsActive(_:)(0);
  outlined init with copy of RadarReporting((uint64_t)v63, (uint64_t)&v25[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_eligibilityChecker]);

  v41 = (objc_class *)type metadata accessor for ScreenSharingInteractionController();
  v61.receiver = v25;
  v61.super_class = v41;
  v42 = objc_msgSendSuper2(&v61, sel_init);
  v43 = v59;
  if ((objc_msgSend(v59, sel_screenSharingDrawToHighlightEnabled) & 1) != 0
    || objc_msgSend(v43, sel_screenSharingRemoteControlEnabled))
  {
    if (one-time initialization token for sharedMonitor != -1)
      swift_once();
    v44 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingStateMonitor.sharedMonitor) + 0x140);
    v45 = v42;
    v44();

    v46 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload(v58, 1, 1, v46);
    type metadata accessor for MainActor();
    v47 = (char *)v45;
    v48 = static MainActor.shared.getter();
    v49 = (_QWORD *)swift_allocObject();
    v50 = MEMORY[0x1E0DF06E8];
    v49[2] = v48;
    v49[3] = v50;
    v49[4] = v47;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    v52 = v51;

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    *(_QWORD *)&v47[OBJC_IVAR____TtC15ConversationKit34ScreenSharingInteractionController_sessionObserverTask] = v52;
    swift_release();
  }
  else
  {
    if (one-time initialization token for screenTime != -1)
      swift_once();
    __swift_project_value_buffer(v33, (uint64_t)&static Log.screenTime);
    v53 = Logger.logObject.getter();
    v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1BD004000, v53, v54, "Not starting screen sharing interaction controller, as the correct feature flags are not set.", v55, 2u);
      MEMORY[0x1C3B751B8](v55, -1, -1);
    }

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
  }
  return v42;
}

void sub_1BD61ACB4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_4_152(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD61ACEC()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(void *a1)
{
  uint64_t v1;

  return closure #1 in ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()(a1, *(_BYTE *)(v1 + 16));
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionController.cancelRemoteControlRequest()(v2, v3, v4, v5);
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.endRemoteControlSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionController.endRemoteControlSession()(v2, v3, v4, v5);
}

uint64_t sub_1BD61ADF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BD61AE1C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ScreenSharingInteractionController.notifyObservers(with:)()
{
  uint64_t v0;

  return closure #2 in ScreenSharingInteractionController.notifyObservers(with:)(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t type metadata accessor for ScreenSharingInteractionController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ScreenSharingInteractionController;
  if (!type metadata singleton initialization cache for ScreenSharingInteractionController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined init with copy of RemoteControlMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteControlMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RemoteControlMessage(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteControlMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity, &type metadata for ScreenSharingInteractionActivity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity, &type metadata for ScreenSharingInteractionActivity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity;
  if (!lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenSharingInteractionActivity, &type metadata for ScreenSharingInteractionActivity);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenSharingInteractionActivity and conformance ScreenSharingInteractionActivity);
  }
  return result;
}

void sub_1BD61AF8C(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x110))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD61AFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VideoMessageController.$state : VideoMessageController(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<ScreenSharingInteractionSession?>.Publisher, (uint64_t (*)(uint64_t))ScreenSharingInteractionController.$session.setter);
}

void sub_1BD61AFE4(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x130))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD61B01C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x148))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD61B054(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x150))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD61B08C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x160))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD61B0C4(char *a1)
{
  ScreenSharingInteractionController.isBroadcastingScreenSharing.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD61B0E4(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x190))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD61B118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for VideoMessageController.$state : VideoMessageController(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<RemoteControlState>.Publisher, (uint64_t (*)(uint64_t))ScreenSharingInteractionController.$remoteControlState.setter);
}

uint64_t storeEnumTagSinglePayload for ScreenSharingInteractionActivity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD61B190 + 4 * byte_1BD66A6D0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD61B1C4 + 4 * byte_1BD66A6CB[v4]))();
}

uint64_t sub_1BD61B1C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD61B1CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD61B1D4);
  return result;
}

uint64_t sub_1BD61B1E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD61B1E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD61B1EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD61B1F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenSharingInteractionActivity()
{
  return &type metadata for ScreenSharingInteractionActivity;
}

uint64_t type metadata accessor for CNKScreenSharingInteractionControllerFactory(uint64_t a1)
{
  return _sSo8NSObjectCMaTm_0(a1, &lazy cache variable for type metadata for CNKScreenSharingInteractionControllerFactory);
}

uint64_t ObjC metadata update function for ScreenSharingInteractionController()
{
  return type metadata accessor for ScreenSharingInteractionController();
}

void type metadata completion function for ScreenSharingInteractionController()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for Published<ScreenSharingInteractionSession?>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date?();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DeviceRestrictionController();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<RemoteControlState>();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for ScreenSharingInteractionController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.session.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.$session.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.remoteControlStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.latestRemoteControlDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.hasJoinedOneToOneConversation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.isBroadcastingScreenSharing.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.remoteControlState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.$remoteControlState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.onUpdateUI.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.__allocating_init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.addDelegate(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.removeDelegate(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.notifyObserversOfUpdatedRemoteControlStatus()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.sessionDidRequestRemoteControl(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.shouldPresentRemoteControlOnboarding()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.handleRemoteControlUserResponse(allowRemoteControl:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.cancelRemoteControlRequest()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.endRemoteControlSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.notifyObservers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ScreenSharingInteractionController.requestRemoteControl()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)OUTLINED_FUNCTION_19_13();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_140(v1, (uint64_t)partial apply for closure #2 in CallScreeningEndingState.enteredState(), v4);
  return OUTLINED_FUNCTION_16(v2);
}

void type metadata accessor for Published<ScreenSharingInteractionSession?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<ScreenSharingInteractionSession?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ScreenSharingInteractionSession?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<ScreenSharingInteractionSession?>);
  }
}

void type metadata accessor for Published<RemoteControlState>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<RemoteControlState>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<RemoteControlState>);
  }
}

uint64_t storeEnumTagSinglePayload for ScreenSharingInteractionActivity.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BD61B6DC + 4 * byte_1BD66A6D5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BD61B6FC + 4 * byte_1BD66A6DA[v4]))();
}

_BYTE *sub_1BD61B6DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BD61B6FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD61B704(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD61B70C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BD61B714(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BD61B71C(_DWORD *result)
{
  *result = 0;
  return result;
}

void *type metadata accessor for ScreenSharingInteractionActivity.CodingKeys()
{
  return &unk_1E76462C0;
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.startInteractionSession()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return closure #1 in ScreenSharingInteractionController.startInteractionSession()(v2, v3, v4, v5);
}

uint64_t sub_1BD61B848()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_61_5(v5);
  *v6 = v2;
  v6[1] = partial apply for closure #1 in VideoMessageInboxController.updateCallItems();
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu))(a1, v4);
}

uint64_t protocol witness for GroupActivity.metadata.getter in conformance ScreenSharingInteractionActivity(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t partial apply for closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_174();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_7_11(v1);
  return OUTLINED_FUNCTION_32_64(v2, v3, v4, v5);
}

uint64_t sub_1BD61B960()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD61B984()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #1 in ScreenSharingInteractionController.init(featureFlags:deviceRestrictionController:eligibilityChecker:)(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void OUTLINED_FUNCTION_85_26()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_99_16()
{
  return Logger.logObject.getter();
}

uint64_t OUTLINED_FUNCTION_102_16()
{
  return static _SetStorage.allocate(capacity:)();
}

id LinkCreationCoordinator.__allocating_init(parentViewController:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  v2 = (void *)OUTLINED_FUNCTION_14_8();
  return OUTLINED_FUNCTION_3_134(v2, v3, v4, v5);
}

id TUStringShareItem.__allocating_init(message:)(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMessage_, v5);

  return v6;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed UIActivityType?, @unowned Bool, @guaranteed [Any]?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void (*v8)(void *, uint64_t, uint64_t, void *);
  uint64_t v9;
  id v10;
  id v11;

  v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4)
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  else
    v9 = 0;
  swift_retain();
  v10 = a2;
  v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void key path setter for LinkCreationCoordinator.parentViewController : LinkCreationCoordinator(uint64_t a1)
{
  LinkCreationCoordinator.parentViewController.setter(*(id *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t LinkCreationCoordinator.parentViewController.getter()
{
  swift_beginAccess();
  return swift_unknownObjectUnownedLoadStrong();
}

void LinkCreationCoordinator.parentViewController.setter(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_parentViewController;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectUnownedAssign();

}

void LinkCreationCoordinator.shareSheetViewController.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController) = a1;

}

void LinkCreationCoordinator.conversationLink.didset()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  Class isa;
  Swift::String v18;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
    if (v2)
    {
      v3 = objc_allocWithZone(MEMORY[0x1E0DBD310]);
      outlined copy of ConversationLink?(v1);
      v4 = v2;
      v5 = objc_msgSend(v3, sel_initWithTUConversationLink_, v1);
      v6 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUStringShareItem);
      v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v18._object = (void *)0xE000000000000000;
      v8._object = (void *)0x80000001BD674B10;
      v8._countAndFlagsBits = 0xD000000000000010;
      v9.value._countAndFlagsBits = 0x61737265766E6F43;
      v9.value._object = (void *)0xEF74694B6E6F6974;
      v10._countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v18._countAndFlagsBits = 0;
      v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v18);

      v12 = TUStringShareItem.__allocating_init(message:)(v11._countAndFlagsBits, (uint64_t)v11._object);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1BD645380;
      v14 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
      *(_QWORD *)(v13 + 32) = v5;
      *(_QWORD *)(v13 + 88) = v6;
      *(_QWORD *)(v13 + 56) = v14;
      *(_QWORD *)(v13 + 64) = v12;
      v15 = v5;
      v16 = v12;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel__updateActivityItems_, isa);

      outlined consume of ConversationLink?(v1);
    }
  }
}

void *LinkCreationCoordinator.conversationLink.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return outlined copy of ConversationLink?(v2);
}

void LinkCreationCoordinator.conversationLink.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_QWORD *)(v3 + 16) = v2;
  outlined consume of ConversationLink?(v4);
  LinkCreationCoordinator.conversationLink.didset();
}

id LinkCreationCoordinator.init(parentViewController:)()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  swift_getObjectType();
  v0 = (void *)OUTLINED_FUNCTION_14_8();
  return OUTLINED_FUNCTION_3_134(v0, v1, v2, v3);
}

Swift::Void __swiftcall LinkCreationCoordinator.start(from:)(UIView *from)
{
  id v2;
  id v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  UIView *v9;
  _QWORD v10[6];

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_conversationManager);

  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
      specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
  }
  OUTLINED_FUNCTION_17_8(v4, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
  lazy protocol witness table accessor for type TUHandle and conformance NSObject();
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v7 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = from;
  v10[4] = partial apply for closure #1 in LinkCreationCoordinator.start(from:);
  v10[5] = v7;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
  v10[3] = &block_descriptor_123;
  v8 = _Block_copy(v10);
  v9 = from;
  swift_release();
  objc_msgSend(v3, sel_generateLinkWithInvitedMemberHandles_linkLifetimeScope_completionHandler_, isa, 0, v8);
  _Block_release(v8);

}

uint64_t closure #1 in LinkCreationCoordinator.start(from:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v8 = type metadata accessor for DispatchWorkItemFlags();
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS();
  v22 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a1;
  v15[4] = a4;
  v15[5] = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.start(from:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_31_3;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  v18 = a4;
  v19 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v23);
}

void closure #1 in closure #1 in LinkCreationCoordinator.start(from:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (_QWORD *)v8;
    if (a2)
    {
      v10 = a2;
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
      {
        specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
        v11 = v25;
      }
      else
      {
        v11 = MEMORY[0x1E0DEE9E8];
      }
      if (one-time initialization token for faceTime != -1)
        swift_once();
      v12 = static ParticipantContactDetailsCache.faceTime;
      v13 = one-time initialization token for conversationKit;
      swift_retain();
      if (v13 != -1)
        swift_once();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      v26 = a2;
      v27 = v11;
      v28 = v12;
      v14 = v10;
      swift_bridgeObjectRetain();
      swift_retain();
      LinkCreationCoordinator.conversationLink.setter((uint64_t)&v26);
      v26 = v14;
      v27 = v11;
      v28 = v12;
      LinkCreationCoordinator.shareLink(_:from:)(&v26, a3);
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
      if (a4)
      {
        v26 = a4;
        v16 = a4;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v17 = String.init<A>(reflecting:)();
        v19 = v18;
      }
      else
      {
        v19 = 0xE300000000000000;
        v17 = 7104878;
      }
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v15 + 32) = v17;
      *(_QWORD *)(v15 + 40) = v19;
      os_log(_:dso:log:type:_:)();
      v20 = swift_bridgeObjectRelease();
      v21 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x68))(v20);
      v23 = v22;
      ObjectType = swift_getObjectType();
      v26 = v21;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 16))(v9, ObjectType, v23);

    }
  }
}

void LinkCreationCoordinator.shareLink(_:from:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v5;
  uint64_t v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD aBlock[6];
  Swift::String v32;

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD310]), sel_initWithTUConversationLink_, *a1);
  v6 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TUStringShareItem);
  v7 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v32._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001BD674B10;
  v8._countAndFlagsBits = 0xD000000000000010;
  v9.value._countAndFlagsBits = 0x61737265766E6F43;
  v9.value._object = (void *)0xEF74694B6E6F6974;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v32);

  v12 = TUStringShareItem.__allocating_init(message:)(v11._countAndFlagsBits, (uint64_t)v11._object);
  type metadata accessor for LinkShareActivityViewController();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD645380;
  v14 = _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for TULinkShareItem);
  *(_QWORD *)(v13 + 32) = v5;
  *(_QWORD *)(v13 + 88) = v6;
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v12;
  v15 = v5;
  v16 = v12;
  v17 = LinkShareActivityViewController.__allocating_init(activityItems:applicationActivities:)((void *)v13, 0);
  objc_msgSend(v17, sel_setObjectManipulationDelegate_, v3);
  objc_msgSend(v17, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v17, sel_setAllowsCustomPresentationStyle_, 1);
  v18 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

  v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v19 == (id)1)
  {
    v21 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x68))();
    v22 = objc_msgSend(v21, sel_traitCollection);

    v23 = objc_msgSend(v22, sel_horizontalSizeClass);
    if (v23 == (id)2)
      objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
  }
  v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = partial apply for closure #1 in LinkCreationCoordinator.shareLink(_:from:);
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIActivityType?, @unowned Bool, @guaranteed [Any]?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_35_2;
  v25 = _Block_copy(aBlock);
  v26 = v17;
  swift_release();
  objc_msgSend(v26, sel_setCompletionWithItemsHandler_, v25);
  _Block_release(v25);

  v27 = objc_msgSend(v26, sel_popoverPresentationController);
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, sel_setSourceView_, a2);

  }
  v29 = (void *)(*(uint64_t (**)(void))((*v20 & *v3) + 0x68))();
  objc_msgSend(v29, sel_presentViewController_animated_completion_, v26, 1, 0);

  v30 = v26;
  LinkCreationCoordinator.shareSheetViewController.setter((uint64_t)v26);

}

Swift::Void __swiftcall LinkCreationCoordinator.stop()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController);
  if (v1)
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id LinkCreationCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LinkCreationCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LinkCreationCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LinkCreationCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void LinkCreationCoordinator.renameLink(to:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11[6];

  LinkCreationCoordinator.conversationLink.getter(v11);
  v4 = v11[0];
  if (v11[0])
  {
    v5 = v11[0];
    outlined consume of ConversationLink?(v4);
    v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v7 = objc_msgSend(v6, sel_conversationManager);

    v8 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    v9 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    v11[4] = partial apply for closure #1 in LinkCreationCoordinator.renameLink(to:);
    v11[5] = v9;
    v11[0] = (id)MEMORY[0x1E0C809B0];
    v11[1] = (id)1107296256;
    v11[2] = thunk for @escaping @callee_guaranteed (@guaranteed ASCLockupRequest?, @guaranteed Error?) -> ();
    v11[3] = &block_descriptor_19_1;
    v10 = _Block_copy(v11);
    swift_release();
    objc_msgSend(v7, sel_setLinkName_forConversationLink_completionHandler_, v8, v5, v10);
    _Block_release(v10);

  }
}

uint64_t closure #1 in LinkCreationCoordinator.renameLink(to:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:);
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_25_3;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  v16 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v16[3];

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    if (a2)
    {
      v8 = a2;
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
      {
        specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x1E0DEE9D8]);
        v9 = v15;
      }
      else
      {
        v9 = MEMORY[0x1E0DEE9E8];
      }
      if (one-time initialization token for faceTime != -1)
        swift_once();
      v16[0] = a2;
      v16[1] = v9;
      v16[2] = static ParticipantContactDetailsCache.faceTime;
      swift_retain();
      LinkCreationCoordinator.conversationLink.setter((uint64_t)v16);

    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
      if (a3)
      {
        v16[0] = a3;
        v11 = a3;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
        v12 = String.init<A>(reflecting:)();
        v14 = v13;
      }
      else
      {
        v14 = 0xE300000000000000;
        v12 = 7104878;
      }
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v14;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
  }
}

void closure #1 in LinkCreationCoordinator.shareLink(_:from:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = a5 + 16;
  swift_beginAccess();
  v9 = (_QWORD *)MEMORY[0x1C3B752C0](v8);
  if (v9)
  {
    v10 = v9;
    if (a4)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
      v12 = a4;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
      *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v11 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v11 + 32) = v13;
      *(_QWORD *)(v11 + 40) = v15;
      os_log(_:dso:log:type:_:)();
      v16 = swift_bridgeObjectRelease();
      v17 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v10) + 0x68))(v16);
      v19 = v18;
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 16))(v10, ObjectType, v19);
    }
    else
    {
      if (!a1)
      {
        v10 = v9;
        specialized LinkCreationCoordinator.invalidateLink(completionHandler:)((uint64_t)v10, v10);
        goto LABEL_7;
      }
      if ((a2 & 1) == 0)
      {
LABEL_7:

        return;
      }
      v17 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x68))();
      v22 = v21;
      v23 = swift_getObjectType();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v22 + 8))(v10, v23, v22);
    }

    goto LABEL_7;
  }
}

void closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x68))();
  v4 = v3;
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);

}

void specialized LinkCreationCoordinator.invalidateLink(completionHandler:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD v16[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a2;
  LinkCreationCoordinator.conversationLink.getter(v16);
  v4 = (void *)v16[0];
  if (v16[0])
  {
    v5 = a2;
    v6 = v4;
    outlined consume of ConversationLink?(v4);
    v7 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v8 = objc_msgSend(v7, sel_conversationManager);

    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:);
    *(_QWORD *)(v9 + 24) = v3;
    v16[4] = partial apply for closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:);
    v16[5] = v9;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
    v16[3] = &block_descriptor_44_1;
    v10 = _Block_copy(v16);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_invalidateLink_completionHandler_, v6, v10);
    _Block_release(v10);

    swift_release();
  }
  else
  {
    v11 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x68);
    v12 = a2;
    v8 = (id)v11();
    v14 = v13;
    ObjectType = swift_getObjectType();
    v16[0] = v8;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 8))(v12, ObjectType, v14);

    swift_release();
  }

}

uint64_t closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v8 = type metadata accessor for DispatchWorkItemFlags();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  aBlock[4] = partial apply for closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_50_1;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    if (a2)
    {
      v6 = a2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      v7 = String.init<A>(reflecting:)();
      v9 = v8;
    }
    else
    {
      v9 = 0xE300000000000000;
      v7 = 7104878;
    }
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v5 + 32) = v7;
    *(_QWORD *)(v5 + 40) = v9;
    os_log(_:dso:log:type:_:)();
    a1 = swift_bridgeObjectRelease();
  }
  return a3(a1);
}

Swift::Bool __swiftcall LinkCreationCoordinator._customizationAvailable(for:)(UIActivityViewController *a1)
{
  return 1;
}

uint64_t LinkCreationCoordinator._customizationGroups(for:)()
{
  return MEMORY[0x1E0DEE9D8];
}

Swift::String __swiftcall LinkCreationCoordinator.customLocalizedActionTitle(for:)(UIActivityViewController *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v1 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v2 = OUTLINED_FUNCTION_7_13(0xD00000000000001CLL, 0x80000001BD69AAA0);
  v4 = v3;

  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

void __swiftcall LinkCreationCoordinator.customActionViewController(for:)(UIViewController *__return_ptr retstr, UIActivityViewController *a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  objc_class *v13;
  NSBundle v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  objc_class *v26;
  NSBundle v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  _QWORD aBlock[6];

  v3 = v2;
  OUTLINED_FUNCTION_17_8((uint64_t)a2, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v4 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v5 = OUTLINED_FUNCTION_7_13(0xD000000000000019, 0x80000001BD69AAC0);
  v7 = v6;

  v8 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v5, v7, 0, 0, 1);
  v9 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v9 + 16) = v2;
  aBlock[4] = partial apply for closure #1 in LinkCreationCoordinator.customActionViewController(for:);
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = &block_descriptor_9_6;
  v10 = _Block_copy(aBlock);
  v11 = v3;
  swift_release();
  objc_msgSend(v8, sel_addTextFieldWithConfigurationHandler_, v10, 0xE000000000000000);
  _Block_release(v10);
  OUTLINED_FUNCTION_17_8(v12, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v13 = (objc_class *)OUTLINED_FUNCTION_9_119();
  OUTLINED_FUNCTION_7_14();
  v14.super.isa = v13;
  v19 = OUTLINED_FUNCTION_49_2(v15, v16, v17, v18, v14);
  v21 = v20;

  v22 = OUTLINED_FUNCTION_15();
  swift_unknownObjectUnownedInit();
  v23 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v11;
  v24 = v11;
  v25 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v19, v21, 0, (uint64_t)partial apply for closure #2 in LinkCreationCoordinator.customActionViewController(for:));
  v26 = (objc_class *)OUTLINED_FUNCTION_9_119();
  OUTLINED_FUNCTION_7_14();
  v27.super.isa = v26;
  v32 = OUTLINED_FUNCTION_49_2(v28, v29, v30, v31, v27);
  v34 = v33;

  v35 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v32, v34, 1, 0);
  objc_msgSend(v8, sel_addAction_, v25, 0xE000000000000000);
  v36 = objc_msgSend(v8, sel_addAction_, v35);
  v37 = (void *)(*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x68))(v36);
  objc_msgSend(v8, sel_showViewController_sender_, v37, 0);

}

id closure #1 in LinkCreationCoordinator.customActionViewController(for:)(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t countAndFlagsBits;
  void *object;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  id v14;
  Swift::String v15;

  LinkCreationCoordinator.conversationLink.getter(&v14);
  v2 = v14;
  if (v14
    && (v3 = v14,
        outlined consume of ConversationLink?(v2),
        outlined bridged method (ob) of @objc TUConversationLink.linkName.getter(v3),
        v5))
  {
    countAndFlagsBits = v4;
    object = v5;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v15._object = (void *)0xE000000000000000;
    v9._countAndFlagsBits = 0x454D495445434146;
    v9._object = (void *)0xED00004B4E494C5FLL;
    v10.value._countAndFlagsBits = 0x61737265766E6F43;
    v10.value._object = (void *)0xEF74694B6E6F6974;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = 0;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v15);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;
    swift_bridgeObjectRelease();

  }
  outlined bridged method (mbnn) of @objc UITextField.placeholder.setter(countAndFlagsBits, (uint64_t)object, a1);
  return objc_msgSend(a1, sel_setAutocapitalizationType_, 2);
}

void closure #2 in LinkCreationCoordinator.customActionViewController(for:)()
{
  void *Strong;
  unint64_t v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v1 = outlined bridged method (ob) of @objc UIAlertController.textFields.getter(Strong);
  if (!v1)
    return;
  v2 = v1;
  if (v1 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_4:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
    v3 = (id)MEMORY[0x1C3B73D18](0, v2);
  else
    v3 = *(id *)(v2 + 32);
  v7 = v3;
  swift_bridgeObjectRelease();
  v4 = outlined bridged method (pb) of @objc UILabel.text.getter(v7);
  if (v5)
  {
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v4 & 0xFFFFFFFFFFFFLL;
    if (v6)
      LinkCreationCoordinator.renameLink(to:)(v4, v5);

    goto LABEL_12;
  }

}

void outlined bridged method (mbnn) of @objc UITextField.placeholder.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setPlaceholder_, v4);

}

uint64_t outlined bridged method (ob) of @objc UIAlertController.textFields.getter(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_textFields);

  if (!v2)
    return 0;
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UITextField);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id specialized LinkCreationCoordinator.init(parentViewController:)(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_shareSheetViewController] = 0;
  v7 = &a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_conversationLink];
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = 0;
  v8 = &a2[OBJC_IVAR____TtC15ConversationKit23LinkCreationCoordinator_parentViewController];
  swift_beginAccess();
  *((_QWORD *)v8 + 1) = a4;
  swift_unknownObjectUnownedInit();
  v11.receiver = a2;
  v11.super_class = (Class)type metadata accessor for LinkCreationCoordinator();
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t sub_1BD61DF1C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.start(from:)(void *a1, void *a2)
{
  uint64_t v2;

  return closure #1 in LinkCreationCoordinator.start(from:)(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t type metadata accessor for LinkCreationCoordinator()
{
  return objc_opt_self();
}

id partial apply for closure #1 in LinkCreationCoordinator.customActionViewController(for:)(void *a1)
{
  return closure #1 in LinkCreationCoordinator.customActionViewController(for:)(a1);
}

uint64_t sub_1BD61DF6C()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_4()
{
  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();
  return swift_deallocObject();
}

void partial apply for closure #2 in LinkCreationCoordinator.customActionViewController(for:)()
{
  closure #2 in LinkCreationCoordinator.customActionViewController(for:)();
}

uint64_t sub_1BD61DFB8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x68))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t dispatch thunk of LinkCreationCoordinatorDelegate.coordinatorFinished(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LinkCreationCoordinatorDelegate.coordinatorFailed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for LinkCreationCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkCreationCoordinator.parentViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.__allocating_init(parentViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.start(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of LinkCreationCoordinator.stop()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.renameLink(to:)(void *a1, void *a2)
{
  uint64_t v2;

  return closure #1 in LinkCreationCoordinator.renameLink(to:)(a1, a2, v2);
}

uint64_t sub_1BD61E07C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)()
{
  uint64_t v0;

  closure #1 in closure #1 in LinkCreationCoordinator.renameLink(to:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1BD61E0B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_285();
  OUTLINED_FUNCTION_110_5();

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.start(from:)()
{
  uint64_t v0;

  closure #1 in closure #1 in LinkCreationCoordinator.start(from:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

void partial apply for closure #1 in LinkCreationCoordinator.shareLink(_:from:)(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  closure #1 in LinkCreationCoordinator.shareLink(_:from:)(a1, a2, a3, a4, v4);
}

uint64_t sub_1BD61E0FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)()
{
  uint64_t v0;

  closure #1 in closure #1 in LinkCreationCoordinator.shareLink(_:from:)(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1BD61E120()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(char a1, void *a2)
{
  uint64_t v2;

  return closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BD61E14C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)()
{
  uint64_t v0;

  return closure #1 in closure #1 in LinkCreationCoordinator.invalidateLink(completionHandler:)(*(unsigned __int8 *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t BroadcastingState.isMuted.getter(char a1)
{
  return a1 & 1;
}

uint64_t BroadcastingState.isAudioVideo.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 7) & 1;
}

unint64_t BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(uint64_t a1, uint64_t (**a2)(_QWORD, _QWORD), _QWORD *a3, uint64_t a4, char a5)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(a1, a3, a4, a5, ObjectType, a2);
}

uint64_t static BroadcastingState.== infix(_:_:)(unsigned __int16 a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v6 = (a2 == a5) & (((a3 & 1) == 0) ^ a6);
  if ((((unsigned __int16)a4 ^ a1) & 0xFF00) != 0)
    v6 = 0;
  if (((a1 & 1) == 0) == (a4 & 1))
    v6 = 0;
  if ((a6 & 0x80) == 0)
    v6 = 0;
  if (((a1 & 1) == 0) == (a4 & 1))
    v7 = 0;
  else
    v7 = ((a1 & 0x100) == 0) ^ (a4 >> 8) & 1;
  if ((a6 & 0x80) != 0)
    v8 = 0;
  else
    v8 = v7;
  if (a3 < 0)
    return v6;
  else
    return v8;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance BroadcastingState(uint64_t a1, uint64_t a2)
{
  return static BroadcastingState.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t BroadcastingState.cameraPosition.getter(unint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
    return (a1 >> 8);
  else
    return 3;
}

uint64_t BroadcastingState.isScreenSharing.getter(__int16 a1, uint64_t a2, char a3)
{
  char v3;

  if (a3 >= 0)
    v3 = HIBYTE(a1) & 1;
  else
    v3 = a3;
  return v3 & 1;
}

unint64_t specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(uint64_t a1, _QWORD *a2, uint64_t a3, char a4, uint64_t a5, uint64_t (**a6)(_QWORD, _QWORD))
{
  BOOL v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((a6[38](a5, a6) & 1) == 0)
    goto LABEL_7;
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 152))() & 1) != 0)
  {
    outlined init with copy of IDSLookupManager((uint64_t)a2, (uint64_t)v29);
    if ((a4 & 1) != 0)
    {
      v9 = 0;
    }
    else
    {
      v13 = v30;
      v14 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      v15 = objc_msgSend((id)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14), sel_currentVideoCalls);
      swift_unknownObjectRelease();
      type metadata accessor for TUCall();
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v9 = v17 < 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v18 = OUTLINED_FUNCTION_59_4(a6[44]);
    if (v9)
    {
      v19 = 0;
    }
    else
    {
      v20 = a2[3];
      v21 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v20);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 32))(v26, v20, v21);
      v22 = v27;
      v23 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      v19 = (unint64_t)v24 << 8;
    }
    OUTLINED_FUNCTION_59_4(a6[41]);
    OUTLINED_FUNCTION_1_157();
    v12 = v19 | v18 & 1;
  }
  else
  {
LABEL_7:
    v10 = OUTLINED_FUNCTION_59_4(a6[44]);
    OUTLINED_FUNCTION_59_4(a6[41]);
    OUTLINED_FUNCTION_1_157();
    if ((a6 & 1) != 0)
      v11 = 256;
    else
      v11 = 0;
    v12 = v11 & 0xFFFFFFFFFFFFFFFELL | v10 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v12;
}

uint64_t getEnumTagSinglePayload for BroadcastingState(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = (*(_QWORD *)a1 >> 3) & 0xFFFFFF80 | (*(_QWORD *)a1 >> 1);
      if (v2 > 0x80000000)
        v3 = ~v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BroadcastingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (8 * -a2) & 0x7FFFFFC00 | (2 * (-a2 & 0x7FLL));
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 0;
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTag for BroadcastingState(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t destructiveProjectEnumData for BroadcastingState(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t destructiveInjectEnumTag for BroadcastingState(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 16) & 1 | (a2 << 7);
  *(_QWORD *)result &= 0x301uLL;
  *(_BYTE *)(result + 16) = v2;
  return result;
}

ValueMetadata *type metadata accessor for BroadcastingState()
{
  return &type metadata for BroadcastingState;
}

void ClarityUIOutgoingCallAction.isPending.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    v3 = OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v4 = 0;
  }
  OUTLINED_FUNCTION_4_153();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v4);
  OUTLINED_FUNCTION_91();
}

uint64_t sub_1BD61E6BC()
{
  swift_release();
  return swift_deallocObject();
}

BOOL static ClarityUICallType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ClarityUIOutgoingCallAction.init(id:callType:callHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3 & 1;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

unint64_t ClarityUIOutgoingCallAction.name.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t ClarityUIOutgoingCallAction.glyph.getter()
{
  return Image.init(systemName:)();
}

uint64_t ClarityUIOutgoingCallAction.tint.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return static Color.green.getter();
  else
    return static Color.orange.getter();
}

void static ClarityUIOutgoingCallAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
  {
    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      v7 = OUTLINED_FUNCTION_0_13();
      *(_QWORD *)(v7 + 16) = v5;
      *(_QWORD *)(v7 + 24) = v6;
    }
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v5);
    OUTLINED_FUNCTION_3_135();
    v9 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    if (v9)
    {
      v10 = OUTLINED_FUNCTION_0_13();
      *(_QWORD *)(v10 + 16) = v9;
      *(_QWORD *)(v10 + 24) = v8;
    }
    _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v9);
    OUTLINED_FUNCTION_3_135();
  }
  OUTLINED_FUNCTION_91();
}

void ClarityUICallType.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int ClarityUICallType.hashValue.getter(char a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ClarityUICallType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ClarityUICallType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ClarityUICallType()
{
  char *v0;

  return ClarityUICallType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ClarityUICallType(uint64_t a1)
{
  char *v1;

  ClarityUICallType.hash(into:)(a1, *v1);
}

uint64_t ClarityUIOutgoingCallAction.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ClarityUIOutgoingCallAction.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ClarityUIOutgoingCallAction.id.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIOutgoingCallAction.callType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ClarityUIOutgoingCallAction.callType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result & 1;
  return result;
}

uint64_t (*ClarityUIOutgoingCallAction.callType.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t key path getter for ClarityUIOutgoingCallAction.callHandler : ClarityUIOutgoingCallAction@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
}

uint64_t key path setter for ClarityUIOutgoingCallAction.callHandler : ClarityUIOutgoingCallAction(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 24);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  result = outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v7);
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v5;
  return result;
}

uint64_t ClarityUIOutgoingCallAction.callHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_4_153();
  return v1;
}

void ClarityUIOutgoingCallAction.callHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ClarityUIOutgoingCallAction.callHandler.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIOutgoingCallAction.hash(into:)()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 16));
  Hasher._combine(_:)(*(_QWORD *)(v0 + 24) == 0);
  OUTLINED_FUNCTION_18();
}

Swift::Int ClarityUIOutgoingCallAction.hashValue.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_1();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 16));
  Hasher._combine(_:)(*(_QWORD *)(v0 + 24) == 0);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIOutgoingCallAction()
{
  uint64_t v0;
  Swift::UInt v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2 == 0);
  return Hasher._finalize()();
}

unint64_t lazy protocol witness table accessor for type ClarityUICallType and conformance ClarityUICallType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType;
  if (!lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ClarityUICallType, &type metadata for ClarityUICallType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClarityUICallType and conformance ClarityUICallType);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClarityUICallType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD61ED1C + 4 * byte_1BD66AAF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD61ED50 + 4 * asc_1BD66AAF0[v4]))();
}

uint64_t sub_1BD61ED50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD61ED58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD61ED60);
  return result;
}

uint64_t sub_1BD61ED6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD61ED74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD61ED78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD61ED80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClarityUICallType()
{
  return &type metadata for ClarityUICallType;
}

uint64_t destroy for ClarityUIOutgoingCallAction(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (!v4)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ClarityUIOutgoingCallAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (!v6)
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIOutgoingCallAction()
{
  return &type metadata for ClarityUIOutgoingCallAction;
}

Swift::Void __swiftcall UIViewPropertyAnimator.stopAnimation(withoutFinishing:)(Swift::Bool withoutFinishing)
{
  void *v1;

  objc_msgSend(v1, sel_stopAnimation_, withoutFinishing);
}

id protocol witness for ViewAnimating.startAnimation() in conformance UIViewPropertyAnimator()
{
  return @nonobjc UIViewPropertyAnimator.startAnimation()();
}

id @nonobjc UIViewPropertyAnimator.startAnimation()()
{
  void *v0;

  return objc_msgSend(v0, sel_startAnimation);
}

void protocol witness for ViewAnimating.stopAnimation(withoutFinishing:) in conformance UIViewPropertyAnimator(Swift::Bool a1)
{
  UIViewPropertyAnimator.stopAnimation(withoutFinishing:)(a1);
}

uint64_t dispatch thunk of AnimationTiming.provider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewAnimating.stopAnimation(withoutFinishing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD4KeysVy15ConversationKit28SharePlayDiscoverabilityTypeOSDySSAH11ApplicationVG_G_SDyAjGySSAL_GSgGs5NeverOTg504_s15e5Kit38ghi79AppsControllerC07refetchF033_CC22454BD5C7E952C63FC0162491D292LLyyFSaySDyAA0cdE4j4OSD4d8VySSAA11K21V_GSgGGycfu1_AnGXEfU_AH0ghioP0CTf1cn_n(uint64_t a1, char *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t inited;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v5 = v22;
    v6 = specialized _NativeDictionary.startIndex.getter(a1);
    if ((v6 & 0x8000000000000000) == 0)
    {
      v8 = v6;
      if (v6 < 1 << *(_BYTE *)(a1 + 32))
      {
        v9 = a1 + 64;
        v19 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps;
        v18 = v2;
        while ((*(_QWORD *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
        {
          if (v7 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          v20 = v7;
          v21 = v5;
          v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v8);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(SharePlayDiscoverabilityType, [String : Application].Keys?)>);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
          *(_BYTE *)(inited + 32) = v10;
          v12 = *(_QWORD *)&v2[v19];
          if (*(_QWORD *)(v12 + 16) && (v13 = specialized __RawDictionaryStorage.find<A>(_:)(v10), (v14 & 1) != 0))
          {
            *(_QWORD *)(inited + 40) = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_QWORD *)(inited + 40) = 0;
          }
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application].Keys?);
          lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
          v15 = Dictionary.init(dictionaryLiteral:)();
          v5 = v21;
          v16 = *(_QWORD *)(v21 + 16);
          if (v16 >= *(_QWORD *)(v21 + 24) >> 1)
          {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v5 = v21;
          }
          *(_QWORD *)(v5 + 16) = v16 + 1;
          *(_QWORD *)(v5 + 8 * v16 + 32) = v15;
          if ((uint64_t)v8 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_24;
          v9 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v8 >> 6)) & (1 << v8)) == 0)
            goto LABEL_25;
          if (v20 != *(_DWORD *)(a1 + 36))
            goto LABEL_26;
          v17 = _HashTable.occupiedBucket(after:)();
          if (!--v3)
          {

            return;
          }
          v8 = v17;
          v2 = v18;
          if ((v17 & 0x8000000000000000) == 0)
          {
            v7 = *(_DWORD *)(a1 + 36);
            if (v17 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_27;
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {

  }
}

uint64_t *SharePlayDiscoverabilityAppsController.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static SharePlayDiscoverabilityAppsController.shared;
}

void __swiftcall Application.init(bundleIdentifier:name:icon:)(ConversationKit::Application *__return_ptr retstr, Swift::String bundleIdentifier, Swift::String name, UIImage icon)
{
  retstr->bundleIdentifier = bundleIdentifier;
  retstr->name = name;
  retstr->icon = icon;
}

void Application.bundleIdentifier.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void Application.name.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

id Application.icon.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void SharePlayDiscoverabilityType.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

BOOL static SharePlayDiscoverabilityType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void *static SharePlayDiscoverabilityType.allCases.getter()
{
  return &outlined read-only object #0 of static SharePlayDiscoverabilityType.allCases.getter;
}

void SharePlayDiscoverabilityType.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance SharePlayDiscoverabilityType()
{
  char *v0;

  SharePlayDiscoverabilityType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance SharePlayDiscoverabilityType(uint64_t a1)
{
  char *v1;

  SharePlayDiscoverabilityType.hash(into:)(a1, *v1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance SharePlayDiscoverabilityType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static SharePlayDiscoverabilityType.allCases.getter;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SharePlayDiscoverabilityType(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SharePlayDiscoverabilityType.== infix(_:_:)(*a1, *a2);
}

id SharePlayDiscoverabilityAppsController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static SharePlayDiscoverabilityAppsController.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (id)static SharePlayDiscoverabilityAppsController.shared;
}

void SharePlayDiscoverabilityAppsController.sortedApps(for:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  v2 = a1 & 1;
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) == 1)
    SharePlayDiscoverabilityAppsController.refetchApps()();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
  OUTLINED_FUNCTION_2_0();
  if ((specialized Sequence<>.contains(_:)(v2, *v3) & 1) != 0)
    SharePlayDiscoverabilityAppsController.sortApps(type:)(v2);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedSortedApps);
  OUTLINED_FUNCTION_2_0();
  specialized Dictionary.subscript.getter(v2, *v4);
}

uint64_t SharePlayDiscoverabilityAppsController.refetchApps()()
{
  Swift::Int v0;
  Swift::Int v1;
  unint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v24;
  char v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _BOOL8 v36;
  unint64_t v37;
  Swift::Bool v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  Swift::String v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  void (*v61)(uint64_t *, _QWORD);
  uint64_t *v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  _BOOL8 v72;
  char v73;
  unint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  BOOL v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  void (*v106)(uint64_t *, _QWORD);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  __int128 v111;
  void *v112;
  char *v113;
  id v114;
  _QWORD *v115;
  id v116;
  uint64_t v117[3];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = v0;
  v2 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application]);
  lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
  v121 = Dictionary.init(dictionaryLiteral:)();
  if (one-time initialization token for shared != -1)
    goto LABEL_90;
  while (1)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static Features.shared) + 0xE0))();
    v104 = (_QWORD *)v2;
    v109 = (char *)v1;
    if ((v4 & 1) != 0)
    {
      (*(void (**)(uint64_t *__return_ptr))((*v3 & *(_QWORD *)v1) + 0x130))(v117);
      v5 = v118;
      if (v118)
      {
        v6 = v119;
        v7 = __swift_project_boxed_opaque_existential_1(v117, v118);
        v8 = *(_QWORD *)(v5 - 8);
        v9 = MEMORY[0x1E0C80A78](v7);
        v11 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
        outlined destroy of Conversation?((uint64_t)v117, &demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
        v12 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
        v2 = (unint64_t)v104;
        goto LABEL_7;
      }
      outlined destroy of Conversation?((uint64_t)v117, &demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
    }
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_7:
    v13 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_entitlementsChecker;
    v14 = objc_msgSend((id)v2, sel_nextObject, v103);
    if (!v14)
      break;
    v113 = &v109[v13];
    v103 = v12 + 9;
    v16 = *MEMORY[0x1E0DBD438];
    *(_QWORD *)&v15 = 136315138;
    v111 = v15;
    v110 = MEMORY[0x1E0DEE9B8] + 8;
    v112 = (void *)0x80000001BD672630;
    v115 = v12;
    v105 = v16;
    while (1)
    {
      v114 = v14;
      v17 = v14;
      outlined bridged method (ob) of @objc LSBundleRecord.bundleIdentifier.getter(v17);
      if (!v19)
      {

        goto LABEL_77;
      }
      v20 = v18;
      v21 = v19;
      v116 = v17;
      if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_77;
      }
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        break;

      swift_bridgeObjectRelease();
LABEL_77:
      v14 = objc_msgSend((id)v2, sel_nextObject, v103);
      if (!v14)
        goto LABEL_78;
    }
    v25 = 0;
    v26 = 0;
    v2 = (unint64_t)v116;
    while (1)
    {
      v27 = v25;
      if (v26 >= 2)
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      v28 = *((_BYTE *)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.refetchApps() + v26 + 32);
      v29 = v121;
      if (!*(_QWORD *)(v121 + 16) || (specialized __RawDictionaryStorage.find<A>(_:)(v28), (v30 & 1) == 0))
      {
        v31 = Dictionary.init(dictionaryLiteral:)();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v117[0] = v29;
        v33 = specialized __RawDictionaryStorage.find<A>(_:)(v28);
        v35 = *(_QWORD *)(v29 + 16);
        v36 = (v34 & 1) == 0;
        v1 = v35 + v36;
        if (__OFADD__(v35, v36))
          goto LABEL_85;
        v37 = v33;
        v2 = (unint64_t)v34;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<SharePlayDiscoverabilityType, [String : Application]>);
        v38 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v1);
        v12 = v115;
        if (v38)
        {
          v39 = specialized __RawDictionaryStorage.find<A>(_:)(v28);
          if ((v2 & 1) != (v40 & 1))
            goto LABEL_91;
          v37 = v39;
        }
        v41 = (_QWORD *)v117[0];
        if ((v2 & 1) != 0)
        {
          v42 = *(_QWORD *)(v117[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v42 + 8 * v37) = v31;
        }
        else
        {
          *(_QWORD *)(v117[0] + 8 * (v37 >> 6) + 64) |= 1 << v37;
          *(_BYTE *)(v41[6] + v37) = v28;
          *(_QWORD *)(v41[7] + 8 * v37) = v31;
          v43 = v41[2];
          v44 = __OFADD__(v43, 1);
          v45 = v43 + 1;
          if (v44)
            goto LABEL_86;
          v41[2] = v45;
        }
        v121 = (uint64_t)v41;
        swift_bridgeObjectRelease();
        v2 = (unint64_t)v116;
      }
      if ((v28 & 1) != 0)
      {
        v46 = *((_QWORD *)v113 + 3);
        v47 = *((_QWORD *)v113 + 4);
        __swift_project_boxed_opaque_existential_1(v113, v46);
        v1 = *(_QWORD *)(v47 + 8);
        v48 = (id)v2;
        v49 = ((uint64_t (*)(uint64_t, unint64_t, id, uint64_t, uint64_t))v1)(v20, v21, v114, v46, v47);
      }
      else
      {
        v48 = objc_msgSend((id)v2, sel_entitlements);
        v50._countAndFlagsBits = 0xD000000000000021;
        v50._object = v112;
        v49 = LSPropertyList.contains(entitlement:)(v50);
      }
      v51 = v49;

      v52 = v12[2];
      if (v52)
      {
        v53 = v12[4] == v20 && v21 == v12[5];
        if (v53 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_40:
          if (one-time initialization token for conversationControls != -1)
            swift_once();
          v54 = type metadata accessor for Logger();
          __swift_project_value_buffer(v54, (uint64_t)&static Logger.conversationControls);
          swift_bridgeObjectRetain_n();
          v55 = Logger.logObject.getter();
          v56 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v55, v56))
          {
            v57 = swift_slowAlloc();
            v58 = swift_slowAlloc();
            v117[0] = v58;
            *(_DWORD *)v57 = v111;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v57 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v21, v117);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1BD004000, v55, v56, "[SharePlayDiscoverabilityAppsController] Hidden app found for %s", (uint8_t *)v57, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v58, -1, -1);
            MEMORY[0x1C3B751B8](v57, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
LABEL_74:
          v2 = (unint64_t)v116;
          goto LABEL_75;
        }
        if (v52 != 1)
        {
          v78 = v12[6] == v20 && v21 == v12[7];
          if (v78 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            goto LABEL_40;
          if (v52 != 2)
            break;
        }
      }
LABEL_46:
      v2 = (unint64_t)v116;
      if ((v51 & 1) == 0)
        goto LABEL_75;
      v59 = SharePlayDiscoverabilityAppsController.icon(for:bundleRecord:)(v20, v21);
      if (!v59)
        goto LABEL_75;
      v60 = v59;
      specialized Dictionary.subscript.modify();
      if (*v62)
      {
        v63 = v62;
        v106 = v61;
        swift_bridgeObjectRetain_n();
        v64 = objc_msgSend((id)v2, sel_localizedName);
        v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v108 = v65;

        v66 = v60;
        v67 = swift_isUniquelyReferenced_nonNull_native();
        v120 = *v63;
        v68 = v120;
        *v63 = 0x8000000000000000;
        v69 = specialized __RawDictionaryStorage.find<A>(_:)(v20, v21);
        v71 = *(_QWORD *)(v68 + 16);
        v72 = (v70 & 1) == 0;
        v1 = v71 + v72;
        if (__OFADD__(v71, v72))
          goto LABEL_88;
        v2 = v69;
        v73 = v70;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, Application>);
        if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v67, v1))
        {
          v74 = specialized __RawDictionaryStorage.find<A>(_:)(v20, v21);
          if ((v73 & 1) != (v75 & 1))
          {
            while (1)
            {
LABEL_91:
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
            }
          }
          v2 = v74;
        }
        v76 = (_QWORD *)v120;
        if ((v73 & 1) != 0)
        {
          v1 = *(_QWORD *)(v120 + 56) + 40 * v2;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)v1 = v20;
          *(_QWORD *)(v1 + 8) = v21;
          v77 = v108;
          *(_QWORD *)(v1 + 16) = v107;
          *(_QWORD *)(v1 + 24) = v77;
          *(_QWORD *)(v1 + 32) = v66;
        }
        else
        {
          *(_QWORD *)(v120 + 8 * (v2 >> 6) + 64) |= 1 << v2;
          v81 = (uint64_t *)(v76[6] + 16 * v2);
          *v81 = v20;
          v81[1] = v21;
          v82 = (uint64_t *)(v76[7] + 40 * v2);
          *v82 = v20;
          v82[1] = v21;
          v83 = v108;
          v82[2] = v107;
          v82[3] = v83;
          v82[4] = (uint64_t)v66;
          v84 = v76[2];
          v44 = __OFADD__(v84, 1);
          v85 = v84 + 1;
          if (v44)
            goto LABEL_89;
          v76[2] = v85;
          swift_bridgeObjectRetain();
        }
        *v63 = (uint64_t)v76;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v106(v117, 0);

        v12 = v115;
        goto LABEL_74;
      }
      v61(v117, 0);

      v12 = v115;
LABEL_75:
      v25 = 1;
      v26 = 1u;
      if ((v27 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        v2 = (unint64_t)v104;
        goto LABEL_77;
      }
    }
    v2 = (unint64_t)v103;
    v79 = 2;
    while (1)
    {
      v1 = v79 + 1;
      if (__OFADD__(v79, 1))
        break;
      v80 = *(_QWORD *)(v2 - 8) == v20 && v21 == *(_QWORD *)v2;
      if (v80 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        goto LABEL_40;
      v2 += 16;
      ++v79;
      if (v1 == v52)
        goto LABEL_46;
    }
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    swift_once();
  }
LABEL_78:
  swift_bridgeObjectRelease();
  v86 = swift_bridgeObjectRetain();
  v87 = v109;
  SharePlayDiscoverabilityAppsController.cachedUnsortedApps.setter(v86);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v88 = type metadata accessor for Logger();
  __swift_project_value_buffer(v88, (uint64_t)&static Logger.conversationControls);
  v89 = v87;
  v90 = Logger.logObject.getter();
  v91 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = (uint8_t *)swift_slowAlloc();
    v93 = swift_slowAlloc();
    *(_DWORD *)v92 = 136315138;
    v116 = v92 + 4;
    v117[0] = v93;
    v94 = (char *)v89;
    v95 = swift_bridgeObjectRetain();
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSD4KeysVy15ConversationKit28SharePlayDiscoverabilityTypeOSDySSAH11ApplicationVG_G_SDyAjGySSAL_GSgGs5NeverOTg504_s15e5Kit38ghi79AppsControllerC07refetchF033_CC22454BD5C7E952C63FC0162491D292LLyyFSaySDyAA0cdE4j4OSD4d8VySSAA11K21V_GSgGGycfu1_AnGXEfU_AH0ghioP0CTf1cn_n(v95, v94);
    v97 = v96;
    swift_bridgeObjectRelease();
    v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SharePlayDiscoverabilityType : [String : Application].Keys?]);
    v99 = MEMORY[0x1C3B7304C](v97, v98);
    v101 = v100;
    swift_bridgeObjectRelease();
    v120 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v101, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v90, v91, "Updated unsorted apps to %s", v92, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v93, -1, -1);
    v2 = (unint64_t)v104;
    MEMORY[0x1C3B751B8](v92, -1, -1);

  }
  else
  {

  }
  SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(0);

  return swift_bridgeObjectRelease();
}

uint64_t SharePlayDiscoverabilityAppsController.sortApps(type:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v2 = v1;
  if (*(_QWORD *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps)
                 + 16))
  {
    v3 = result & 1;
    result = specialized __RawDictionaryStorage.find<A>(_:)(result & 1);
    if ((v4 & 1) != 0)
    {
      v5 = swift_bridgeObjectRetain();
      v6 = SharePlayDiscoverabilityAppsController.sortedApplications(_:)(v5);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      specialized Dictionary._Variant.setValue(_:forKey:)();
      swift_endAccess();
      if (one-time initialization token for conversationControls != -1)
        goto LABEL_47;
      while (1)
      {
        v7 = type metadata accessor for Logger();
        __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
        swift_bridgeObjectRetain();
        v8 = Logger.logObject.getter();
        v9 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v8, v9))
        {
          v40 = v9;
          v10 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v42[0] = v39;
          *(_DWORD *)v10 = 136315394;
          v11 = String.init<A>(reflecting:)();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v10 + 12) = 2080;
          v13 = *(_QWORD *)(v6 + 16);
          v14 = MEMORY[0x1E0DEE9D8];
          if (v13)
          {
            v36 = v10;
            v37 = v8;
            v41 = MEMORY[0x1E0DEE9D8];
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            v14 = v41;
            v38 = v6;
            v15 = (uint64_t *)(v6 + 40);
            do
            {
              v16 = *(v15 - 1);
              v17 = *v15;
              v19 = *(_QWORD *)(v41 + 16);
              v18 = *(_QWORD *)(v41 + 24);
              swift_bridgeObjectRetain();
              if (v19 >= v18 >> 1)
                specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              v15 += 5;
              *(_QWORD *)(v41 + 16) = v19 + 1;
              v20 = v41 + 16 * v19;
              *(_QWORD *)(v20 + 32) = v16;
              *(_QWORD *)(v20 + 40) = v17;
              --v13;
            }
            while (v13);
            v8 = v37;
            v6 = v38;
            v10 = v36;
          }
          v21 = MEMORY[0x1C3B7304C](v14, MEMORY[0x1E0DEA968]);
          v23 = v22;
          swift_bridgeObjectRelease();
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v8, v40, "Updated sorted apps for %s to %s", (uint8_t *)v10, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v39, -1, -1);
          MEMORY[0x1C3B751B8](v10, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v24 = (uint64_t *)(v2
                        + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
        result = swift_beginAccess();
        v2 = *v24;
        v25 = *(_QWORD *)(*v24 + 16);
        if (!v25)
          goto LABEL_40;
        if ((((v3 == 0) ^ *(unsigned __int8 *)(v2 + 32)) & 1) != 0)
        {
          v26 = 0;
        }
        else
        {
          if (v25 == 1)
            goto LABEL_40;
          v34 = 33;
          while (1)
          {
            v26 = v34 - 32;
            if ((((v3 == 0) ^ *(unsigned __int8 *)(v2 + v34)) & 1) != 0)
              break;
            v35 = v34 - 31;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            ++v34;
            if (v35 == v25)
              goto LABEL_40;
          }
        }
        v27 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v27 == v25)
        {
LABEL_18:
          if ((uint64_t)v25 < (uint64_t)v26)
            __break(1u);
LABEL_40:
          specialized Array.replaceSubrange<A>(_:with:)();
          return swift_endAccess();
        }
        v6 = v26 + 33;
        while ((v27 & 0x8000000000000000) == 0)
        {
          if (v6 - 32 >= v25)
            goto LABEL_43;
          v28 = *(unsigned __int8 *)(v2 + v6);
          if ((((v3 == 0) ^ v28) & 1) == 0)
          {
            if (v6 - 32 != v26)
            {
              if (v26 >= v25)
                goto LABEL_46;
              v29 = *(_BYTE *)(v2 + 32 + v26);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *v24 = v2;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                specialized _ArrayBuffer._consumeAndCreateNew()();
                v2 = v33;
                *v24 = v33;
              }
              *(_BYTE *)(v2 + v26 + 32) = v28;
              *(_BYTE *)(*v24 + v6) = v29;
              v2 = *v24;
            }
            if (__OFADD__(v26++, 1))
              goto LABEL_44;
            v25 = *(_QWORD *)(v2 + 16);
          }
          v32 = v6 - 31;
          ++v6;
          if (v32 == v25)
            goto LABEL_18;
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        swift_once();
      }
      __break(1u);
    }
  }
  return result;
}

void SharePlayDiscoverabilityAppsController.foregroundApp.didset()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationControls);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = &v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp];
    swift_beginAccess();
    if (*(_QWORD *)v7)
    {
      swift_bridgeObjectRetain();
      v8 = String.init<A>(reflecting:)();
      v10 = v9;
    }
    else
    {
      v10 = 0xE300000000000000;
      v8 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "Foreground app changed, removing bundleIdentifier: %s on next sort", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v6, -1, -1);
    MEMORY[0x1C3B751B8](v5, -1, -1);

  }
  else
  {

  }
  SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.foregroundApp.didset);
}

void *SharePlayDiscoverabilityAppsController.foregroundApp.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void SharePlayDiscoverabilityAppsController.foregroundApp.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  SharePlayDiscoverabilityAppsController.foregroundApp.didset();
}

void SharePlayDiscoverabilityAppsController.foregroundApp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityAppsController.foregroundApp.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    SharePlayDiscoverabilityAppsController.foregroundApp.didset();
  OUTLINED_FUNCTION_0();
}

void SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset(char a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) == 1
    && (a1 & 1) == 0)
  {
    SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset);
  }
}

void SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery) = a1;
  SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.didset(v2);
}

void SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_49_1(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort);
  OUTLINED_FUNCTION_2_0();
  *v1 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

uint64_t SharePlayDiscoverabilityAppsController.cachedUnsortedApps.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps) = a1;
  return swift_bridgeObjectRelease();
}

void SharePlayDiscoverabilityAppsController.suggester.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester);
  if (!v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_suggesterWithDaemon);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for SharePlayDiscoverabilityAppsController.protectedAppsObserver : SharePlayDiscoverabilityAppsController(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of ProtectedAppsObserverProtocol?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x138))(v4);
}

void SharePlayDiscoverabilityAppsController.protectedAppsObserver.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_49_1(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver);
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of ProtectedAppsObserverProtocol?(v1, a1);
  OUTLINED_FUNCTION_32();
}

void SharePlayDiscoverabilityAppsController.protectedAppsObserver.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_49_1(OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of ProtectedAppsObserverProtocol?(a1, v1);
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void SharePlayDiscoverabilityAppsController.protectedAppsObserver.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

CFNotificationCenterRef SharePlayDiscoverabilityAppsController.init()()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(id, _UNKNOWN **, uint64_t, uint64_t);
  id v16;
  CFNotificationCenterRef result;
  __CFNotificationCenter *v18;
  void *v19;
  uint64_t v20;
  __CFNotificationCenter *v21;
  void *v22;
  uint64_t v23;
  id v24[3];
  Class v25;
  _UNKNOWN **v26;
  objc_super v27;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_foregroundApp] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_needsAppRefetchOnNextQuery] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_appTypesNeedingSort] = &outlined read-only object #0 of SharePlayDiscoverabilityAppsController.init();
  v1 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedUnsortedApps;
  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Application]);
  lazy protocol witness table accessor for type SharePlayDiscoverabilityType and conformance SharePlayDiscoverabilityType();
  *(_QWORD *)&v0[v1] = Dictionary.init(dictionaryLiteral:)();
  v3 = OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_cachedSortedApps;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Application]);
  *(_QWORD *)&v2[v3] = Dictionary.init(dictionaryLiteral:)();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController____lazy_storage___suggester] = 0;
  v4 = (uint64_t *)&v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_entitlementsChecker];
  v5 = type metadata accessor for EntitlementsChecker();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
  v4[3] = v5;
  v4[4] = (uint64_t)&protocol witness table for EntitlementsChecker;
  *v4 = v6;
  v7 = &v2[OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver];
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityAppsController();
  v8 = objc_msgSendSuper2(&v27, sel_init);
  v9 = (void *)objc_opt_self();
  v10 = v8;
  v11 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v10, sel_handleCallConnected_, *MEMORY[0x1E0DBD488], 0);

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static Features.shared) + 0xE0))() & 1) != 0)
  {
    v25 = (Class)type metadata accessor for ProtectedAppsObserver();
    v26 = &protocol witness table for ProtectedAppsObserver;
    v24[0] = objc_msgSend(objc_allocWithZone(v25), sel_init);
    v12 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit38SharePlayDiscoverabilityAppsController_protectedAppsObserver;
    OUTLINED_FUNCTION_2_0();
    outlined assign with take of ProtectedAppsObserverProtocol?((uint64_t)v24, v12);
    swift_endAccess();
    OUTLINED_FUNCTION_2_0();
    v13 = *(_QWORD *)(v12 + 24);
    if (v13)
    {
      v14 = *(_QWORD *)(v12 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v12, *(_QWORD *)(v12 + 24));
      v15 = *(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v14 + 16);
      v16 = v10;
      v15(v10, &protocol witness table for SharePlayDiscoverabilityAppsController, v13, v14);
    }
    swift_endAccess();
  }
  result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    v18 = result;
    v19 = (void *)MEMORY[0x1C3B72E00](0xD00000000000002ELL, 0x80000001BD69AC10);
    OUTLINED_FUNCTION_1_158((uint64_t)v19, v20, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))@objc closure #1 in SharePlayDiscoverabilityAppsController.init());

    result = CFNotificationCenterGetDistributedCenter();
    if (result)
    {
      v21 = result;
      v22 = (void *)MEMORY[0x1C3B72E00](0xD000000000000030, 0x80000001BD69AC40);
      OUTLINED_FUNCTION_1_158((uint64_t)v22, v23, (void (__cdecl *)(CFNotificationCenterRef, void *, CFNotificationName, const void *, CFDictionaryRef))@objc closure #1 in SharePlayDiscoverabilityAppsController.init());

      return (CFNotificationCenterRef)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void closure #1 in SharePlayDiscoverabilityAppsController.init()(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  _OWORD v23[2];
  uint64_t v24[4];

  if (a2 && a5)
  {
    v7 = a5;
    v8 = (void *)MEMORY[0x1C3B72E00](0x686563616C507369, 0xED00007265646C6FLL);
    v9 = objc_msgSend(v7, sel_objectForKey_, v8);

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    outlined init with take of Any?((uint64_t)v23, (uint64_t)v24);
    if (v24[3])
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_10:

        return;
      }
      if (objc_msgSend(v22, sel_integerValue))
      {

        goto LABEL_10;
      }
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Logger.conversationControls);
      v11 = a3;
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v24[0] = v15;
        *(_DWORD *)v14 = 136315138;
        v21 = v15;
        if (a3)
        {
          *(_QWORD *)&v23[0] = v11;
          type metadata accessor for CFNotificationName(0);
          v16 = v11;
          v17 = String.init<A>(reflecting:)();
          v19 = v18;
        }
        else
        {
          v19 = 0xE300000000000000;
          v17 = 7104878;
        }
        *(_QWORD *)&v23[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v12, v13, "Received app installation notification: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v21, -1, -1);
        MEMORY[0x1C3B751B8](v14, -1, -1);

      }
      else
      {

      }
      v20 = a2;
      SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(1);

    }
    else
    {

      outlined destroy of Conversation?((uint64_t)v24, &demangling cache variable for type metadata for Any?);
    }
  }
}

void @objc closure #1 in SharePlayDiscoverabilityAppsController.init()(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v10;
  id v11;
  id v12;

  v10 = a1;
  v11 = a3;
  v12 = a5;
  closure #1 in SharePlayDiscoverabilityAppsController.init()((uint64_t)a1, a2, a3, a4, a5);

}

CFNotificationCenterRef SharePlayDiscoverabilityAppsController.__deallocating_deinit()
{
  void *v0;
  id v1;
  CFNotificationCenterRef result;
  __CFNotificationCenter *v3;
  objc_super v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    v3 = result;
    CFNotificationCenterRemoveEveryObserver(v3, v0);

    v4.receiver = v0;
    v4.super_class = (Class)type metadata accessor for SharePlayDiscoverabilityAppsController();
    return (CFNotificationCenterRef)objc_msgSendSuper2(&v4, sel_dealloc);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SharePlayDiscoverabilityAppsController.icon(for:bundleRecord:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  double v6;
  double v7;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v5, sel_scale);
  v7 = v6;

  return outlined bridged method (mbgnnnn) of @objc static UIImage._applicationIconImage(forBundleIdentifier:format:scale:)(v7, a1, a2, 2, v4);
}

uint64_t SharePlayDiscoverabilityAppsController.sortedApplications(_:)(uint64_t a1)
{
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  char v17;
  uint64_t v18;
  _BOOL8 v19;
  Swift::Int v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  _QWORD *v86;
  void *v87;
  _QWORD *v88;
  void *v89;
  _QWORD *v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t result;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD v119[6];

  v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D70998]), sel_init);
  specialized _NativeDictionary.makeIterator()(v119, a1);
  v115 = v119[0];
  v2 = v119[3];
  v3 = v119[4];
  v109 = v119[1];
  v111 = (unint64_t)(v119[2] + 64) >> 6;
  v101 = a1;
  swift_bridgeObjectRetain_n();
  v4 = MEMORY[0x1E0DEE9E0];
  if (!v3)
    goto LABEL_3;
LABEL_2:
  v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  v6 = v5 | (v2 << 6);
  while (1)
  {
    v11 = (uint64_t *)(*(_QWORD *)(v115 + 48) + 16 * v6);
    v13 = *v11;
    v12 = v11[1];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v14 + 32) = v13;
    *(_QWORD *)(v14 + 40) = v12;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v118 = v4;
    v16 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v12);
    v18 = *(_QWORD *)(v4 + 16);
    v19 = (v17 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    v21 = v16;
    v22 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<String, [String]>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v20))
    {
      v23 = specialized __RawDictionaryStorage.find<A>(_:)(v13, v12);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_132;
      v21 = v23;
    }
    v4 = v118;
    if ((v22 & 1) != 0)
    {
      v25 = *(_QWORD *)(v118 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v25 + 8 * v21) = v14;
    }
    else
    {
      *(_QWORD *)(v118 + 8 * (v21 >> 6) + 64) |= 1 << v21;
      v26 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v21);
      *v26 = v13;
      v26[1] = v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v21) = v14;
      v27 = *(_QWORD *)(v4 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_118;
      *(_QWORD *)(v4 + 16) = v29;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_2;
LABEL_3:
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_119;
    if (v7 >= v111)
      break;
    v8 = *(_QWORD *)(v109 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v111)
        break;
      v8 = *(_QWORD *)(v109 + 8 * v9);
      if (!v8)
      {
        v9 = v2 + 3;
        if (v2 + 3 >= v111)
          break;
        v8 = *(_QWORD *)(v109 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 4;
          if (v2 + 4 >= v111)
            break;
          v8 = *(_QWORD *)(v109 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 5;
            if (v2 + 5 >= v111)
              break;
            v8 = *(_QWORD *)(v109 + 8 * v9);
            if (!v8)
            {
              v9 = v2 + 6;
              if (v2 + 6 >= v111)
                break;
              v8 = *(_QWORD *)(v109 + 8 * v9);
              if (!v8)
              {
                v10 = v2 + 7;
                do
                {
                  if (v10 >= v111)
                    goto LABEL_31;
                  v8 = *(_QWORD *)(v109 + 8 * v10++);
                }
                while (!v8);
                v9 = v10 - 1;
              }
            }
          }
        }
      }
    }
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v2 = v9;
  }
LABEL_31:
  swift_release();
  swift_bridgeObjectRelease();
  outlined bridged method (mbnn) of @objc _PSPredictionContext.appBundleIdsToShareExtensionBundleIdsMapping.setter(v4, v96);
  SharePlayDiscoverabilityAppsController.suggester.getter();
  v31 = v30;
  v32 = objc_msgSend(v30, sel_shareExtensionSuggestionsFromContext_, v96);

  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for _PSSuggestion);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!((unint64_t)v4 >> 62))
  {
    v33 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_33;
  }
LABEL_130:
  swift_bridgeObjectRetain();
  v33 = _CocoaArrayWrapper.endIndex.getter();
LABEL_33:
  v34 = MEMORY[0x1E0DEE9D8];
  if (v33)
  {
    if (v33 < 1)
    {
      __break(1u);
LABEL_132:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
LABEL_133:
      _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v35 = 0;
    v36 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v37 = (id)MEMORY[0x1C3B73D18](v35, v4);
      else
        v37 = *(id *)(v4 + 8 * v35 + 32);
      v38 = v37;
      v39 = outlined bridged method (pb) of @objc _PSSuggestion.bundleID.getter(v37);
      v41 = v40;

      if (v41)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v36 = v44;
        }
        v42 = *(_QWORD *)(v36 + 16);
        if (v42 >= *(_QWORD *)(v36 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v36 = v45;
        }
        *(_QWORD *)(v36 + 16) = v42 + 1;
        v43 = v36 + 16 * v42;
        *(_QWORD *)(v43 + 32) = v39;
        *(_QWORD *)(v43 + 40) = v41;
      }
      ++v35;
    }
    while (v33 != v35);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  v4 = v101;
  v46 = swift_bridgeObjectRetain();
  v47 = (_QWORD *)specialized _copyCollectionToContiguousArray<A>(_:)(v46);
  swift_bridgeObjectRelease();
  v118 = v34;
  v48 = *(_QWORD *)(v36 + 16);
  if (v48)
  {
    v49 = 0;
    v50 = v36 + 32;
    v112 = MEMORY[0x1E0DEE9D8];
    v97 = *(_QWORD *)(v36 + 16);
    v98 = v36;
    v99 = v36 + 32;
    while (1)
    {
      if (v49 >= *(_QWORD *)(v36 + 16))
        goto LABEL_120;
      if (*(_QWORD *)(v4 + 16))
        break;
LABEL_82:
      if (++v49 == v48)
        goto LABEL_114;
    }
    v51 = (uint64_t *)(v50 + 16 * v49);
    v53 = *v51;
    v52 = v51[1];
    swift_bridgeObjectRetain();
    v54 = specialized __RawDictionaryStorage.find<A>(_:)(v53, v52);
    if ((v55 & 1) == 0)
    {
LABEL_81:
      swift_bridgeObjectRelease();
      goto LABEL_82;
    }
    v56 = *(_QWORD *)(v4 + 56) + 40 * v54;
    v57 = *(_QWORD *)v56;
    v58 = *(_QWORD *)(v56 + 16);
    v113 = *(_OWORD *)(v56 + 24);
    v116 = *(_QWORD *)(v56 + 8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v59 = *((id *)&v113 + 1);
    swift_bridgeObjectRelease();
    v60 = v112;
    v102 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v60 = v93;
    }
    v61 = *(_QWORD *)(v60 + 16);
    v62 = v116;
    if (v61 >= *(_QWORD *)(v60 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v62 = v116;
      v60 = v94;
    }
    *(_QWORD *)(v60 + 16) = v61 + 1;
    v63 = v60 + 40 * v61;
    *(_QWORD *)(v63 + 32) = v57;
    *(_QWORD *)(v63 + 40) = v62;
    *(_QWORD *)(v63 + 48) = v58;
    *(_OWORD *)(v63 + 56) = v113;
    v118 = v60;
    v64 = v47[2];
    v112 = v60;
    if (v64)
    {
      v65 = v47[4] == v57 && v47[5] == v62;
      if (v65)
      {
        v66 = 0;
LABEL_68:
        v4 = v66 + 1;
        if (__OFADD__(v66, 1))
          goto LABEL_128;
        if (v4 != v64)
        {
          v73 = 40 * v66 + 104;
          v74 = v66 + 1;
          v100 = v57;
          while ((v4 & 0x8000000000000000) == 0)
          {
            v75 = v47[2];
            if (v74 >= v75)
              goto LABEL_117;
            v76 = (char *)v47 + v73;
            if (*(_QWORD *)((char *)v47 + v73 - 32) != v57 || *(_QWORD *)((char *)v47 + v73 - 24) != v62)
            {
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                v62 = v116;
              }
              else
              {
                if (v74 != v66)
                {
                  if (v66 >= v75)
                    goto LABEL_122;
                  v78 = &v47[5 * v66 + 4];
                  v79 = v78[3];
                  v104 = v78[2];
                  v105 = *v78;
                  v80 = (void *)v78[4];
                  v81 = *((_QWORD *)v76 - 4);
                  v82 = *((_QWORD *)v76 - 3);
                  v83 = *(_QWORD *)((char *)v47 + v73 - 8);
                  v108 = *(_QWORD *)((char *)v47 + v73 - 16);
                  v110 = v81;
                  v106 = v78[1];
                  v107 = *(void **)((char *)v47 + v73);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v103 = v80;
                  v114 = v82;
                  v84 = v83;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v85 = v107;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    specialized _ArrayBuffer._consumeAndCreateNew()();
                    v47 = v90;
                  }
                  v86 = &v47[5 * v66];
                  v87 = (void *)v86[8];
                  v86[4] = v110;
                  v86[5] = v114;
                  v86[6] = v108;
                  v86[7] = v84;
                  v86[8] = v85;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v57 = v100;
                  if (v74 >= v47[2])
                    goto LABEL_123;
                  v88 = (_QWORD *)((char *)v47 + v73);
                  v89 = *(void **)((char *)v47 + v73);
                  *(v88 - 4) = v105;
                  *(v88 - 3) = v106;
                  *(v88 - 2) = v104;
                  *(v88 - 1) = v79;
                  *v88 = v103;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v50 = v99;
                }
                v62 = v116;
                v28 = __OFADD__(v66++, 1);
                if (v28)
                  goto LABEL_121;
              }
            }
            ++v74;
            v73 += 40;
            if (v74 == v47[2])
              goto LABEL_70;
          }
          goto LABEL_116;
        }
LABEL_70:
        v4 = v47[2];
        if (v4 < v66)
          goto LABEL_124;
        if (v66 < 0)
          goto LABEL_125;
        goto LABEL_72;
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        v66 = 0;
LABEL_64:
        v62 = v116;
        goto LABEL_68;
      }
      if (v64 != 1)
      {
        v4 = (uint64_t)(v47 + 10);
        v66 = 1;
        while (1)
        {
          v62 = v116;
          if (*(_QWORD *)(v4 - 8) == v57 && *(_QWORD *)v4 == v116)
            goto LABEL_68;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            goto LABEL_64;
          v92 = v66 + 1;
          if (__OFADD__(v66, 1))
            goto LABEL_127;
          v4 += 40;
          ++v66;
          if (v92 == v64)
          {
            v66 = v64;
            goto LABEL_70;
          }
        }
      }
      v4 = v47[2];
      if (!v4)
        goto LABEL_124;
      v66 = 1;
    }
    else
    {
      v66 = 0;
      v4 = 0;
    }
LABEL_72:
    v67 = v66 - v4;
    if (__OFADD__(v4, v66 - v4))
      goto LABEL_126;
    if (!swift_isUniquelyReferenced_nonNull_native() || v66 > v47[3] >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v47 = v68;
    }
    v36 = v98;
    v69 = &v47[5 * v66 + 4];
    swift_arrayDestroy();
    v65 = v4 == v66;
    v48 = v97;
    if (!v65)
    {
      v70 = v47[2] - v4;
      if (v70 < 0)
        goto LABEL_133;
      memmove(v69, &v47[5 * v4 + 4], 40 * v70);
      v71 = v47[2];
      v28 = __OFADD__(v71, v67);
      v72 = v71 + v67;
      if (v28)
        goto LABEL_129;
      v47[2] = v72;
    }

    swift_bridgeObjectRelease();
    v4 = v101;
    goto LABEL_81;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  v117 = v47;
  swift_bridgeObjectRetain_n();
  specialized MutableCollection<>.sort(by:)((uint64_t *)&v117);
  swift_bridgeObjectRelease_n();
  specialized Array.append<A>(contentsOf:)();

  return v118;
}

void SharePlayDiscoverabilityAppsController.handleCallConnected(_:)()
{
  SharePlayDiscoverabilityAppsController.appTypesNeedingSort.setter((uint64_t)&outlined read-only object #0 of SharePlayDiscoverabilityAppsController.handleCallConnected(_:));
}

Swift::Void __swiftcall SharePlayDiscoverabilityAppsController.appProtectionsChanged()()
{
  SharePlayDiscoverabilityAppsController.needsAppRefetchOnNextQuery.setter(1);
}

uint64_t outlined init with copy of ProtectedAppsObserverProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of ProtectedAppsObserverProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProtectedAppsObserverProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SharePlayDiscoverabilityAppsController()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type [SharePlayDiscoverabilityType] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A];
  if (!lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [SharePlayDiscoverabilityType]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [SharePlayDiscoverabilityType] and conformance [A]);
  }
  return result;
}

void sub_1BD621F24(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD621F64(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x130))();
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for Application()
{
  return &type metadata for Application;
}

uint64_t storeEnumTagSinglePayload for SharePlayDiscoverabilityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD621FF8 + 4 * byte_1BD66ACA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD62202C + 4 * byte_1BD66ACA0[v4]))();
}

uint64_t sub_1BD62202C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD622034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD62203CLL);
  return result;
}

uint64_t sub_1BD622048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD622050);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD622054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD62205C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharePlayDiscoverabilityType()
{
  return &type metadata for SharePlayDiscoverabilityType;
}

uint64_t method lookup function for SharePlayDiscoverabilityAppsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.sortedApps(for:)(char a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90))(a1 & 1);
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.foregroundApp.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of SharePlayDiscoverabilityAppsController.protectedAppsObserver.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

void specialized _ArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

id outlined bridged method (mbgnnnn) of @objc static UIImage._applicationIconImage(forBundleIdentifier:format:scale:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)MEMORY[0x1C3B72E00]();
  v9 = objc_msgSend(a5, sel__applicationIconImageForBundleIdentifier_format_scale_, v8, a4, a1);

  return v9;
}

void outlined bridged method (mbnn) of @objc _PSPredictionContext.appBundleIdsToShareExtensionBundleIdsMapping.setter(uint64_t a1, void *a2)
{
  Class isa;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAppBundleIdsToShareExtensionBundleIdsMapping_, isa);

}

uint64_t outlined bridged method (pb) of @objc _PSSuggestion.bundleID.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_bundleID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t specialized _NativeDictionary.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 192;
  for (i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void RecentsListViewController.presentDetailsView(for:sourceRect:)(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void (*v16)(void);
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecentsCallItem(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v1 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, (uint64_t)v29);
  v10 = v30;
  if (v30)
  {
    v11 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    v12 = (void *)(*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 8))(a1, 0, 0, v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    if (v12)
    {
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        v14 = (void *)v13;
        v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        v16 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x248);
        v17 = v12;
        v16();
        LOBYTE(v16) = ReportSpamManager.canShowReportActions(for:)();
        swift_release();
        if ((v16 & 1) != 0)
        {
          outlined init with copy of RecentsCallItem(a1, (uint64_t)v9);
          type metadata accessor for ReportSpamManager();
          LOBYTE(v29[0]) = 1;
          ReportSpamManager.__allocating_init(idsServiceType:)(v29);
          v18 = objc_allocWithZone((Class)type metadata accessor for RecentItemContactsViewControllerDelegate(0));
          RecentItemContactsViewControllerDelegate.init(_:faceTimeReportSpamManager:)();
          v19 = (*(uint64_t (**)(void))((*v15 & *v1) + 0x208))();
          v20 = (void *)(*(uint64_t (**)(uint64_t))((*v15 & *v1) + 0x200))(v19);
          objc_msgSend(v14, sel_setDelegate_, v20);

          objc_msgSend(v14, sel_setActions_, (unint64_t)objc_msgSend(v14, sel_actions) & 0xFFFFFFFFFFFFF77FLL | 0x800);
        }

      }
      v21 = objc_msgSend(v2, sel_navigationController);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, sel_pushViewController_animated_, v12, 1);

      }
      return;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v29, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v23 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
  outlined init with copy of RecentsCallItem(a1, (uint64_t)v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  specialized >> prefix<A>(_:)((uint64_t)v6);
  v25 = v24;
  v27 = v26;
  outlined destroy of Conversation?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for RecentsCallItem?);
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v23 + 32) = v25;
  *(_QWORD *)(v23 + 40) = v27;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

uint64_t outlined init with copy of RecentCallDetailControllerFactoryProtocol?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void RecentsListViewController.dismissContactsModal()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_presentedViewController);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void RecentsListViewController.presentDetailsView(for:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  outlined init with copy of RecentCallDetailControllerFactoryProtocol?((uint64_t)v1 + OBJC_IVAR___FTRecentsListViewController_detailControllerFactory, (uint64_t)v14);
  v4 = v15;
  if (v15)
  {
    v5 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v6 = (void *)(*(uint64_t (**)(void *, _QWORD, _QWORD, uint64_t, uint64_t))(v5 + 32))(a1, 0, 0, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v6)
    {
      v7 = objc_msgSend(v2, sel_navigationController);
      if (v7)
      {
        v8 = v7;

        objc_msgSend(v8, sel_pushViewController_animated_, v6, 1);
      }
      else
      {

      }
      return;
    }
  }
  else
  {
    outlined destroy of Conversation?((uint64_t)v14, &demangling cache variable for type metadata for RecentCallDetailControllerFactoryProtocol?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = OUTLINED_FUNCTION_16_9();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  v14[0] = a1;
  type metadata accessor for CHRecentCall();
  v10 = a1;
  v11 = String.init<A>(reflecting:)();
  v13 = v12;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v13;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

unint64_t type metadata accessor for CHRecentCall()
{
  unint64_t result;

  result = lazy cache variable for type metadata for CHRecentCall;
  if (!lazy cache variable for type metadata for CHRecentCall)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CHRecentCall);
  }
  return result;
}

uint64_t dispatch thunk of RecentsItemDetailsPresenter.presentDetailsView(for:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RecentsItemDetailsPresenter.presentDetailsView(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void InCallBannerHostViewController.__allocating_init(controlsManager:)()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_16_1();
  InCallBannerHostViewController.init(controlsManager:)(v0);
  OUTLINED_FUNCTION_0();
}

void InCallBannerHostViewController.requiresControlsHidden.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  InCallBannerHostViewController.hideOrShowRootView()();
  OUTLINED_FUNCTION_9_0();
}

BOOL InCallBannerHostViewController.eligibleForDismissal.getter()
{
  char v0;

  InCallBannerHostViewController.menuPresented.getter();
  return (v0 & 1) == 0;
}

uint64_t InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  char *v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id *v38;
  void (*v39)(_QWORD, __int128 *, id);
  id v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  uint64_t (*v59)(void);
  id v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  _QWORD *v67;
  void (*v68)(char *);
  _QWORD *v69;
  id v70;
  id v71;
  uint64_t *v72;
  void (*v73)(void);
  id v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[6];
  uint64_t v78[4];
  __int128 v79[3];
  _BYTE v80[72];
  _BYTE v81[48];
  _BYTE v82[40];
  char v83;

  v3 = v2;
  LODWORD(v76) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v75 - v9;
  v11 = type metadata accessor for ConversationControlsRecipe();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v75 = v13 - v12;
  v14 = type metadata accessor for DispatchPredicate();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_77();
  v18 = (uint64_t *)(v17 - v16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x1E0DEF740], v14);
  v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    swift_once();
LABEL_6:
    v23 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v23, (uint64_t)&static Logger.conversationControls);
    v24 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v24))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v25 = 0;
      v26 = "Skipping update for collaboration HUD";
      goto LABEL_8;
    }
LABEL_9:

    return 0;
  }
  OUTLINED_FUNCTION_6_117(11);
  v83 = 6;
  static ConversationControlsType.== infix(_:_:)(a1);
  v19 = v20;
  v21 = OUTLINED_FUNCTION_7_133();
  OUTLINED_FUNCTION_18_97(v21, (uint64_t)v81);
  if ((v19 & 1) != 0)
  {
    outlined destroy of ConversationControlsType((uint64_t)v81);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_6_117(12);
  v83 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)v81);
  v19 = v22;
  OUTLINED_FUNCTION_7_133();
  outlined destroy of ConversationControlsType((uint64_t)v81);
  if ((v19 & 1) != 0)
  {
LABEL_5:
    if (one-time initialization token for conversationControls == -1)
      goto LABEL_6;
    goto LABEL_31;
  }
  v28 = &v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate];
  OUTLINED_FUNCTION_1();
  if (!MEMORY[0x1C3B752C0](v28))
  {
    OUTLINED_FUNCTION_18_97(0, (uint64_t)v80);
    goto LABEL_19;
  }
  v29 = *((_QWORD *)v28 + 1);
  ObjectType = swift_getObjectType();
  LOBYTE(v29) = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(ObjectType, v29);
  v31 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_18_97(v31, (uint64_t)v80);
  if ((v29 & 1) == 0)
  {
LABEL_19:
    outlined destroy of ConversationControlsType((uint64_t)v80);
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_6_117(2);
  v83 = 6;
  static ConversationControlsType.== infix(_:_:)((uint64_t)v80);
  v19 = v32;
  OUTLINED_FUNCTION_7_133();
  outlined destroy of ConversationControlsType((uint64_t)v80);
  if ((v19 & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v33 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v33, (uint64_t)&static Logger.conversationControls);
    v34 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v34))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v25 = 0;
      v26 = "Skipping update for pending authorization request because the controls are expanded";
LABEL_8:
      _os_log_impl(&dword_1BD004000, v19, (os_log_type_t)v3, v26, v25, 2u);
      OUTLINED_FUNCTION_60();
    }
    goto LABEL_9;
  }
LABEL_20:
  updatedControlsType #1 () in InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)(v76 & 1, a1, (uint64_t)v3, v79);
  v35 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType];
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsType(v79, v35);
  swift_endAccess();
  ConversationControlsType.associatedNotice.getter((uint64_t)v82);
  v36 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Notice?((uint64_t)v82, v36);
  swift_endAccess();
  v37 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory];
  v38 = (id *)&v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager];
  OUTLINED_FUNCTION_1();
  v39 = *(void (**)(_QWORD, __int128 *, id))(*(_QWORD *)v37 + 96);
  v40 = *v38;
  v39(0, v79, v40);

  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsType((uint64_t)v79, (uint64_t)v82);
    v42 = v3;
    v43 = Logger.logObject.getter();
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = OUTLINED_FUNCTION_105();
      v76 = OUTLINED_FUNCTION_105();
      v77[0] = 0;
      v78[0] = v76;
      *(_DWORD *)v45 = 136315650;
      v46 = String.init<A>(reflecting:)();
      v77[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, v78);
      OUTLINED_FUNCTION_27_75();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      outlined init with copy of ConversationControlsType((uint64_t)v82, (uint64_t)v77);
      v55 = specialized >> prefix<A>(_:)((uint64_t)v77, v48, v49, v50, v51, v52, v53, v54);
      v57 = v56;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v77, &demangling cache variable for type metadata for ConversationControlsType?);
      v77[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, v78);
      OUTLINED_FUNCTION_27_75();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_133();
      *(_WORD *)(v45 + 22) = 2080;
      v58 = *v38;
      v59 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v38) + 0x840);
      v60 = v58;
      LOBYTE(v59) = v59();

      LOBYTE(v77[0]) = (_BYTE)v59;
      v61 = String.init<A>(reflecting:)();
      v77[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v62, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v43, v44, "InCallControls] Unable to acquire desired recipe, sizeClass:%s type:%s mode:%s", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_7_133();
    outlined destroy of ConversationControlsType((uint64_t)v79);
    return 0;
  }
  v63 = (uint64_t)v10;
  v64 = v75;
  outlined init with take of ConversationControlsRecipe(v63, v75);
  v65 = &v3[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController];
  OUTLINED_FUNCTION_1();
  v66 = *(_QWORD **)v65;
  v67 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v66)
  {
    OUTLINED_FUNCTION_22_96();
    OUTLINED_FUNCTION_10_119();
    v68 = *(void (**)(char *))((*v67 & *v66) + 0x380);
    v69 = v66;
    v68(v8);

  }
  else
  {
    static Layout.ConversationControls.values.getter((uint64_t)v82);
    OUTLINED_FUNCTION_22_96();
    OUTLINED_FUNCTION_10_119();
    v70 = *v38;
    v71 = objc_allocWithZone((Class)type metadata accessor for ConversationHUDViewController());
    v72 = ConversationHUDViewController.init(recipe:presentationSize:controlsManager:context:)((uint64_t)v8, v70, 2);
    InCallBannerHostViewController.conversationControlsViewController.setter(v72);
  }
  v73 = *(void (**)(void))((*v67 & *(_QWORD *)*v38) + 0xA00);
  v74 = *v38;
  v73();

  outlined destroy of ConversationControlsRecipe(v64);
  outlined destroy of ConversationControlsType((uint64_t)v79);
  return 1;
}

Swift::Void __swiftcall InCallBannerHostViewController.beginHUDTransition(isDismissed:)(Swift::Bool isDismissed)
{
  uint64_t v1;
  Swift::Bool *v3;

  v3 = (Swift::Bool *)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed);
  OUTLINED_FUNCTION_2_0();
  *v3 = isDismissed;
  if (!isDismissed)
    InCallBannerHostViewController.hideOrShowRootView()();
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall InCallBannerHostViewController.hudTransition()()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  _BYTE *v3;
  double v4;
  void (*v5)(double);
  _QWORD *v6;

  v1 = (_QWORD **)(v0
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed);
    OUTLINED_FUNCTION_1();
    if (*v3)
      v4 = 0.0;
    else
      v4 = 1.0;
    v5 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1A8);
    v6 = v2;
    v5(v4);

  }
}

Swift::Void __swiftcall InCallBannerHostViewController.completeHUDTransition(isFinalPosition:)(Swift::Bool isFinalPosition)
{
  if (isFinalPosition)
    InCallBannerHostViewController.hideOrShowRootView()();
}

uint64_t key path getter for InCallBannerHostViewController.inCallBannerDelegate : InCallBannerHostViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for InCallBannerHostViewController.inCallBannerDelegate : InCallBannerHostViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void InCallBannerHostViewController.inCallBannerDelegate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void InCallBannerHostViewController.inCallBannerDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void InCallBannerHostViewController.inCallBannerDelegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD623DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

id InCallBannerHostViewController.controlsManager.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  OUTLINED_FUNCTION_1();
  return *v1;
}

void InCallBannerHostViewController.controlsManager.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void InCallBannerHostViewController.controlsManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallBannerHostViewController.controlsType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ConversationControlsType(v3, a1);
  OUTLINED_FUNCTION_32();
}

void InCallBannerHostViewController.notice.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice;
  OUTLINED_FUNCTION_1();
  outlined init with copy of Notice?(v3, a1);
  OUTLINED_FUNCTION_32();
}

void *InCallBannerHostViewController.conversationControlsViewController.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  v3 = v2;
  return v2;
}

id key path getter for InCallBannerHostViewController.conversationControlsViewController : InCallBannerHostViewController@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for InCallBannerHostViewController.conversationControlsViewController : InCallBannerHostViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  InCallBannerHostViewController.conversationControlsViewController.setter(v1);
}

void InCallBannerHostViewController.conversationControlsViewController.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  InCallBannerHostViewController.conversationControlsViewController.didset(v4);

  OUTLINED_FUNCTION_9_0();
}

void InCallBannerHostViewController.conversationControlsViewController.didset(void *a1)
{
  char *v1;
  char *v3;
  _QWORD *v4;
  void (*v5)(char *, _UNKNOWN **);
  char *v6;
  _QWORD *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  Class isa;
  _QWORD aBlock[6];

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController];
  swift_beginAccess();
  v4 = *(_QWORD **)v3;
  if (v4)
  {
    v5 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x368);
    v6 = v1;
    v7 = v4;
    v5(v1, &protocol witness table for InCallBannerHostViewController);
    objc_msgSend(v6, sel_addChildViewController_, v7);
    objc_msgSend(v7, sel_didMoveToParentViewController_, v6);
    if (a1)
    {
      v8 = a1;
      v9 = objc_msgSend(v8, sel_view);
      if (!v9)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9;
      v11 = objc_msgSend(v7, sel_view);
      if (!v11)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      v12 = v11;
      v13 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v14 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v8;
      aBlock[4] = partial apply for closure #1 in InCallBannerHostViewController.conversationControlsViewController.didset;
      aBlock[5] = v15;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      aBlock[3] = &block_descriptor_16_4;
      v16 = _Block_copy(aBlock);
      v17 = v8;
      swift_release();
      objc_msgSend(v13, sel_transitionFromView_toView_duration_options_completion_, v10, v12, 5242880, v16, v14);

      _Block_release(v16);
    }
    else
    {
      v18 = objc_msgSend(v6, sel_view);
      if (!v18)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      v19 = v18;
      v20 = objc_msgSend(v7, sel_view);
      if (!v20)
      {
LABEL_34:
        __break(1u);
        return;
      }
      v21 = v20;
      objc_msgSend(v19, sel_addSubview_, v20);

    }
    v22 = objc_msgSend(v7, sel_view);
    if (v22)
    {
      v23 = v22;
      objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1BD644140;
      v25 = objc_msgSend(v7, sel_view);
      if (v25)
      {
        v26 = v25;
        v27 = objc_msgSend(v25, sel_topAnchor);

        v28 = objc_msgSend(v6, sel_view);
        if (v28)
        {
          v29 = v28;
          v30 = objc_msgSend(v28, sel_topAnchor);

          v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
          *(_QWORD *)(v24 + 32) = v31;
          v32 = objc_msgSend(v7, sel_view);
          if (v32)
          {
            v33 = v32;
            v34 = objc_msgSend(v32, sel_leadingAnchor);

            v35 = objc_msgSend(v6, sel_view);
            if (v35)
            {
              v36 = v35;
              v37 = objc_msgSend(v35, sel_leadingAnchor);

              v38 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v37);
              *(_QWORD *)(v24 + 40) = v38;
              v39 = objc_msgSend(v7, sel_view);
              if (v39)
              {
                v40 = v39;
                v41 = objc_msgSend(v39, sel_bottomAnchor);

                v42 = objc_msgSend(v6, sel_view);
                if (v42)
                {
                  v43 = v42;
                  v44 = objc_msgSend(v42, sel_bottomAnchor);

                  v45 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v44);
                  *(_QWORD *)(v24 + 48) = v45;
                  v46 = objc_msgSend(v7, sel_view);
                  if (v46)
                  {
                    v47 = v46;
                    v48 = objc_msgSend(v46, sel_trailingAnchor);

                    v49 = objc_msgSend(v6, sel_view);
                    if (v49)
                    {
                      v50 = v49;
                      v51 = (void *)objc_opt_self();
                      v52 = objc_msgSend(v50, sel_trailingAnchor);

                      v53 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v52);
                      *(_QWORD *)(v24 + 56) = v53;
                      aBlock[0] = v24;
                      specialized Array._endMutation()();
                      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                      isa = Array._bridgeToObjectiveC()().super.isa;
                      swift_bridgeObjectRelease();
                      objc_msgSend(v51, sel_activateConstraints_, isa);

                      return;
                    }
                    goto LABEL_30;
                  }
LABEL_29:
                  __break(1u);
LABEL_30:
                  __break(1u);
                  goto LABEL_31;
                }
LABEL_28:
                __break(1u);
                goto LABEL_29;
              }
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
}

void InCallBannerHostViewController.conversationControlsViewController.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_1();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void InCallBannerHostViewController.conversationControlsViewController.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    InCallBannerHostViewController.conversationControlsViewController.setter(v3);

  }
  else
  {
    InCallBannerHostViewController.conversationControlsViewController.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

void InCallBannerHostViewController.isDismissed.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

id InCallBannerHostViewController.init(controlsManager:)(_QWORD *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(__int128 *__return_ptr);
  id v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  objc_super v20;
  __int128 v21[3];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  OUTLINED_FUNCTION_40_4((uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate]);
  v5 = &v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &v2[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName];
  *(_QWORD *)v6 = 0xD00000000000001ALL;
  *((_QWORD *)v6 + 1) = 0x80000001BD69AE00;
  v7 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory;
  v8 = one-time initialization token for shared;
  v9 = v2;
  if (v8 != -1)
    swift_once();
  *(_QWORD *)&v2[v7] = static ConversationControlsRecipeGenerator.shared;
  v10 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features;
  v11 = one-time initialization token for shared;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = static Features.shared;
  *(_QWORD *)&v9[v10] = static Features.shared;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed] = 1;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView] = 0;
  v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager] = a1;
  v13 = *(void (**)(__int128 *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x848);
  v14 = v12;
  v15 = a1;
  v13(v21);
  outlined init with take of ConversationControlsType(v21, &v9[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType]);

  v20.receiver = v9;
  v20.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  v17 = (uint64_t)v16 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ConversationControlsType(v17, (uint64_t)v21);
  v18 = v16;
  InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)((uint64_t)v21, 0);

  outlined destroy of ConversationControlsType((uint64_t)v21);
  return v18;
}

void InCallBannerHostViewController.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void InCallBannerHostViewController.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate]);
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_notice];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName];
  *v2 = 0xD00000000000001ALL;
  v2[1] = 0x80000001BD69AE00;
  v3 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_recipeFactory;
  if (one-time initialization token for shared != -1)
    swift_once();
  *(_QWORD *)&v0[v3] = static ConversationControlsRecipeGenerator.shared;
  v4 = OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features;
  v5 = one-time initialization token for shared;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = static Features.shared;
  *(_QWORD *)&v0[v4] = static Features.shared;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden] = 0;
  v7 = v6;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Bool __swiftcall InCallBannerHostViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall InCallBannerHostViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  InCallBannerHostViewController.hideOrShowRootView()();
}

void InCallBannerHostViewController.hideOrShowRootView()()
{
  char *v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  char *v5;

  v1 = objc_msgSend(v0, sel_viewIfLoaded);
  if (v1)
  {
    v2 = v1;
    v3 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_isDismissed];
    OUTLINED_FUNCTION_1();
    if ((*v3 & 1) != 0)
    {
      v4 = 1;
    }
    else
    {
      v5 = &v0[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden];
      OUTLINED_FUNCTION_1();
      v4 = *v5;
    }
    objc_msgSend(v2, sel_setHidden_, v4);

  }
}

void InCallBannerHostViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char aBlock[8];
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v4 = v3;
  v27.receiver = v3;
  v27.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v27, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v8, (uint64_t)&static Logger.conversationControls);
  v9 = OUTLINED_FUNCTION_12_0();
  if (os_log_type_enabled(v3, v9))
  {
    v10 = OUTLINED_FUNCTION_105();
    *(_QWORD *)aBlock = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136446466;
    v11 = _typeName(_:qualified:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13 = swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    v14 = MEMORY[0x1C3B7379C](v13, a2, a3);
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v9, "[%{public}s] willTransition(to size: %{public}s, with coordinator:)", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v16 = MEMORY[0x1E0C809B0];
  v17 = OUTLINED_FUNCTION_224((uint64_t)&block_descriptor_124, v20, v22, MEMORY[0x1E0C809B0], 1107296256, v25, v26);
  *(_QWORD *)(OUTLINED_FUNCTION_7_0() + 16) = v4;
  v18 = OUTLINED_FUNCTION_224((uint64_t)&block_descriptor_3_2, v21, v23, v16, 1107296256, v25, v26);
  v19 = v4;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v17, v18);
  _Block_release(v18);
  _Block_release(v17);
}

Swift::Void __swiftcall InCallBannerHostViewController.callDetailsGestureRecognizerTapped()()
{
  type metadata accessor for SpringBoardUtilities();
  OUTLINED_FUNCTION_7_0();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_65_2();
  specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)();
}

void closure #1 in InCallBannerHostViewController.callDetailsGestureRecognizerTapped()(char a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *v4;

  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_26();
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_17_2();
  v4 = OUTLINED_FUNCTION_3(v1, (uint64_t)&static Logger.conversationControls);
  v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v2))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1BD004000, v4, v2, "Ignoring tap on call details button. Springboard wasn't unlocked.", v3, 2u);
    OUTLINED_FUNCTION_60();
  }

}

Swift::Void __swiftcall InCallBannerHostViewController.controlsPreferredContentSizeChanged(presentingMenu:)(Swift::Bool presentingMenu)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  id *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = (uint64_t *)(v7 - v6);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
  {
    v10 = (id *)(v2
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
    OUTLINED_FUNCTION_1();
    if (*v10)
    {
      objc_msgSend(*v10, sel_preferredContentSize);
      v12 = v11;
      v14 = v13;
      v15 = v2 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate;
      OUTLINED_FUNCTION_1();
      if (MEMORY[0x1C3B752C0](v15))
      {
        v16 = *(_QWORD *)(v15 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, Swift::Bool, uint64_t, uint64_t, double, double))(v16 + 24))(v2, presentingMenu, ObjectType, v16, v12, v14);
        OUTLINED_FUNCTION_10();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void InCallBannerHostViewController.menuPresented.getter()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;

  v1 = (_QWORD **)(v0
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  if (*v1)
  {
    v3 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x3A8);
    v4 = v2;
    v3();

  }
  OUTLINED_FUNCTION_32();
}

uint64_t InCallBannerHostViewController.needsMenuContainerView.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_needsMenuContainerView);
}

uint64_t InCallBannerHostViewController.needsBackgroundBlur.getter()
{
  return 0;
}

void InCallBannerHostViewController.requiresControlsHidden.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for InCallBannerHostViewController.requiresControlsHidden : InCallBannerHostViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void InCallBannerHostViewController.requiresControlsHidden.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void InCallBannerHostViewController.requiresControlsHidden.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    InCallBannerHostViewController.hideOrShowRootView()();
}

void InCallBannerHostViewController.layoutIdiom.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t InCallBannerHostViewController.captureGroup.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_captureGroupName);
  swift_bridgeObjectRetain();
  return v1;
}

id InCallBannerHostViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InCallBannerHostViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InCallBannerHostViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void protocol witness for InCallConversationControlsViewControllerDelegate.layoutIdiom.getter in conformance InCallBannerHostViewController(_BYTE *a1@<X8>)
{
  InCallBannerHostViewController.layoutIdiom.getter(a1);
}

uint64_t protocol witness for ConversationControlsViewControllerDelegate.captureGroup.getter in conformance InCallBannerHostViewController()
{
  return InCallBannerHostViewController.captureGroup.getter();
}

_OWORD *updatedControlsType #1 () in InCallBannerHostViewController.updateConversationControlsViewController(type:forceUpdate:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD **v26;
  _QWORD *v27;
  _QWORD *v28;
  void (*v29)(void);
  _QWORD *v30;
  uint64_t v31;
  char v33;
  char v34;
  uint64_t v35;
  int v36;
  char v37;
  char v38;
  int8x16_t v39;
  __int128 *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  const char *v45;
  id *v46;
  uint64_t (*v47)(void);
  id v48;
  char v49;
  uint64_t v50;
  uint64_t v52[3];
  _BYTE v53[40];
  unsigned __int8 v54;
  __int128 v55[3];

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
    outlined init with copy of ConversationControlsType(a2, (uint64_t)v55);
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v52[0] = v15;
      *(_DWORD *)v14 = 136315138;
      outlined init with copy of ConversationControlsType((uint64_t)v55, (uint64_t)v53);
      v23 = specialized >> prefix<A>(_:)((uint64_t)v53, v16, v17, v18, v19, v20, v21, v22);
      v25 = v24;
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v53, &demangling cache variable for type metadata for ConversationControlsType?);
      *(_QWORD *)v53 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v25, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of ConversationControlsType((uint64_t)v55);
      _os_log_impl(&dword_1BD004000, v12, v13, "Forcing update to requested controls type: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v15, -1, -1);
      MEMORY[0x1C3B751B8](v14, -1, -1);
    }
    else
    {
      outlined destroy of ConversationControlsType((uint64_t)v55);
    }

    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  v26 = (_QWORD **)(a3
                  + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
  swift_beginAccess();
  v27 = *v26;
  if (!*v26)
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v29 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v27) + 0x378);
  v30 = v27;
  v29();

  v31 = type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v31))
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  outlined init with copy of ConversationControlsType((uint64_t)v10, (uint64_t)v53);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  outlined init with take of ConversationControlsType((__int128 *)v53, v55);
  memset(v53, 0, sizeof(v53));
  v54 = 6;
  static ConversationControlsType.== infix(_:_:)(a2);
  v34 = v33;
  v35 = outlined destroy of ConversationControlsType((uint64_t)v53);
  if ((v34 & 1) != 0)
  {
    outlined init with copy of ConversationControlsType((uint64_t)v55, (uint64_t)v53);
    v36 = v54;
    v35 = outlined destroy of ConversationControlsType((uint64_t)v53);
    if (!v36)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v41 = type metadata accessor for Logger();
      __swift_project_value_buffer(v41, (uint64_t)&static Logger.conversationControls);
      v42 = Logger.logObject.getter();
      v43 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v42, v43))
        goto LABEL_24;
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      goto LABEL_23;
    }
  }
  if (((*(uint64_t (**)(uint64_t))((*v28 & **(_QWORD **)(a3
                                                                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_features))
                                           + 0xA8))(v35) & 1) != 0)
    goto LABEL_26;
  *(_QWORD *)v53 = 6;
  memset(&v53[8], 0, 32);
  v54 = 6;
  static ConversationControlsType.== infix(_:_:)(a2);
  v38 = v37;
  outlined destroy of ConversationControlsType((uint64_t)v53);
  if ((v38 & 1) == 0)
    goto LABEL_26;
  outlined init with copy of ConversationControlsType((uint64_t)v55, (uint64_t)v53);
  if (v54 != 6
    || (v39 = vorrq_s8(*(int8x16_t *)&v53[8], *(int8x16_t *)&v53[24]),
        *(_QWORD *)&vorr_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)) | *(_QWORD *)v53))
  {
    outlined destroy of ConversationControlsType((uint64_t)v55);
    v40 = (__int128 *)v53;
LABEL_27:
    outlined destroy of ConversationControlsType((uint64_t)v40);
    return (_OWORD *)outlined init with copy of ConversationControlsType(a2, (uint64_t)a4);
  }
  outlined destroy of ConversationControlsType((uint64_t)v53);
  v46 = (id *)(a3 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  swift_beginAccess();
  v47 = *(uint64_t (**)(void))((*v28 & *(_QWORD *)*v46) + 0x280);
  v48 = *v46;
  v49 = v47();

  if ((v49 & 1) != 0)
  {
LABEL_26:
    v40 = v55;
    goto LABEL_27;
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v50 = type metadata accessor for Logger();
  __swift_project_value_buffer(v50, (uint64_t)&static Logger.conversationControls);
  v42 = Logger.logObject.getter();
  v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
LABEL_23:
    _os_log_impl(&dword_1BD004000, v42, v43, v45, v44, 2u);
    MEMORY[0x1C3B751B8](v44, -1, -1);
  }
LABEL_24:

  return outlined init with take of ConversationControlsType(v55, a4);
}

uint64_t outlined init with copy of Notice?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Notice?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD625AEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BD625B10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BD625B48(char *a1)
{
  InCallBannerHostViewController.requiresControlsHidden.setter(*a1);
}

uint64_t dispatch thunk of InCallBannerDelegate.inCallBannerDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InCallBannerDelegate.isPresentingCallDetails.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InCallBannerDelegate.updateState(for:preferredControlsSize:presentingMenu:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InCallBannerDelegate.presentCallDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for InCallBannerHostViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for InCallBannerHostViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallBannerHostViewController.__allocating_init(controlsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

id partial apply for closure #1 in InCallBannerHostViewController.conversationControlsViewController.didset()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromParentViewController);
}

void static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(unint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double *v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  double MinX;
  double MaxX;
  double MinY;
  double MaxY;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v18 = type metadata accessor for FloatingPointRoundingRule();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    v41 = a6;
    v42 = a7;
    v22 = (double *)(a2 + 32 * a1);
    a7 = v22[4];
    a6 = v22[5];
    v23 = v22[6];
    v8 = v22[7];
    v24 = 1.0;
    if ((a4 & 1) == 0)
      v24 = v22[6];
    v25 = v24 * *(double *)&a3;
    v26 = *MEMORY[0x1E0DED500];
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
    OUTLINED_FUNCTION_2_79();
    v43 = a8;
    a8 = CGFloat.rounded(_:toScale:)((uint64_t)v21, a8, v25);
    OUTLINED_FUNCTION_1_82();
    v44.origin.x = OUTLINED_FUNCTION_0_165();
    MinX = CGRectGetMinX(v44);
    v45.origin.x = OUTLINED_FUNCTION_0_165();
    MaxX = CGRectGetMaxX(v45);
    v46.origin.x = OUTLINED_FUNCTION_0_165();
    MinY = CGRectGetMinY(v46);
    v47.origin.x = OUTLINED_FUNCTION_0_165();
    MaxY = CGRectGetMaxY(v47);
    if ((a5 & 1) != 0)
    {
      if (MinX < 1.0)
      {
LABEL_9:
        v9 = v23 + a8;
LABEL_11:
        if (MinY < 1.0)
          goto LABEL_15;
        if (v42 + -1.0 < MaxY)
        {
          a6 = a6 - a8;
          goto LABEL_15;
        }
LABEL_14:
        OUTLINED_FUNCTION_2_79();
        v37 = OUTLINED_FUNCTION_3_136();
        OUTLINED_FUNCTION_1_82();
        a6 = a6 - v37;
LABEL_15:
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_16;
        goto LABEL_20;
      }
      if (v41 + -1.0 < MaxX)
      {
        a7 = a7 - a8;
        goto LABEL_9;
      }
    }
    v41 = a6;
    v32 = v8;
    v33 = a8;
    v34 = MinY;
    v35 = MaxY;
    v27(v21, v26, v18);
    v36 = OUTLINED_FUNCTION_3_136();
    OUTLINED_FUNCTION_1_82();
    MaxY = v35;
    MinY = v34;
    a8 = v33;
    v8 = v32;
    a6 = v41;
    a7 = a7 - v36;
    v9 = v23 + a8;
    if ((a5 & 1) == 0)
      goto LABEL_14;
    goto LABEL_11;
  }
  __break(1u);
LABEL_20:
  specialized _ArrayBuffer._consumeAndCreateNew()();
  a2 = v39;
LABEL_16:
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    v38 = (double *)(a2 + 32 * a1);
    v38[4] = a7;
    v38[5] = a6;
    v38[6] = v9;
    v38[7] = v8 + a8;
  }
}

BOOL static DeviceType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void DeviceType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int DeviceType.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance DeviceType(char *a1, char *a2)
{
  return static DeviceType.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance DeviceType()
{
  unsigned __int8 *v0;

  return DeviceType.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance DeviceType(uint64_t a1)
{
  unsigned __int8 *v1;

  DeviceType.hash(into:)(a1, *v1);
}

double TileScaleFactor.sizeToIncrease(for:)(uint64_t a1, char a2, double a3, double a4, double a5)
{
  double v5;

  v5 = 1.0;
  if ((a2 & 1) == 0)
    v5 = a5;
  return v5 * *(double *)&a1;
}

unint64_t lazy protocol witness table accessor for type DeviceType and conformance DeviceType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type DeviceType and conformance DeviceType;
  if (!lazy protocol witness table cache variable for type DeviceType and conformance DeviceType)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DeviceType and conformance DeviceType);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD625F7C + 4 * byte_1BD66AEB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD625FB0 + 4 * byte_1BD66AEB0[v4]))();
}

uint64_t sub_1BD625FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD625FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD625FC0);
  return result;
}

uint64_t sub_1BD625FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD625FD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD625FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD625FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t dispatch thunk of ParticipantLayout.frames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for TileScaleFactor()
{
  return &type metadata for TileScaleFactor;
}

uint64_t ReactionPickerTipViewConstraintManager.__allocating_init(containingGuide:localParticipantView:reactionPickerTipView:)(void *a1, void *a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ReactionPickerTipViewConstraintManager.init(containingGuide:localParticipantView:reactionPickerTipView:)(a1, a2, a3);
  return v6;
}

_QWORD *ReactionPickerTipViewConstraintManager.init(containingGuide:localParticipantView:reactionPickerTipView:)(void *a1, void *a2, id a3)
{
  _QWORD *v3;
  uint64_t v4;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;

  v3[7] = MEMORY[0x1E0DEE9D8];
  v8 = objc_msgSend(a3, sel_bottomAnchor);
  v9 = objc_msgSend(a2, sel_topAnchor);
  v10 = objc_msgSend(v8, sel_constraintGreaterThanOrEqualToAnchor_constant_, v9, -10.0);
  OUTLINED_FUNCTION_1_4();

  v3[2] = v4;
  v12 = OUTLINED_FUNCTION_123(v11, sel_trailingAnchor);
  v13 = objc_msgSend(a2, sel_trailingAnchor);
  v14 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  v3[3] = v4;
  v16 = OUTLINED_FUNCTION_123(v15, sel_bottomAnchor);
  v17 = objc_msgSend(a1, sel_bottomAnchor);
  v18 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  v3[4] = v4;
  v20 = OUTLINED_FUNCTION_123(v19, sel_trailingAnchor);
  v21 = objc_msgSend(a1, sel_trailingAnchor);
  v22 = OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_4();

  v3[5] = v4;
  v24 = OUTLINED_FUNCTION_123(v23, sel_widthAnchor);
  if (one-time initialization token for defaultTipWidth != -1)
    swift_once();
  v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, *(double *)&static Layout.Reactions.defaultTipWidth);

  v3[6] = v25;
  return v3;
}

uint64_t ReactionPickerTipViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t result;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v2 = (unint64_t)v1;
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a1 + 21);
  v5 = v1 + 7;
  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (v4 != 1)
    return swift_bridgeObjectRetain();
  if (v3 >> 6)
  {
    if (v3 >> 6 != 1)
      return swift_bridgeObjectRetain();
    v3 &= 0x3Fu;
  }
  v6 = *(void **)(v2 + 48);
  OUTLINED_FUNCTION_0_76();
  v7 = v6;
  MEMORY[0x1C3B7301C]();
  OUTLINED_FUNCTION_4_154(*(_QWORD *)(v2 + 56));
  OUTLINED_FUNCTION_13_114();
  specialized Array._endMutation()();
  swift_endAccess();

  if (v3 == 3)
  {
    v9 = *(void **)(v2 + 16);
    v8 = *(void **)(v2 + 24);
    OUTLINED_FUNCTION_0_76();
    v2 = *(_QWORD *)(v2 + 56);
    if (v2 >> 62)
    {
      OUTLINED_FUNCTION_1_63();
      v15 = v8;
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      OUTLINED_FUNCTION_2_23();
    }
    else
    {
      OUTLINED_FUNCTION_4_61();
      v10 = v8;
    }
    result = (uint64_t)v7 + 2;
    if (!__OFADD__(v7, 2))
      goto LABEL_14;
    __break(1u);
  }
  v9 = *(void **)(v2 + 32);
  v8 = *(void **)(v2 + 40);
  OUTLINED_FUNCTION_0_76();
  if (*(_QWORD *)(v2 + 56) >> 62)
  {
    OUTLINED_FUNCTION_1_63();
    v16 = v8;
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    OUTLINED_FUNCTION_2_23();
  }
  else
  {
    OUTLINED_FUNCTION_4_61();
    v12 = v8;
  }
  result = (uint64_t)v7 + 2;
  if (!__OFADD__(v7, 2))
  {
LABEL_14:
    specialized Array._reserveCapacityImpl(minimumCapacity:growForAppend:)(result, 1);
    specialized Array._endMutation()();
    v13 = v9;
    MEMORY[0x1C3B7301C]();
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v14 = v8;
    MEMORY[0x1C3B7301C]();
    OUTLINED_FUNCTION_4_154(*v5);
    OUTLINED_FUNCTION_13_114();
    specialized Array._endMutation()();
    swift_endAccess();

    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

id *ReactionPickerTipViewConstraintManager.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReactionPickerTipViewConstraintManager.__deallocating_deinit()
{
  ReactionPickerTipViewConstraintManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:) in conformance ReactionPickerTipViewConstraintManager()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 160))();
}

uint64_t type metadata accessor for ReactionPickerTipViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReactionPickerTipViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionPickerTipViewConstraintManager.__allocating_init(containingGuide:localParticipantView:reactionPickerTipView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ReactionPickerTipViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t static PlatformEffectViewStyle.blurStyle(for:)(char a1)
{
  return qword_1BD66B090[a1];
}

BOOL static PlatformEffectViewStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void PlatformEffectViewStyle.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int PlatformEffectViewStyle.hashValue.getter(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PlatformEffectViewStyle(char *a1, char *a2)
{
  return static PlatformEffectViewStyle.== infix(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PlatformEffectViewStyle()
{
  unsigned __int8 *v0;

  return PlatformEffectViewStyle.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance PlatformEffectViewStyle(uint64_t a1)
{
  unsigned __int8 *v1;

  PlatformEffectViewStyle.hash(into:)(a1, *v1);
}

unint64_t lazy protocol witness table accessor for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle;
  if (!lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for PlatformEffectViewStyle, &type metadata for PlatformEffectViewStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlatformEffectViewStyle and conformance PlatformEffectViewStyle);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlatformEffectViewStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD626630 + 4 * byte_1BD66AFF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD626664 + 4 * byte_1BD66AFF0[v4]))();
}

uint64_t sub_1BD626664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD62666C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD626674);
  return result;
}

uint64_t sub_1BD626680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD626688);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD62668C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD626694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlatformEffectViewStyle()
{
  return &type metadata for PlatformEffectViewStyle;
}

void ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:isAVLess:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(_BYTE *)(OUTLINED_FUNCTION_15() + 160) = a6;
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

uint64_t ConversationControlsVideoMenuButtonProvider.isAVLess.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 160);
}

Swift::Bool __swiftcall ConversationControlsVideoMenuButtonProvider.shouldEnableMenu()()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 160);
}

void ConversationControlsVideoMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:isAVLess:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 160) = a6;
  ConversationControlsMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)();
}

void ConversationControlsVideoMenuButtonProvider.__allocating_init(coder:)()
{
  swift_initStackObject();
  ConversationControlsVideoMenuButtonProvider.init(coder:)();
}

void ConversationControlsVideoMenuButtonProvider.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsVideoMenuButtonProvider.toggleVideoButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_2_0();
  v1 = MEMORY[0x1C3B752C0](v0 + 16);
  if (v1)
  {
    v2 = (void *)v1;
    objc_msgSend(*(id *)(v0 + 136), sel_toggleVideoButtonTappedWithButton_, v1);

  }
}

Swift::Void __swiftcall ConversationControlsVideoMenuButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  objc_class *v10;
  NSBundle v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  ControlsButtonProvider.buttonChanged()();
  OUTLINED_FUNCTION_2_0();
  v6 = (void *)MEMORY[0x1C3B752C0](v0 + 16);
  if (v6)
  {
    v7 = v6;
    outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(0xD000000000000011, 0x80000001BD6724B0, v6);
    objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v0, sel_toggleVideoButtonTapped, 0x2000);
    type metadata accessor for ConversationControlsButton();
    if (swift_dynamicCastClass())
    {
      v8 = (void *)objc_opt_self();
      v9 = v7;
      v10 = (objc_class *)objc_msgSend(v8, sel_conversationKit);
      OUTLINED_FUNCTION_7_14();
      v11.super.isa = v10;
      v16 = OUTLINED_FUNCTION_49_2(v12, v13, v14, v15, v11);
      v18 = v17;

      ConversationControlsButton.localizedName.setter(v16, v18);
    }
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0 + 136)) + 0x628))();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_7_4();
    lazy protocol witness table accessor for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher();
    v19 = Publisher<>.sink(receiveValue:)();

    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)(v1 + 48) = v19;
    swift_release();
  }
}

void closure #1 in ConversationControlsVideoMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = *a1;
  v2 = a1[1];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = Strong;
    v5 = Strong + 16;
    swift_beginAccess();
    v6 = (void *)MEMORY[0x1C3B752C0](v5);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_setEnabled_, v1);
      objc_msgSend(v7, sel_setSelected_, v2);
      objc_msgSend(v7, sel_setShowsMenuAsPrimaryAction_, *(unsigned __int8 *)(v4 + 160));
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

UIMenu ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  void *v0;
  objc_class *v1;
  NSBundle v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  NSBundle v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v25;

  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
  v0 = (void *)objc_opt_self();
  v1 = (objc_class *)objc_msgSend(v0, sel_conversationKit);
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_7_14();
  v2.super.isa = v1;
  OUTLINED_FUNCTION_49_2(v3, v4, v5, v6, v2);

  v7 = (void *)objc_opt_self();
  v8 = (void *)MEMORY[0x1C3B72E00](0x656E6F6870, 0xE500000000000000);
  v9 = objc_msgSend(v7, sel___systemImageNamedSwift_, v8);

  v10 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_4();
  v11 = OUTLINED_FUNCTION_6_118();
  v12 = (objc_class *)objc_msgSend(v0, sel_conversationKit, 0, 0, 0, partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:), v10);
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_7_14();
  v13.super.isa = v12;
  OUTLINED_FUNCTION_49_2(v14, v15, v16, v17, v13);

  v18 = (void *)MEMORY[0x1C3B72E00](0x6F65646976, 0xE500000000000000);
  v19 = objc_msgSend(v7, sel___systemImageNamedSwift_, v18);

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_7_4();
  v20 = OUTLINED_FUNCTION_6_118();
  _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for UIMenu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v21 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v21 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v21 + 32) = v20;
  *(_QWORD *)(v21 + 40) = v11;
  preferredElementSize = v21;
  specialized Array._endMutation()();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v25.value.super.isa = 0;
  v25.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v25, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

void closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    v2 = Strong + 16;
    swift_beginAccess();
    v3 = MEMORY[0x1C3B752C0](v2);
    if (v3)
    {
      v4 = (void *)v3;
      objc_msgSend(*(id *)(v1 + 136), sel_toggleMicButtonTappedWithButton_, v3);
      ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    ConversationControlsVideoMenuButtonProvider.toggleVideoButtonTapped()();
    ConversationControlsMenuButtonProvider.disableMenuContainerViewInteraction()();
    return swift_release();
  }
  return result;
}

void ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_5_141();
  __break(1u);
}

void ConversationControlsVideoMenuButtonProvider.init(controlsManager:context:shape:menuHostViewController:)()
{
  OUTLINED_FUNCTION_5_141();
  __break(1u);
}

uint64_t ConversationControlsVideoMenuButtonProvider.__deallocating_deinit()
{
  ConversationControlsMenuButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BD626F08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.buttonChanged()(unsigned __int8 *a1)
{
  closure #1 in ConversationControlsVideoMenuButtonProvider.buttonChanged()(a1);
}

unint64_t lazy protocol witness table accessor for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher;
  if (!lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Published<ControlsActionState>.Publisher);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Published<ControlsActionState>.Publisher and conformance Published<A>.Publisher);
  }
  return result;
}

void partial apply for closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  closure #1 in ConversationControlsVideoMenuButtonProvider.menu(for:)();
}

uint64_t partial apply for closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)()
{
  return closure #2 in ConversationControlsVideoMenuButtonProvider.menu(for:)();
}

uint64_t type metadata accessor for ConversationControlsVideoMenuButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsVideoMenuButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsVideoMenuButtonProvider.__allocating_init(controlsManager:context:shape:menuHostViewController:isAVLess:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 592))();
}

uint64_t dispatch thunk of ConversationControlsVideoMenuButtonProvider.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 600))();
}

uint64_t specialized _ArrayProtocol.filter(_:)(unint64_t a1, char *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
      v7 = a1 & 0xC000000000000001;
      v14 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
      while (v7)
      {
        v8 = (id)MEMORY[0x1C3B73D18](v5, a1);
LABEL_7:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        objc_msgSend(v8, sel_confidence);
        if (v11 >= *(double *)&a2[v6])
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v6 = v14;
          v7 = a1 & 0xC000000000000001;
        }
        ++v5;
        if (v10 == v4)
        {
          v12 = v15;
          goto LABEL_18;
        }
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4)
        goto LABEL_17;
    }
    v8 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_7;
  }
LABEL_17:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_18:

  swift_bridgeObjectRelease();
  return v12;
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo16AVCCaptionsTokenCG_So8_NSRangeVs5NeverOTg5097_s15ConversationKit025CaptionsClientParticipantC8ProviderC08captionsD0_09didUpdateC06sourceySo011dq15CSg_So0K6Resultvwx13SourceVtFSo8_f6VSo0K5E54Ccfu2_33_4c94f2a9ae96d10c2646dde87984b78dArPTf3nnnpk_nTf1cn_n(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x1C3B73D18](v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_range);
      v8 = v7;

      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v3;
      *(_QWORD *)(v11 + 16) = v9 + 1;
      v10 = v11 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v8;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
}

id CaptionsClientParticipantCaptionsProvider.__allocating_init(logger:token:usage:)(uint64_t a1, uint64_t a2, int a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)(a1, a2, a3);
}

id CaptionsClientParticipantCaptionsProvider.token.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient))
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient), sel_streamToken);
  else
    return 0;
}

uint64_t CaptionsClientParticipantCaptionsProvider.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_logger;
  v4 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0
     + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  OUTLINED_FUNCTION_2_0();
  return MEMORY[0x1C3B752C0](v1);
}

uint64_t CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2
     + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return ConversationControlsButton.delegate.modify;
}

id CaptionsClientParticipantCaptionsProvider.init(logger:token:usage:)(uint64_t a1, uint64_t a2, int a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  NSObject *v29;
  objc_class *v30;
  id v31;
  id v32;
  char *v33;
  id v34;
  id v35;
  id v36;
  os_log_type_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  NSObject *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void (*v49)(uint64_t, NSObject *);
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unsigned __int8 v59;
  char *v60;
  id v61;
  Class v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  NSObject *v71;
  Class v72;
  char *v73;
  void *v74;
  uint64_t v75;
  char *v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  int v86;
  uint8_t *v87;
  uint64_t v88;
  char *v89;
  Class isa;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  objc_super v94;
  Swift::OpaquePointer_optional v95;

  v4 = v3;
  v86 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Locale?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_8_120(v8, v75);
  v9 = type metadata accessor for LanguageManager();
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_77();
  v13 = v12 - v11;
  v14 = type metadata accessor for Locale();
  v15 = *(_QWORD *)(v14 - 8);
  v87 = (uint8_t *)v14;
  v88 = v15;
  OUTLINED_FUNCTION_10_1();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v81 = (char *)&v75 - v21;
  MEMORY[0x1E0C80A78](v20);
  v89 = (char *)&v75 - v22;
  v23 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_participantCaptionsProviderDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v24 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient] = 0;
  v25 = OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_lowConfidenceThreshold;
  v26 = one-time initialization token for shared;
  v27 = v4;
  if (v26 != -1)
    swift_once();
  *(double *)&v4[v25] = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 752))();
  v28 = &v27[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_logger];
  v29 = OUTLINED_FUNCTION_17_2();
  isa = v29[-1].isa;
  (*((void (**)(char *, uint64_t, NSObject *))isa + 2))(v28, a1, v29);

  if (!a2)
  {
    v45 = v29;
    v46 = OUTLINED_FUNCTION_27_76();
    v47 = static os_log_type_t.error.getter();
    if (OUTLINED_FUNCTION_4_14(v47))
    {
      v48 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1BD004000, v46, (os_log_type_t)v19, "Requesting captions provider with stream token == 0. Will not create client.", v48, 2u);
      OUTLINED_FUNCTION_60();
    }

    v49 = (void (*)(uint64_t, NSObject *))*((_QWORD *)isa + 1);
    v49(a1, v45);
    v49((uint64_t)v28, v45);
    outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v23);

    ObjC metadata update function for CaptionsClientParticipantCaptionsProvider();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v85 = v29;
  v30 = (objc_class *)ObjC metadata update function for CaptionsClientParticipantCaptionsProvider();
  v94.receiver = v27;
  v94.super_class = v30;
  v31 = objc_msgSendSuper2(&v94, sel_init);
  v32 = objc_allocWithZone(MEMORY[0x1E0CF2258]);
  v33 = (char *)v31;
  v34 = objc_msgSend(v32, sel_initWithDelegate_streamToken_, v33, a2);
  if (!v34)
  {

    v50 = OUTLINED_FUNCTION_27_76();
    v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)OUTLINED_FUNCTION_105();
      v92 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v52 = 136315138;
      v93 = a2;
      v53 = OUTLINED_FUNCTION_39_73();
      v93 = OUTLINED_FUNCTION_15_106(v53, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_48(&dword_1BD004000, v50, v51, "Failed to create AVCCaptionsClient with stream token %s.", v52);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    (*((void (**)(NSObject *, NSObject *))isa + 1))(v29, v85);
    return 0;
  }
  v35 = v34;
  v76 = v33;
  v36 = v34;
  v80 = a1;
  OUTLINED_FUNCTION_27_76();
  v37 = OUTLINED_FUNCTION_12_0();
  v38 = os_log_type_enabled(v29, v37);
  v78 = v35;
  v79 = v31;
  v77 = v36;
  if (v38)
  {
    v39 = OUTLINED_FUNCTION_105();
    v92 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v39 = 136315394;
    v93 = a2;
    v40 = OUTLINED_FUNCTION_39_73();
    v93 = OUTLINED_FUNCTION_15_106(v40, v41);
    OUTLINED_FUNCTION_7_25();
    OUTLINED_FUNCTION_21_0();
    *(_WORD *)(v39 + 12) = 2080;
    v93 = (uint64_t)v36;
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for AVCCaptionsClient);
    v42 = v36;
    v43 = String.init<A>(reflecting:)();
    v93 = OUTLINED_FUNCTION_15_106(v43, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    OUTLINED_FUNCTION_21_0();
    _os_log_impl(&dword_1BD004000, v29, v37, "Captions client created for token %s: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v56 = (uint64_t)v87;
  v57 = v88;
  v58 = v89;
  v59 = v86;
  Locale.init(identifier:)();
  if (v59 == 2)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DBD2F0]), sel_init);
    static Locale.current.getter();
    static Locale.preferredLanguages.getter();
    LanguageManager.init(featureFlags:locale:preferredLanguages:)();
    v95.value._rawValue = 0;
    LanguageManager.mappedLanguageIdentifier(supportedLanguages:)(v95);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v13, v83);
    v60 = v81;
    Locale.init(identifier:)();
    (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v58, v60, v56);
  }
  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CF2260]), sel_init);
  v62 = Locale._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v61, sel_setLocale_, v62);

  objc_msgSend(v61, sel_setUsage_, v59);
  v63 = Logger.logObject.getter();
  v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)OUTLINED_FUNCTION_105();
    v93 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v65 = 136315138;
    v87 = v65 + 4;
    OUTLINED_FUNCTION_2_0();
    v66 = v84;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v84, v89, v56);
    __swift_storeEnumTagSinglePayload(v66, 0, 1, v56);
    specialized >> prefix<A>(_:)(v66);
    v68 = v67;
    v70 = v69;
    outlined destroy of Locale?(v66);
    v91 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v68, v70, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v63, v64, "Captions client configure with locale: %s", v65);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v71 = v85;
  v72 = isa;
  v73 = v76;
  objc_msgSend(v77, sel_configureCaptions_, v61);

  (*((void (**)(uint64_t, NSObject *))v72 + 1))(v80, v71);
  v74 = *(void **)&v73[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient];
  *(_QWORD *)&v73[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient] = v78;

  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  return v79;
}

void CaptionsClientParticipantCaptionsProvider.__deallocating_deinit()
{
  void *v0;
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  objc_super v10;

  v1 = v0;
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v4 = 136315138;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x70))();
    if ((v5 & 1) != 0)
    {
      v8 = 0xE300000000000000;
      v6 = 7104878;
    }
    else
    {
      v6 = String.init<A>(reflecting:)();
      v8 = v7;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v8, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v2, v3, "Releasing CaptionsClientParticipantCaptionsProvider with token %s", v4);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v10.receiver = v1;
  v10.super_class = (Class)ObjC metadata update function for CaptionsClientParticipantCaptionsProvider();
  objc_msgSendSuper2(&v10, sel_dealloc);
  OUTLINED_FUNCTION_5_22();
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient);
  if (result)
    return objc_msgSend(result, sel_captionsEnabled);
  return result;
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.setter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_0_162(sel_enableCaptions_, *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient));
}

id (*CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter() & 1;
  return CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify;
}

id CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify(_QWORD *a1)
{
  return OUTLINED_FUNCTION_0_162(sel_enableCaptions_, *(void **)(*a1+ OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_avcCaptionsClient));
}

id CaptionsClientParticipantCaptionsProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CaptionsClientParticipantCaptionsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t protocol witness for ParticipantCaptionsProvider.token.getter in conformance CaptionsClientParticipantCaptionsProvider()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter in conformance CaptionsClientParticipantCaptionsProvider()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t (*protocol witness for ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify in conformance CaptionsClientParticipantCaptionsProvider(_QWORD *a1))()
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, char a2, uint64_t a3)
{
  OUTLINED_FUNCTION_16_102(a1, a2, a3, "Captions enabled: %{BOOL}d; error: %@");
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v5 + 32) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_35_54();
  v2 = OUTLINED_FUNCTION_5_74(*v1);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_18_98();
    OUTLINED_FUNCTION_23_93((uint64_t)&protocol witness table for CaptionsClientParticipantCaptionsProvider, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 16));
    OUTLINED_FUNCTION_10();
  }
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_10_120(v2 == 0);
  return OUTLINED_FUNCTION_1_8(v4);
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(uint64_t a1, char a2, uint64_t a3)
{
  OUTLINED_FUNCTION_16_102(a1, a2, a3, "Captions disabled: %{BOOL}d; error: %@");
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(uint64_t a1, char a2, uint64_t a3, const char *a4)
{
  char *v4;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;

  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = &v4[OBJC_IVAR____TtC15ConversationKit41CaptionsClientParticipantCaptionsProvider_logger];
  OUTLINED_FUNCTION_33_46();
  OUTLINED_FUNCTION_33_46();
  Logger.logObject.getter();
  v14 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_21_12(v14))
  {
    v25 = a4;
    v15 = OUTLINED_FUNCTION_105();
    v16 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v15 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 8) = 2112;
    if (a3)
    {
      OUTLINED_FUNCTION_33_46();
      v17 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_7_25();
    }
    else
    {
      OUTLINED_FUNCTION_7_25();
      v17 = 0;
    }
    *v16 = v17;
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_11_13();
    _os_log_impl(&dword_1BD004000, v13, v14, v25, (uint8_t *)v15, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_11_13();
  v18 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_147_0(v12, v19, v20, v18);
  v21 = v6;
  v22 = static MainActor.shared.getter();
  v23 = OUTLINED_FUNCTION_15();
  v24 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v24;
  *(_QWORD *)(v23 + 32) = v21;
  *(_BYTE *)(v23 + 40) = a2 & 1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  swift_release();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v5 + 32) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_35_54();
  v3 = OUTLINED_FUNCTION_5_74(*v0);
  if (v3)
  {
    v4 = v2;
    v5 = *(_BYTE *)(v1 + 40);
    v6 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, BOOL, uint64_t, uint64_t))(v4 + 16))(v6, &protocol witness table for CaptionsClientParticipantCaptionsProvider, (v5 & 1) == 0, ObjectType, v4);
    OUTLINED_FUNCTION_10();
  }
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_10_120(v3 == 0);
  return OUTLINED_FUNCTION_1_8(v8);
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(uint64_t a1, uint64_t a2)
{
  CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(a1, a2, "Captions started for reason: %s");
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStopCaptioningWith:)(uint64_t a1, uint64_t a2)
{
  CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(a1, a2, "Captions stopped for reason: %s");
}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didStartCaptioningWith:)(uint64_t a1, uint64_t a2, const char *a3)
{
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  oslog = OUTLINED_FUNCTION_31_10();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    v9 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315138;
    type metadata accessor for AVCCaptionsReason(0);
    v6 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, oslog, v4, a3, v5);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

}

void CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1, void *a2, int a3)
{
  NSObject *v3;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76[2];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v6);
  v66 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for Participant.Caption(0);
  v64 = *((_QWORD *)v8 - 1);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_8_120(v10, v62);
  v11 = type metadata accessor for Date();
  v12 = *(_QWORD *)(v11 - 8);
  v70 = v11;
  v71 = v12;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v13);
  v69 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v62 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v62 - v18;
  v63 = v3;
  v20 = OUTLINED_FUNCTION_31_10();
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v67 = v19;
  if (v22)
  {
    v23 = OUTLINED_FUNCTION_105();
    v62 = (uint64_t)a2;
    v24 = (uint8_t *)v23;
    v76[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v24 = 136315138;
    LODWORD(v74) = a3;
    type metadata accessor for AVCCaptionsSource(0);
    v25 = OUTLINED_FUNCTION_39_73();
    v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, v76);
    OUTLINED_FUNCTION_35_19(v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v20, v21, "Captions updated: source: %s", v24);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  v28 = a2;
  Logger.logObject.getter();
  v29 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_21_12(v29))
  {
    v30 = (uint8_t *)OUTLINED_FUNCTION_105();
    v76[0] = OUTLINED_FUNCTION_105();
    *(_DWORD *)v30 = 136315138;
    if (a2)
    {
      v74 = (uint64_t)v28;
      _sSo8NSObjectCMaTm_0(0, &lazy cache variable for type metadata for AVCCaptionsResult);
      v31 = v28;
      v32 = String.init<A>(reflecting:)();
      v34 = v33;
    }
    else
    {
      v34 = 0xE300000000000000;
      v32 = 7104878;
    }
    v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v34, v76);
    OUTLINED_FUNCTION_35_19(v35);
    OUTLINED_FUNCTION_7_25();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v29, "Captions: %s", v30);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  Date.init()();
  if (!a2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v36 = objc_msgSend(v28, sel_utteranceNumber);
  OUTLINED_FUNCTION_30_80(v68);
  OUTLINED_FUNCTION_30_80(v69);
  v37 = outlined bridged method (pb) of @objc UILabel.text.getter(v28);
  if (!v38)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v76[0] = v37;
  v76[1] = v38;
  v74 = 39;
  v75 = 0xE100000000000000;
  v72 = 10060002;
  v73 = 0xA300000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  v39 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = objc_msgSend(v28, sel_utteranceComplete);
  v43 = outlined bridged method (pb) of @objc AVCCaptionsResult.tokens.getter(v28);
  if (v43)
  {
    v44 = v43;
    v45 = v63;
    v46 = specialized _ArrayProtocol.filter(_:)(v44, v45);
    _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo16AVCCaptionsTokenCG_So8_NSRangeVs5NeverOTg5097_s15ConversationKit025CaptionsClientParticipantC8ProviderC08captionsD0_09didUpdateC06sourceySo011dq15CSg_So0K6Resultvwx13SourceVtFSo8_f6VSo0K5E54Ccfu2_33_4c94f2a9ae96d10c2646dde87984b78dArPTf3nnnpk_nTf1cn_n(v46);
    v48 = v47;
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v65;
    *v65 = v36;
    v50 = v70;
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
    v51(v49 + v8[5], v68, v70);
    v51(v49 + v8[6], v69, v50);
    v52 = (uint64_t *)(v49 + v8[7]);
    *v52 = v39;
    v52[1] = v41;
    *(_BYTE *)(v49 + v8[8]) = v42;
    *(_QWORD *)(v49 + v8[9]) = v48;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant.Caption>);
    v53 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1BD6441D0;
    outlined init with copy of Participant.Caption(v49, v54 + v53);
    v55 = OUTLINED_FUNCTION_415();
    OUTLINED_FUNCTION_147_0(v66, v56, v57, v55);
    v58 = v45;
    swift_bridgeObjectRetain();
    v59 = static MainActor.shared.getter();
    v60 = (_QWORD *)OUTLINED_FUNCTION_15();
    v61 = MEMORY[0x1E0DF06E8];
    v60[2] = v59;
    v60[3] = v61;
    v60[4] = v58;
    v60[5] = v58;
    v60[6] = &protocol witness table for CaptionsClientParticipantCaptionsProvider;
    v60[7] = v54;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
    swift_bridgeObjectRelease();

    swift_release();
    outlined destroy of Participant.Caption(v49);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v50);
    OUTLINED_FUNCTION_52_1();
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  type metadata accessor for MainActor();
  v7[7] = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(void);

  v1 = (uint64_t *)v0[3];
  swift_release();
  v3 = OUTLINED_FUNCTION_5_74(*v1);
  if (v3)
  {
    v4 = v2;
    v6 = v0[5];
    v5 = v0[6];
    v8 = v0[3];
    v7 = v0[4];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v8, &protocol witness table for CaptionsClientParticipantCaptionsProvider, v7, v6, v5, ObjectType, v4);
    OUTLINED_FUNCTION_10();
  }
  v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_10_120(v3 == 0);
  return OUTLINED_FUNCTION_1_8(v10);
}

void CaptionsClientParticipantCaptionsProvider.captionsServerDidDie(_:)()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *oslog;

  oslog = OUTLINED_FUNCTION_31_10();
  v0 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_1BD004000, oslog, v0, "Captions server did die", v1, 2u);
    OUTLINED_FUNCTION_60();
  }

}

uint64_t CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(uint64_t a1, char a2)
{
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_31_10();
  v9 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_4_14(v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v2, v3, "Captions updated isGibberish: %{BOOL}d", v10, 8u);
    OUTLINED_FUNCTION_60();
  }

  v11 = OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_147_0(v8, v12, v13, v11);
  v14 = v2;
  v15 = static MainActor.shared.getter();
  v16 = OUTLINED_FUNCTION_15();
  v17 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v17;
  *(_QWORD *)(v16 + 32) = v14;
  *(_BYTE *)(v16 + 40) = a2 & 1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5();
  return swift_release();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v5 + 32) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_35_54();
  v2 = OUTLINED_FUNCTION_5_74(*v1);
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_18_98();
    OUTLINED_FUNCTION_23_93((uint64_t)&protocol witness table for CaptionsClientParticipantCaptionsProvider, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 24));
    OUTLINED_FUNCTION_10();
  }
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_10_120(v2 == 0);
  return OUTLINED_FUNCTION_1_8(v4);
}

uint64_t type metadata accessor for CaptionsClientParticipantCaptionsProvider()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CaptionsClientParticipantCaptionsProvider;
  if (!type metadata singleton initialization cache for CaptionsClientParticipantCaptionsProvider)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_12_118();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didEnableCaptions:error:)(v2, v3, v4, v5, v6);
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_12_118();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDisableCaptions:error:)(v2, v3, v4, v5, v6);
}

uint64_t outlined bridged method (pb) of @objc AVCCaptionsResult.tokens.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_tokens);
  if (!v1)
    return 0;
  v2 = v1;
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for AVCCaptionsToken);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1BD629358()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_61_5(v10);
  *v11 = v2;
  v11[1] = partial apply for closure #1 in closure #1 in CallScreening.CallStateObserver.start(onCallStatusUpdate:);
  return closure #2 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didUpdateCaptions:source:)(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t objectdestroyTm_23()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_12_118();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_61_5(v0);
  v2 = OUTLINED_FUNCTION_37_1(v1);
  return closure #1 in CaptionsClientParticipantCaptionsProvider.captionsClient(_:didDetectGibberish:)(v2, v3, v4, v5, v6);
}

void sub_1BD6294A0(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  *a2 = OUTLINED_FUNCTION_5_74(**a1);
  a2[1] = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD6294D8(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xB0))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD629518(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ParticipantCaptionsProvider.captionsEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didUpdateCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didEnableCaptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ParticipantCaptionsProviderDelegate.participantCaptionsProvider(_:didDetectGibberish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t type metadata completion function for CaptionsClientParticipantCaptionsProvider()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CaptionsClientParticipantCaptionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.token.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.participantCaptionsProviderDelegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.__allocating_init(logger:token:usage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CaptionsClientParticipantCaptionsProvider.captionsEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t OUTLINED_FUNCTION_39_73()
{
  return String.init<A>(reflecting:)();
}

void one-time initialization function for startCallRecordingCountdownNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD629764(uint64_t result)
{
  static NSNotificationName.startCallRecordingCountdownNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingCountdownNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingCountdownNotification, (id *)&static NSNotificationName.startCallRecordingCountdownNotification);
}

void one-time initialization function for startCallRecordingStateFailedNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD6297B0(uint64_t result)
{
  static NSNotificationName.startCallRecordingStateFailedNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingStateFailedNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingStateFailedNotification, (id *)&static NSNotificationName.startCallRecordingStateFailedNotification);
}

void one-time initialization function for startCallRecordingStateCancelledNotification()
{
  OUTLINED_FUNCTION_2_16();
}

uint64_t sub_1BD6297FC(uint64_t result)
{
  static NSNotificationName.startCallRecordingStateCancelledNotification = result;
  return result;
}

id static NSNotificationName.startCallRecordingStateCancelledNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for startCallRecordingStateCancelledNotification, (id *)&static NSNotificationName.startCallRecordingStateCancelledNotification);
}

BOOL static AppUtilities.isRTL.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = objc_msgSend(v0, sel_userInterfaceLayoutDirection);

  return v1 == (id)1;
}

uint64_t AppUtilities.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AppUtilities.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AppUtilities.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t AppUtilities.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for AppUtilities()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppUtilities()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppUtilities.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static InCallBannerState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 == *a1;
}

BOOL MultiwayViewConstraintsController.OverallLayoutState.isOneToOneModeEnabled.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_201(*(_BYTE *)(v0 + 18));
}

BOOL static CaptionsLayoutState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isInfo.getter()
{
  return OUTLINED_FUNCTION_652();
}

Swift::Bool __swiftcall MultiwayViewConstraintsController.OverallLayoutState.isPreviewingReaction()()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 20) | *(_BYTE *)(v0 + 22)) & 1;
}

uint64_t InCallControlsState.isShowingDock.getter(unint64_t a1)
{
  return (a1 < 7) & (0x6Cu >> a1);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.init(listState:controlsState:conversationBannerState:localState:gridState:captionsState:reactionsState:reactionPickerTipState:isLocalReactionActive:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, char a5@<W4>, char *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v10;
  char v11;
  char v12;
  char v13;

  v10 = *a3;
  v11 = *a6;
  v12 = *a7;
  v13 = *a8;
  *(_BYTE *)a9 = result & 1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v10;
  *(_BYTE *)(a9 + 17) = a4;
  *(_BYTE *)(a9 + 18) = a5 & 1;
  *(_BYTE *)(a9 + 19) = v11;
  *(_BYTE *)(a9 + 20) = v12;
  *(_BYTE *)(a9 + 21) = v13;
  *(_BYTE *)(a9 + 22) = a10;
  return result;
}

BOOL MultiwayViewConstraintsController.MultiwayCorner.isBottomSide.getter()
{
  return OUTLINED_FUNCTION_652();
}

BOOL MultiwayViewConstraintsController.MultiwayCorner.isLeftSide.getter()
{
  return OUTLINED_FUNCTION_652();
}

uint64_t static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 != 1)
    {
      if (a1 == 128)
      {
        if (a2 != 128)
          return 0;
      }
      else if (a2 != 129)
      {
        return 0;
      }
      return 1;
    }
    if ((a2 & 0xC0) == 0x40)
      return ((a2 ^ a1) & 0x3F) == 0;
    return 0;
  }
  if (a2 > 0x3Fu)
    return 0;
  return a1 == a2;
}

BOOL CaptionsLayoutState.isVisible.getter()
{
  _BYTE *v0;

  return *v0 != 0;
}

BOOL InCallBannerState.isVisible.getter()
{
  _BYTE *v0;

  return *v0 != 0;
}

uint64_t ReactionsState.isVisible.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isRegular.getter(unsigned __int8 a1)
{
  return a1 < 0x40u;
}

void static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(uint64_t a1, char a2, double a3, double a4)
{
  double v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ParticipantListLayout();
  v8 = static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = a2 & 1;
  v10 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  v11 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v10 + 488))(v11);
  static Platform.current.getter();
  static ParticipantListLayout.itemWidth(for:remoteCellCount:displayScale:includeLocalParticipant:configurableRosterCellWidth:)(1, a1, v9, a3 - (v8 + v8), 3.5, a4);
}

uint64_t InCallControlsState.stateWithoutDock.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 4;
  if ((unint64_t)(a1 - 4) >= 3)
    v1 = a1;
  if ((unint64_t)(a1 - 1) >= 3)
    return v1;
  else
    return 1;
}

void MultiwayViewConstraintsController.updateConstraints(with:controlsViewController:localParticipantView:effectsView:effectsBrowserViewController:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  _QWORD *v16;
  id v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  if (a4 && a5)
  {
    v6 = v5;
    v17 = a4;
    v9 = OUTLINED_FUNCTION_9((uint64_t)v17, sel_view);
    if (v9)
    {
      v10 = v9;
      outlined init with copy of IDSLookupManager(v6 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout, (uint64_t)v18);
      v11 = v19;
      v12 = v20;
      v16 = __swift_project_boxed_opaque_existential_1(v18, v19);
      v13 = OUTLINED_FUNCTION_2_11((uint64_t)v16, sel_view);
      if (v13)
      {
        v14 = v13;
        (*(void (**)(uint64_t, id, uint64_t, id, void *, uint64_t, uint64_t))(v12 + 48))(a1, v13, a3, v17, v10, v11, v12);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
        v15 = v17;
        MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)();

        MultiwayViewConstraintsController.didAddEffectsBrowser()();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

BOOL MultiwayViewConstraintsController.LocalParticipantState.isExpanded.getter()
{
  return OUTLINED_FUNCTION_652();
}

BOOL InCallControlsState.isShowingExpandedDock.getter(uint64_t a1)
{
  return a1 == 3 || a1 == 6;
}

BOOL InCallControlsState.isExpanded.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_52_48(a1 - 4);
}

uint64_t static MultiwayViewConstraintsController.MultiwayCorner.defaultCorner.getter()
{
  type metadata accessor for AppUtilities();
  if (static AppUtilities.isRTL.getter())
    return 2;
  else
    return 3;
}

uint64_t MultiwayViewConstraintsController.MultiwayCorner.rawValue.getter(uint64_t result)
{
  return result;
}

ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional __swiftcall MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4)
    LOBYTE(rawValue) = 4;
  return (ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional)rawValue;
}

void MultiwayViewConstraintsController.reactionsState.setter(char *a1)
{
  MultiwayViewConstraintsController.reactionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
}

void MultiwayViewConstraintsController.isLocalReactionActive.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  MultiwayViewConstraintsController.isLocalReactionActive.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewConstraintsController.reactionPickerTipState.setter(char *a1)
{
  MultiwayViewConstraintsController.reactionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
}

void MultiwayViewConstraintsController.reactionsState.setter(char *a1, _QWORD *a2)
{
  uint64_t v2;
  char v4;
  char *v5;
  char v6;
  char v7;

  v4 = *a1;
  v5 = (char *)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = v4;
  v7 = v6;
  MultiwayViewConstraintsController.reactionsState.didset((uint64_t)&v7, a2);
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall MultiwayViewConstraintsController.updateLocalPreviewConstraintWhenExpanded()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  char *v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  _BYTE *v14;
  char *v15;
  char v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4);
  v5 = (char *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  OUTLINED_FUNCTION_1();
  v23 = *v5;
  v6 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_1();
  v22 = *v6;
  v7 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_1();
  v21 = *v7;
  v8 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_1();
  v9 = *v8;
  v10 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  OUTLINED_FUNCTION_1();
  v11 = *v10;
  v12 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_1();
  v13 = *v12;
  v14 = (_BYTE *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  OUTLINED_FUNCTION_1();
  LOBYTE(v4) = *v14;
  v15 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  OUTLINED_FUNCTION_1();
  v16 = *v15;
  v17 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_1();
  v18 = *v17;
  v19 = v2[3];
  v20 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v19);
  v24[0] = v23;
  v25 = v22;
  v26 = v21;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v4;
  v31 = v16;
  v32 = v18;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 56))(v24, v19, v20);
}

char *MultiwayViewConstraintsController.__allocating_init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(char *a1, void *a2, void *a3, char a4, void *a5, char a6, void *a7, void *a8, __int128 a9, __int128 a10, void *a11, char a12, __int128 a13, __int128 a14, void *a15, char a16, __int128 a17, __int128 a18, __int128 a19, __int128 a20,__int128 a21,__int128 a22,__int128 a23,unsigned __int8 *a24,char a25)
{
  objc_class *v25;
  char v27;
  char v28;
  id v29;

  v27 = a4 & 1;
  v28 = a6 & 1;
  v29 = objc_allocWithZone(v25);
  return MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(a1, a2, a3, v27, a5, v28, a7, a8, a9, *((uint64_t *)&a9 + 1), (void *)a10, *((unsigned __int8 **)&a10 + 1), a11, a12, a13, *((void **)&a13 + 1), (void *)a14, *((void **)&a14 + 1), a15,
           a16 & 1,
           (void *)a17,
           *((void **)&a17 + 1),
           (void *)a18,
           *((uint64_t *)&a18 + 1),
           a19,
           *((uint64_t *)&a19 + 1),
           (void *)a20,
           *((void **)&a20 + 1),
           (void *)a21,
           *((void **)&a21 + 1),
           (unsigned __int8 *)a22,
           *((void **)&a22 + 1),
           (unsigned __int8 *)a23,
           *((void **)&a23 + 1),
           a24,
           a25);
}

void *MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier.unsafeMutableAddressor()
{
  return &static MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier;
}

void MultiwayViewConstraintsController.configure(rosterCellWidth:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_layoutIdiom) & 1) == 0)
  {
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_38_68();
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t MultiwayViewConstraintsController.update(for:deviceOrientation:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  char *v10;
  uint64_t *v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  char v21;
  char *v22;
  char v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  _BYTE v32[8];
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v10 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  OUTLINED_FUNCTION_1();
  v30 = *v10;
  v11 = (uint64_t *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_1();
  v29 = *v11;
  v12 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  OUTLINED_FUNCTION_1();
  v13 = *v12;
  v14 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  OUTLINED_FUNCTION_1();
  v15 = *v14;
  v16 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  OUTLINED_FUNCTION_1();
  v17 = *v16;
  v18 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_1();
  v19 = *v18;
  v20 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  OUTLINED_FUNCTION_1();
  v21 = *v20;
  v22 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  OUTLINED_FUNCTION_1();
  v23 = *v22;
  v24 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  OUTLINED_FUNCTION_1();
  v25 = *v24;
  v26 = *(_QWORD *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v27 = *(_QWORD *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v26);
  v32[0] = v30;
  v33 = v29;
  v34 = v13;
  v35 = v15;
  v36 = v17;
  v37 = v19;
  v38 = v21;
  v39 = v23;
  v40 = v25;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v27 + 8))(v32, a1, v26, v27, a2, a3, a4, a5);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.update(isDisplayedInBanner:containingView:)(Swift::Bool isDisplayedInBanner, UIView *containingView)
{
  uint64_t v2;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = isDisplayedInBanner;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v5);
  (*(void (**)(_BOOL8, UIView *, uint64_t, uint64_t))(v6 + 32))(v4, containingView, v5, v6);
}

void MultiwayViewConstraintsController.localParticipantAspectRatio.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[40];

  v3 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_2_0();
  outlined init with take of AspectRatio(v3, (uint64_t)v4);
  outlined init with take of AspectRatio(a1, v3);
  MultiwayViewConstraintsController.localParticipantAspectRatio.didset((uint64_t)v4);
  OUTLINED_FUNCTION_26_11();
}

void MultiwayViewConstraintsController.participantGridState.setter(char a1)
{
  MultiwayViewConstraintsController.participantGridState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.removeEffectsConstraints()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 112));
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.captionsState.setter(uint64_t a1)
{
  MultiwayViewConstraintsController.captionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
}

uint64_t MultiwayViewConstraintsController.localParticipantViewRegularWidth.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v0 = OUTLINED_FUNCTION_24_75();
  return v1(v0);
}

Swift::Bool __swiftcall MultiwayViewConstraintsController.LocalParticipantState.collides(with:)(ConversationKit::MultiwayViewConstraintsController::ShutterButtonState with)
{
  unsigned __int8 v1;
  unsigned __int8 v2;
  char v4;
  char v5;

  v2 = v1;
  type metadata accessor for AppUtilities();
  if (static AppUtilities.isRTL.getter())
    v4 = 3;
  else
    v4 = 2;
  if (static AppUtilities.isRTL.getter())
    v5 = 2;
  else
    v5 = 3;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v2 & 0x3F) != v4)
      {
        if ((v2 & 0x3F) == v5)
          return with & 1;
        return 0;
      }
      return (with & 1) == 0;
    }
  }
  else
  {
    if (v4 == v2)
      return (with & 1) == 0;
    if (v5 == v2)
      return with & 1;
  }
  return 0;
}

BOOL MultiwayViewConstraintsController.ShutterButtonState.nextState.getter(char a1)
{
  return (a1 & 1) == 0;
}

void MultiwayViewConstraintsController.shutterButtonState.setter(char a1)
{
  MultiwayViewConstraintsController.floatingControlsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState, (void (*)(uint64_t))MultiwayViewConstraintsController.shutterButtonState.didset);
}

void MultiwayViewConstraintsController.floatingControlsState.setter(char a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  char v5;
  _BYTE *v6;
  uint64_t v7;

  v5 = a1 & 1;
  v6 = (_BYTE *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = v5;
  a3(v7);
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewConstraintsController.localParticipantState.setter(uint64_t a1)
{
  MultiwayViewConstraintsController.localParticipantState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
}

void MultiwayViewConstraintsController.bannerControlsSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3 & 1;
  MultiwayViewConstraintsController.bannerControlsSize.didset();
  OUTLINED_FUNCTION_2_3();
}

BOOL InCallControlsState.isVisible.getter(uint64_t a1)
{
  return OUTLINED_FUNCTION_52_48(a1 - 1);
}

void MultiwayViewConstraintsController.inCallControlsState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  MultiwayViewConstraintsController.inCallControlsState.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewConstraintsController.inCallConversationBannerState.setter(uint64_t a1)
{
  MultiwayViewConstraintsController.captionsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
}

void MultiwayViewConstraintsController.captionsState.setter(uint64_t a1, _QWORD *a2)
{
  void (*v2)(_BYTE *);
  char *v3;
  char v4;
  char v5;
  _BYTE v6[25];

  OUTLINED_FUNCTION_26_72(a1, a2);
  OUTLINED_FUNCTION_2_0();
  v5 = *v3;
  *v3 = v4;
  v6[0] = v5;
  v2(v6);
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewConstraintsController.participantListState.setter(char a1)
{
  MultiwayViewConstraintsController.participantGridState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
}

void MultiwayViewConstraintsController.participantGridState.setter(char a1, _QWORD *a2)
{
  uint64_t v2;
  char v4;
  _BYTE *v5;
  uint64_t v6;

  v4 = a1 & 1;
  v5 = (_BYTE *)(v2 + *a2);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  *v5 = v4;
  MultiwayViewConstraintsController.participantListState.didset(v6, a2);
  OUTLINED_FUNCTION_2_3();
}

Swift::Void __swiftcall MultiwayViewConstraintsController.updateCaptionsBubbleViewConstraints(forPosition:withSnapping:)(CGPoint forPosition, Swift::Bool withSnapping)
{
  uint64_t v2;
  double y;
  double x;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  y = forPosition.y;
  x = forPosition.x;
  v6 = (_BYTE *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_1();
  if (*v6 == 1)
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    v8 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v7);
    (*(void (**)(Swift::Bool, uint64_t, uint64_t, double, double))(v8 + 96))(withSnapping, v7, v8, x, y);
  }
}

Swift::Void __swiftcall MultiwayViewConstraintsController.resetCaptionsBubbleViewConstraints()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  OUTLINED_FUNCTION_36_4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 104));
  OUTLINED_FUNCTION_18();
}

uint64_t InCallControlsState.debugDescription.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6E65646469682ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x656C62697369762ELL;
      break;
    case 2:
      result = 0xD000000000000017;
      break;
    case 3:
      result = 0xD000000000000014;
      break;
    case 4:
      result = 0x65646E617078652ELL;
      break;
    case 5:
      result = 0xD000000000000018;
      break;
    case 6:
      result = 0xD000000000000019;
      break;
    default:
      result = OUTLINED_FUNCTION_49_55();
      __break(1u);
      break;
  }
  return result;
}

unint64_t InCallControlsState.init(rawValue:)(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance InCallControlsState@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = InCallControlsState.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance InCallControlsState()
{
  uint64_t *v0;

  return InCallControlsState.debugDescription.getter(*v0);
}

uint64_t InCallBannerState.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6269736976;
  if (*v0 != 1)
    v1 = 0x69746E6573657270;
  if (*v0)
    return v1;
  else
    return 0x6E6564646968;
}

uint64_t InCallBannerState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6269736976;
  if (*v0 != 1)
    v1 = 0x69746E6573657270;
  if (*v0)
    return v1;
  else
    return 0x6E6564646968;
}

ConversationKit::InCallBannerState_optional __swiftcall InCallBannerState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  char v6;
  ConversationKit::InCallBannerState_optional result;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of InCallBannerState.init(rawValue:), v3);
  OUTLINED_FUNCTION_13_3();
  v6 = 3;
  if (v5 < 3)
    v6 = v5;
  *v4 = v6;
  OUTLINED_FUNCTION_18();
  return result;
}

void *static InCallBannerState.allCases.getter()
{
  return &outlined read-only object #0 of static InCallBannerState.allCases.getter;
}

ConversationKit::InCallBannerState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance InCallBannerState(Swift::String *a1)
{
  return InCallBannerState.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance InCallBannerState@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = InCallBannerState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance InCallBannerState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static InCallBannerState.allCases.getter;
}

uint64_t ReactionsState.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C6269736976;
  else
    return 0x6E6564646968;
}

uint64_t ReactionsState.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C6269736976;
  else
    return 0x6E6564646968;
}

uint64_t ReactionsState.debugDescription.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C62697369762ELL;
  else
    return 0x6E65646469682ELL;
}

ConversationKit::ReactionsState_optional __swiftcall ReactionsState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;
  ConversationKit::ReactionsState_optional result;

  v2._rawValue = &outlined read-only object #0 of ReactionsState.init(rawValue:);
  ReactionsState.init(rawValue:)(rawValue, v2, v1);
  return result;
}

void *static ReactionsState.allCases.getter()
{
  return &outlined read-only object #0 of static ReactionsState.allCases.getter;
}

BOOL static ReactionsState.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  return OUTLINED_FUNCTION_201(*a1 ^ *a2);
}

ConversationKit::ReactionsState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReactionsState(Swift::String *a1)
{
  return ReactionsState.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ReactionsState@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ReactionsState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReactionsState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReactionsState.allCases.getter;
}

ConversationKit::ReactionPickerTipState_optional __swiftcall ReactionPickerTipState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Swift::OpaquePointer v2;
  ConversationKit::ReactionPickerTipState_optional result;

  v2._rawValue = &outlined read-only object #0 of ReactionPickerTipState.init(rawValue:);
  ReactionsState.init(rawValue:)(rawValue, v2, v1);
  return result;
}

void ReactionsState.init(rawValue:)(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X2>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v7;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v7 = _findStringSwitchCase(cases:string:)(cases, v4);
  OUTLINED_FUNCTION_13_3();
  if (v7 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v7)
    v8 = 0;
  *a3 = v8;
  OUTLINED_FUNCTION_18();
}

void *static ReactionPickerTipState.allCases.getter()
{
  return &outlined read-only object #0 of static ReactionPickerTipState.allCases.getter;
}

ConversationKit::ReactionPickerTipState_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ReactionPickerTipState(Swift::String *a1)
{
  return ReactionPickerTipState.init(rawValue:)(*a1);
}

void protocol witness for static CaseIterable.allCases.getter in conformance ReactionPickerTipState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ReactionPickerTipState.allCases.getter;
}

uint64_t CaptionsLayoutState.debugDescription.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C626275622ELL;
  if (*v0 != 1)
    v1 = 0x7263736E6172742ELL;
  if (*v0)
    return v1;
  else
    return 0x6E65646469682ELL;
}

void *static CaptionsLayoutState.allCases.getter()
{
  return &outlined read-only object #0 of static CaptionsLayoutState.allCases.getter;
}

void CaptionsLayoutState.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void protocol witness for static CaseIterable.allCases.getter in conformance CaptionsLayoutState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static CaptionsLayoutState.allCases.getter;
}

void MultiwayViewConstraintsController.layoutIdiom.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

void one-time initialization function for allParticipantListStates()
{
  static MultiwayViewConstraintsController.allParticipantListStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allParticipantListStates;
}

uint64_t *MultiwayViewConstraintsController.allParticipantListStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allParticipantListStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allParticipantListStates;
}

uint64_t static MultiwayViewConstraintsController.allParticipantListStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allParticipantListStates);
}

uint64_t MultiwayViewConstraintsController.ParticipantListState.debugDescription.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C62697369762ELL;
  else
    return 0x6E65646469682ELL;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.ParticipantListState()
{
  char *v0;

  return MultiwayViewConstraintsController.ParticipantListState.debugDescription.getter(*v0);
}

uint64_t MultiwayViewConstraintsController.MultiwayCorner.debugDescription.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BD62AE64 + 4 * byte_1BD66B217[a1]))(0x7466654C706F742ELL, 0xE800000000000000);
}

uint64_t sub_1BD62AE64()
{
  return 0x68676952706F742ELL;
}

uint64_t sub_1BD62AE80()
{
  return 0x4C6D6F74746F622ELL;
}

uint64_t sub_1BD62AEA0()
{
  return 0x526D6F74746F622ELL;
}

void *static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter()
{
  return &outlined read-only object #0 of static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter;
}

ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional protocol witness for RawRepresentable.init(rawValue:) in conformance MultiwayViewConstraintsController.MultiwayCorner@<W0>(Swift::Int *a1@<X0>, ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional *a2@<X8>)
{
  ConversationKit::MultiwayViewConstraintsController::MultiwayCorner_optional result;

  result.value = MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MultiwayViewConstraintsController.MultiwayCorner(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = MultiwayViewConstraintsController.MultiwayCorner.rawValue.getter(*v1);
  OUTLINED_FUNCTION_0();
}

void protocol witness for static CaseIterable.allCases.getter in conformance MultiwayViewConstraintsController.MultiwayCorner(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static MultiwayViewConstraintsController.MultiwayCorner.allCases.getter;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.MultiwayCorner()
{
  unsigned __int8 *v0;

  return MultiwayViewConstraintsController.MultiwayCorner.debugDescription.getter(*v0);
}

unint64_t MultiwayViewConstraintsController.AccessibilityLocalParticipantState.init(rawValue:)(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = MultiwayViewConstraintsController.AccessibilityLocalParticipantState.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static MultiwayViewConstraintsController.localParticipantViewCustomConstraintIdentifier.getter()
{
  return 0xD00000000000002ELL;
}

void one-time initialization function for allLocalParticipantStates()
{
  static MultiwayViewConstraintsController.allLocalParticipantStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allLocalParticipantStates;
}

uint64_t *MultiwayViewConstraintsController.allLocalParticipantStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allLocalParticipantStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allLocalParticipantStates;
}

uint64_t static MultiwayViewConstraintsController.allLocalParticipantStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allLocalParticipantStates);
}

BOOL static MultiwayViewConstraintsController.ShutterButtonState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t MultiwayViewConstraintsController.LocalParticipantState.debugDescription.getter(unsigned __int8 a1)
{
  uint64_t v1;
  unint64_t v2;
  Swift::String v3;

  if (!(a1 >> 6))
  {
    v1 = 0x72616C756765722ELL;
    v2 = 0xE900000000000028;
    goto LABEL_5;
  }
  if (a1 >> 6 == 1)
  {
    v1 = 0x286F666E692ELL;
    v2 = 0xE600000000000000;
LABEL_5:
    String.append(_:)(*(Swift::String *)&v1);
    _print_unlocked<A, B>(_:_:)();
    v3._countAndFlagsBits = 41;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    return 0;
  }
  if (a1 == 128)
    return 0x65646E617078652ELL;
  else
    return 0x7263536C6C75662ELL;
}

void MultiwayViewConstraintsController.LocalParticipantState.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Swift::UInt v3;

  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      Hasher._combine(_:)(1uLL);
      v3 = a2 & 0x3F;
    }
    else if (a2 == 128)
    {
      v3 = 2;
    }
    else
    {
      v3 = 3;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    v3 = a2;
  }
  Hasher._combine(_:)(v3);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewConstraintsController.LocalParticipantState.hashValue.getter(unsigned __int8 a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_5_1();
  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)((uint64_t)v2, a1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MultiwayViewConstraintsController.LocalParticipantState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unsigned __int8 *v0;

  MultiwayViewConstraintsController.LocalParticipantState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MultiwayViewConstraintsController.LocalParticipantState(uint64_t a1)
{
  unsigned __int8 *v1;

  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  _BYTE v3[72];

  v1 = *v0;
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.LocalParticipantState.hash(into:)((uint64_t)v3, v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unsigned __int8 *v0;

  return MultiwayViewConstraintsController.LocalParticipantState.debugDescription.getter(*v0);
}

void MultiwayViewConstraintsController.ShutterButtonState.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
  OUTLINED_FUNCTION_0();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MultiwayViewConstraintsController.ShutterButtonState(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MultiwayViewConstraintsController.ShutterButtonState.== infix(_:_:)(*a1, *a2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance MultiwayViewConstraintsController.ShutterButtonState()
{
  unsigned __int8 *v0;

  return MultiwayViewConstraintsController.ShutterButtonState.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance MultiwayViewConstraintsController.ShutterButtonState(uint64_t a1)
{
  char *v1;

  MultiwayViewConstraintsController.ShutterButtonState.hash(into:)(a1, *v1);
}

void MultiwayViewConstraintsController.shutterButtonState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.shutterButtonState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.shutterButtonState.didset(char a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
  result = swift_beginAccess();
  v5 = *v3;
  if (((((a1 & 1) == 0) ^ v5) & 1) == 0)
  {
    v6 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v6);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 64))(v5, v6, v7);
  }
  return result;
}

void MultiwayViewConstraintsController.shutterButtonState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.shutterButtonState.modify(uint64_t a1)
{
  MultiwayViewConstraintsController.shutterButtonState.modify(a1);
}

{
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_33_74(a1);
  v3(v2);
  OUTLINED_FUNCTION_11(v1);
}

void one-time initialization function for allParticipantGridStates()
{
  static MultiwayViewConstraintsController.allParticipantGridStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allParticipantGridStates;
}

uint64_t *MultiwayViewConstraintsController.allParticipantGridStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allParticipantGridStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allParticipantGridStates;
}

uint64_t static MultiwayViewConstraintsController.allParticipantGridStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allParticipantGridStates);
}

uint64_t MultiwayViewConstraintsController.ParticipantGridState.debugDescription.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x63696E6167726F2ELL;
  else
    return 0x7263536C6C75662ELL;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance MultiwayViewConstraintsController.ParticipantGridState()
{
  char *v0;

  return MultiwayViewConstraintsController.ParticipantGridState.debugDescription.getter(*v0);
}

void one-time initialization function for allCaptionsStates()
{
  static MultiwayViewConstraintsController.allCaptionsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allCaptionsStates;
}

uint64_t *MultiwayViewConstraintsController.allCaptionsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allCaptionsStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allCaptionsStates;
}

uint64_t static MultiwayViewConstraintsController.allCaptionsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allCaptionsStates);
}

void MultiwayViewConstraintsController.captionsState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_51();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.captionsState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for MultiwayViewConstraintsController.captionsState : MultiwayViewConstraintsController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewConstraintsController.captionsState.setter((uint64_t)&v1);
}

uint64_t MultiwayViewConstraintsController.captionsState.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  char *v3;
  uint64_t result;
  char v5;
  char v6;

  v2 = *a1;
  v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  result = swift_beginAccess();
  if (v2 != *v3)
  {
    v5 = *v3;
    return MultiwayViewConstraintsController.captionsStateDidChange(from:to:)((uint64_t)&v6, &v5);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.captionsStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v2;
  v23 = *a2;
  v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v22 = *v18;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  v25 = v7;
  v26 = v9;
  v27 = v11;
  v28 = v13;
  v29 = v23;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  (*(void (**)(_BYTE *, uint64_t))(v20 + 56))(v24, v21);
  v24[0] = v5;
  v25 = v7;
  v26 = v9;
  v27 = v11;
  v28 = v13;
  v29 = v23;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void MultiwayViewConstraintsController.captionsState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.captionsState.modify(uint64_t a1, char a2)
{
  MultiwayViewConstraintsController.captionsState.modify(a1, a2, (void (*)(char *))MultiwayViewConstraintsController.captionsState.setter);
}

void one-time initialization function for allReactionsStates()
{
  static MultiwayViewConstraintsController.allReactionsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allReactionsStates;
}

uint64_t *MultiwayViewConstraintsController.allReactionsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allReactionsStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allReactionsStates;
}

uint64_t static MultiwayViewConstraintsController.allReactionsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allReactionsStates);
}

void MultiwayViewConstraintsController.reactionsState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_51();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.reactionsState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for MultiwayViewConstraintsController.reactionsState : MultiwayViewConstraintsController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewConstraintsController.reactionsState.setter(&v1);
}

uint64_t MultiwayViewConstraintsController.reactionsStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = v2;
  v24 = *a2;
  v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v15 = *v14;
  v23 = *v14;
  v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v22 = *v18;
  v19 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v25[0] = v5;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v15;
  v31 = v24;
  v32 = v17;
  v33 = v22;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 56))(v25, v21, v19);
  v25[0] = v5;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v23;
  v31 = v24;
  v32 = v17;
  v33 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v25);
}

void MultiwayViewConstraintsController.reactionsState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.reactionsState.modify(uint64_t a1, char a2)
{
  MultiwayViewConstraintsController.reactionsState.modify(a1, a2, MultiwayViewConstraintsController.reactionsState.setter);
}

void one-time initialization function for allIsLocalReactionActiveStates()
{
  static MultiwayViewConstraintsController.allIsLocalReactionActiveStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allIsLocalReactionActiveStates;
}

uint64_t *MultiwayViewConstraintsController.allIsLocalReactionActiveStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allIsLocalReactionActiveStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
}

uint64_t static MultiwayViewConstraintsController.allIsLocalReactionActiveStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allIsLocalReactionActiveStates);
}

void MultiwayViewConstraintsController.isLocalReactionActive.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.isLocalReactionActive : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActive.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  result = swift_beginAccess();
  v5 = *v3;
  if ((_DWORD)v5 != (_DWORD)v2)
    return MultiwayViewConstraintsController.isLocalReactionActiveDidChange(from:to:)(v2, v5);
  return result;
}

uint64_t MultiwayViewConstraintsController.isLocalReactionActiveDidChange(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  char v13;
  char *v14;
  uint64_t v15;
  char v16;
  _BYTE *v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char v25;
  char v26;
  char v27;
  _BYTE v28[8];
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v3 = a2;
  v27 = a2;
  v4 = (_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v5 = v2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 88))(v3, v6, v7);
  v8 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v26 = *v8;
  v9 = (uint64_t *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v10 = *v9;
  v11 = (_BYTE *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  LOBYTE(v3) = *v11;
  v12 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  v15 = v5;
  swift_beginAccess();
  v16 = *v14;
  v17 = (_BYTE *)(v5 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  LOBYTE(v5) = *v17;
  v18 = (char *)(v15 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v19 = *v18;
  v24 = *v18;
  v20 = (char *)(v15 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v25 = *v20;
  v21 = v4[3];
  v22 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v21);
  v28[0] = v26;
  v29 = v10;
  v30 = v3;
  v31 = v13;
  v32 = v16;
  v33 = v5;
  v34 = v19;
  v35 = v25;
  v36 = v27;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 56))(v28, v21, v22);
  v28[0] = v26;
  v29 = v10;
  v30 = v3;
  v31 = v13;
  v32 = v16;
  v33 = v5;
  v34 = v24;
  v35 = v25;
  v36 = v27;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v28);
}

void MultiwayViewConstraintsController.isLocalReactionActive.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.isLocalReactionActive.modify(uint64_t a1)
{
  void *v1;
  char v2;

  v2 = OUTLINED_FUNCTION_33_74(a1);
  MultiwayViewConstraintsController.isLocalReactionActive.setter(v2);
  OUTLINED_FUNCTION_11(v1);
}

void one-time initialization function for allReactionPickerTipStates()
{
  static MultiwayViewConstraintsController.allReactionPickerTipStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allReactionPickerTipStates;
}

uint64_t *MultiwayViewConstraintsController.allReactionPickerTipStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allReactionPickerTipStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allReactionPickerTipStates;
}

uint64_t static MultiwayViewConstraintsController.allReactionPickerTipStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allReactionPickerTipStates);
}

void MultiwayViewConstraintsController.reactionPickerTipState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_51();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.reactionPickerTipState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for MultiwayViewConstraintsController.reactionPickerTipState : MultiwayViewConstraintsController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewConstraintsController.reactionPickerTipState.setter(&v1);
}

void MultiwayViewConstraintsController.reactionsState.didset(uint64_t a1, _QWORD *a2)
{
  void (*v2)(_BYTE *, char *);
  char *v3;
  int v4;
  char v5;
  _BYTE v6[25];

  OUTLINED_FUNCTION_26_72(a1, a2);
  OUTLINED_FUNCTION_1();
  if (v4 != *v3)
  {
    v5 = *v3;
    v2(v6, &v5);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t MultiwayViewConstraintsController.reactionPickerTipStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  char v22;
  char v23;
  char v24;
  _BYTE v25[8];
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = v2;
  v23 = *a2;
  v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v24 = *v14;
  v15 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v16 = *v15;
  v22 = *v15;
  v17 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v21 = *v17;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v18);
  v25[0] = v5;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v24;
  v31 = v16;
  v32 = v23;
  v33 = v21;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 56))(v25, v18, v19);
  v25[0] = v5;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v24;
  v31 = v22;
  v32 = v23;
  v33 = v21;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v25);
}

void MultiwayViewConstraintsController.reactionPickerTipState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.reactionPickerTipState.modify(uint64_t a1, char a2)
{
  MultiwayViewConstraintsController.reactionsState.modify(a1, a2, MultiwayViewConstraintsController.reactionPickerTipState.setter);
}

void MultiwayViewConstraintsController.reactionsState.modify(uint64_t a1, char a2, void (*a3)(char *))
{
  void *v3;
  char *v4;
  char v5;
  char v6;

  v3 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v4 = &v5;
  }
  else
  {
    v6 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v4 = &v6;
  }
  a3(v4);
  OUTLINED_FUNCTION_10_18(v3);
}

void *static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter()
{
  return &outlined read-only object #0 of static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance MultiwayViewConstraintsController.FloatingControlsState(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static MultiwayViewConstraintsController.FloatingControlsState.allCases.getter;
}

void MultiwayViewConstraintsController.participantListState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.participantListState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.participantListStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char v8;
  char *v9;
  char v10;
  char *v11;
  char v12;
  char *v13;
  char v14;
  char *v15;
  char v16;
  char *v17;
  char v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v2;
  v4 = a2 & 1;
  v5 = (uint64_t *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v6 = *v5;
  v7 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v8 = *v7;
  v9 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v10 = *v9;
  v11 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v12 = *v11;
  v13 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v14 = *v13;
  v15 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v16 = *v15;
  v17 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v18 = *v17;
  v19 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v23 = *v19;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v22 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v22);
  v24[0] = v4;
  v25 = v6;
  v26 = v8;
  v27 = v10;
  v28 = v12;
  v29 = v14;
  v30 = v16;
  v31 = v18;
  v32 = v23;
  (*(void (**)(_BYTE *, uint64_t))(v21 + 56))(v24, v22);
  v24[0] = v4;
  v25 = v6;
  v26 = v8;
  v27 = v10;
  v28 = v12;
  v29 = v14;
  v30 = v16;
  v31 = v18;
  v32 = v23;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void MultiwayViewConstraintsController.participantListState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.participantListState.modify(uint64_t a1)
{
  MultiwayViewConstraintsController.shutterButtonState.modify(a1);
}

void MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(unint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)logger);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = OUTLINED_FUNCTION_105();
    v10 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v5 = 136315394;
    v6 = OUTLINED_FUNCTION_59_42();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v6, v7, &v10);
    OUTLINED_FUNCTION_58_44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = OUTLINED_FUNCTION_59_42();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v10);
    OUTLINED_FUNCTION_58_44();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v3, v4, "accessibilityLocalParticipantState.set newValue: %s, oldValue: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  if (a1 >= 4)
  {
    OUTLINED_FUNCTION_49_55();
    __break(1u);
  }
  else
  {
    MultiwayViewConstraintsController.localParticipantState.setter(0x81804303 >> (8 * a1));
    OUTLINED_FUNCTION_26_11();
  }
}

void MultiwayViewConstraintsController.accessibilityLocalParticipantState.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void MultiwayViewConstraintsController.accessibilityLocalParticipantState.modify(unint64_t *a1)
{
  MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewConstraintsController.shouldForceAllowNextLocalParticipantStateUpdate.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.mostRecentLocalParticipantCorner : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewConstraintsController.localParticipantState.setter(uint64_t a1, _QWORD *a2)
{
  void (*v2)(uint64_t);
  char v3;
  _BYTE *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_27_77(a1, a2);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = v3;
  v2(v5);
  OUTLINED_FUNCTION_9_0();
}

uint64_t MultiwayViewConstraintsController.mostRecentLocalParticipantCorner.didset(unsigned __int8 a1)
{
  uint64_t v1;
  int v3;
  unsigned __int8 *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a1;
  v4 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  result = swift_beginAccess();
  v6 = *v4;
  if (v3 == 4)
  {
    if ((_DWORD)v6 == 4)
      return result;
LABEL_6:
    v7 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v6, v7, v8);
  }
  if ((_DWORD)v6 == 4 || (_DWORD)v6 != a1)
    goto LABEL_6;
  return result;
}

void MultiwayViewConstraintsController.localParticipantState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.localParticipantState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantState.didset(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned int v4;
  _BYTE *v6;
  uint64_t result;
  _BYTE *v8;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v4 = *v3;
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((v4 & 0xC0) != 0x40 || ((v4 ^ a1) & 0x3F) != 0)
        goto LABEL_17;
LABEL_16:
      v6 = (_BYTE *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
      result = swift_beginAccess();
      if (*v6 != 1)
        return result;
      goto LABEL_17;
    }
    if (a1 == 128)
    {
      if (v4 == 128)
        goto LABEL_16;
    }
    else if (v4 == 129)
    {
      goto LABEL_16;
    }
  }
  else if (v4 <= 0x3F && v4 == a1)
  {
    goto LABEL_16;
  }
LABEL_17:
  v8 = (_BYTE *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate);
  swift_beginAccess();
  *v8 = 0;
  return MultiwayViewConstraintsController.localParticipantStateDidChange(from:to:)(a1, v4);
}

uint64_t MultiwayViewConstraintsController.localParticipantStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  char v19;
  char *v20;
  char v21;
  char *v22;
  char v23;
  char *v24;
  char v25;
  char *v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  char v33;
  _BYTE v34[8];
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44[4];

  v3 = v2;
  if (one-time initialization token for logger != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)logger);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  v33 = a2;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v44[0] = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v12 = String.init<A>(reflecting:)();
    v43 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "Updating local participant state to %s from %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }

  MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()();
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v19 = *v18;
  v20 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v21 = *v20;
  v22 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v23 = *v22;
  v24 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v25 = *v24;
  v26 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v27 = *v26;
  v28 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v32 = *v28;
  v29 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v31 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v31);
  v34[0] = v15;
  v35 = v17;
  v36 = v19;
  v37 = v33;
  v38 = v21;
  v39 = v23;
  v40 = v25;
  v41 = v27;
  v42 = v32;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 56))(v34, v31, v29);
  v34[0] = v15;
  v35 = v17;
  v36 = v19;
  v37 = v33;
  v38 = v21;
  v39 = v23;
  v40 = v25;
  v41 = v27;
  v42 = v32;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v34);
}

void MultiwayViewConstraintsController.localParticipantState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.localParticipantState.modify(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_33_74(a1);
  MultiwayViewConstraintsController.localParticipantState.setter(v2);
  OUTLINED_FUNCTION_11(v1);
}

void MultiwayViewConstraintsController.localParticipantAspectRatio.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;

  v3 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_1();
  v4 = *(_BYTE *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v4;
  OUTLINED_FUNCTION_32();
}

__n128 key path getter for MultiwayViewConstraintsController.localParticipantAspectRatio : MultiwayViewConstraintsController@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = *a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  swift_beginAccess();
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

void key path setter for MultiwayViewConstraintsController.localParticipantAspectRatio : MultiwayViewConstraintsController(uint64_t a1)
{
  _BYTE v1[40];

  outlined init with take of AspectRatio(a1, (uint64_t)v1);
  MultiwayViewConstraintsController.localParticipantAspectRatio.setter((uint64_t)v1);
}

uint64_t MultiwayViewConstraintsController.localParticipantAspectRatio.didset(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t result;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  char *v36;
  char v37;
  char *v38;
  char v39;
  char *v40;
  char v41;
  char *v42;
  char v43;
  char *v44;
  char v45;
  char *v46;
  char v47;
  uint64_t v48;
  char v49[8];
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58[3];
  char v59[16];
  double v60;
  double v61;
  char v62;
  _QWORD v63[4];
  char v64;
  _OWORD v65[2];
  char v66;

  v3 = (uint64_t)v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  swift_beginAccess();
  v4 = *(double *)v3;
  v5 = *(double *)(v3 + 8);
  v6 = *(double *)(v3 + 16);
  v7 = *(double *)(v3 + 24);
  v8 = *(unsigned __int8 *)(v3 + 32);
  outlined init with take of AspectRatio(a1, (uint64_t)v63);
  v9 = *(double *)v63;
  v10 = *(double *)&v63[1];
  if (v64)
  {
    v10 = 1.0;
    v9 = 1.0;
  }
  if (v8)
    v11 = 1.0;
  else
    v11 = v5;
  if (v8)
    v12 = 1.0;
  else
    v12 = v4;
  if (v9 != v12 || v10 != v11)
    goto LABEL_26;
  result = outlined init with take of AspectRatio(a1, (uint64_t)v59);
  v15 = v60;
  v16 = v61;
  if (v62)
  {
    v16 = 1.0;
    v15 = 1.0;
  }
  v17 = v8 ? 1.0 : v7;
  v18 = v8 ? 1.0 : v6;
  if (v15 != v18 || v16 != v17)
  {
LABEL_26:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v48 = a1;
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)&static Logger.conversationKit);
    v21 = v1;
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v58[0] = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = *(_BYTE *)(v3 + 32);
      v27 = *(_OWORD *)(v3 + 16);
      v65[0] = *(_OWORD *)v3;
      v65[1] = v27;
      v66 = v26;
      v28 = String.init<A>(reflecting:)();
      *(_QWORD *)&v65[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v22, v23, "ConstraintsController updating localParticipantAspectRatio to %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v25, -1, -1);
      MEMORY[0x1C3B751B8](v24, -1, -1);

    }
    else
    {

    }
    outlined init with take of AspectRatio(v3, (uint64_t)v65);
    v30 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState];
    swift_beginAccess();
    v31 = *v30;
    v32 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    v33 = *(_QWORD *)v32;
    v34 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
    swift_beginAccess();
    v35 = *v34;
    v36 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    swift_beginAccess();
    v37 = *v36;
    v38 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState];
    swift_beginAccess();
    v39 = *v38;
    v40 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
    swift_beginAccess();
    v41 = *v40;
    v42 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState];
    swift_beginAccess();
    v43 = *v42;
    v44 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState];
    swift_beginAccess();
    v45 = *v44;
    v46 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive];
    swift_beginAccess();
    v47 = *v46;
    v49[0] = v31;
    v50 = v33;
    v51 = v35;
    v52 = v37;
    v53 = v39;
    v54 = v41;
    v55 = v43;
    v56 = v45;
    v57 = v47;
    return MultiwayViewConstraintsController.localParticipantAspectRatioDidChange(from:to:layoutState:)(v48, (uint64_t)v65, v49);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.localParticipantAspectRatioDidChange(from:to:layoutState:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  char v18;
  char *v19;
  char v20;
  _BYTE *v21;
  _BYTE *v22;
  char *v23;
  char v24;
  _BYTE *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;
  _QWORD *v33;
  uint64_t v34;
  _BYTE v35[8];
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  _BYTE v44[8];
  uint64_t v45;
  __int16 v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v4 = *a3;
  v5 = *((_QWORD *)a3 + 1);
  v6 = *((_WORD *)a3 + 8);
  v7 = a3[18];
  v8 = a3[19];
  v9 = a3[20];
  v10 = a3[21];
  v30 = a3[22];
  v33 = (_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v11);
  v44[0] = v4;
  v45 = v5;
  v46 = v6;
  v47 = v7;
  v48 = v8;
  v49 = v9;
  v50 = v10;
  v51 = v30;
  (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v12 + 16))(a2, v44, v11, v12);
  v13 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v14 = *v13;
  v15 = (uint64_t *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v16 = *v15;
  v17 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v18 = *v17;
  v19 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v20 = *v19;
  v21 = (_BYTE *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  LOBYTE(v5) = *v21;
  v22 = (_BYTE *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  LOBYTE(v6) = *v22;
  v23 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v24 = *v23;
  v25 = (_BYTE *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  LOBYTE(a2) = *v25;
  v26 = (char *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v31 = *v26;
  v27 = v33[4];
  v29 = v33[3];
  __swift_project_boxed_opaque_existential_1(v33, v29);
  v35[0] = v14;
  v36 = v16;
  v37 = v18;
  v38 = v20;
  v39 = v5;
  v40 = v6;
  v41 = v24;
  v42 = a2;
  v43 = v31;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 56))(v35, v29, v27);
  v35[0] = v14;
  v36 = v16;
  v37 = v18;
  v38 = v20;
  v39 = v5;
  v40 = v6;
  v41 = v24;
  v42 = a2;
  v43 = v31;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v35);
}

void MultiwayViewConstraintsController.localParticipantAspectRatio.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  __int128 v6;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[18] = v1;
  v4 = v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
  OUTLINED_FUNCTION_1();
  v5 = *(_BYTE *)(v4 + 32);
  v6 = *(_OWORD *)(v4 + 16);
  *((_OWORD *)v3 + 5) = *(_OWORD *)v4;
  *((_OWORD *)v3 + 6) = v6;
  *((_BYTE *)v3 + 112) = v5;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.localParticipantAspectRatio.modify(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 40;
  v4 = (uint64_t)*a1 + 80;
  if ((a2 & 1) != 0)
    v5 = (uint64_t)v2;
  else
    v5 = v3;
  outlined init with take of AspectRatio(v4, v5);
  MultiwayViewConstraintsController.localParticipantAspectRatio.setter(v5);
  free(v2);
}

void one-time initialization function for allInCallControlsStates()
{
  static MultiwayViewConstraintsController.allInCallControlsStates = (uint64_t)&outlined read-only object #0 of one-time initialization function for allInCallControlsStates;
}

uint64_t *MultiwayViewConstraintsController.allInCallControlsStates.unsafeMutableAddressor()
{
  if (one-time initialization token for allInCallControlsStates != -1)
    swift_once();
  return &static MultiwayViewConstraintsController.allInCallControlsStates;
}

uint64_t static MultiwayViewConstraintsController.allInCallControlsStates.getter()
{
  return static InvitationPreferences.joinLink.getter(&one-time initialization token for allInCallControlsStates);
}

void MultiwayViewConstraintsController.inCallControlsState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.inCallControlsState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewConstraintsController.inCallControlsState.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  result = swift_beginAccess();
  if (*v3 != a1)
    return MultiwayViewConstraintsController.inCallControlsStateDidChange(from:to:)(a1, *v3);
  return result;
}

uint64_t MultiwayViewConstraintsController.inCallControlsStateDidChange(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  char *v6;
  char v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v24[8];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v2;
  v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v22 = *v18;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  v25 = a2;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  (*(void (**)(_BYTE *, uint64_t))(v20 + 56))(v24, v21);
  v24[0] = v5;
  v25 = a2;
  v26 = v7;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void MultiwayViewConstraintsController.inCallControlsState.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  OUTLINED_FUNCTION_1();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.inCallControlsState.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  MultiwayViewConstraintsController.inCallControlsState.setter(*(_QWORD *)(*(_QWORD *)a1 + 24));
  OUTLINED_FUNCTION_11(v1);
}

void MultiwayViewConstraintsController.inCallConversationBannerState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_53_51();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.inCallConversationBannerState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for MultiwayViewConstraintsController.inCallConversationBannerState : MultiwayViewConstraintsController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewConstraintsController.inCallConversationBannerState.setter((uint64_t)&v1);
}

uint64_t MultiwayViewConstraintsController.inCallConversationBannerState.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  char *v3;
  uint64_t result;
  int v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  result = swift_beginAccess();
  v5 = *v3;
  if (v2)
  {
    if (v2 == 1)
    {
      if (v5 == 1)
        return result;
    }
    else if (v5 == 2)
    {
      return result;
    }
  }
  else if (!*v3)
  {
    return result;
  }
  v6 = *v3;
  return MultiwayViewConstraintsController.inCallConversationBannerStateDidChange(from:to:)((uint64_t)&v7, &v6);
}

uint64_t MultiwayViewConstraintsController.inCallConversationBannerStateDidChange(from:to:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _BYTE v24[8];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v2;
  v23 = *a2;
  v4 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v22 = *v18;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v21 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v24[0] = v5;
  v25 = v7;
  v26 = v23;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  (*(void (**)(_BYTE *, uint64_t))(v20 + 56))(v24, v21);
  v24[0] = v5;
  v25 = v7;
  v26 = v23;
  v27 = v9;
  v28 = v11;
  v29 = v13;
  v30 = v15;
  v31 = v17;
  v32 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v24);
}

void MultiwayViewConstraintsController.inCallConversationBannerState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.inCallConversationBannerState.modify(uint64_t a1, char a2)
{
  MultiwayViewConstraintsController.captionsState.modify(a1, a2, (void (*)(char *))MultiwayViewConstraintsController.inCallConversationBannerState.setter);
}

void MultiwayViewConstraintsController.captionsState.modify(uint64_t a1, char a2, void (*a3)(char *))
{
  void *v3;
  char *v4;
  char v5;
  char v6;

  v3 = *(void **)a1;
  if ((a2 & 1) != 0)
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v4 = &v5;
  }
  else
  {
    v6 = *(_BYTE *)(*(_QWORD *)a1 + 32);
    v4 = &v6;
  }
  a3(v4);
  OUTLINED_FUNCTION_10_18(v3);
}

void MultiwayViewConstraintsController.participantGridState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.participantGridState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewConstraintsController.participantListState.didset(uint64_t a1, _QWORD *a2)
{
  void (*v2)(_QWORD);
  char v3;
  unsigned __int8 *v4;

  OUTLINED_FUNCTION_27_77(a1, a2);
  OUTLINED_FUNCTION_1();
  if (((((v3 & 1) == 0) ^ *v4) & 1) == 0)
    v2(v3 & 1);
  OUTLINED_FUNCTION_9_0();
}

uint64_t MultiwayViewConstraintsController.participantGridStateDidChange(from:to:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  char v21;
  char *v22;
  char v23;
  char *v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;
  _BYTE v32[8];
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42[4];

  v3 = v2;
  v4 = a2 & 1;
  if (one-time initialization token for logger != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)logger);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  v31 = v4;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v42[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = String.init<A>(reflecting:)();
    v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "Updating grid state to %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }

  v12 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (uint64_t *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v19 = *v18;
  v20 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v21 = *v20;
  v22 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v23 = *v22;
  v24 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v25 = *v24;
  v26 = (char *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v30 = *v26;
  v27 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v29 = *(_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v29);
  v32[0] = v13;
  v33 = v15;
  v34 = v17;
  v35 = v19;
  v36 = v31;
  v37 = v21;
  v38 = v23;
  v39 = v25;
  v40 = v30;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 56))(v32, v29, v27);
  v32[0] = v13;
  v33 = v15;
  v34 = v17;
  v35 = v19;
  v36 = v31;
  v37 = v21;
  v38 = v23;
  v39 = v25;
  v40 = v30;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v32);
}

void MultiwayViewConstraintsController.participantGridState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.participantGridState.modify(uint64_t a1)
{
  MultiwayViewConstraintsController.shutterButtonState.modify(a1);
}

void MultiwayViewConstraintsController.floatingControlsState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewConstraintsController.floatingControlsState : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewConstraintsController.floatingControlsState.setter(char a1)
{
  MultiwayViewConstraintsController.floatingControlsState.setter(a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState, (void (*)(uint64_t))MultiwayViewConstraintsController.floatingControlsState.didset);
}

uint64_t MultiwayViewConstraintsController.floatingControlsState.didset(char a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  result = swift_beginAccess();
  v5 = *v3;
  v6 = a1 & 1;
  if (((((_DWORD)v6 == 0) ^ v5) & 1) == 0)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 72))(v6, v5, v7, v8);
  }
  return result;
}

void MultiwayViewConstraintsController.floatingControlsState.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewConstraintsController.floatingControlsState.modify(uint64_t a1)
{
  MultiwayViewConstraintsController.shutterButtonState.modify(a1);
}

uint64_t MultiwayViewConstraintsController.localParticipantRegularSize.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v0 = OUTLINED_FUNCTION_24_75();
  return v1(v0);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.listState.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.listState.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.listState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.controlsState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.controlsState.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.controlsState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.conversationBannerState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.localState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.localState.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.localState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.gridState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.gridState.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = result & 1;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.gridState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.captionsState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *MultiwayViewConstraintsController.OverallLayoutState.captionsState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 19) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.captionsState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.reactionsState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *MultiwayViewConstraintsController.OverallLayoutState.reactionsState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 20) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.reactionsState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_44_1(a1);
}

_BYTE *MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 21) = *result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.reactionPickerTipState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 22) = result;
  return result;
}

uint64_t (*MultiwayViewConstraintsController.OverallLayoutState.isLocalReactionActive.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewConstraintsController.OverallLayoutState.hash(into:)()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt v4;
  Swift::UInt v5;
  Swift::UInt v6;
  Swift::UInt v7;
  Swift::UInt8 v8;
  Swift::UInt v9;

  v1 = *((_QWORD *)v0 + 1);
  v2 = v0[16];
  v3 = v0[17];
  v4 = v0[18];
  v5 = v0[19];
  v6 = v0[20];
  v7 = v0[21];
  v8 = v0[22];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  if (!(v3 >> 6))
  {
    v9 = 0;
    goto LABEL_5;
  }
  if (v3 >> 6 == 1)
  {
    v3 &= 0x3Fu;
    v9 = 1;
LABEL_5:
    Hasher._combine(_:)(v9);
    goto LABEL_9;
  }
  if ((_DWORD)v3 == 128)
    v3 = 2;
  else
    v3 = 3;
LABEL_9:
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v7);
  Hasher._combine(_:)(v8);
}

uint64_t static MultiwayViewConstraintsController.OverallLayoutState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3;
  unsigned __int8 v4;
  int v5;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  int v15;
  uint64_t result;
  unsigned int v17;

  if (*a1 != *a2 || *((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
    return 0;
  v3 = a1[16];
  v4 = a1[17];
  v5 = a1[18];
  v6 = a1[19];
  v7 = a1[20];
  v8 = a1[21];
  v9 = a1[22];
  v10 = a2[16];
  v11 = a2[18];
  v12 = a2[19];
  v13 = a2[20];
  v14 = a2[21];
  v15 = a2[22];
  if (!v3)
  {
    if (!a2[16])
      goto LABEL_10;
    return 0;
  }
  if (v3 != 1)
  {
    if (v10 == 2)
      goto LABEL_10;
    return 0;
  }
  if (v10 != 1)
    return 0;
LABEL_10:
  if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(v4, a2[17]) & 1) == 0
    || ((v5 ^ v11) & 1) != 0)
  {
    return 0;
  }
  result = 0;
  if (v6 == v12)
  {
    if (((v8 ^ v14) & 1) != 0)
      v17 = 0;
    else
      v17 = v9 ^ v15 ^ 1;
    if (((v7 ^ v13) & 1) != 0)
      return 0;
    else
      return v17;
  }
  return result;
}

Swift::Int MultiwayViewConstraintsController.OverallLayoutState.hashValue.getter()
{
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.OverallLayoutState.hash(into:)();
  return Hasher._finalize()();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance MultiwayViewConstraintsController.OverallLayoutState()
{
  Hasher.init(_seed:)();
  MultiwayViewConstraintsController.OverallLayoutState.hash(into:)();
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void *MultiwayViewConstraintsController.bannerDodgingLayoutGuide.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide);
  v2 = v1;
  return v1;
}

uint64_t MultiwayViewConstraintsController.bannerViewConstraintManager.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v0 = OUTLINED_FUNCTION_24_75();
  return v1(v0);
}

uint64_t MultiwayViewConstraintsController.bannerControlsSize.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

__n128 key path getter for MultiwayViewConstraintsController.bannerControlsSize : MultiwayViewConstraintsController@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize);
  swift_beginAccess();
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

void key path setter for MultiwayViewConstraintsController.bannerControlsSize : MultiwayViewConstraintsController(uint64_t a1)
{
  MultiwayViewConstraintsController.bannerControlsSize.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void MultiwayViewConstraintsController.bannerControlsSize.didset()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint))
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_43_63();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint))
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_43_63();
  }
  OUTLINED_FUNCTION_26_11();
}

void MultiwayViewConstraintsController.bannerControlsSize.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewConstraintsController.bannerControlsSize.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    MultiwayViewConstraintsController.bannerControlsSize.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewConstraintsController.configurableRosterCellWidth.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

uint64_t key path getter for MultiwayViewConstraintsController.configurableRosterCellWidth : MultiwayViewConstraintsController@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

void key path setter for MultiwayViewConstraintsController.configurableRosterCellWidth : MultiwayViewConstraintsController()
{
  MultiwayViewConstraintsController.configurableRosterCellWidth.setter();
}

void MultiwayViewConstraintsController.configurableRosterCellWidth.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_68();
  OUTLINED_FUNCTION_9_0();
}

id MultiwayViewConstraintsController.configurableRosterCellWidth.didset()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  double v3;
  id result;

  v1 = *(void **)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint);
  if (v1)
  {
    v2 = v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth;
    swift_beginAccess();
    v3 = *(double *)v2;
    if (*(_BYTE *)(v2 + 8))
      v3 = 0.0;
    return objc_msgSend(v1, sel_setConstant_, v3);
  }
  return result;
}

uint64_t specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unsigned __int8 v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  char v105;
  char v106;
  char v107;
  uint64_t v108;
  unsigned __int8 v109[8];
  uint64_t v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;

  if (one-time initialization token for allParticipantListStates != -1)
LABEL_63:
    swift_once();
  if (*(_QWORD *)(static MultiwayViewConstraintsController.allParticipantListStates + 16))
  {
    v79 = *(_QWORD *)(static MultiwayViewConstraintsController.allParticipantListStates + 16);
    v98 = a8;
    v26 = one-time initialization token for allInCallControlsStates;
    v27 = static MultiwayViewConstraintsController.allParticipantListStates;
    swift_bridgeObjectRetain();
    if (v26 != -1)
LABEL_66:
      swift_once();
    v28 = 0;
    v29 = v27 + 32;
    v30 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
    v31 = &one-time initialization token for ICSIsOnScreenNotification;
    while (1)
    {
      if (v28 >= *(_QWORD *)(v27 + 16))
      {
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      v80 = *(_QWORD *)(v30[304] + 16);
      if (v80)
      {
        v67 = v28;
        v68 = v27;
        v66 = v29;
        v32 = *(_BYTE *)(v29 + v28);
        v33 = v31[126];
        v34 = v30[304];
        swift_bridgeObjectRetain();
        if (v33 != -1)
          swift_once();
        v35 = 0;
        v36 = v34 + 32;
        result = v34;
        v69 = v34 + 32;
        v70 = v34;
        v95 = v32;
        while (2)
        {
          if (v35 >= *(_QWORD *)(result + 16))
          {
            __break(1u);
            return result;
          }
          v38 = 0;
          v39 = *(_QWORD *)(v36 + 8 * v35++);
          v40 = static MultiwayViewConstraintsController.allLocalParticipantStates;
          v71 = v35;
          v97 = v39;
          do
          {
            v81 = *(_QWORD *)(v40 + 16);
            if (v81)
            {
              v72 = v38;
              v41 = outlined read-only object #0 of specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)[v38 + 32];
              v42 = one-time initialization token for allParticipantGridStates;
              v27 = v40;
              swift_bridgeObjectRetain();
              if (v42 != -1)
                swift_once();
              v43 = 0;
              v44 = v27 + 32;
              v45 = v27;
              v73 = v27 + 32;
              v74 = v27;
              v96 = v41;
              while (1)
              {
                if (v43 >= *(_QWORD *)(v45 + 16))
                {
                  __break(1u);
                  goto LABEL_65;
                }
                v82 = *(_QWORD *)(static MultiwayViewConstraintsController.allParticipantGridStates + 16);
                if (v82)
                  break;
LABEL_49:
                if (++v43 == v81)
                {
                  swift_bridgeObjectRelease();
                  v40 = static MultiwayViewConstraintsController.allLocalParticipantStates;
                  result = v70;
                  v35 = v71;
                  v36 = v69;
                  v38 = v72;
                  goto LABEL_51;
                }
              }
              v75 = v43;
              v99 = *(_BYTE *)(v44 + v43);
              a8 = one-time initialization token for allCaptionsStates;
              v27 = static MultiwayViewConstraintsController.allParticipantGridStates;
              swift_bridgeObjectRetain();
              if (a8 != -1)
                swift_once();
              v46 = 0;
              v47 = v27 + 32;
              v48 = v27;
              v76 = v27 + 32;
              v77 = v27;
              while (1)
              {
                if (v46 >= *(_QWORD *)(v48 + 16))
                {
LABEL_62:
                  __break(1u);
                  goto LABEL_63;
                }
                v86 = *(_QWORD *)(static MultiwayViewConstraintsController.allCaptionsStates + 16);
                if (v86)
                  break;
LABEL_47:
                if (++v46 == v82)
                {
                  swift_bridgeObjectRelease();
                  v45 = v74;
                  v43 = v75;
                  v44 = v73;
                  goto LABEL_49;
                }
              }
              v78 = v46;
              v100 = *(_BYTE *)(v47 + v46);
              a8 = one-time initialization token for allReactionsStates;
              v27 = static MultiwayViewConstraintsController.allCaptionsStates;
              swift_bridgeObjectRetain();
              if (a8 != -1)
                swift_once();
              v49 = 0;
              v83 = v27;
              v84 = v27 + 32;
              v50 = v27;
              while (1)
              {
                if (v49 >= *(_QWORD *)(v50 + 16))
                {
                  __break(1u);
                  goto LABEL_62;
                }
                v89 = *(_QWORD *)(static MultiwayViewConstraintsController.allReactionsStates + 16);
                if (v89)
                  break;
LABEL_45:
                if (++v49 == v86)
                {
                  swift_bridgeObjectRelease();
                  v48 = v77;
                  v46 = v78;
                  v47 = v76;
                  goto LABEL_47;
                }
              }
              v85 = v49;
              v105 = *(_BYTE *)(v84 + v49);
              a8 = one-time initialization token for allReactionPickerTipStates;
              v51 = static MultiwayViewConstraintsController.allReactionsStates;
              swift_bridgeObjectRetain();
              if (a8 != -1)
                swift_once();
              v52 = 0;
              v87 = v51;
              v88 = v51 + 32;
              v53 = v51;
              while (1)
              {
                if (v52 >= *(_QWORD *)(v53 + 16))
                {
                  __break(1u);
                  goto LABEL_60;
                }
                v27 = static MultiwayViewConstraintsController.allReactionPickerTipStates;
                v93 = *(_QWORD *)(static MultiwayViewConstraintsController.allReactionPickerTipStates + 16);
                if (v93)
                  break;
LABEL_43:
                if (++v52 == v89)
                {
                  swift_bridgeObjectRelease();
                  v50 = v83;
                  v49 = v85;
                  goto LABEL_45;
                }
              }
              v90 = v52;
              v106 = *(_BYTE *)(v88 + v52);
              v54 = one-time initialization token for allIsLocalReactionActiveStates;
              swift_bridgeObjectRetain();
              if (v54 != -1)
                swift_once();
              v55 = 0;
              v91 = v27 + 32;
              v92 = v27;
              while (v55 < *(_QWORD *)(v27 + 16))
              {
                v108 = static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
                a8 = *(_QWORD *)(static MultiwayViewConstraintsController.allIsLocalReactionActiveStates + 16);
                if (a8)
                {
                  v94 = v55;
                  v107 = *(_BYTE *)(v91 + v55);
                  v56 = swift_bridgeObjectRetain();
                  v57 = 0;
                  do
                  {
                    v58 = a15;
                    v59 = a13;
                    v60 = a11;
                    v61 = a9;
                    v62 = a7;
                    v63 = a5;
                    v64 = *(_BYTE *)(v108 + v57++ + 32);
                    v65 = (void *)MEMORY[0x1C3B749C0](v56);
                    v109[0] = v95;
                    v110 = v97;
                    v111 = v96;
                    v112 = v99;
                    v113 = v100;
                    v114 = v105;
                    v115 = v106;
                    v116 = v107;
                    v117 = v64;
                    a5 = v63;
                    a7 = v62;
                    a9 = v61;
                    a11 = v60;
                    a13 = v59;
                    a15 = v58;
                    closure #10 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v109, a2, a3, a4, a5, a6, a7, v98, a9, a10, a11, a12, a13, a14, v58, a16, a17, a18, a19);
                    objc_autoreleasePoolPop(v65);
                  }
                  while (a8 != v57);
                  swift_bridgeObjectRelease();
                  v27 = v92;
                  v55 = v94;
                }
                if (++v55 == v93)
                {
                  swift_bridgeObjectRelease();
                  v53 = v87;
                  v52 = v90;
                  goto LABEL_43;
                }
              }
              __break(1u);
              goto LABEL_57;
            }
LABEL_51:
            ++v38;
          }
          while (v38 != 3);
          if (v35 != v80)
            continue;
          break;
        }
        swift_bridgeObjectRelease();
        v28 = v67;
        v27 = v68;
        v29 = v66;
        v30 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
        v31 = &one-time initialization token for ICSIsOnScreenNotification;
      }
      if (++v28 == v79)
      {
LABEL_60:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
  }
LABEL_57:
  swift_release();
LABEL_58:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)(void (*a1)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD);
  char v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  char v72[8];
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;

  if (one-time initialization token for allParticipantListStates != -1)
LABEL_62:
    swift_once();
  v2 = static MultiwayViewConstraintsController.allParticipantListStates;
  if (*(_QWORD *)(static MultiwayViewConstraintsController.allParticipantListStates + 16))
  {
    v53 = *(_QWORD *)(static MultiwayViewConstraintsController.allParticipantListStates + 16);
    v3 = one-time initialization token for allInCallControlsStates;
    swift_bridgeObjectRetain();
    if (v3 != -1)
LABEL_65:
      swift_once();
    v4 = 0;
    v5 = v2 + 32;
    v6 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
    v7 = &one-time initialization token for ICSIsOnScreenNotification;
    v8 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
    while (1)
    {
      if (v4 >= *(_QWORD *)(v2 + 16))
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      v54 = *(_QWORD *)(v6[304] + 16);
      if (v54)
      {
        v47 = v4;
        v48 = v2;
        v46 = v5;
        v9 = *(_BYTE *)(v5 + v4);
        v10 = v7[126];
        swift_bridgeObjectRetain();
        if (v10 != -1)
          swift_once();
        OUTLINED_FUNCTION_41_47();
        while (2)
        {
          OUTLINED_FUNCTION_37_59();
          if (v13)
          {
            __break(1u);
            return;
          }
          v14 = 0;
          v15 = *(_QWORD *)(v12 + 8 * v11);
          v16 = v11 + 1;
          v17 = static MultiwayViewConstraintsController.allLocalParticipantStates;
          v49 = v16;
          v63 = v15;
          do
          {
            v55 = *(_QWORD *)(v17 + 16);
            if (v55)
            {
              v50 = v14;
              v18 = outlined read-only object #0 of static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)[v14 + 32];
              v19 = one-time initialization token for allParticipantGridStates;
              v2 = v17;
              swift_bridgeObjectRetain();
              if (v19 != -1)
                swift_once();
              OUTLINED_FUNCTION_41_47();
              while (1)
              {
                OUTLINED_FUNCTION_37_59();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_64;
                }
                v56 = *(_QWORD *)(static MultiwayViewConstraintsController.allParticipantGridStates + 16);
                if (v56)
                  break;
LABEL_49:
                if (v20 + 1 == v55)
                {
                  swift_bridgeObjectRelease();
                  v17 = static MultiwayViewConstraintsController.allLocalParticipantStates;
                  v16 = v49;
                  v14 = v50;
                  goto LABEL_51;
                }
              }
              v51 = v20;
              v22 = *(unsigned __int8 *)(v21 + v20);
              v23 = one-time initialization token for allCaptionsStates;
              OUTLINED_FUNCTION_54_48();
              if (v23 != -1)
                swift_once();
              OUTLINED_FUNCTION_41_47();
              while (1)
              {
                OUTLINED_FUNCTION_37_59();
                if (v13)
                {
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
                v59 = *(_QWORD *)(static MultiwayViewConstraintsController.allCaptionsStates + 16);
                if (v59)
                  break;
LABEL_47:
                if (v24 + 1 == v56)
                {
                  swift_bridgeObjectRelease();
                  v20 = v51;
                  goto LABEL_49;
                }
              }
              v52 = v24;
              v26 = *(unsigned __int8 *)(v25 + v24);
              v27 = one-time initialization token for allReactionsStates;
              OUTLINED_FUNCTION_54_48();
              if (v27 != -1)
                swift_once();
              v57 = v2 + 32;
              while (1)
              {
                OUTLINED_FUNCTION_37_59();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_61;
                }
                v61 = *(_QWORD *)(v8[301] + 16);
                if (v61)
                  break;
LABEL_45:
                if (v28 + 1 == v59)
                {
                  swift_bridgeObjectRelease();
                  v24 = v52;
                  goto LABEL_47;
                }
              }
              v58 = v28;
              v29 = *(_BYTE *)(v57 + v28);
              v2 = one-time initialization token for allReactionPickerTipStates;
              v30 = v8[301];
              swift_bridgeObjectRetain();
              if (v2 != -1)
                swift_once();
              v60 = v30 + 32;
              v68 = v29;
              while (1)
              {
                OUTLINED_FUNCTION_37_59();
                if (v13)
                {
                  __break(1u);
                  goto LABEL_59;
                }
                v32 = static MultiwayViewConstraintsController.allReactionPickerTipStates;
                v66 = *(_QWORD *)(static MultiwayViewConstraintsController.allReactionPickerTipStates + 16);
                if (v66)
                  break;
LABEL_43:
                if (v31 + 1 == v61)
                {
                  swift_bridgeObjectRelease();
                  v8 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
                  v28 = v58;
                  goto LABEL_45;
                }
              }
              v62 = v31;
              v33 = *(_BYTE *)(v60 + v31);
              v34 = one-time initialization token for allIsLocalReactionActiveStates;
              swift_bridgeObjectRetain();
              if (v34 != -1)
                swift_once();
              v35 = 0;
              v64 = v32 + 32;
              v65 = v32;
              v69 = v33;
              while (v35 < *(_QWORD *)(v32 + 16))
              {
                v71 = static MultiwayViewConstraintsController.allIsLocalReactionActiveStates;
                v2 = *(_QWORD *)(static MultiwayViewConstraintsController.allIsLocalReactionActiveStates + 16);
                if (v2)
                {
                  v67 = v35;
                  v70 = *(_BYTE *)(v64 + v35);
                  v36 = swift_bridgeObjectRetain();
                  v37 = v26;
                  v38 = v22;
                  v39 = 0;
                  v40 = v18;
                  do
                  {
                    v41 = a1;
                    v42 = *(_BYTE *)(v71 + v39++ + 32);
                    v43 = v2;
                    v44 = MEMORY[0x1C3B749C0](v36);
                    v72[0] = v9;
                    v73 = v63;
                    v74 = v40;
                    v75 = v38;
                    v76 = v37;
                    v77 = v68;
                    v78 = v69;
                    v79 = v70;
                    v80 = v42;
                    a1 = v41;
                    v41(v72);
                    v45 = (void *)v44;
                    v2 = v43;
                    objc_autoreleasePoolPop(v45);
                  }
                  while (v43 != v39);
                  swift_bridgeObjectRelease();
                  v18 = v40;
                  v22 = v38;
                  v26 = v37;
                  v32 = v65;
                  v35 = v67;
                }
                if (++v35 == v66)
                {
                  swift_bridgeObjectRelease();
                  v31 = v62;
                  goto LABEL_43;
                }
              }
              __break(1u);
              return;
            }
LABEL_51:
            ++v14;
          }
          while (v14 != 3);
          if (v16 != v54)
            continue;
          break;
        }
        swift_bridgeObjectRelease();
        v4 = v47;
        v2 = v48;
        v5 = v46;
        v6 = &OBJC_IVAR____TtC15ConversationKit30SystemBannerHostViewController_keyColor;
        v7 = &one-time initialization token for ICSIsOnScreenNotification;
      }
      if (++v4 == v53)
      {
LABEL_59:
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

char *MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(char *a1, void *a2, void *a3, char a4, void *a5, char a6, void *a7, void *a8, uint64_t a9, uint64_t a10, void *a11, unsigned __int8 *a12, void *a13, unsigned __int8 a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, char a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,void *a29,void *a30,unsigned __int8 *a31,void *a32,unsigned __int8 *a33,void *a34,unsigned __int8 *a35,char a36)
{
  _BYTE *v36;
  char v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  Class isa;
  id v54;
  id v55;
  double v56;
  id v57;
  double v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  Class v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  double v71;
  Class v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  char *result;
  char *v81;
  char *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (*v117)(uint64_t);
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  uint64_t v152;
  id v153;
  char **v154;
  id v155;
  id v156;
  uint64_t *v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  void *v165;
  void *v166;
  void *v167;
  char v168;
  char *v169;
  id v170;
  id v171;
  uint64_t v172;
  objc_class *ObjectType;
  void *v174;
  unsigned int v176;
  uint64_t v178;
  int v179;
  int v180[2];
  int v181;
  void *v182;
  void *v184;
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  objc_super v190;
  uint64_t v191;
  __int128 v192;
  uint64_t v193;
  _UNKNOWN **v194;
  double v195[51];

  ObjectType = (objc_class *)swift_getObjectType();
  v176 = a4 & 1;
  *(_QWORD *)v180 = a6 & 1;
  v41 = *a1;
  v186 = *a12;
  v178 = *a31;
  v179 = *a33;
  v181 = *a35;
  v36[OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate] = 0;
  v36[OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner] = 4;
  v42 = (uint64_t *)&v36[OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects];
  v43 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [()]);
  lazy protocol witness table accessor for type MultiwayViewConstraintsController.OverallLayoutState and conformance MultiwayViewConstraintsController.OverallLayoutState();
  v157 = v42;
  *v42 = Dictionary.init(dictionaryLiteral:)();
  v160 = OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint;
  *(_QWORD *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsWidthConstraint] = 0;
  v162 = OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint;
  *(_QWORD *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsHeightConstraint] = 0;
  v164 = OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint;
  *(_QWORD *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidthConstraint] = 0;
  v44 = &v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = 0;
  v44[16] = 1;
  v45 = &v43[OBJC_IVAR___CNKFaceTimeConstraintsController_configurableRosterCellWidth];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v168 = v41;
  v187 = v43;
  v43[OBJC_IVAR___CNKFaceTimeConstraintsController_layoutIdiom] = v41;
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v184 = a2;
  v47 = OUTLINED_FUNCTION_9((uint64_t)objc_msgSend(a2, sel_addLayoutGuide_, v46), sel_widthAnchor);
  static Layout.ConversationControls.values.getter((uint64_t)v195);
  v48 = objc_msgSend(v47, sel_constraintEqualToConstant_, v195[0]);

  v174 = v46;
  v50 = OUTLINED_FUNCTION_9(v49, sel_heightAnchor);
  v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 0.0);

  v182 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v52 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v52 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v52 + 32) = v48;
  *(_QWORD *)(v52 + 40) = v51;
  *(_QWORD *)&v192 = v52;
  OUTLINED_FUNCTION_44_57();
  type metadata accessor for NSLayoutConstraint();
  v48;
  v51;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v182, sel_activateConstraints_, isa);

  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v55 = OUTLINED_FUNCTION_2_11((uint64_t)objc_msgSend(a2, sel_addLayoutGuide_, v54), sel_widthAnchor);
  OUTLINED_FUNCTION_1();
  v56 = *(double *)v45;
  if (v45[8])
    v56 = 0.0;
  v57 = objc_msgSend(v55, sel_constraintEqualToConstant_, v56);

  type metadata accessor for UILayoutPriority(0);
  LODWORD(v191) = 1144750080;
  LODWORD(v189) = 1065353216;
  lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
  OUTLINED_FUNCTION_60_36();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v58) = v192;
  v59 = OUTLINED_FUNCTION_2_11((uint64_t)objc_msgSend(v57, sel_setPriority_, v58), sel_widthAnchor);
  v60 = objc_msgSend(v59, sel_constraintGreaterThanOrEqualToConstant_, dbl_1BD6680D0[static Platform.current.getter() == 0]);

  v61 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v61 + 16) = xmmword_1BD644B60;
  *(_QWORD *)(v61 + 32) = v57;
  *(_QWORD *)(v61 + 40) = v60;
  v57;
  v156 = v60;
  v62 = OUTLINED_FUNCTION_2_11((uint64_t)v156, sel_heightAnchor);
  v166 = v54;
  v63 = OUTLINED_FUNCTION_2_11((uint64_t)v62, sel_widthAnchor);
  v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

  *(_QWORD *)(v61 + 48) = v64;
  *(_QWORD *)&v192 = v61;
  OUTLINED_FUNCTION_44_57();
  v65 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_48_1(v182, sel_activateConstraints_);

  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  OUTLINED_FUNCTION_48_1(a2, sel_addLayoutGuide_);
  v167 = v66;
  if (a16)
  {
    v67 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v67 + 16) = xmmword_1BD6443F0;
    v68 = a16;
    v69 = objc_msgSend(v68, sel_heightAnchor);
    v70 = objc_msgSend(v69, sel_constraintEqualToConstant_, 75.0);

    LODWORD(v191) = 1148846080;
    LODWORD(v189) = 1065353216;
    OUTLINED_FUNCTION_60_36();
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v71) = v192;
    objc_msgSend(v70, sel_setPriority_, v71);
    *(_QWORD *)(v67 + 32) = v70;
    *(_QWORD *)&v192 = v67;
    OUTLINED_FUNCTION_44_57();
    v72 = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_48_1(v182, sel_activateConstraints_);

    v66 = v167;
  }
  v73 = *(void **)&v43[v160];
  v74 = OUTLINED_FUNCTION_48_54(v160);

  v75 = *(void **)&v43[v162];
  v76 = OUTLINED_FUNCTION_48_54(v162);

  v77 = *(void **)&v43[v164];
  v78 = OUTLINED_FUNCTION_48_54(v164);

  *(_QWORD *)&v43[OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide] = v66;
  v161 = v74;
  v163 = v76;
  v165 = v78;
  if ((v168 & 1) != 0)
  {
    v79 = v66;
    result = (char *)objc_msgSend(a3, sel_view);
    if (result)
    {
      v169 = result;
      LOBYTE(v192) = v186;
      LOBYTE(v191) = v178;
      if (a32)
        v158 = objc_msgSend(a32, sel_view);
      else
        v158 = 0;
      LOBYTE(v189) = v179;
      LOBYTE(v188) = v181;
      type metadata accessor for SmallMultiwayControllerLayout();
      OUTLINED_FUNCTION_15();
      v83 = a18;
      v155 = a11;
      v154 = a7;
      v84 = a16;
      v151 = v79;
      v85 = a34;
      v150 = a30;
      v86 = a23;
      v87 = a22;
      v88 = a21;
      v89 = a17;
      v148 = a13;
      v146 = v174;
      v90 = a8;
      v144 = a5;
      v142 = v184;
      v91 = a27;
      v92 = a28;
      SmallMultiwayControllerLayout.init(containingView:participantListView:participantListState:gridView:participantGridState:controlsViewController:inCallControlsState:inCallBannerHostViewController:callControlsViewController:inCallBannerControlsAreaLayoutGuide:inCallBannerDodgingLayoutGuide:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:changeLayoutButtonBackgroundView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:)(v142, v169, v176, (uint64_t)v144, v180[0], v154, a10, (uint64_t)v155, (uint64_t)a8, a9, (uint64_t)v146, (uint64_t)v151, (unsigned __int8 *)&v192, (uint64_t)v148, a14, a15, a16, (uint64_t)a17, a18,
        (uint64_t)a21,
        a22,
        a23,
        (uint64_t)v91,
        (uint64_t)a28,
        v150,
        (unsigned __int8 *)&v191,
        (uint64_t)v158,
        (unsigned __int8 *)&v189,
        a34,
        (unsigned __int8 *)&v188);
    }
    goto LABEL_33;
  }
  v170 = v66;
  result = (char *)objc_msgSend(a3, sel_view);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v81 = result;
  result = (char *)objc_msgSend(a7, sel_view);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v82 = result;
  result = (char *)objc_msgSend(a11, sel_view);
  v159 = (uint64_t)result;
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  LOBYTE(v192) = v186;
  v153 = objc_msgSend(a18, sel_view);
  if (a32)
    v141 = objc_msgSend(a32, sel_view);
  else
    v141 = 0;
  v152 = type metadata accessor for LargeMultiwayControllerLayout();
  OUTLINED_FUNCTION_15();
  v93 = a8;
  v149 = a5;
  v147 = v166;
  v145 = v184;
  v94 = a27;
  v95 = a16;
  v171 = v170;
  v96 = a34;
  v143 = a30;
  v97 = a29;
  v98 = a23;
  v99 = a22;
  v100 = a21;
  v101 = a17;
  v102 = LargeMultiwayControllerLayout.init(containingView:participantListView:participantListState:rosterCellLayoutGuide:gridView:participantGridState:controlsView:controlsState:callControlsViewController:bannerView:bannerState:bannerLayoutGuide:bannerDodgingLayoutGuide:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsView:effectsBrowserView:effectsControlsView:deviceOrientation:participantLabelsView:bottomControlsView:oneToOneShutterButton:changeLayoutButton:topCornerButtonsStackView:captionsView:captionsState:reactionsView:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v145, v81, (uint64_t *)v176, v147, v149, v180[0], v82, a10, a8, a9, v159, (unsigned __int8 *)&v192, (uint64_t)v174, (uint64_t)v171, a13, a14, a15, (uint64_t)a17, v153,
           a16,
           a26,
           a21,
           a22,
           a23,
           (uint64_t)a27,
           (uint64_t)a29,
           (uint64_t)v143,
           (uint64_t)&v191,
           v141,
           (uint64_t)&v189,
           a34,
           (uint64_t)&v188,
           a36 & 1);
  v194 = &protocol witness table for LargeMultiwayControllerLayout;
  v193 = v152;
  *(_QWORD *)&v192 = v102;
  outlined init with take of Notice(&v192, (uint64_t)&v187[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout]);
  v172 = OUTLINED_FUNCTION_6_1();
  swift_unknownObjectWeakInit();
  v103 = OUTLINED_FUNCTION_6_1();
  swift_unknownObjectWeakInit();
  v104 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_28_3();
  v105 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_28_3();
  v106 = OUTLINED_FUNCTION_6_1();
  swift_unknownObjectWeakInit();
  v107 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_28_3();
  v108 = OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_28_3();
  v109 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v109 + 16) = a24;
  *(_QWORD *)(v109 + 24) = a25;
  v110 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v110 + 16) = a24;
  *(_QWORD *)(v110 + 24) = a25;
  OUTLINED_FUNCTION_56_46();
  OUTLINED_FUNCTION_56_46();
  v191 = Dictionary.init(dictionaryLiteral:)();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  specialized static MultiwayViewConstraintsController.forEachOverallLayoutState(_:)((uint64_t)ObjectType, (uint64_t)partial apply for closure #8 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v109, (uint64_t)partial apply for closure #9 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v110, (uint64_t)partial apply for closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v172, (uint64_t)partial apply for closure #2 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v103, (uint64_t)partial apply for closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v104, (uint64_t)partial apply for closure #4 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v105, (uint64_t)partial apply for closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v106, (uint64_t)partial apply for closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v107, (uint64_t)partial apply for closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:), v108);
  v111 = v191;
  OUTLINED_FUNCTION_2_0();
  *v157 = v111;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v112 = 0x100000000;
  if (!v179)
    v112 = 0;
  v113 = 0x10000000000;
  if (!v181)
    v113 = 0;
  v114 = 0x1000000000000;
  if ((a36 & 1) == 0)
    v114 = 0;
  result = (char *)specialized Dictionary.subscript.getter(v176, a10, v186 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)a14 << 8) | (*(_QWORD *)v180 << 16) | (v178 << 24) | v112 | v113 | v114, v111);
  if (!result)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v115 = *((_QWORD *)result + 2);
  if (v115)
  {
    v116 = result + 40;
    do
    {
      v117 = (void (*)(uint64_t))*((_QWORD *)v116 - 1);
      v118 = swift_retain();
      v117(v118);
      swift_release();
      v116 += 16;
      --v115;
    }
    while (v115);
  }
  OUTLINED_FUNCTION_13_3();
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState] = v176;
  *(_QWORD *)&v187[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState] = a10;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState] = v186;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState] = a14;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState] = v180[0];
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState] = a20 & 1;
  outlined init with take of AspectRatio(a15, (uint64_t)&v187[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio]);
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState] = 0;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState] = v178;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState] = v179;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState] = v181;
  v187[OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive] = a36 & 1;

  if (one-time initialization token for logger != -1)
    swift_once();
  v119 = type metadata accessor for Logger();
  __swift_project_value_buffer(v119, (uint64_t)logger);
  v120 = Logger.logObject.getter();
  v121 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v120, v121))
  {
    v122 = OUTLINED_FUNCTION_105();
    v189 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v122 = 136316418;
    LOBYTE(v188) = v176;
    v123 = String.init<A>(reflecting:)();
    v188 = OUTLINED_FUNCTION_15_107(v123, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v122 + 12) = 2080;
    v188 = a10;
    v125 = OUTLINED_FUNCTION_16_103();
    v127 = OUTLINED_FUNCTION_15_107(v125, v126);
    OUTLINED_FUNCTION_8_121(v127);
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v122 + 22) = 2080;
    LOBYTE(v188) = v186;
    v128 = OUTLINED_FUNCTION_16_103();
    v130 = OUTLINED_FUNCTION_15_107(v128, v129);
    OUTLINED_FUNCTION_8_121(v130);
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v122 + 32) = 2080;
    LOBYTE(v188) = a14;
    v131 = OUTLINED_FUNCTION_16_103();
    v133 = OUTLINED_FUNCTION_15_107(v131, v132);
    OUTLINED_FUNCTION_8_121(v133);
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v122 + 42) = 2080;
    LOBYTE(v188) = v180[0];
    v134 = OUTLINED_FUNCTION_16_103();
    v136 = OUTLINED_FUNCTION_15_107(v134, v135);
    OUTLINED_FUNCTION_8_121(v136);
    OUTLINED_FUNCTION_30_4();
    *(_WORD *)(v122 + 52) = 2080;
    LOBYTE(v188) = a20 & 1;
    v137 = OUTLINED_FUNCTION_16_103();
    v139 = OUTLINED_FUNCTION_15_107(v137, v138);
    OUTLINED_FUNCTION_8_121(v139);
    OUTLINED_FUNCTION_30_4();
    _os_log_impl(&dword_1BD004000, v120, v121, "Initialized ConstraintsController with listState: %s controlsState: %s bannerState: %s localParticipantState: %s gridState: %s floatingControlsState: %s", (uint8_t *)v122, 0x3Eu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v190.receiver = v187;
  v190.super_class = ObjectType;
  v140 = objc_msgSendSuper2(&v190, sel_init);
  MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)();
  MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()();

  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return (char *)v140;
}

void closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a1 + 16;
  OUTLINED_FUNCTION_1();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    ParticipantListViewController.collectionView.getter();
    v7 = v6;

    if (v7)
    {
      objc_msgSend(v7, sel_setHidden_, a2 & 1);

    }
  }
  OUTLINED_FUNCTION_9_0();
}

void closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = a1 + 16;
  OUTLINED_FUNCTION_1();
  v4 = (void *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setHidden_, a2 & 1);

  }
  OUTLINED_FUNCTION_32();
}

void closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *v4 = 0x4043800000000000;
    InCallControlsViewController.topInset.didset();

  }
}

void closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *v4 = 0x4058400000000000;
    InCallControlsViewController.topInset.didset();

  }
}

void closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_topInset);
    swift_beginAccess();
    *v4 = 0x405C800000000000;
    InCallControlsViewController.topInset.didset();

  }
}

uint64_t closure #10 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)();
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;

  v24 = *a1;
  v25 = *((_QWORD *)a1 + 1);
  v84 = a1[19];
  v81 = a1[20];
  v82 = a1[21];
  v83 = a1[22];
  v78 = a1[18];
  v79 = a1[17];
  v80 = a1[16];
  if ((v78 & 1) != 0)
  {
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    *(_QWORD *)(v26 + 24) = a3;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v28 = v27;
    v29 = *(_QWORD *)(v27 + 16);
    if (v29 >= *(_QWORD *)(v27 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v69;
    }
    v30 = v24;
    *(_QWORD *)(v28 + 16) = v29 + 1;
    v31 = v28 + 16 * v29;
    v32 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else if ((a1[17] & 0x80) != 0 || !a1[16])
  {
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a2;
    *(_QWORD *)(v26 + 24) = a3;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v28 = v37;
    v38 = *(_QWORD *)(v37 + 16);
    v30 = v24;
    if (v38 >= *(_QWORD *)(v37 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v76;
    }
    *(_QWORD *)(v28 + 16) = v38 + 1;
    v31 = v28 + 16 * v38;
    v32 = (void (*)())thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a4;
    *(_QWORD *)(v26 + 24) = a5;
    swift_retain();
    swift_retain();
    specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v28 = v35;
    v36 = *(_QWORD *)(v35 + 16);
    if (v36 >= *(_QWORD *)(v35 + 24) >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v77;
    }
    v30 = v24;
    *(_QWORD *)(v28 + 16) = v36 + 1;
    v31 = v28 + 16 * v36;
    v32 = (void (*)())thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  *(_QWORD *)(v31 + 32) = v32;
  *(_QWORD *)(v31 + 40) = v26;
  swift_release();
  if ((v30 & 1) != 0)
  {
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = a8;
    *(_QWORD *)(v39 + 24) = a9;
    v40 = *(_QWORD *)(v28 + 16);
    v41 = *(_QWORD *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v40 >= v41 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v70;
    }
    *(_QWORD *)(v28 + 16) = v40 + 1;
    v42 = v28 + 16 * v40;
  }
  else
  {
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = a6;
    *(_QWORD *)(v39 + 24) = a7;
    v43 = *(_QWORD *)(v28 + 16);
    v44 = *(_QWORD *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v43 >= v44 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v71;
    }
    *(_QWORD *)(v28 + 16) = v43 + 1;
    v42 = v28 + 16 * v43;
  }
  *(_QWORD *)(v42 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(v42 + 40) = v39;
  swift_release();
  if ((_DWORD)v84)
  {
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = a12;
    *(_QWORD *)(v45 + 24) = a13;
    v46 = *(_QWORD *)(v28 + 16);
    v47 = *(_QWORD *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v46 >= v47 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v68;
    }
    *(_QWORD *)(v28 + 16) = v46 + 1;
    v48 = v28 + 16 * v46;
  }
  else
  {
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = a10;
    *(_QWORD *)(v45 + 24) = a11;
    v49 = *(_QWORD *)(v28 + 16);
    v50 = *(_QWORD *)(v28 + 24);
    swift_retain();
    swift_retain();
    if (v49 >= v50 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      v28 = v73;
    }
    *(_QWORD *)(v28 + 16) = v49 + 1;
    v48 = v28 + 16 * v49;
  }
  *(_QWORD *)(v48 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  *(_QWORD *)(v48 + 40) = v45;
  swift_release();
  if (v25 > 6)
  {
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    if (((1 << v25) & 0x13) != 0)
    {
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = a14;
      *(_QWORD *)(v51 + 24) = a15;
      v58 = *(_QWORD *)(v28 + 16);
      v59 = *(_QWORD *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v58 >= v59 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v28 = v72;
      }
      v55 = v82;
      v54 = v83;
      v56 = v81;
      *(_QWORD *)(v28 + 16) = v58 + 1;
      v57 = v28 + 16 * v58;
    }
    else if (((1 << v25) & 0x24) != 0)
    {
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = a16;
      *(_QWORD *)(v51 + 24) = a17;
      v52 = *(_QWORD *)(v28 + 16);
      v53 = *(_QWORD *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v52 >= v53 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v28 = v74;
      }
      v55 = v82;
      v54 = v83;
      v56 = v81;
      *(_QWORD *)(v28 + 16) = v52 + 1;
      v57 = v28 + 16 * v52;
    }
    else
    {
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = a18;
      *(_QWORD *)(v51 + 24) = a19;
      v60 = *(_QWORD *)(v28 + 16);
      v61 = *(_QWORD *)(v28 + 24);
      swift_retain();
      swift_retain();
      if (v60 >= v61 >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v28 = v75;
      }
      v55 = v82;
      v54 = v83;
      v56 = v81;
      *(_QWORD *)(v28 + 16) = v60 + 1;
      v57 = v28 + 16 * v60;
    }
    *(_QWORD *)(v57 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    *(_QWORD *)(v57 + 40) = v51;
    swift_release();
    v62 = 0x10000;
    if (!v78)
      v62 = 0;
    v63 = v80 | (v79 << 8) | v62 | (v84 << 24);
    v64 = 0x100000000;
    if (!v56)
      v64 = 0;
    v65 = 0x10000000000;
    if (!v55)
      v65 = 0;
    v66 = 0x1000000000000;
    if (!v54)
      v66 = 0;
    return specialized Dictionary._Variant.setValue(_:forKey:)(v28, v30, v25, v63 | v64 | v65 | v66);
  }
  return result;
}

uint64_t MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _BOOL8 v42;
  Swift::Int v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  char v74;
  unint64_t v75;
  int v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v2);
  result = (*(uint64_t (**)(uint64_t, unint64_t))(v3 + 144))(v2, v3);
  if ((result & 1) == 0)
    return result;
  v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  v63 = v7;
  v8 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects);
  swift_beginAccess();
  v62 = *v8 + 64;
  v9 = 1 << *(_BYTE *)(*v8 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(*v8 + 64);
  v64 = (unint64_t)(v9 + 63) >> 6;
  v67 = *v8;
  swift_bridgeObjectRetain();
  v12 = 0;
  v66 = v8;
  if (!v11)
    goto LABEL_6;
LABEL_5:
  v13 = __clz(__rbit64(v11));
  v14 = (v11 - 1) & v11;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    v19 = *(_QWORD *)(v67 + 48) + 24 * i;
    v77 = *(_BYTE *)v19;
    v80 = *(_QWORD *)(v19 + 8);
    v78 = *(unsigned __int8 *)(v19 + 16);
    v20 = *(char *)(v19 + 17);
    v21 = *(unsigned __int8 *)(v19 + 18);
    v79 = *(unsigned __int8 *)(v19 + 19);
    v76 = *(unsigned __int8 *)(v19 + 20);
    v22 = *(unsigned __int8 *)(v19 + 21);
    v23 = *(unsigned __int8 *)(v19 + 22);
    v24 = *(_QWORD *)(*(_QWORD *)(v67 + 56) + 8 * i);
    v68 = v14;
    v69 = v12;
    if ((v20 & 0x80000000) == 0)
    {
LABEL_21:
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = partial apply for closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(_QWORD *)(v25 + 24) = v63;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v55;
      }
      v26 = *(_QWORD *)(v24 + 16);
      if (v26 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v56;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v70 = v24;
      v27 = v24 + 16 * v26;
      goto LABEL_41;
    }
    if (v20 == -128)
    {
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(_QWORD *)(v25 + 24) = v61;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v57;
      }
      v28 = *(_QWORD *)(v24 + 16);
      if (v28 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v58;
      }
      *(_QWORD *)(v24 + 16) = v28 + 1;
      v70 = v24;
      v27 = v24 + 16 * v28;
    }
    else
    {
      if (v80 > 6 || ((1 << v80) & 0x6C) == 0)
        goto LABEL_21;
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:);
      *(_QWORD *)(v25 + 24) = v61;
      swift_bridgeObjectRetain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v59;
      }
      v30 = *(_QWORD *)(v24 + 16);
      if (v30 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v24 = v60;
      }
      *(_QWORD *)(v24 + 16) = v30 + 1;
      v70 = v24;
      v27 = v24 + 16 * v30;
    }
LABEL_41:
    *(_QWORD *)(v27 + 32) = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    *(_QWORD *)(v27 + 40) = v25;
    v71 = v20;
    v31 = v20;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = *v8;
    v81 = (_QWORD *)*v8;
    *v8 = 0x8000000000000000;
    v34 = v3 & 0xFF00000000000000;
    v72 = v21;
    v73 = v22;
    if (v21)
      v35 = 0x10000;
    else
      v35 = 0;
    if (v76)
      v36 = 0x100000000;
    else
      v36 = 0;
    if (v22)
      v37 = 0x10000000000;
    else
      v37 = 0;
    v74 = v23;
    if (v23)
      v38 = 0x1000000000000;
    else
      v38 = 0;
    v75 = (v34 | v78) & 0xFFFFFFFF00FF00FFLL | (unsigned __int16)(v31 << 8) | v35 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v79 << 24) | v36 | v37 | v38;
    v39 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v80, v75);
    v41 = *(_QWORD *)(v33 + 16);
    v42 = (v40 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v44 = v39;
    v45 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _NativeDictionary<MultiwayViewConstraintsController.OverallLayoutState, [()]>);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v43))
    {
      v65 = v65 & 0xFF00000000000000 | v78 | (v31 << 8) | v35 | (v79 << 24) | v36 | v37 | v38;
      v46 = specialized __RawDictionaryStorage.find<A>(_:)(v77, v80, v65);
      v48 = v73;
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_70;
      v44 = v46;
      v8 = v66;
      v3 = v75;
      v49 = v74;
    }
    else
    {
      v8 = v66;
      v3 = v75;
      v48 = v73;
      v49 = v74;
    }
    if ((v45 & 1) != 0)
    {
      v50 = v81[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v50 + 8 * v44) = v70;
    }
    else
    {
      v81[(v44 >> 6) + 8] |= 1 << v44;
      v51 = v81[6] + 24 * v44;
      *(_BYTE *)v51 = v77;
      *(_QWORD *)(v51 + 8) = v80;
      *(_BYTE *)(v51 + 16) = v78;
      *(_BYTE *)(v51 + 17) = v71;
      *(_BYTE *)(v51 + 18) = v72;
      *(_BYTE *)(v51 + 19) = v79;
      *(_BYTE *)(v51 + 20) = v76;
      *(_BYTE *)(v51 + 21) = v48;
      *(_BYTE *)(v51 + 22) = v49;
      *(_QWORD *)(v81[7] + 8 * v44) = v70;
      v52 = v81[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_67;
      v81[2] = v54;
    }
    *v8 = (uint64_t)v81;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v11 = v68;
    v12 = v69;
    if (v68)
      goto LABEL_5;
LABEL_6:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_68;
    if (v16 >= v64)
      goto LABEL_64;
    v17 = *(_QWORD *)(v62 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v64)
        goto LABEL_64;
      v17 = *(_QWORD *)(v62 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v64)
          goto LABEL_64;
        v17 = *(_QWORD *)(v62 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_19:
    v14 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v64)
  {
LABEL_64:
    swift_release();
    swift_release();
    return swift_release();
  }
  v17 = *(_QWORD *)(v62 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v64)
      goto LABEL_64;
    v17 = *(_QWORD *)(v62 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_69:
  __break(1u);
LABEL_70:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void MultiwayViewConstraintsController.updateMostRecentLocalParticipantCorner()()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v2 = *v1;
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
      return;
    v2 &= 0x3Fu;
  }
  MultiwayViewConstraintsController.localParticipantState.setter(v2, &OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
}

uint64_t MultiwayViewConstraintsController.didAddEffectsBrowser()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  char v7;
  char *v8;
  char v9;
  char *v10;
  char v11;
  char *v12;
  char v13;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v23[8];
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v1 = v0;
  v2 = (char *)(v0 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
  swift_beginAccess();
  v3 = *v2;
  v4 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
  swift_beginAccess();
  v5 = *v4;
  v6 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
  swift_beginAccess();
  v7 = *v6;
  v8 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v9 = *v8;
  v10 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
  swift_beginAccess();
  v11 = *v10;
  v12 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  swift_beginAccess();
  v13 = *v12;
  v14 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionsState);
  swift_beginAccess();
  v15 = *v14;
  v16 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_reactionPickerTipState);
  swift_beginAccess();
  v17 = *v16;
  v18 = (char *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_isLocalReactionActive);
  swift_beginAccess();
  v22 = *v18;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), v21);
  v23[0] = v3;
  v24 = v5;
  v25 = v7;
  v26 = v9;
  v27 = v11;
  v28 = v13;
  v29 = v15;
  v30 = v17;
  v31 = v22;
  (*(void (**)(_BYTE *, uint64_t))(v20 + 56))(v23, v21);
  v23[0] = v3;
  v24 = v5;
  v25 = v7;
  v26 = v9;
  v27 = v11;
  v28 = v13;
  v29 = v15;
  v30 = v17;
  v31 = v22;
  return MultiwayViewConstraintsController.applyEffects(for:)((uint64_t)v23);
}

Swift::Void __swiftcall MultiwayViewConstraintsController.update(remoteParticipantAspectRatio:)(CGSize remoteParticipantAspectRatio)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  OUTLINED_FUNCTION_123_5(OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout);
  v1 = OUTLINED_FUNCTION_24_75();
  v2(v1);
}

void closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setAlpha_, 1.0);

  }
}

void closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v2 = a1 + 16;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1C3B752C0](v2);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setAlpha_, 0.0);

  }
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v3);
  if (v6)
  {
    v7 = (void *)v6;
    objc_opt_self();
    v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
      objc_msgSend(v8, sel_hideBrowserAnimated_completion_, 1, 0);

  }
}

uint64_t MultiwayViewConstraintsController.applyEffects(for:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;

  v2 = *(_BYTE *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 17);
  v6 = *(unsigned __int8 *)(a1 + 18);
  v7 = *(unsigned __int8 *)(a1 + 19);
  v8 = *(unsigned __int8 *)(a1 + 20);
  v9 = *(unsigned __int8 *)(a1 + 21);
  v10 = *(unsigned __int8 *)(a1 + 22);
  v11 = (uint64_t *)(v1 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewStateEffects);
  swift_beginAccess();
  v12 = *v11;
  if (!*(_QWORD *)(v12 + 16))
    return swift_endAccess();
  v13 = 0x10000;
  if (!v6)
    v13 = 0;
  v14 = v4 | (v5 << 8) | v13 | (v7 << 24);
  v15 = 0x100000000;
  if (!v8)
    v15 = 0;
  v16 = 0x10000000000;
  if (!v9)
    v16 = 0;
  v17 = 0x1000000000000;
  if (!v10)
    v17 = 0;
  v18 = specialized __RawDictionaryStorage.find<A>(_:)(v2, v3, v14 | v15 | v16 | v17);
  if ((v19 & 1) == 0)
    return swift_endAccess();
  v20 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
  result = swift_endAccess();
  v22 = *(_QWORD *)(v20 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = v20 + 40;
    do
    {
      v24 = *(void (**)(uint64_t))(v23 - 8);
      v25 = swift_retain();
      v24(v25);
      swift_release();
      v23 += 16;
      --v22;
    }
    while (v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id MultiwayViewConstraintsController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MultiwayViewConstraintsController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MultiwayViewConstraintsController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void InCallBannerState.hash(into:)()
{
  OUTLINED_FUNCTION_35_55();
  OUTLINED_FUNCTION_0();
}

void protocol witness for Hashable.hashValue.getter in conformance InCallBannerState()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0);
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance InCallBannerState(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

void ReactionsState.hash(into:)()
{
  OUTLINED_FUNCTION_35_55();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ReactionsState()
{
  unsigned __int8 *v0;

  return specialized RawRepresentable<>.hashValue.getter(*v0);
}

uint64_t protocol witness for Hashable._rawHashValue(seed:) in conformance ReactionsState(uint64_t a1)
{
  unsigned __int8 *v1;

  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1);
}

uint64_t sub_1BD632454()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 1);
}

void partial apply for closure #2 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 0);
}

void partial apply for closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 1);
}

void partial apply for closure #4 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #3 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0, 0);
}

void partial apply for closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #5 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

void partial apply for closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #6 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

void partial apply for closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  uint64_t v0;

  closure #7 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(v0);
}

void partial apply for closure #8 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  partial apply for closure #1 in closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(1);
}

void partial apply for closure #9 in MultiwayViewConstraintsController.init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)()
{
  partial apply for closure #1 in closure #2 in RecentsListViewController.presentReportJunkAlert(_:completion:)(0);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in InCallBannerState()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [InCallBannerState] and conformance [A], &demangling cache variable for type metadata for [InCallBannerState]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReactionsState()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [ReactionsState] and conformance [A], &demangling cache variable for type metadata for [ReactionsState]);
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ReactionPickerTipState()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [ReactionPickerTipState] and conformance [A], &demangling cache variable for type metadata for [ReactionPickerTipState]);
}

unint64_t lazy protocol witness table accessor for type CaptionsLayoutState and conformance CaptionsLayoutState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState;
  if (!lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CaptionsLayoutState, &type metadata for CaptionsLayoutState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CaptionsLayoutState and conformance CaptionsLayoutState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in CaptionsLayoutState()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [CaptionsLayoutState] and conformance [A], &demangling cache variable for type metadata for [CaptionsLayoutState]);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.ParticipantListState, &type metadata for MultiwayViewConstraintsController.ParticipantListState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantListState and conformance MultiwayViewConstraintsController.ParticipantListState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.MultiwayCorner, &type metadata for MultiwayViewConstraintsController.MultiwayCorner);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.MultiwayCorner and conformance MultiwayViewConstraintsController.MultiwayCorner);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in MultiwayViewConstraintsController.MultiwayCorner()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [MultiwayViewConstraintsController.MultiwayCorner] and conformance [A], &demangling cache variable for type metadata for [MultiwayViewConstraintsController.MultiwayCorner]);
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.AccessibilityLocalParticipantState, &type metadata for MultiwayViewConstraintsController.AccessibilityLocalParticipantState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.AccessibilityLocalParticipantState and conformance MultiwayViewConstraintsController.AccessibilityLocalParticipantState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.LocalParticipantState, &type metadata for MultiwayViewConstraintsController.LocalParticipantState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.LocalParticipantState and conformance MultiwayViewConstraintsController.LocalParticipantState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.ShutterButtonState, &type metadata for MultiwayViewConstraintsController.ShutterButtonState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ShutterButtonState and conformance MultiwayViewConstraintsController.ShutterButtonState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.ParticipantGridState, &type metadata for MultiwayViewConstraintsController.ParticipantGridState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.ParticipantGridState and conformance MultiwayViewConstraintsController.ParticipantGridState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState;
  if (!lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for MultiwayViewConstraintsController.FloatingControlsState, &type metadata for MultiwayViewConstraintsController.FloatingControlsState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultiwayViewConstraintsController.FloatingControlsState and conformance MultiwayViewConstraintsController.FloatingControlsState);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in MultiwayViewConstraintsController.FloatingControlsState()
{
  return lazy protocol witness table accessor for type [SymbolImageDescribers.DrawerDisc] and conformance [A](&lazy protocol witness table cache variable for type [MultiwayViewConstraintsController.FloatingControlsState] and conformance [A], &demangling cache variable for type metadata for [MultiwayViewConstraintsController.FloatingControlsState]);
}

unint64_t lazy protocol witness table accessor for type ReactionsState and conformance ReactionsState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState;
  if (!lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ReactionsState, &type metadata for ReactionsState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionsState and conformance ReactionsState);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionPickerTipState and conformance ReactionPickerTipState()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState;
  if (!lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ReactionPickerTipState, &type metadata for ReactionPickerTipState);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerTipState and conformance ReactionPickerTipState);
  }
  return result;
}

void sub_1BD632934(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewConstraintsController.shutterButtonState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD632964(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewConstraintsController.isLocalReactionActive.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD63298C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewConstraintsController.participantListState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD6329A8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MultiwayViewConstraintsController.accessibilityLocalParticipantState.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD6329CC(unint64_t *a1)
{
  MultiwayViewConstraintsController.accessibilityLocalParticipantState.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD6329F0(unsigned __int8 *a1)
{
  MultiwayViewConstraintsController.localParticipantState.setter(*a1, &OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner);
  OUTLINED_FUNCTION_0();
}

void sub_1BD632A24(unsigned __int8 *a1)
{
  MultiwayViewConstraintsController.localParticipantState.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD632A50(uint64_t *a1)
{
  MultiwayViewConstraintsController.inCallControlsState.setter(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD632A7C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewConstraintsController.participantGridState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD632A9C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_65_6(a1);
  MultiwayViewConstraintsController.floatingControlsState.setter(v1);
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for InCallControlsState()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for InCallBannerState()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ReactionsState()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ReactionPickerTipState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for InCallBannerState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BD632B4C + 4 * byte_1BD66B220[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BD632B80 + 4 * byte_1BD66B21B[v4]))();
}

uint64_t sub_1BD632B80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632B88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD632B90);
  return result;
}

uint64_t sub_1BD632B9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD632BA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BD632BA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632BB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CaptionsLayoutState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t type metadata accessor for MultiwayViewConstraintsController()
{
  return objc_opt_self();
}

uint64_t method lookup function for MultiwayViewConstraintsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultiwayViewConstraintsController.__allocating_init(layoutIdiom:containingView:participantListViewController:participantListState:gridView:participantGridState:controlsViewController:callControlsViewController:inCallControlsState:inCallBannerHostViewController:inCallConversationBannerState:localParticipantView:localParticipantState:localParticipantAspectRatio:effectsControlsView:effectsView:effectsBrowserViewController:floatingControlsView:floatingControlsState:participantLabelsView:bottomControlsView:oneToOneShutterButton:setShutterButtonHidden:deviceOrientation:changeLayoutButton:changeLayoutButtonBackground:topCornerButtonsStackView:captionsView:captionsState:reactionsViewController:reactionsState:reactionPickerTipView:reactionPickerTipState:isLocalReactionActive:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v6 + 264))(a1, a2, a3, a4 & 1, a5, a6 & 1);
}

void type metadata accessor for MultiwayViewConstraintsController.ParticipantListState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for MultiwayViewConstraintsController.MultiwayCorner(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD632CFC + 4 * byte_1BD66B22A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD632D30 + 4 * byte_1BD66B225[v4]))();
}

uint64_t sub_1BD632D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD632D40);
  return result;
}

uint64_t sub_1BD632D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD632D54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD632D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.MultiwayCorner()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for MultiwayViewConstraintsController.AccessibilityLocalParticipantState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for MultiwayViewConstraintsController.LocalParticipantState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3E)
  {
    if (a2 + 194 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 194) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 195;
    return v5 + 1;
  }
LABEL_17:
  v5 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v5 >= 0x3D)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for MultiwayViewConstraintsController.LocalParticipantState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_1BD632E64 + 4 * byte_1BD66B234[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_1BD632E98 + 4 * byte_1BD66B22F[v4]))();
}

uint64_t sub_1BD632E98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632EA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD632EA8);
  return result;
}

uint64_t sub_1BD632EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD632EC8);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BD632ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for MultiwayViewConstraintsController.LocalParticipantState(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return (v1 & 3u) + 2;
}

_BYTE *destructiveInjectEnumTag for MultiwayViewConstraintsController.LocalParticipantState(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
    v2 = *result & 3 | ((_BYTE)a2 << 6);
  else
    v2 = (a2 + 2) & 3 | 0x80;
  *result = v2;
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.LocalParticipantState()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for MultiwayViewConstraintsController.ShutterButtonState()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for MultiwayViewConstraintsController.ParticipantGridState()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for ReactionsState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD632F98 + 4 * byte_1BD66B23E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD632FCC + 4 * byte_1BD66B239[v4]))();
}

uint64_t sub_1BD632FCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632FD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD632FDCLL);
  return result;
}

uint64_t sub_1BD632FE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD632FF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD632FF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD632FFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.FloatingControlsState()
{
  OUTLINED_FUNCTION_34_0();
}

__n128 __swift_memcpy23_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 15) = *(_QWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MultiwayViewConstraintsController.OverallLayoutState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[23])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiwayViewConstraintsController.OverallLayoutState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 23) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 23) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for MultiwayViewConstraintsController.OverallLayoutState()
{
  OUTLINED_FUNCTION_34_0();
}

void partial apply for closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  uint64_t v0;

  closure #1 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(v0);
}

uint64_t sub_1BD6330C4()
{
  swift_release();
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

void partial apply for closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)()
{
  uint64_t v0;

  closure #2 in MultiwayViewConstraintsController.updateViewStateEffects(with:effectsView:effectsBrowserViewController:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BD6330EC()
{
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_239();
  return swift_deallocObject();
}

uint64_t ResourceBundleClass.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

objc_class *one-time initialization function for resourceBundle()
{
  uint64_t ObjCClassFromMetadata;
  objc_class *result;

  type metadata accessor for ResourceBundleClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  resourceBundle.super.isa = result;
  return result;
}

uint64_t one-time initialization function for audioMuteMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.audioMuteMac, 0x756D2D6F69647561, 0xEE0063616D5F6574);
}

uint64_t ImageResource.audioMuteMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for audioMuteMac, (uint64_t)static ImageResource.audioMuteMac);
}

uint64_t static ImageResource.audioMuteMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for audioMuteMac, (uint64_t)static ImageResource.audioMuteMac, a1);
}

uint64_t one-time initialization function for badConnectionLarge(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.badConnectionLarge, 0xD000000000000014, 0x80000001BD66C310);
}

uint64_t ImageResource.badConnectionLarge.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for badConnectionLarge, (uint64_t)static ImageResource.badConnectionLarge);
}

uint64_t ImageResource.audioMuteMac.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_0_166();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static ImageResource.badConnectionLarge.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for badConnectionLarge, (uint64_t)static ImageResource.badConnectionLarge, a1);
}

uint64_t static ImageResource.audioMuteMac.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_0_166();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t one-time initialization function for badConnectionSmall(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.badConnectionSmall, 0xD000000000000014, 0x80000001BD66C2F0);
}

uint64_t ImageResource.badConnectionSmall.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for badConnectionSmall, (uint64_t)static ImageResource.badConnectionSmall);
}

uint64_t static ImageResource.badConnectionSmall.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for badConnectionSmall, (uint64_t)static ImageResource.badConnectionSmall, a1);
}

uint64_t one-time initialization function for callRecordingEducationScreen(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.callRecordingEducationScreen, 0xD00000000000001FLL, 0x80000001BD66C330);
}

uint64_t ImageResource.callRecordingEducationScreen.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for callRecordingEducationScreen, (uint64_t)static ImageResource.callRecordingEducationScreen);
}

uint64_t static ImageResource.callRecordingEducationScreen.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for callRecordingEducationScreen, (uint64_t)static ImageResource.callRecordingEducationScreen, a1);
}

uint64_t one-time initialization function for contactGlow(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.contactGlow, 0x5F746361746E6F63, 0xEC000000776F6C67);
}

uint64_t ImageResource.contactGlow.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for contactGlow, (uint64_t)static ImageResource.contactGlow);
}

uint64_t static ImageResource.contactGlow.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for contactGlow, (uint64_t)static ImageResource.contactGlow, a1);
}

uint64_t one-time initialization function for contactSilhouette(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.contactSilhouette, 0xD000000000000012, 0x80000001BD66C2C0);
}

uint64_t ImageResource.contactSilhouette.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for contactSilhouette, (uint64_t)static ImageResource.contactSilhouette);
}

uint64_t static ImageResource.contactSilhouette.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for contactSilhouette, (uint64_t)static ImageResource.contactSilhouette, a1);
}

uint64_t one-time initialization function for drawerAddParticipantMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerAddParticipantMac, 0xD00000000000001ALL, 0x80000001BD69B7C0);
}

uint64_t ImageResource.drawerAddParticipantMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerAddParticipantMac, (uint64_t)static ImageResource.drawerAddParticipantMac);
}

uint64_t static ImageResource.drawerAddParticipantMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerAddParticipantMac, (uint64_t)static ImageResource.drawerAddParticipantMac, a1);
}

uint64_t one-time initialization function for drawerEffects(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerEffects, 0x655F726577617264, 0xEE00737463656666);
}

uint64_t ImageResource.drawerEffects.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerEffects, (uint64_t)static ImageResource.drawerEffects);
}

uint64_t static ImageResource.drawerEffects.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerEffects, (uint64_t)static ImageResource.drawerEffects, a1);
}

uint64_t one-time initialization function for drawerEffectsSelected(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerEffectsSelected, 0xD000000000000017, 0x80000001BD66C0A0);
}

uint64_t ImageResource.drawerEffectsSelected.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerEffectsSelected, (uint64_t)static ImageResource.drawerEffectsSelected);
}

uint64_t static ImageResource.drawerEffectsSelected.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerEffectsSelected, (uint64_t)static ImageResource.drawerEffectsSelected, a1);
}

uint64_t one-time initialization function for drawerExpand(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerExpand, 0x655F726577617264, 0xED0000646E617078);
}

uint64_t ImageResource.drawerExpand.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerExpand, (uint64_t)static ImageResource.drawerExpand);
}

uint64_t static ImageResource.drawerExpand.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerExpand, (uint64_t)static ImageResource.drawerExpand, a1);
}

uint64_t one-time initialization function for drawerFacetimeIconMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerFacetimeIconMac, 0xD000000000000018, 0x80000001BD69B7A0);
}

uint64_t ImageResource.drawerFacetimeIconMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerFacetimeIconMac, (uint64_t)static ImageResource.drawerFacetimeIconMac);
}

uint64_t static ImageResource.drawerFacetimeIconMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerFacetimeIconMac, (uint64_t)static ImageResource.drawerFacetimeIconMac, a1);
}

uint64_t one-time initialization function for drawerGlow(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerGlow, 0x675F726577617264, 0xEB00000000776F6CLL);
}

uint64_t ImageResource.drawerGlow.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerGlow, (uint64_t)static ImageResource.drawerGlow);
}

uint64_t static ImageResource.drawerGlow.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerGlow, (uint64_t)static ImageResource.drawerGlow, a1);
}

uint64_t one-time initialization function for drawerHotdog(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerHotdog, 0x685F726577617264, 0xED0000676F64746FLL);
}

uint64_t ImageResource.drawerHotdog.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerHotdog, (uint64_t)static ImageResource.drawerHotdog);
}

uint64_t static ImageResource.drawerHotdog.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerHotdog, (uint64_t)static ImageResource.drawerHotdog, a1);
}

uint64_t one-time initialization function for drawerJoinVideoCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerJoinVideoCallMac, 0xD00000000000001ALL, 0x80000001BD69B780);
}

uint64_t ImageResource.drawerJoinVideoCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerJoinVideoCallMac, (uint64_t)static ImageResource.drawerJoinVideoCallMac);
}

uint64_t static ImageResource.drawerJoinVideoCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerJoinVideoCallMac, (uint64_t)static ImageResource.drawerJoinVideoCallMac, a1);
}

uint64_t one-time initialization function for drawerLeaveCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerLeaveCallMac, 0xD000000000000015, 0x80000001BD69B760);
}

uint64_t ImageResource.drawerLeaveCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerLeaveCallMac, (uint64_t)static ImageResource.drawerLeaveCallMac);
}

uint64_t static ImageResource.drawerLeaveCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerLeaveCallMac, (uint64_t)static ImageResource.drawerLeaveCallMac, a1);
}

uint64_t one-time initialization function for drawerOpenMessagesMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerOpenMessagesMac, 0xD000000000000018, 0x80000001BD69B740);
}

uint64_t ImageResource.drawerOpenMessagesMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerOpenMessagesMac, (uint64_t)static ImageResource.drawerOpenMessagesMac);
}

uint64_t static ImageResource.drawerOpenMessagesMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerOpenMessagesMac, (uint64_t)static ImageResource.drawerOpenMessagesMac, a1);
}

uint64_t one-time initialization function for drawerRingBackground(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.drawerRingBackground, 0xD000000000000016, 0x80000001BD66C0D0);
}

uint64_t ImageResource.drawerRingBackground.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for drawerRingBackground, (uint64_t)static ImageResource.drawerRingBackground);
}

uint64_t static ImageResource.drawerRingBackground.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for drawerRingBackground, (uint64_t)static ImageResource.drawerRingBackground, a1);
}

uint64_t one-time initialization function for endCallMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.endCallMac, 0x6C6C61632D646E65, 0xEC00000063616D5FLL);
}

uint64_t ImageResource.endCallMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for endCallMac, (uint64_t)static ImageResource.endCallMac);
}

uint64_t static ImageResource.endCallMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for endCallMac, (uint64_t)static ImageResource.endCallMac, a1);
}

uint64_t one-time initialization function for infoMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.infoMac, 0x63616D5F6F666E69, 0xE800000000000000);
}

uint64_t ImageResource.infoMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for infoMac, (uint64_t)static ImageResource.infoMac);
}

uint64_t static ImageResource.infoMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for infoMac, (uint64_t)static ImageResource.infoMac, a1);
}

uint64_t one-time initialization function for joinAudioButton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.joinAudioButton, 0xD000000000000011, 0x80000001BD67AA50);
}

uint64_t ImageResource.joinAudioButton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for joinAudioButton, (uint64_t)static ImageResource.joinAudioButton);
}

uint64_t static ImageResource.joinAudioButton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for joinAudioButton, (uint64_t)static ImageResource.joinAudioButton, a1);
}

uint64_t one-time initialization function for joinButton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.joinButton, 0x7475622D6E696F6ALL, 0xEB000000006E6F74);
}

uint64_t ImageResource.joinButton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for joinButton, (uint64_t)static ImageResource.joinButton);
}

uint64_t static ImageResource.joinButton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for joinButton, (uint64_t)static ImageResource.joinButton, a1);
}

uint64_t one-time initialization function for macControlsBlurMask(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.macControlsBlurMask, 0xD000000000000016, 0x80000001BD675F70);
}

uint64_t ImageResource.macControlsBlurMask.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for macControlsBlurMask, (uint64_t)static ImageResource.macControlsBlurMask);
}

uint64_t static ImageResource.macControlsBlurMask.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for macControlsBlurMask, (uint64_t)static ImageResource.macControlsBlurMask, a1);
}

uint64_t one-time initialization function for participantCollapse(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantCollapse, 0xD000000000000014, 0x80000001BD66C290);
}

uint64_t ImageResource.participantCollapse.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantCollapse, (uint64_t)static ImageResource.participantCollapse);
}

uint64_t static ImageResource.participantCollapse.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantCollapse, (uint64_t)static ImageResource.participantCollapse, a1);
}

uint64_t one-time initialization function for participantCollapseMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantCollapseMac, 0xD000000000000018, 0x80000001BD69B720);
}

uint64_t ImageResource.participantCollapseMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantCollapseMac, (uint64_t)static ImageResource.participantCollapseMac);
}

uint64_t static ImageResource.participantCollapseMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantCollapseMac, (uint64_t)static ImageResource.participantCollapseMac, a1);
}

uint64_t one-time initialization function for participantExpand(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantExpand, 0xD000000000000012, 0x80000001BD66C270);
}

uint64_t ImageResource.participantExpand.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantExpand, (uint64_t)static ImageResource.participantExpand);
}

uint64_t static ImageResource.participantExpand.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantExpand, (uint64_t)static ImageResource.participantExpand, a1);
}

uint64_t one-time initialization function for participantExpandMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantExpandMac, 0xD000000000000016, 0x80000001BD69B700);
}

uint64_t ImageResource.participantExpandMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantExpandMac, (uint64_t)static ImageResource.participantExpandMac);
}

uint64_t static ImageResource.participantExpandMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantExpandMac, (uint64_t)static ImageResource.participantExpandMac, a1);
}

uint64_t one-time initialization function for participantShutter(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.participantShutter, 0xD000000000000013, 0x80000001BD66C250);
}

uint64_t ImageResource.participantShutter.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for participantShutter, (uint64_t)static ImageResource.participantShutter);
}

uint64_t static ImageResource.participantShutter.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for participantShutter, (uint64_t)static ImageResource.participantShutter, a1);
}

uint64_t one-time initialization function for pausedLarge(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.pausedLarge, 0x6C5F646573756170, 0xEC00000065677261);
}

uint64_t ImageResource.pausedLarge.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for pausedLarge, (uint64_t)static ImageResource.pausedLarge);
}

uint64_t static ImageResource.pausedLarge.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for pausedLarge, (uint64_t)static ImageResource.pausedLarge, a1);
}

uint64_t one-time initialization function for pausedSmall(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.pausedSmall, 0x735F646573756170, 0xEC0000006C6C616DLL);
}

uint64_t ImageResource.pausedSmall.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for pausedSmall, (uint64_t)static ImageResource.pausedSmall);
}

uint64_t static ImageResource.pausedSmall.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for pausedSmall, (uint64_t)static ImageResource.pausedSmall, a1);
}

uint64_t one-time initialization function for rosterOnCanvas(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.rosterOnCanvas, 0xD000000000000010, 0x80000001BD66C230);
}

uint64_t ImageResource.rosterOnCanvas.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for rosterOnCanvas, (uint64_t)static ImageResource.rosterOnCanvas);
}

uint64_t static ImageResource.rosterOnCanvas.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for rosterOnCanvas, (uint64_t)static ImageResource.rosterOnCanvas, a1);
}

uint64_t one-time initialization function for screenshare(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshare, 0x68736E6565726373, 0xEB00000000657261);
}

uint64_t ImageResource.screenshare.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshare, (uint64_t)static ImageResource.screenshare);
}

uint64_t static ImageResource.screenshare.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshare, (uint64_t)static ImageResource.screenshare, a1);
}

uint64_t one-time initialization function for screenshareApp(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareApp, 0x68736E6565726373, 0xEF7070612D657261);
}

uint64_t ImageResource.screenshareApp.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareApp, (uint64_t)static ImageResource.screenshareApp);
}

uint64_t static ImageResource.screenshareApp.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareApp, (uint64_t)static ImageResource.screenshareApp, a1);
}

uint64_t one-time initialization function for screenshareSharebutton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareSharebutton, 0xD000000000000017, 0x80000001BD66C200);
}

uint64_t ImageResource.screenshareSharebutton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareSharebutton, (uint64_t)static ImageResource.screenshareSharebutton);
}

uint64_t static ImageResource.screenshareSharebutton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareSharebutton, (uint64_t)static ImageResource.screenshareSharebutton, a1);
}

uint64_t one-time initialization function for screenshareMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.screenshareMac, 0x68736E6565726373, 0xEF63616D5F657261);
}

uint64_t ImageResource.screenshareMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for screenshareMac, (uint64_t)static ImageResource.screenshareMac);
}

uint64_t static ImageResource.screenshareMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for screenshareMac, (uint64_t)static ImageResource.screenshareMac, a1);
}

uint64_t one-time initialization function for send(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.send, 1684956531, 0xE400000000000000);
}

uint64_t ImageResource.send.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for send, (uint64_t)static ImageResource.send);
}

uint64_t static ImageResource.send.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for send, (uint64_t)static ImageResource.send, a1);
}

uint64_t one-time initialization function for shareplay(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.shareplay, 0x616C706572616873, 0xE900000000000079);
}

uint64_t ImageResource.shareplay.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for shareplay, (uint64_t)static ImageResource.shareplay);
}

uint64_t static ImageResource.shareplay.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for shareplay, (uint64_t)static ImageResource.shareplay, a1);
}

uint64_t one-time initialization function for shareplaySharebutton(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.shareplaySharebutton, 0xD000000000000015, 0x80000001BD66C1D0);
}

uint64_t ImageResource.shareplaySharebutton.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for shareplaySharebutton, (uint64_t)static ImageResource.shareplaySharebutton);
}

uint64_t static ImageResource.shareplaySharebutton.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for shareplaySharebutton, (uint64_t)static ImageResource.shareplaySharebutton, a1);
}

uint64_t one-time initialization function for videoDisableMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.videoDisableMac, 0xD000000000000011, 0x80000001BD69B6E0);
}

uint64_t ImageResource.videoDisableMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for videoDisableMac, (uint64_t)static ImageResource.videoDisableMac);
}

uint64_t static ImageResource.videoDisableMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for videoDisableMac, (uint64_t)static ImageResource.videoDisableMac, a1);
}

uint64_t one-time initialization function for videoMac(uint64_t a1)
{
  return one-time initialization function for audioMuteMac(a1, static ImageResource.videoMac, 0x616D5F6F65646976, 0xE900000000000063);
}

uint64_t one-time initialization function for audioMuteMac(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_0_166();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (one-time initialization token for resourceBundle != -1)
    swift_once();
  return MEMORY[0x1C3B7097C](a3, a4, resourceBundle.super.isa);
}

uint64_t ImageResource.videoMac.unsafeMutableAddressor()
{
  return ImageResource.audioMuteMac.unsafeMutableAddressor(&one-time initialization token for videoMac, (uint64_t)static ImageResource.videoMac);
}

uint64_t static ImageResource.videoMac.getter@<X0>(uint64_t a1@<X8>)
{
  return static ImageResource.audioMuteMac.getter(&one-time initialization token for videoMac, (uint64_t)static ImageResource.videoMac, a1);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

NSURLRequest __swiftcall URLRequest._bridgeToObjectiveC()()
{
  objc_class *v0;
  NSURLRequestInternal *v1;
  NSURLRequest result;

  v0 = (objc_class *)MEMORY[0x1E0CADEE8]();
  result._internal = v1;
  result.super.isa = v0;
  return result;
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t type metadata accessor for URLRequest()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t static FormatStyle.list<A>(type:width:)()
{
  return MEMORY[0x1E0CADFC0]();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t DataProtocol.copyBytes(to:)()
{
  return MEMORY[0x1E0CAE530]();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)MEMORY[0x1E0CAE610]();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t Notification.init(name:object:userInfo:)()
{
  return MEMORY[0x1E0CAE620]();
}

uint64_t Notification.name.getter()
{
  return MEMORY[0x1E0CAE628]();
}

uint64_t Notification.object.getter()
{
  return MEMORY[0x1E0CAE630]();
}

uint64_t Notification.userInfo.getter()
{
  return MEMORY[0x1E0CAE638]();
}

uint64_t type metadata accessor for Notification()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t URLComponents.queryItems.setter()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t URLComponents.url(relativeTo:)()
{
  return MEMORY[0x1E0CAE7C0]();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t URLComponents.url.getter()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t URLComponents.host.setter()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t URLComponents.path.setter()
{
  return MEMORY[0x1E0CAE808]();
}

uint64_t URLComponents.scheme.setter()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t URLComponents.fragment.setter()
{
  return MEMORY[0x1E0CAE870]();
}

uint64_t URLComponents.init()()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t type metadata accessor for URLComponents()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t type metadata accessor for __DataStorage()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t static AttributeScope.decodingConfiguration.getter()
{
  return MEMORY[0x1E0CAE920]();
}

uint64_t static AttributeScope.encodingConfiguration.getter()
{
  return MEMORY[0x1E0CAE928]();
}

uint64_t DateComponents.second.getter()
{
  return MEMORY[0x1E0CAEA48]();
}

uint64_t type metadata accessor for DateComponents()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t AttributeScopes.FoundationAttributes.link.getter()
{
  return MEMORY[0x1E0CAEE08]();
}

uint64_t type metadata accessor for AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute.AnnouncementPriority()
{
  return MEMORY[0x1E0C8ECC0]();
}

uint64_t AttributeScopes.AccessibilityAttributes.accessibilitySpeechAnnouncementPriority.getter()
{
  return MEMORY[0x1E0C8ED08]();
}

uint64_t AttributeScopes.UIKitAttributes.attachment.getter()
{
  return MEMORY[0x1E0DC1990]();
}

uint64_t AttributeScopes.UIKitAttributes.paragraphStyle.getter()
{
  return MEMORY[0x1E0DC19A0]();
}

uint64_t AttributeScopes.UIKitAttributes.underlineColor.getter()
{
  return MEMORY[0x1E0DC19A8]();
}

uint64_t AttributeScopes.UIKitAttributes.underlineStyle.getter()
{
  return MEMORY[0x1E0DC19B0]();
}

uint64_t AttributeScopes.UIKitAttributes.font.getter()
{
  return MEMORY[0x1E0DC19E0]();
}

uint64_t type metadata accessor for AttributeScopes.UIKitAttributes()
{
  return MEMORY[0x1E0DC1A00]();
}

uint64_t AttributeScopes.SwiftUIAttributes.underlineStyle.getter()
{
  return MEMORY[0x1E0CD81B0]();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t AttributedString.characters.getter()
{
  return MEMORY[0x1E0CAEEE0]();
}

uint64_t AttributedString.CharacterView.startIndex.getter()
{
  return MEMORY[0x1E0CAEEF0]();
}

uint64_t AttributedString.CharacterView._index(_:offsetBy:)()
{
  return MEMORY[0x1E0CAEF08]();
}

uint64_t type metadata accessor for AttributedString.CharacterView()
{
  return MEMORY[0x1E0CAEF10]();
}

uint64_t AttributedString.subscript.setter()
{
  return MEMORY[0x1E0CAEF48]();
}

uint64_t AttributedString.setAttributes(_:)()
{
  return MEMORY[0x1E0CAEF58]();
}

uint64_t AttributedString.init(stringLiteral:)()
{
  return MEMORY[0x1E0CAEF60]();
}

uint64_t AttributedString.mergeAttributes(_:mergePolicy:)()
{
  return MEMORY[0x1E0CAEF78]();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return MEMORY[0x1E0CAEF88]();
}

uint64_t type metadata accessor for AttributedString.AttributeMergePolicy()
{
  return MEMORY[0x1E0CAEFE8]();
}

uint64_t type metadata accessor for AttributedString.InterpolationOptions()
{
  return MEMORY[0x1E0CAEFF0]();
}

uint64_t AttributedString.Runs.AttributesSlice1.makeIterator()()
{
  return MEMORY[0x1E0CAF0C8]();
}

uint64_t AttributedString.Runs.AttributesSlice1.Iterator.next()()
{
  return MEMORY[0x1E0CAF0D0]();
}

uint64_t AttributedString.Runs.Run.subscript.getter()
{
  return MEMORY[0x1E0CAF120]();
}

uint64_t AttributedString.Runs.Run.range.getter()
{
  return MEMORY[0x1E0CAF130]();
}

uint64_t type metadata accessor for AttributedString.Runs.Run()
{
  return MEMORY[0x1E0CAF138]();
}

uint64_t type metadata accessor for AttributedString.Runs.Index()
{
  return MEMORY[0x1E0CAF150]();
}

uint64_t type metadata accessor for AttributedString.Runs()
{
  return MEMORY[0x1E0CAF160]();
}

uint64_t AttributedString.Runs.subscript.getter()
{
  return MEMORY[0x1E0CAF188]();
}

uint64_t AttributedString.runs.getter()
{
  return MEMORY[0x1E0CAF1A0]();
}

uint64_t type metadata accessor for AttributedString.Index()
{
  return MEMORY[0x1E0CAF1B0]();
}

uint64_t AttributedString.append<A>(_:)()
{
  return MEMORY[0x1E0CAF1D8]();
}

uint64_t AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)()
{
  return MEMORY[0x1E0CAF220]();
}

uint64_t AttributedString.init(localized:options:table:bundle:locale:comment:)()
{
  return MEMORY[0x1E0CAF228]();
}

uint64_t AttributedString.init()()
{
  return MEMORY[0x1E0CAF238]();
}

uint64_t type metadata accessor for AttributedString()
{
  return MEMORY[0x1E0CAF240]();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return MEMORY[0x1E0CAF278]();
}

uint64_t AttributedString.subscript.modify()
{
  return MEMORY[0x1E0CAF2B8]();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5;
  void *v6;
  Swift::String result;

  v5 = MEMORY[0x1E0CAF328](_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.subscript.setter()
{
  return MEMORY[0x1E0CAF400]();
}

uint64_t AttributeContainer.subscript.getter()
{
  return MEMORY[0x1E0CAF418]();
}

uint64_t AttributeContainer.Builder.callAsFunction(_:)()
{
  return MEMORY[0x1E0CAF438]();
}

uint64_t AttributeContainer.init()()
{
  return MEMORY[0x1E0CAF458]();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return MEMORY[0x1E0CAF460]();
}

uint64_t AttributeContainer.init(_:)()
{
  return MEMORY[0x1E0CAF480]();
}

uint64_t static AttributedStringKey.runBoundaries.getter()
{
  return MEMORY[0x1E0CAF558]();
}

uint64_t static AttributedStringKey.inheritedByAddedText.getter()
{
  return MEMORY[0x1E0CAF560]();
}

uint64_t static AttributedStringKey.invalidationConditions.getter()
{
  return MEMORY[0x1E0CAF568]();
}

uint64_t AttributedSubstring.subscript.setter()
{
  return MEMORY[0x1E0CAF578]();
}

uint64_t AttributedSubstring.setAttributes(_:)()
{
  return MEMORY[0x1E0CAF588]();
}

uint64_t AttributedSubstring.mergeAttributes(_:mergePolicy:)()
{
  return MEMORY[0x1E0CAF590]();
}

uint64_t PersonNameComponents.givenName.setter()
{
  return MEMORY[0x1E0CAF6F8]();
}

uint64_t PersonNameComponents.familyName.setter()
{
  return MEMORY[0x1E0CAF708]();
}

uint64_t PersonNameComponents.middleName.setter()
{
  return MEMORY[0x1E0CAF718]();
}

uint64_t PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)()
{
  return MEMORY[0x1E0CAF720]();
}

NSPersonNameComponents __swiftcall PersonNameComponents._bridgeToObjectiveC()()
{
  objc_class *v0;
  void *v1;
  NSPersonNameComponents result;

  v0 = (objc_class *)MEMORY[0x1E0CAF750]();
  result._private = v1;
  result.super.isa = v0;
  return result;
}

uint64_t static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CAF768]();
}

uint64_t PersonNameComponents.init()()
{
  return MEMORY[0x1E0CAF788]();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return MEMORY[0x1E0CAF790]();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return MEMORY[0x1E0CAF7E0]();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return MEMORY[0x1E0CAF8A0]();
}

{
  return MEMORY[0x1E0CAF8A8]();
}

uint64_t _convertErrorToNSError(_:)()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t _convertNSErrorToError(_:)()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return MEMORY[0x1E0CAFB50]();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t static DecodableAttributedStringKey<>.decode(from:)()
{
  return MEMORY[0x1E0CAFC20]();
}

uint64_t static EncodableAttributedStringKey<>.encode(_:to:)()
{
  return MEMORY[0x1E0CAFC30]();
}

uint64_t static MarkdownDecodableAttributedStringKey<>.decodeMarkdown(from:)()
{
  return MEMORY[0x1E0CAFD00]();
}

uint64_t static MarkdownDecodableAttributedStringKey.markdownName.getter()
{
  return MEMORY[0x1E0CAFD08]();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return MEMORY[0x1E0CAFD10]();
}

uint64_t URL.baseURL.getter()
{
  return MEMORY[0x1E0CAFD28]();
}

uint64_t URL.isFileURL.getter()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t URL.relativePath.getter()
{
  return MEMORY[0x1E0CAFD48]();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t URL.absoluteString.getter()
{
  return MEMORY[0x1E0CAFDA0]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
  MEMORY[0x1E0CAFE38](retstr);
}

uint64_t static URL.== infix(_:_:)()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t URL.path.getter()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t URL.init(filePath:directoryHint:relativeTo:)()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t Data.InlineData.init(_:)()
{
  return MEMORY[0x1E0CB0080]();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
  MEMORY[0x1E0CB0088]();
}

uint64_t Data.LargeSlice.init(_:)()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t Data.init(contentsOf:options:)()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t Data.InlineSlice.init(_:)()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t Data._Representation.init(count:)()
{
  return MEMORY[0x1E0CB0178]();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t Data._Representation.init(_:)()
{
  return MEMORY[0x1E0CB01B8]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x1E0CB01F0]();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t Data.count.getter()
{
  return MEMORY[0x1E0CB0260]();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t static Date.distantPast.getter()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return MEMORY[0x1E0CB0680]();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)MEMORY[0x1E0CB06B8]();
}

uint64_t static Date.> infix(_:_:)()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t static Date.< infix(_:_:)()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t static Date.+ infix(_:_:)()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return MEMORY[0x1E0CB0700]();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t static Date.== infix(_:_:)()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t static Date.now.getter()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t Date.compare(_:)()
{
  return MEMORY[0x1E0CB0820]();
}

uint64_t Date.distance(to:)()
{
  return MEMORY[0x1E0CB0830]();
}

uint64_t Date.init()()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t type metadata accessor for Date()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t UUID.init(uuidString:)()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x1E0CB0910]();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)MEMORY[0x1E0CB0930]();
}

uint64_t static UUID.== infix(_:_:)()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t UUID.init(uuid:)()
{
  return MEMORY[0x1E0CB0970]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t Locale.init(identifier:)()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t static Locale.preferredLanguages.getter()
{
  return MEMORY[0x1E0CB0BD8]();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)MEMORY[0x1E0CB0BE0]();
}

uint64_t static Locale.current.getter()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t type metadata accessor for Locale()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return MEMORY[0x1E0CB0F80]();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t Calendar.weekdaySymbols.getter()
{
  return MEMORY[0x1E0CB0FC8]();
}

uint64_t Calendar.isDateInYesterday(_:)()
{
  return MEMORY[0x1E0CB1008]();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t Calendar.isDate(_:equalTo:toGranularity:)()
{
  return MEMORY[0x1E0CB10A0]();
}

uint64_t static Calendar.current.getter()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t Calendar.component(_:from:)()
{
  return MEMORY[0x1E0CB11E0]();
}

uint64_t type metadata accessor for Calendar()
{
  return MEMORY[0x1E0CB11F0]();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)MEMORY[0x1E0CB15E8]();
}

uint64_t static IndexPath.== infix(_:_:)()
{
  return MEMORY[0x1E0CB1600]();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1608]();
}

uint64_t IndexPath.init(row:section:)()
{
  return MEMORY[0x1E0DC1A20]();
}

uint64_t IndexPath.row.getter()
{
  return MEMORY[0x1E0DC1A30]();
}

uint64_t IndexPath.init(item:section:)()
{
  return MEMORY[0x1E0DC1A38]();
}

uint64_t IndexPath.item.getter()
{
  return MEMORY[0x1E0DC1A48]();
}

uint64_t IndexPath.section.getter()
{
  return MEMORY[0x1E0DC1A58]();
}

uint64_t type metadata accessor for IndexPath()
{
  return MEMORY[0x1E0CB1658]();
}

uint64_t dispatch thunk of SystemEventsAgent.deregisterSync()()
{
  return MEMORY[0x1E0D1D798]();
}

uint64_t type metadata accessor for SystemEventsAgent()
{
  return MEMORY[0x1E0D1D7A8]();
}

uint64_t static AccessorySystemEvent.kHeaderEventRelease.getter()
{
  return MEMORY[0x1E0D1D7B8]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraFlip.getter()
{
  return MEMORY[0x1E0D1D7C0]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraZoom.getter()
{
  return MEMORY[0x1E0D1D7C8]();
}

uint64_t static AccessorySystemEvent.kHeaderCameraShutter.getter()
{
  return MEMORY[0x1E0D1D7D0]();
}

uint64_t AccessorySystemEvent.header.getter()
{
  return MEMORY[0x1E0D1D7D8]();
}

uint64_t AccessorySystemEvent.payload.getter()
{
  return MEMORY[0x1E0D1D7E0]();
}

uint64_t type metadata accessor for AccessorySystemEvent()
{
  return MEMORY[0x1E0D1D7E8]();
}

uint64_t withObservationTracking<A>(_:onChange:)()
{
  return MEMORY[0x1E0DEFD18]();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t ObservationRegistrar.didSet<A, B>(_:keyPath:)()
{
  return MEMORY[0x1E0DEFD68]();
}

uint64_t ObservationRegistrar.willSet<A, B>(_:keyPath:)()
{
  return MEMORY[0x1E0DEFD70]();
}

uint64_t ObservationRegistrar.init()()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t dispatch thunk of TPTipsHelper.removeEntries(_:)()
{
  return MEMORY[0x1E0DBCF78]();
}

uint64_t type metadata accessor for TPTipsHelper.Entry.Kind()
{
  return MEMORY[0x1E0DBCF90]();
}

uint64_t type metadata accessor for TPTipsHelper.Entry()
{
  return MEMORY[0x1E0DBCF98]();
}

uint64_t TPTipsHelper.Entry.init(_:tip:observationTask:)()
{
  return MEMORY[0x1E0DBCFA0]();
}

uint64_t dispatch thunk of TPTipsHelper.setup()()
{
  return MEMORY[0x1E0DBCFA8]();
}

uint64_t static TPTipsHelper.shared.getter()
{
  return MEMORY[0x1E0DBCFB0]();
}

uint64_t dispatch thunk of TPTipsHelper.addEntry(_:)()
{
  return MEMORY[0x1E0DBCFC0]();
}

uint64_t static TPTipsHelper.taskQueue.getter()
{
  return MEMORY[0x1E0DBCFC8]();
}

uint64_t type metadata accessor for TPTipsHelper()
{
  return MEMORY[0x1E0DBCFD0]();
}

uint64_t FaceInFrameTip.init()()
{
  return MEMORY[0x1E0DBCFE0]();
}

uint64_t type metadata accessor for FaceInFrameTip()
{
  return MEMORY[0x1E0DBCFE8]();
}

uint64_t FaceTimeLinkTip.init()()
{
  return MEMORY[0x1E0DBD000]();
}

uint64_t type metadata accessor for FaceTimeLinkTip()
{
  return MEMORY[0x1E0DBD008]();
}

uint64_t dispatch thunk of MessageIndicatorView.tapHandler.getter()
{
  return MEMORY[0x1E0DBD018]();
}

uint64_t dispatch thunk of MessageIndicatorView.tapHandler.setter()
{
  return MEMORY[0x1E0DBD020]();
}

uint64_t type metadata accessor for RecentsCallItemStyle()
{
  return MEMORY[0x1E0DBD040]();
}

uint64_t static VideoReactionPickerTip.hasOpenedReactionPicker.getter()
{
  return MEMORY[0x1E0DBD048]();
}

uint64_t static VideoReactionPickerTip.shouldShow.getter()
{
  return MEMORY[0x1E0DBD058]();
}

uint64_t static VideoReactionPickerTip.shouldShow.setter()
{
  return MEMORY[0x1E0DBD060]();
}

uint64_t VideoReactionPickerTip.init()()
{
  return MEMORY[0x1E0DBD068]();
}

uint64_t type metadata accessor for VideoReactionPickerTip()
{
  return MEMORY[0x1E0DBD070]();
}

uint64_t type metadata accessor for RecentsListItemLocation()
{
  return MEMORY[0x1E0DBD088]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.messageIndicatorView.getter()
{
  return MEMORY[0x1E0DBD090]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.avatarViewController.getter()
{
  return MEMORY[0x1E0DBD098]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.avatarViewController.setter()
{
  return MEMORY[0x1E0DBD0A0]();
}

uint64_t RecentsListItemViewHelper.init(parentView:location:)()
{
  return MEMORY[0x1E0DBD0A8]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.sizeThatFits(_:shouldHideTrailingAccessoryView:trailingAccessoryView:)()
{
  return MEMORY[0x1E0DBD0B0]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.detailAccessoryButton.getter()
{
  return MEMORY[0x1E0DBD0B8]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.updateForParentTraitCollectionDidChange()()
{
  return MEMORY[0x1E0DBD0C0]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.layout(shouldHideTrailingAccessoryView:trailingAccessoryView:)()
{
  return MEMORY[0x1E0DBD0C8]();
}

uint64_t dispatch thunk of RecentsListItemViewHelper.configure(with:)()
{
  return MEMORY[0x1E0DBD0D0]();
}

uint64_t type metadata accessor for RecentsListItemViewHelper()
{
  return MEMORY[0x1E0DBD0D8]();
}

uint64_t dispatch thunk of TaskQueue.async(_:)()
{
  return MEMORY[0x1E0DBD0F8]();
}

uint64_t TaskQueue.__allocating_init(priority:)()
{
  return MEMORY[0x1E0DBD100]();
}

uint64_t type metadata accessor for TaskQueue()
{
  return MEMORY[0x1E0DBD108]();
}

uint64_t static AVPartialAsyncProperty<A>.duration.getter()
{
  return MEMORY[0x1E0DE94C0]();
}

uint64_t type metadata accessor for CGPathFillRule()
{
  return MEMORY[0x1E0C9B8A8]();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1718]();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1720]();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1728]();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1738]();
}

uint64_t isFeatureEnabled(_:)()
{
  return MEMORY[0x1E0D20EF8]();
}

Swift::Void __swiftcall _AccessibilityNotifications.post()()
{
  MEMORY[0x1E0C8ED28]();
}

uint64_t type metadata accessor for AccessibilityNotification.Announcement()
{
  return MEMORY[0x1E0C8ED38]();
}

uint64_t AccessibilityNotification.Announcement.init(_:)()
{
  return MEMORY[0x1E0C8ED40]();
}

uint64_t type metadata accessor for AccessibilityNotification.ScreenChanged()
{
  return MEMORY[0x1E0C8ED60]();
}

uint64_t AccessibilityNotification.ScreenChanged.init(_:)()
{
  return MEMORY[0x1E0C8ED68]();
}

uint64_t XPCHostConnection.clientObject.getter()
{
  return MEMORY[0x1E0D14C78]();
}

uint64_t XPCHostConnection.bundleIdentifier.getter()
{
  return MEMORY[0x1E0D14C80]();
}

uint64_t XPCHostConnection.isEntitledToUsePrivateAPI.getter()
{
  return MEMORY[0x1E0D14C88]();
}

uint64_t DarwinNotification.init(name:queue:)()
{
  return MEMORY[0x1E0D14CA0]();
}

uint64_t type metadata accessor for DarwinNotification()
{
  return MEMORY[0x1E0D14CB0]();
}

uint64_t dispatch thunk of PeoplePickerConfiguration.shareSheetSessionID.getter()
{
  return MEMORY[0x1E0D14EE0]();
}

uint64_t type metadata accessor for PeoplePickerConfiguration()
{
  return MEMORY[0x1E0D14EE8]();
}

uint64_t PeoplePickerHostConnection.init(connection:queue:)()
{
  return MEMORY[0x1E0D14EF0]();
}

uint64_t PeoplePickerHostConnection.delegate.setter()
{
  return MEMORY[0x1E0D14EF8]();
}

uint64_t type metadata accessor for PeoplePickerHostConnection()
{
  return MEMORY[0x1E0D14F00]();
}

uint64_t Cache.init(countLimit:)()
{
  return MEMORY[0x1E0D15268]();
}

Swift::Void __swiftcall Cache.removeAllObjects()()
{
  MEMORY[0x1E0D15270]();
}

uint64_t type metadata accessor for Cache()
{
  return MEMORY[0x1E0D15278]();
}

uint64_t Cache.subscript.getter()
{
  return MEMORY[0x1E0D15288]();
}

uint64_t Cache.subscript.setter()
{
  return MEMORY[0x1E0D15290]();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t _CFObject.hash(into:)()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t _CFObject.hashValue.getter()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t static GroupActivityMetadata.ActivityType.screenSharing.getter()
{
  return MEMORY[0x1E0CB3ED8]();
}

uint64_t type metadata accessor for GroupActivityMetadata.ActivityType()
{
  return MEMORY[0x1E0CB3EF0]();
}

uint64_t GroupActivityMetadata.type.setter()
{
  return MEMORY[0x1E0CB3F28]();
}

uint64_t GroupActivityMetadata.init()()
{
  return MEMORY[0x1E0CB3F40]();
}

uint64_t type metadata accessor for GroupSessionMessenger.DeliveryMode()
{
  return MEMORY[0x1E0CB3F78]();
}

uint64_t GroupSessionMessenger.MessageContext.source.getter()
{
  return MEMORY[0x1E0CB3F90]();
}

uint64_t type metadata accessor for GroupSessionMessenger.MessageContext()
{
  return MEMORY[0x1E0CB3F98]();
}

uint64_t GroupSessionMessenger.send(_:to:)()
{
  return MEMORY[0x1E0CB3FB0]();
}

uint64_t GroupSessionMessenger.send<A>(_:to:)()
{
  return MEMORY[0x1E0CB3FC0]();
}

uint64_t GroupSessionMessenger.receive<A>(_:)()
{
  return MEMORY[0x1E0CB3FD0]();
}

uint64_t GroupSessionMessenger.init<A>(session:deliveryMode:)()
{
  return MEMORY[0x1E0CB3FE0]();
}

uint64_t GroupSessionMessenger.Messages.makeAsyncIterator()()
{
  return MEMORY[0x1E0CB3FF8]();
}

uint64_t GroupSessionMessenger.messages(of:)()
{
  return MEMORY[0x1E0CB4028]();
}

uint64_t type metadata accessor for GroupSessionMessenger()
{
  return MEMORY[0x1E0CB4038]();
}

uint64_t GroupSession.localParticipant.getter()
{
  return MEMORY[0x1E0CB4098]();
}

uint64_t GroupSession.activeParticipants.getter()
{
  return MEMORY[0x1E0CB40A0]();
}

uint64_t GroupSession.isLocallyInitiated.getter()
{
  return MEMORY[0x1E0CB40A8]();
}

uint64_t GroupSession.$activeParticipants.getter()
{
  return MEMORY[0x1E0CB40B0]();
}

Swift::Void __swiftcall GroupSession.end()()
{
  MEMORY[0x1E0CB40D0]();
}

Swift::Void __swiftcall GroupSession.join()()
{
  MEMORY[0x1E0CB40D8]();
}

uint64_t GroupSession.state.getter()
{
  return MEMORY[0x1E0CB4150]();
}

uint64_t GroupSession.$state.getter()
{
  return MEMORY[0x1E0CB4158]();
}

uint64_t GroupSession.Sessions.makeAsyncIterator()()
{
  return MEMORY[0x1E0CB4160]();
}

uint64_t GroupSession.activity.getter()
{
  return MEMORY[0x1E0CB4198]();
}

uint64_t static GroupActivity._identifiable(by:)()
{
  return MEMORY[0x1E0CB41E0]();
}

uint64_t GroupActivity.activate()()
{
  return MEMORY[0x1E0CB4218]();
}

uint64_t static GroupActivity.sessions()()
{
  return MEMORY[0x1E0CB4228]();
}

uint64_t static Participant.== infix(_:_:)()
{
  return MEMORY[0x1E0CB4238]();
}

uint64_t Participant.id.getter()
{
  return MEMORY[0x1E0CB4240]();
}

uint64_t Participant.handle.getter()
{
  return MEMORY[0x1E0CB4248]();
}

uint64_t type metadata accessor for Participant()
{
  return MEMORY[0x1E0CB4250]();
}

uint64_t static Participants.only(_:)()
{
  return MEMORY[0x1E0CB4288]();
}

uint64_t type metadata accessor for Participants()
{
  return MEMORY[0x1E0CB4290]();
}

uint64_t MarqueeLabel.init(text:color:animated:)()
{
  return MEMORY[0x1E0D132D0]();
}

uint64_t type metadata accessor for MarqueeLabel()
{
  return MEMORY[0x1E0D132D8]();
}

uint64_t CallRecordingView.stopwatchTime.setter()
{
  return MEMORY[0x1E0D132E8]();
}

uint64_t CallRecordingView.waveformValues.setter()
{
  return MEMORY[0x1E0D132F0]();
}

uint64_t static CallRecordingView.Options.stopButton.getter()
{
  return MEMORY[0x1E0D132F8]();
}

uint64_t static CallRecordingView.Options.all.getter()
{
  return MEMORY[0x1E0D13300]();
}

uint64_t type metadata accessor for CallRecordingView.Options()
{
  return MEMORY[0x1E0D13308]();
}

uint64_t CallRecordingView.init(options:stopButtonSize:)()
{
  return MEMORY[0x1E0D13310]();
}

uint64_t CallRecordingView.delegate.setter()
{
  return MEMORY[0x1E0D13318]();
}

uint64_t type metadata accessor for CallRecordingView()
{
  return MEMORY[0x1E0D13320]();
}

Swift::Void __swiftcall CallRecordingButton.overrideTintColor(_:)(Swift::Bool a1)
{
  MEMORY[0x1E0D13330](a1);
}

uint64_t type metadata accessor for CallRecordingButton()
{
  return MEMORY[0x1E0D13338]();
}

uint64_t static ClarityUINavigationTitle.recents.getter()
{
  return MEMORY[0x1E0D13368]();
}

uint64_t static ClarityUINavigationTitle.contacts.getter()
{
  return MEMORY[0x1E0D13370]();
}

uint64_t type metadata accessor for ClarityUINavigationTitle()
{
  return MEMORY[0x1E0D13378]();
}

uint64_t CallRecordingCountdownView.preRecordingSubtitleText.setter()
{
  return MEMORY[0x1E0D13380]();
}

uint64_t CallRecordingCountdownView.preRecordingTitleText.setter()
{
  return MEMORY[0x1E0D13388]();
}

Swift::Void __swiftcall CallRecordingCountdownView.addSubtitle()()
{
  MEMORY[0x1E0D13390]();
}

Swift::Void __swiftcall CallRecordingCountdownView.removeSubtitle()()
{
  MEMORY[0x1E0D13398]();
}

uint64_t CallRecordingCountdownView.delegate.setter()
{
  return MEMORY[0x1E0D133A0]();
}

uint64_t type metadata accessor for CallRecordingCountdownView()
{
  return MEMORY[0x1E0D133A8]();
}

uint64_t PlaybackServer.invalidate(waitsForSession:)()
{
  return MEMORY[0x1E0D8BEF8]();
}

uint64_t PlaybackServer.interactionState.getter()
{
  return MEMORY[0x1E0D8BF08]();
}

uint64_t PlaybackServer.$interactionState.getter()
{
  return MEMORY[0x1E0D8BF10]();
}

uint64_t PlaybackServer.changeInteractionState(_:)()
{
  return MEMORY[0x1E0D8BF18]();
}

uint64_t PlaybackServer.__allocating_init(session:interruptionHandler:)()
{
  return MEMORY[0x1E0D8BF28]();
}

uint64_t PlaybackServer.$isActive.getter()
{
  return MEMORY[0x1E0D8BF30]();
}

uint64_t type metadata accessor for PlaybackServer()
{
  return MEMORY[0x1E0D8BF38]();
}

uint64_t static InteractionState.== infix(_:_:)()
{
  return MEMORY[0x1E0D8BF48]();
}

uint64_t static InteractionState.draw.getter()
{
  return MEMORY[0x1E0D8BF50]();
}

uint64_t type metadata accessor for InteractionState()
{
  return MEMORY[0x1E0D8BF70]();
}

uint64_t type metadata accessor for SystemGestureEvent()
{
  return MEMORY[0x1E0D8BF88]();
}

uint64_t CaptureUIInteraction.invalidate()()
{
  return MEMORY[0x1E0D8BF90]();
}

uint64_t CaptureUIInteraction.interactionState.setter()
{
  return MEMORY[0x1E0D8BFA0]();
}

uint64_t CaptureUIInteraction.sendHardwareGesture(_:)()
{
  return MEMORY[0x1E0D8BFA8]();
}

uint64_t CaptureUIInteraction.__allocating_init(session:interruptionHandler:)()
{
  return MEMORY[0x1E0D8BFB0]();
}

uint64_t type metadata accessor for CaptureUIInteraction()
{
  return MEMORY[0x1E0D8BFB8]();
}

uint64_t type metadata accessor for ControlMessageSession.Role()
{
  return MEMORY[0x1E0D8BFD8]();
}

uint64_t ControlMessageSession.__allocating_init(transport:role:)()
{
  return MEMORY[0x1E0D8BFE0]();
}

uint64_t type metadata accessor for ControlMessageSession()
{
  return MEMORY[0x1E0D8BFE8]();
}

uint64_t type metadata accessor for ControlMessengerState()
{
  return MEMORY[0x1E0D8C008]();
}

uint64_t type metadata accessor for ControlMessageReliability()
{
  return MEMORY[0x1E0D8C028]();
}

uint64_t type metadata accessor for ActivityScene()
{
  return MEMORY[0x1E0CF5330]();
}

Swift::String __swiftcall LanguageManager.mappedLanguageIdentifier(supportedLanguages:)(Swift::OpaquePointer_optional supportedLanguages)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  v1 = MEMORY[0x1E0DBD188](supportedLanguages.value._rawValue, *(_QWORD *)&supportedLanguages.is_nil);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t LanguageManager.init(featureFlags:locale:preferredLanguages:)()
{
  return MEMORY[0x1E0DBD190]();
}

uint64_t type metadata accessor for LanguageManager()
{
  return MEMORY[0x1E0DBD198]();
}

uint64_t dispatch thunk of Message.recordUUID.getter()
{
  return MEMORY[0x1E0D20CC8]();
}

uint64_t dispatch thunk of Message.dateCreated.getter()
{
  return MEMORY[0x1E0D20CD0]();
}

uint64_t dispatch thunk of Message.isSensitive.getter()
{
  return MEMORY[0x1E0D20CD8]();
}

uint64_t dispatch thunk of Message.messageFile.getter()
{
  return MEMORY[0x1E0D20CE0]();
}

uint64_t dispatch thunk of Message.messageType.getter()
{
  return MEMORY[0x1E0D20CE8]();
}

uint64_t dispatch thunk of Message.conversationID.getter()
{
  return MEMORY[0x1E0D20CF0]();
}

uint64_t dispatch thunk of Message.messageThumbnail.getter()
{
  return MEMORY[0x1E0D20CF8]();
}

uint64_t dispatch thunk of Message.from.getter()
{
  return MEMORY[0x1E0D20D00]();
}

uint64_t dispatch thunk of Message.isRead.getter()
{
  return MEMORY[0x1E0D20D08]();
}

uint64_t dispatch thunk of Message.duration.getter()
{
  return MEMORY[0x1E0D20D10]();
}

uint64_t type metadata accessor for MessageFetchOptions()
{
  return MEMORY[0x1E0D20D28]();
}

uint64_t type metadata accessor for MessageKey()
{
  return MEMORY[0x1E0D20D48]();
}

uint64_t MessageType.rawValue.getter()
{
  return MEMORY[0x1E0D20D58]();
}

uint64_t type metadata accessor for MessageSortOrder()
{
  return MEMORY[0x1E0D20D78]();
}

uint64_t MessageStoreController.addDelegate(_:)()
{
  return MEMORY[0x1E0D20D88]();
}

uint64_t MessageStoreController.getMessages(fetchRequest:)()
{
  return MEMORY[0x1E0D20DA0]();
}

uint64_t MessageStoreController.deleteMessages(_:)()
{
  return MEMORY[0x1E0D20DB0]();
}

uint64_t MessageStoreController.markMessagesAsRead(messageUUIDs:)()
{
  return MEMORY[0x1E0D20DC0]();
}

uint64_t MessageStoreController.saveMessagesToPhotoLibrary(messageUUIDs:)()
{
  return MEMORY[0x1E0D20DD0]();
}

uint64_t static MessageStoreController.shared.getter()
{
  return MEMORY[0x1E0D20DE0]();
}

uint64_t type metadata accessor for MessageStoreController()
{
  return MEMORY[0x1E0D20DE8]();
}

uint64_t type metadata accessor for MessageStoreFetchRequest.QuerySearchType()
{
  return MEMORY[0x1E0D20E00]();
}

uint64_t MessageStoreFetchRequest.init(query:sortType:options:pageSize:page:originatingBundleID:)()
{
  return MEMORY[0x1E0D20E08]();
}

uint64_t type metadata accessor for MessageStoreFetchRequest()
{
  return MEMORY[0x1E0D20E10]();
}

uint64_t static MessageStoreQuery.&& infix(_:_:)()
{
  return MEMORY[0x1E0D20E18]();
}

uint64_t type metadata accessor for MessageStoreQuery()
{
  return MEMORY[0x1E0D20E38]();
}

uint64_t ImageResource.init(name:bundle:)()
{
  return MEMORY[0x1E0CA9B98]();
}

uint64_t type metadata accessor for ImageResource()
{
  return MEMORY[0x1E0CA9BA8]();
}

uint64_t static PreviewRegistry.preview.getter()
{
  return MEMORY[0x1E0CA9BD8]();
}

uint64_t Preview.init(_:traits:body:)()
{
  return MEMORY[0x1E0CD8220]();
}

uint64_t type metadata accessor for FeatureEligibility()
{
  return MEMORY[0x1E0D20C50]();
}

uint64_t type metadata accessor for FeatureEligibilityDomain()
{
  return MEMORY[0x1E0D20C70]();
}

uint64_t FeatureEligibilityChecker.init()()
{
  return MEMORY[0x1E0D20C80]();
}

uint64_t type metadata accessor for FeatureEligibilityChecker()
{
  return MEMORY[0x1E0D20C88]();
}

uint64_t dispatch thunk of FeatureEligibilityChecking.getEligibilityForDomain(_:)()
{
  return MEMORY[0x1E0D20C98]();
}

uint64_t DeviceRestrictionController.init(profileConnection:)()
{
  return MEMORY[0x1E0D20CA0]();
}

Swift::Void __swiftcall DeviceRestrictionController.setRestrictionsActive(_:)(Swift::Bool a1)
{
  MEMORY[0x1E0D20CA8](a1);
}

uint64_t type metadata accessor for DeviceRestrictionController()
{
  return MEMORY[0x1E0D20CB0]();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return MEMORY[0x1E0DC1A68]();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return MEMORY[0x1E0DC1A70]();
}

uint64_t static UIPointerShape.defaultCornerRadius.getter()
{
  return MEMORY[0x1E0DC1B90]();
}

uint64_t type metadata accessor for UIPointerShape()
{
  return MEMORY[0x1E0DC1BA0]();
}

uint64_t static UICellAccessory.customView(configuration:)()
{
  return MEMORY[0x1E0DC1BC8]();
}

uint64_t static UICellAccessory.multiselect(displayed:options:)()
{
  return MEMORY[0x1E0DC1BD0]();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return MEMORY[0x1E0DC1C28]();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return MEMORY[0x1E0DC1C58]();
}

uint64_t UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)()
{
  return MEMORY[0x1E0DC1C90]();
}

uint64_t type metadata accessor for UICellAccessory.MultiselectOptions()
{
  return MEMORY[0x1E0DC1C98]();
}

uint64_t static UICellAccessory.disclosureIndicator(displayed:options:)()
{
  return MEMORY[0x1E0DC1CA0]();
}

uint64_t UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)()
{
  return MEMORY[0x1E0DC1CA8]();
}

uint64_t type metadata accessor for UICellAccessory.CustomViewConfiguration()
{
  return MEMORY[0x1E0DC1CB0]();
}

uint64_t UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)()
{
  return MEMORY[0x1E0DC1CE0]();
}

uint64_t type metadata accessor for UICellAccessory.DisclosureIndicatorOptions()
{
  return MEMORY[0x1E0DC1CE8]();
}

uint64_t type metadata accessor for UICellAccessory.Placement()
{
  return MEMORY[0x1E0DC1D20]();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return MEMORY[0x1E0DC1D38]();
}

uint64_t UIMutableTraits.userInterfaceLevel.setter()
{
  return MEMORY[0x1E0DC1DB0]();
}

uint64_t UIMutableTraits.userInterfaceStyle.setter()
{
  return MEMORY[0x1E0DC1DC0]();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.getter()
{
  return MEMORY[0x1E0DC1E10]();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter()
{
  return MEMORY[0x1E0DC1E18]();
}

uint64_t UIPointerEffect.preview.getter()
{
  return MEMORY[0x1E0DC1E40]();
}

uint64_t type metadata accessor for UIPointerEffect.TintMode()
{
  return MEMORY[0x1E0DC1E58]();
}

uint64_t type metadata accessor for UIPointerEffect()
{
  return MEMORY[0x1E0DC1E78]();
}

uint64_t type metadata accessor for UITraitOverrides()
{
  return MEMORY[0x1E0DC1E90]();
}

uint64_t static UITraitDefinition._isPrivate.getter()
{
  return MEMORY[0x1E0DC1EB0]();
}

uint64_t static UITraitDefinition.identifier.getter()
{
  return MEMORY[0x1E0DC1EB8]();
}

uint64_t static UITraitDefinition.affectsColorAppearance.getter()
{
  return MEMORY[0x1E0DC1EC0]();
}

uint64_t static UITraitDefinition._defaultValueRepresentsUnspecified.getter()
{
  return MEMORY[0x1E0DC1EC8]();
}

uint64_t static UITraitDefinition.name.getter()
{
  return MEMORY[0x1E0DC1ED0]();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0DC1FF0]();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return MEMORY[0x1E0DC2020]();
}

uint64_t UIBackgroundConfiguration.customView.getter()
{
  return MEMORY[0x1E0DC2070]();
}

uint64_t UIBackgroundConfiguration.customView.setter()
{
  return MEMORY[0x1E0DC2078]();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return MEMORY[0x1E0DC20A8]();
}

uint64_t UIBackgroundConfiguration.visualEffect.setter()
{
  return MEMORY[0x1E0DC20B0]();
}

uint64_t static UIBackgroundConfiguration.listPlainCell()()
{
  return MEMORY[0x1E0DC20B8]();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return MEMORY[0x1E0DC20C8]();
}

uint64_t static UIBackgroundConfiguration.listGroupedCell()()
{
  return MEMORY[0x1E0DC20D0]();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return MEMORY[0x1E0DC2118]();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return MEMORY[0x1E0DC2130]();
}

uint64_t static UIListContentConfiguration.groupedHeader()()
{
  return MEMORY[0x1E0DC21A0]();
}

uint64_t UIListContentConfiguration.TextProperties.adjustsFontForContentSizeCategory.setter()
{
  return MEMORY[0x1E0DC21B8]();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return MEMORY[0x1E0DC2210]();
}

uint64_t UIListContentConfiguration.TextProperties.color.getter()
{
  return MEMORY[0x1E0DC2218]();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return MEMORY[0x1E0DC2220]();
}

uint64_t type metadata accessor for UIListContentConfiguration.TextProperties()
{
  return MEMORY[0x1E0DC2238]();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return MEMORY[0x1E0DC2250]();
}

uint64_t UIListContentConfiguration.textProperties.getter()
{
  return MEMORY[0x1E0DC2258]();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.setter()
{
  return MEMORY[0x1E0DC2308]();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return MEMORY[0x1E0DC2360]();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return MEMORY[0x1E0DC23A0]();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return MEMORY[0x1E0DC23E0]();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteItems(_:)(Swift::OpaquePointer a1)
{
  MEMORY[0x1E0DC23E8](a1._rawValue);
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
  MEMORY[0x1E0DC2430](a1._rawValue);
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadSections(_:)(Swift::OpaquePointer a1)
{
  MEMORY[0x1E0DC2460](a1._rawValue);
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers.getter()
{
  return MEMORY[0x1E0DC2470]();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
  MEMORY[0x1E0DC2480](a1._rawValue);
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifiers.getter()
{
  return MEMORY[0x1E0DC2490]();
}

uint64_t NSDiffableDataSourceSnapshot.reconfiguredItemIdentifiers.getter()
{
  return MEMORY[0x1E0DC24B0]();
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return MEMORY[0x1E0DC24D0]();
}

uint64_t UIListSeparatorConfiguration.topSeparatorInsets.setter()
{
  return MEMORY[0x1E0DC24F8]();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorVisibility.setter()
{
  return MEMORY[0x1E0DC2500]();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration.Visibility()
{
  return MEMORY[0x1E0DC2528]();
}

uint64_t UIListSeparatorConfiguration.visualEffect.setter()
{
  return MEMORY[0x1E0DC2538]();
}

uint64_t UIListSeparatorConfiguration.color.setter()
{
  return MEMORY[0x1E0DC2540]();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration()
{
  return MEMORY[0x1E0DC2548]();
}

uint64_t type metadata accessor for UIConfigurationColorTransformer()
{
  return MEMORY[0x1E0DC2628]();
}

uint64_t UIConfigurationColorTransformer.init(_:)()
{
  return MEMORY[0x1E0DC2638]();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return MEMORY[0x1E0DC2728]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return MEMORY[0x1E0DC2738]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)()
{
  return MEMORY[0x1E0DC2750]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)()
{
  return MEMORY[0x1E0DC2758]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return MEMORY[0x1E0DC27A0]();
}

uint64_t UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)()
{
  return MEMORY[0x1E0DC27B0]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.snapshot()()
{
  return MEMORY[0x1E0DC27C8]();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)()
{
  return MEMORY[0x1E0DC27D0]();
}

uint64_t NSDiffableDataSourceSectionSnapshot.append(_:to:)()
{
  return MEMORY[0x1E0DC2828]();
}

uint64_t NSDiffableDataSourceSectionSnapshot.init()()
{
  return MEMORY[0x1E0DC2848]();
}

uint64_t UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter()
{
  return MEMORY[0x1E0DC2868]();
}

uint64_t UICollectionLayoutListConfiguration.separatorConfiguration.modify()
{
  return MEMORY[0x1E0DC2870]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return MEMORY[0x1E0DC28A8]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.FooterMode()
{
  return MEMORY[0x1E0DC28D8]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode()
{
  return MEMORY[0x1E0DC2908]();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return MEMORY[0x1E0DC2918]();
}

uint64_t UICollectionLayoutListConfiguration.footerMode.setter()
{
  return MEMORY[0x1E0DC2928]();
}

uint64_t UICollectionLayoutListConfiguration.headerMode.setter()
{
  return MEMORY[0x1E0DC2938]();
}

uint64_t UICollectionLayoutListConfiguration.backgroundColor.setter()
{
  return MEMORY[0x1E0DC2948]();
}

uint64_t UICollectionLayoutListConfiguration.headerTopPadding.setter()
{
  return MEMORY[0x1E0DC2958]();
}

uint64_t UICollectionLayoutListConfiguration.itemSeparatorHandler.setter()
{
  return MEMORY[0x1E0DC2960]();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return MEMORY[0x1E0DC29A0]();
}

uint64_t type metadata accessor for UIConfigurationTextAttributesTransformer()
{
  return MEMORY[0x1E0DC2A28]();
}

uint64_t UIConfigurationTextAttributesTransformer.init(_:)()
{
  return MEMORY[0x1E0DC2A38]();
}

uint64_t Tip.invalidate(reason:)()
{
  return MEMORY[0x1E0CE9288]();
}

uint64_t Tip.shouldDisplay.getter()
{
  return MEMORY[0x1E0CE9298]();
}

uint64_t Tip.statusUpdates.getter()
{
  return MEMORY[0x1E0CE92A0]();
}

uint64_t Tip.shouldDisplayUpdates.getter()
{
  return MEMORY[0x1E0CE92B0]();
}

uint64_t Tip.id.getter()
{
  return MEMORY[0x1E0CE92B8]();
}

uint64_t Tip.actions.getter()
{
  return MEMORY[0x1E0CE9300]();
}

uint64_t Tip.options.getter()
{
  return MEMORY[0x1E0CE9328]();
}

uint64_t TipUIPopoverViewController.popoverPresentationController.getter()
{
  return MEMORY[0x1E0CE9330]();
}

uint64_t type metadata accessor for TipUIPopoverViewController()
{
  return MEMORY[0x1E0CE9340]();
}

uint64_t TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)()
{
  return MEMORY[0x1E0CE9350]();
}

uint64_t TipView.init(_:arrowEdge:action:)()
{
  return MEMORY[0x1E0CE9368]();
}

uint64_t type metadata accessor for TipUIView()
{
  return MEMORY[0x1E0CE93A0]();
}

uint64_t TipUIView.init(_:arrowEdge:actionHandler:)()
{
  return MEMORY[0x1E0CE93C8]();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return MEMORY[0x1E0CE93F8]();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return MEMORY[0x1E0CE9430]();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return MEMORY[0x1E0CE9630]();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return MEMORY[0x1E0CE9740]();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return MEMORY[0x1E0CE9778]();
}

uint64_t Tips.Event.sendDonation<>(_:)()
{
  return MEMORY[0x1E0CE9780]();
}

uint64_t static Tips.Status.== infix(_:_:)()
{
  return MEMORY[0x1E0CE9840]();
}

uint64_t type metadata accessor for Tips.Status()
{
  return MEMORY[0x1E0CE9858]();
}

uint64_t Tips.Parameter.wrappedValue.getter()
{
  return MEMORY[0x1E0CE98A8]();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return MEMORY[0x1E0CE98C0]();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return MEMORY[0x1E0CE98E8]();
}

uint64_t static Tips.configure(_:)()
{
  return MEMORY[0x1E0CE98F0]();
}

uint64_t Publishers.CombineLatest.init(_:_:)()
{
  return MEMORY[0x1E0C95690]();
}

uint64_t Publishers.Merge.init(_:_:)()
{
  return MEMORY[0x1E0C95A58]();
}

uint64_t Publishers.MergeMany.merge(with:)()
{
  return MEMORY[0x1E0C95C50]();
}

uint64_t dispatch thunk of Cancellable.cancel()()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t Cancellable.store(in:)()
{
  return MEMORY[0x1E0C95D10]();
}

uint64_t AnyCancellable.store(in:)()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t AnyCancellable.store<A>(in:)()
{
  return MEMORY[0x1E0C95DE0]();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
  MEMORY[0x1E0C95DE8]();
}

uint64_t type metadata accessor for AnyCancellable()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t AnyCancellable.init(_:)()
{
  return MEMORY[0x1E0C95E48]();
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return MEMORY[0x1E0C95E50]();
}

uint64_t static ObservableObject.environmentStore.getter()
{
  return MEMORY[0x1E0CD8238]();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t PassthroughSubject.send(_:)()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t PassthroughSubject.init()()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t CurrentValueSubject.value.getter()
{
  return MEMORY[0x1E0C95F70]();
}

uint64_t type metadata accessor for CurrentValueSubject()
{
  return MEMORY[0x1E0C95F88]();
}

uint64_t CurrentValueSubject.__allocating_init(_:)()
{
  return MEMORY[0x1E0C95FA0]();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return MEMORY[0x1E0C95FC0]();
}

uint64_t Just.init(_:)()
{
  return MEMORY[0x1E0C960A8]();
}

uint64_t Empty.init(completeImmediately:)()
{
  return MEMORY[0x1E0C960B8]();
}

uint64_t Subject<>.send()()
{
  return MEMORY[0x1E0C96128]();
}

uint64_t Published.init(initialValue:)()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t Published.projectedValue.getter()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t Published.projectedValue.setter()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t static Published.subscript.modify()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t static Published.subscript.getter()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t static Published.subscript.setter()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t type metadata accessor for Published()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)()
{
  return MEMORY[0x1E0C961E0]();
}

uint64_t Publisher.combineLatest<A, B, C>(_:_:_:)()
{
  return MEMORY[0x1E0C96200]();
}

uint64_t Publisher.combineLatest<A>(_:)()
{
  return MEMORY[0x1E0C96208]();
}

uint64_t Publisher.removeDuplicates(by:)()
{
  return MEMORY[0x1E0C96238]();
}

uint64_t Publisher.map<A>(_:)()
{
  return MEMORY[0x1E0C96248]();
}

uint64_t Publisher.zip<A>(_:)()
{
  return MEMORY[0x1E0C96268]();
}

uint64_t Publisher.delay<A>(for:tolerance:scheduler:options:)()
{
  return MEMORY[0x1E0C962A8]();
}

uint64_t Publisher.merge<A>(with:)()
{
  return MEMORY[0x1E0C962C0]();
}

uint64_t Publisher.merge(with:)()
{
  return MEMORY[0x1E0C962C8]();
}

uint64_t Publisher.filter(_:)()
{
  return MEMORY[0x1E0C96308]();
}

uint64_t Publisher.prepend(_:)()
{
  return MEMORY[0x1E0C96360]();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return MEMORY[0x1E0C96388]();
}

uint64_t Publisher.throttle<A>(for:scheduler:latest:)()
{
  return MEMORY[0x1E0C96398]();
}

uint64_t Publisher.dropFirst(_:)()
{
  return MEMORY[0x1E0C963B0]();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t Publisher<>.assign(to:)()
{
  return MEMORY[0x1E0C96420]();
}

uint64_t Publisher<>.values.getter()
{
  return MEMORY[0x1E0C96428]();
}

uint64_t Animatable<>.animatableData.modify()
{
  return MEMORY[0x1E0CD8268]();
}

uint64_t static Animatable<>._makeAnimatable(value:inputs:)()
{
  return MEMORY[0x1E0CD8280]();
}

uint64_t static Animatable._makeAnimatable(value:inputs:)()
{
  return MEMORY[0x1E0CD8288]();
}

uint64_t static ButtonRole.destructive.getter()
{
  return MEMORY[0x1E0CD8318]();
}

uint64_t static ButtonRole.cancel.getter()
{
  return MEMORY[0x1E0CD8328]();
}

uint64_t type metadata accessor for ButtonRole()
{
  return MEMORY[0x1E0CD8338]();
}

uint64_t EdgeInsets.init(_all:)()
{
  return MEMORY[0x1E0CD83B8]();
}

uint64_t LazyVStack.init(alignment:spacing:pinnedViews:content:)()
{
  return MEMORY[0x1E0CD84D0]();
}

uint64_t type metadata accessor for LazyVStack()
{
  return MEMORY[0x1E0CD84D8]();
}

uint64_t type metadata accessor for ScrollView()
{
  return MEMORY[0x1E0CD8530]();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return MEMORY[0x1E0CD8550]();
}

uint64_t static ShapeStyle._makeView<A>(view:inputs:)()
{
  return MEMORY[0x1E0CD8598]();
}

uint64_t static ShapeStyle<>._apply(to:)()
{
  return MEMORY[0x1E0CD85A0]();
}

uint64_t ShapeStyle<>.resolve(in:)()
{
  return MEMORY[0x1E0CD85A8]();
}

uint64_t Transition._makeContentTransition(transition:)()
{
  return MEMORY[0x1E0CD85F0]();
}

uint64_t static Transition.properties.getter()
{
  return MEMORY[0x1E0CD85F8]();
}

uint64_t type metadata accessor for ColorScheme()
{
  return MEMORY[0x1E0CD86F8]();
}

uint64_t static ContentMode.== infix(_:_:)()
{
  return MEMORY[0x1E0CD8720]();
}

uint64_t type metadata accessor for ControlSize()
{
  return MEMORY[0x1E0CD8760]();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return MEMORY[0x1E0CD8780]();
}

uint64_t type metadata accessor for DragGesture()
{
  return MEMORY[0x1E0CD87B0]();
}

uint64_t type metadata accessor for Environment.Content()
{
  return MEMORY[0x1E0CD87D0]();
}

uint64_t Environment.init<A>(_:)()
{
  return MEMORY[0x1E0CD8818]();
}

uint64_t static GestureMask.all.getter()
{
  return MEMORY[0x1E0CD8820]();
}

uint64_t StateObject.init(wrappedValue:)()
{
  return MEMORY[0x1E0CD8898]();
}

uint64_t StateObject.wrappedValue.getter()
{
  return MEMORY[0x1E0CD88A0]();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t Transaction.animationReason.setter()
{
  return MEMORY[0x1E0CD8938]();
}

uint64_t Transaction.disablesAnimations.getter()
{
  return MEMORY[0x1E0CD8940]();
}

uint64_t Transaction.disablesAnimations.setter()
{
  return MEMORY[0x1E0CD8948]();
}

uint64_t Transaction.addAnimationCompletion(criteria:_:)()
{
  return MEMORY[0x1E0CD8950]();
}

uint64_t Transaction.animationFrameInterval.setter()
{
  return MEMORY[0x1E0CD8958]();
}

uint64_t Transaction.animation.setter()
{
  return MEMORY[0x1E0CD8968]();
}

uint64_t ViewSpacing.distance(to:along:)()
{
  return MEMORY[0x1E0CD8990]();
}

uint64_t type metadata accessor for ViewSpacing()
{
  return MEMORY[0x1E0CD8998]();
}

uint64_t type metadata accessor for _ClipEffect()
{
  return MEMORY[0x1E0CD89D8]();
}

uint64_t type metadata accessor for _LayoutRoot()
{
  return MEMORY[0x1E0CD8A00]();
}

uint64_t _LayoutRoot.init(_:)()
{
  return MEMORY[0x1E0CD8A10]();
}

uint64_t type metadata accessor for _ShadowView()
{
  return MEMORY[0x1E0CD8A40]();
}

uint64_t ProgressView.init<A>(value:total:)()
{
  return MEMORY[0x1E0CD8B38]();
}

uint64_t static ViewModifier<>._makeView(modifier:inputs:body:)()
{
  return MEMORY[0x1E0CD8C60]();
}

uint64_t static ViewModifier<>._makeViewList(modifier:inputs:body:)()
{
  return MEMORY[0x1E0CD8C68]();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return MEMORY[0x1E0CD8C70]();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return MEMORY[0x1E0CD8C80]();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return MEMORY[0x1E0CD8C90]();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return MEMORY[0x1E0CD8D60]();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return MEMORY[0x1E0CD8DE8]();
}

uint64_t AnyTransition.init<A>(_:)()
{
  return MEMORY[0x1E0CD8E58]();
}

Swift::Void __swiftcall DismissAction.callAsFunction()()
{
  MEMORY[0x1E0CD8E78]();
}

uint64_t type metadata accessor for DismissAction()
{
  return MEMORY[0x1E0CD8E80]();
}

uint64_t GeometryProxy.safeAreaInsets.getter()
{
  return MEMORY[0x1E0CD8ED8]();
}

uint64_t GeometryProxy.size.getter()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t GeometryProxy.frame<A>(in:)()
{
  return MEMORY[0x1E0CD8F00]();
}

uint64_t type metadata accessor for GeometryProxy()
{
  return MEMORY[0x1E0CD8F18]();
}

uint64_t GeometryProxy.subscript.getter()
{
  return MEMORY[0x1E0CD8F38]();
}

uint64_t LayoutSubview.sizeThatFits(_:)()
{
  return MEMORY[0x1E0CD8FC8]();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return MEMORY[0x1E0CD8FD0]();
}

uint64_t LayoutSubview.spacing.getter()
{
  return MEMORY[0x1E0CD8FD8]();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return MEMORY[0x1E0CD8FE0]();
}

uint64_t LayoutSubview.subscript.getter()
{
  return MEMORY[0x1E0CD8FF8]();
}

uint64_t static PreferenceKey._isReadableByHost.getter()
{
  return MEMORY[0x1E0CD9048]();
}

uint64_t static PreferenceKey._includesRemovedValues.getter()
{
  return MEMORY[0x1E0CD9050]();
}

uint64_t type metadata accessor for _TaskModifier()
{
  return MEMORY[0x1E0CD9168]();
}

uint64_t type metadata accessor for _VariadicView.Tree()
{
  return MEMORY[0x1E0CD91C0]();
}

uint64_t _VariadicView.Tree.init(_:content:)()
{
  return MEMORY[0x1E0CD91D8]();
}

uint64_t withAnimation<A>(_:_:)()
{
  return MEMORY[0x1E0CD9210]();
}

uint64_t static EnvironmentKey<>._valuesEqual(_:_:)()
{
  return MEMORY[0x1E0CD9240]();
}

uint64_t GeometryReader.init(content:)()
{
  return MEMORY[0x1E0CD92F0]();
}

uint64_t type metadata accessor for GeometryReader()
{
  return MEMORY[0x1E0CD92F8]();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return MEMORY[0x1E0CD9370]();
}

uint64_t LayoutSubviews.subscript.getter()
{
  return MEMORY[0x1E0CD9398]();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return MEMORY[0x1E0CD93A0]();
}

uint64_t MoveTransition.init(edge:)()
{
  return MEMORY[0x1E0CD93E0]();
}

uint64_t type metadata accessor for MoveTransition()
{
  return MEMORY[0x1E0CD93F0]();
}

uint64_t NavigationLink<>.init<A>(value:label:)()
{
  return MEMORY[0x1E0CD9430]();
}

Swift::Void __swiftcall NavigationPath.removeLast(_:)(Swift::Int a1)
{
  MEMORY[0x1E0CD9478](a1);
}

uint64_t NavigationPath.init()()
{
  return MEMORY[0x1E0CD9488]();
}

uint64_t type metadata accessor for NavigationPath()
{
  return MEMORY[0x1E0CD9490]();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return MEMORY[0x1E0CD94E8]();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return MEMORY[0x1E0CD94F8]();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return MEMORY[0x1E0CD9500]();
}

uint64_t TintShapeStyle.init()()
{
  return MEMORY[0x1E0CD9688]();
}

uint64_t type metadata accessor for TintShapeStyle()
{
  return MEMORY[0x1E0CD9690]();
}

uint64_t ViewDimensions.height.getter()
{
  return MEMORY[0x1E0CD96C0]();
}

uint64_t ViewDimensions.subscript.getter()
{
  return MEMORY[0x1E0CD96D0]();
}

uint64_t _UIHostingView.init(rootView:)()
{
  return MEMORY[0x1E0CD9798]();
}

uint64_t ButtonMenuStyle.init()()
{
  return MEMORY[0x1E0CD9858]();
}

uint64_t type metadata accessor for ButtonMenuStyle()
{
  return MEMORY[0x1E0CD9860]();
}

uint64_t static DynamicTypeSize.< infix(_:_:)()
{
  return MEMORY[0x1E0CD98F8]();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return MEMORY[0x1E0CD9958]();
}

uint64_t GraphicsContext.withCGContext(content:)()
{
  return MEMORY[0x1E0CD99D0]();
}

uint64_t type metadata accessor for LayoutDirection()
{
  return MEMORY[0x1E0CD9AA8]();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return MEMORY[0x1E0CD9BF0]();
}

uint64_t NavigationStack.init<>(path:root:)()
{
  return MEMORY[0x1E0CD9C28]();
}

uint64_t static PreviewProvider.platform.getter()
{
  return MEMORY[0x1E0CD9C78]();
}

uint64_t static PreviewProvider._platform.getter()
{
  return MEMORY[0x1E0CD9C80]();
}

uint64_t static PreviewProvider._previews.getter()
{
  return MEMORY[0x1E0CD9C88]();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return MEMORY[0x1E0CD9C90]();
}

uint64_t static SafeAreaRegions.keyboard.getter()
{
  return MEMORY[0x1E0CD9CA8]();
}

uint64_t ScrollViewProxy.scrollTo<A>(_:anchor:)()
{
  return MEMORY[0x1E0CD9CC0]();
}

uint64_t type metadata accessor for ScrollViewProxy()
{
  return MEMORY[0x1E0CD9CC8]();
}

uint64_t static SensoryFeedback.error.getter()
{
  return MEMORY[0x1E0CD9CD8]();
}

uint64_t type metadata accessor for SensoryFeedback()
{
  return MEMORY[0x1E0CD9CE0]();
}

uint64_t TransitionPhase.isIdentity.getter()
{
  return MEMORY[0x1E0CD9D20]();
}

uint64_t static ClarityUIMetrics.standardSpacing.getter()
{
  return MEMORY[0x1E0CD9DE0]();
}

uint64_t static ClarityUIMetrics.buttonShadowOffset.getter()
{
  return MEMORY[0x1E0CD9DF0]();
}

uint64_t static ClarityUIMetrics.buttonShadowRadius.getter()
{
  return MEMORY[0x1E0CD9DF8]();
}

uint64_t static ClarityUIMetrics.componentCornerRadius.getter()
{
  return MEMORY[0x1E0CD9E00]();
}

uint64_t static ClarityUIMetrics.componentHorizontalPadding.getter()
{
  return MEMORY[0x1E0CD9E10]();
}

uint64_t PlainButtonStyle.init()()
{
  return MEMORY[0x1E0CD9F70]();
}

uint64_t type metadata accessor for PlainButtonStyle()
{
  return MEMORY[0x1E0CD9F78]();
}

uint64_t static ProposedViewSize.unspecified.getter()
{
  return MEMORY[0x1E0CD9FB8]();
}

uint64_t static ProposedViewSize.== infix(_:_:)()
{
  return MEMORY[0x1E0CD9FC0]();
}

uint64_t static RedactionReasons.placeholder.getter()
{
  return MEMORY[0x1E0CD9FD8]();
}

uint64_t static RedactionReasons.privacy.getter()
{
  return MEMORY[0x1E0CD9FE8]();
}

uint64_t type metadata accessor for RedactionReasons()
{
  return MEMORY[0x1E0CDA008]();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return MEMORY[0x1E0CDA088]();
}

uint64_t ScrollViewReader.init(content:)()
{
  return MEMORY[0x1E0CDA0B0]();
}

uint64_t type metadata accessor for ScrollViewReader()
{
  return MEMORY[0x1E0CDA0B8]();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x1E0CDA218]();
}

uint64_t type metadata accessor for _OverlayModifier()
{
  return MEMORY[0x1E0CDA268]();
}

uint64_t static ButtonBorderShape.capsule.getter()
{
  return MEMORY[0x1E0CDA2E0]();
}

uint64_t type metadata accessor for ButtonBorderShape()
{
  return MEMORY[0x1E0CDA2F0]();
}

uint64_t EnvironmentObject.error()()
{
  return MEMORY[0x1E0CDA458]();
}

uint64_t EnvironmentObject.init()()
{
  return MEMORY[0x1E0CDA478]();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return MEMORY[0x1E0CDA4A8]();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return MEMORY[0x1E0CDA4B0]();
}

uint64_t EnvironmentValues.accentColor.getter()
{
  return MEMORY[0x1E0CDA4C8]();
}

uint64_t EnvironmentValues.accentColor.setter()
{
  return MEMORY[0x1E0CDA4D0]();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return MEMORY[0x1E0CDA4E0]();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return MEMORY[0x1E0CDA4E8]();
}

uint64_t EnvironmentValues.controlSize.getter()
{
  return MEMORY[0x1E0CDA4F8]();
}

uint64_t EnvironmentValues.controlSize.setter()
{
  return MEMORY[0x1E0CDA508]();
}

uint64_t EnvironmentValues.sizeCategory.getter()
{
  return MEMORY[0x1E0CDA5A8]();
}

uint64_t EnvironmentValues.sizeCategory.setter()
{
  return MEMORY[0x1E0CDA5C0]();
}

uint64_t EnvironmentValues.truncationMode.getter()
{
  return MEMORY[0x1E0CDA5F8]();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return MEMORY[0x1E0CDA618]();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return MEMORY[0x1E0CDA630]();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return MEMORY[0x1E0CDA640]();
}

uint64_t EnvironmentValues.layoutDirection.getter()
{
  return MEMORY[0x1E0CDA648]();
}

uint64_t EnvironmentValues.layoutDirection.setter()
{
  return MEMORY[0x1E0CDA650]();
}

uint64_t EnvironmentValues.redactionReasons.getter()
{
  return MEMORY[0x1E0CDA6A0]();
}

uint64_t EnvironmentValues.redactionReasons.setter()
{
  return MEMORY[0x1E0CDA6B0]();
}

uint64_t EnvironmentValues.verticalSizeClass.getter()
{
  return MEMORY[0x1E0CDA6F8]();
}

uint64_t EnvironmentValues.verticalSizeClass.setter()
{
  return MEMORY[0x1E0CDA700]();
}

uint64_t EnvironmentValues._buttonBorderShape.getter()
{
  return MEMORY[0x1E0CDA710]();
}

uint64_t EnvironmentValues._buttonBorderShape.setter()
{
  return MEMORY[0x1E0CDA718]();
}

uint64_t EnvironmentValues.backgroundMaterial.getter()
{
  return MEMORY[0x1E0CDA720]();
}

uint64_t EnvironmentValues.backgroundMaterial.setter()
{
  return MEMORY[0x1E0CDA728]();
}

uint64_t EnvironmentValues.horizontalSizeClass.getter()
{
  return MEMORY[0x1E0CDA768]();
}

uint64_t EnvironmentValues.horizontalSizeClass.setter()
{
  return MEMORY[0x1E0CDA780]();
}

uint64_t EnvironmentValues.symbolRenderingMode.getter()
{
  return MEMORY[0x1E0CDA788]();
}

uint64_t EnvironmentValues.symbolRenderingMode.setter()
{
  return MEMORY[0x1E0CDA790]();
}

uint64_t EnvironmentValues.multimodalListLayout.getter()
{
  return MEMORY[0x1E0CDA7D8]();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return MEMORY[0x1E0CDA7F8]();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return MEMORY[0x1E0CDA810]();
}

uint64_t EnvironmentValues.menuIndicatorVisibility.getter()
{
  return MEMORY[0x1E0CDA828]();
}

uint64_t EnvironmentValues.menuIndicatorVisibility.setter()
{
  return MEMORY[0x1E0CDA830]();
}

uint64_t EnvironmentValues.accessibilityVoiceOverEnabled.getter()
{
  return MEMORY[0x1E0CDA888]();
}

uint64_t EnvironmentValues.font.getter()
{
  return MEMORY[0x1E0CDA8D8]();
}

uint64_t EnvironmentValues.font.setter()
{
  return MEMORY[0x1E0CDA8E0]();
}

uint64_t EnvironmentValues.tint.getter()
{
  return MEMORY[0x1E0CDA8F8]();
}

uint64_t EnvironmentValues.tint.setter()
{
  return MEMORY[0x1E0CDA908]();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return MEMORY[0x1E0CDA938]();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return MEMORY[0x1E0CDA9C0]();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return MEMORY[0x1E0CDA9C8]();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return MEMORY[0x1E0CDA9D0]();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return MEMORY[0x1E0CDA9E0]();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return MEMORY[0x1E0CDA9F0]();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return MEMORY[0x1E0CDA9F8]();
}

uint64_t EnvironmentValues.init()()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t EnvironmentValues.subscript.getter()
{
  return MEMORY[0x1E0CDAA58]();
}

{
  return MEMORY[0x1E0CDAA68]();
}

uint64_t EnvironmentValues.subscript.setter()
{
  return MEMORY[0x1E0CDAA60]();
}

{
  return MEMORY[0x1E0CDAA78]();
}

uint64_t type metadata accessor for PlatterButtonType()
{
  return MEMORY[0x1E0CDABE0]();
}

uint64_t static VerticalAlignment.lastTextBaseline.getter()
{
  return MEMORY[0x1E0CDAC88]();
}

uint64_t static VerticalAlignment.firstTextBaseline.getter()
{
  return MEMORY[0x1E0CDAC98]();
}

uint64_t static VerticalAlignment.== infix(_:_:)()
{
  return MEMORY[0x1E0CDACA8]();
}

uint64_t static VerticalAlignment.top.getter()
{
  return MEMORY[0x1E0CDACB8]();
}

uint64_t static VerticalAlignment.bottom.getter()
{
  return MEMORY[0x1E0CDACC0]();
}

uint64_t static VerticalAlignment.center.getter()
{
  return MEMORY[0x1E0CDACC8]();
}

uint64_t type metadata accessor for ColorRenderingMode()
{
  return MEMORY[0x1E0CDAEA0]();
}

uint64_t IconOnlyLabelStyle.init()()
{
  return MEMORY[0x1E0CDAF28]();
}

uint64_t type metadata accessor for IconOnlyLabelStyle()
{
  return MEMORY[0x1E0CDAF30]();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return MEMORY[0x1E0CDAFF8]();
}

uint64_t static PresentationDetent.height(_:)()
{
  return MEMORY[0x1E0CDB078]();
}

uint64_t type metadata accessor for PresentationDetent()
{
  return MEMORY[0x1E0CDB090]();
}

uint64_t static RoundedCornerStyle.== infix(_:_:)()
{
  return MEMORY[0x1E0CDB0D0]();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return MEMORY[0x1E0CDB0E8]();
}

uint64_t type metadata accessor for _AnimationModifier()
{
  return MEMORY[0x1E0CDB130]();
}

uint64_t ContentSizeCategory.isAccessibilityCategory.getter()
{
  return MEMORY[0x1E0CDB310]();
}

uint64_t type metadata accessor for ContentSizeCategory()
{
  return MEMORY[0x1E0CDB388]();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return MEMORY[0x1E0CDB420]();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return MEMORY[0x1E0CDB430]();
}

uint64_t type metadata accessor for MultimodalListStyle.Layout()
{
  return MEMORY[0x1E0CDB478]();
}

uint64_t static SymbolRenderingMode.monochrome.getter()
{
  return MEMORY[0x1E0CDB530]();
}

uint64_t static SymbolRenderingMode.hierarchical.getter()
{
  return MEMORY[0x1E0CDB540]();
}

uint64_t type metadata accessor for SymbolRenderingMode()
{
  return MEMORY[0x1E0CDB558]();
}

uint64_t TitleOnlyLabelStyle.init()()
{
  return MEMORY[0x1E0CDB580]();
}

uint64_t type metadata accessor for TitleOnlyLabelStyle()
{
  return MEMORY[0x1E0CDB588]();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return MEMORY[0x1E0CDB5D0]();
}

uint64_t UIHostingController.safeAreaRegions.setter()
{
  return MEMORY[0x1E0CDB5D8]();
}

uint64_t UIHostingController.init(coder:rootView:)()
{
  return MEMORY[0x1E0CDB5F0]();
}

uint64_t UIHostingController.init(rootView:)()
{
  return MEMORY[0x1E0CDB608]();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return MEMORY[0x1E0CDB658]();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return MEMORY[0x1E0CDB668]();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return MEMORY[0x1E0CDB678]();
}

uint64_t static UIViewRepresentable._makeViewList(view:inputs:)()
{
  return MEMORY[0x1E0CDB688]();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return MEMORY[0x1E0CDB698]();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return MEMORY[0x1E0CDB6A8]();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return MEMORY[0x1E0CDB6B8]();
}

uint64_t UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)()
{
  return MEMORY[0x1E0CDB6D0]();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return MEMORY[0x1E0CDB6E0]();
}

uint64_t UIViewRepresentable.body.getter()
{
  return MEMORY[0x1E0CDB6F0]();
}

uint64_t static UIViewRepresentable._makeView(view:inputs:)()
{
  return MEMORY[0x1E0CDB6F8]();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return MEMORY[0x1E0CDB708]();
}

uint64_t type metadata accessor for _BackgroundModifier()
{
  return MEMORY[0x1E0CDB820]();
}

uint64_t type metadata accessor for _ConditionalContent.Storage()
{
  return MEMORY[0x1E0CDB848]();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return MEMORY[0x1E0CDB880]();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return MEMORY[0x1E0CDB9C8]();
}

uint64_t type metadata accessor for NamedCoordinateSpace()
{
  return MEMORY[0x1E0CDB9F0]();
}

uint64_t withBridgedAnimation<A>(_:_:completion:)()
{
  return MEMORY[0x1E0CDBC60]();
}

uint64_t withBridgedAnimation<A>(_:_:)()
{
  return MEMORY[0x1E0CDBC68]();
}

uint64_t BorderlessButtonStyle.init()()
{
  return MEMORY[0x1E0CDBC88]();
}

uint64_t type metadata accessor for BorderlessButtonStyle()
{
  return MEMORY[0x1E0CDBC90]();
}

uint64_t type metadata accessor for GlobalCoordinateSpace()
{
  return MEMORY[0x1E0CDBD20]();
}

uint64_t type metadata accessor for PinnedScrollableViews()
{
  return MEMORY[0x1E0CDBDB8]();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return MEMORY[0x1E0CDBF88]();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return MEMORY[0x1E0CDBF98]();
}

uint64_t static HierarchicalShapeStyle.tertiary.getter()
{
  return MEMORY[0x1E0CDBFA0]();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return MEMORY[0x1E0CDBFA8]();
}

uint64_t type metadata accessor for MenuStyleConfiguration()
{
  return MEMORY[0x1E0CDC018]();
}

uint64_t PlatterButtonStyleView.init(configuration:background:foregroundColor:type:includesPadding:)()
{
  return MEMORY[0x1E0CDC050]();
}

uint64_t PlatterShadowedContent.init(shape:isPressed:content:)()
{
  return MEMORY[0x1E0CDC068]();
}

uint64_t type metadata accessor for PlatterShadowedContent()
{
  return MEMORY[0x1E0CDC070]();
}

uint64_t UIHostingConfiguration<>.init(content:)()
{
  return MEMORY[0x1E0CDC108]();
}

uint64_t type metadata accessor for UserInterfaceSizeClass()
{
  return MEMORY[0x1E0CDC170]();
}

uint64_t static AccessibilityActionKind.escape.getter()
{
  return MEMORY[0x1E0CDC2B0]();
}

uint64_t type metadata accessor for AccessibilityActionKind()
{
  return MEMORY[0x1E0CDC2C8]();
}

uint64_t AccessibilityFocusState.wrappedValue.getter()
{
  return MEMORY[0x1E0CDC2D8]();
}

uint64_t AccessibilityFocusState.projectedValue.getter()
{
  return MEMORY[0x1E0CDC2E8]();
}

uint64_t AccessibilityFocusState.init<>()()
{
  return MEMORY[0x1E0CDC2F0]();
}

uint64_t type metadata accessor for AccessibilityFocusState()
{
  return MEMORY[0x1E0CDC2F8]();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return MEMORY[0x1E0CDC308]();
}

uint64_t static CoordinateSpaceProtocol<>.named<A>(_:)()
{
  return MEMORY[0x1E0CDC320]();
}

uint64_t static CoordinateSpaceProtocol<>.global.getter()
{
  return MEMORY[0x1E0CDC328]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return MEMORY[0x1E0CDC528]();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x1E0CDC550]();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return MEMORY[0x1E0CDC560]();
}

uint64_t type metadata accessor for ButtonStyleConfiguration()
{
  return MEMORY[0x1E0CDC568]();
}

uint64_t type metadata accessor for _BackgroundStyleModifier()
{
  return MEMORY[0x1E0CDC6B0]();
}

uint64_t type metadata accessor for AccessibilityTechnologies()
{
  return MEMORY[0x1E0CDC748]();
}

uint64_t BorderlessButtonMenuStyle.init()()
{
  return MEMORY[0x1E0CDC780]();
}

uint64_t type metadata accessor for BorderlessButtonMenuStyle()
{
  return MEMORY[0x1E0CDC788]();
}

uint64_t static AccessibilityChildBehavior.ignore.getter()
{
  return MEMORY[0x1E0CDC968]();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return MEMORY[0x1E0CDC978]();
}

uint64_t static AccessibilityChildBehavior.contain.getter()
{
  return MEMORY[0x1E0CDC988]();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return MEMORY[0x1E0CDC990]();
}

uint64_t UIViewRepresentableContext.environment.getter()
{
  return MEMORY[0x1E0CDCA40]();
}

uint64_t static AnimationCompletionCriteria.logicallyComplete.getter()
{
  return MEMORY[0x1E0CDCAF8]();
}

uint64_t type metadata accessor for AnimationCompletionCriteria()
{
  return MEMORY[0x1E0CDCB08]();
}

uint64_t BorderedProminentButtonStyle.init()()
{
  return MEMORY[0x1E0CDCDB0]();
}

uint64_t type metadata accessor for BorderedProminentButtonStyle()
{
  return MEMORY[0x1E0CDCDC0]();
}

uint64_t UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)()
{
  return MEMORY[0x1E0CDCE48]();
}

uint64_t static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)()
{
  return MEMORY[0x1E0CDCE60]();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return MEMORY[0x1E0CDCE68]();
}

uint64_t static UIViewControllerRepresentable._makeViewList(view:inputs:)()
{
  return MEMORY[0x1E0CDCE78]();
}

uint64_t static UIViewControllerRepresentable._layoutOptions(_:)()
{
  return MEMORY[0x1E0CDCE90]();
}

uint64_t UIViewControllerRepresentable._identifiedViewTree(in:)()
{
  return MEMORY[0x1E0CDCEA0]();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return MEMORY[0x1E0CDCEB0]();
}

uint64_t static UIViewControllerRepresentable._makeView(view:inputs:)()
{
  return MEMORY[0x1E0CDCEB8]();
}

uint64_t UIViewControllerRepresentable<>.makeCoordinator()()
{
  return MEMORY[0x1E0CDCEC8]();
}

uint64_t type metadata accessor for AccessibilityAttachmentModifier()
{
  return MEMORY[0x1E0CDCFD0]();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return MEMORY[0x1E0CDD0A0]();
}

uint64_t static UIHostingControllerSizingOptions.preferredContentSize.getter()
{
  return MEMORY[0x1E0CDD0A8]();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return MEMORY[0x1E0CDD0B0]();
}

uint64_t type metadata accessor for PrimitiveButtonStyleConfiguration.Label()
{
  return MEMORY[0x1E0CDD128]();
}

uint64_t PrimitiveButtonStyleConfiguration.label.getter()
{
  return MEMORY[0x1E0CDD138]();
}

Swift::Void __swiftcall PrimitiveButtonStyleConfiguration.trigger()()
{
  MEMORY[0x1E0CDD140]();
}

uint64_t type metadata accessor for PrimitiveButtonStyleConfiguration()
{
  return MEMORY[0x1E0CDD148]();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return MEMORY[0x1E0CDD300]();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return MEMORY[0x1E0CDD310]();
}

uint64_t static Axis.Set.vertical.getter()
{
  return MEMORY[0x1E0CDD320]();
}

uint64_t Axis.rawValue.getter()
{
  return MEMORY[0x1E0CDD338]();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return MEMORY[0x1E0CDD348]();
}

uint64_t static Edge.Set.all.getter()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t static Edge.Set.top.getter()
{
  return MEMORY[0x1E0CDD368]();
}

uint64_t static Edge.Set.bottom.getter()
{
  return MEMORY[0x1E0CDD380]();
}

uint64_t static Edge.Set.leading.getter()
{
  return MEMORY[0x1E0CDD390]();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return MEMORY[0x1E0CDD3A0]();
}

uint64_t static Edge.Set.trailing.getter()
{
  return MEMORY[0x1E0CDD3B0]();
}

uint64_t static Edge.Set.vertical.getter()
{
  return MEMORY[0x1E0CDD3C0]();
}

uint64_t Edge.rawValue.getter()
{
  return MEMORY[0x1E0CDD3E8]();
}

uint64_t static Font.largeTitle.getter()
{
  return MEMORY[0x1E0CDD418]();
}

uint64_t static Font.subheadline.getter()
{
  return MEMORY[0x1E0CDD438]();
}

uint64_t static Font.body.getter()
{
  return MEMORY[0x1E0CDD4D8]();
}

uint64_t Font.bold()()
{
  return MEMORY[0x1E0CDD4E0]();
}

uint64_t static Font.title.getter()
{
  return MEMORY[0x1E0CDD520]();
}

uint64_t type metadata accessor for Font.Design()
{
  return MEMORY[0x1E0CDD560]();
}

uint64_t static Font.Weight.bold.getter()
{
  return MEMORY[0x1E0CDD590]();
}

uint64_t static Font.Weight.medium.getter()
{
  return MEMORY[0x1E0CDD5E0]();
}

uint64_t static Font.Weight.regular.getter()
{
  return MEMORY[0x1E0CDD5E8]();
}

uint64_t static Font.Weight.semibold.getter()
{
  return MEMORY[0x1E0CDD5F8]();
}

uint64_t static Font.system(size:weight:design:)()
{
  return MEMORY[0x1E0CDD638]();
}

uint64_t static Font.system(_:design:weight:)()
{
  return MEMORY[0x1E0CDD658]();
}

uint64_t static Font.title2.getter()
{
  return MEMORY[0x1E0CDD668]();
}

uint64_t static Font.title3.getter()
{
  return MEMORY[0x1E0CDD678]();
}

uint64_t Font.weight(_:)()
{
  return MEMORY[0x1E0CDD688]();
}

uint64_t type metadata accessor for Font.Leading()
{
  return MEMORY[0x1E0CDD6F8]();
}

uint64_t static Font.callout.getter()
{
  return MEMORY[0x1E0CDD718]();
}

uint64_t static Font.caption.getter()
{
  return MEMORY[0x1E0CDD728]();
}

uint64_t Font.leading(_:)()
{
  return MEMORY[0x1E0CDD740]();
}

uint64_t static Font.caption2.getter()
{
  return MEMORY[0x1E0CDD750]();
}

uint64_t static Font.footnote.getter()
{
  return MEMORY[0x1E0CDD770]();
}

uint64_t static Font.headline.getter()
{
  return MEMORY[0x1E0CDD780]();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return MEMORY[0x1E0CDD7F0]();
}

uint64_t Font.init(_:)()
{
  return MEMORY[0x1E0CDD860]();
}

uint64_t List<>.init(content:)()
{
  return MEMORY[0x1E0CDD928]();
}

uint64_t Menu.init(content:label:)()
{
  return MEMORY[0x1E0CDD960]();
}

uint64_t Menu<>.init(_:)()
{
  return MEMORY[0x1E0CDD968]();
}

uint64_t type metadata accessor for Menu()
{
  return MEMORY[0x1E0CDD970]();
}

Swift::Void __swiftcall Path.addEllipse(in:transform:)(__C::CGRect in, CGAffineTransform *transform)
{
  MEMORY[0x1E0CDD9B8](transform, (__n128)in.origin, *(__n128 *)&in.origin.y, (__n128)in.size, *(__n128 *)&in.size.height);
}

uint64_t Path.addRoundedRect(in:cornerSize:style:transform:)()
{
  return MEMORY[0x1E0CDD9E0]();
}

Swift::Void __swiftcall Path.move(to:)(CGPoint to)
{
  unint64_t v1;
  unint64_t v2;

  MEMORY[0x1E0CDD9E8]((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

uint64_t Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)()
{
  return MEMORY[0x1E0CDD9F8]();
}

Swift::Void __swiftcall Path.addLine(to:)(CGPoint to)
{
  unint64_t v1;
  unint64_t v2;

  MEMORY[0x1E0CDDA10]((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

uint64_t Path.init(_:)()
{
  return MEMORY[0x1E0CDDA70]();
}

{
  return MEMORY[0x1E0CDDA78]();
}

uint64_t Text.fontWeight(_:)()
{
  return MEMORY[0x1E0CDDAA0]();
}

uint64_t type metadata accessor for Text.TruncationMode()
{
  return MEMORY[0x1E0CDDB68]();
}

uint64_t Text.foregroundColor(_:)()
{
  return MEMORY[0x1E0CDDB88]();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return MEMORY[0x1E0CDDB98]();
}

uint64_t Text.font(_:)()
{
  return MEMORY[0x1E0CDDC48]();
}

uint64_t static Text.LineStyle.Pattern.solid.getter()
{
  return MEMORY[0x1E0CDDD18]();
}

uint64_t type metadata accessor for Text.LineStyle.Pattern()
{
  return MEMORY[0x1E0CDDD20]();
}

uint64_t Text.LineStyle.init(pattern:color:)()
{
  return MEMORY[0x1E0CDDD28]();
}

uint64_t type metadata accessor for Text.LineStyle()
{
  return MEMORY[0x1E0CDDD30]();
}

uint64_t Text.init(_:)()
{
  return MEMORY[0x1E0CDDDC0]();
}

uint64_t Text.init<A>(_:)()
{
  return MEMORY[0x1E0CDDDD0]();
}

uint64_t View.navigationTitle(_:)()
{
  return MEMORY[0x1E0D133B8]();
}

uint64_t static View._makeView(view:inputs:)()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t View.background<A>(alignment:content:)()
{
  return MEMORY[0x1E0CDDE98]();
}

uint64_t View.background<A>(_:ignoresSafeAreaEdges:)()
{
  return MEMORY[0x1E0CDDEA0]();
}

uint64_t View.background<A>(_:alignment:)()
{
  return MEMORY[0x1E0CDDEB0]();
}

uint64_t View.fontWeight(_:)()
{
  return MEMORY[0x1E0CDDEE0]();
}

uint64_t View.labelStyle<A>(_:)()
{
  return MEMORY[0x1E0CDDF08]();
}

uint64_t View.transition(_:)()
{
  return MEMORY[0x1E0CDDF80]();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return MEMORY[0x1E0CDDFD0]();
}

{
  return MEMORY[0x1E0CDDFF0]();
}

uint64_t View.environment<A>(_:)()
{
  return MEMORY[0x1E0CDE038]();
}

uint64_t View.environment<A>(_:_:)()
{
  return MEMORY[0x1E0CDE050]();
}

uint64_t View.layoutValue<A>(key:value:)()
{
  return MEMORY[0x1E0CDE080]();
}

uint64_t View.scaleEffect(_:anchor:)()
{
  return MEMORY[0x1E0CDE120]();
}

uint64_t View._colorMatrix(_:)()
{
  return MEMORY[0x1E0CDE1A8]();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return MEMORY[0x1E0CDE230]();
}

uint64_t View.accessibility(hidden:)()
{
  return MEMORY[0x1E0CDE2E0]();
}

uint64_t static View._viewListCount(inputs:)()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t View.foregroundColor(_:)()
{
  return MEMORY[0x1E0CDE4D0]();
}

uint64_t View.ignoresSafeArea(_:edges:)()
{
  return MEMORY[0x1E0CDE538]();
}

uint64_t View.navigationTitle<A, B>(_:icon:)()
{
  return MEMORY[0x1E0CDE560]();
}

uint64_t View.sensoryFeedback<A>(_:trigger:condition:)()
{
  return MEMORY[0x1E0CDE5A0]();
}

uint64_t View.anchorPreference<A, B>(key:value:transform:)()
{
  return MEMORY[0x1E0CDE5B8]();
}

uint64_t View.privacySensitive(_:)()
{
  return MEMORY[0x1E0CDE638]();
}

uint64_t View.accessibilityLabel(_:)()
{
  return MEMORY[0x1E0CDE768]();
}

{
  return MEMORY[0x1E0CDE778]();
}

uint64_t View.accessibilityLabel<A>(_:)()
{
  return MEMORY[0x1E0CDE788]();
}

uint64_t View.onPreferenceChange<A>(_:perform:)()
{
  return MEMORY[0x1E0CDE900]();
}

uint64_t View.accessibilityAction(_:_:)()
{
  return MEMORY[0x1E0CDE950]();
}

uint64_t View.accessibilityHidden(_:)()
{
  return MEMORY[0x1E0CDE960]();
}

uint64_t View.presentationDetents(_:)()
{
  return MEMORY[0x1E0CDEA38]();
}

uint64_t View.accessibilityElement(children:)()
{
  return MEMORY[0x1E0CDEA88]();
}

uint64_t View.accessibilityFocused(_:)()
{
  return MEMORY[0x1E0CDEAA0]();
}

uint64_t View.navigationDestination<A, B>(for:destination:)()
{
  return MEMORY[0x1E0CDEB50]();
}

uint64_t View.overlayPreferenceValue<A, B>(_:alignment:_:)()
{
  return MEMORY[0x1E0CDEC20]();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t View.interactiveDismissDisabled(_:)()
{
  return MEMORY[0x1E0CDED10]();
}

uint64_t View.id<A>(_:)()
{
  return MEMORY[0x1E0CDEDB0]();
}

uint64_t View.font(_:)()
{
  return MEMORY[0x1E0CDEE48]();
}

uint64_t View.mask<A>(_:)()
{
  return MEMORY[0x1E0CDEE80]();
}

uint64_t View.badge(_:)()
{
  return MEMORY[0x1E0CDEF30]();
}

uint64_t View.frame(width:height:alignment:)()
{
  return MEMORY[0x1E0CDEF40]();
}

uint64_t View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return MEMORY[0x1E0CDEF48]();
}

uint64_t View.sheet<A>(isPresented:onDismiss:content:)()
{
  return MEMORY[0x1E0CDEF58]();
}

uint64_t View.gesture<A>(_:including:)()
{
  return MEMORY[0x1E0CDF020]();
}

uint64_t View.opacity(_:)()
{
  return MEMORY[0x1E0CDF048]();
}

uint64_t View.overlay<A>(alignment:content:)()
{
  return MEMORY[0x1E0CDF058]();
}

uint64_t View.disabled(_:)()
{
  return MEMORY[0x1E0CDF110]();
}

uint64_t View.modifier<A>(_:)()
{
  return MEMORY[0x1E0CDF128]();
}

uint64_t View.onAppear(perform:)()
{
  return MEMORY[0x1E0CDF130]();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return MEMORY[0x1E0CDF138]();
}

{
  return MEMORY[0x1E0CDF158]();
}

uint64_t View.redacted(reason:)()
{
  return MEMORY[0x1E0CDF1A0]();
}

uint64_t View.animation<A>(_:value:)()
{
  return MEMORY[0x1E0CDF1E8]();
}

uint64_t View.clipShape<A>(_:style:)()
{
  return MEMORY[0x1E0CDF208]();
}

uint64_t View.lineLimit(_:reservesSpace:)()
{
  return MEMORY[0x1E0CDF278]();
}

uint64_t View.menuOrder(_:)()
{
  return MEMORY[0x1E0CDF2D0]();
}

uint64_t View.menuStyle<A>(_:)()
{
  return MEMORY[0x1E0CDF2E0]();
}

uint64_t static Color.clarityUIButtonShadowColor.getter()
{
  return MEMORY[0x1E0CDF390]();
}

uint64_t Color.init(uiColor:)()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return MEMORY[0x1E0CDF3F0]();
}

uint64_t static Color.clarityUIButtonBackground.getter()
{
  return MEMORY[0x1E0CDF400]();
}

uint64_t static Color.clarityUIContentBackground.getter()
{
  return MEMORY[0x1E0CDF408]();
}

uint64_t static Color.clarityUIPressedButtonOverlay.getter()
{
  return MEMORY[0x1E0CDF410]();
}

uint64_t static Color.red.getter()
{
  return MEMORY[0x1E0CDF438]();
}

uint64_t static Color.blue.getter()
{
  return MEMORY[0x1E0CDF440]();
}

uint64_t static Color.gray.getter()
{
  return MEMORY[0x1E0CDF458]();
}

uint64_t static Color.black.getter()
{
  return MEMORY[0x1E0CDF490]();
}

uint64_t static Color.clear.getter()
{
  return MEMORY[0x1E0CDF4A8]();
}

uint64_t static Color.green.getter()
{
  return MEMORY[0x1E0CDF4B8]();
}

uint64_t static Color.white.getter()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t Color._apply(to:)()
{
  return MEMORY[0x1E0CDF4D8]();
}

uint64_t static Color.orange.getter()
{
  return MEMORY[0x1E0CDF4E8]();
}

uint64_t static Color.yellow.getter()
{
  return MEMORY[0x1E0CDF508]();
}

uint64_t Color.opacity(_:)()
{
  return MEMORY[0x1E0CDF520]();
}

uint64_t static Color.primary.getter()
{
  return MEMORY[0x1E0CDF530]();
}

uint64_t Color.resolve(in:)()
{
  return MEMORY[0x1E0CDF538]();
}

uint64_t Color.Resolved.cgColor.getter()
{
  return MEMORY[0x1E0CDF540]();
}

uint64_t static Color.secondary.getter()
{
  return MEMORY[0x1E0CDF588]();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return MEMORY[0x1E0CDF5F8]();
}

uint64_t Color.init(_:white:opacity:)()
{
  return MEMORY[0x1E0CDF608]();
}

uint64_t Color.init(_:)()
{
  return MEMORY[0x1E0CDF628]();
}

uint64_t Image.init(uiImage:)()
{
  return MEMORY[0x1E0CDF6A8]();
}

uint64_t Image.init(systemName:)()
{
  return MEMORY[0x1E0CDF6D8]();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t Image.renderingMode(_:)()
{
  return MEMORY[0x1E0CDF730]();
}

uint64_t Image.symbolRenderingMode(_:)()
{
  return MEMORY[0x1E0CDF758]();
}

uint64_t type metadata accessor for Image.TemplateRenderingMode()
{
  return MEMORY[0x1E0CDF788]();
}

uint64_t static Image.== infix(_:_:)()
{
  return MEMORY[0x1E0CDF7A0]();
}

uint64_t type metadata accessor for Image.Scale()
{
  return MEMORY[0x1E0CDF7E8]();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t Label<>.init(_:)()
{
  return MEMORY[0x1E0D133C8]();
}

uint64_t Label.init(title:icon:)()
{
  return MEMORY[0x1E0CDF878]();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return MEMORY[0x1E0CDF888]();
}

uint64_t type metadata accessor for Label()
{
  return MEMORY[0x1E0CDF8B0]();
}

uint64_t Shape.fillShadow(color:radius:x:y:)()
{
  return MEMORY[0x1E0CDF8F0]();
}

uint64_t Shape.sizeThatFits(_:)()
{
  return MEMORY[0x1E0CDF900]();
}

uint64_t static Shape._makeViewList(view:inputs:)()
{
  return MEMORY[0x1E0CDF908]();
}

uint64_t Shape.layoutDirectionBehavior.getter()
{
  return MEMORY[0x1E0CDF918]();
}

uint64_t Shape.body.getter()
{
  return MEMORY[0x1E0CDF928]();
}

uint64_t static Shape.role.getter()
{
  return MEMORY[0x1E0CDF938]();
}

uint64_t static Shape._makeView(view:inputs:)()
{
  return MEMORY[0x1E0CDF950]();
}

uint64_t State.init(wrappedValue:)()
{
  return MEMORY[0x1E0CDF968]();
}

uint64_t State.wrappedValue.getter()
{
  return MEMORY[0x1E0CDF970]();
}

uint64_t State.wrappedValue.setter()
{
  return MEMORY[0x1E0CDF988]();
}

uint64_t State.projectedValue.getter()
{
  return MEMORY[0x1E0CDF990]();
}

uint64_t type metadata accessor for State()
{
  return MEMORY[0x1E0CDF9A8]();
}

uint64_t static Anchor.Source<A>.bounds.getter()
{
  return MEMORY[0x1E0CDF9C8]();
}

uint64_t static Anchor<A>.== infix(_:_:)()
{
  return MEMORY[0x1E0CDF9D0]();
}

uint64_t Button.init(action:label:)()
{
  return MEMORY[0x1E0CDF9F0]();
}

uint64_t Button<>.init(_:)()
{
  return MEMORY[0x1E0CDFA00]();
}

uint64_t Button<>.init<A>(_:role:action:)()
{
  return MEMORY[0x1E0CDFA10]();
}

uint64_t Button<>.init(_:action:)()
{
  return MEMORY[0x1E0CDFA20]();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return MEMORY[0x1E0CDFA28]();
}

uint64_t Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)()
{
  return MEMORY[0x1E0CDFA70]();
}

uint64_t HStack.init(alignment:spacing:content:)()
{
  return MEMORY[0x1E0CDFAE0]();
}

uint64_t type metadata accessor for HStack()
{
  return MEMORY[0x1E0CDFAF0]();
}

uint64_t type metadata accessor for IDView()
{
  return MEMORY[0x1E0CDFB18]();
}

uint64_t static Layout._makeLayoutView(root:inputs:body:)()
{
  return MEMORY[0x1E0CDFB40]();
}

uint64_t Layout.updateCache(_:subviews:)()
{
  return MEMORY[0x1E0CDFB48]();
}

uint64_t static Layout.layoutProperties.getter()
{
  return MEMORY[0x1E0CDFB50]();
}

uint64_t Layout.spacing(subviews:cache:)()
{
  return MEMORY[0x1E0CDFB68]();
}

uint64_t Layout<>.makeCache(subviews:)()
{
  return MEMORY[0x1E0CDFB70]();
}

uint64_t VStack.init(alignment:spacing:content:)()
{
  return MEMORY[0x1E0CDFC88]();
}

uint64_t type metadata accessor for VStack()
{
  return MEMORY[0x1E0CDFCA0]();
}

uint64_t ZStack.init(alignment:content:)()
{
  return MEMORY[0x1E0CDFCD8]();
}

uint64_t type metadata accessor for ZStack()
{
  return MEMORY[0x1E0CDFCE0]();
}

uint64_t AnyView.init<A>(_:)()
{
  return MEMORY[0x1E0CDFD20]();
}

uint64_t Binding.wrappedValue.getter()
{
  return MEMORY[0x1E0CDFD38]();
}

uint64_t Binding.wrappedValue.setter()
{
  return MEMORY[0x1E0CDFD48]();
}

uint64_t Binding.subscript.getter()
{
  return MEMORY[0x1E0CDFD58]();
}

uint64_t Binding.projectedValue.getter()
{
  return MEMORY[0x1E0CDFD70]();
}

uint64_t type metadata accessor for Binding()
{
  return MEMORY[0x1E0CDFDB8]();
}

uint64_t type metadata accessor for Capsule()
{
  return MEMORY[0x1E0CDFE18]();
}

uint64_t Divider.init()()
{
  return MEMORY[0x1E0CDFE48]();
}

uint64_t type metadata accessor for Divider()
{
  return MEMORY[0x1E0CDFE58]();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return MEMORY[0x1E0CDFE98]();
}

uint64_t ForEach<>.init(_:content:)()
{
  return MEMORY[0x1E0CDFEA8]();
}

uint64_t type metadata accessor for ForEach()
{
  return MEMORY[0x1E0CDFEC0]();
}

uint64_t Gesture.onEnded(_:)()
{
  return MEMORY[0x1E0CDFEF0]();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return MEMORY[0x1E0CDFEF8]();
}

uint64_t Section<>.init<A>(_:content:)()
{
  return MEMORY[0x1E0CDFF30]();
}

uint64_t Section<>.init(header:content:)()
{
  return MEMORY[0x1E0CDFF48]();
}

uint64_t Bindable.wrappedValue.modify()
{
  return MEMORY[0x1E0CE0000]();
}

uint64_t Bindable.wrappedValue.getter()
{
  return MEMORY[0x1E0CE0008]();
}

uint64_t Bindable.wrappedValue.setter()
{
  return MEMORY[0x1E0CE0018]();
}

uint64_t Bindable.projectedValue.getter()
{
  return MEMORY[0x1E0CE0020]();
}

uint64_t Bindable<A>.init(wrappedValue:)()
{
  return MEMORY[0x1E0CE0038]();
}

uint64_t type metadata accessor for Bindable()
{
  return MEMORY[0x1E0CE0058]();
}

uint64_t Gradient.Stop.init(color:location:)()
{
  return MEMORY[0x1E0CE00C0]();
}

uint64_t Gradient.init(stops:)()
{
  return MEMORY[0x1E0CE00D8]();
}

uint64_t Gradient.init(colors:)()
{
  return MEMORY[0x1E0CE00E0]();
}

uint64_t static Material.thin.getter()
{
  return MEMORY[0x1E0CE0178]();
}

uint64_t Material._apply(to:)()
{
  return MEMORY[0x1E0CE0188]();
}

uint64_t static Material.regular.getter()
{
  return MEMORY[0x1E0CE0190]();
}

uint64_t static Material.ultraThin.getter()
{
  return MEMORY[0x1E0CE0198]();
}

uint64_t type metadata accessor for Material()
{
  return MEMORY[0x1E0CE01B0]();
}

uint64_t static Alignment.topLeading.getter()
{
  return MEMORY[0x1E0CE01D8]();
}

uint64_t static Alignment.topTrailing.getter()
{
  return MEMORY[0x1E0CE01E0]();
}

uint64_t static Alignment.bottomLeading.getter()
{
  return MEMORY[0x1E0CE01E8]();
}

uint64_t static Alignment.bottomTrailing.getter()
{
  return MEMORY[0x1E0CE01F0]();
}

uint64_t static Alignment.top.getter()
{
  return MEMORY[0x1E0CE0200]();
}

uint64_t static Alignment.bottom.getter()
{
  return MEMORY[0x1E0CE0208]();
}

uint64_t static Alignment.center.getter()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t static Alignment.leading.getter()
{
  return MEMORY[0x1E0CE0228]();
}

uint64_t static Alignment.trailing.getter()
{
  return MEMORY[0x1E0CE0238]();
}

uint64_t static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)()
{
  return MEMORY[0x1E0CE0280]();
}

uint64_t Animation.delay(_:)()
{
  return MEMORY[0x1E0CE0290]();
}

uint64_t Animation.speed(_:)()
{
  return MEMORY[0x1E0CE0298]();
}

uint64_t static Animation.easeIn(duration:)()
{
  return MEMORY[0x1E0CE02A0]();
}

uint64_t static Animation.linear(duration:)()
{
  return MEMORY[0x1E0CE02B0]();
}

uint64_t static Animation.spring(response:dampingFraction:blendDuration:)()
{
  return MEMORY[0x1E0CE02C8]();
}

uint64_t static Animation.default.getter()
{
  return MEMORY[0x1E0CE02D8]();
}

uint64_t static Animation.easeOut.getter()
{
  return MEMORY[0x1E0CE02E8]();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return MEMORY[0x1E0CE02F0]();
}

uint64_t static Animation.easeInOut.getter()
{
  return MEMORY[0x1E0CE02F8]();
}

uint64_t AnyLayout.init<A>(_:)()
{
  return MEMORY[0x1E0CE0330]();
}

uint64_t type metadata accessor for BlendMode()
{
  return MEMORY[0x1E0CE03F0]();
}

uint64_t static MenuOrder.fixed.getter()
{
  return MEMORY[0x1E0CE04F0]();
}

uint64_t type metadata accessor for MenuOrder()
{
  return MEMORY[0x1E0CE04F8]();
}

uint64_t type metadata accessor for ShapeRole()
{
  return MEMORY[0x1E0CE05A0]();
}

uint64_t type metadata accessor for TupleView()
{
  return MEMORY[0x1E0CE0648]();
}

uint64_t TupleView.init(_:)()
{
  return MEMORY[0x1E0CE0670]();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return MEMORY[0x1E0CE0698]();
}

uint64_t static UnitPoint.topTrailing.getter()
{
  return MEMORY[0x1E0CE06A0]();
}

uint64_t static UnitPoint.bottomLeading.getter()
{
  return MEMORY[0x1E0CE06A8]();
}

uint64_t static UnitPoint.bottomTrailing.getter()
{
  return MEMORY[0x1E0CE06B0]();
}

uint64_t static UnitPoint.top.getter()
{
  return MEMORY[0x1E0CE06B8]();
}

uint64_t static UnitPoint.bottom.getter()
{
  return MEMORY[0x1E0CE06C8]();
}

uint64_t static UnitPoint.center.getter()
{
  return MEMORY[0x1E0CE06D0]();
}

uint64_t static UnitPoint.leading.getter()
{
  return MEMORY[0x1E0CE06E0]();
}

uint64_t static UnitPoint.trailing.getter()
{
  return MEMORY[0x1E0CE06E8]();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t DispatchQoS.QoSClass.rawValue.getter()
{
  return MEMORY[0x1E0DEF558]();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t static DispatchQoS.default.getter()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t DispatchQoS.qosClass.getter()
{
  return MEMORY[0x1E0DEF5A8]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t DispatchTime.advanced(by:)()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t dispatch thunk of DispatchWorkItem.isCancelled.getter()
{
  return MEMORY[0x1E0DEF6F0]();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return MEMORY[0x1E0DEF708]();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return MEMORY[0x1E0DEF710]();
}

uint64_t dispatch thunk of DispatchWorkItem.perform()()
{
  return MEMORY[0x1E0DEF720]();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return MEMORY[0x1E0DEF728]();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x1E0DEF750]();
}

{
  return MEMORY[0x1E0DEF758]();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return MEMORY[0x1E0CA92F8]();
}

uint64_t type metadata accessor for SHA256()
{
  return MEMORY[0x1E0CA9940]();
}

uint64_t Set.init()()
{
  return MEMORY[0x1E0DE9D78]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x1E0CB17D8]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x1E0DE9E78]();
}

Swift::Void __swiftcall Dictionary._Variant.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  MEMORY[0x1E0DE9FF8](keepingCapacity);
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return MEMORY[0x1E0DEA1C8]();
}

uint64_t BidirectionalCollection.last.getter()
{
  return MEMORY[0x1E0DEA360]();
}

uint64_t BidirectionalCollection.reversed()()
{
  return MEMORY[0x1E0DEA390]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t dispatch thunk of static Comparable.>= infix(_:_:)()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t static Comparable.> infix(_:_:)()
{
  return MEMORY[0x1E0DEA3E0]();
}

uint64_t static Comparable.>= infix(_:_:)()
{
  return MEMORY[0x1E0DEA3E8]();
}

uint64_t static Comparable.<= infix(_:_:)()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t MutableCollection.swapAt(_:_:)()
{
  return MEMORY[0x1E0DEA438]();
}

uint64_t ObjectIdentifier.debugDescription.getter()
{
  return MEMORY[0x1E0DEA510]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation(_:options:)()
{
  return MEMORY[0x1E0CB18B0]();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return MEMORY[0x1E0CB18B8]();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
  MEMORY[0x1E0CB18C0](a1._countAndFlagsBits, a1._object);
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
  MEMORY[0x1E0CB18D8](a1._countAndFlagsBits, a1._object);
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return MEMORY[0x1E0CB18F8]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x1E0CB1940]();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t String.init(format:locale:arguments:)()
{
  return MEMORY[0x1E0CB19A0]();
}

uint64_t String.init(format:arguments:)()
{
  return MEMORY[0x1E0CB19B0]();
}

uint64_t String.init(format:_:)()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x1E0DEA5F8]();
}

{
  return MEMORY[0x1E0DEA600]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x1E0DEA610]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return MEMORY[0x1E0DEA618]();
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x1E0DEA628]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t String.utf8CString.getter()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t String.init(stringInterpolation:)()
{
  return MEMORY[0x1E0DEA708]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t String.count.getter()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t String.index(before:)()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x1E0DEA7F0]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x1E0DEA800](a1._countAndFlagsBits, a1._object);
}

uint64_t String.remove(at:)()
{
  return MEMORY[0x1E0DEA820]();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t String.init<A>(_:)()
{
  return MEMORY[0x1E0DEAA38]();
}

{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t Sequence.formatted<A>(_:)()
{
  return MEMORY[0x1E0CB1A90]();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t Sequence.enumerated()()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t Sequence.first(where:)()
{
  return MEMORY[0x1E0DEAB00]();
}

uint64_t Sequence.sorted(by:)()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t Sequence<>.sorted()()
{
  return MEMORY[0x1E0DEAB88]();
}

uint64_t Sequence<>.contains(_:)()
{
  return MEMORY[0x1E0DEABA0]();
}

uint64_t Sequence<>.joined(separator:)()
{
  return MEMORY[0x1E0DEABB0]();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x1E0DEACA0]();
}

{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x1E0DEAD18]();
}

{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x1E0DEADA0]();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)MEMORY[0x1E0CB1AC0]();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t Array.startIndex.getter()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t Array.description.getter()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t specialized Array._endMutation()()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t static Array.+ infix(_:_:)()
{
  return MEMORY[0x1E0DEADF8]();
}

Swift::Void __swiftcall Array._makeMutableAndUnique()()
{
  MEMORY[0x1E0DEAE08]();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return MEMORY[0x1E0DEAE28]();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t static Array.+= infix(_:_:)()
{
  return MEMORY[0x1E0DEAE40]();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t Array.count.getter()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t Array.append(_:)()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t Array.remove(at:)()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t Array.endIndex.getter()
{
  return MEMORY[0x1E0DEAE98]();
}

Swift::Int __swiftcall Array._getCount()()
{
  return MEMORY[0x1E0DEAEA0]();
}

Swift::Void __swiftcall Array.formIndex(after:)(Swift::Int *after)
{
  MEMORY[0x1E0DEAEA8](after);
}

uint64_t Array.init(repeating:count:)()
{
  return MEMORY[0x1E0DEAEC0]();
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t static Array<A>.== infix(_:_:)()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t Array.init<A>(_:)()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t Array.subscript.getter()
{
  return MEMORY[0x1E0DEAF78]();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1B28]();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t dispatch thunk of AsyncIteratorProtocol.next()()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj()
{
  return MEMORY[0x1E0DF0698]();
}

uint64_t static MainActor.shared.getter()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t type metadata accessor for MainActor()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t static TaskPriority.background.getter()
{
  return MEMORY[0x1E0DF06F8]();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return MEMORY[0x1E0DF0700]();
}

uint64_t static TaskPriority.utility.getter()
{
  return MEMORY[0x1E0DF0738]();
}

uint64_t TaskPriority.rawValue.getter()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t type metadata accessor for TaskPriority()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t AsyncStream.Continuation.onTermination.setter()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return MEMORY[0x1E0DF07D8]();
}

Swift::Void __swiftcall AsyncStream.Continuation.finish()()
{
  MEMORY[0x1E0DF07E0]();
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t AsyncStream.Iterator.next(isolation:)()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t type metadata accessor for AsyncStream.Iterator()
{
  return MEMORY[0x1E0DF0820]();
}

uint64_t type metadata accessor for AsyncStream()
{
  return MEMORY[0x1E0DF0838]();
}

uint64_t AsyncStream.init(_:bufferingPolicy:_:)()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t Task.value.getter()
{
  return MEMORY[0x1E0DF0860]();
}

Swift::Void __swiftcall Task.cancel()()
{
  MEMORY[0x1E0DF0870]();
}

uint64_t Task<>.value.getter()
{
  return MEMORY[0x1E0DF08A8]();
}

uint64_t static Task<>.isCancelled.getter()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t static Task<>.sleep(nanoseconds:)()
{
  return MEMORY[0x1E0DF08D0]();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return MEMORY[0x1E0DF09D0]();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1B50]();
}

uint64_t Double.description.getter()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t Double._roundSlowPath(_:)()
{
  return MEMORY[0x1E0DEAFF8]();
}

uint64_t Double.write<A>(to:)()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t Double.hashValue.getter()
{
  return MEMORY[0x1E0DEB060]();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1B88]();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1B90]();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1B98]();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1BA0]();
}

uint64_t Float.write<A>(to:)()
{
  return MEMORY[0x1E0DEB160]();
}

uint64_t Float.hashValue.getter()
{
  return MEMORY[0x1E0DEB178]();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)MEMORY[0x1E0CB1BB0]();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t Set.description.getter()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t Set.init(minimumCapacity:)()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t Set.Index._asCocoa.modify()
{
  return MEMORY[0x1E0DEB2A8]();
}

uint64_t Set.insert(_:)()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t Set.contains(_:)()
{
  return MEMORY[0x1E0DEB340]();
}

uint64_t type metadata accessor for Set()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t Set.init<A>(_:)()
{
  return MEMORY[0x1E0DEB3B0]();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1C10]();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1C18]();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1C28]();
}

uint64_t Int.hashValue.getter()
{
  return MEMORY[0x1E0DEB408]();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t Collection<>.contains<A>(_:)()
{
  return MEMORY[0x1E0DF1FD0]();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t dispatch thunk of Collection.distance(from:to:)()
{
  return MEMORY[0x1E0DEB5A0]();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t Collection.firstIndex(where:)()
{
  return MEMORY[0x1E0DEB5D0]();
}

uint64_t Collection.first.getter()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t Collection.prefix(_:)()
{
  return MEMORY[0x1E0DEB648]();
}

uint64_t Collection.isEmpty.getter()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t Collection<>.firstIndex(of:)()
{
  return MEMORY[0x1E0DEB6A8]();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t RangeReplaceableCollection.removeFirst()()
{
  return MEMORY[0x1E0DEB738]();
}

uint64_t NSPredicate.init(format:_:)()
{
  return MEMORY[0x1E0CB1C90]();
}

Swift::Void __swiftcall CGContextRef.draw(_:in:byTiling:)(CGImageRef _, __C::CGRect in, Swift::Bool byTiling)
{
  MEMORY[0x1E0C9B900](_, byTiling, (__n128)in.origin, *(__n128 *)&in.origin.y, (__n128)in.size, *(__n128 *)&in.size.height);
}

uint64_t CGContextRef.fillPath(using:)()
{
  return MEMORY[0x1E0C9B938]();
}

uint64_t NSDictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x1E0CB1CB0]();
}

uint64_t NSOrderedSet.makeIterator()()
{
  return MEMORY[0x1E0CB1D20]();
}

uint64_t type metadata accessor for APApplication()
{
  return MEMORY[0x1E0CF9638]();
}

uint64_t static UIColorEffect.inCallControls.getter()
{
  return MEMORY[0x1E0D133D0]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t UIPointerStyle.init(effect:shape:)()
{
  return MEMORY[0x1E0DC2AE0]();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)MEMORY[0x1E0DC2AF0](systemItem, primaryAction.value.super.super.isa, *(_QWORD *)&primaryAction.is_nil, menu.value.super.super.isa, *(_QWORD *)&menu.is_nil);
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(title:image:primaryAction:menu:)(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)MEMORY[0x1E0DC2AF8](title.value._countAndFlagsBits, title.value._object, image.value.super.isa, *(_QWORD *)&image.is_nil, primaryAction.value.super.super.isa, *(_QWORD *)&primaryAction.is_nil, menu.value.super.super.isa, *(_QWORD *)&menu.is_nil);
}

uint64_t UIPointerRegion.init(rect:identifier:)()
{
  return MEMORY[0x1E0DC2B10]();
}

__C::CAFrameRateRange __swiftcall CAFrameRateRange.init(minimum:maximum:preferred:)(Swift::Float minimum, Swift::Float maximum, Swift::Float_optional *preferred)
{
  float v3;
  float v4;
  float v5;
  __C::CAFrameRateRange result;

  MEMORY[0x1E0DEFDA8](preferred, minimum, maximum);
  result.__preferred = v5;
  result.maximum = v4;
  result.minimum = v3;
  return result;
}

Swift::Void __swiftcall CGMutablePathRef.addRect(_:transform:)(__C::CGRect _, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9B980](transform, (__n128)_.origin, *(__n128 *)&_.origin.y, (__n128)_.size, *(__n128 *)&_.size.height);
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return MEMORY[0x1E0DC2B48]();
}

uint64_t UICollectionView.SupplementaryRegistration.init(elementKind:handler:)()
{
  return MEMORY[0x1E0DC2B60]();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return MEMORY[0x1E0DC2B78]();
}

uint64_t UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)()
{
  return MEMORY[0x1E0DC2B80]();
}

uint64_t UIViewController.traitOverrides.getter()
{
  return MEMORY[0x1E0DC2BD0]();
}

uint64_t UIViewController.traitOverrides.setter()
{
  return MEMORY[0x1E0DC2BD8]();
}

uint64_t static CGAffineTransform.== infix(_:_:)()
{
  return MEMORY[0x1E0C9B998]();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return MEMORY[0x1E0DEF848]();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return MEMORY[0x1E0DEF880]();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return MEMORY[0x1E0DEF890]();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return MEMORY[0x1E0DEF8A0]();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t UITraitCollection.modifyingTraits(_:)()
{
  return MEMORY[0x1E0DC2C28]();
}

uint64_t UITraitCollection.subscript.getter()
{
  return MEMORY[0x1E0DC2C50]();
}

uint64_t NSAttributedString.init<A>(_:including:)()
{
  return MEMORY[0x1E0CB1EC0]();
}

uint64_t NSAttributedString.init(_:)()
{
  return MEMORY[0x1E0CB1EC8]();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return MEMORY[0x1E0DEF938]();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return MEMORY[0x1E0DEF978]();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return MEMORY[0x1E0DEF9F0]();
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
  MEMORY[0x1E0DEFA20]();
}

uint64_t UIFocusEnvironment.contains(_:)()
{
  return MEMORY[0x1E0DC2C90]();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return MEMORY[0x1E0CB1EE0]();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications()
{
  return MEMORY[0x1E0CB1EF0]();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return MEMORY[0x1E0CB1F08]();
}

uint64_t NSNotificationCenter.Publisher.init(center:name:object:)()
{
  return MEMORY[0x1E0CB1F10]();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t UICollectionViewCell.contentConfiguration.getter()
{
  return MEMORY[0x1E0DC2D00]();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return MEMORY[0x1E0DC2D08]();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return MEMORY[0x1E0DC2D18]();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return MEMORY[0x1E0DC2D40]();
}

uint64_t static UIContentSizeCategory.>= infix(_:_:)()
{
  return MEMORY[0x1E0DC2D58]();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return MEMORY[0x1E0DEFAB0]();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return MEMORY[0x1E0DC2D88]();
}

uint64_t UICollectionViewListCell.defaultContentConfiguration()()
{
  return MEMORY[0x1E0DC2D90]();
}

uint64_t UIPresentationController.traitOverrides.getter()
{
  return MEMORY[0x1E0DC2DA8]();
}

uint64_t UIPresentationController.traitOverrides.setter()
{
  return MEMORY[0x1E0DC2DB0]();
}

uint64_t static NSCollectionLayoutSection.list(using:layoutEnvironment:)()
{
  return MEMORY[0x1E0DC2DC0]();
}

uint64_t AVAsynchronousKeyValueLoading.load<A>(_:)()
{
  return MEMORY[0x1E0DE94F0]();
}

uint64_t static UISheetPresentationControllerDetent.custom(identifier:resolver:)()
{
  return MEMORY[0x1E0DC2EF0]();
}

void __swiftcall UIPopoverPresentationControllerSourceItem.frame(in:)(__C::CGRect_optional *__return_ptr retstr, UIView *in)
{
  MEMORY[0x1E0DC2F28](retstr, in);
}

uint64_t CGSize.debugDescription.getter()
{
  return MEMORY[0x1E0C9B9E8]();
}

CMTime __swiftcall CMTime.init(seconds:preferredTimescale:)(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  CMTimeValue v2;
  uint64_t v3;
  CMTimeEpoch v4;
  CMTime result;

  v2 = MEMORY[0x1E0DEF338](*(_QWORD *)&preferredTimescale, seconds);
  result.epoch = v4;
  result.timescale = v3;
  result.flags = HIDWORD(v3);
  result.value = v2;
  return result;
}

uint64_t CMTime.seconds.getter()
{
  return MEMORY[0x1E0DEF340]();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return (UIMenu)MEMORY[0x1E0DC2F48](title._countAndFlagsBits, title._object, subtitle.value._countAndFlagsBits, subtitle.value._object, image.value.super.isa, *(_QWORD *)&image.is_nil, identifier.value, options);
}

NSValue __swiftcall CGPoint._bridgeToObjectiveC()()
{
  return (NSValue)MEMORY[0x1E0CB1FE0]();
}

uint64_t NSTimer.TimerPublisher.connect()()
{
  return MEMORY[0x1E0CB2098]();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return MEMORY[0x1E0CB20A0]();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return MEMORY[0x1E0CB20B0]();
}

uint64_t UIColor.init(_:)()
{
  return MEMORY[0x1E0CE0758]();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)MEMORY[0x1E0CB20C8](floatLiteral);
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)MEMORY[0x1E0CB20D0](BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)MEMORY[0x1E0CB20E0](integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1E0DEFCD8](seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t NSObject.hash(into:)()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t NSObject.hashValue.getter()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t NSString.init(stringLiteral:)()
{
  return MEMORY[0x1E0CB2130]();
}

uint64_t static NSString.localizedStringWithFormat(_:_:)()
{
  return MEMORY[0x1E0CB2140]();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return MEMORY[0x1E0DC2FF8]();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.getter()
{
  return MEMORY[0x1E0DC3000]();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.setter()
{
  return MEMORY[0x1E0DC3008]();
}

uint64_t UIButton.Configuration.background.modify()
{
  return MEMORY[0x1E0DC3010]();
}

uint64_t UIButton.Configuration.background.getter()
{
  return MEMORY[0x1E0DC3018]();
}

uint64_t UIButton.Configuration.background.setter()
{
  return MEMORY[0x1E0DC3020]();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return MEMORY[0x1E0DC3038]();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return MEMORY[0x1E0DC3070]();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return MEMORY[0x1E0DC3080]();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return MEMORY[0x1E0DC3090]();
}

uint64_t UIButton.Configuration.contentInsets.getter()
{
  return MEMORY[0x1E0DC30B8]();
}

uint64_t UIButton.Configuration.contentInsets.setter()
{
  return MEMORY[0x1E0DC30C0]();
}

uint64_t UIButton.Configuration.imagePlacement.setter()
{
  return MEMORY[0x1E0DC30F8]();
}

uint64_t UIButton.Configuration.attributedTitle.modify()
{
  return MEMORY[0x1E0DC3108]();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return MEMORY[0x1E0DC3110]();
}

uint64_t UIButton.Configuration.imageReservation.setter()
{
  return MEMORY[0x1E0DC3118]();
}

uint64_t UIButton.Configuration.titleLineBreakMode.setter()
{
  return MEMORY[0x1E0DC3128]();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return MEMORY[0x1E0DC3138]();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return MEMORY[0x1E0DC3148]();
}

uint64_t UIButton.Configuration.imageColorTransformer.setter()
{
  return MEMORY[0x1E0DC3150]();
}

uint64_t UIButton.Configuration.titleTextAttributesTransformer.setter()
{
  return MEMORY[0x1E0DC3170]();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return MEMORY[0x1E0DC31A0]();
}

uint64_t static UIButton.Configuration.gray()()
{
  return MEMORY[0x1E0DC31A8]();
}

uint64_t UIButton.Configuration.image.setter()
{
  return MEMORY[0x1E0DC31B8]();
}

uint64_t static UIButton.Configuration.plain()()
{
  return MEMORY[0x1E0DC31C0]();
}

uint64_t UIButton.Configuration.title.setter()
{
  return MEMORY[0x1E0DC31D0]();
}

uint64_t static UIButton.Configuration.filled()()
{
  return MEMORY[0x1E0DC31D8]();
}

uint64_t static UIButton.Configuration.tinted()()
{
  return MEMORY[0x1E0DC31E0]();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return MEMORY[0x1E0DC3228]();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return MEMORY[0x1E0DC3238]();
}

uint64_t UIButton.configuration.getter()
{
  return MEMORY[0x1E0DC3240]();
}

uint64_t UIButton.configuration.setter()
{
  return MEMORY[0x1E0DC3248]();
}

uint64_t UIButton.pointerStyleProvider.setter()
{
  return MEMORY[0x1E0DC3250]();
}

uint64_t type metadata accessor for APSubject()
{
  return MEMORY[0x1E0CF9640]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return MEMORY[0x1E0CB22E8]();
}

uint64_t NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)()
{
  return MEMORY[0x1E0CB22F8]();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return MEMORY[0x1E0CB2300]();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return MEMORY[0x1E0CB2318]();
}

{
  return MEMORY[0x1E0CB2320]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return MEMORY[0x1E0CB2328]();
}

uint64_t static OS_os_log.default.getter()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t Optional.debugDescription.getter()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t Optional<A>.hashValue.getter()
{
  return MEMORY[0x1E0DEB960]();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return MEMORY[0x1E0DEBB68]();
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB23E0]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t StringProtocol.localizedCompare<A>(_:)()
{
  return MEMORY[0x1E0CB2458]();
}

uint64_t StringProtocol.localizedLowercase.getter()
{
  return MEMORY[0x1E0CB2470]();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return MEMORY[0x1E0CB2478]();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t StringProtocol.localizedStandardCompare<A>(_:)()
{
  return MEMORY[0x1E0CB24D8]();
}

uint64_t StringProtocol.hash.getter()
{
  return MEMORY[0x1E0CB2538]();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t type metadata accessor for ArraySlice()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return MEMORY[0x1E0DEBFC0]();
}

uint64_t SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t dispatch thunk of SetAlgebra.init()()
{
  return MEMORY[0x1E0DEC058]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t _HashTable.previousHole(before:)()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return MEMORY[0x1E0DEC0A8]();
}

uint64_t __CocoaSet.makeIterator()()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return MEMORY[0x1E0DEC0B8]();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return MEMORY[0x1E0DEC0C8]();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return MEMORY[0x1E0DEC0D0]();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return MEMORY[0x1E0DEC0D8]();
}

uint64_t __CocoaSet.count.getter()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t __CocoaSet.index(after:)()
{
  return MEMORY[0x1E0DEC0E8]();
}

uint64_t __CocoaSet.member(for:)()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t __CocoaSet.element(at:)()
{
  return MEMORY[0x1E0DEC100]();
}

uint64_t __CocoaSet.isEqual(to:)()
{
  return MEMORY[0x1E0DEC108]();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t __CocoaSet.contains(_:)()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return MEMORY[0x1E0DEC120]();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return MEMORY[0x1E0DEC128]();
}

uint64_t _expectEnd<A>(of:is:)()
{
  return MEMORY[0x1E0DEC130]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1E0DEC168](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t static GlobalActor.sharedUnownedExecutor.getter()
{
  return MEMORY[0x1E0DF0B00]();
}

uint64_t static _SetStorage.copy(original:)()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t type metadata accessor for _SetStorage()
{
  return MEMORY[0x1E0DEC268]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC2A8](a1);
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t dispatch thunk of Identifiable.id.getter()
{
  return MEMORY[0x1E0DEC2F0]();
}

uint64_t StaticString.description.getter()
{
  return MEMORY[0x1E0DEC338]();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC3D0](a1);
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t type metadata accessor for DecodingError()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t _ArrayProtocol.filter(_:)()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return MEMORY[0x1E0DEC670]();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC680](a1);
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t ContiguousArray.append(_:)()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t ContiguousArray.init()()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t ContinuousClock.sleep(until:tolerance:)()
{
  return MEMORY[0x1E0DF0B28]();
}

uint64_t static ContinuousClock.Instant.now.getter()
{
  return MEMORY[0x1E0DF0B48]();
}

uint64_t ContinuousClock.Instant.advanced(by:)()
{
  return MEMORY[0x1E0DF0B50]();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return MEMORY[0x1E0DF0B60]();
}

uint64_t ContinuousClock.init()()
{
  return MEMORY[0x1E0DF0B98]();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return MEMORY[0x1E0DEC7D0]();
}

uint64_t _arrayForceCast<A, B>(_:)()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t AsyncMapSequence.base.getter()
{
  return MEMORY[0x1E0DF0C08]();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return MEMORY[0x1E0DF0C10]();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return MEMORY[0x1E0DF0C28]();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return MEMORY[0x1E0DF0C40]();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return MEMORY[0x1E0DF0C50]();
}

uint64_t AsyncMapSequence.init(_:transform:)()
{
  return MEMORY[0x1E0DF0C68]();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return MEMORY[0x1E0DECAE0](isUnique, capacity);
}

uint64_t _NativeDictionary._delete(at:)()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x1E0DECBE0]();
}

{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t _assertionFailure(_:_:flags:)()
{
  return MEMORY[0x1E0DECBF0]();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t EnumeratedSequence.makeIterator()()
{
  return MEMORY[0x1E0DECC38]();
}

uint64_t EnumeratedSequence.Iterator.next()()
{
  return MEMORY[0x1E0DECC40]();
}

uint64_t type metadata accessor for EnumeratedSequence.Iterator()
{
  return MEMORY[0x1E0DECC48]();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t type metadata accessor for ReversedCollection()
{
  return MEMORY[0x1E0DECCE0]();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return MEMORY[0x1E0DECD20]();
}

{
  return MEMORY[0x1E0DECD28]();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return MEMORY[0x1E0DECE70]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x1E0DECF28](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t withThrowingTaskGroup<A, B>(of:returning:isolation:body:)()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1E0DED1A0]();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return MEMORY[0x1E0DED1B0](a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t withCheckedContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t type metadata accessor for FloatingPointRoundingRule()
{
  return MEMORY[0x1E0DED510]();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode(_:)()
{
  return MEMORY[0x1E0DED648]();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t withCheckedThrowingContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return MEMORY[0x1E0DF0EE8]();
}

uint64_t dispatch thunk of Clock.sleep(until:tolerance:)()
{
  return MEMORY[0x1E0DF0EF0]();
}

uint64_t Error.localizedDescription.getter()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t Error._getEmbeddedNSError()()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t Error._code.getter()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t Error._domain.getter()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t Error._userInfo.getter()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t type metadata accessor for Slice()
{
  return MEMORY[0x1E0DEDE10]();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return MEMORY[0x1E0DEDEE8]();
}

{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x1E0DEDEF8]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
  MEMORY[0x1E0DEDF10](a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
  MEMORY[0x1E0DEDF18](a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt16 a1)
{
  MEMORY[0x1E0DEDF20](a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
  MEMORY[0x1E0DEDF28](*(_QWORD *)&a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
  MEMORY[0x1E0DEDF30](a1);
}

Swift::Int __swiftcall Hasher.finalize()()
{
  return MEMORY[0x1E0DEDF38]();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t Hasher.init()()
{
  return MEMORY[0x1E0DEDF48]();
}

NSNumber __swiftcall UInt32._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB26E8]();
}

uint64_t dispatch thunk of Decoder.singleValueContainer()()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t Duration.description.getter()
{
  return MEMORY[0x1E0DEE758]();
}

uint64_t static Duration.< infix(_:_:)()
{
  return MEMORY[0x1E0DEE780]();
}

uint64_t static Duration.+ infix(_:_:)()
{
  return MEMORY[0x1E0DEE798]();
}

uint64_t static Duration.== infix(_:_:)()
{
  return MEMORY[0x1E0DEE7A8]();
}

uint64_t static Duration.zero.getter()
{
  return MEMORY[0x1E0DEE7C0]();
}

uint64_t static Duration.seconds(_:)()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t _Pointer.debugDescription.getter()
{
  return MEMORY[0x1E0DEE8A0]();
}

uint64_t CodingKey.description.getter()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t CodingKey.debugDescription.getter()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return MEMORY[0x1E0DEE8F8]();
}

uint64_t _typeName(_:qualified:)()
{
  return MEMORY[0x1E0DEE978]();
}

NSString *__cdecl AVCaptureReactionSystemImageNameForType(AVCaptureReactionType reactionType)
{
  return (NSString *)MEMORY[0x1E0C8A0E0](reactionType);
}

uint64_t AVControlCenterVideoEffectsModuleIsEffectSupportedForBundleID()
{
  return MEMORY[0x1E0C8A228]();
}

uint64_t AVControlCenterVideoEffectsModulePerformReactionEffect()
{
  return MEMORY[0x1E0C8A230]();
}

uint64_t AXDurationForDurationString()
{
  return MEMORY[0x1E0CF4D80]();
}

uint64_t AXDurationStringForDuration()
{
  return MEMORY[0x1E0CF4D88]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

OSStatus AudioQueueAllocateBuffer(AudioQueueRef inAQ, UInt32 inBufferByteSize, AudioQueueBufferRef *outBuffer)
{
  return MEMORY[0x1E0C91FF8](inAQ, *(_QWORD *)&inBufferByteSize, outBuffer);
}

OSStatus AudioQueueDispose(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1E0C92030](inAQ, inImmediate);
}

OSStatus AudioQueueEnqueueBuffer(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer, UInt32 inNumPacketDescs, const AudioStreamPacketDescription *inPacketDescs)
{
  return MEMORY[0x1E0C92038](inAQ, inBuffer, *(_QWORD *)&inNumPacketDescs, inPacketDescs);
}

OSStatus AudioQueueNewInput(const AudioStreamBasicDescription *inFormat, AudioQueueInputCallback inCallbackProc, void *inUserData, CFRunLoopRef inCallbackRunLoop, CFStringRef inCallbackRunLoopMode, UInt32 inFlags, AudioQueueRef *outAQ)
{
  return MEMORY[0x1E0C92080](inFormat, inCallbackProc, inUserData, inCallbackRunLoop, inCallbackRunLoopMode, *(_QWORD *)&inFlags, outAQ);
}

OSStatus AudioQueuePause(AudioQueueRef inAQ)
{
  return MEMORY[0x1E0C920A8](inAQ);
}

OSStatus AudioQueueSetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x1E0C92100](inAQ, *(_QWORD *)&inID, inData, *(_QWORD *)&inDataSize);
}

OSStatus AudioQueueStart(AudioQueueRef inAQ, const AudioTimeStamp *inStartTime)
{
  return MEMORY[0x1E0C92108](inAQ, inStartTime);
}

OSStatus AudioQueueStop(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x1E0C92118](inAQ, inImmediate);
}

void AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
{
  MEMORY[0x1E0C92148](*(_QWORD *)&inSystemSoundID);
}

BOOL CATransform3DEqualToTransform(CATransform3D *a, CATransform3D *b)
{
  return MEMORY[0x1E0CD25F8](a, b);
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0CD2600](retstr, t);
}

BOOL CATransform3DIsAffine(CATransform3D *t)
{
  return MEMORY[0x1E0CD2620](t);
}

CATransform3D *__cdecl CATransform3DMakeAffineTransform(CATransform3D *__return_ptr retstr, CGAffineTransform *m)
{
  return (CATransform3D *)MEMORY[0x1E0CD2630](retstr, m);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1E0CD2638](retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2640](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1E0CD2658](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2668](retstr, t, sx, sy, sz);
}

uint64_t CEKMonospacedStylisticNumeralFontOfSizeAndStyle()
{
  return MEMORY[0x1E0D0CF88]();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988C8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
  MEMORY[0x1E0C988F0](center, observer);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1E0D17838]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1E0D17848]();
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C40]();
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x1E0C995A0](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x1E0C995A8](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C995B8](allocator, userNotification, callout, order);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1E0C9BAB8](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD0](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF0](retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF8](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BB00](retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

CGColorRef CGColorCreateGenericCMYK(CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BC98](cyan, magenta, yellow, black, alpha);
}

CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BCA0](gray, alpha);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x1E0C9BFD8](c, path);
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
  MEMORY[0x1E0C9C198](c, gradient, *(_QWORD *)&options, (__n128)startPoint, *(__n128 *)&startPoint.y, (__n128)endPoint, *(__n128 *)&endPoint.y);
}

void CGContextDrawRadialGradient(CGContextRef c, CGGradientRef gradient, CGPoint startCenter, CGFloat startRadius, CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
{
  MEMORY[0x1E0C9C1D0](c, gradient, *(_QWORD *)&options, (__n128)startCenter, *(__n128 *)&startCenter.y, startRadius, (__n128)endCenter, *(__n128 *)&endCenter.y, endRadius);
}

void CGContextRestoreGState(CGContextRef c)
{
  MEMORY[0x1E0C9C370](c);
}

void CGContextSaveGState(CGContextRef c)
{
  MEMORY[0x1E0C9C388](c);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
  MEMORY[0x1E0C9C458](c, *(_QWORD *)&quality);
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
  MEMORY[0x1E0C9C468](c, *(_QWORD *)&cap);
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
  MEMORY[0x1E0C9C480](c, width);
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
  MEMORY[0x1E0C9C4C0](c, color, (__n128)offset, *(__n128 *)&offset.height, blur);
}

void CGContextSetShouldAntialias(CGContextRef c, BOOL shouldAntialias)
{
  MEMORY[0x1E0C9C4C8](c, shouldAntialias);
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C508](c, color);
}

void CGContextStrokePath(CGContextRef c)
{
  MEMORY[0x1E0C9C570](c);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1E0C9CA90](space, colors, locations);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1E0C9CBA8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

uint64_t CGPathAddContinuousRoundedRect()
{
  return MEMORY[0x1E0C9D290]();
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D558]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D5F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D5F8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D600]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return MEMORY[0x1E0C9D610]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D630]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectStandardize(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D638]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D640]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return MEMORY[0x1E0C9D810]((__n128)size1, *(__n128 *)&size1.height, (__n128)size2, *(__n128 *)&size2.height);
}

CGFloat CTFontGetAscent(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7BA0](font);
  return result;
}

CGFloat CTFontGetDescent(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7BD8](font);
  return result;
}

CGFloat CTFontGetLeading(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7C20](font);
  return result;
}

uint64_t IMPreferredAccountForService()
{
  return MEMORY[0x1E0D35650]();
}

uint64_t IMSPIQueryMessageWithGUIDAndLoadAttachmentsWithQOS()
{
  return MEMORY[0x1E0D356A8]();
}

uint64_t IOHIDEventSystemClientCancel()
{
  return MEMORY[0x1E0CBB1D8]();
}

CFTypeRef IOHIDEventSystemClientCopyProperty(IOHIDEventSystemClientRef client, CFStringRef key)
{
  return (CFTypeRef)MEMORY[0x1E0CBB1E0](client, key);
}

uint64_t IOHIDEventSystemClientCreateWithType()
{
  return MEMORY[0x1E0CBB1F8]();
}

uint64_t IOHIDEventSystemClientRegisterPropertyChangedCallback()
{
  return MEMORY[0x1E0CBB238]();
}

uint64_t IOHIDEventSystemClientScheduleWithDispatchQueue()
{
  return MEMORY[0x1E0CBB248]();
}

uint64_t IOHIDEventSystemClientSetMatching()
{
  return MEMORY[0x1E0CBB268]();
}

Boolean IOHIDEventSystemClientSetProperty(IOHIDEventSystemClientRef client, CFStringRef key, CFTypeRef property)
{
  return MEMORY[0x1E0CBB278](client, key, property);
}

uint64_t IOHIDEventSystemClientUnregisterPropertyChangedCallback()
{
  return MEMORY[0x1E0CBB2A8]();
}

uint64_t MSNMonitorBeginException()
{
  return MEMORY[0x1E0D4CDE0]();
}

uint64_t MSNMonitorEndException()
{
  return MEMORY[0x1E0D4CDE8]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t PNCopyBestGuessCountryCodeForNumber()
{
  return MEMORY[0x1E0D17860]();
}

uint64_t SBSIsSystemApertureAvailable()
{
  return MEMORY[0x1E0DAB778]();
}

uint64_t SBSRequestPasscodeUnlockUI()
{
  return MEMORY[0x1E0DAB950]();
}

uint64_t SBSUndimScreen()
{
  return MEMORY[0x1E0DABA58]();
}

uint64_t SBUIIsSystemApertureEnabled()
{
  return MEMORY[0x1E0DAC8C0]();
}

uint64_t SBUISystemApertureLayoutModeDescription()
{
  return MEMORY[0x1E0DAC9C0]();
}

uint64_t TUAllowLocalVideoRecording()
{
  return MEMORY[0x1E0DBD3D0]();
}

uint64_t TUCallScreeningEnabled()
{
  return MEMORY[0x1E0DBD558]();
}

uint64_t TUCallScreeningRTTEnabled()
{
  return MEMORY[0x1E0DBD560]();
}

uint64_t TUCopyIDSCanonicalAddressForDestinationID()
{
  return MEMORY[0x1E0DBD5D8]();
}

uint64_t TUCopyIDSCanonicalAddressForHandle()
{
  return MEMORY[0x1E0DBD5E0]();
}

uint64_t TUCopyIDSFromIDForHandle()
{
  return MEMORY[0x1E0DBD5E8]();
}

uint64_t TUDestinationIDsAreEqual()
{
  return MEMORY[0x1E0DBD5F8]();
}

uint64_t TUDeviceHasChinaSKU()
{
  return MEMORY[0x1E0DBD600]();
}

uint64_t TUDeviceHasHomeButton()
{
  return MEMORY[0x1E0DBD608]();
}

uint64_t TUDispatchMainIfNecessary()
{
  return MEMORY[0x1E0DBD618]();
}

uint64_t TUHandleForIDSCanonicalAddress()
{
  return MEMORY[0x1E0DBD630]();
}

uint64_t TUHandlesAreCanonicallyEqual()
{
  return MEMORY[0x1E0DBD638]();
}

uint64_t TUHomeCountryCode()
{
  return MEMORY[0x1E0DBD640]();
}

uint64_t TUIsBareMakoAccount()
{
  return MEMORY[0x1E0DBD660]();
}

uint64_t TUKickMemberTimeout()
{
  return MEMORY[0x1E0DBD670]();
}

uint64_t TUNormalizedHandleForTUHandle()
{
  return MEMORY[0x1E0DBD688]();
}

uint64_t TUOpenSensitiveURL()
{
  return MEMORY[0x1E0DBD698]();
}

uint64_t TUOpenURL()
{
  return MEMORY[0x1E0DBD6A0]();
}

uint64_t TUOpenURLWithError()
{
  return MEMORY[0x1E0DBD6A8]();
}

uint64_t TUPreferredFaceTimeBundleIdentifier()
{
  return MEMORY[0x1E0DBD6B0]();
}

uint64_t TUStringKeyForProduct()
{
  return MEMORY[0x1E0DBD6E0]();
}

uint64_t TUUnlockDeviceWithPromptFrontBoardOptionsDictionary()
{
  return MEMORY[0x1E0DBD768]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x1E0DC4548]();
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return MEMORY[0x1E0DC4550]();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return MEMORY[0x1E0DC4560]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x1E0DC4570]();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
  MEMORY[0x1E0DC4598](*(_QWORD *)&notification, argument);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
  MEMORY[0x1E0DC4BC0](opaque, (__n128)size, *(__n128 *)&size.height, scale);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x1E0DC4BD8]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1E0DC4BE8]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1E0DC4BF0]();
}

void UIGraphicsPopContext(void)
{
  MEMORY[0x1E0DC4C00]();
}

void UIGraphicsPushContext(CGContextRef context)
{
  MEMORY[0x1E0DC4C08](context);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1E0DC4C60](image);
}

uint64_t UIRectRoundToViewScale()
{
  return MEMORY[0x1E0DC52E0]();
}

uint64_t _AXSCommandAndControlEnabled()
{
  return MEMORY[0x1E0DDD6A0]();
}

uint64_t _AXSFaceTimeCaptionsEnabled()
{
  return MEMORY[0x1E0DDD740]();
}

uint64_t _AXSSetFaceTimeCaptionsEnabled()
{
  return MEMORY[0x1E0DDDC08]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _TUIsInternalInstall()
{
  return MEMORY[0x1E0DBD830]();
}

uint64_t _UITableViewDefaultSectionCornerRadiusForTraitCollection()
{
  return MEMORY[0x1E0DC5A30]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

float exp2f(float a1)
{
  float result;

  MEMORY[0x1E0C83290](a1);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

float log2f(float a1)
{
  float result;

  MEMORY[0x1E0C83BF0](a1);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1E0C849A8](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x1E0C84BC0](a1, a2);
  return result;
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x1E0DEEB78]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1E0DEEBC0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1E0DEECF0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectUnownedAssign()
{
  return MEMORY[0x1E0DEEEE0]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1E0DEEEF8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1E0DEEF00]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1E0DEEF08]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1E0DEEF28]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1E0DEEF30]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1E0DEEF50]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1E0DEEF58]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

FFTSetup vDSP_create_fftsetup(vDSP_Length __Log2n, FFTRadix __Radix)
{
  return (FFTSetup)MEMORY[0x1E0C8C060](__Log2n, *(_QWORD *)&__Radix);
}

void vDSP_ctoz(const DSPComplex *__C, vDSP_Stride __IC, const DSPSplitComplex *__Z, vDSP_Stride __IZ, vDSP_Length __N)
{
  MEMORY[0x1E0C8C070](__C, __IC, __Z, __IZ, __N);
}

void vDSP_destroy_fftsetup(FFTSetup __setup)
{
  MEMORY[0x1E0C8C0A0](__setup);
}

void vDSP_fft_zrip(FFTSetup __Setup, const DSPSplitComplex *__C, vDSP_Stride __IC, vDSP_Length __Log2N, FFTDirection __Direction)
{
  MEMORY[0x1E0C8C130](__Setup, __C, __IC, __Log2N, *(_QWORD *)&__Direction);
}

void vDSP_hann_window(float *__C, vDSP_Length __N, int __Flag)
{
  MEMORY[0x1E0C8C160](__C, __N, *(_QWORD *)&__Flag);
}

void vDSP_vmul(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x1E0C8C740](__A, __IA, __B, __IB, __C, __IC, __N);
}

void vDSP_vsmul(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x1E0C8C8E0](__A, __IA, __B, __C, __IC, __N);
}

void vDSP_zvmags(const DSPSplitComplex *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x1E0C8CAB8](__A, __IA, __C, __IC, __N);
}

void vvsqrtf(float *a1, const float *a2, const int *a3)
{
  MEMORY[0x1E0C8DB80](a1, a2, a3);
}

