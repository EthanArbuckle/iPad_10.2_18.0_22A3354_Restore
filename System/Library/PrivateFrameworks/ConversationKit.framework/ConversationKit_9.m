void closure #1 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 88))(a2, a3);
    objc_msgSend(v8, sel_setAlpha_, 0.0);

    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
    objc_msgSend(v9, sel_setAlpha_, 0.0);

    (*(void (**)(uint64_t, uint64_t, double))(a3 + 128))(a2, a3, 0.0);
  }
}

void closure #2 in FaceTimeControlsView.displayEphemeralAlert()(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  double v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  _QWORD aBlock[6];

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (id)v8;
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    if (v10)
    {
      v13 = (void *)v10;
      v14 = v11;
      v35 = v12 & 1;
      if ((a1 & 1) != 0)
      {
        v15 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
        v16 = (void *)v15(a3, a4);
      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v17 = type metadata accessor for Logger();
        __swift_project_value_buffer(v17, (uint64_t)&static Logger.conversationControls);
        v18 = Logger.logObject.getter();
        v19 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_1BD004000, v18, v19, "displayEphemeralAlert: statusView.alpha/ephemeralAlertStack.alpha -> 0 didn't finish", v20, 2u);
          MEMORY[0x1C3B751B8](v20, -1, -1);
        }

        v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 88))(a3, a4);
        objc_msgSend(v21, sel_setAlpha_, 0.0);

        v15 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
        v22 = (void *)v15(a3, a4);
        objc_msgSend(v22, sel_setAlpha_, 0.0);

        (*(void (**)(uint64_t, uint64_t, double))(a4 + 128))(a3, a4, 0.0);
        v16 = (void *)v15(a3, a4);
      }
      v23 = v16;
      objc_msgSend(v16, sel_setHidden_, 1);

      v24 = (_QWORD *)v15(a3, a4);
      v25 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v26 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v24) + 0x88))();

      objc_msgSend(v26, sel_setAttributedText_, v13);
      v27 = (_QWORD *)v15(a3, a4);
      v28 = (void *)(*(uint64_t (**)(void))((*v25 & *v27) + 0xA0))();

      objc_msgSend(v28, sel_setAttributedText_, v14);
      v29 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v30 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = a3;
      *(_QWORD *)(v31 + 24) = a4;
      *(_QWORD *)(v31 + 32) = v9;
      *(_QWORD *)(v31 + 40) = v13;
      *(_QWORD *)(v31 + 48) = v14;
      *(_BYTE *)(v31 + 56) = v35;
      aBlock[4] = partial apply for closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_43_1;
      v32 = _Block_copy(aBlock);
      v33 = v9;
      v9 = v13;
      v34 = v14;
      swift_release();
      objc_msgSend(v29, sel_animateWithDuration_animations_, v32, v30);
      _Block_release(v32);

    }
  }
}

void closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  double v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t aBlock[6];

  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 88))(a5, a6);
  objc_msgSend(v10, sel_setAlpha_, 0.0);

  (*(void (**)(uint64_t, uint64_t, double))(a6 + 128))(a5, a6, 0.0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 48);
  v12 = (void *)v11(a5, a6);
  objc_msgSend(v12, sel_setHidden_, 0);

  v13 = (void *)v11(a5, a6);
  v14 = *(_QWORD *)(a6 + 8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(a5, v14);
  objc_msgSend(v13, sel_setAlpha_);

  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)&static Logger.conversationControls);
  v16 = a1;
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)v19 = 136315138;
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(a5, v14);
    v21 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v17, v18, "â‡¢ [%s] 2. Displaying ephemeral alert", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v20, -1, -1);
    MEMORY[0x1C3B751B8](v19, -1, -1);

    if ((a4 & 1) == 0)
      return;
  }
  else
  {

    if ((a4 & 1) == 0)
      return;
  }
  v23 = (void *)objc_opt_self();
  if (one-time initialization token for shared != -1)
    swift_once();
  v24 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1008))();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a5;
  v25[3] = a6;
  v25[4] = v16;
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert();
  aBlock[5] = (uint64_t)v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  aBlock[3] = (uint64_t)&block_descriptor_49_0;
  v26 = _Block_copy(aBlock);
  v16;
  swift_release();
  v27 = objc_msgSend(v23, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v26, v24);
  _Block_release(v26);
  (*(void (**)(id, uint64_t, uint64_t))(a6 + 64))(v27, a5, a6);
}

void closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a4 + 8) + 8))(a3, *(_QWORD *)(a4 + 8));
  (*(void (**)(_QWORD, _QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x7F8))(0, 0, 0);

}

void closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
    objc_msgSend(v8, sel_setAlpha_, 0.0);

  }
}

void closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  double v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t aBlock;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  _QWORD *v39;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    outlined consume of ConversationControlsRecipe.View?(v10, v11);
    if (!v10)
    {
      if ((a1 & 1) != 0)
      {
        v12 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
        v13 = (void *)v12(a3, a4);
      }
      else
      {
        if (one-time initialization token for conversationControls != -1)
          swift_once();
        v14 = type metadata accessor for Logger();
        __swift_project_value_buffer(v14, (uint64_t)&static Logger.conversationControls);
        v15 = Logger.logObject.getter();
        v16 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v17 = 0;
          _os_log_impl(&dword_1BD004000, v15, v16, "cleanUpEphemeralAlert: ephemeralAlertStack.alpha -> 0 didn't finish", v17, 2u);
          MEMORY[0x1C3B751B8](v17, -1, -1);
        }

        v12 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
        v18 = (void *)v12(a3, a4);
        objc_msgSend(v18, sel_setAlpha_, 0.0);

        v13 = (void *)v12(a3, a4);
      }
      v19 = v13;
      objc_msgSend(v13, sel_setHidden_, 1);

      v20 = (_QWORD *)v12(a3, a4);
      v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      v22 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x88))();

      objc_msgSend(v22, sel_setAttributedText_, 0);
      v23 = (_QWORD *)v12(a3, a4);
      v24 = (void *)(*(uint64_t (**)(void))((*v21 & *v23) + 0xA0))();

      objc_msgSend(v24, sel_setAttributedText_, 0);
      v25 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v26 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = a3;
      v27[3] = a4;
      v27[4] = v9;
      v38 = partial apply for closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v39 = v27;
      v28 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v35 = 1107296256;
      v36 = thunk for @escaping @callee_guaranteed () -> ();
      v37 = &block_descriptor_30_1;
      v29 = _Block_copy(&aBlock);
      v30 = v9;
      swift_release();
      v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = a3;
      v32[3] = a4;
      v32[4] = v31;
      v38 = partial apply for closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert();
      v39 = v32;
      aBlock = v28;
      v35 = 1107296256;
      v36 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v37 = &block_descriptor_37_2;
      v33 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v25, sel_animateWithDuration_animations_completion_, v29, v33, v26);
      _Block_release(v33);
      _Block_release(v29);
    }

  }
}

uint64_t closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 88))(a2, a3);
  v6 = *(_QWORD *)(a3 + 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 24);
  v7(a2, v6);
  objc_msgSend(v5, sel_setAlpha_);

  v7(a2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 128))(a2, a3);
}

void closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3B752C0](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = "rolsViewControllerDelegate";
    if ((a1 & 1) == 0)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationControls);
      v12 = v9;
      v13 = Logger.logObject.getter();
      v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        v33 = v16;
        *(_DWORD *)v15 = 136315138;
        (*(void (**)(uint64_t))(*(_QWORD *)(a4 + 8) + 24))(a3);
        v17 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v13, v14, "cleanUpEphemeralAlert: statusView.alpha -> %s didn't finish", v15, 0xCu);
        swift_arrayDestroy();
        v19 = v16;
        v10 = "ConversationControlsViewControllerDelegate" + 16;
        MEMORY[0x1C3B751B8](v19, -1, -1);
        MEMORY[0x1C3B751B8](v15, -1, -1);

      }
      else
      {

      }
      v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 88))(a3, a4);
      v21 = *(_QWORD *)(a4 + 8);
      v22 = *(void (**)(uint64_t, uint64_t))(v21 + 24);
      v22(a3, v21);
      objc_msgSend(v20, sel_setAlpha_);

      v22(a3, v21);
      (*(void (**)(uint64_t, uint64_t))(a4 + 128))(a3, a4);
    }
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)&static Logger.conversationControls);
    v24 = v9;
    v25 = Logger.logObject.getter();
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v33 = v28;
      *(_DWORD *)v27 = *((_QWORD *)v10 + 34);
      v29 = *(_QWORD *)(a4 + 8);
      (*(void (**)(uint64_t, uint64_t))(v29 + 16))(a3, v29);
      v30 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v25, v26, "â‡¢ [%s] 4. Removed ephemeral alert, displaying status view", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v28, -1, -1);
      MEMORY[0x1C3B751B8](v27, -1, -1);

    }
    else
    {

      v29 = *(_QWORD *)(a4 + 8);
    }
    v32 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(a3, v29);
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v32) + 0xA00))();

  }
}

uint64_t sub_1BD491778()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t *v0;

  closure #1 in FaceTimeControlsView.displayEphemeralAlert()(v0[4], v0[2], v0[3]);
}

void partial apply for closure #2 in FaceTimeControlsView.displayEphemeralAlert()(char a1)
{
  uint64_t *v1;

  closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BD4917B4()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  uint64_t *v0;

  closure #1 in FaceTimeControlsView.cleanUpEphemeralAlert()(v0[4], v0[2], v0[3]);
}

void partial apply for closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1)
{
  uint64_t *v1;

  closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1[4], v1[2], v1[3]);
}

uint64_t dispatch thunk of ControlsView.controlsManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlsView.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlsView.cnkContentAlpha.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ControlsView.cnkContentAlpha.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ControlsView.recipe.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlsView.recipe.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SystemAperturePreferredContentSizeProvider.systemAperturePreferredContentSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FaceTimeControlsView.ephemeralAlert.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of FaceTimeControlsView.ephemeralAlertNotice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FaceTimeControlsView.ephemeralAlertTimer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FaceTimeControlsView.ephemeralAlertTimer.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FaceTimeControlsView.showCallDetailsButton.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FaceTimeControlsView.statusView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FaceTimeControlsView.buttonShelfView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FaceTimeControlsView.cleanUpEphemeralAlert()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FaceTimeControlsView.handleUpdateDuringEphemeralAlert()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FaceTimeControlsView.updateAdditionalView(alpha:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of SystemApertureFaceTimeControlsView.showAppLaunchPill(buttonType:menuHost:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of SystemApertureFaceTimeControlsView.removeAppLaunchPill()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1BD4918BC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()()
{
  uint64_t *v0;

  return closure #1 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(v0[4], v0[2], v0[3]);
}

void partial apply for closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(char a1)
{
  uint64_t *v1;

  closure #2 in closure #2 in FaceTimeControlsView.cleanUpEphemeralAlert()(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BD4918F8()
{
  id *v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()()
{
  uint64_t v0;

  closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void partial apply for closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(uint64_t a1)
{
  uint64_t *v1;

  closure #1 in closure #1 in closure #2 in FaceTimeControlsView.displayEphemeralAlert()(a1, v1[4], v1[2], v1[3]);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit22TranscriptionViewModelC7CaptionVG_AH0I2IDVs5NeverOTg504_s15d52Kit27AccessibilityCaptionsReaderV4bodyQrvgyycfU_AA22fgh2C9I61IDVAF0J0Vcfu_33_60f51043fe6654d0e082ed91edd7e083AjHTf3nnnpk_nTf1cn_nTm(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v2 = v10;
    v4 = *(_QWORD *)(type metadata accessor for TranscriptionViewModel.Caption(0) - 8);
    v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = *v5;
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v5 = (uint64_t *)((char *)v5 + v6);
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t AccessibilityCaptionsReader.init(viewModel:content:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;

  *(_QWORD *)a5 = property wrapper backing initializer of AudioCallMiddleContainerView.viewModel();
  *(_QWORD *)(a5 + 8) = v10;
  *(_QWORD *)(a5 + 16) = swift_getKeyPath();
  *(_BYTE *)(a5 + 24) = 0;
  v12 = (int *)type metadata accessor for AccessibilityCaptionsReader(0, a3, a4, v11);
  v13 = (uint64_t *)(a5 + v12[10]);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  swift_storeEnumTagMultiPayload();
  AccessibilityFocusState.init<>()();
  v14 = (uint64_t *)(a5 + v12[12]);
  result = property wrapper backing initializer of AccessibilityCaptionsReader.announcedCaptions();
  *v14 = result;
  v14[1] = v16;
  v17 = (_QWORD *)(a5 + v12[13]);
  *v17 = a1;
  v17[1] = a2;
  return result;
}

void key path getter for EnvironmentValues.redactionReasons : EnvironmentValues()
{
  EnvironmentValues.redactionReasons.getter();
  OUTLINED_FUNCTION_0();
}

void key path setter for EnvironmentValues.redactionReasons : EnvironmentValues(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for RedactionReasons();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  EnvironmentValues.redactionReasons.setter();
  OUTLINED_FUNCTION_18();
}

uint64_t AccessibilityCaptionsReader.viewModel.getter()
{
  return swift_retain();
}

uint64_t key path getter for AccessibilityCaptionsReader.viewModel : <A>AccessibilityCaptionsReader<A>@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AccessibilityCaptionsReader.viewModel.getter();
  *a1 = result;
  return result;
}

void key path setter for AccessibilityCaptionsReader.viewModel : <A>AccessibilityCaptionsReader<A>()
{
  uint64_t v0;

  v0 = swift_retain();
  AccessibilityCaptionsReader.viewModel.setter(v0);
}

void AccessibilityCaptionsReader.viewModel.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*AccessibilityCaptionsReader.viewModel.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t AccessibilityCaptionsReader.$viewModel.getter()
{
  type metadata accessor for TranscriptionViewModel(0);
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel((unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel and conformance TranscriptionViewModel, type metadata accessor for TranscriptionViewModel, (uint64_t)&protocol conformance descriptor for TranscriptionViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t property wrapper backing initializer of AccessibilityCaptionsReader.announcedCaptions()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TranscriptionViewModel.CaptionID>);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t AccessibilityCaptionsReader.content.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_retain();
  return v2;
}

void AccessibilityCaptionsReader.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];

  v26 = a2;
  v22 = *(_QWORD *)(a1 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](a1);
  v21 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v3 + 16);
  v27 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = *(_QWORD *)(v6 + 24);
  v30 = v4;
  v31 = v7;
  v8 = v7;
  v29 = v7;
  v9 = MEMORY[0x1C3B75050](0, &v30, MEMORY[0x1E0CDEAA8], 0, v5);
  v24 = *(_QWORD *)(v9 - 8);
  v20 = v9;
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v10);
  v16[2] = (char *)v16 - v11;
  v12 = type metadata accessor for ModifiedContent();
  v25 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v13);
  v28 = (char *)v16 - v14;
  v30 = v4;
  v31 = v8;
  v17 = OUTLINED_FUNCTION_7_18();
  v34[0] = v17;
  v34[1] = MEMORY[0x1E0CDC8B0];
  v15 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v12, v34);
  v30 = v12;
  v31 = MEMORY[0x1E0DEAFA0];
  v18 = v12;
  v32 = v15;
  v33 = MEMORY[0x1E0DEAFB8];
  v19 = v15;
  OUTLINED_FUNCTION_2_121();
}

void sub_1BD491EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  *(_QWORD *)(v13 - 192) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 232) = a1;
  OUTLINED_FUNCTION_4_134();
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v13 - 152) = (char *)&a9 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  *(_QWORD *)(v13 - 240) = v17;
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v10;
  v18 = OUTLINED_FUNCTION_7_18();
  *(_QWORD *)(v13 - 248) = v18;
  v19 = lazy protocol witness table accessor for type [TranscriptionViewModel.Caption] and conformance <A> [A]();
  *(_QWORD *)(v13 - 256) = v19;
  *(_QWORD *)(v13 - 136) = a1;
  *(_QWORD *)(v13 - 128) = v17;
  *(_QWORD *)(v13 - 120) = v18;
  *(_QWORD *)(v13 - 112) = v19;
  OUTLINED_FUNCTION_2_121();
}

uint64_t sub_1BD491F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  _BYTE v49[96];

  v5 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v4 - 216) = a1;
  *(_QWORD *)(v4 - 208) = v5;
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v4 - 280) = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v4 - 224) = &v49[-v9];
  v10 = *(_QWORD *)(v4 - 168);
  (*(void (**)(__n128))(v10 + *(int *)(v1 + 52)))(v8);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  AccessibilityFocusState.projectedValue.getter();
  v11 = *(_QWORD *)(v4 - 336);
  v12 = *(_QWORD *)(v4 - 144);
  View.accessibilityFocused(_:)();
  OUTLINED_FUNCTION_19();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 176) + 8))(v3, v2);
  v13 = *(_QWORD *)(v4 - 288);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  *(_QWORD *)(v4 - 176) = v14;
  v15 = *(_QWORD *)(v4 - 296);
  v14(v15, v10, v1);
  v16 = *(unsigned __int8 *)(v13 + 80);
  v17 = (v16 + 32) & ~v16;
  *(_QWORD *)(v4 - 352) = v17 + *(_QWORD *)(v4 - 272);
  v18 = v17;
  *(_QWORD *)(v4 - 344) = v17;
  *(_QWORD *)(v4 - 272) = v16 | 7;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v2;
  *(_QWORD *)(v19 + 24) = v12;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  *(_QWORD *)(v4 - 288) = v20;
  v21 = v15;
  v20(v19 + v18, v15, v1);
  v22 = *(_QWORD *)(v4 - 304);
  View.onAppear(perform:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 264) + 8))(v11, v22);
  v23 = *(_QWORD *)(v4 - 168);
  v24 = *(_QWORD *)(v23 + 16);
  v25 = *(_BYTE *)(v23 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v24, v25);
  specialized Environment.wrappedValue.getter();
  LOBYTE(v11) = v26;
  outlined consume of Environment<CGFloat>.Content(v24, v25);
  *(_BYTE *)(v4 - 136) = v11 & 1;
  v27 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 176))(v21, v23, v1);
  v28 = swift_allocObject();
  v29 = v2;
  v30 = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v28 + 16) = v2;
  *(_QWORD *)(v28 + 24) = v30;
  v31 = *(_QWORD *)(v4 - 344);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 288);
  v32(v28 + v31, v21, v27);
  v33 = *(_QWORD *)(v4 - 160);
  v34 = *(_QWORD *)(v4 - 320);
  View.onChange<A>(of:initial:_:)();
  OUTLINED_FUNCTION_19();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 8))(v33, v34);
  swift_retain();
  v35 = TranscriptionViewModel.captions.getter();
  swift_release();
  *(_QWORD *)(v4 - 136) = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 176))(v21, v23, v27);
  v36 = swift_allocObject();
  v37 = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v36 + 16) = v29;
  *(_QWORD *)(v36 + 24) = v37;
  v32(v36 + v31, v21, v27);
  v38 = *(_QWORD *)(v4 - 280);
  v40 = *(_QWORD *)(v4 - 240);
  v39 = *(_QWORD *)(v4 - 232);
  v42 = *(_QWORD *)(v4 - 256);
  v41 = *(_QWORD *)(v4 - 248);
  v43 = *(_QWORD *)(v4 - 152);
  View.onChange<A>(of:initial:_:)();
  OUTLINED_FUNCTION_19();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 192) + 8))(v43, v39);
  *(_QWORD *)(v4 - 136) = v39;
  *(_QWORD *)(v4 - 128) = v40;
  *(_QWORD *)(v4 - 120) = v41;
  *(_QWORD *)(v4 - 112) = v42;
  v44 = OUTLINED_FUNCTION_7_18();
  v46 = *(_QWORD *)(v4 - 224);
  v45 = *(_QWORD *)(v4 - 216);
  static ViewBuilder.buildExpression<A>(_:)(v38, v45, v44);
  v47 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8);
  v47(v38, v45);
  static ViewBuilder.buildBlock<A>(_:)(v46, v45, *(_QWORD *)(v4 - 184));
  return ((uint64_t (*)(uint64_t, uint64_t))v47)(v46, v45);
}

uint64_t closure #1 in AccessibilityCaptionsReader.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for AccessibilityCaptionsReader(0, a2, a3, a4);
  swift_retain();
  v4 = TranscriptionViewModel.captions.getter();
  swift_release();
  v5 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit22TranscriptionViewModelC7CaptionVG_AH0I2IDVs5NeverOTg504_s15d52Kit27AccessibilityCaptionsReaderV4bodyQrvgyycfU_AA22fgh2C9I61IDVAF0J0Vcfu_33_60f51043fe6654d0e082ed91edd7e083AjHTf3nnnpk_nTf1cn_nTm(v4);
  swift_bridgeObjectRelease();
  specialized Set.init<A>(_:)(v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Set<TranscriptionViewModel.CaptionID>>);
  return State.wrappedValue.setter();
}

void closure #2 in AccessibilityCaptionsReader.body.getter(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  if (*a2 == 1)
  {
    type metadata accessor for AccessibilityCaptionsReader(0, a4, a5, a4);
    swift_retain();
    v5 = TranscriptionViewModel.captions.getter();
    swift_release();
    v6 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit22TranscriptionViewModelC7CaptionVG_AH0I2IDVs5NeverOTg504_s15d52Kit27AccessibilityCaptionsReaderV4bodyQrvgyycfU_AA22fgh2C9I61IDVAF0J0Vcfu_33_60f51043fe6654d0e082ed91edd7e083AjHTf3nnnpk_nTf1cn_nTm(v5);
    swift_bridgeObjectRelease();
    specialized Set.init<A>(_:)(v6);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Set<TranscriptionViewModel.CaptionID>>);
    State.wrappedValue.setter();
  }
}

uint64_t closure #3 in AccessibilityCaptionsReader.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = type metadata accessor for AccessibilityCaptionsReader(0, a4, a5, a4);
  return AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(v5);
}

uint64_t AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, uint64_t);
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v2 = v1;
  v4 = type metadata accessor for AccessibilityNotification.Announcement();
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute.AnnouncementPriority?);
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for AttributedString();
  v72 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v66 - v12;
  v13 = type metadata accessor for RedactionReasons();
  v14 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v77 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v66 - v18;
  v20 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v21);
  v78 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v66 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v66 - v27;
  v29 = *(_QWORD *)(v1 + 16);
  v30 = *(_BYTE *)(v2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v29, v30);
  specialized Environment.wrappedValue.getter();
  v32 = v31;
  outlined consume of Environment<CGFloat>.Content(v29, v30);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v33(v28, v2, a1);
  if ((v32 & 1) == 0)
  {
    v35 = *(void (**)(char *, uint64_t))(v20 + 8);
    v35(v28, a1);
    v33(v25, v2, a1);
    v37 = v2;
    goto LABEL_7;
  }
  v34 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  AccessibilityFocusState.wrappedValue.getter();
  v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  v35(v28, a1);
  v36 = v79;
  v33(v25, v2, a1);
  v37 = v2;
  if ((v36 & 1) == 0)
  {
LABEL_7:
    v44 = v78;
    v35(v25, a1);
    v33(v44, v37, a1);
    return ((uint64_t (*)(char *, uint64_t))v35)(v44, a1);
  }
  v38 = v19;
  specialized Environment.wrappedValue.getter();
  v39 = v2;
  v40 = v34;
  static RedactionReasons.privacy.getter();
  lazy protocol witness table accessor for type TranscriptionViewModel and conformance TranscriptionViewModel(&lazy protocol witness table cache variable for type RedactionReasons and conformance RedactionReasons, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
  v41 = v76;
  v42 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v43 = *(void (**)(char *, uint64_t))(v77 + 8);
  v43(v40, v41);
  v43(v38, v41);
  v35(v25, a1);
  v44 = v78;
  v33(v78, v39, a1);
  if ((v42 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v35)(v44, a1);
  swift_retain();
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  v46 = v45;
  swift_release();
  result = ((uint64_t (*)(char *, uint64_t))v35)(v44, a1);
  if ((v46 & 1) == 0)
  {
    swift_retain();
    v48 = TranscriptionViewModel.captions.getter();
    v49 = swift_release();
    MEMORY[0x1E0C80A78](v49);
    v50 = *(_QWORD *)(a1 + 16);
    v51 = *(_QWORD *)(a1 + 24);
    *(&v66 - 4) = v50;
    *(&v66 - 3) = v51;
    *(&v66 - 2) = v39;
    specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded(), (uint64_t)(&v66 - 6), v48);
    v53 = v52;
    MEMORY[0x1E0C80A78](v52);
    *(&v66 - 4) = v50;
    *(&v66 - 3) = v51;
    *(&v66 - 2) = v39;
    v54 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay15ConversationKit22TranscriptionViewModelC7CaptionVG_SSs5NeverOTg5((uint64_t)partial apply for closure #2 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded(), (uint64_t)(&v66 - 6), v53);
    swift_bridgeObjectRelease();
    v79 = v54;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    AttributeContainer.init()();
    v55 = v70;
    AttributedString.init(_:attributes:)();
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v66 - 2) = v57;
    swift_getKeyPath();
    v58 = *MEMORY[0x1E0C8ECB8];
    v59 = type metadata accessor for AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute.AnnouncementPriority();
    v60 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v71, v58, v59);
    __swift_storeEnumTagSinglePayload(v60, 0, 1, v59);
    lazy protocol witness table accessor for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute();
    AttributedString.subscript.setter();
    v61 = v72;
    v62 = v69;
    v63 = v67;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v55, v67);
    v64 = v73;
    MEMORY[0x1C3B70394](v62);
    v65 = v75;
    _AccessibilityNotifications.post()();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v65);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v55, v63);
  }
  return result;
}

uint64_t closure #1 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD v23[4];

  v8 = type metadata accessor for TranscriptionViewModel.Caption(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for AccessibilityCaptionsReader(0, a3, a4, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v23 - v15;
  LODWORD(a4) = *(unsigned __int8 *)(a1 + *(int *)(v8 + 40));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)v23 - v15, a2, v12, v14);
  outlined init with copy of TranscriptionViewModel.Caption(a1, (uint64_t)v10);
  if ((_DWORD)a4 == 1)
  {
    v17 = &v16[*(int *)(v12 + 48)];
    v19 = *(_QWORD *)v17;
    v18 = *((_QWORD *)v17 + 1);
    v23[0] = v19;
    v23[1] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Set<TranscriptionViewModel.CaptionID>>);
    State.wrappedValue.getter();
    v20 = specialized Set.contains(_:)(*v10, v23[3]);
    swift_bridgeObjectRelease();
    v21 = v20 ^ 1;
  }
  else
  {
    v21 = 0;
  }
  outlined destroy of TranscriptionViewModel.Caption((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v21 & 1;
}

uint64_t closure #2 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];

  v6 = *a1;
  type metadata accessor for AccessibilityCaptionsReader(0, a2, a3, a3);
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Set<TranscriptionViewModel.CaptionID>>);
  State.wrappedValue.getter();
  specialized Set._Variant.insert(_:)((uint64_t)v18, v6, v7, v8, v9, v10, v11, v12, v16, v17);
  State.wrappedValue.setter();
  swift_release();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 28));
  v14 = v13[1];
  *a4 = *v13;
  a4[1] = v14;
  return swift_bridgeObjectRetain();
}

uint64_t key path index equality operator for (KeyPath<AttributeScopes.AccessibilityAttributes, AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.AccessibilityAttributes, AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute>);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t key path index hash operator for (KeyPath<AttributeScopes.AccessibilityAttributes, AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute>)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyPath<AttributeScopes.AccessibilityAttributes, AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute>);
  return dispatch thunk of Hashable.hashValue.getter();
}

void key path getter for AttributeDynamicLookup.subscript<A>(dynamicMember:) : AttributeDynamicLookupAttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute()
{
  lazy protocol witness table accessor for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute();
  AttributeDynamicLookup.subscript.getter();
  __break(1u);
}

void key path getter for EnvironmentValues.accessibilityVoiceOverEnabled : EnvironmentValues()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_6_104() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD492E54()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_6_104() & 1;
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccessibilityCaptionsReader);
}

void sub_1BD492E80()
{
  EnvironmentValues.redactionReasons.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t partial apply for closure #1 in AccessibilityCaptionsReader.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessibilityCaptionsReader(0, v5, v6, a4) - 8)
                          + 80);
  return closure #1 in AccessibilityCaptionsReader.body.getter(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

void partial apply for closure #2 in AccessibilityCaptionsReader.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_0_148(a1, a2, a3, a4);
  closure #2 in AccessibilityCaptionsReader.body.getter(v4, v5, v6, v7, v8);
}

uint64_t objectdestroyTm_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for AccessibilityCaptionsReader(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_release();
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  v8 = v7 + *(int *)(v5 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v7 + *(int *)(v5 + 44);
  v11 = type metadata accessor for AccessibilityTechnologies();
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in AccessibilityCaptionsReader.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_0_148(a1, a2, a3, a4);
  return closure #3 in AccessibilityCaptionsReader.body.getter(v4, v5, v6, v7, v8);
}

uint64_t associated type witness table accessor for View.Body : View in AccessibilityCaptionsReader<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BD4930E0()
{
  return 16;
}

__n128 sub_1BD4930EC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void type metadata completion function for AccessibilityCaptionsReader()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Environment<RedactionReasons>.Content();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessibilityFocusState<Bool>();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AccessibilityCaptionsReader(_QWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain();
    outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v8, v9);
    v4[2] = v8;
    *((_BYTE *)v4 + 24) = v9;
    v10 = a3[10];
    v11 = (_QWORD *)((char *)v4 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[11];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for AccessibilityTechnologies();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityTechnologies?);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
    v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
    v16[v20[9]] = v17[v20[9]];
    *(_QWORD *)&v16[v20[10]] = *(_QWORD *)&v17[v20[10]];
    v16[v20[11]] = v17[v20[11]];
    v21 = a3[12];
    v22 = a3[13];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)((char *)v4 + v22);
    v27 = (uint64_t *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  outlined consume of Environment<CGFloat>.Content(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 44);
  v7 = type metadata accessor for AccessibilityTechnologies();
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_retain();
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = a3[10];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = type metadata accessor for RedactionReasons();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[11];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for AccessibilityTechnologies();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityTechnologies?);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  v14[v18[9]] = v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  v14[v18[11]] = v15[v18[11]];
  v19 = a3[12];
  v20 = a3[13];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(a1 + v20);
  v25 = (_QWORD *)(a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  outlined copy of Environment<MultiwayViewController.LayoutIdiom>.Content(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[10];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = type metadata accessor for RedactionReasons();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = a3[11];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for AccessibilityTechnologies();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!EnumTagSinglePayload)
  {
    v20 = *(_QWORD *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityTechnologies?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
LABEL_12:
  v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  v15[v22[9]] = v16[v22[9]];
  *(_QWORD *)&v15[v22[10]] = *(_QWORD *)&v16[v22[10]];
  swift_retain();
  swift_release();
  v15[v22[11]] = v16[v22[11]];
  v23 = a3[12];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_retain();
  swift_release();
  v26 = a3[13];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t outlined destroy of Environment<RedactionReasons>.Content(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[10];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[11];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for AccessibilityTechnologies();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityTechnologies?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  v12[v16[9]] = v13[v16[9]];
  *(_QWORD *)&v12[v16[10]] = *(_QWORD *)&v13[v16[10]];
  v12[v16[11]] = v13[v16[11]];
  v17 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for AccessibilityCaptionsReader(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v7;
  outlined consume of Environment<CGFloat>.Content(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[10];
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    outlined destroy of Environment<RedactionReasons>.Content(a1 + v10);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<RedactionReasons>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[11];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for AccessibilityTechnologies();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (!EnumTagSinglePayload)
  {
    v21 = *(_QWORD *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_10;
  }
  if (v20)
  {
LABEL_10:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityTechnologies?);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
LABEL_11:
  v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
  v16[v23[9]] = v17[v23[9]];
  *(_QWORD *)&v16[v23[10]] = *(_QWORD *)&v17[v23[10]];
  swift_release();
  v16[v23[11]] = v17[v23[11]];
  v24 = a3[12];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityCaptionsReader()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD493CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 40);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
      v10 = *(int *)(a3 + 44);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for AccessibilityCaptionsReader()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD493D80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<RedactionReasons>);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 40);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AccessibilityFocusState<Bool>);
      v10 = *(int *)(a4 + 44);
    }
    __swift_storeEnumTagSinglePayload(a1 + v10, a2, a2, v9);
  }
}

void type metadata accessor for AccessibilityFocusState<Bool>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for AccessibilityFocusState<Bool>)
  {
    v0 = type metadata accessor for AccessibilityFocusState();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AccessibilityFocusState<Bool>);
  }
}

void sub_1BD493E64()
{
  OUTLINED_FUNCTION_2_121();
}

uint64_t sub_1BD493E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[12];

  v0 = type metadata accessor for ModifiedContent();
  v13[0] = OUTLINED_FUNCTION_7_18();
  v13[1] = MEMORY[0x1E0CDC8B0];
  v1 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v0, v13);
  v2 = MEMORY[0x1E0DEAFA0];
  v9 = v0;
  v10 = MEMORY[0x1E0DEAFA0];
  v3 = MEMORY[0x1E0DEAFB8];
  v11 = v1;
  v12 = MEMORY[0x1E0DEAFB8];
  v4 = MEMORY[0x1C3B75050](255, &v9, MEMORY[0x1E0CDF150], 0);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  v9 = v0;
  v10 = v2;
  v11 = v1;
  v12 = v3;
  v6 = OUTLINED_FUNCTION_7_18();
  v7 = lazy protocol witness table accessor for type [TranscriptionViewModel.Caption] and conformance <A> [A]();
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return OUTLINED_FUNCTION_7_18();
}

uint64_t partial apply for closure #1 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(uint64_t a1)
{
  uint64_t *v1;

  return closure #1 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(a1, v1[4], v1[2], v1[3]) & 1;
}

uint64_t partial apply for closure #2 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return closure #2 in AccessibilityCaptionsReader.announceNewCaptionsIfNeeded()(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1BD493FBC()
{
  AttributeScopes.AccessibilityAttributes.accessibilitySpeechAnnouncementPriority.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute;
  if (!lazy protocol witness table cache variable for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute)
  {
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0C8ECD0], MEMORY[0x1E0C8ECE0]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute and conformance AttributeScopes.AccessibilityAttributes.AnnouncementPriorityAttribute);
  }
  return result;
}

uint64_t sub_1BD494018()
{
  return 8;
}

uint64_t sub_1BD494024()
{
  return swift_release();
}

uint64_t sub_1BD49402C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD494040(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void @nonobjc CABasicAnimation.__allocating_init(keyPath:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  if (a2)
  {
    v2 = MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animationWithKeyPath_, v2);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCallCountdownView.RingLayer.percentage.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

id ConversationControlsJoinCallCountdownView.RingLayer.percentage.setter(double a1)
{
  return ConversationControlsJoinCallCountdownView.RingLayer.percentage.setter(&OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_percentage, a1);
}

void ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

id ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.setter(double a1)
{
  return ConversationControlsJoinCallCountdownView.RingLayer.percentage.setter(&OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_lineWidth, a1);
}

id ConversationControlsJoinCallCountdownView.RingLayer.percentage.setter(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;
  uint64_t v5;

  v4 = (double *)(v2 + *a1);
  v5 = OUTLINED_FUNCTION_2_0();
  *v4 = a2;
  return OUTLINED_FUNCTION_25_1(v5, sel_setNeedsDisplay);
}

void ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsJoinCallCountdownView.RingLayer.fillColor : ConversationControlsJoinCallCountdownView.RingLayer(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x90))(*a1);
}

id ConversationControlsJoinCallCountdownView.RingLayer.fillColor.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void ConversationControlsJoinCallCountdownView.RingLayer.fillColor.setter()
{
  ConversationControlsJoinCallCountdownView.RingLayer.fillColor.setter();
}

{
  void *v0;
  id v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  v1 = OUTLINED_FUNCTION_52_42();

  OUTLINED_FUNCTION_25_1(v2, sel_setNeedsDisplay);
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsJoinCallCountdownView.RingLayer.fillColor.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationControlsJoinCallCountdownView.RingLayer.strokeColor : ConversationControlsJoinCallCountdownView.RingLayer(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8))(*a1);
}

id ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.setter()
{
  ConversationControlsJoinCallCountdownView.RingLayer.fillColor.setter();
}

void ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) != 0)
    OUTLINED_FUNCTION_0();
  else
    objc_msgSend(*(id *)(a1 + 24), sel_setNeedsDisplay);
}

id ConversationControlsJoinCallCountdownView.RingLayer.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_percentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_lineWidth] = 0x4020000000000000;
  v1 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_fillColor;
  v2 = objc_opt_self();
  v3 = v0;
  v4 = OUTLINED_FUNCTION_9((uint64_t)v3, sel_systemDarkGreenColor);
  v5 = OUTLINED_FUNCTION_24_65(v4);

  *(_QWORD *)&v0[v1] = v5;
  v6 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_strokeColor;
  v8 = OUTLINED_FUNCTION_9(v7, sel_systemGreenColor);
  v9 = OUTLINED_FUNCTION_24_65(v8);
  OUTLINED_FUNCTION_14_18();
  *(_QWORD *)&v3[v6] = v2;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer();
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer()
{
  return objc_opt_self();
}

char *ConversationControlsJoinCallCountdownView.RingLayer.init(layer:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void **v21;
  void *v22;
  void **v23;
  void *v24;
  _QWORD *v26;
  char v27[32];
  objc_super v28;

  *(_QWORD *)&v1[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_percentage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_lineWidth] = 0x4020000000000000;
  v3 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_fillColor;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_systemDarkGreenColor);
  v7 = OUTLINED_FUNCTION_24_65(v6);

  *(_QWORD *)&v1[v3] = v7;
  v8 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_strokeColor;
  v9 = OUTLINED_FUNCTION_24_65(objc_msgSend(v4, sel_systemGreenColor));
  OUTLINED_FUNCTION_4_39();
  *(_QWORD *)&v5[v8] = v4;

  v10 = OUTLINED_FUNCTION_28_64();
  v28.receiver = v5;
  v28.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer();
  v11 = objc_msgSendSuper2(&v28, sel_initWithLayer_, v10);
  OUTLINED_FUNCTION_10();
  outlined init with copy of Any(a1, (uint64_t)v27);
  v12 = (char *)v11;
  if ((swift_dynamicCast() & 1) != 0)
  {
    objc_msgSend(v26, sel_percentage);
    v14 = v13;
    v15 = &v12[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_percentage];
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)v15 = v14;
    v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    OUTLINED_FUNCTION_36_52(*MEMORY[0x1E0DEEDD8] & *v26);
    v18 = v17;
    v19 = &v12[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_lineWidth];
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)v19 = v18;
    v20 = OUTLINED_FUNCTION_33_61(*v16 & *v26);
    v21 = (void **)&v12[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_fillColor];
    OUTLINED_FUNCTION_2_0();
    v22 = *v21;
    *v21 = (void *)v20;

    OUTLINED_FUNCTION_1_41(*v26);
    OUTLINED_FUNCTION_4_39();

    OUTLINED_FUNCTION_17_78();
    v23 = (void **)&v12[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_strokeColor];
    OUTLINED_FUNCTION_2_0();
    v24 = *v23;
    *v23 = (void *)v20;

  }
  else
  {

    OUTLINED_FUNCTION_17_78();
  }
  return v12;
}

void ConversationControlsJoinCallCountdownView.RingLayer.init(coder:)()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_percentage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_lineWidth] = 0x4020000000000000;
  v1 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_fillColor;
  v2 = objc_msgSend((id)objc_opt_self(), sel_systemDarkGreenColor);
  v3 = objc_msgSend(v2, sel_CGColor);

  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer_strokeColor;
  v6 = OUTLINED_FUNCTION_123(v5, sel_systemGreenColor);
  v7 = objc_msgSend(v6, sel_CGColor);

  *(_QWORD *)&v0[v4] = v7;
  OUTLINED_FUNCTION_9_100();
  __break(1u);
}

uint64_t static ConversationControlsJoinCallCountdownView.RingLayer.needsDisplay(forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *ObjCClassFromMetadata;
  void *v8;
  objc_super v10;

  OUTLINED_FUNCTION_14_98();
  v3 = v3 && v1 == v2;
  if (v3)
    return 1;
  v4 = v1;
  v5 = v0;
  if ((OUTLINED_FUNCTION_6_105() & 1) != 0)
    return 1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v8 = (void *)MEMORY[0x1C3B72E00](v5, v4);
  v10.receiver = ObjCClassFromMetadata;
  v10.super_class = (Class)&OBJC_METACLASS____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView9RingLayer;
  v6 = objc_msgSendSuper2(&v10, sel_needsDisplayForKey_, v8);

  return (uint64_t)v6;
}

void ConversationControlsJoinCallCountdownView.RingLayer.action(forKey:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  Class isa;
  void *v15;
  id v16;
  objc_super v17;

  v3 = v2;
  OUTLINED_FUNCTION_14_98();
  v9 = v9 && v7 == v8;
  if (v9 || (v6 = OUTLINED_FUNCTION_6_105(), (v6 & 1) != 0))
  {
    OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for CABasicAnimation);
    swift_bridgeObjectRetain();
    @nonobjc CABasicAnimation.__allocating_init(keyPath:)(a1, a2);
    v11 = (void *)v10;
    v12 = OUTLINED_FUNCTION_123(v10, sel_presentationLayer);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_percentage);

    }
    else
    {
      objc_msgSend(v3, sel_percentage);
    }
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, sel_setFromValue_, isa);

  }
  else
  {
    v15 = (void *)MEMORY[0x1C3B72E00](a1, a2);
    v17.receiver = v3;
    v17.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer();
    v16 = objc_msgSendSuper2(&v17, sel_actionForKey_, v15);

  }
  OUTLINED_FUNCTION_8_15();
}

Swift::Void __swiftcall ConversationControlsJoinCallCountdownView.RingLayer.draw(in:)(CGContextRef in)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  _QWORD *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  double v12;
  _QWORD *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  CGColor *v18;
  CGFloat v19;
  CGFloat v20;
  void *v21;
  double v22;
  id v23;
  SEL v24;
  id v25;
  const CGPath *v26;
  uint64_t v27;
  double v28;
  CGFloat v29;
  id v30;
  id v31;
  CGContext *v32;
  CGPathRef v33;
  CGColorRef v34;
  double v35;
  CGColorRef v36;
  double v37;
  uint64_t v38;
  objc_super v39;
  CGRect v40;
  CGRect v41;

  v2 = v1;
  v4 = type metadata accessor for CGPathFillRule();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer();
  v39.receiver = v1;
  v39.super_class = v7;
  -[CGContext drawInContext:](&v39, sel_drawInContext_, in);
  v8 = objc_msgSend(v1, sel_presentationLayer);
  if (v8)
  {
    v1 = v8;
    objc_msgSend(v8, sel_bounds);
    OUTLINED_FUNCTION_37_5();

  }
  else
  {
    objc_msgSend(v1, sel_bounds);
    OUTLINED_FUNCTION_37_5();
  }
  v9 = OUTLINED_FUNCTION_7_119();
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v9)
  {
    OUTLINED_FUNCTION_29_67();
    OUTLINED_FUNCTION_36_52(v11);
    v37 = v12;

  }
  else
  {
    v1 = v2;
    v37 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x70))();
  }
  v13 = OUTLINED_FUNCTION_7_119();
  if (v13)
  {
    v1 = v13;
    objc_msgSend(v13, sel_percentage);
    v35 = v14;

  }
  else
  {
    objc_msgSend(v2, sel_percentage);
    v35 = v15;
  }
  if (OUTLINED_FUNCTION_7_119())
  {
    OUTLINED_FUNCTION_29_67();
    v36 = (CGColorRef)(*(uint64_t (**)(void))(v16 + 160))();

  }
  else
  {
    v1 = v2;
    v36 = (CGColorRef)(*(uint64_t (**)(void))((*v10 & *v2) + 0xA0))();
  }
  if (OUTLINED_FUNCTION_7_119())
  {
    OUTLINED_FUNCTION_29_67();
    v18 = (CGColor *)OUTLINED_FUNCTION_33_61(v17);

  }
  else
  {
    v18 = (CGColor *)(*(uint64_t (**)(void))((*v10 & *v2) + 0x88))();
  }
  v40.origin.x = OUTLINED_FUNCTION_8_18();
  v19 = CGRectGetMaxX(v40) * 0.5;
  v41.origin.x = OUTLINED_FUNCTION_8_18();
  v20 = CGRectGetMaxY(v41) * 0.5;
  OUTLINED_FUNCTION_22_81();
  v21 = (void *)objc_opt_self();
  v22 = OUTLINED_FUNCTION_8_18();
  v25 = objc_msgSend(v23, v24, v22);
  v26 = (const CGPath *)objc_msgSend(v25, sel_CGPath);
  CGContextSaveGState(in);
  CGContextAddPath(in, v26);
  CGContextSetFillColorWithColor(in, v18);
  v27 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v6, *MEMORY[0x1E0C9B8A0], v4);
  CGContextRef.fillPath(using:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  CGContextRestoreGState(in);
  v28 = OUTLINED_FUNCTION_22_81();
  v29 = v37;
  v30 = objc_msgSend(v21, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, v19, v20, v28 * 0.5 - v37 * 0.5, -1.57079633, (v35 * 360.0 + -90.0) * 0.0174532925);
  v31 = objc_msgSend(v30, sel_CGPath);
  CGContextSaveGState(in);
  v32 = (CGContext *)OUTLINED_FUNCTION_65_2();
  CGContextAddPath(v32, v33);
  v34 = v36;
  CGContextSetStrokeColorWithColor(in, v36);
  CGContextSetLineCap(in, kCGLineCapRound);
  CGContextSetLineWidth(in, v29);
  CGContextStrokePath(in);
  CGContextSetShouldAntialias(in, 1);
  CGContextRestoreGState(in);

}

id ConversationControlsJoinCallCountdownView.RingLayer.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer);
}

void ConversationControlsJoinCallCountdownView.CountingLayer.value.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationControlsJoinCallCountdownView.CountingLayer.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  ConversationControlsJoinCallCountdownView.CountingLayer.value.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

id ConversationControlsJoinCallCountdownView.CountingLayer.value.didset(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  id result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value);
  result = (id)swift_beginAccess();
  if (*v3 != a1)
    return ConversationControlsJoinCallCountdownView.CountingLayer.updateString()();
  return result;
}

uint64_t key path setter for ConversationControlsJoinCallCountdownView.CountingLayer.valueFont : ConversationControlsJoinCallCountdownView.CountingLayer(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x68))(*a1);
}

void ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.didset()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  char v4;

  v1 = (void **)(v0
               + OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_valueFont);
  swift_beginAccess();
  v2 = *v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  v3 = v2;
  v4 = static NSObject.== infix(_:_:)();

  if ((v4 & 1) == 0)
    ConversationControlsJoinCallCountdownView.CountingLayer.updateString()();
}

id ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.setter()
{
  void *v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = OUTLINED_FUNCTION_52_42();
  ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.didset();

  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.modify()
{
  void *v0;
  id v1;
  id v2;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_43();
  v2 = v1;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.modify(void **a1, char a2)
{
  void *v2;
  id *v3;
  id v4;

  v2 = *a1;
  v3 = (id *)((char *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = *v3;
    ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.setter();

  }
  else
  {
    ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.setter();
  }
  free(v2);
}

id ConversationControlsJoinCallCountdownView.CountingLayer.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_init);
}

void ConversationControlsJoinCallCountdownView.CountingLayer.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  objc_super v7;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value] = 0;
  v2 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_valueFont;
  v3 = (void *)objc_opt_self();
  v4 = *MEMORY[0x1E0DC4B10];
  v5 = v1;
  v6 = OUTLINED_FUNCTION_53_0(v3, sel_preferredFontForTextStyle_);
  OUTLINED_FUNCTION_149_3();
  OUTLINED_FUNCTION_14_18();
  *(_QWORD *)&v1[v2] = v4;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView.CountingLayer();
  objc_msgSendSuper2(&v7, sel_init);
  OUTLINED_FUNCTION_8_15();
}

void ConversationControlsJoinCallCountdownView.RingLayer.__allocating_init(layer:)()
{
  id v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_12_3();
  v1 = (_QWORD *)OUTLINED_FUNCTION_65_2();
  __swift_project_boxed_opaque_existential_1(v1, v2);
  _bridgeAnythingToObjectiveC<A>(_:)();
  OUTLINED_FUNCTION_53_0(v0, sel_initWithLayer_);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_17_78();
  OUTLINED_FUNCTION_18();
}

char *ConversationControlsJoinCallCountdownView.CountingLayer.init(layer:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  void *v16;
  char v17[32];
  objc_super v18;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value] = 0;
  v4 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_valueFont;
  v5 = (void *)objc_opt_self();
  v6 = *MEMORY[0x1E0DC4B10];
  v7 = v2;
  v8 = objc_msgSend(v5, sel_preferredFontForTextStyle_, v6);
  OUTLINED_FUNCTION_149_3();
  OUTLINED_FUNCTION_4_39();
  *(_QWORD *)&v2[v4] = v6;

  v9 = OUTLINED_FUNCTION_28_64();
  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView.CountingLayer();
  v10 = objc_msgSendSuper2(&v18, sel_initWithLayer_, v9);
  OUTLINED_FUNCTION_10();
  outlined init with copy of Any(a1, (uint64_t)v17);
  v11 = (char *)v10;
  v12 = swift_dynamicCast();
  if ((v12 & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_9(v12, sel_value);

    OUTLINED_FUNCTION_17_78();
    v14 = &v11[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value];
    OUTLINED_FUNCTION_2_0();
    *(_QWORD *)v14 = v13;
  }
  else
  {

    OUTLINED_FUNCTION_17_78();
  }
  return v11;
}

void @objc ConversationControlsJoinCallCountdownView.RingLayer.init(layer:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  uint64_t v5;

  swift_unknownObjectRetain();
  _bridgeAnyObjectToAny(_:)();
  OUTLINED_FUNCTION_10();
  a4(&v5);
  OUTLINED_FUNCTION_8_15();
}

uint64_t ConversationControlsJoinCallCountdownView.CountingLayer.__allocating_init(coder:)(uint64_t a1)
{
  uint64_t v1;

  objc_msgSend(OUTLINED_FUNCTION_12_3(), sel_initWithCoder_, a1);
  OUTLINED_FUNCTION_49_5();
  return v1;
}

void ConversationControlsJoinCallCountdownView.CountingLayer.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_value] = 0;
  v2 = OBJC_IVAR____TtCC15ConversationKit41ConversationControlsJoinCallCountdownView13CountingLayer_valueFont;
  v3 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
  OUTLINED_FUNCTION_149_3();
  OUTLINED_FUNCTION_14_18();
  *(_QWORD *)&v0[v2] = v1;

  OUTLINED_FUNCTION_9_100();
  __break(1u);
}

id ConversationControlsJoinCallCountdownView.CountingLayer.updateString()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_123((uint64_t)v2, sel_value);
  v3 = OUTLINED_FUNCTION_53_0(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_);
  v4 = objc_msgSend(v2, sel_localizedStringFromNumber_numberStyle_, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v9 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v10 = (*(uint64_t (**)(void *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60))(v9);
  OUTLINED_FUNCTION_59(v10, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  *(_QWORD *)(inited + 40) = v10;
  v11 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = v11;
  v13 = (void *)objc_opt_self();
  v14 = v11;
  v15 = objc_msgSend(v13, sel_whiteColor);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 80) = v15;
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  v17 = Dictionary.init(dictionaryLiteral:)();
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  @nonobjc NSAttributedString.init(string:attributes:)(v5, v7, v17);
  v20 = v19;
  objc_msgSend(v1, sel_setString_, v19);

  return OUTLINED_FUNCTION_123(v21, sel_setNeedsDisplay);
}

id ConversationControlsJoinCallCountdownView.CountingLayer.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for ConversationControlsJoinCallCountdownView.CountingLayer);
}

void ConversationControlsJoinCallCountdownView.percentageAnimation.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_percentageAnimation);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_percentageAnimation) = a1;

}

uint64_t key path getter for ConversationControlsJoinCallCountdownView.ringWidth : ConversationControlsJoinCallCountdownView@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x98))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t key path setter for ConversationControlsJoinCallCountdownView.ringWidth : ConversationControlsJoinCallCountdownView(uint64_t a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA0))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t ConversationControlsJoinCallCountdownView.ringWidth.didset(unint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  __n128 v7;
  __n128 v8;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringWidth;
  result = swift_beginAccess();
  if ((a2 & 1) != 0)
  {
    if ((*(_BYTE *)(v5 + 8) & 1) != 0)
      return result;
    v7.n128_u64[0] = *(_QWORD *)v5;
    return (*(uint64_t (**)(uint64_t, __n128, __n128))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer))
                                                              + 0x78))(result, v7, v8);
  }
  if ((*(_BYTE *)(v5 + 8) & 1) == 0)
  {
    v7.n128_u64[0] = *(_QWORD *)v5;
    v8.n128_u64[0] = a1;
    if (*(double *)&a1 != *(double *)v5)
      return (*(uint64_t (**)(uint64_t, __n128, __n128))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer))
                                                                + 0x78))(result, v7, v8);
  }
  return result;
}

uint64_t ConversationControlsJoinCallCountdownView.ringWidth.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(_QWORD *)v0;
}

void ConversationControlsJoinCallCountdownView.ringWidth.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringWidth;
  OUTLINED_FUNCTION_2_0();
  v6 = *(_QWORD *)v5;
  v7 = *(_BYTE *)(v5 + 8);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  ConversationControlsJoinCallCountdownView.ringWidth.didset(v6, v7);
  OUTLINED_FUNCTION_9_0();
}

void ConversationControlsJoinCallCountdownView.ringWidth.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringWidth;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_43();
  *((_BYTE *)v3 + 8) = *(_BYTE *)(v4 + 8);
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCallCountdownView.ringWidth.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ConversationControlsJoinCallCountdownView.ringWidth.setter(*(_QWORD *)(*(_QWORD *)a1 + 24), *(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t key path setter for ConversationControlsJoinCallCountdownView.fillColor : ConversationControlsJoinCallCountdownView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8);
  v4 = *a1;
  return v3(v2);
}

void ConversationControlsJoinCallCountdownView.fillColor.didset(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  _QWORD *v9;
  id v10;
  id v11;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_fillColor);
  swift_beginAccess();
  v5 = *v4;
  if (!a1)
    goto LABEL_5;
  if (v5)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
    v6 = v5;
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      v5 = *v4;
LABEL_5:
      if (v5)
      {
        v9 = *(_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer);
        v10 = v5;
        v11 = objc_msgSend(v10, sel_CGColor);
        (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x90))(v11);

      }
    }
  }
}

void ConversationControlsJoinCallCountdownView.fillColor.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void ConversationControlsJoinCallCountdownView.fillColor.setter(void *a1)
{
  ConversationControlsJoinCallCountdownView.fillColor.setter(a1, &OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_fillColor, ConversationControlsJoinCallCountdownView.fillColor.didset);
}

void ConversationControlsJoinCallCountdownView.fillColor.modify()
{
  void *v0;
  id v1;
  id v2;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_43();
  v2 = v1;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCallCountdownView.fillColor.modify(uint64_t a1, char a2)
{
  ConversationControlsJoinCallCountdownView.fillColor.modify(a1, a2, ConversationControlsJoinCallCountdownView.fillColor.setter);
}

void ConversationControlsJoinCallCountdownView.strokeColor.didset(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  _QWORD *v9;
  id v10;
  id v11;

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_strokeColor);
  swift_beginAccess();
  v5 = *v4;
  if (!a1)
    goto LABEL_5;
  if (v5)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
    v6 = v5;
    v7 = a1;
    v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      v5 = *v4;
LABEL_5:
      if (v5)
      {
        v9 = *(_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer);
        v10 = v5;
        v11 = objc_msgSend(v10, sel_CGColor);
        (*(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xA8))(v11);

      }
    }
  }
}

void ConversationControlsJoinCallCountdownView.strokeColor.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void ConversationControlsJoinCallCountdownView.strokeColor.setter(void *a1)
{
  ConversationControlsJoinCallCountdownView.fillColor.setter(a1, &OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_strokeColor, ConversationControlsJoinCallCountdownView.strokeColor.didset);
}

void ConversationControlsJoinCallCountdownView.fillColor.setter(void *a1, _QWORD *a2, void (*a3)(void *))
{
  uint64_t v3;
  void **v6;
  void *v7;
  id v8;

  v6 = (void **)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = a1;
  v8 = a1;
  a3(v7);

}

void ConversationControlsJoinCallCountdownView.strokeColor.modify()
{
  void *v0;
  id v1;
  id v2;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_25_65((uint64_t)v0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_43();
  v2 = v1;
  OUTLINED_FUNCTION_65_2();
  OUTLINED_FUNCTION_18();
}

void ConversationControlsJoinCallCountdownView.strokeColor.modify(uint64_t a1, char a2)
{
  ConversationControlsJoinCallCountdownView.fillColor.modify(a1, a2, ConversationControlsJoinCallCountdownView.strokeColor.setter);
}

void ConversationControlsJoinCallCountdownView.fillColor.modify(uint64_t a1, char a2, void (*a3)(id))
{
  void *v4;
  id v5;
  id *v6;
  id v7;

  v4 = *(void **)a1;
  v6 = (id *)(*(_QWORD *)a1 + 24);
  v5 = *v6;
  if ((a2 & 1) != 0)
  {
    v7 = v5;
    a3(v5);

  }
  else
  {
    a3(*(id *)(*(_QWORD *)a1 + 24));
  }
  free(v4);
}

id ConversationControlsJoinCallCountdownView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *ConversationControlsJoinCallCountdownView.init(frame:)()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  double v6;
  objc_super *v7;
  SEL v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v24;

  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_percentageAnimation] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_fillColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_strokeColor] = 0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ConversationControlsJoinCallCountdownView.RingLayer());
  v3 = v0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer] = OUTLINED_FUNCTION_9((uint64_t)v3, sel_init);
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConversationControlsJoinCallCountdownView.CountingLayer()), sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer] = v4;
  v5 = v4;
  objc_msgSend(v5, sel_setAllowsFontSubpixelQuantization_, 1);

  v24 = type metadata accessor for ConversationControlsJoinCallCountdownView();
  v6 = OUTLINED_FUNCTION_15_0();
  v9 = objc_msgSendSuper2(v7, v8, v6, v3, v24);
  objc_msgSend(v9, sel_setUserInteractionEnabled_, 0);
  v10 = (char *)v9;
  v11 = objc_msgSend(v10, sel_layer);
  v12 = OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer;
  objc_msgSend(v11, sel_addSublayer_, *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer]);

  v13 = *(id *)&v10[v12];
  OUTLINED_FUNCTION_14_25();
  objc_msgSend(v13, sel_setFrame_);

  v14 = *(void **)&v10[v12];
  OUTLINED_FUNCTION_59(v15, (unint64_t *)&lazy cache variable for type metadata for UIView);
  v16 = v14;
  OUTLINED_FUNCTION_42_50();
  OUTLINED_FUNCTION_19_74();

  v17 = OUTLINED_FUNCTION_51_45(v10);
  v18 = OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer;
  objc_msgSend(v17, sel_addSublayer_, *(_QWORD *)&v10[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer]);

  v19 = *(id *)&v10[v18];
  OUTLINED_FUNCTION_14_25();
  objc_msgSend(v19, sel_setFrame_);

  v20 = *(void **)&v10[v18];
  objc_msgSend(v20, sel_setAlignmentMode_, *MEMORY[0x1E0CD28F0]);
  v21 = v20;
  OUTLINED_FUNCTION_42_50();
  OUTLINED_FUNCTION_19_74();

  v22 = OUTLINED_FUNCTION_51_45(v10);
  OUTLINED_FUNCTION_42_50();
  OUTLINED_FUNCTION_19_74();

  return v10;
}

void ConversationControlsJoinCallCountdownView.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_percentageAnimation] = 0;
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_fillColor] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_strokeColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ConversationControlsJoinCallCountdownView.frame.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationControlsJoinCallCountdownView();
  return objc_msgSendSuper2(&v2, sel_frame);
}

id ConversationControlsJoinCallCountdownView.frame.setter()
{
  void *v0;
  objc_class *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  objc_super *v11;
  SEL v12;
  objc_super v14;

  OUTLINED_FUNCTION_17_7();
  v1 = (objc_class *)type metadata accessor for ConversationControlsJoinCallCountdownView();
  v14.receiver = v0;
  v14.super_class = v1;
  objc_msgSendSuper2(&v14, sel_frame);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_15_0();
  objc_msgSendSuper2(v11, v12, v10, v0, v1);
  return ConversationControlsJoinCallCountdownView.frame.didset(v3, v5, v7, v9);
}

id ConversationControlsJoinCallCountdownView.frame.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  id result;
  id v11;
  double v12;
  void *v13;
  id v14;
  _QWORD *v15;
  void *v16;
  double v17;
  CGFloat v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v5 = v4;
  objc_msgSend(v4, sel_frame);
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  result = (id)CGRectEqualToRect(v19, v23);
  if ((result & 1) == 0)
  {
    v11 = objc_msgSend(v4, sel_layer);
    objc_msgSend(v5, sel_bounds);
    objc_msgSend(v11, sel_setCornerRadius_, v12 * 0.5);

    v13 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer];
    objc_msgSend(v5, sel_bounds);
    objc_msgSend(v13, sel_setFrame_);
    v14 = objc_msgSend(v13, sel_setNeedsDisplay);
    v15 = *(_QWORD **)&v5[OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer];
    v16 = (void *)(*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x60))(v14);
    v17 = UIFont.layoutLineHeight.getter();

    objc_msgSend(v5, sel_bounds);
    v18 = (CGRectGetHeight(v20) - v17) * 0.5;
    objc_msgSend(v5, sel_bounds);
    v21.origin.x = 0.0;
    v21.origin.y = v18;
    v21.size.height = v17;
    v22 = CGRectIntegral(v21);
    objc_msgSend(v15, sel_setFrame_, v22.origin.x, v22.origin.y, v22.size.width, v22.size.height);
    return objc_msgSend(v15, sel_setNeedsDisplay);
  }
  return result;
}

Swift::Void __swiftcall ConversationControlsJoinCallCountdownView.initializeCountdown(with:fullValue:)(Swift::Double with, Swift::Double fullValue)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v6;
  double v7;
  void *v8;
  void *v9;
  Class isa;
  Class v11;
  id v12;

  v4 = v3;
  v6 = with / fullValue;
  if (with == fullValue)
    v7 = 1.0;
  else
    v7 = v6;
  OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for CABasicAnimation);
  @nonobjc CABasicAnimation.__allocating_init(keyPath:)(0x61746E6563726570, 0xEA00000000006567);
  v9 = v8;
  objc_msgSend(v8, sel_setDuration_, with);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  OUTLINED_FUNCTION_59_2((uint64_t)isa, sel_setFromValue_);

  v11 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  OUTLINED_FUNCTION_59_2((uint64_t)v11, sel_setToValue_);

  objc_msgSend(v9, sel_setFillMode_, *MEMORY[0x1E0CD2B60]);
  objc_msgSend(v9, sel_setRemovedOnCompletion_, 0);
  if ((~*(_QWORD *)&with & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (with <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (with < 9.22337204e18)
  {
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer), sel_setValue_, (uint64_t)with);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer), sel_setPercentage_, v7);
    v12 = v9;
    ConversationControlsJoinCallCountdownView.percentageAnimation.setter((uint64_t)v9);

    return;
  }
LABEL_10:
  __break(1u);
}

Swift::Void __swiftcall ConversationControlsJoinCallCountdownView.startCountdown()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_percentageAnimation);
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    v4 = v1;
    OUTLINED_FUNCTION_123((uint64_t)v4, sel_begin);
    OUTLINED_FUNCTION_25_1((uint64_t)objc_msgSend(v2, sel_setDisableActions_, 1), sel_setNeedsLayout);
    outlined bridged method (mnbnn) of @objc CALayer.add(_:forKey:)((uint64_t)v4, 0x61746E6563726570, 0xEA00000000006567, *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_ringLayer));
    OUTLINED_FUNCTION_123(v3, sel_commit);
    OUTLINED_FUNCTION_15_9(v4);
  }
}

Swift::Void __swiftcall ConversationControlsJoinCallCountdownView.tick()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit41ConversationControlsJoinCallCountdownView_countdownLayer);
  v3 = OUTLINED_FUNCTION_123(v0, sel_value);
  if (__OFSUB__(v3, 1))
    __break(1u);
  else
    objc_msgSend(v2, sel_setValue_, ((uint64_t)v3 - 1) & ~(((uint64_t)v3 - 1) >> 63));
}

id ConversationControlsJoinCallCountdownView.__deallocating_deinit()
{
  return BaseButton.__deallocating_deinit(type metadata accessor for ConversationControlsJoinCallCountdownView);
}

void @nonobjc NSAttributedString.init(string:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  NSDictionary v6;

  v5 = MEMORY[0x1C3B72E00]();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for NSAttributedStringKey(0);
    lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.isa = 0;
  }
  objc_msgSend(v3, sel_initWithString_attributes_, v5, v6.super.isa);
  OUTLINED_FUNCTION_49_5();

  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for ConversationControlsJoinCallCountdownView.CountingLayer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ConversationControlsJoinCallCountdownView()
{
  return objc_opt_self();
}

void outlined bridged method (mnbnn) of @objc CALayer.add(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;

  v6 = (void *)MEMORY[0x1C3B72E00](a2, a3);
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_addAnimation_forKey_, a1, v6);
  OUTLINED_FUNCTION_15_9(v6);
}

char *keypath_get_selector_percentage()
{
  return sel_percentage;
}

void sub_1BD496AA8(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  objc_msgSend(*a1, sel_percentage);
  *a2 = v3;
  OUTLINED_FUNCTION_0();
}

id sub_1BD496AD4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPercentage_, *a1);
}

void sub_1BD496AE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_36_52(*MEMORY[0x1E0DEEDD8] & v1);
  *v0 = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD496B18(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD496B50()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_33_61(*MEMORY[0x1E0DEEDD8] & v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD496B84()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_1_41(v1);
  OUTLINED_FUNCTION_0();
}

char *keypath_get_selector_value()
{
  return sel_value;
}

void sub_1BD496BC0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = objc_msgSend(*a1, sel_value);
  OUTLINED_FUNCTION_0();
}

id sub_1BD496BEC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setValue_, *a1);
}

void sub_1BD496C00()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x60))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD496C40()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD496C78()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ConversationControlsJoinCallCountdownView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.ringWidth.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.ringWidth.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA0))(a1, a2 & 1);
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.ringWidth.modify()
{
  return OUTLINED_FUNCTION_11_100(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.fillColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.fillColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.fillColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.strokeColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.strokeColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.strokeColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.initializeCountdown(with:fullValue:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.startCountdown()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.tick()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t method lookup function for ConversationControlsJoinCallCountdownView.RingLayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.lineWidth.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.fillColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.fillColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.fillColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.setter()
{
  return OUTLINED_FUNCTION_11_100(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.RingLayer.strokeColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t method lookup function for ConversationControlsJoinCallCountdownView.CountingLayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConversationControlsJoinCallCountdownView.CountingLayer.valueFont.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

void _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo6TUCallCG_15ConversationKit26AnsweringMachineCallStatusVs5NeverOTg504_s15e5Kit17ij39ServiceC07currentD11ForAllCallsSayAA016g19MachinecD0VGyFAFSo6D6CXEfU_AI0ijN0CTf1cn_n(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String updateSource;
  Swift::String callUUID;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  ConversationKit::AnsweringMachineCallStatus v22;
  uint64_t v23;

  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v23 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      if (v4 < 0)
        break;
      v5 = 0;
      v6 = v23;
      v20 = v2;
      v21 = v3 & 0xC000000000000001;
      v7 = v3;
      while (v4 != v5)
      {
        if (v21)
          v8 = (id)MEMORY[0x1C3B73D18](v5, v3);
        else
          v8 = *(id *)(v3 + 8 * v5 + 32);
        v9 = v8;
        v10 = objc_msgSend(v8, sel_callUUID, v20);
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v13 = v12;

        v14._countAndFlagsBits = 0xD000000000000018;
        v14._object = (void *)0x80000001BD68E1E0;
        v15._countAndFlagsBits = v11;
        v15._object = v13;
        CallStatusService.currentStatus(updateSource:for:)(&v22, v14, v15);

        swift_bridgeObjectRelease();
        v23 = v6;
        v2 = *(_QWORD *)(v6 + 16);
        if (v2 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v6 = v23;
        }
        ++v5;
        *(_QWORD *)(v6 + 16) = v2 + 1;
        v16 = v6 + 56 * v2;
        updateSource = v22.updateSource;
        callUUID = v22.callUUID;
        v19 = *(_OWORD *)&v22.status;
        *(_BYTE *)(v16 + 80) = v22.announcementHasFinished;
        *(Swift::String *)(v16 + 48) = callUUID;
        *(_OWORD *)(v16 + 64) = v19;
        *(Swift::String *)(v16 + 32) = updateSource;
        v3 = v7;
        if (v4 == v5)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_release();
  }
}

uint64_t CallStatusService.currentStatusForAllCalls()()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15ConversationKit17CallStatusService_callCenter), sel_currentCalls));
  type metadata accessor for TUCall();
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo6TUCallCG_15ConversationKit26AnsweringMachineCallStatusVs5NeverOTg504_s15e5Kit17ij39ServiceC07currentD11ForAllCallsSayAA016g19MachinecD0VGyFAFSo6D6CXEfU_AI0ijN0CTf1cn_n(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

void __swiftcall CallStatusService.currentStatus(updateSource:for:)(ConversationKit::AnsweringMachineCallStatus *__return_ptr retstr, Swift::String updateSource, Swift::String a3)
{
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v9;
  void *v10;
  id v11;
  Swift::Bool v12;
  Swift::Int v13;
  Swift::Bool v14;
  Swift::Bool v15;
  Swift::Bool v16;
  ConversationKit::CallStatus v17;
  _QWORD v18[4];
  ConversationKit::CallStatus v19;
  Swift::Bool v20;
  Swift::Bool v21;
  Swift::Bool v22;
  Swift::Int v23;
  Swift::Bool v24;

  object = a3._object;
  countAndFlagsBits = a3._countAndFlagsBits;
  v6 = updateSource._object;
  v7 = updateSource._countAndFlagsBits;
  v9 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_callCenter);
  v10 = (void *)MEMORY[0x1C3B72E00](a3._countAndFlagsBits, a3._object);
  v11 = objc_msgSend(v9, sel_callWithCallUUID_, v10);

  if (v11)
  {
    callStatus(updateSource:for:)(v11, v7, (uint64_t)v6, (uint64_t)v18);

    v12 = v24;
    v13 = v23;
    v14 = v22;
    v15 = v21;
    v16 = v20;
    v17 = v19;
    countAndFlagsBits = v18[2];
    object = (void *)v18[3];
    v7 = v18[0];
    v6 = (void *)v18[1];
  }
  else
  {
    OUTLINED_FUNCTION_25_2();
    swift_bridgeObjectRetain();
    v16 = 0;
    v15 = 0;
    v14 = 0;
    v13 = 0;
    v12 = 0;
    v17 = ConversationKit_CallStatus_disconnected;
  }
  retstr->updateSource._countAndFlagsBits = v7;
  retstr->updateSource._object = v6;
  retstr->callUUID._countAndFlagsBits = countAndFlagsBits;
  retstr->callUUID._object = object;
  retstr->status = v17;
  retstr->isScreening = v16;
  retstr->isScreeningDueToUserInteraction = v15;
  retstr->callIsEligibleForScreening = v14;
  retstr->streamToken = v13;
  retstr->announcementHasFinished = v12;
}

uint64_t CallStatusService.__allocating_init(logger:notificationCenter:callCenter:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  CallStatusService.init(logger:notificationCenter:callCenter:)(a1, a2, a3);
  return v6;
}

uint64_t CallStatusService.callsStatus.getter()
{
  return swift_retain();
}

id CallStatusService.notificationCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t CallStatusService.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_logger;
  v4 = OUTLINED_FUNCTION_17_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD v29[6];
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PassthroughSubject<AnsweringMachineCallStatus, Never>);
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = PassthroughSubject.init()();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_observers) = MEMORY[0x1E0DEE9D8];
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = OUTLINED_FUNCTION_105();
    v34 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 136315650;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000074, 0x80000001BD68E0F0, &v34);
    OUTLINED_FUNCTION_6_106();
    *(_WORD *)(v10 + 12) = 2080;
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD00000000000002BLL, 0x80000001BD68E170, &v34);
    OUTLINED_FUNCTION_6_106();
    *(_WORD *)(v10 + 22) = 2048;
    v33 = 27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v8, v9, "%s%s:#%ld Called", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  v11 = v4 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_logger;
  v12 = OUTLINED_FUNCTION_17_2();
  v13 = *(_QWORD *)(v12 - 8);
  v31 = v12;
  v32 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_callCenter) = a3;
  *(_QWORD *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<NSNotificationName>);
  inited = swift_initStackObject();
  v30[1] = v30;
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  v15 = a1;
  v16 = (void *)*MEMORY[0x1E0DBD4A0];
  v17 = a2;
  v18 = (void *)*MEMORY[0x1E0DBD470];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DBD4A0];
  *(_QWORD *)(inited + 40) = v18;
  v19 = (void *)*MEMORY[0x1E0DBD4E8];
  v20 = (void *)*MEMORY[0x1E0DBD548];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0DBD4E8];
  *(_QWORD *)(inited + 56) = v20;
  MEMORY[0x1E0C80A78](inited);
  v29[2] = v17;
  v29[3] = v4;
  v29[4] = v15;
  v21 = a3;
  v22 = v17;
  v23 = v16;
  v24 = v18;
  v25 = v19;
  v26 = v20;
  v27 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo18NSNotificationNameaG_So8NSObject_ps5NeverOTg5((void (*)(uint64_t *__return_ptr, id *))partial apply for closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:), (uint64_t)v29, inited);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v15, v31);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_observers) = v27;
  swift_bridgeObjectRelease();
  return v4;
}

void closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _QWORD aBlock[6];

  v22 = a2;
  v23 = a4;
  v6 = type metadata accessor for Logger();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = *a1;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v20 = v11;
  v21 = v10;
  v12 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v16 = (uint64_t *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  v17 = v20;
  *v16 = v21;
  v16[1] = v17;
  aBlock[4] = partial apply for closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@in_guaranteed Notification) -> ();
  aBlock[3] = &block_descriptor_95;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(v22, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v12, v18);
  _Block_release(v18);

  *v23 = v19;
}

void closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;

  v55 = a4;
  v56 = a5;
  v53 = type metadata accessor for Logger();
  v7 = *(_QWORD *)(v53 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v53);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notification();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v17 = Strong;
  v52 = v11;
  v54 = a3;
  Notification.object.getter();
  if (!*((_QWORD *)&v59 + 1))
  {
    outlined destroy of Any?((uint64_t)&v58);
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    v39 = Logger.logObject.getter();
    v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v56 = v17;
      v41 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_QWORD *)&v58 = v55;
      *(_DWORD *)v41 = 136446210;
      v54 = v41 + 4;
      v42 = (void *)Notification.name.getter();
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v45 = v44;

      v57 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v43, v45, (uint64_t *)&v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      _os_log_impl(&dword_1BD004000, v39, v40, "ignoring %{public}s missing TUCall", v41, 0xCu);
      v46 = v55;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v46, -1, -1);
      MEMORY[0x1C3B751B8](v41, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    return;
  }
  type metadata accessor for TUCall();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v18 = v57;
  v19 = objc_msgSend(v57, sel_callUUID);
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v49 = v21;
  v50 = v20;

  v22 = objc_msgSend(v18, sel_description);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v47 = v24;
  v48 = v23;

  v51 = v18;
  callStatus(updateSource:for:)(v18, v55, v56, (uint64_t)&v58);
  if (v60 == 6 && (BYTE2(v60) & 1) != 0)
  {
    type metadata accessor for Defaults();
    swift_allocObject();
    v25 = Defaults.init()();
    (*(void (**)(_QWORD))(*(_QWORD *)v25 + 240))(0);
    swift_release();
  }
  v26 = type metadata accessor for TaskPriority();
  __swift_storeEnumTagSinglePayload((uint64_t)v52, 1, 1, v26);
  v27 = v53;
  (*(void (**)(char *, uint8_t *, uint64_t))(v7 + 16))((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
  type metadata accessor for MainActor();
  swift_retain();
  v28 = v56;
  swift_bridgeObjectRetain();
  v29 = static MainActor.shared.getter();
  v30 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v31 = (char *)swift_allocObject();
  v32 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v31 + 2) = v29;
  *((_QWORD *)v31 + 3) = v32;
  v33 = v55;
  *((_QWORD *)v31 + 4) = v17;
  *((_QWORD *)v31 + 5) = v33;
  v34 = v50;
  *((_QWORD *)v31 + 6) = v28;
  *((_QWORD *)v31 + 7) = v34;
  *((_QWORD *)v31 + 8) = v49;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v31[v30], (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
  v35 = &v31[(v30 + v8 + 7) & 0xFFFFFFFFFFFFFFF8];
  v36 = v59;
  *(_OWORD *)v35 = v58;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v60;
  v35[48] = v61;
  v37 = (uint64_t *)&v31[(v30 + v8 + 63) & 0xFFFFFFFFFFFFFFF8];
  v38 = v47;
  *v37 = v48;
  v37[1] = v38;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
  swift_release();
  swift_release();

}

uint64_t callStatus(updateSource:for:)@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X8>)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  id v14;
  unsigned __int8 v15;

  v7 = objc_msgSend(a1, sel_callUUID);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v10 = v9;

  LOBYTE(v7) = CallStatus.init(_:)((uint64_t)objc_msgSend(a1, sel_status));
  v11 = objc_msgSend(a1, sel_isScreening);
  v12 = objc_msgSend(a1, sel_isScreeningDueToUserInteraction);
  v13 = objc_msgSend(a1, sel_isEligibleForScreening);
  v14 = objc_msgSend(a1, sel_answeringMachineStreamToken);
  v15 = objc_msgSend(a1, sel_screeningAnnouncementHasFinished);
  *(_QWORD *)a4 = a2;
  *(_QWORD *)(a4 + 8) = a3;
  *(_QWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 24) = v10;
  *(_BYTE *)(a4 + 32) = (_BYTE)v7;
  *(_BYTE *)(a4 + 33) = v11;
  *(_BYTE *)(a4 + 34) = v12;
  *(_BYTE *)(a4 + 35) = v13;
  *(_QWORD *)(a4 + 40) = v14;
  *(_BYTE *)(a4 + 48) = v15;
  return swift_bridgeObjectRetain();
}

void partial apply for closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t closure #1 in closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 136) = v11;
  *(_QWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v8 + 152) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(void **)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(void **)(v0 + 96);
  swift_release();
  v6._countAndFlagsBits = v5;
  v6._object = v4;
  v7._countAndFlagsBits = v3;
  v7._object = v2;
  CallStatusService.currentStatus(updateSource:for:)((ConversationKit::AnsweringMachineCallStatus *)(v0 + 16), v6, v7);
  swift_bridgeObjectRetain();
  outlined retain of AnsweringMachineCallStatus(v1);
  OUTLINED_FUNCTION_11_101();
  OUTLINED_FUNCTION_25_2();
  swift_bridgeObjectRetain();
  outlined retain of AnsweringMachineCallStatus(v1);
  OUTLINED_FUNCTION_11_101();
  OUTLINED_FUNCTION_25_2();
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v24 + 128);
    v22 = *(_QWORD *)(v24 + 144);
    v23 = *(_QWORD *)(v24 + 136);
    v11 = *(_QWORD *)(v24 + 88);
    v12 = *(_QWORD *)(v24 + 96);
    v13 = OUTLINED_FUNCTION_105();
    v25 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v13 = 136446978;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v24 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v25);
    OUTLINED_FUNCTION_2_122();
    OUTLINED_FUNCTION_11_11();
    *(_WORD *)(v13 + 12) = 2082;
    outlined retain of AnsweringMachineCallStatus(v10);
    v14 = AnsweringMachineCallStatus.description.getter();
    v16 = v15;
    OUTLINED_FUNCTION_10_15();
    *(_QWORD *)(v24 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v16, &v25);
    OUTLINED_FUNCTION_2_122();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_10_15();
    *(_WORD *)(v13 + 22) = 2082;
    OUTLINED_FUNCTION_11_101();
    v17 = AnsweringMachineCallStatus.description.getter();
    v19 = v18;
    OUTLINED_FUNCTION_5_128();
    *(_QWORD *)(v24 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v25);
    OUTLINED_FUNCTION_2_122();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_128();
    OUTLINED_FUNCTION_5_128();
    *(_WORD *)(v13 + 32) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v24 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v22, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_11_11();
    _os_log_impl(&dword_1BD004000, v8, v9, "CallStatusService: recieved notification from source %{public}s for status: %{public}s, fetched new Status to send: %{public}s \n call: %{public}s", (uint8_t *)v13, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  v20 = *(_QWORD *)(v24 + 128);

  OUTLINED_FUNCTION_19_1();
  outlined release of AnsweringMachineCallStatus(v20);
  outlined release of AnsweringMachineCallStatus(v20);
  OUTLINED_FUNCTION_5_128();
  OUTLINED_FUNCTION_5_128();
  OUTLINED_FUNCTION_19_1();
  CallStatusService.send(status:)();
  OUTLINED_FUNCTION_5_128();
  return (*(uint64_t (**)(void))(v24 + 8))();
}

uint64_t CallStatusService.send(status:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t CallStatusService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(*(id *)(v0 + 24), sel_removeObserver_, v0);
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_logger;
  v2 = OUTLINED_FUNCTION_17_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CallStatusService.__deallocating_deinit()
{
  CallStatusService.deinit();
  return swift_deallocClassInstance();
}

void __swiftcall CallStatusService.currentStatus(updateSource:for:)(ConversationKit::AnsweringMachineCallStatus *__return_ptr retstr, Swift::String updateSource, ConversationKit::AnsweringMachineCallStatus *a3)
{
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id callIsEligibleForScreening;
  Swift::Bool v13;
  Swift::Int v14;
  Swift::Bool isScreeningDueToUserInteraction;
  Swift::Bool isScreening;
  ConversationKit::CallStatus status;
  uint64_t v18;
  void *v19;
  Swift::Int streamToken;
  Swift::Bool announcementHasFinished;
  _QWORD v22[4];
  ConversationKit::CallStatus v23;
  Swift::Bool v24;
  Swift::Bool v25;
  char v26;
  Swift::Int v27;
  Swift::Bool v28;

  object = updateSource._object;
  countAndFlagsBits = updateSource._countAndFlagsBits;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_callCenter);
  v9 = a3->callUUID._countAndFlagsBits;
  v10 = a3->callUUID._object;
  v11 = (void *)MEMORY[0x1C3B72E00](v9, v10);
  callIsEligibleForScreening = objc_msgSend(v8, sel_callWithCallUUID_, v11);

  if (callIsEligibleForScreening)
  {
    callStatus(updateSource:for:)(callIsEligibleForScreening, countAndFlagsBits, (uint64_t)object, (uint64_t)v22);

    v13 = v28;
    v14 = v27;
    LOBYTE(callIsEligibleForScreening) = v26;
    isScreeningDueToUserInteraction = v25;
    isScreening = v24;
    status = v23;
    v9 = v22[2];
    v10 = (void *)v22[3];
    v18 = v22[0];
    v19 = (void *)v22[1];
  }
  else
  {
    announcementHasFinished = a3->announcementHasFinished;
    streamToken = a3->streamToken;
    callIsEligibleForScreening = (id)a3->callIsEligibleForScreening;
    isScreeningDueToUserInteraction = a3->isScreeningDueToUserInteraction;
    isScreening = a3->isScreening;
    status = a3->status;
    v18 = a3->updateSource._countAndFlagsBits;
    v19 = a3->updateSource._object;
    outlined retain of AnsweringMachineCallStatus((uint64_t)a3);
    v14 = streamToken;
    v13 = announcementHasFinished;
  }
  retstr->updateSource._countAndFlagsBits = v18;
  retstr->updateSource._object = v19;
  retstr->callUUID._countAndFlagsBits = v9;
  retstr->callUUID._object = v10;
  retstr->status = status;
  retstr->isScreening = isScreening;
  retstr->isScreeningDueToUserInteraction = isScreeningDueToUserInteraction;
  retstr->callIsEligibleForScreening = (char)callIsEligibleForScreening;
  retstr->streamToken = v14;
  retstr->announcementHasFinished = v13;
}

Swift::Void __swiftcall CallStatusService.updateStatus(updateSource:for:withNotification:)(Swift::String updateSource, Swift::String a2, Swift::Bool withNotification)
{
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  void *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;
  ConversationKit::AnsweringMachineCallStatus v11;

  object = a2._object;
  countAndFlagsBits = a2._countAndFlagsBits;
  if (withNotification)
  {
    v6 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit17CallStatusService_callCenter);
    v7 = (void *)MEMORY[0x1C3B72E00](a2._countAndFlagsBits, a2._object);
    oslog = objc_msgSend(v6, sel_callWithCallUUID_, v7);

    if (oslog)
    {
      objc_msgSend(*(id *)(v3 + 24), sel_postNotificationName_object_, *MEMORY[0x1E0DBD4A0], oslog);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      oslog = Logger.logObject.getter();
      v8 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v8))
      {
        v9 = (uint8_t *)OUTLINED_FUNCTION_105();
        v11.updateSource._countAndFlagsBits = OUTLINED_FUNCTION_105();
        *(_DWORD *)v9 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, &v11.updateSource._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_11_11();
        _os_log_impl(&dword_1BD004000, oslog, v8, "unable to update status for call with uuid %s", v9, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }
      OUTLINED_FUNCTION_19_1();
    }

  }
  else
  {
    CallStatusService.currentStatus(updateSource:for:)(&v11, updateSource, a2);
    CallStatusService.send(status:)();
    outlined release of AnsweringMachineCallStatus((uint64_t)&v11);
  }
}

uint64_t ObjC metadata update function for CallStatusService()
{
  return type metadata accessor for CallStatusService();
}

uint64_t type metadata accessor for CallStatusService()
{
  uint64_t result;

  result = type metadata singleton initialization cache for CallStatusService;
  if (!type metadata singleton initialization cache for CallStatusService)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata completion function for CallStatusService()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CallStatusService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallStatusService.__allocating_init(logger:notificationCenter:callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BD4986F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD498718()
{
  OUTLINED_FUNCTION_17_2();
  swift_release();
  OUTLINED_FUNCTION_43_3();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_17_33();
}

void partial apply for closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_17_2() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(a1, *(_QWORD *)(v1 + 16), (uint8_t *)(v1 + v4), *v5, v5[1]);
}

uint64_t sub_1BD4987E0()
{
  OUTLINED_FUNCTION_17_2();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_3();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_17_33();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_17_2();
  v11 = v1[2];
  v3 = v1[4];
  v10 = v1[3];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in closure #1 in CallStatusService.init(logger:notificationCenter:callCenter:)(a1, v11, v10, v3, v4, v5, v6, v7);
}

id LocalParticipantControlsView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

ConversationKit::LocalParticipantControlsView::Capabilities __swiftcall LocalParticipantControlsView.Capabilities.updated(cinematicFraming:cameraBlur:effects:cameraFlip:cameraRotate:reactionGestures:studioLight:)(Swift::Bool_optional cinematicFraming, Swift::Bool_optional cameraBlur, Swift::Bool_optional effects, Swift::Bool_optional cameraFlip, Swift::Bool_optional cameraRotate, Swift::Bool_optional reactionGestures, Swift::Bool_optional studioLight)
{
  uint64_t v7;
  char value;
  BOOL v9;
  uint64_t v10;

  if (studioLight.value == 2)
    value = BYTE6(v7) & 1;
  else
    value = studioLight.value;
  v9 = (value & 1) == 0;
  v10 = 0x1000000000000;
  if (v9)
    v10 = 0;
  return (ConversationKit::LocalParticipantControlsView::Capabilities)OUTLINED_FUNCTION_91_16(v10);
}

ConversationKit::LocalParticipantControlsView::Capabilities __swiftcall LocalParticipantControlsView.Capabilities.init(cinematicFraming:cameraBlur:effects:cameraFlip:cameraRotate:reactionGestures:studioLight:)(Swift::Bool cinematicFraming, Swift::Bool cameraBlur, Swift::Bool effects, Swift::Bool cameraFlip, Swift::Bool cameraRotate, Swift::Bool reactionGestures, Swift::Bool studioLight)
{
  uint64_t v7;

  v7 = 0x1000000000000;
  if (!studioLight)
    v7 = 0;
  return (ConversationKit::LocalParticipantControlsView::Capabilities)OUTLINED_FUNCTION_91_16(v7);
}

void *LocalParticipantControlsView.Style.alphaAnimationDuration.unsafeMutableAddressor()
{
  return &static LocalParticipantControlsView.Style.alphaAnimationDuration;
}

Swift::Void __swiftcall LocalParticipantControlsViewProtocol.updateControlsAlpha()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 24))(0);
}

BOOL static LocalParticipantControlsView.Style.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

double static LocalParticipantControlsView.Style.alphaAnimationDuration.getter()
{
  return 0.25;
}

void *LocalParticipantControlsView.Style.hideLabelButtonAnimationDelay.unsafeMutableAddressor()
{
  return &static LocalParticipantControlsView.Style.hideLabelButtonAnimationDelay;
}

double static LocalParticipantControlsView.Style.hideLabelButtonAnimationDelay.getter()
{
  return 0.1;
}

id LocalParticipantControlsView.Style.textStyle.getter(unsigned __int8 a1)
{
  id v2;
  id v3;
  id *v4;
  id *v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  v4 = (id *)MEMORY[0x1E0DC4A88];
  v5 = (id *)MEMORY[0x1E0DC4AA0];
  if (v3 == (id)1)
    v5 = (id *)MEMORY[0x1E0DC4A88];
  if (!a1)
    v4 = v5;
  if (a1 - 2 < 2)
    v4 = (id *)MEMORY[0x1E0DC4B60];
  return *v4;
}

void LocalParticipantControlsView.Style.margin.getter(unsigned __int8 a1)
{
  if (a1 >= 2u)
    Layout.LocalParticipantViewCameraControls.init()();
  else
    OUTLINED_FUNCTION_36_53();
  static Platform.current.getter();
  OUTLINED_FUNCTION_68_27();
}

void LocalParticipantControlsView.Style.bottomMargin.getter(unsigned __int8 a1)
{
  if (a1 >= 2u)
    Layout.LocalParticipantViewCameraControls.init()();
  else
    OUTLINED_FUNCTION_36_53();
  static Platform.current.getter();
  OUTLINED_FUNCTION_68_27();
}

void LocalParticipantControlsView.Style.buttonSize.getter(char a1)
{
  __asm { BR              X10 }
}

void sub_1BD498C7C()
{
  OUTLINED_FUNCTION_36_53();
  static Platform.current.getter();
  OUTLINED_FUNCTION_68_27();
}

double LocalParticipantControlsView.Style.buttonSpacing.getter(char a1)
{
  double v1;
  double *v2;
  uint64_t v4;
  uint64_t v5;

  if (a1 == 3)
  {
    OUTLINED_FUNCTION_36_53();
    v2 = (double *)&v5;
    goto LABEL_5;
  }
  v1 = 0.0;
  if (a1 == 2)
  {
    OUTLINED_FUNCTION_36_53();
    v2 = (double *)&v4;
LABEL_5:
    v1 = *v2;
    static Platform.current.getter();
  }
  return v1;
}

void LocalParticipantControlsView.Style.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.Style.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance LocalParticipantControlsView.Style(char *a1, char *a2)
{
  return static LocalParticipantControlsView.Style.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance LocalParticipantControlsView.Style()
{
  unsigned __int8 *v0;

  LocalParticipantControlsView.Style.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance LocalParticipantControlsView.Style(uint64_t a1)
{
  unsigned __int8 *v1;

  LocalParticipantControlsView.Style.hash(into:)(a1, *v1);
}

uint64_t static LocalParticipantControlsView.ViewModel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  OUTLINED_FUNCTION_93();
  v63 = v0;
  v64 = v1;
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_5_27();
  v61 = v7;
  MEMORY[0x1E0C80A78](v8);
  v60 = (uint64_t)&v59 - v9;
  v59 = OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_5_27();
  v62 = v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v59 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v59 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v59 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v59 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v59 - v25;
  if (v5[6])
    v27 = 0x1000000000000;
  else
    v27 = 0;
  v28 = 0x10000000000;
  if (v5[5])
    v29 = 0x10000000000;
  else
    v29 = 0;
  v30 = 0x100000000;
  if (v5[4])
    v31 = 0x100000000;
  else
    v31 = 0;
  v32 = 0x1000000;
  if (v5[3])
    v33 = 0x1000000;
  else
    v33 = 0;
  v34 = 0x10000;
  if (v5[2])
    v35 = 0x10000;
  else
    v35 = 0;
  v36 = 256;
  if (v5[1])
    v37 = 256;
  else
    v37 = 0;
  v38 = v37 | *v5 | v35 | v33 | v31 | v29 | v27;
  if (v3[6])
    v39 = 0x1000000000000;
  else
    v39 = 0;
  if (!v3[5])
    v28 = 0;
  if (!v3[4])
    v30 = 0;
  if (!v3[3])
    v32 = 0;
  if (!v3[2])
    v34 = 0;
  if (!v3[1])
    v36 = 0;
  v40 = static LocalParticipantControlsView.Capabilities.== infix(_:_:)(v38, v36 | *v3 | v34 | v32 | v30 | v28 | v39);
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v5, (uint64_t)v26, type metadata accessor for LocalParticipantControlsView.ViewModel);
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v3, (uint64_t)v23, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (!v40)
  {
    OUTLINED_FUNCTION_68_2((uint64_t)v23);
    OUTLINED_FUNCTION_68_2((uint64_t)v26);
    OUTLINED_FUNCTION_30_69((uint64_t)v5, (uint64_t)v20);
    OUTLINED_FUNCTION_30_69((uint64_t)v3, (uint64_t)v17);
    goto LABEL_40;
  }
  v41 = v23[7];
  v42 = VideoMessageController.State.rawValue.getter(v26[7]);
  v44 = v43;
  if (v42 == VideoMessageController.State.rawValue.getter(v41) && v44 == v45)
  {
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_68_2((uint64_t)v23);
    OUTLINED_FUNCTION_68_2((uint64_t)v26);
    OUTLINED_FUNCTION_30_69((uint64_t)v5, (uint64_t)v20);
    OUTLINED_FUNCTION_30_69((uint64_t)v3, (uint64_t)v17);
    goto LABEL_42;
  }
  v47 = OUTLINED_FUNCTION_13();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_60_20((uint64_t)v23);
  OUTLINED_FUNCTION_60_20((uint64_t)v26);
  OUTLINED_FUNCTION_76_21((uint64_t)v5, (uint64_t)v20);
  OUTLINED_FUNCTION_76_21((uint64_t)v3, (uint64_t)v17);
  if ((v47 & 1) == 0)
  {
LABEL_40:
    OUTLINED_FUNCTION_68_2((uint64_t)v17);
    OUTLINED_FUNCTION_68_2((uint64_t)v20);
    OUTLINED_FUNCTION_30_69((uint64_t)v5, (uint64_t)v14);
    v48 = v62;
    OUTLINED_FUNCTION_30_69((uint64_t)v3, v62);
LABEL_43:
    OUTLINED_FUNCTION_68_2(v48);
    OUTLINED_FUNCTION_68_2((uint64_t)v14);
    return 0;
  }
LABEL_42:
  v49 = v20[8];
  OUTLINED_FUNCTION_68_2((uint64_t)v20);
  v50 = v17[8];
  OUTLINED_FUNCTION_68_2((uint64_t)v17);
  OUTLINED_FUNCTION_30_69((uint64_t)v5, (uint64_t)v14);
  v48 = v62;
  OUTLINED_FUNCTION_30_69((uint64_t)v3, v62);
  if (v49 != v50)
    goto LABEL_43;
  v52 = v59;
  v53 = (uint64_t)&v14[*(int *)(v59 + 28)];
  v54 = v60;
  outlined init with take of Participant.VideoInfo?(v53, v60, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v55 = type metadata accessor for ConversationControlsRecipe();
  v56 = __swift_getEnumTagSinglePayload(v54, 1, v55) == 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v57 = v48 + *(int *)(v52 + 28);
  v58 = v61;
  outlined init with take of Participant.VideoInfo?(v57, v61, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  LODWORD(v55) = __swift_getEnumTagSinglePayload(v58, 1, v55) != 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return v56 ^ v55;
}

BOOL static LocalParticipantControlsView.Capabilities.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return ((a1 ^ a2) & 1 | (a1 >> 8) & 1 ^ (a2 >> 8) & 1 | (a1 >> 16) & 1 ^ (a2 >> 16) & 1 | (a1 >> 24) & 1 ^ (a2 >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1 | (a1 >> 40) & 1 ^ (a2 >> 40) & 1 | HIWORD(a1) & 1 ^ HIWORD(a2) & 1) == 0;
}

uint64_t LocalParticipantControlsView.ViewModel.capabilities.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = 0x1000000000000;
  if (!v0[6])
    v1 = 0;
  v2 = 0x10000000000;
  if (!v0[5])
    v2 = 0;
  v3 = 0x100000000;
  if (!v0[4])
    v3 = 0;
  v4 = 0x1000000;
  if (!v0[3])
    v4 = 0;
  v5 = 0x10000;
  if (!v0[2])
    v5 = 0;
  v6 = 256;
  if (!v0[1])
    v6 = 0;
  return v6 | *v0 | v5 | v4 | v3 | v2 | v1;
}

int8x8_t LocalParticipantControlsView.ViewModel.capabilities.setter(unint64_t a1)
{
  _BYTE *v1;
  uint64x2_t v2;

  *v1 = a1 & 1;
  v2 = (uint64x2_t)vdupq_n_s64(a1);
  return OUTLINED_FUNCTION_37_49(a1, v2, (int32x4_t)vshlq_u64(v2, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60);
}

uint64_t (*LocalParticipantControlsView.ViewModel.capabilities.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t LocalParticipantControlsView.ViewModel.videoMessagingState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t LocalParticipantControlsView.ViewModel.videoMessagingState.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 7) = result;
  return result;
}

uint64_t (*LocalParticipantControlsView.ViewModel.videoMessagingState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t LocalParticipantControlsView.ViewModel.isInComingCall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t LocalParticipantControlsView.ViewModel.isInComingCall.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*LocalParticipantControlsView.ViewModel.isInComingCall.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantControlsView.ViewModel.hudRecipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  outlined init with copy of Participant.ScreenInfo?(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_0();
}

uint64_t LocalParticipantControlsView.ViewModel.hudRecipe.setter(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_86_16();
  return outlined assign with take of ConversationControlsRecipe?(a1, v2);
}

double (*LocalParticipantControlsView.ViewModel.hudRecipe.modify())(_QWORD)
{
  OUTLINED_FUNCTION_86_16();
  return TPNumberPadCharacter.rawValue.getter;
}

void LocalParticipantControlsView.ViewModel.init(capabilities:videoMessagingState:isInComingCall:hudRecipe:)(unint64_t a1@<X0>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  uint64x2_t v5;
  char v6;
  char v7;
  uint64_t v8;

  *a3 = a1 & 1;
  v5 = (uint64x2_t)vdupq_n_s64(a1);
  OUTLINED_FUNCTION_37_49(a1, v5, (int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60);
  a3[7] = v6;
  a3[8] = v7;
  OUTLINED_FUNCTION_86_16();
  outlined init with take of Participant.VideoInfo?(a2, v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_0();
}

uint64_t LocalParticipantControlsView.Capabilities.cinematicFraming.getter(char a1)
{
  return a1 & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.cameraBlur.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.effects.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.cameraFlip.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.cameraRotate.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.reactionGestures.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t LocalParticipantControlsView.Capabilities.studioLight.getter(unint64_t a1)
{
  return HIWORD(a1) & 1;
}

void *LocalParticipantControlsView.Capabilities.default.unsafeMutableAddressor()
{
  return &static LocalParticipantControlsView.Capabilities.default;
}

uint64_t static LocalParticipantControlsView.Capabilities.default.getter()
{
  return 0;
}

void LocalParticipantControlsView.Capabilities.hash(into:)(uint64_t a1, uint64_t a2)
{
  Hasher._combine(_:)(a2 & 1);
  Hasher._combine(_:)(BYTE1(a2) & 1);
  Hasher._combine(_:)(BYTE2(a2) & 1);
  Hasher._combine(_:)(BYTE3(a2) & 1);
  Hasher._combine(_:)(BYTE4(a2) & 1);
  Hasher._combine(_:)(BYTE5(a2) & 1);
  Hasher._combine(_:)(BYTE6(a2) & 1);
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.Capabilities.hashValue.getter(uint64_t a1)
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_5_1();
  LocalParticipantControlsView.Capabilities.hash(into:)((uint64_t)v2, a1 & 0x1010101010101);
  Hasher._finalize()();
  OUTLINED_FUNCTION_2();
}

void protocol witness for Hashable.hashValue.getter in conformance LocalParticipantControlsView.Capabilities()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = 0x1000000000000;
  if (!v0[6])
    v1 = 0;
  v2 = 0x10000000000;
  if (!v0[5])
    v2 = 0;
  v3 = 0x100000000;
  if (!v0[4])
    v3 = 0;
  v4 = 0x1000000;
  if (!v0[3])
    v4 = 0;
  v5 = 0x10000;
  if (!v0[2])
    v5 = 0;
  v6 = 256;
  if (!v0[1])
    v6 = 0;
  LocalParticipantControlsView.Capabilities.hashValue.getter(v6 | *v0 | v5 | v4 | v3 | v2 | v1);
}

void protocol witness for Hashable.hash(into:) in conformance LocalParticipantControlsView.Capabilities(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = 0x1000000000000;
  if (!v1[6])
    v2 = 0;
  v3 = 0x10000000000;
  if (!v1[5])
    v3 = 0;
  v4 = 0x100000000;
  if (!v1[4])
    v4 = 0;
  v5 = 0x1000000;
  if (!v1[3])
    v5 = 0;
  v6 = 0x10000;
  if (!v1[2])
    v6 = 0;
  v7 = 256;
  if (!v1[1])
    v7 = 0;
  LocalParticipantControlsView.Capabilities.hash(into:)(a1, v7 | *v1 | v6 | v5 | v4 | v3 | v2);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance LocalParticipantControlsView.Capabilities()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  Hasher.init(_seed:)();
  v8 = 0x1000000000000;
  if (!v7)
    v8 = 0;
  v9 = 0x10000000000;
  if (!v6)
    v9 = 0;
  v10 = 0x100000000;
  if (!v5)
    v10 = 0;
  v11 = 0x1000000;
  if (!v4)
    v11 = 0;
  v12 = 0x10000;
  if (!v3)
    v12 = 0;
  v13 = 256;
  if (!v2)
    v13 = 0;
  LocalParticipantControlsView.Capabilities.hash(into:)((uint64_t)v15, v13 | v1 | v12 | v11 | v10 | v9 | v8);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance LocalParticipantControlsView.Capabilities(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  v14 = a2[6];
  if (a1[6])
    v15 = 0x1000000000000;
  else
    v15 = 0;
  v16 = v7 == 0;
  v17 = 0x10000000000;
  if (v16)
    v18 = 0;
  else
    v18 = 0x10000000000;
  v16 = v6 == 0;
  v19 = 0x100000000;
  if (v16)
    v20 = 0;
  else
    v20 = 0x100000000;
  v16 = v5 == 0;
  v21 = 0x1000000;
  if (v16)
    v22 = 0;
  else
    v22 = 0x1000000;
  v16 = v4 == 0;
  v23 = 0x10000;
  if (v16)
    v24 = 0;
  else
    v24 = 0x10000;
  v16 = v3 == 0;
  v25 = 256;
  if (v16)
    v26 = 0;
  else
    v26 = 256;
  v27 = v26 | v2 | v24 | v22 | v20 | v18 | v15;
  if (v14)
    v28 = 0x1000000000000;
  else
    v28 = 0;
  if (!v13)
    v17 = 0;
  if (!v12)
    v19 = 0;
  if (!v11)
    v21 = 0;
  if (!v10)
    v23 = 0;
  if (!v9)
    v25 = 0;
  return static LocalParticipantControlsView.Capabilities.== infix(_:_:)(v27, v25 | v8 | v23 | v21 | v19 | v17 | v28);
}

id LocalParticipantControlsView.effectsButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton);
}

id LocalParticipantControlsView.cameraBlurButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
}

void *closure #1 in variable initialization expression of LocalParticipantControlsView.effectsButton()
{
  void *v0;
  void *v1;
  id v2;

  OUTLINED_FUNCTION_67_23();
  OUTLINED_FUNCTION_52_43();
  v1 = v0;
  v2 = (id)InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  OUTLINED_FUNCTION_69_22(v2);

  return v1;
}

id LocalParticipantControlsView.cinematicFramingButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
}

id LocalParticipantControlsView.collapseButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton);
}

id closure #1 in variable initialization expression of LocalParticipantControlsView.rotateButton()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;

  type metadata accessor for InCallControlButton();
  LOBYTE(v10) = 2;
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  LOWORD(v9) = 1;
  v0 = (void *)InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_conversationKit, v9, v10);
  v11._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x4320657461746F52;
  v4._object = (void *)0xED00006172656D61;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v11);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityIdentifier.setter(v7._countAndFlagsBits, (uint64_t)v7._object, v2);
  return v2;
}

id LocalParticipantControlsView.rotateButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_rotateButton);
}

id LocalParticipantControlsView.cameraFlipButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton);
}

id LocalParticipantControlsView.reactionEffectGestureButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton);
}

void *closure #1 in variable initialization expression of LocalParticipantControlsView.collapseButton()
{
  void *v0;
  id v1;

  v0 = (void *)OUTLINED_FUNCTION_67_23();
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  OUTLINED_FUNCTION_52_43();
  v1 = (id)InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  OUTLINED_FUNCTION_69_22(v1);

  return v0;
}

id LocalParticipantControlsView.studioLightButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton);
}

id closure #1 in variable initialization expression of LocalParticipantControlsView.videoPauseButton()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;

  type metadata accessor for InCallControlButton();
  LOBYTE(v10) = 7;
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  LOWORD(v9) = 1;
  v0 = (void *)InCallControlButton.__allocating_init(style:symbolDescriber:text:discSize:imageSpacing:visualEffectGroupName:wantsPointerInteraction:isImageTrailing:)();
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_conversationKit, v9, v10);
  v11._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001BD68E600;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v11);

  outlined bridged method (mbnn) of @objc NSObject.accessibilityLabel.setter(v7._countAndFlagsBits, (uint64_t)v7._object, v2);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id LocalParticipantControlsView.videoPauseButton.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton);
}

void LocalParticipantControlsView.videoMessageControls.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.videoMessageControls.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoMessageControls);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.videoMessageControls.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.videoMessageViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  _BYTE v16[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___videoMessageViewModel;
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___videoMessageViewModel);
  if (!v6)
  {
    v7 = type metadata accessor for URL();
    OUTLINED_FUNCTION_77_0((uint64_t)v4, v8, v9, v7);
    v16[15] = 0;
    v10 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewModel(0));
    v11 = VideoMessagePlayerViewModel.init(videoMessageURL:playerSpaciality:)();
    v12 = closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(v11);

    v13 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v12;
    v14 = v12;

    v6 = 0;
  }
  v15 = v6;
  OUTLINED_FUNCTION_18();
}

_QWORD *closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  void (*v7)(_BYTE *, _QWORD);
  void (**v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  _BYTE v16[32];
  double v17;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xF8))(0);
  v2 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_shutterModel);
  (*(void (**)(_QWORD))(*(_QWORD *)v2 + 520))(0);
  (*(void (**)(_QWORD))((*v1 & *a1) + 0xC8))(0);
  Layout.LocalParticipantViewCameraControls.init()();
  v3 = static Platform.current.getter();
  v4 = (*(double (**)(uint64_t))(*(_QWORD *)v2 + 368))(v3);
  (*(void (**)(double))(*(_QWORD *)v2 + 328))(v17 - (v4 + v4));
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = *(uint64_t (**)(_BYTE *))((*v1 & *a1) + 0x1C0);
  swift_retain();
  v7 = (void (*)(_BYTE *, _QWORD))v6(v16);
  *v8 = partial apply for closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter;
  v8[1] = (void (*)())v5;
  swift_release();
  v7(v16, 0);
  swift_release();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  swift_retain();
  swift_retain();
  v12 = (void (*)(_BYTE *, _QWORD))v6(v16);
  *(_QWORD *)(v13 + 32) = partial apply for closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter;
  *(_QWORD *)(v13 + 40) = v11;
  swift_release();
  v12(v16, 0);
  swift_release();
  swift_release();
  return a1;
}

void closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = v2;
    v4 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1F8))();
    v6 = v5;

    if (v4)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(2, ObjectType, v6);
      swift_unknownObjectRelease();
    }
  }
}

void closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  int v7;
  _QWORD *v8;
  void *v9;
  int v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;

  v2 = a1 + 16;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v4
    && (v6 = v4, v7 = (*(unsigned __int8 (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF0))(), v6, !v7))
  {
    swift_beginAccess();
    v21 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
    if (v21)
    {
      v22 = v21;
      (*(void (**)(uint64_t))((*v5 & *v21) + 0xF8))(3);

    }
    swift_beginAccess();
    v23 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
    if (v23)
    {
      v24 = v23;
      v25 = (*(uint64_t (**)(void))((*v5 & *v23) + 0x1F8))();
      v27 = v26;

      if (v25)
      {
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(1, ObjectType, v27);
        goto LABEL_17;
      }
    }
  }
  else
  {
    swift_beginAccess();
    v8 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
    if (v8)
    {
      v9 = v8;
      v10 = (*(unsigned __int8 (**)(void))((*v5 & *v8) + 0xF0))();

      if (v10 == 2)
      {
        swift_beginAccess();
        v11 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
        if (v11)
        {
          v12 = v11;
          (*(void (**)(void))((*v5 & *v11) + 0x418))();

        }
        return;
      }
    }
    swift_beginAccess();
    v13 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
    if (v13)
    {
      v14 = v13;
      (*(void (**)(_QWORD))((*v5 & *v13) + 0xF8))(0);

    }
    swift_beginAccess();
    v15 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
    if (v15)
    {
      v16 = v15;
      v17 = (*(uint64_t (**)(void))((*v5 & *v15) + 0x1F8))();
      v19 = v18;

      if (v17)
      {
        v20 = swift_getObjectType();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 8))(0, v20, v19);
LABEL_17:
        swift_unknownObjectRelease();
      }
    }
  }
}

void LocalParticipantControlsView.videoMessageViewModel.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___videoMessageViewModel);
}

void LocalParticipantControlsView.videoMessageViewModel.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  LocalParticipantControlsView.videoMessageViewModel.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.videoMessageViewModel.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))LocalParticipantControlsView.videoMessageViewModel.setter);
}

uint64_t key path setter for LocalParticipantControlsView.callAgainHUDView : LocalParticipantControlsView(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x170);
  v4 = *a1;
  return v3(v2);
}

void LocalParticipantControlsView.callAgainHUDView.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_26();
}

void sub_1BD49A4BC()
{
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.callAgainHUDView.setter(void *a1)
{
  OUTLINED_FUNCTION_2_0();
  swift_unknownObjectWeakAssign();

  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.callAgainHUDView.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_124_1();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_callAgainHUDView;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD49A548(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

uint64_t key path setter for LocalParticipantControlsView.hudRecipe : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Participant.ScreenInfo?(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x188))(v6);
}

void LocalParticipantControlsView.hudRecipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_59_35();
  OUTLINED_FUNCTION_75_23(v5);
  outlined init with take of Participant.VideoInfo?(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.hudRecipe.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[4];

  OUTLINED_FUNCTION_39_61(*v1, v6[0]);
  v4 = v3;
  v5 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  outlined assign with copy of ConversationControlsRecipe?(a1, v4 + *(int *)(v5 + 28));
  OUTLINED_FUNCTION_95_17((uint64_t)v6);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_9_0();
}

void (*LocalParticipantControlsView.hudRecipe.modify())(_QWORD **a1, char a2)
{
  uint64_t *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  size_t v5;
  void *v6;

  v2 = malloc(0x68uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_80((uint64_t)v2) + 64) = v0;
  v3 = OUTLINED_FUNCTION_19_75();
  v1[9] = v3;
  v4 = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v1[10] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                             - 8)
                 + 64);
  v1[11] = malloc(v5);
  v6 = malloc(v5);
  v1[12] = v6;
  OUTLINED_FUNCTION_75_23(*v0);
  outlined init with take of Participant.VideoInfo?((uint64_t)v4 + *(int *)(v3 + 28), (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return LocalParticipantControlsView.hudRecipe.modify;
}

void LocalParticipantControlsView.hudRecipe.modify(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[11];
    v3 = v2[12];
    v6 = v2[9];
    v5 = (void *)v2[10];
    v7 = (uint64_t *)v2[8];
    outlined init with copy of Participant.ScreenInfo?(v3, v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    OUTLINED_FUNCTION_40_57(*v7);
    outlined assign with copy of ConversationControlsRecipe?(v4, v8 + *(int *)(v6 + 28));
    OUTLINED_FUNCTION_95_17((uint64_t)v2);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    v3 = v2[12];
    v9 = v2[9];
    v5 = (void *)v2[10];
    (*(void (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v2[8]) + 0x268))(v2 + 4);
    outlined assign with copy of ConversationControlsRecipe?(v3, v10 + *(int *)(v9 + 28));
    OUTLINED_FUNCTION_95_17((uint64_t)(v2 + 4));
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_595();
  OUTLINED_FUNCTION_110_14();
  free(v5);
  free(v2);
}

uint64_t key path setter for LocalParticipantControlsView.spinnerView : LocalParticipantControlsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1A0))(*a1);
}

void LocalParticipantControlsView.spinnerView.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  UIActivityIndicatorView *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v2 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___spinnerView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___spinnerView);
  if (!v3)
  {
    v4 = v1;
    OUTLINED_FUNCTION_59(a1, &lazy cache variable for type metadata for UIActivityIndicatorView);
    UIActivityIndicatorView.init(style:size:)(v5, ConversationKit_PlatformActivityIndicatorStyle_spinner, ConversationKit_PlatformActivityIndicatorSize_large);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v4 + v2) = v7;
    v8 = v7;

    v3 = 0;
  }
  v9 = v3;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.spinnerView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___spinnerView);
}

void LocalParticipantControlsView.spinnerView.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_8_3(a1);
  LocalParticipantControlsView.spinnerView.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.spinnerView.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))LocalParticipantControlsView.spinnerView.setter);
}

void LocalParticipantControlsView.hasInitializedShutterButton.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.hasInitializedShutterButton.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_hasInitializedShutterButton);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.hasInitializedShutterButton.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.shutterButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___shutterButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___shutterButton);
  if (!v2)
  {
    v3 = (void *)closure #1 in LocalParticipantControlsView.shutterButton.getter(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;

    v2 = 0;
  }
  v6 = v2;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.shutterButton.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___shutterButton);
}

uint64_t key path setter for LocalParticipantControlsView.shutterButton : LocalParticipantControlsView(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1D0))(*a1);
}

#error "1BD49AC38: call analysis failed (funcsize=138)"

void LocalParticipantControlsView.shutterButton.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  LocalParticipantControlsView.shutterButton.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.shutterButton.modify(void **a1, char a2)
{
  CallRecordingPillViewController.countdownView.modify(a1, a2, (void (*)(void))LocalParticipantControlsView.shutterButton.setter);
}

uint64_t key path setter for LocalParticipantControlsView.currentConstraints : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x1E8);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void LocalParticipantControlsView.currentConstraints.getter()
{
  LocalParticipantControlsView.currentConstraints.getter();
}

{
  OUTLINED_FUNCTION_1_7();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.currentConstraints.setter(uint64_t a1)
{
  LocalParticipantControlsView.currentConstraints.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_currentConstraints);
}

void LocalParticipantControlsView.currentConstraints.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for LocalParticipantControlsView.delegate : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x200);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

void LocalParticipantControlsView.delegate.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_26();
}

void LocalParticipantControlsView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantControlsView.delegate.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  v2 = OUTLINED_FUNCTION_80((uint64_t)v1);
  v3 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_delegate;
  *(_QWORD *)(v2 + 40) = v0;
  *(_QWORD *)(v2 + 48) = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

{
  _QWORD *v0;
  char v1;

  OUTLINED_FUNCTION_331();
  *(_QWORD *)(v0[5] + v0[6] + 8) = v0[4];
  swift_unknownObjectWeakAssign();
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_248();
  }
  else
  {
    OUTLINED_FUNCTION_248();
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_4_2(v0);
}

void sub_1BD49AF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

id LocalParticipantControlsView.controlsLayoutGuide.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide);
}

void LocalParticipantControlsView.style.didset(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_style);
  swift_beginAccess();
  if (*v3 != a1)
    LocalParticipantControlsView.updateViews()();
}

void LocalParticipantControlsView.style.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.style.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 v4;

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_style);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  LocalParticipantControlsView.style.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantControlsView.style.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_style);
  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.style.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  LocalParticipantControlsView.style.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

int8x8_t key path getter for LocalParticipantControlsView.capabilities : LocalParticipantControlsView@<D0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64x2_t v4;
  int16x8_t v5;
  int8x8_t result;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x228))();
  *(_BYTE *)a2 = v3 & 1;
  v4 = (uint64x2_t)vdupq_n_s64(v3);
  v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC60), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC50));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v5);
  *(_DWORD *)(a2 + 1) = result.i32[0];
  *(_BYTE *)(a2 + 5) = BYTE5(v3) & 1;
  *(_BYTE *)(a2 + 6) = BYTE6(v3) & 1;
  return result;
}

uint64_t key path setter for LocalParticipantControlsView.capabilities : LocalParticipantControlsView(unsigned __int8 *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = 0x1000000000000;
  if (!a1[6])
    v2 = 0;
  v3 = 0x10000000000;
  if (!a1[5])
    v3 = 0;
  v4 = 0x100000000;
  if (!a1[4])
    v4 = 0;
  v5 = 0x1000000;
  if (!a1[3])
    v5 = 0;
  v6 = 0x10000;
  if (!a1[2])
    v6 = 0;
  v7 = 256;
  if (!a1[1])
    v7 = 0;
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x230))(v7 | *a1 | v6 | v5 | v4 | v3 | v2);
}

void LocalParticipantControlsView.capabilities.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_23_78(v2);
  v3 = *(unsigned __int8 *)(v0 + 6);
  OUTLINED_FUNCTION_68_2(v0);
  v4 = 0x1000000000000;
  if (!v3)
    v4 = 0;
  OUTLINED_FUNCTION_91_16(v4);
  OUTLINED_FUNCTION_52_1();
}

void LocalParticipantControlsView.capabilities.setter(unint64_t a1)
{
  uint64_t *v1;
  _BYTE *v3;
  uint64x2_t v4;
  unsigned __int32 v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, _QWORD);
  uint64_t v8[4];

  OUTLINED_FUNCTION_39_61(*v1, v8[0]);
  *v3 = a1 & 1;
  v4 = (uint64x2_t)vdupq_n_s64(a1);
  v5 = OUTLINED_FUNCTION_325(v4, (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60).u32[0];
  *(_DWORD *)(v6 + 1) = v5;
  *(_BYTE *)(v6 + 5) = BYTE5(a1) & 1;
  *(_BYTE *)(v6 + 6) = BYTE6(a1) & 1;
  OUTLINED_FUNCTION_59_37((uint64_t)v8, v7);
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.capabilities.modify()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64x2_t v4;
  char v5;
  char v6;

  v2 = (char *)OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  *((_QWORD *)v2 + 4) = v1;
  LocalParticipantControlsView.capabilities.getter();
  v2[40] = v3 & 1;
  v2 += 40;
  v4 = (uint64x2_t)vdupq_n_s64(v3);
  *(_DWORD *)(v2 + 1) = OUTLINED_FUNCTION_325(v4, (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1BD65EC50), (uint64x2_t)xmmword_1BD65EC60).u32[0];
  v2[5] = v5 & 1;
  v2[6] = v6;
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v0;
  void *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t (*v9)(uint64_t, _QWORD);
  _BYTE *v10;

  OUTLINED_FUNCTION_93();
  v1 = *(void **)v0;
  v2 = *(_BYTE *)(*(_QWORD *)v0 + 40);
  v3 = *(_BYTE *)(*(_QWORD *)v0 + 41);
  v4 = *(_BYTE *)(*(_QWORD *)v0 + 42);
  v5 = *(_BYTE *)(*(_QWORD *)v0 + 43);
  v6 = *(_BYTE *)(*(_QWORD *)v0 + 44);
  v7 = *(_BYTE *)(*(_QWORD *)v0 + 45);
  v8 = *(_BYTE *)(*(_QWORD *)v0 + 46);
  v9 = (uint64_t (*)(uint64_t, _QWORD))OUTLINED_FUNCTION_40_57(**(_QWORD **)(*(_QWORD *)v0 + 32));
  *v10 = v2;
  v10[1] = v3;
  v10[2] = v4;
  v10[3] = v5;
  v10[4] = v6;
  v10[5] = v7;
  v10[6] = v8;
  OUTLINED_FUNCTION_59_37((uint64_t)v1, v9);
  free(v1);
}

void LocalParticipantControlsView.isInComingCall.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_23_78(v2);
  OUTLINED_FUNCTION_68_2(v0);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.isInComingCall.setter(char a1)
{
  uint64_t *v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5[4];

  v3 = (uint64_t (*)(uint64_t, _QWORD))OUTLINED_FUNCTION_39_61(*v1, v5[0]);
  *(_BYTE *)(v4 + 8) = a1;
  OUTLINED_FUNCTION_59_37((uint64_t)v5, v3);
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.isInComingCall.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v2[4] = v1;
  LocalParticipantControlsView.isInComingCall.getter();
  *((_BYTE *)v2 + 40) = v3 & 1;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.isInComingCall.modify(uint64_t a1)
{
  void *v1;
  char v2;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v3 = (uint64_t (*)(uint64_t, _QWORD))OUTLINED_FUNCTION_40_57(**(_QWORD **)(*(_QWORD *)a1 + 32));
  *(_BYTE *)(v4 + 8) = v2;
  OUTLINED_FUNCTION_59_37((uint64_t)v1, v3);
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t key path setter for LocalParticipantControlsView.viewModel : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s15ConversationKit11ParticipantVWOcTm_2(a1, (uint64_t)v6, v7);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x260))(v6);
}

void LocalParticipantControlsView.viewModel.didset(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_viewModel;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_2(v6, (uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
  v7 = static LocalParticipantControlsView.ViewModel.== infix(_:_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if ((v7 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_2(v6, (uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
    LocalParticipantControlsView.changed(_:from:)(v5, a1);
    outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
  }
}

void LocalParticipantControlsView.viewModel.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_viewModel;
  OUTLINED_FUNCTION_2_0();
  _s15ConversationKit11ParticipantVWOcTm_2(v3, a1, type metadata accessor for LocalParticipantControlsView.ViewModel);
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_viewModel;
  OUTLINED_FUNCTION_2_0();
  _s15ConversationKit11ParticipantVWOcTm_2(v5, (uint64_t)v2, type metadata accessor for LocalParticipantControlsView.ViewModel);
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of LocalParticipantControlsView.ViewModel(a1, v5);
  swift_endAccess();
  LocalParticipantControlsView.viewModel.didset(v2);
  OUTLINED_FUNCTION_94(a1);
  OUTLINED_FUNCTION_94((uint64_t)v2);
  OUTLINED_FUNCTION_91();
}

void LocalParticipantControlsView.viewModel.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  size_t v3;
  void *v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_124_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_19_75() - 8) + 64);
  *(_QWORD *)(v1 + 32) = malloc(v3);
  v4 = malloc(v3);
  *(_QWORD *)(v1 + 40) = v4;
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_viewModel;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_30_69(v5, (uint64_t)v4);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.viewModel.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_2(*(_QWORD *)(*(_QWORD *)a1 + 40), v3, type metadata accessor for LocalParticipantControlsView.ViewModel);
    LocalParticipantControlsView.viewModel.setter(v3);
    outlined destroy of AccountUpdateNotice(v4, type metadata accessor for LocalParticipantControlsView.ViewModel);
  }
  else
  {
    LocalParticipantControlsView.viewModel.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  OUTLINED_FUNCTION_110_14();
  OUTLINED_FUNCTION_595();
  OUTLINED_FUNCTION_43_57(v2);
}

void LocalParticipantControlsView.effectsSelected.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.effectsSelected.setter(char a1)
{
  LocalParticipantControlsView.effectsSelected.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsSelected, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton);
}

void LocalParticipantControlsView.effectsSelected.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.effectsSelected.modify(uint64_t a1, char a2)
{
  LocalParticipantControlsView.effectsSelected.modify(a1, a2, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsSelected);
}

void LocalParticipantControlsView.blurEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.blurEnabled.setter(char a1)
{
  LocalParticipantControlsView.effectsSelected.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_blurEnabled, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton);
}

void LocalParticipantControlsView.effectsSelected.setter(char a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  _BYTE *v7;

  v7 = (_BYTE *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  *v7 = a1;
  LocalParticipantControlsView.effectsSelected.didset(a3, a2);
}

void LocalParticipantControlsView.blurEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.blurEnabled.modify(uint64_t a1, char a2)
{
  LocalParticipantControlsView.effectsSelected.modify(a1, a2, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_blurEnabled);
}

void LocalParticipantControlsView.effectsSelected.modify(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    LocalParticipantControlsView.effectsSelected.didset(a3, a4);
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.cinematicFramingIsEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.cinematicFramingIsEnabled.setter(char a1)
{
  LocalParticipantControlsView.effectsSelected.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingIsEnabled, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton);
}

void LocalParticipantControlsView.cinematicFramingIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.cinematicFramingIsEnabled.modify(uint64_t a1, char a2)
{
  LocalParticipantControlsView.effectsSelected.modify(a1, a2, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingIsEnabled);
}

void LocalParticipantControlsView.reactionEffectGestureIsEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.reactionEffectGestureIsEnabled.setter(char a1)
{
  LocalParticipantControlsView.effectsSelected.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureIsEnabled, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton);
}

void LocalParticipantControlsView.reactionEffectGestureIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.reactionEffectGestureIsEnabled.modify(uint64_t a1, char a2)
{
  LocalParticipantControlsView.effectsSelected.modify(a1, a2, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureIsEnabled);
}

void LocalParticipantControlsView.effectsSelected.didset(_QWORD *a1, _QWORD *a2)
{
  unsigned __int8 *v2;
  void *v3;

  v3 = *(void **)&v2[*a1];
  OUTLINED_FUNCTION_111_11((uint64_t)a1, a2);
  OUTLINED_FUNCTION_2_0();
  objc_msgSend(v3, sel_setSelected_, *v2);
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.studioLightIsEnabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.studioLightIsEnabled.setter(char a1)
{
  LocalParticipantControlsView.effectsSelected.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightIsEnabled, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton);
}

void LocalParticipantControlsView.studioLightIsEnabled.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.studioLightIsEnabled.modify(uint64_t a1, char a2)
{
  LocalParticipantControlsView.effectsSelected.modify(a1, a2, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightIsEnabled);
}

void LocalParticipantControlsView.isDisabled.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_isDisabled);
  swift_beginAccess();
  if (*v3 != v2)
    LocalParticipantControlsView.updateViews()();
}

void LocalParticipantControlsView.isDisabled.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.isDisabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_isDisabled);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  LocalParticipantControlsView.isDisabled.didset(v4);
  OUTLINED_FUNCTION_9_0();
}

void LocalParticipantControlsView.isDisabled.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v2);
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_isDisabled);
  OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v1 + 32) = *v3;
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.isDisabled.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  LocalParticipantControlsView.isDisabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  OUTLINED_FUNCTION_11(v1);
}

uint64_t LocalParticipantControlsView.callAgainHUDViewIsHidden.getter()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  void *v2;
  void *v3;
  double v4;
  double v5;
  void *v6;

  v1 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168);
  v2 = (void *)v1();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_alpha);
    v5 = v4;

    if (v5 == 0.0)
      return 1;
  }
  v6 = (void *)v1();
  if (!v6)
    return 1;

  return 0;
}

BOOL LocalParticipantControlsView.isInSendingCallState.getter()
{
  uint64_t v0;
  double v1;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton), sel_alpha);
  return v1 == 0.0;
}

void LocalParticipantControlsView.needsVideoMessageControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unsigned __int8 v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_74_10();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - v4;
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_122_7();
  v8 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v7) + 0x258);
  v8();
  v9 = *(_BYTE *)(v1 + 7);
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (VideoMessageController.State.rawValue.getter(v9) == 0x676E696D726177 && v10 == 0xE700000000000000)
    goto LABEL_16;
  v12 = OUTLINED_FUNCTION_13();
  v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    ((void (*)(uint64_t))v8)(v13);
    v14 = v5[7];
    outlined destroy of AccountUpdateNotice((uint64_t)v5, type metadata accessor for LocalParticipantControlsView.ViewModel);
    if (VideoMessageController.State.rawValue.getter(v14) == 0x7964616572 && v15 == 0xE500000000000000)
      goto LABEL_16;
    OUTLINED_FUNCTION_13();
    v17 = OUTLINED_FUNCTION_1_122();
    if ((v14 & 1) == 0)
    {
      ((void (*)(uint64_t))v8)(v17);
      outlined destroy of AccountUpdateNotice(v0, type metadata accessor for LocalParticipantControlsView.ViewModel);
      if (OUTLINED_FUNCTION_64_24() != 0x6552657669746361 || v18 != 0xEF676E6964726F63)
      {
        OUTLINED_FUNCTION_10_2();
        OUTLINED_FUNCTION_27();
        goto LABEL_17;
      }
LABEL_16:
      swift_bridgeObjectRelease();
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_65_1();
}

void LocalParticipantControlsView.shouldNotHaveVideoMessageControls.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__n128);
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_74_10();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t)&v14 - v5;
  v7 = *(void (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x258);
  v7(v4);
  v8 = *(_BYTE *)(v6 + 7);
  OUTLINED_FUNCTION_94(v6);
  if (VideoMessageController.State.rawValue.getter(v8) == 1953391987 && v9 == 0xE400000000000000)
    goto LABEL_11;
  OUTLINED_FUNCTION_13();
  v11 = OUTLINED_FUNCTION_1_122();
  if ((v6 & 1) == 0)
  {
    ((void (*)(uint64_t))v7)(v11);
    outlined destroy of AccountUpdateNotice(v0, type metadata accessor for LocalParticipantControlsView.ViewModel);
    if (OUTLINED_FUNCTION_64_24() != 0x7964616552746F6ELL || v12 != 0xE800000000000000)
    {
      OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_7_15();
      goto LABEL_12;
    }
LABEL_11:
    swift_bridgeObjectRelease();
  }
LABEL_12:
  OUTLINED_FUNCTION_65_1();
}

void LocalParticipantControlsView.shouldShowAllEffectsControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_23_78(v2);
  v3 = *(unsigned __int8 *)(v0 + 7);
  OUTLINED_FUNCTION_68_2(v0);
  if (v3 <= 1)
  {
    OUTLINED_FUNCTION_23_7();
    if (((*(uint64_t (**)(void))(v4 + 768))() & 1) == 0)
    {
      OUTLINED_FUNCTION_23_7();
      (*(void (**)(void))(v5 + 776))();
    }
  }
  OUTLINED_FUNCTION_91();
}

void LocalParticipantControlsView.shouldShowOnlyCameraFlipPreRecording.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_23_78(v2);
  OUTLINED_FUNCTION_68_2(v0);
  if (OUTLINED_FUNCTION_64_24() == 0x7964616572 && v3 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_7_15();
  }
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.shouldHideCameraFlipDuringRecording.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_23_78(v2);
  OUTLINED_FUNCTION_68_2(v0);
  if (OUTLINED_FUNCTION_64_24() == 0x6552657669746361 && v3 == 0xEF676E6964726F63)
  {
    OUTLINED_FUNCTION_60_31();
  }
  else
  {
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_7_15();
  }
  OUTLINED_FUNCTION_91();
}

uint64_t key path getter for LocalParticipantControlsView.videoMessagingState : LocalParticipantControlsView@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x338))();
  *a2 = result;
  return result;
}

uint64_t key path setter for LocalParticipantControlsView.videoMessagingState : LocalParticipantControlsView(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x340))(*a1);
}

uint64_t LocalParticipantControlsView.videoMessagingState.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t LocalParticipantControlsView.videoMessagingState.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void LocalParticipantControlsView.videoMessagingState.modify()
{
  _QWORD *v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  v0[4] = swift_getKeyPath();
  v0[5] = swift_getKeyPath();
  v0[6] = static Published.subscript.modify();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.videoMessagingState.modify(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  OUTLINED_FUNCTION_59_37(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 48));
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_4_2(v1);
}

uint64_t key path setter for LocalParticipantControlsView.$videoMessagingState : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x358))(v7);
}

void LocalParticipantControlsView.$videoMessagingState.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.$videoMessagingState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, a1, v1);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_101(a1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_91();
}

void LocalParticipantControlsView.$videoMessagingState.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;

  v1 = malloc(0x40uLL);
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v0[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[5] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v0[6] = malloc(v4);
  v0[7] = malloc(v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.$videoMessagingState.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v6 = v2[5];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 48), v4, v5);
    LocalParticipantControlsView.$videoMessagingState.setter(v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    LocalParticipantControlsView.$videoMessagingState.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  OUTLINED_FUNCTION_110_14();
  OUTLINED_FUNCTION_595();
  OUTLINED_FUNCTION_43_57(v2);
}

uint64_t key path setter for LocalParticipantControlsView.subscriptions : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x370);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void LocalParticipantControlsView.subscriptions.getter()
{
  LocalParticipantControlsView.currentConstraints.getter();
}

void LocalParticipantControlsView.subscriptions.setter(uint64_t a1)
{
  LocalParticipantControlsView.currentConstraints.setter(a1, &OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_subscriptions);
}

void LocalParticipantControlsView.currentConstraints.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_111_11(a1, a2);
  OUTLINED_FUNCTION_2_0();
  *v2 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.subscriptions.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for LocalParticipantControlsView.timerSink : LocalParticipantControlsView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x388);
  v3 = swift_retain();
  return v2(v3);
}

void LocalParticipantControlsView.timerSink.getter()
{
  OUTLINED_FUNCTION_1_7();
  swift_retain();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.timerSink.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_timerSink);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  swift_release();
  OUTLINED_FUNCTION_32();
}

void LocalParticipantControlsView.timerSink.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  ObjectType = swift_getObjectType();
  v4 = v0 + *(int *)(v1 + 28);
  v5 = type metadata accessor for ConversationControlsRecipe();
  OUTLINED_FUNCTION_77_0(v4, v6, v7, v5);
  *(_DWORD *)(v0 + 3) = 0;
  *(_DWORD *)v0 = 0;
  *(_WORD *)(v0 + 7) = 257;
  (*(void (**)(uint64_t))(ObjectType + 920))(v0);
  swift_deallocPartialClassInstance();
  OUTLINED_FUNCTION_18();
}

void LocalParticipantControlsView.__allocating_init(viewModel:)()
{
  OUTLINED_FUNCTION_16_1();
  LocalParticipantControlsView.init(viewModel:)();
  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.init(viewModel:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  objc_super v19;
  char v20;

  OUTLINED_FUNCTION_93();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v6 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton;
  v7 = v0;
  *(_QWORD *)&v0[v6] = OUTLINED_FUNCTION_29_68();
  v8 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton;
  *(_QWORD *)&v7[v8] = OUTLINED_FUNCTION_90_16();
  v9 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton;
  *(_QWORD *)&v7[v9] = closure #1 in variable initialization expression of LocalParticipantControlsView.effectsButton();
  v10 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton;
  *(_QWORD *)&v7[v10] = OUTLINED_FUNCTION_28_65();
  v11 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_rotateButton;
  *(_QWORD *)&v7[v11] = closure #1 in variable initialization expression of LocalParticipantControlsView.rotateButton();
  v12 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton;
  *(_QWORD *)&v7[v12] = OUTLINED_FUNCTION_51_46();
  v13 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton;
  *(_QWORD *)&v7[v13] = OUTLINED_FUNCTION_84_16();
  v14 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton;
  *(_QWORD *)&v7[v14] = closure #1 in variable initialization expression of LocalParticipantControlsView.collapseButton();
  v15 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton;
  *(_QWORD *)&v7[v15] = closure #1 in variable initialization expression of LocalParticipantControlsView.videoPauseButton();
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoMessageControls] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___videoMessageViewModel] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___spinnerView] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_hasInitializedShutterButton] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___shutterButton] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_currentConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_delegate + 8] = 0;
  OUTLINED_FUNCTION_54();
  v16 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide;
  *(_QWORD *)&v7[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_style] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsSelected] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_blurEnabled] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingIsEnabled] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureIsEnabled] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightIsEnabled] = 0;
  v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_isDisabled] = 0;
  v17 = &v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView__videoMessagingState];
  v20 = 1;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v17, v1, v4);
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_subscriptions] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_timerSink] = 0;
  _s15ConversationKit11ParticipantVWOcTm_2(v3, (uint64_t)&v7[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_viewModel], type metadata accessor for LocalParticipantControlsView.ViewModel);

  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for LocalParticipantControlsView(0);
  v18 = objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  LocalParticipantControlsView.commonInit()();

  OUTLINED_FUNCTION_94(v3);
  OUTLINED_FUNCTION_52_1();
}

void LocalParticipantControlsView.__allocating_init(coder:)()
{
  void *v0;

  objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  OUTLINED_FUNCTION_0();
}

void LocalParticipantControlsView.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<VideoMessageController.State>);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v4 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton;
  *(_QWORD *)&v0[v4] = OUTLINED_FUNCTION_29_68();
  v5 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton;
  *(_QWORD *)&v0[v5] = OUTLINED_FUNCTION_90_16();
  v6 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingButton;
  *(_QWORD *)&v0[v6] = closure #1 in variable initialization expression of LocalParticipantControlsView.effectsButton();
  v7 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton;
  *(_QWORD *)&v0[v7] = OUTLINED_FUNCTION_28_65();
  v8 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_rotateButton;
  *(_QWORD *)&v0[v8] = closure #1 in variable initialization expression of LocalParticipantControlsView.rotateButton();
  v9 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraFlipButton;
  *(_QWORD *)&v0[v9] = OUTLINED_FUNCTION_51_46();
  v10 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureButton;
  *(_QWORD *)&v0[v10] = OUTLINED_FUNCTION_84_16();
  v11 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightButton;
  *(_QWORD *)&v0[v11] = closure #1 in variable initialization expression of LocalParticipantControlsView.collapseButton();
  v12 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoPauseButton;
  *(_QWORD *)&v0[v12] = closure #1 in variable initialization expression of LocalParticipantControlsView.videoPauseButton();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_videoMessageControls] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___videoMessageViewModel] = 0;
  OUTLINED_FUNCTION_54();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___spinnerView] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_hasInitializedShutterButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView____lazy_storage___shutterButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_currentConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_delegate + 8] = 0;
  OUTLINED_FUNCTION_54();
  v13 = OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_controlsLayoutGuide;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC39A0]), sel_init);
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_style] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsSelected] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_blurEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cinematicFramingIsEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_reactionEffectGestureIsEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_studioLightIsEnabled] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_isDisabled] = 0;
  v14 = &v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView__videoMessagingState];
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v14, v1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_subscriptions] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_timerSink] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void LocalParticipantControlsView.commonInit()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _QWORD);
  _BYTE v9[32];

  OUTLINED_FUNCTION_93();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77_1();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_59_35();
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v7) + 0x350))();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Published<VideoMessageController.State>.Publisher and conformance Published<A>.Publisher, (uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  lazy protocol witness table accessor for type VideoMessageController.State and conformance VideoMessageController.State();
  Publisher<>.removeDuplicates()();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_251();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(lazy protocol witness table cache variable for type Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher> and conformance Publishers.RemoveDuplicates<A>, &demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>);
  OUTLINED_FUNCTION_35_30();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v8 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))(v9);
  AnyCancellable.store(in:)();
  swift_release();
  v8(v9, 0);
  OUTLINED_FUNCTION_52_1();
}

void closure #1 in LocalParticipantControlsView.commonInit()(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void (*v6)(_BYTE *, _QWORD);
  uint64_t v7;
  _BYTE v8[32];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = v4;
    v6 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v4)
                                                                                  + 0x268))(v8);
    *(_BYTE *)(v7 + 7) = v2;
    v6(v8, 0);

  }
}

void LocalParticipantControlsView.buttons(for:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_collapseButton);
  OUTLINED_FUNCTION_16_89();
}

Swift::Void __swiftcall LocalParticipantControlsView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LocalParticipantControlsView(0);
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  LocalParticipantControlsView.layoutViews()();
}

Swift::Void __swiftcall LocalParticipantControlsView.updateButtonUserInteraction(for:shouldHaveUserInteraction:)(UIControl *a1, Swift::Bool shouldHaveUserInteraction)
{
  _BOOL8 v3;
  double v4;

  v3 = shouldHaveUserInteraction;
  v4 = 0.0;
  if (shouldHaveUserInteraction)
    v4 = 1.0;
  UIControl._cnkContentAlpha.setter(v4);
  -[UIControl setUserInteractionEnabled:](a1, sel_setUserInteractionEnabled_, v3);
}

void UIControl._cnkContentAlpha.setter(double a1)
{
  void *v1;
  _QWORD *v3;
  void (*v4)(double);
  id v5;

  type metadata accessor for InCallControlButton();
  v3 = (_QWORD *)OUTLINED_FUNCTION_125_9();
  if (v3)
  {
    v4 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1A0);
    v5 = v1;
    v4(a1);

  }
  else
  {
    objc_msgSend(v1, sel_setAlpha_, a1);
  }
}

Swift::Void __swiftcall LocalParticipantControlsView.handleEffectsTapped()()
{
  type metadata accessor for SpringBoardUtilities();
  OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  specialized static SpringBoardUtilities.requestPasscodeUnlock(_:)();
}

void closure #1 in LocalParticipantControlsView.handleEffectsTapped()(char a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_2_0();
    v3 = (_QWORD *)MEMORY[0x1C3B752C0](v2);
    if (v3)
    {
      v4 = v3;
      v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1F8))();

      if (v5)
      {
        OUTLINED_FUNCTION_15_6();
        OUTLINED_FUNCTION_128_8();
        OUTLINED_FUNCTION_533(7, v6, v7);
        OUTLINED_FUNCTION_10();
      }
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_2_0();
    v9 = MEMORY[0x1C3B752C0](v2);
    if (v9)
    {
      v10 = (void *)v9;
      *(id *)(v9 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_effectsButton);

      OUTLINED_FUNCTION_59(v11, &lazy cache variable for type metadata for UIControl);
      v12 = String.init<A>(reflecting:)();
      v14 = v13;
    }
    else
    {
      v14 = 0xE300000000000000;
      v12 = 7104878;
    }
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v8 + 32) = v12;
    *(_QWORD *)(v8 + 40) = v14;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_27();
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleCinematicFramingTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleCameraBlurTapped()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton), sel_setSelected_, objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit28LocalParticipantControlsView_cameraBlurButton), sel_isSelected) ^ 1);
  if (OUTLINED_FUNCTION_38_57(*v0))
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_533(8, v1, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_0();
  }
}

Swift::Void __swiftcall LocalParticipantControlsView.handleCollapseButtonTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleRotateButtonTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleCameraFlipTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleReactionEffectGestureTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleStudioLightTapped()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

Swift::Void __swiftcall LocalParticipantControlsView.handleVideoMessageButtonTapped()()
{
  LocalParticipantControlsView.handleVideoMessageButtonTapped()("Start video message button tapped");
}

Swift::Void __swiftcall LocalParticipantControlsView.showCallDetails()()
{
  LocalParticipantControlsView.handleCinematicFramingTapped()();
}

void LocalParticipantControlsView.handleCinematicFramingTapped()()
{
  uint64_t *v0;
  uint64_t ObjectType;

  if (OUTLINED_FUNCTION_38_57(*v0))
  {
    ObjectType = swift_getObjectType();
    OUTLINED_FUNCTION_72_26(ObjectType);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_18();
  }
}

Swift::Void __swiftcall LocalParticipantControlsView.callBack()()
{
  LocalParticipantControlsView.handleVideoMessageButtonTapped()("Callback button tapped");
}

Swift::Void __swiftcall LocalParticipantControlsView.close()()
{
  LocalParticipantControlsView.handleVideoMessageButtonTapped()("Close button tapped");
}

void LocalParticipantControlsView.handleVideoMessageButtonTapped()(const char *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  v3 = v1;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.videoMessaging);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1BD004000, v5, v6, a1, v7, 2u);
    OUTLINED_FUNCTION_60();
  }

  if ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x1F8))())
  {
    v8 = OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_72_26(v8);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

Swift::Void __swiftcall LocalParticipantControlsView.handleShutterButtonTapped()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v2 = v0;
  OUTLINED_FUNCTION_19_75();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.videoMessaging);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1BD004000, v5, v6, "Shutter for video message button tapped", v7, 2u);
    OUTLINED_FUNCTION_60();
  }

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x258))();
  outlined destroy of AccountUpdateNotice(v1, type metadata accessor for LocalParticipantControlsView.ViewModel);
  if (OUTLINED_FUNCTION_64_24() == 0x6552657669746361 && v8 == 0xEF676E6964726F63)
  {
    OUTLINED_FUNCTION_60_31();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_27();
    if ((v10 & 1) == 0)
    {
      if (OUTLINED_FUNCTION_53_44())
      {
        OUTLINED_FUNCTION_15_6();
        OUTLINED_FUNCTION_128_8();
        v13 = 0;
LABEL_15:
        OUTLINED_FUNCTION_533(v13, v11, v12);
        OUTLINED_FUNCTION_10();
        goto LABEL_16;
      }
      goto LABEL_16;
    }
  }
  if (OUTLINED_FUNCTION_53_44())
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_128_8();
    v13 = 3;
    goto LABEL_15;
  }
LABEL_16:
  OUTLINED_FUNCTION_91();
}

void __swiftcall LocalParticipantControlsView.hitTest(_:with:)(UIView_optional *__return_ptr retstr, CGPoint _, UIEvent_optional with)
{
  void *v3;
  Class isa;
  double y;
  double x;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  objc_super v12;

  isa = with.value.super.isa;
  y = _.y;
  x = _.x;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for LocalParticipantControlsView(0);
  v7 = -[UIView_optional hitTest:withEvent:](&v12, sel_hitTest_withEvent_, isa, x, y);
  v8 = v7;
  if (v7)
  {
    OUTLINED_FUNCTION_59((uint64_t)v7, (unint64_t *)&lazy cache variable for type metadata for UIView);
    v9 = v3;
    v10 = v8;
    v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) != 0)
  }
}

id LocalParticipantControlsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void LocalParticipantControlsView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id LocalParticipantControlsView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocalParticipantControlsView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall LocalParticipantControlsView.addVideoMessageControls()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  double Height;
  double v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  Class isa;
  uint64_t v69;
  void (*v70)(void *);
  id v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v72 - v7);
  v9 = (int *)type metadata accessor for VideoMessageControlsView(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v72 - v14;
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_122_7();
  if (!OUTLINED_FUNCTION_38_57(v17))
    goto LABEL_16;
  v19 = v18;
  ObjectType = swift_getObjectType();
  v72 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(ObjectType, v19);
  OUTLINED_FUNCTION_10();
  if (!v72)
    goto LABEL_16;
  OUTLINED_FUNCTION_17_24();
  v22 = (void *)OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v21 + 312));

  if (v22)
  {
    OUTLINED_FUNCTION_119_6();

    return;
  }
  OUTLINED_FUNCTION_17_24();
  OUTLINED_FUNCTION_54_0(*(uint64_t (**)(void))(v24 + 336));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  OUTLINED_FUNCTION_99_11();
  *v5 = swift_getKeyPath();
  OUTLINED_FUNCTION_99_11();
  *(_QWORD *)v1 = swift_getKeyPath();
  *(_BYTE *)(v1 + 8) = 0;
  outlined init with take of Participant.VideoInfo?((uint64_t)v8, v1 + v9[5], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  outlined init with take of Participant.VideoInfo?((uint64_t)v5, v1 + v9[6], &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
  v25 = (uint64_t *)(v1 + v9[7]);
  type metadata accessor for VideoMessagePlayerViewModel(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type VideoMessagePlayerViewModel and conformance VideoMessagePlayerViewModel, (void (*)(uint64_t))type metadata accessor for VideoMessagePlayerViewModel);
  *v25 = ObservedObject.init(wrappedValue:)();
  v25[1] = v26;
  v27 = v1 + v9[8];
  v73 = 0;
  State.init(wrappedValue:)();
  v28 = v75;
  *(_BYTE *)v27 = v74;
  *(_QWORD *)(v27 + 8) = v28;
  *(_QWORD *)(v1 + v9[9]) = 0;
  *(_QWORD *)(v1 + v9[10]) = 0x3FC51EB851EB851FLL;
  *(_QWORD *)(v1 + v9[11]) = 0x4077C00000000000;
  OUTLINED_FUNCTION_76_21(v1, (uint64_t)v15);
  v29 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LockScreenHostingController<VideoMessageControlsView>));
  OUTLINED_FUNCTION_76_21((uint64_t)v15, (uint64_t)v12);
  v30 = (void *)UIHostingController.init(rootView:)();
  OUTLINED_FUNCTION_60_20((uint64_t)v15);
  OUTLINED_FUNCTION_60_20(v1);
  v31 = OUTLINED_FUNCTION_4_16();
  if (!v31)
  {
    __break(1u);
    goto LABEL_18;
  }
  v32 = v31;
  objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v33 = OUTLINED_FUNCTION_4_16();
  if (!v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v34 = v33;
  v35 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v34, sel_setBackgroundColor_, v35);

  v36 = OUTLINED_FUNCTION_4_16();
  if (!v36)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v37 = v36;
  objc_msgSend(v2, sel_insertSubview_atIndex_, v36, 0);

  objc_msgSend(v72, sel_addChildViewController_, v30);
  v38 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v30, sel_didMoveToParentViewController_, v72), sel_superview);
  if (v38)
  {
    v39 = v38;
    objc_msgSend(v38, sel_bounds);
    OUTLINED_FUNCTION_37_5();

  }
  else
  {
    objc_msgSend(v2, sel_bounds);
    OUTLINED_FUNCTION_37_5();
  }
  v76.origin.x = OUTLINED_FUNCTION_8_18();
  Height = CGRectGetHeight(v76);
  objc_msgSend(v2, sel_bounds);
  v77.origin.x = OUTLINED_FUNCTION_8_18();
  v78 = CGRectIntersection(v77, v79);
  v41 = CGRectGetHeight(v78);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v42 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v42 + 16) = xmmword_1BD644140;
  v43 = OUTLINED_FUNCTION_4_16();
  if (!v43)
    goto LABEL_20;
  v44 = v43;
  v45 = objc_msgSend(v43, sel_leadingAnchor);

  v47 = OUTLINED_FUNCTION_123(v46, sel_safeAreaLayoutGuide);
  v48 = objc_msgSend(v47, sel_leadingAnchor);
  OUTLINED_FUNCTION_14();
  v49 = objc_msgSend(v45, sel_constraintEqualToAnchor_, &selRef_associatedAppBundleIdentifier);
  OUTLINED_FUNCTION_18_11();

  *(_QWORD *)(v42 + 32) = v47;
  v50 = OUTLINED_FUNCTION_4_16();
  if (!v50)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v51 = objc_msgSend(v50, sel_trailingAnchor);
  OUTLINED_FUNCTION_18_11();
  v53 = OUTLINED_FUNCTION_123(v52, sel_safeAreaLayoutGuide);
  v54 = objc_msgSend(v53, sel_trailingAnchor);

  v55 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v54);
  *(_QWORD *)(v42 + 40) = v55;
  v56 = OUTLINED_FUNCTION_4_16();
  if (!v56)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v57 = objc_msgSend(v56, sel_topAnchor);
  OUTLINED_FUNCTION_18_11();
  v59 = OUTLINED_FUNCTION_123(v58, sel_topAnchor);
  v60 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v59);
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v42 + 48) = &selRef_associatedAppBundleIdentifier;
  v61 = OUTLINED_FUNCTION_4_16();
  if (v61)
  {
    v62 = v61;
    v63 = (void *)objc_opt_self();
    v64 = objc_msgSend(v62, sel_bottomAnchor);

    v66 = OUTLINED_FUNCTION_123(v65, sel_bottomAnchor);
    v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v66, Height - v41);

    *(_QWORD *)(v42 + 56) = v67;
    v74 = v42;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = OUTLINED_FUNCTION_4_10().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v63, sel_activateConstraints_, isa);

    OUTLINED_FUNCTION_17_24();
    v70 = *(void (**)(void *))(v69 + 320);
    v71 = v30;
    v70(v30);

LABEL_16:
    OUTLINED_FUNCTION_119_6();
    return;
  }
LABEL_23:
  __break(1u);
}

Swift::Void __swiftcall LocalParticipantControlsView.removeVideoMessageControls()()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138);
  v2 = (void *)v1();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_willMoveToParentViewController_, 0);

  }
  v4 = (void *)v1();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_view);

    if (!v6)
    {
      __break(1u);
      return;
    }
    objc_msgSend(v6, sel_removeFromSuperview);

  }
  v7 = (void *)v1();
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_removeFromParentViewController);

  }
  OUTLINED_FUNCTION_23_7();
  (*(void (**)(_QWORD))(v9 + 320))(0);
  OUTLINED_FUNCTION_23_7();
  (*(void (**)(_QWORD))(v10 + 904))(0);
}

Swift::Void __swiftcall LocalParticipantControlsView.startElapsedTimeCounter()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_93();
  v4 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_77_1();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.Autoconnect<NSTimer.TimerPublisher>, Int>);
  OUTLINED_FUNCTION_5_53();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_59_35();
  v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v9 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v8) + 0x150);
  v10 = (_QWORD *)v9();
  v11 = static String.localizedStringWithFormat(_:_:)();
  (*(void (**)(uint64_t))((*v7 & *v10) + 0x158))(v11);

  v12 = (_QWORD *)v9();
  (*(void (**)(uint64_t))((*v7 & *v12) + 0xF8))(2);

  v13 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v13 + 16) = 0;
  OUTLINED_FUNCTION_59(v13, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  v14 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
  v15 = type metadata accessor for NSRunLoop.SchedulerOptions();
  OUTLINED_FUNCTION_77_0(v3, v16, v17, v15);
  static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, (uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher, (void (*)(uint64_t))MEMORY[0x1E0CB20A0]);
  ConnectablePublisher.autoconnect()();
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  Publisher.map<A>(_:)();
  OUTLINED_FUNCTION_27_0();
  swift_release();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_251();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Publishers.Map<Publishers.Autoconnect<NSTimer.TimerPublisher>, Int> and conformance Publishers.Map<A, B>, &demangling cache variable for type metadata for Publishers.Map<Publishers.Autoconnect<NSTimer.TimerPublisher>, Int>);
  v18 = OUTLINED_FUNCTION_35_30();
  swift_release();
  OUTLINED_FUNCTION_101(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x388))(v18);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_52_1();
}

uint64_t closure #1 in LocalParticipantControlsView.startElapsedTimeCounter()@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v4 = (_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *v4 = v8;
    *a2 = v8;
  }
  return result;
}

void closure #2 in LocalParticipantControlsView.startElapsedTimeCounter()(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(void);
  _QWORD *v8;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x1C3B752C0](v3);
  if (!v4)
    return;
  v5 = v4;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x150);
  v8 = (_QWORD *)v7();
  if (v2 < 1)
    goto LABEL_6;
  v9 = (double)v2;
  if (one-time initialization token for timeFormatter != -1)
    goto LABEL_18;
  while (1)
  {
    v10 = objc_msgSend((id)static NSDateComponentsFormatter.timeFormatter, sel_stringFromTimeInterval_, v9);
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v14 = v13;

    }
    else
    {
LABEL_6:
      v12 = static String.localizedStringWithFormat(_:_:)();
      v14 = v15;
    }
    (*(void (**)(uint64_t, uint64_t))((*v6 & *v8) + 0x158))(v12, v14);

    v8 = (_QWORD *)v7();
    v16 = *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC15ConversationKit27VideoMessagePlayerViewModel_shutterModel);
    swift_retain();

    v9 = *(double *)(v16 + 16);
    swift_release();
    if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (v9 <= -9.22337204e18)
      goto LABEL_16;
    if (v9 < 9.22337204e18)
      break;
LABEL_17:
    __break(1u);
LABEL_18:
    swift_once();
  }
  if (v2 >= (uint64_t)v9
    && (v17 = (*(uint64_t (**)(_QWORD))((*v6 & *v5) + 0x388))(0),
        (*(uint64_t (**)(uint64_t))((*v6 & *v5) + 0x1F8))(v17)))
  {
    v19 = v18;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(3, ObjectType, v19);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

Swift::Void __swiftcall LocalParticipantControlsView.showLoading()()
{
  _QWORD *v0;
  void *v1;
  uint64_t (*v2)(void);
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  Class isa;

  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198);
  v3 = (void *)v2();
  v4 = objc_msgSend(v3, sel_superview);

  if (!v4)
  {
    v5 = (void *)v2();
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    v6 = (void *)v2();
    objc_msgSend(v0, sel_addSubview_, v6);

    v7 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v8 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v8 + 16) = xmmword_1BD6441C0;
    v9 = objc_msgSend((id)v2(), sel_centerYAnchor);
    OUTLINED_FUNCTION_14();
    v10 = objc_msgSend(v0, sel_centerYAnchor);
    v11 = objc_msgSend(v1, sel_constraintEqualToAnchor_, v10);

    *(_QWORD *)(v8 + 32) = v11;
    v12 = objc_msgSend((id)v2(), sel_centerXAnchor);
    OUTLINED_FUNCTION_14();
    v13 = objc_msgSend(v0, sel_centerXAnchor);
    v14 = objc_msgSend(v1, sel_constraintEqualToAnchor_, v13);

    *(_QWORD *)(v8 + 40) = v14;
    OUTLINED_FUNCTION_26_0();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = OUTLINED_FUNCTION_4_10().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v7, sel_activateConstraints_, isa);

  }
}

Swift::Void __swiftcall LocalParticipantControlsView.hideLoading()()
{
  uint64_t *v0;
  id v1;

  v1 = (id)OUTLINED_FUNCTION_98_14(*v0);
  objc_msgSend(v1, sel_removeFromSuperview);

}

void UIControl._cnkContentAlpha.getter()
{
  void *v0;
  _QWORD *v1;
  void (*v2)(void);
  id v3;

  type metadata accessor for InCallControlButton();
  v1 = (_QWORD *)OUTLINED_FUNCTION_125_9();
  if (v1)
  {
    v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x198);
    v3 = v0;
    v2();

  }
  else
  {
    objc_msgSend(v0, sel_alpha);
  }
}

void UIControl._cnkContentAlpha.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  UIControl._cnkContentAlpha.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void UIControl._cnkContentAlpha.modify(double *a1)
{
  UIControl._cnkContentAlpha.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for LocalParticipantControlsView.ViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for LocalParticipantControlsView.ViewModel);
}

uint64_t outlined assign with take of ConversationControlsRecipe?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with copy of ConversationControlsRecipe?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with copy of LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocalParticipantControlsView.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1BD49F4A8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x338))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F4DC(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x340))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for LocalParticipantControlsView(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for LocalParticipantControlsView);
}

uint64_t sub_1BD49F528()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BD49F564()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in LocalParticipantControlsView.startElapsedTimeCounter()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in LocalParticipantControlsView.startElapsedTimeCounter()(v1, a1);
}

void partial apply for closure #2 in LocalParticipantControlsView.startElapsedTimeCounter()(uint64_t *a1)
{
  uint64_t v1;

  closure #2 in LocalParticipantControlsView.startElapsedTimeCounter()(a1, v1);
}

unint64_t lazy protocol witness table accessor for type LocalParticipantControlsView.Style and conformance LocalParticipantControlsView.Style()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantControlsView.Style and conformance LocalParticipantControlsView.Style;
  if (!lazy protocol witness table cache variable for type LocalParticipantControlsView.Style and conformance LocalParticipantControlsView.Style)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantControlsView.Style, &type metadata for LocalParticipantControlsView.Style);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantControlsView.Style and conformance LocalParticipantControlsView.Style);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LocalParticipantControlsView.Capabilities and conformance LocalParticipantControlsView.Capabilities()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type LocalParticipantControlsView.Capabilities and conformance LocalParticipantControlsView.Capabilities;
  if (!lazy protocol witness table cache variable for type LocalParticipantControlsView.Capabilities and conformance LocalParticipantControlsView.Capabilities)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for LocalParticipantControlsView.Capabilities, &type metadata for LocalParticipantControlsView.Capabilities);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LocalParticipantControlsView.Capabilities and conformance LocalParticipantControlsView.Capabilities);
  }
  return result;
}

void sub_1BD49F604()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x138))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F63C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x150))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F674()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x168))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F6AC(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x180))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F6E4()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_98_14(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F714()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x1B0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F748(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x1B8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F778()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x1C8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F7B0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x1E0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F7E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_38_57(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F818()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x210))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F84C(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x218))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F88C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x240))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F8C0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x248))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F8F0(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x258))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F928()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x270))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F95C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x278))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F98C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x288))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F9C0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x290))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49F9F0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2A0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FA24(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x2A8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FA54()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2B8))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FA88(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x2C0))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FAB8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2D0))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FAEC(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x2D8))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FB1C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x2E8))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FB50(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v2) + 0x2F0))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FB80(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x350))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FBB8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x368))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FBF0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x380))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FC28(_QWORD *a1@<X8>)
{
  uint64_t v2;

  UIControl._cnkContentAlpha.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD49FC4C(double *a1)
{
  UIControl._cnkContentAlpha.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of LocalParticipantControlsViewDelegate.didTap(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LocalParticipantControlsViewProtocol.layoutViews()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalParticipantControlsViewProtocol.updateControlsAlpha(animated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of LocalParticipantControlsViewProtocol.changed(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t ObjC metadata update function for LocalParticipantControlsView()
{
  return type metadata accessor for LocalParticipantControlsView(0);
}

void type metadata completion function for LocalParticipantControlsView()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for LocalParticipantControlsView.ViewModel(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<VideoMessageController.State>();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for LocalParticipantControlsView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageControls.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageControls.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageControls.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageViewModel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageViewModel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessageViewModel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callAgainHUDView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callAgainHUDView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callAgainHUDView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hudRecipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hudRecipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hudRecipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.spinnerView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.hasInitializedShutterButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shutterButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.currentConstraints.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.style.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

unint64_t dispatch thunk of LocalParticipantControlsView.capabilities.getter()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
  return v1 & 1 | ((unint64_t)(BYTE1(v1) & 1) << 8) | ((unint64_t)(BYTE2(v1) & 1) << 16) | ((unint64_t)(BYTE3(v1) & 1) << 24) | ((unint64_t)(BYTE4(v1) & 1) << 32) | ((unint64_t)(BYTE5(v1) & 1) << 40) | ((unint64_t)(BYTE6(v1) & 1) << 48);
}

uint64_t dispatch thunk of LocalParticipantControlsView.capabilities.setter(uint64_t a1)
{
  _QWORD *v1;

  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x230))(a1 & 0x1010101010101);
}

uint64_t dispatch thunk of LocalParticipantControlsView.capabilities.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInComingCall.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.viewModel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.effectsSelected.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.blurEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.cinematicFramingIsEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.reactionEffectGestureIsEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.studioLightIsEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isDisabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callAgainHUDViewIsHidden.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.isInSendingCallState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.needsVideoMessageControls.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x310))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldNotHaveVideoMessageControls.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x318))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldShowAllEffectsControls.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x320))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldShowOnlyCameraFlipPreRecording.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x328))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.shouldHideCameraFlipDuringRecording.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x330))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x338))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x340))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.videoMessagingState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x348))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x350))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.$videoMessagingState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x370))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.subscriptions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x378))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x380))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.timerSink.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.__allocating_init(viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 920))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.buttons(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.updateButtonUserInteraction(for:shouldHaveUserInteraction:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleEffectsTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCinematicFramingTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCameraBlurTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3C8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCollapseButtonTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleRotateButtonTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleCameraFlipTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleReactionEffectGestureTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleStudioLightTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleVideoMessageButtonTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x3F8))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.showCallDetails()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x400))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.callBack()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x408))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.close()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of LocalParticipantControlsView.handleShutterButtonTapped()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x418))();
}

uint64_t storeEnumTagSinglePayload for LocalParticipantControlsView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD4A088C + 4 * byte_1BD662DD3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD4A08C0 + 4 * byte_1BD662DCE[v4]))();
}

uint64_t sub_1BD4A08C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4A08C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD4A08D0);
  return result;
}

uint64_t sub_1BD4A08DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD4A08E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD4A08E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4A08F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalParticipantControlsView.Style()
{
  return &type metadata for LocalParticipantControlsView.Style;
}

_QWORD *initializeBufferWithCopyOfBuffer for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_DWORD *)(a1 + 3) = *(_DWORD *)((char *)a2 + 3);
    *(_WORD *)(a1 + 7) = *(_WORD *)((char *)a2 + 7);
    v5 = *(int *)(a3 + 28);
    v6 = (_QWORD *)(a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = (int *)type metadata accessor for ConversationControlsRecipe();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(*((_BYTE *)v7 + 40))
      {
        case 0:
          v11 = *(_OWORD *)(v7 + 3);
          *(_OWORD *)(v6 + 3) = v11;
          (**(void (***)(_QWORD *, _QWORD *))(v11 - 8))(v6, v7);
          *((_BYTE *)v6 + 40) = 0;
          break;
        case 1:
          v12 = v7[1];
          *v6 = *v7;
          v6[1] = v12;
          v13 = 1;
          goto LABEL_10;
        case 2:
          v14 = (void *)*v7;
          *v6 = *v7;
          *((_BYTE *)v6 + 40) = 2;
          v15 = v14;
          break;
        case 3:
          v16 = v7[1];
          *v6 = *v7;
          v6[1] = v16;
          v13 = 3;
LABEL_10:
          *((_BYTE *)v6 + 40) = v13;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)v6 = *(_OWORD *)v7;
          *((_BYTE *)v6 + 40) = 5;
          swift_unknownObjectRetain();
          break;
        default:
          v17 = *((_OWORD *)v7 + 1);
          *(_OWORD *)v6 = *(_OWORD *)v7;
          *((_OWORD *)v6 + 1) = v17;
          *(_OWORD *)((char *)v6 + 25) = *(_OWORD *)((char *)v7 + 25);
          break;
      }
      v18 = (void *)v7[7];
      v19 = (void *)v7[6];
      v6[6] = v19;
      v20 = v19;
      if (v18)
      {
        v22 = (void *)v7[8];
        v21 = v7[9];
        v6[7] = v18;
        v6[8] = v22;
        v6[9] = v21;
        v23 = v18;
        v24 = v22;
      }
      else
      {
        *(_OWORD *)(v6 + 7) = *(_OWORD *)(v7 + 7);
        v6[9] = v7[9];
      }
      v26 = (void *)v7[10];
      v25 = v7[11];
      v6[10] = v26;
      v6[11] = v25;
      v27 = v8[9];
      v28 = (char *)v6 + v27;
      v29 = (char *)v7 + v27;
      v30 = type metadata accessor for AttributedString();
      v31 = v26;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      v33 = v8[10];
      v34 = (_QWORD *)((char *)v6 + v33);
      v35 = (char *)v7 + v33;
      v36 = *(void **)v35;
      if (*(_QWORD *)v35)
      {
        v38 = (void *)*((_QWORD *)v35 + 1);
        v37 = *((_QWORD *)v35 + 2);
        *v34 = v36;
        v34[1] = v38;
        v34[2] = v37;
        v39 = v36;
        v40 = v38;
      }
      else
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
        v34[2] = *((_QWORD *)v35 + 2);
      }
      *((_BYTE *)v6 + v8[11]) = *((_BYTE *)v7 + v8[11]);
      *((_BYTE *)v6 + v8[12]) = *((_BYTE *)v7 + v8[12]);
      *(_QWORD *)((char *)v6 + v8[13]) = *(_QWORD *)((char *)v7 + v8[13]);
      *(_QWORD *)((char *)v6 + v8[14]) = *(_QWORD *)((char *)v7 + v8[14]);
      v41 = v8[15];
      v42 = (char *)v6 + v41;
      v43 = (char *)v7 + v41;
      v44 = v43[40];
      if (v44 <= 0xFD)
      {
        v46 = *((_QWORD *)v43 + 1);
        v69 = *(_QWORD *)v43;
        v47 = *((_QWORD *)v43 + 2);
        v48 = *((_QWORD *)v43 + 3);
        v49 = *((_QWORD *)v43 + 4);
        outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v43, v46, v47, v48, v49, v44);
        *(_QWORD *)v42 = v69;
        *((_QWORD *)v42 + 1) = v46;
        *((_QWORD *)v42 + 2) = v47;
        *((_QWORD *)v42 + 3) = v48;
        *((_QWORD *)v42 + 4) = v49;
        v42[40] = v44;
      }
      else
      {
        v45 = *((_OWORD *)v43 + 1);
        *(_OWORD *)v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v45;
        *(_OWORD *)(v42 + 25) = *(_OWORD *)(v43 + 25);
      }
      *((_BYTE *)v6 + v8[16]) = *((_BYTE *)v7 + v8[16]);
      v50 = v8[17];
      v51 = (char *)v6 + v50;
      v52 = (char *)v7 + v50;
      v53 = v52[16];
      if (v53 == 255)
      {
        *(_OWORD *)v51 = *(_OWORD *)v52;
        v51[16] = v52[16];
      }
      else
      {
        v54 = v53 & 1;
        v55 = *(_QWORD *)v52;
        v56 = *((_QWORD *)v52 + 1);
        outlined copy of PreCallControlsContext(*(id *)v52);
        *(_QWORD *)v51 = v55;
        *((_QWORD *)v51 + 1) = v56;
        v51[16] = v54;
      }
      v57 = v8[18];
      v58 = (_QWORD *)((char *)v6 + v57);
      v59 = (char *)v7 + v57;
      v60 = *(void **)((char *)v7 + v57);
      if (v60 == (void *)1)
      {
        memcpy(v58, v59, 0x49uLL);
      }
      else
      {
        v61 = *((_QWORD *)v59 + 1);
        *v58 = v60;
        v58[1] = v61;
        v67 = *((_OWORD *)v59 + 1);
        v68 = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 1) = v67;
        *((_OWORD *)v58 + 2) = v68;
        v70 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 3) = v70;
        v58[8] = *((_QWORD *)v59 + 8);
        *((_BYTE *)v58 + 72) = v59[72];
        v62 = v60;
        v63 = (id)v67;
        v64 = (id)v68;
        v65 = (id)v70;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
    }
  }
  return v3;
}

void destroy for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (!__swift_getEnumTagSinglePayload(v2, 1, (uint64_t)v3))
  {
    switch(*(_BYTE *)(v2 + 40))
    {
      case 0:
        __swift_destroy_boxed_opaque_existential_1(v2);
        break;
      case 1:
      case 3:
        swift_bridgeObjectRelease();
        break;
      case 2:

        break;
      case 5:
        swift_unknownObjectRelease();
        break;
      default:
        break;
    }

    v4 = *(void **)(v2 + 56);
    if (v4)
    {

    }
    swift_bridgeObjectRelease();
    v5 = v2 + v3[9];
    v6 = type metadata accessor for AttributedString();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = (id *)(v2 + v3[10]);
    if (*v7)
    {

    }
    v8 = v2 + v3[15];
    if (*(unsigned __int8 *)(v8 + 40) <= 0xFDu)
      outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32));
    v9 = v2 + v3[17];
    if (*(unsigned __int8 *)(v9 + 16) != 255)
      outlined consume of PreCallControlsContext(*(id *)v9);
    v10 = (id *)(v2 + v3[18]);
    if (*v10 != (id)1)
    {

    }
  }
}

uint64_t initializeWithCopy for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;

  v3 = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 3) = *(_DWORD *)(a2 + 3);
  *(_WORD *)(a1 + 7) = *(_WORD *)(a2 + 7);
  v4 = *(int *)(a3 + 28);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    switch(*((_BYTE *)v6 + 40))
    {
      case 0:
        v9 = *(_OWORD *)(v6 + 3);
        *(_OWORD *)(v5 + 3) = v9;
        (**(void (***)(_QWORD *, _QWORD *))(v9 - 8))(v5, v6);
        *((_BYTE *)v5 + 40) = 0;
        break;
      case 1:
        v10 = v6[1];
        *v5 = *v6;
        v5[1] = v10;
        v11 = 1;
        goto LABEL_8;
      case 2:
        v12 = (void *)*v6;
        *v5 = *v6;
        *((_BYTE *)v5 + 40) = 2;
        v13 = v12;
        break;
      case 3:
        v14 = v6[1];
        *v5 = *v6;
        v5[1] = v14;
        v11 = 3;
LABEL_8:
        *((_BYTE *)v5 + 40) = v11;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)v5 = *(_OWORD *)v6;
        *((_BYTE *)v5 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v15 = *((_OWORD *)v6 + 1);
        *(_OWORD *)v5 = *(_OWORD *)v6;
        *((_OWORD *)v5 + 1) = v15;
        *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)((char *)v6 + 25);
        break;
    }
    v16 = (void *)v6[7];
    v17 = (void *)v6[6];
    v5[6] = v17;
    v18 = v17;
    if (v16)
    {
      v20 = (void *)v6[8];
      v19 = v6[9];
      v5[7] = v16;
      v5[8] = v20;
      v5[9] = v19;
      v21 = v16;
      v22 = v20;
    }
    else
    {
      *(_OWORD *)(v5 + 7) = *(_OWORD *)(v6 + 7);
      v5[9] = v6[9];
    }
    v23 = (void *)v6[10];
    v24 = v6[11];
    v5[10] = v23;
    v5[11] = v24;
    v25 = v7[9];
    v26 = (char *)v5 + v25;
    v27 = (char *)v6 + v25;
    v28 = type metadata accessor for AttributedString();
    v29 = v23;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
    }
    v31 = v7[10];
    v32 = (_QWORD *)((char *)v5 + v31);
    v33 = (char *)v6 + v31;
    v34 = *(void **)v33;
    if (*(_QWORD *)v33)
    {
      v36 = (void *)*((_QWORD *)v33 + 1);
      v35 = *((_QWORD *)v33 + 2);
      *v32 = v34;
      v32[1] = v36;
      v32[2] = v35;
      v37 = v34;
      v38 = v36;
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v32[2] = *((_QWORD *)v33 + 2);
    }
    *((_BYTE *)v5 + v7[11]) = *((_BYTE *)v6 + v7[11]);
    *((_BYTE *)v5 + v7[12]) = *((_BYTE *)v6 + v7[12]);
    *(_QWORD *)((char *)v5 + v7[13]) = *(_QWORD *)((char *)v6 + v7[13]);
    *(_QWORD *)((char *)v5 + v7[14]) = *(_QWORD *)((char *)v6 + v7[14]);
    v39 = v7[15];
    v40 = (char *)v5 + v39;
    v41 = (char *)v6 + v39;
    v42 = v41[40];
    if (v42 <= 0xFD)
    {
      v44 = *(_QWORD *)v41;
      v45 = *((_QWORD *)v41 + 1);
      v68 = v3;
      v46 = *((_QWORD *)v41 + 2);
      v47 = *((_QWORD *)v41 + 3);
      v48 = *((_QWORD *)v41 + 4);
      outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v41, v45, v46, v47, v48, v42);
      *(_QWORD *)v40 = v44;
      *((_QWORD *)v40 + 1) = v45;
      *((_QWORD *)v40 + 2) = v46;
      *((_QWORD *)v40 + 3) = v47;
      v3 = v68;
      *((_QWORD *)v40 + 4) = v48;
      v40[40] = v42;
    }
    else
    {
      v43 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v43;
      *(_OWORD *)(v40 + 25) = *(_OWORD *)(v41 + 25);
    }
    *((_BYTE *)v5 + v7[16]) = *((_BYTE *)v6 + v7[16]);
    v49 = v7[17];
    v50 = (char *)v5 + v49;
    v51 = (char *)v6 + v49;
    v52 = v51[16];
    if (v52 == 255)
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v50[16] = v51[16];
    }
    else
    {
      v53 = v52 & 1;
      v54 = *(_QWORD *)v51;
      v55 = *((_QWORD *)v51 + 1);
      outlined copy of PreCallControlsContext(*(id *)v51);
      *(_QWORD *)v50 = v54;
      *((_QWORD *)v50 + 1) = v55;
      v50[16] = v53;
    }
    v56 = v7[18];
    v57 = (_QWORD *)((char *)v5 + v56);
    v58 = (char *)v6 + v56;
    v59 = *(void **)((char *)v6 + v56);
    if (v59 == (void *)1)
    {
      memcpy(v57, v58, 0x49uLL);
    }
    else
    {
      v60 = *((_QWORD *)v58 + 1);
      *v57 = v59;
      v57[1] = v60;
      v66 = *((_OWORD *)v58 + 1);
      v67 = *((_OWORD *)v58 + 2);
      *((_OWORD *)v57 + 1) = v66;
      *((_OWORD *)v57 + 2) = v67;
      v69 = *((_OWORD *)v58 + 3);
      *((_OWORD *)v57 + 3) = v69;
      v57[8] = *((_QWORD *)v58 + 8);
      *((_BYTE *)v57 + 72) = v58[72];
      v61 = v59;
      v62 = (id)v66;
      v63 = (id)v67;
      v64 = (id)v69;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return v3;
}

_BYTE *assignWithCopy for LocalParticipantControlsView.ViewModel(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  char v16;
  void *v17;
  id v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  __int128 v27;
  void *v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 *v56;
  int v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  char v72;
  void *v73;
  id v74;
  __int128 v75;
  __int128 v76;
  void *v77;
  void *v78;
  id v79;
  _OWORD *v80;
  void *v81;
  void *v82;
  _OWORD *v83;
  id v84;
  void *v85;
  void *v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  __int128 v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  void *v97;
  const void *v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 *v106;
  void *v107;
  void *v108;
  id v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  void *v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 *v142;
  int v143;
  int v144;
  char v145;
  __int128 v146;
  char v147;
  id v148;
  uint64_t v149;
  id v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  id v157;
  void *v158;
  uint64_t v159;
  id v160;
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  id v165;
  void *v166;
  uint64_t v167;
  void *v168;
  id v169;
  void *v170;
  uint64_t v171;
  void *v172;
  id v173;
  void *v174;
  uint64_t v175;
  void *v176;
  id v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  int *v183;
  __int128 v184;
  int *v185;
  int *v186;
  __int128 v187;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  v5 = *(int *)(a3 + 28);
  v6 = (uint64_t)&a1[v5];
  v7 = (uint64_t)&a2[v5];
  v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, (uint64_t)v8);
  v10 = __swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      outlined destroy of AccountUpdateNotice(v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of ConversationControlsType(v6);
      switch(*(_BYTE *)(v7 + 40))
      {
        case 0:
          v15 = *(_QWORD *)(v7 + 24);
          *(_QWORD *)(v6 + 24) = v15;
          *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
          (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v6, v7);
          *(_BYTE *)(v6 + 40) = 0;
          break;
        case 1:
          *(_QWORD *)v6 = *(_QWORD *)v7;
          *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
          v72 = 1;
          goto LABEL_41;
        case 2:
          v73 = *(void **)v7;
          *(_QWORD *)v6 = *(_QWORD *)v7;
          *(_BYTE *)(v6 + 40) = 2;
          v74 = v73;
          break;
        case 3:
          *(_QWORD *)v6 = *(_QWORD *)v7;
          *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
          v72 = 3;
LABEL_41:
          *(_BYTE *)(v6 + 40) = v72;
          swift_bridgeObjectRetain();
          break;
        case 5:
          *(_OWORD *)v6 = *(_OWORD *)v7;
          *(_BYTE *)(v6 + 40) = 5;
          swift_unknownObjectRetain();
          break;
        default:
          v75 = *(_OWORD *)v7;
          v76 = *(_OWORD *)(v7 + 16);
          *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
          *(_OWORD *)v6 = v75;
          *(_OWORD *)(v6 + 16) = v76;
          break;
      }
    }
    v77 = *(void **)(v6 + 48);
    v78 = *(void **)(v7 + 48);
    *(_QWORD *)(v6 + 48) = v78;
    v79 = v78;

    v80 = (_OWORD *)(v6 + 56);
    v81 = *(void **)(v6 + 56);
    v83 = (_OWORD *)(v7 + 56);
    v82 = *(void **)(v7 + 56);
    if (v81)
    {
      if (v82)
      {
        *(_QWORD *)(v6 + 56) = v82;
        v84 = v82;

        v85 = *(void **)(v6 + 64);
        v86 = *(void **)(v7 + 64);
        *(_QWORD *)(v6 + 64) = v86;
        v87 = v86;

        *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
      }
      else
      {
        outlined destroy of ConversationControlsRecipe.View((id *)(v6 + 56));
        v91 = *(_QWORD *)(v7 + 72);
        *v80 = *v83;
        *(_QWORD *)(v6 + 72) = v91;
      }
    }
    else if (v82)
    {
      *(_QWORD *)(v6 + 56) = v82;
      v88 = *(void **)(v7 + 64);
      *(_QWORD *)(v6 + 64) = v88;
      *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
      v89 = v82;
      v90 = v88;
    }
    else
    {
      v92 = *v83;
      *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
      *v80 = v92;
    }
    v93 = *(void **)(v7 + 80);
    v94 = *(void **)(v6 + 80);
    *(_QWORD *)(v6 + 80) = v93;
    v95 = v93;

    *(_QWORD *)(v6 + 88) = *(_QWORD *)(v7 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v96 = v8[9];
    v97 = (void *)(v6 + v96);
    v98 = (const void *)(v7 + v96);
    v99 = type metadata accessor for AttributedString();
    v100 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v99);
    v101 = __swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99);
    if (v100)
    {
      if (!v101)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
        __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
LABEL_57:
        v104 = v8[10];
        v105 = v6 + v104;
        v106 = (__int128 *)(v7 + v104);
        v107 = *(void **)(v6 + v104);
        v108 = *(void **)(v7 + v104);
        if (v107)
        {
          if (v108)
          {
            *(_QWORD *)v105 = v108;
            v109 = v108;

            v110 = *(void **)(v105 + 8);
            v111 = (void *)*((_QWORD *)v106 + 1);
            *(_QWORD *)(v105 + 8) = v111;
            v112 = v111;

            v113 = *((_QWORD *)v106 + 2);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.View((id *)v105);
            v113 = *((_QWORD *)v106 + 2);
            *(_OWORD *)v105 = *v106;
          }
          *(_QWORD *)(v105 + 16) = v113;
        }
        else if (v108)
        {
          *(_QWORD *)v105 = v108;
          v114 = (void *)*((_QWORD *)v106 + 1);
          *(_QWORD *)(v105 + 8) = v114;
          *(_QWORD *)(v105 + 16) = *((_QWORD *)v106 + 2);
          v115 = v108;
          v116 = v114;
        }
        else
        {
          v178 = *v106;
          *(_QWORD *)(v105 + 16) = *((_QWORD *)v106 + 2);
          *(_OWORD *)v105 = v178;
        }
        *(_BYTE *)(v6 + v8[11]) = *(_BYTE *)(v7 + v8[11]);
        *(_BYTE *)(v6 + v8[12]) = *(_BYTE *)(v7 + v8[12]);
        *(_QWORD *)(v6 + v8[13]) = *(_QWORD *)(v7 + v8[13]);
        *(_QWORD *)(v6 + v8[14]) = *(_QWORD *)(v7 + v8[14]);
        v117 = v8[15];
        v118 = (uint64_t *)(v6 + v117);
        v119 = (uint64_t *)(v7 + v117);
        v120 = *(unsigned __int8 *)(v7 + v117 + 40);
        if (*(unsigned __int8 *)(v6 + v117 + 40) <= 0xFDu)
        {
          if (v120 <= 0xFD)
          {
            v130 = v119[1];
            v186 = v8;
            v131 = v119[2];
            v132 = v119[3];
            v133 = v119[4];
            v134 = *v119;
            outlined copy of ConversationControlsRecipe.Actions(v134, v130, v131, v132, v133, v120);
            v135 = *v118;
            v136 = v118[1];
            v137 = v118[2];
            v138 = v118[3];
            v139 = v118[4];
            *v118 = v134;
            v118[1] = v130;
            v118[2] = v131;
            v118[3] = v132;
            v8 = v186;
            v118[4] = v133;
            *((_BYTE *)v118 + 40) = v120;
            outlined consume of ConversationControlsRecipe.Actions(v135, v136, v137, v138, v139);
          }
          else
          {
            outlined destroy of ConversationControlsRecipe.Actions(v118);
            v123 = *(_OWORD *)((char *)v119 + 25);
            v124 = *((_OWORD *)v119 + 1);
            *(_OWORD *)v118 = *(_OWORD *)v119;
            *((_OWORD *)v118 + 1) = v124;
            *(_OWORD *)((char *)v118 + 25) = v123;
          }
        }
        else if (v120 <= 0xFD)
        {
          v125 = v119[1];
          v185 = v8;
          v126 = v119[2];
          v127 = v119[3];
          v128 = v119[4];
          v129 = *v119;
          outlined copy of ConversationControlsRecipe.Actions(v129, v125, v126, v127, v128, v120);
          *v118 = v129;
          v118[1] = v125;
          v118[2] = v126;
          v118[3] = v127;
          v8 = v185;
          v118[4] = v128;
          *((_BYTE *)v118 + 40) = v120;
        }
        else
        {
          v121 = *(_OWORD *)v119;
          v122 = *((_OWORD *)v119 + 1);
          *(_OWORD *)((char *)v118 + 25) = *(_OWORD *)((char *)v119 + 25);
          *(_OWORD *)v118 = v121;
          *((_OWORD *)v118 + 1) = v122;
        }
        *(_BYTE *)(v6 + v8[16]) = *(_BYTE *)(v7 + v8[16]);
        v140 = v8[17];
        v141 = v6 + v140;
        v142 = (__int128 *)(v7 + v140);
        v143 = *(unsigned __int8 *)(v6 + v140 + 16);
        v144 = *(unsigned __int8 *)(v7 + v140 + 16);
        if (v143 == 255)
        {
          if (v144 == 255)
          {
            v146 = *v142;
            *(_BYTE *)(v141 + 16) = *((_BYTE *)v142 + 16);
            *(_OWORD *)v141 = v146;
          }
          else
          {
            v151 = v144 & 1;
            v152 = *(_QWORD *)v142;
            v153 = *((_QWORD *)v142 + 1);
            outlined copy of PreCallControlsContext(*(id *)v142);
            *(_QWORD *)v141 = v152;
            *(_QWORD *)(v141 + 8) = v153;
            *(_BYTE *)(v141 + 16) = v151;
          }
        }
        else if (v144 == 255)
        {
          outlined destroy of LeadingViewType((id *)v141);
          v145 = *((_BYTE *)v142 + 16);
          *(_OWORD *)v141 = *v142;
          *(_BYTE *)(v141 + 16) = v145;
        }
        else
        {
          v147 = v144 & 1;
          v148 = *(id *)v142;
          v149 = *((_QWORD *)v142 + 1);
          outlined copy of PreCallControlsContext(*(id *)v142);
          v150 = *(id *)v141;
          *(_QWORD *)v141 = v148;
          *(_QWORD *)(v141 + 8) = v149;
          *(_BYTE *)(v141 + 16) = v147;
          outlined consume of PreCallControlsContext(v150);
        }
        v154 = v8[18];
        v155 = v6 + v154;
        v156 = (_QWORD *)(v7 + v154);
        v157 = *(id *)v155;
        v158 = (void *)*v156;
        if (*(_QWORD *)v155 == 1)
        {
          if (v158 != (void *)1)
          {
            v159 = v156[1];
            *(_QWORD *)v155 = v158;
            *(_QWORD *)(v155 + 8) = v159;
            v180 = *((_OWORD *)v156 + 1);
            *(_OWORD *)(v155 + 16) = v180;
            v182 = *((_OWORD *)v156 + 2);
            *(_OWORD *)(v155 + 32) = v182;
            v187 = *((_OWORD *)v156 + 3);
            *(_OWORD *)(v155 + 48) = v187;
            *(_QWORD *)(v155 + 64) = v156[8];
            *(_BYTE *)(v155 + 72) = *((_BYTE *)v156 + 72);
            v160 = v158;
            v161 = (id)v180;
            v162 = (id)v182;
            v163 = (id)v187;
            return a1;
          }
        }
        else
        {
          if (v158 != (void *)1)
          {
            v164 = v156[1];
            *(_QWORD *)v155 = v158;
            v165 = v158;

            *(_QWORD *)(v155 + 8) = v164;
            v166 = (void *)v156[2];
            v167 = v156[3];
            v168 = *(void **)(v155 + 16);
            *(_QWORD *)(v155 + 16) = v166;
            v169 = v166;

            *(_QWORD *)(v155 + 24) = v167;
            v170 = (void *)v156[4];
            v171 = v156[5];
            v172 = *(void **)(v155 + 32);
            *(_QWORD *)(v155 + 32) = v170;
            v173 = v170;

            *(_QWORD *)(v155 + 40) = v171;
            v174 = (void *)v156[6];
            v175 = v156[7];
            v176 = *(void **)(v155 + 48);
            *(_QWORD *)(v155 + 48) = v174;
            v177 = v174;

            *(_QWORD *)(v155 + 56) = v175;
            *(_QWORD *)(v155 + 64) = v156[8];
            *(_BYTE *)(v155 + 72) = *((_BYTE *)v156 + 72);
            return a1;
          }
          outlined destroy of SystemApertureElement((id *)v155);
        }
        v13 = (void *)v155;
        v14 = v156;
        v12 = 73;
        goto LABEL_8;
      }
    }
    else
    {
      v102 = *(_QWORD *)(v99 - 8);
      if (!v101)
      {
        (*(void (**)(void *, const void *, uint64_t))(v102 + 24))(v97, v98, v99);
        goto LABEL_57;
      }
      (*(void (**)(void *, uint64_t))(v102 + 8))(v97, v99);
    }
    v103 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_57;
  }
  if (v10)
  {
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    v13 = (void *)v6;
    v14 = (const void *)v7;
LABEL_8:
    memcpy(v13, v14, v12);
    return a1;
  }
  switch(*(_BYTE *)(v7 + 40))
  {
    case 0:
      v11 = *(_QWORD *)(v7 + 24);
      *(_QWORD *)(v6 + 24) = v11;
      *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v6, v7);
      *(_BYTE *)(v6 + 40) = 0;
      break;
    case 1:
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
      v16 = 1;
      goto LABEL_15;
    case 2:
      v17 = *(void **)v7;
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_BYTE *)(v6 + 40) = 2;
      v18 = v17;
      break;
    case 3:
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
      v16 = 3;
LABEL_15:
      *(_BYTE *)(v6 + 40) = v16;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)v6 = *(_OWORD *)v7;
      *(_BYTE *)(v6 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v19 = *(_OWORD *)v7;
      v20 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
      *(_OWORD *)v6 = v19;
      *(_OWORD *)(v6 + 16) = v20;
      break;
  }
  v21 = *(void **)(v7 + 48);
  *(_QWORD *)(v6 + 48) = v21;
  v22 = *(void **)(v7 + 56);
  v23 = v21;
  if (v22)
  {
    *(_QWORD *)(v6 + 56) = v22;
    v24 = *(void **)(v7 + 64);
    *(_QWORD *)(v6 + 64) = v24;
    *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
    v25 = v22;
    v26 = v24;
  }
  else
  {
    v27 = *(_OWORD *)(v7 + 56);
    *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
    *(_OWORD *)(v6 + 56) = v27;
  }
  v28 = *(void **)(v7 + 80);
  *(_QWORD *)(v6 + 80) = v28;
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(v7 + 88);
  v29 = v8[9];
  v30 = (void *)(v6 + v29);
  v31 = (const void *)(v7 + v29);
  v32 = type metadata accessor for AttributedString();
  v33 = v28;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  }
  v35 = v8[10];
  v36 = (_QWORD *)(v6 + v35);
  v37 = (__int128 *)(v7 + v35);
  v38 = *(void **)v37;
  if (*(_QWORD *)v37)
  {
    *v36 = v38;
    v39 = (void *)*((_QWORD *)v37 + 1);
    v36[1] = v39;
    v36[2] = *((_QWORD *)v37 + 2);
    v40 = v38;
    v41 = v39;
  }
  else
  {
    v42 = *v37;
    v36[2] = *((_QWORD *)v37 + 2);
    *(_OWORD *)v36 = v42;
  }
  *(_BYTE *)(v6 + v8[11]) = *(_BYTE *)(v7 + v8[11]);
  *(_BYTE *)(v6 + v8[12]) = *(_BYTE *)(v7 + v8[12]);
  *(_QWORD *)(v6 + v8[13]) = *(_QWORD *)(v7 + v8[13]);
  *(_QWORD *)(v6 + v8[14]) = *(_QWORD *)(v7 + v8[14]);
  v43 = v8[15];
  v44 = v6 + v43;
  v45 = (uint64_t *)(v7 + v43);
  v46 = *((unsigned __int8 *)v45 + 40);
  if (v46 <= 0xFD)
  {
    v49 = *v45;
    v50 = v45[1];
    v183 = v8;
    v51 = v45[2];
    v52 = v45[3];
    v53 = v45[4];
    outlined copy of ConversationControlsRecipe.Actions(*v45, v50, v51, v52, v53, v46);
    *(_QWORD *)v44 = v49;
    *(_QWORD *)(v44 + 8) = v50;
    *(_QWORD *)(v44 + 16) = v51;
    *(_QWORD *)(v44 + 24) = v52;
    v8 = v183;
    *(_QWORD *)(v44 + 32) = v53;
    *(_BYTE *)(v44 + 40) = v46;
  }
  else
  {
    v47 = *(_OWORD *)v45;
    v48 = *((_OWORD *)v45 + 1);
    *(_OWORD *)(v44 + 25) = *(_OWORD *)((char *)v45 + 25);
    *(_OWORD *)v44 = v47;
    *(_OWORD *)(v44 + 16) = v48;
  }
  *(_BYTE *)(v6 + v8[16]) = *(_BYTE *)(v7 + v8[16]);
  v54 = v8[17];
  v55 = v6 + v54;
  v56 = (__int128 *)(v7 + v54);
  v57 = *((unsigned __int8 *)v56 + 16);
  if (v57 == 255)
  {
    v58 = *v56;
    *(_BYTE *)(v55 + 16) = *((_BYTE *)v56 + 16);
    *(_OWORD *)v55 = v58;
  }
  else
  {
    v59 = v57 & 1;
    v60 = *(_QWORD *)v56;
    v61 = *((_QWORD *)v56 + 1);
    outlined copy of PreCallControlsContext(*(id *)v56);
    *(_QWORD *)v55 = v60;
    *(_QWORD *)(v55 + 8) = v61;
    *(_BYTE *)(v55 + 16) = v59;
  }
  v62 = v8[18];
  v63 = (_QWORD *)(v6 + v62);
  v64 = v7 + v62;
  v65 = *(void **)(v7 + v62);
  if (v65 == (void *)1)
  {
    memcpy(v63, (const void *)v64, 0x49uLL);
  }
  else
  {
    v66 = *(_QWORD *)(v64 + 8);
    *v63 = v65;
    v63[1] = v66;
    v179 = *(_OWORD *)(v64 + 16);
    *((_OWORD *)v63 + 1) = v179;
    v181 = *(_OWORD *)(v64 + 32);
    *((_OWORD *)v63 + 2) = v181;
    v184 = *(_OWORD *)(v64 + 48);
    *((_OWORD *)v63 + 3) = v184;
    v63[8] = *(_QWORD *)(v64 + 64);
    *((_BYTE *)v63 + 72) = *(_BYTE *)(v64 + 72);
    v67 = v65;
    v68 = (id)v179;
    v69 = (id)v181;
    v70 = (id)v184;
  }
  __swift_storeEnumTagSinglePayload(v6, 0, 1, (uint64_t)v8);
  return a1;
}

uint64_t initializeWithTake for LocalParticipantControlsView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 3) = *(_DWORD *)(a2 + 3);
  *(_WORD *)(a1 + 7) = *(_WORD *)(a2 + 7);
  v4 = *(int *)(a3 + 28);
  v5 = (_OWORD *)(a1 + v4);
  v6 = (_OWORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for ConversationControlsRecipe();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = v6[1];
    *v5 = *v6;
    v5[1] = v9;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)((char *)v6 + 25);
    *((_QWORD *)v5 + 6) = *((_QWORD *)v6 + 6);
    *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
    *(_OWORD *)((char *)v5 + 72) = *(_OWORD *)((char *)v6 + 72);
    *((_QWORD *)v5 + 11) = *((_QWORD *)v6 + 11);
    v10 = v7[9];
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    v13 = type metadata accessor for AttributedString();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    v15 = v7[10];
    v16 = (char *)v5 + v15;
    v17 = (char *)v6 + v15;
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    *((_BYTE *)v5 + v7[11]) = *((_BYTE *)v6 + v7[11]);
    *((_BYTE *)v5 + v7[12]) = *((_BYTE *)v6 + v7[12]);
    *(_QWORD *)((char *)v5 + v7[13]) = *(_QWORD *)((char *)v6 + v7[13]);
    *(_QWORD *)((char *)v5 + v7[14]) = *(_QWORD *)((char *)v6 + v7[14]);
    v18 = v7[15];
    v19 = (_OWORD *)((char *)v5 + v18);
    v20 = (_OWORD *)((char *)v6 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_OWORD *)((char *)v19 + 25) = *(_OWORD *)((char *)v20 + 25);
    *((_BYTE *)v5 + v7[16]) = *((_BYTE *)v6 + v7[16]);
    v22 = v7[17];
    v23 = (char *)v5 + v22;
    v24 = (char *)v6 + v22;
    v23[16] = v24[16];
    *(_OWORD *)v23 = *(_OWORD *)v24;
    memcpy((char *)v5 + v7[18], (char *)v6 + v7[18], 0x49uLL);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return a1;
}

_BYTE *assignWithTake for LocalParticipantControlsView.ViewModel(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  int EnumTagSinglePayload;
  int v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  const void *v19;
  __int128 v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  v5 = *(int *)(a3 + 28);
  v6 = (uint64_t)&a1[v5];
  v7 = (uint64_t)&a2[v5];
  v8 = (int *)type metadata accessor for ConversationControlsRecipe();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, (uint64_t)v8);
  v10 = __swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      outlined destroy of AccountUpdateNotice(v6, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      outlined destroy of ConversationControlsType(v6);
      v20 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)v6 = *(_OWORD *)v7;
      *(_OWORD *)(v6 + 16) = v20;
      *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
    }
    v21 = *(void **)(v6 + 48);
    *(_QWORD *)(v6 + 48) = *(_QWORD *)(v7 + 48);

    v22 = *(void **)(v6 + 56);
    v23 = *(_QWORD *)(v7 + 56);
    if (v22)
    {
      if (v23)
      {
        *(_QWORD *)(v6 + 56) = v23;

        v24 = *(void **)(v6 + 64);
        *(_QWORD *)(v6 + 64) = *(_QWORD *)(v7 + 64);

        *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
        goto LABEL_19;
      }
      outlined destroy of ConversationControlsRecipe.View((id *)(v6 + 56));
    }
    *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
    *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
LABEL_19:
    v36 = *(void **)(v6 + 80);
    *(_QWORD *)(v6 + 80) = *(_QWORD *)(v7 + 80);

    *(_QWORD *)(v6 + 88) = *(_QWORD *)(v7 + 88);
    swift_bridgeObjectRelease();
    v37 = v8[9];
    v38 = (void *)(v6 + v37);
    v39 = (const void *)(v7 + v37);
    v40 = type metadata accessor for AttributedString();
    v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
    v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
        goto LABEL_25;
      }
    }
    else
    {
      v43 = *(_QWORD *)(v40 - 8);
      if (!v42)
      {
        (*(void (**)(void *, const void *, uint64_t))(v43 + 40))(v38, v39, v40);
LABEL_25:
        v45 = v8[10];
        v46 = v6 + v45;
        v47 = (_QWORD *)(v7 + v45);
        v48 = *(void **)(v6 + v45);
        if (v48)
        {
          if (*v47)
          {
            *(_QWORD *)v46 = *v47;

            v49 = *(void **)(v46 + 8);
            *(_QWORD *)(v46 + 8) = v47[1];

            goto LABEL_30;
          }
          outlined destroy of ConversationControlsRecipe.View((id *)v46);
        }
        *(_OWORD *)v46 = *(_OWORD *)v47;
LABEL_30:
        *(_QWORD *)(v46 + 16) = v47[2];
        *(_BYTE *)(v6 + v8[11]) = *(_BYTE *)(v7 + v8[11]);
        *(_BYTE *)(v6 + v8[12]) = *(_BYTE *)(v7 + v8[12]);
        *(_QWORD *)(v6 + v8[13]) = *(_QWORD *)(v7 + v8[13]);
        *(_QWORD *)(v6 + v8[14]) = *(_QWORD *)(v7 + v8[14]);
        v50 = v8[15];
        v51 = (uint64_t *)(v6 + v50);
        v52 = v7 + v50;
        if (*(unsigned __int8 *)(v6 + v50 + 40) <= 0xFDu)
        {
          v53 = *(unsigned __int8 *)(v52 + 40);
          if (v53 <= 0xFD)
          {
            v55 = *(_QWORD *)(v52 + 32);
            v56 = *v51;
            v57 = v51[1];
            v58 = v51[2];
            v59 = v51[3];
            v60 = v51[4];
            v61 = *(_OWORD *)(v52 + 16);
            *(_OWORD *)v51 = *(_OWORD *)v52;
            *((_OWORD *)v51 + 1) = v61;
            v51[4] = v55;
            *((_BYTE *)v51 + 40) = v53;
            outlined consume of ConversationControlsRecipe.Actions(v56, v57, v58, v59, v60);
LABEL_35:
            *(_BYTE *)(v6 + v8[16]) = *(_BYTE *)(v7 + v8[16]);
            v62 = v8[17];
            v63 = v6 + v62;
            v64 = v7 + v62;
            if (*(unsigned __int8 *)(v6 + v62 + 16) != 255)
            {
              v65 = *(unsigned __int8 *)(v64 + 16);
              if (v65 != 255)
              {
                v66 = *(id *)v63;
                *(_OWORD *)v63 = *(_OWORD *)v64;
                *(_BYTE *)(v63 + 16) = v65 & 1;
                outlined consume of PreCallControlsContext(v66);
                goto LABEL_40;
              }
              outlined destroy of LeadingViewType((id *)v63);
            }
            *(_OWORD *)v63 = *(_OWORD *)v64;
            *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
LABEL_40:
            v67 = v8[18];
            v68 = v6 + v67;
            v69 = (_QWORD *)(v7 + v67);
            v70 = *(id *)v68;
            if (*(_QWORD *)v68 != 1)
            {
              if (*v69 != 1)
              {
                v71 = v69[1];
                *(_QWORD *)v68 = *v69;

                v72 = v69[2];
                v73 = v69[3];
                v74 = *(void **)(v68 + 16);
                *(_QWORD *)(v68 + 8) = v71;
                *(_QWORD *)(v68 + 16) = v72;

                v75 = v69[4];
                v76 = v69[5];
                v77 = *(void **)(v68 + 32);
                *(_QWORD *)(v68 + 24) = v73;
                *(_QWORD *)(v68 + 32) = v75;

                v78 = v69[6];
                v79 = v69[7];
                v80 = *(void **)(v68 + 48);
                *(_QWORD *)(v68 + 40) = v76;
                *(_QWORD *)(v68 + 48) = v78;

                v81 = v69[8];
                *(_QWORD *)(v68 + 56) = v79;
                *(_QWORD *)(v68 + 64) = v81;
                *(_BYTE *)(v68 + 72) = *((_BYTE *)v69 + 72);
                return a1;
              }
              outlined destroy of SystemApertureElement((id *)v68);
            }
            v18 = (void *)v68;
            v19 = v69;
            v17 = 73;
            goto LABEL_8;
          }
          outlined destroy of ConversationControlsRecipe.Actions(v51);
        }
        v54 = *(_OWORD *)(v52 + 16);
        *(_OWORD *)v51 = *(_OWORD *)v52;
        *((_OWORD *)v51 + 1) = v54;
        *(_OWORD *)((char *)v51 + 25) = *(_OWORD *)(v52 + 25);
        goto LABEL_35;
      }
      (*(void (**)(void *, uint64_t))(v43 + 8))(v38, v40);
    }
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?)
                                - 8)
                    + 64);
    v18 = (void *)v6;
    v19 = (const void *)v7;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  v11 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_OWORD *)(v6 + 16) = v11;
  *(_OWORD *)(v6 + 25) = *(_OWORD *)(v7 + 25);
  *(_QWORD *)(v6 + 48) = *(_QWORD *)(v7 + 48);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(v7 + 72);
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(v7 + 88);
  v12 = v8[9];
  v13 = (void *)(v6 + v12);
  v14 = (const void *)(v7 + v12);
  v15 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v25 = v8[10];
  v26 = v6 + v25;
  v27 = v7 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_BYTE *)(v6 + v8[11]) = *(_BYTE *)(v7 + v8[11]);
  *(_BYTE *)(v6 + v8[12]) = *(_BYTE *)(v7 + v8[12]);
  *(_QWORD *)(v6 + v8[13]) = *(_QWORD *)(v7 + v8[13]);
  *(_QWORD *)(v6 + v8[14]) = *(_QWORD *)(v7 + v8[14]);
  v28 = v8[15];
  v29 = (_OWORD *)(v6 + v28);
  v30 = (_OWORD *)(v7 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  *(_BYTE *)(v6 + v8[16]) = *(_BYTE *)(v7 + v8[16]);
  v32 = v8[17];
  v33 = v6 + v32;
  v34 = v7 + v32;
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  memcpy((void *)(v6 + v8[18]), (const void *)(v7 + v8[18]), 0x49uLL);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, (uint64_t)v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalParticipantControlsView.ViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD4A2510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for LocalParticipantControlsView.ViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD4A258C(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    __swift_storeEnumTagSinglePayload((uint64_t)&a1[*(int *)(a4 + 28)], a2, a2, v7);
  }
}

void type metadata completion function for LocalParticipantControlsView.ViewModel()
{
  unint64_t v0;

  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for ConversationControlsRecipe?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for ConversationControlsRecipe?)
  {
    type metadata accessor for ConversationControlsRecipe();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ConversationControlsRecipe?);
  }
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LocalParticipantControlsView.Capabilities(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[7])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalParticipantControlsView.Capabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 7) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalParticipantControlsView.Capabilities()
{
  return &type metadata for LocalParticipantControlsView.Capabilities;
}

void partial apply for closure #1 in LocalParticipantControlsView.commonInit()(char *a1)
{
  uint64_t v1;

  closure #1 in LocalParticipantControlsView.commonInit()(a1, v1);
}

void outlined bridged method (mbgnn) of @objc NSObject.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v4);

}

void partial apply for closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter()
{
  uint64_t v0;

  closure #1 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(v0);
}

uint64_t sub_1BD4A27D8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter()
{
  uint64_t v0;

  closure #2 in closure #1 in LocalParticipantControlsView.videoMessageViewModel.getter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_39_61@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t *))((v2 & a1) + 0x268))(&a2);
}

uint64_t OUTLINED_FUNCTION_75_23@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x258))();
}

void OUTLINED_FUNCTION_76_21(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  _s15ConversationKit11ParticipantVWOcTm_2(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_99_11()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_111_11(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return v2 + *a2;
}

uint64_t ClarityUIActionGlyphLabel.actionGlyph.getter()
{
  return swift_retain();
}

uint64_t ClarityUIActionGlyphLabel.actionGlyph.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*ClarityUIActionGlyphLabel.actionGlyph.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.title.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_144(*(_QWORD *)(a1 + 16), a2);
}

uint64_t ClarityUIActionGlyphLabel.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_0_149(v2 + *(int *)(a2 + 52), *(_QWORD *)(a2 + 16), a1);
}

uint64_t (*ClarityUIActionGlyphLabel.title.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.icon.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_144(*(_QWORD *)(a1 + 24), a2);
}

uint64_t ClarityUIActionGlyphLabel.icon.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_0_149(v2 + *(int *)(a2 + 56), *(_QWORD *)(a2 + 24), a1);
}

uint64_t (*ClarityUIActionGlyphLabel.icon.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIActionGlyphLabel.shouldShowActionGlyph.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t ClarityUIActionGlyphLabel.shouldShowActionGlyph.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 60)) = result;
  return result;
}

uint64_t (*ClarityUIActionGlyphLabel.shouldShowActionGlyph.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ClarityUIActionGlyphLabel.init(actionGlyph:title:icon:)()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A29B0(int *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  *((_BYTE *)v3 + a1[15]) = 0;
  v6 = (_QWORD *)((char *)v3 + a1[16]);
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  swift_storeEnumTagMultiPayload();
  v7 = a1[17];
  static ClarityUIMetrics.standardSpacing.getter();
  *(double *)((char *)v3 + v7) = v8 * 0.5;
  v9 = a1[18];
  static ClarityUIMetrics.standardSpacing.getter();
  *(double *)((char *)v3 + v9) = v10 * -0.5;
  *(_QWORD *)((char *)v3 + a1[19]) = 0x4018000000000000;
  *(_OWORD *)((char *)v3 + a1[20]) = xmmword_1BD663170;
  *v3 = v1;
  v11 = swift_retain();
  v12 = v4(v11);
  v2(v12);
  return swift_release();
}

void type metadata accessor for ClarityUIActionGlyphLabel()
{
  JUMPOUT(0x1C3B74FFCLL);
}

void ClarityUIActionGlyphLabel.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v3[11];
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](a1);
  v3[10] = (char *)v3 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  OUTLINED_FUNCTION_9_101();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD4A2B34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  _BYTE v35[64];

  v4 = OUTLINED_FUNCTION_7_121();
  v5 = v1[3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  v6 = type metadata accessor for ModifiedContent();
  v7 = MEMORY[0x1E0CDFB10];
  *(_QWORD *)(v3 - 352) = v4;
  v8 = MEMORY[0x1C3B750C8](v7, v4);
  *(_QWORD *)(v3 - 360) = v8;
  v9 = v1[5];
  v10 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>, MEMORY[0x1E0CDC1B8]);
  *(_QWORD *)(v3 - 104) = v9;
  *(_QWORD *)(v3 - 96) = v10;
  v11 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v6, v3 - 104);
  *(_QWORD *)(v3 - 368) = v11;
  *(_QWORD *)(v3 - 136) = v4;
  *(_QWORD *)(v3 - 128) = v6;
  *(_QWORD *)(v3 - 120) = v8;
  *(_QWORD *)(v3 - 112) = v11;
  v12 = type metadata accessor for Label();
  *(_QWORD *)(v3 - 320) = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v3 - 344) = &v35[-v13];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?>);
  v14 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v3 - 312) = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v3 - 336) = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v3 - 328) = &v35[-v17];
  *(_QWORD *)(v3 - 192) = v2;
  *(_QWORD *)(v3 - 184) = v5;
  v18 = v5;
  *(_QWORD *)(v3 - 376) = v5;
  v19 = v1[4];
  *(_QWORD *)(v3 - 176) = v19;
  *(_QWORD *)(v3 - 168) = v9;
  v20 = v0;
  *(_QWORD *)(v3 - 160) = v0;
  *(_QWORD *)(v3 - 256) = v2;
  *(_QWORD *)(v3 - 248) = v18;
  v21 = v2;
  *(_QWORD *)(v3 - 240) = v19;
  *(_QWORD *)(v3 - 232) = v9;
  *(_QWORD *)(v3 - 224) = v20;
  Label.init(title:icon:)();
  v22 = *(_QWORD *)(v3 - 296);
  v23 = *(_QWORD *)(v3 - 304);
  (*(void (**)(uint64_t, uint64_t, _QWORD *))(v22 + 16))(v23, v20, v1);
  v24 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v25 = (char *)swift_allocObject();
  v26 = *(_QWORD *)(v3 - 376);
  *((_QWORD *)v25 + 2) = v21;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = v19;
  *((_QWORD *)v25 + 5) = v9;
  (*(void (**)(char *, uint64_t, _QWORD *))(v22 + 32))(&v25[v24], v23, v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?);
  v27 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDF8C8], v12);
  lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey();
  lazy protocol witness table accessor for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?();
  static Alignment.center.getter();
  v28 = *(_QWORD *)(v3 - 336);
  v29 = *(_QWORD *)(v3 - 344);
  View.overlayPreferenceValue<A, B>(_:alignment:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 8))(v29, v12);
  v30 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?> and conformance _OverlayPreferenceModifier<A, B>, &demangling cache variable for type metadata for _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?>, MEMORY[0x1E0CDCAB0]);
  *(_QWORD *)(v3 - 152) = v27;
  *(_QWORD *)(v3 - 144) = v30;
  v31 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v14, v3 - 152);
  v32 = *(_QWORD *)(v3 - 328);
  static ViewBuilder.buildExpression<A>(_:)(v28, v14, v31);
  v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 312) + 8);
  v33(v28, v14);
  static ViewBuilder.buildBlock<A>(_:)(v32, v14, *(_QWORD *)(v3 - 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v14);
}

uint64_t closure #1 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a5;
  v22 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  swift_getTupleTypeMetadata2();
  v10 = type metadata accessor for TupleView();
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0680], v10);
  v11 = type metadata accessor for HStack();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - v16;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = v21;
  v27 = a1;
  static VerticalAlignment.center.getter();
  HStack.init(alignment:spacing:content:)();
  v18 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFB10], v11);
  static ViewBuilder.buildExpression<A>(_:)(v14, v11, v18);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  static ViewBuilder.buildBlock<A>(_:)((uint64_t)v17, v11, v22);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

void closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[22];

  v11[6] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v9);
  v11[1] = (char *)v11 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[13] = a1;
  v11[14] = a2;
  v11[15] = a3;
  v11[16] = a4;
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A30E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  _BYTE v40[96];

  *(_QWORD *)(v4 - 200) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v40[-v6];
  v8 = type metadata accessor for MultimodalListStyle.Layout();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v40[-v13];
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v4 - 224) = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v1 + *(int *)(a1 + 52);
  *(_QWORD *)(v4 - 240) = &v40[-v18];
  *(_QWORD *)(v4 - 192) = v3;
  *(_QWORD *)(v4 - 216) = v2;
  static ViewBuilder.buildExpression<A>(_:)(v19, v3, v2);
  specialized Environment.wrappedValue.getter();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CDB470], v8);
  lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  v20 = *(_QWORD *)(v4 - 152);
  v21 = *(_QWORD *)(v4 - 104);
  v22 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v22(v11, v8);
  v23 = v8;
  v24 = *(_QWORD *)(v4 - 200);
  v22(v14, v23);
  (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v24 + 16))(v7, v1, a1);
  if (v20 == v21)
  {
    v25 = *(_QWORD *)(v4 - 248);
    v26 = v7[*(int *)(a1 + 60)];
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v7, a1);
    v27 = *(_QWORD *)(v4 - 216);
    v29 = *(_QWORD *)(v4 - 232);
    v28 = *(_QWORD *)(v4 - 224);
    v30 = *(_QWORD *)(v4 - 240);
    if ((v26 & 1) != 0)
    {
      static ClarityUIMetrics.standardSpacing.getter();
      v32 = v31;
      v33 = *v1;
      swift_retain();
      static Font.Weight.semibold.getter();
      v34 = type metadata accessor for Font.Design();
      __swift_storeEnumTagSinglePayload(v25, 1, 1, v34);
      v35 = static Font.system(size:weight:design:)();
      outlined destroy of Font.Design?(v25);
      v36 = 0x404B000000000000;
    }
    else
    {
      v32 = 0;
      v33 = 0;
      v36 = 0;
      v35 = 0;
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v7, a1);
    v32 = 0;
    v33 = 0;
    v36 = 0;
    v35 = 0;
    v27 = *(_QWORD *)(v4 - 216);
    v29 = *(_QWORD *)(v4 - 232);
    v28 = *(_QWORD *)(v4 - 224);
    v30 = *(_QWORD *)(v4 - 240);
  }
  v37 = *(_QWORD *)(v4 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v30, v37);
  *(_QWORD *)(v4 - 152) = v32;
  *(_QWORD *)(v4 - 144) = 0;
  *(_QWORD *)(v4 - 136) = v33;
  *(_QWORD *)(v4 - 128) = 0;
  *(_QWORD *)(v4 - 120) = v36;
  *(_QWORD *)(v4 - 112) = v35;
  *(_QWORD *)(v4 - 104) = v28;
  *(_QWORD *)(v4 - 96) = v4 - 152;
  outlined copy of TupleView<(Spacer, ActionGlyphCircle)>?(v32, 0, v33);
  *(_QWORD *)(v4 - 168) = v37;
  *(_QWORD *)(v4 - 160) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  *(_QWORD *)(v4 - 184) = v27;
  *(_QWORD *)(v4 - 176) = lazy protocol witness table accessor for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?();
  static ViewBuilder.buildBlock<each A>(_:)((uint64_t *)(v4 - 104), 2, v4 - 168);
  outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(v32, 0, v33);
  v38 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v38(v30, v37);
  outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(*(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 136));
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v28, v37);
}

void closure #2 in ClarityUIActionGlyphLabel.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  v0 = type metadata accessor for ModifiedContent();
  MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A34E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  static Anchor.Source<A>.bounds.getter();
  type metadata accessor for CGRect(0);
  lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey();
  View.anchorPreference<A, B>(key:value:transform:)();
  swift_release();
  v6 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey> and conformance _AnchorWritingModifier<A, B>, &demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>, MEMORY[0x1E0CDC1B8]);
  *(_QWORD *)(v5 - 128) = v2;
  *(_QWORD *)(v5 - 120) = v6;
  v7 = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v5 - 128);
  static ViewBuilder.buildExpression<A>(_:)(v4, v1, v7);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  v8(v4, v1);
  static ViewBuilder.buildBlock<A>(_:)(v3, v1, *(_QWORD *)(v5 - 136));
  return v8(v3, v1);
}

uint64_t closure #1 in closure #2 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

void closure #3 in ClarityUIActionGlyphLabel.body.getter()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A3630(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t result;
  void (**v27)();
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)();
  _BYTE v33[96];

  v4 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 128) = v4;
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v2 - 168) = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v33[-v7];
  v9 = type metadata accessor for MultimodalListStyle.Layout();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v33[-v14];
  *(_QWORD *)(v2 - 192) = *v1;
  specialized Environment.wrappedValue.getter();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDB468], v9);
  lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  v17 = *(_QWORD *)(v2 - 120);
  v16 = *(_QWORD *)(v2 - 112);
  v18 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v19 = *(_QWORD *)(v2 - 128);
  v18(v12, v9);
  v20 = *(_QWORD *)(v2 - 136);
  v18(v15, v9);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16);
  v21(v8, v20, a1);
  if (v16 == v17)
  {
    v22 = *(_BYTE **)(v2 - 168);
    v23 = *(_QWORD *)(v2 - 160);
    v24 = *(_QWORD *)(v2 - 152);
    v25 = v8[*(int *)(a1 + 60)];
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v19 + 8))(v8, a1);
    v27 = *(void (***)())(v2 - 144);
    if ((v25 & 1) != 0)
    {
      v21(v22, v20, a1);
      v28 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      v29 = (char *)swift_allocObject();
      *((_QWORD *)v29 + 2) = v23;
      *((_QWORD *)v29 + 3) = v24;
      v30 = *(_QWORD *)(v2 - 192);
      v31 = *(_QWORD *)(v2 - 176);
      *((_QWORD *)v29 + 4) = *(_QWORD *)(v2 - 184);
      *((_QWORD *)v29 + 5) = v31;
      *((_QWORD *)v29 + 6) = v30;
      (*(void (**)(char *, _BYTE *, uint64_t))(v19 + 32))(&v29[v28], v22, a1);
      result = swift_retain();
      v32 = partial apply for closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter;
    }
    else
    {
      v32 = 0;
      v29 = 0;
    }
  }
  else
  {
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v19 + 8))(v8, a1);
    v32 = 0;
    v29 = 0;
    v27 = *(void (***)())(v2 - 144);
  }
  *v27 = v32;
  v27[1] = (void (*)())v29;
  return result;
}

uint64_t closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  _BYTE __dst[240];
  _BYTE __src[240];

  if (a2)
  {
    v10 = a2;
    closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter((uint64_t)&v10, a3, a1, a4, a5, a6, a7);
  }
  _s7SwiftUI15ModifiedContentVyACyAA6HStackVyAA9TupleViewVyAA6SpacerV_AA6VStackVyAGyACyACy15ConversationKit17ActionGlyphCircle33_A5A29C6D3794560EE297715D1CD250B5LLVAA13_OffsetEffectVGAA19_BackgroundModifierVyAA07_ShadowG0VyAA0N0VGGG_AItGGtGGAA12_FrameLayoutVGAQGSgWOi0_(__dst);
  outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?((uint64_t)__dst, (uint64_t)__src);
  return outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?((uint64_t)__src, a8);
}

void closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  static VerticalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(a2, a4, a5, a6, a7);
}

void *sub_1BD4A395C()
{
  uint64_t v0;
  uint64_t v1;
  void *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[145];
  _BYTE v13[160];
  _BYTE v14[152];
  _BYTE v15[7];
  char v16;
  _BYTE v17[7];
  char v18;
  _BYTE v19[7];

  v13[152] = 1;
  memcpy(&v13[7], v12, 0x91uLL);
  memcpy(v14, v13, sizeof(v14));
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  GeometryProxy.subscript.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  memcpy((void *)(v1 - 256), v14, 0x98uLL);
  v18 = v7;
  v16 = v9;
  GeometryProxy.subscript.getter();
  GeometryProxy.subscript.getter();
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 1;
  result = memcpy((void *)(v0 + 17), (const void *)(v1 - 256), 0x98uLL);
  *(_DWORD *)(v0 + 169) = *(_DWORD *)v19;
  *(_DWORD *)(v0 + 172) = *(_DWORD *)&v19[3];
  *(_QWORD *)(v0 + 176) = v6;
  *(_BYTE *)(v0 + 184) = v18;
  *(_DWORD *)(v0 + 185) = *(_DWORD *)v17;
  *(_DWORD *)(v0 + 188) = *(_DWORD *)&v17[3];
  *(_QWORD *)(v0 + 192) = v8;
  *(_BYTE *)(v0 + 200) = v16;
  *(_DWORD *)(v0 + 204) = *(_DWORD *)&v15[3];
  *(_DWORD *)(v0 + 201) = *(_DWORD *)v15;
  *(_QWORD *)(v0 + 208) = v10;
  *(_QWORD *)(v0 + 216) = v11;
  *(_QWORD *)(v0 + 224) = v5;
  *(_QWORD *)(v0 + 232) = v4;
  return result;
}

void closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(a1, a2, a3, a4, a5);
}

uint64_t sub_1BD4A3B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[17];
  _QWORD v19[17];
  char v20;
  _QWORD v21[2];
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v2 = v19[0];
  v3 = v19[1];
  v4 = v19[2];
  v5 = v19[3];
  v6 = v19[4];
  v7 = v19[5];
  v8 = v19[6];
  v9 = v19[7];
  v10 = v19[8];
  v11 = v19[9];
  v12 = v19[10];
  v13 = v19[12];
  v14 = v19[13];
  v18[0] = v1;
  v18[1] = 0;
  LOBYTE(v18[2]) = 1;
  v18[3] = v19[0];
  LOBYTE(v18[4]) = v19[1];
  v18[5] = v19[2];
  v18[6] = v19[3];
  v18[7] = v19[4];
  v18[8] = v19[5];
  v18[9] = v19[6];
  v18[10] = v19[7];
  v18[11] = v19[8];
  v18[12] = v19[9];
  v18[13] = v19[10];
  v18[14] = v19[11];
  v15 = v19[11];
  v18[15] = v19[12];
  LOBYTE(v18[16]) = v19[13];
  v20 = 1;
  memcpy((char *)v19 + 7, v18, 0x81uLL);
  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = 1;
  memcpy((void *)(v0 + 9), v19, 0x88uLL);
  v21[0] = v17;
  v21[1] = 0;
  v22 = 1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v9;
  v31 = v10;
  v32 = v11;
  v33 = v12;
  v34 = v15;
  v35 = v13;
  v36 = v14;
  outlined retain of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>((uint64_t)v18);
  return outlined release of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>((uint64_t)v21);
}

void closure #1 in closure #1 in closure #1 in closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = a4;
  v13 = a5;
  v7 = type metadata accessor for Color.RGBColorSpace();
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  static Font.Weight.semibold.getter();
  v11 = type metadata accessor for Font.Design();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  static Font.system(size:weight:design:)();
  outlined destroy of Font.Design?((uint64_t)v10);
  v14 = a2;
  v15 = a3;
  v16 = v12;
  v17 = v13;
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A3D84(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v8 = *(_QWORD *)(v4 + a1[17]);
  v9 = *(_QWORD *)(v4 + a1[18]);
  v10 = a1[20];
  v11 = *(_QWORD *)(v4 + a1[19]);
  v12 = *(_QWORD *)(v4 + v10);
  v13 = *(_QWORD *)(v4 + v10 + 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v3, *MEMORY[0x1E0CDF3D8], v2);
  v14 = Color.init(_:white:opacity:)();
  result = static Alignment.center.getter();
  *(_QWORD *)v1 = v5;
  *(_BYTE *)(v1 + 8) = 1;
  *(_QWORD *)(v1 + 16) = 0x404B000000000000;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v8;
  *(_QWORD *)(v1 + 40) = v9;
  *(_QWORD *)(v1 + 48) = v14;
  *(_QWORD *)(v1 + 56) = v11;
  *(_QWORD *)(v1 + 64) = v12;
  *(_QWORD *)(v1 + 72) = v13;
  *(_QWORD *)(v1 + 80) = result;
  *(_QWORD *)(v1 + 88) = v16;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  return result;
}

uint64_t partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in ClarityUIActionGlyphLabel.body.getter);
}

uint64_t partial apply for closure #2 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #2 in ClarityUIActionGlyphLabel.body.getter);
}

void sub_1BD4A3E50()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

#error "1BD4A3EB4: call analysis failed (funcsize=25)"

void partial apply for closure #3 in ClarityUIActionGlyphLabel.body.getter()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

void sub_1BD4A3F3C()
{
  closure #3 in ClarityUIActionGlyphLabel.body.getter();
}

unint64_t lazy protocol witness table accessor for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey;
  if (!lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for IconBoundsPreferenceKey, &unk_1E763A040);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type IconBoundsPreferenceKey and conformance IconBoundsPreferenceKey);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?);
    v2 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>, MEMORY[0x1E0CD9318]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>? and conformance <A> A?);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ClarityUIActionGlyphLabel<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata completion function for ClarityUIActionGlyphLabel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Environment<MultimodalListStyle.Layout>.Content();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClarityUIActionGlyphLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unsigned int v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = *(_QWORD *)(a3 + 16);
  v52 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v51 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = *(_QWORD *)(v52 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v49 = *(_QWORD *)(v5 + 64);
  v11 = *(_QWORD *)(v8 + 64);
  v12 = type metadata accessor for MultimodalListStyle.Layout();
  v13 = a2;
  v14 = v12;
  v15 = *(_QWORD *)(v12 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16 & 0xF8 | 7;
  v50 = v11;
  v18 = (v17 + v11 + ((v49 + v9 + ((v7 + 8) & ~v7)) & ~(unint64_t)v9) + 1) & ~v17;
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v15 + 64);
  v20 = ((((((((v19 + 8 + v18) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v21 = v9 | (unint64_t)v6 | v17;
  v22 = (v9 | v6 | v16) & 0x100000;
  v23 = *v13;
  *a1 = *v13;
  if (v21 != 7 || v22 != 0 || v20 > 0x18)
  {
    v26 = v23 + ((v21 + 16) & ~v21);
    swift_retain();
  }
  else
  {
    v45 = v14;
    v46 = v15;
    v47 = v19 + 8;
    v48 = a1;
    v27 = ~v17;
    v28 = ((unint64_t)a1 + v7 + 8) & ~v7;
    v29 = ((unint64_t)v13 + v7 + 8) & ~v7;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v30(v28, v29, v51);
    v31 = (v28 + v49 + v10) & ~v10;
    v32 = (v29 + v49 + v10) & ~v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v31, v32, v52);
    *(_BYTE *)(v31 + v50) = *(_BYTE *)(v32 + v50);
    v33 = (_QWORD *)((v31 + v50 + v17 + 1) & v27);
    v34 = (_QWORD *)((v32 + v50 + v17 + 1) & v27);
    v35 = *((unsigned __int8 *)v34 + v19);
    if (v35 >= 2)
    {
      if (v19 <= 3)
        v36 = v19;
      else
        v36 = 4;
      __asm { BR              X12 }
    }
    if (v35 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v46 + 16))(v33, v34, v45);
      v37 = 1;
    }
    else
    {
      *v33 = *v34;
      swift_retain();
      v37 = 0;
    }
    *((_BYTE *)v33 + v19) = v37;
    v38 = (_QWORD *)(((unint64_t)v33 + v47) & 0xFFFFFFFFFFFFF8);
    v39 = (_QWORD *)(((unint64_t)v34 + v47) & 0xFFFFFFFFFFFFFFF8);
    *v38 = *v39;
    v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v40 = *v41;
    v42 = (_QWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFF8);
    v43 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v42 = *v43;
    *(_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
    return v48;
  }
  return (uint64_t *)v26;
}

uint64_t destroy for ClarityUIActionGlyphLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;

  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v12 = (v9 + v11 + v8 + 1) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  if (v13 <= 8)
    v13 = 8;
  v14 = *(unsigned __int8 *)(v12 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  if (v14 == 1)
    return (*(uint64_t (**)(void))(v10 + 8))();
  else
    return swift_release();
}

_QWORD *initializeWithCopy for ClarityUIActionGlyphLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v8) & ~v13;
  v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64);
  v18 = (_BYTE *)(v15 + v17);
  v19 = (_BYTE *)(v16 + v17);
  *v18 = *v19;
  v20 = type metadata accessor for MultimodalListStyle.Layout();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  v23 = v22 + 8;
  v24 = (unint64_t)&v18[v22 + 8];
  v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)(v24 & v25);
  v27 = (_QWORD *)((unint64_t)&v19[v23] & v25);
  if (*(_QWORD *)(v21 + 64) <= 8uLL)
    v28 = 8;
  else
    v28 = *(_QWORD *)(v21 + 64);
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X13 }
  }
  if (v29 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 16))(v26, v27, v20);
    v31 = 1;
  }
  else
  {
    *v26 = *v27;
    swift_retain();
    v31 = 0;
  }
  *((_BYTE *)v26 + v28) = v31;
  v32 = (_QWORD *)(((unint64_t)v26 + v28 + 8) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v27 + v28 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  *(_OWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *assignWithCopy for ClarityUIActionGlyphLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v10 + v12;
  v14 = (v13 + v8) & ~v12;
  v15 = (v13 + v9) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v14, v15);
  v16 = *(_QWORD *)(v11 + 64);
  v17 = (_BYTE *)(v14 + v16);
  v18 = v15 + v16;
  *v17 = *(_BYTE *)(v15 + v16);
  v19 = type metadata accessor for MultimodalListStyle.Layout();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  v22 = v21 + 8;
  v23 = (unint64_t)&v17[v21 + 8];
  v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & v24;
  v26 = (v22 + v18) & v24;
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    v27 = 8;
  else
    v27 = *(_QWORD *)(v20 + 64);
  if (v25 != v26)
  {
    v28 = v19;
    v29 = *(unsigned __int8 *)(v25 + v27);
    if (v29 >= 2)
    {
      if (v27 <= 3)
        v30 = v27;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v25, v19);
    else
      swift_release();
    v31 = *(unsigned __int8 *)(v26 + v27);
    if (v31 >= 2)
    {
      if (v27 <= 3)
        v32 = v27;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 16))(v25, v26, v28);
      *(_BYTE *)(v25 + v27) = 1;
    }
    else
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *(_BYTE *)(v25 + v27) = 0;
      swift_retain();
    }
  }
  v33 = (_QWORD *)(((v25 | 7) + v27 + 1) & 0xFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((v26 | 7) + v27 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v33 = *v34;
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v35 = *v36;
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v39[1] = v40[1];
  return a1;
}

_QWORD *initializeWithTake for ClarityUIActionGlyphLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = (_BYTE *)(v13 + v15);
  v17 = (_BYTE *)(v14 + v15);
  *v16 = *v17;
  v18 = type metadata accessor for MultimodalListStyle.Layout();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  v21 = v20 + 8;
  v22 = (unint64_t)&v16[v20 + 8];
  v23 = ~v20 & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)(v22 & v23);
  v25 = (_QWORD *)((unint64_t)&v17[v21] & v23);
  if (*(_QWORD *)(v19 + 64) <= 8uLL)
    v26 = 8;
  else
    v26 = *(_QWORD *)(v19 + 64);
  v27 = *((unsigned __int8 *)v25 + v26);
  if (v27 >= 2)
  {
    if (v26 <= 3)
      v28 = v26;
    else
      v28 = 4;
    __asm { BR              X13 }
  }
  if (v27 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 32))(v24, v25, v18);
    v29 = 1;
  }
  else
  {
    v29 = 0;
    *v24 = *v25;
  }
  *((_BYTE *)v24 + v26) = v29;
  v30 = (_QWORD *)(((unint64_t)v24 + v26 + 8) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v25 + v26 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  *(_OWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *assignWithTake for ClarityUIActionGlyphLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v10 + v12;
  v14 = (v13 + v8) & ~v12;
  v15 = (v13 + v9) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  v16 = *(_QWORD *)(v11 + 64);
  v17 = (_BYTE *)(v14 + v16);
  v18 = v15 + v16;
  *v17 = *(_BYTE *)(v15 + v16);
  v19 = type metadata accessor for MultimodalListStyle.Layout();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  v22 = v21 + 8;
  v23 = (unint64_t)&v17[v21 + 8];
  v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & v24;
  v26 = (v22 + v18) & v24;
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    v27 = 8;
  else
    v27 = *(_QWORD *)(v20 + 64);
  if (v25 != v26)
  {
    v28 = v19;
    v29 = *(unsigned __int8 *)(v25 + v27);
    if (v29 >= 2)
    {
      if (v27 <= 3)
        v30 = v27;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v25, v19);
    else
      swift_release();
    v31 = *(unsigned __int8 *)(v26 + v27);
    if (v31 >= 2)
    {
      if (v27 <= 3)
        v32 = v27;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v25, v26, v28);
      v33 = 1;
    }
    else
    {
      v33 = 0;
      *(_QWORD *)v25 = *(_QWORD *)v26;
    }
    *(_BYTE *)(v25 + v27) = v33;
  }
  v34 = (_QWORD *)(((v25 | 7) + v27 + 1) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((v26 | 7) + v27 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v34 = *v35;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v38 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v41;
  v40[1] = v41[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ClarityUIActionGlyphLabel(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v8 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = *(_QWORD *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v13 + 64);
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = *(_QWORD *)(v7 + 64);
  v17 = *(unsigned __int8 *)(v9 + 80);
  if (v12 < a2)
  {
    v18 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
    if (((((((((((v14 + ((*(_QWORD *)(v9 + 64) + v18 + ((v16 + v17 + ((v15 + 8) & ~v15)) & ~v17) + 1) & ~v18) + 8) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v19 = 2;
    else
      v19 = a2 - v12 + 1;
    if (v19 >= 0x10000)
      v20 = 4;
    else
      v20 = 2;
    if (v19 < 0x100)
      v20 = 1;
    if (v19 >= 2)
      v21 = v20;
    else
      v21 = 0;
    __asm { BR              X15 }
  }
  if ((v11 & 0x80000000) != 0)
  {
    v24 = ((unint64_t)a1 + v15 + 8) & ~v15;
    if ((_DWORD)v8 == v12)
    {
      v25 = v8;
      v26 = v5;
    }
    else
    {
      v24 = (v24 + v16 + v17) & ~v17;
      v25 = v10;
      v26 = v6;
    }
    return __swift_getEnumTagSinglePayload(v24, v25, v26);
  }
  else
  {
    v23 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v23) = -1;
    return (v23 + 1);
  }
}

void storeEnumTagSinglePayload for ClarityUIActionGlyphLabel(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(type metadata accessor for MultimodalListStyle.Layout() - 8);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v12 = 8;
  else
    v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v14 = ((((((((v12
              + ((*(_QWORD *)(v8 + 64)
                + v13
                + ((*(_QWORD *)(v7 + 64)
                  + *(unsigned __int8 *)(v8 + 80)
                  + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
                + 1) & ~v13)
              + 8) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v10 >= a3)
  {
    v17 = 0u;
  }
  else
  {
    if ((_DWORD)v14)
      v15 = 2;
    else
      v15 = a3 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
  }
  if (a2 > v10)
  {
    if ((_DWORD)v14)
    {
      bzero(a1, v14);
      *a1 = ~v10 + a2;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1BD4A5228(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *((_BYTE *)v5 + v10) = 0;
  if ((_DWORD)v6)
  {
    if (v12 < 0)
    {
      v14 = ((unint64_t)v5 + v2 + 8) & v4;
      if ((_DWORD)v9 == v11)
      {
        v15 = v6;
        v16 = v9;
        v17 = v18;
      }
      else
      {
        v14 = (v14 + v1 + a1) & v3;
        v15 = v6;
        v16 = v8;
        v17 = v7;
      }
      __swift_storeEnumTagSinglePayload(v14, v15, v16, v17);
    }
    else
    {
      if ((v6 & 0x80000000) != 0)
        v13 = v6 ^ 0x80000000;
      else
        v13 = (v6 - 1);
      *v5 = v13;
    }
  }
}

void type metadata accessor for Environment<MultimodalListStyle.Layout>.Content()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content)
  {
    type metadata accessor for MultimodalListStyle.Layout();
    v0 = type metadata accessor for Environment.Content();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<MultimodalListStyle.Layout>.Content);
  }
}

void sub_1BD4A5344()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
  OUTLINED_FUNCTION_9_101();
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD4A5394()
{
  OUTLINED_FUNCTION_7_121();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey>);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_13_7();
}

void sub_1BD4A53CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t *v17;

  a16 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _AnchorWritingModifier<CGRect, IconBoundsPreferenceKey> and conformance _AnchorWritingModifier<A, B>, v17, MEMORY[0x1E0CDC1B8]);
  MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v16, &a15);
  type metadata accessor for Label();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?>);
  type metadata accessor for ModifiedContent();
  OUTLINED_FUNCTION_13_7();
}

uint64_t sub_1BD4A544C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[16];

  v5[0] = a1;
  v5[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _OverlayPreferenceModifier<IconBoundsPreferenceKey, GeometryReader<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?>?> and conformance _OverlayPreferenceModifier<A, B>, v1, MEMORY[0x1E0CDCAB0]);
  return MEMORY[0x1C3B750C8](v2, v3, v5);
}

void *type metadata accessor for IconBoundsPreferenceKey()
{
  return &unk_1E763A040;
}

uint64_t destroy for ActionGlyphCircle()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActionGlyphCircle(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

void *type metadata accessor for ActionGlyphCircle()
{
  return &unk_1E763A0B8;
}

uint64_t associated type witness table accessor for View.Body : View in ActionGlyphCircle()
{
  return swift_getOpaqueTypeConformance2();
}

double ActionGlyphCircle.body.getter@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  double result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  __int128 v17;

  v8 = static Alignment.center.getter();
  v10 = v9;
  KeyPath = swift_getKeyPath();
  swift_retain();
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(_BYTE *)a4 = a2;
  *(_WORD *)(a4 + 1) = 256;
  *(_QWORD *)(a4 + 8) = a1;
  *(_QWORD *)(a4 + 16) = KeyPath;
  *(_QWORD *)(a4 + 24) = a3;
  *(_QWORD *)(a4 + 32) = v8;
  *(_QWORD *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 48) = v13;
  *(_BYTE *)(a4 + 56) = v14;
  *(_QWORD *)(a4 + 64) = v15;
  *(_BYTE *)(a4 + 72) = v16;
  result = *(double *)&v17;
  *(_OWORD *)(a4 + 80) = v17;
  *(_BYTE *)(a4 + 96) = 0;
  return result;
}

double protocol witness for View.body.getter in conformance ActionGlyphCircle@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ActionGlyphCircle.body.getter(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 24), a1);
}

uint64_t ActionGlyphCircleBackground._apply(to:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = type metadata accessor for Material();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    static Material.regular.getter();
    Material._apply(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    Color._apply(to:)();
    return swift_release();
  }
}

uint64_t protocol witness for static ShapeStyle._makeView<A>(view:inputs:) in conformance ActionGlyphCircleBackground()
{
  return static ShapeStyle._makeView<A>(view:inputs:)();
}

uint64_t protocol witness for ShapeStyle._apply(to:) in conformance ActionGlyphCircleBackground(uint64_t a1)
{
  char *v1;

  return ActionGlyphCircleBackground._apply(to:)(a1, *v1);
}

void protocol witness for ShapeStyle.resolve(in:) in conformance ActionGlyphCircleBackground()
{
  ShapeStyle<>.resolve(in:)();
  __break(1u);
}

void *IconBoundsPreferenceKey.defaultValue.unsafeMutableAddressor()
{
  return &static IconBoundsPreferenceKey.defaultValue;
}

_QWORD *specialized static IconBoundsPreferenceKey.reduce(value:nextValue:)(_QWORD *a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;

  result = a2(&v5);
  v4 = v5;
  if (v5)
  {
    result = (_QWORD *)swift_release();
    *a1 = v4;
  }
  return result;
}

uint64_t protocol witness for static PreferenceKey.defaultValue.getter in conformance IconBoundsPreferenceKey@<X0>(_QWORD *a1@<X8>)
{
  *a1 = *(_QWORD *)IconBoundsPreferenceKey.defaultValue.unsafeMutableAddressor();
  return swift_retain();
}

unint64_t lazy protocol witness table accessor for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout;
  if (!lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout)
  {
    v1 = type metadata accessor for MultimodalListStyle.Layout();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB488], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MultimodalListStyle.Layout and conformance MultimodalListStyle.Layout);
  }
  return result;
}

void sub_1BD4A58BC()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

#error "1BD4A5928: call analysis failed (funcsize=27)"

void partial apply for closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter()
{
  type metadata accessor for ClarityUIActionGlyphLabel();
}

uint64_t sub_1BD4A59B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return closure #1 in closure #3 in ClarityUIActionGlyphLabel.body.getter(v1, *(_QWORD *)(v2 + 48), v2 + ((v8 + 56) & ~v8), v4, v5, v6, v7, v3);
}

void _s7SwiftUI15ModifiedContentVyACyAA6HStackVyAA9TupleViewVyAA6SpacerV_AA6VStackVyAGyACyACy15ConversationKit17ActionGlyphCircle33_A5A29C6D3794560EE297715D1CD250B5LLVAA13_OffsetEffectVGAA19_BackgroundModifierVyAA07_ShadowG0VyAA0N0VGGG_AItGGtGGAA12_FrameLayoutVGAQGSgWOi0_(void *a1)
{
  bzero(a1, 0xF0uLL);
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>)>>, _FrameLayout>, _OffsetEffect>?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined retain of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined release of VStack<TupleView<(ModifiedContent<ModifiedContent<ActionGlyphCircle, _OffsetEffect>, _BackgroundModifier<_ShadowView<Circle>>>, Spacer)>>(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter()
{
  return partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #1 in ClarityUIActionGlyphLabel.body.getter);
}

uint64_t partial apply for closure #1 in ClarityUIActionGlyphLabel.body.getter(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t outlined copy of TupleView<(Spacer, ActionGlyphCircle)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>?);
    v2 = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Spacer, ActionGlyphCircle)>, MEMORY[0x1E0CE0680]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TupleView<(Spacer, ActionGlyphCircle)>? and conformance <A> A?);
  }
  return result;
}

uint64_t outlined consume of TupleView<(Spacer, ActionGlyphCircle)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionGlyphCircleBackground(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BD4A5C24 + 4 * byte_1BD6631BC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BD4A5C58 + 4 * byte_1BD6631B7[v4]))();
}

uint64_t sub_1BD4A5C58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4A5C60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD4A5C68);
  return result;
}

uint64_t sub_1BD4A5C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD4A5C7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BD4A5C80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4A5C88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for ActionGlyphCircleBackground()
{
  return &unk_1E763A168;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type _AllowsHitTestingModifier and conformance _AllowsHitTestingModifier();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>, _AllowsHitTestingModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>>);
    v2[0] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _ShapeView<Circle, ActionGlyphCircleBackground> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Circle, ActionGlyphCircleBackground>, MEMORY[0x1E0CD8668]);
    v2[1] = lazy protocol witness table accessor for type CallScreeningEndingState<CKStateMachine<CallScreening.State>> and conformance CallScreeningEndingState<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, ActionGlyphCircleBackground>, _OverlayModifier<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for ShapeStyle.Resolved : ShapeStyle in ActionGlyphCircleBackground()
{
  return MEMORY[0x1E0CE0778];
}

id VariableBlurUIView.__allocating_init(radius:blurMask:)(uint64_t a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return VariableBlurUIView.init(radius:blurMask:)(a1, a2);
}

void VariableBlurUIView.radius.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  VariableBlurUIView.setupLayers()();
}

uint64_t VariableBlurUIView.blurMask.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_BYTE *)(v3 + 40);
  v10 = outlined init with take of VariableBlurMask(a1, v3);
  OUTLINED_FUNCTION_11_102(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  outlined consume of VariableBlurMask(v4, v5, v6, v7, v8, v9);
  VariableBlurUIView.blurMask.didset();
  return outlined retain of SystemApertureIconAsset(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);
}

double VariableBlurUIView.radius.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

double key path getter for VariableBlurUIView.radius : VariableBlurUIView@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void VariableBlurUIView.setupLayers()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Class isa;
  void *v11;
  id v12;
  void *v13;
  Class v14;
  void *v15;
  Class v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = (void *)VariableBlurUIView.backdropLayer.getter();
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, sel_setFlipsHorizontalAxis_, objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1);

    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CAFilter);
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    CAFilter.__allocating_init(type:)(v6, v7);
    v9 = v8;
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v11 = (void *)MEMORY[0x1C3B72E00](0x7469447475706E69, 0xEB00000000726568);
    OUTLINED_FUNCTION_2_124();

    v12 = *(id *)&v1[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage];
    v13 = (void *)MEMORY[0x1C3B72E00](0x73614D7475706E69, 0xEE006567616D496BLL);
    OUTLINED_FUNCTION_2_124();

    v14 = Bool._bridgeToObjectiveC()().super.super.isa;
    v15 = (void *)MEMORY[0x1C3B72E00](0xD000000000000013, 0x80000001BD671780);
    OUTLINED_FUNCTION_2_124();

    OUTLINED_FUNCTION_2_0();
    v16 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    v17 = (void *)MEMORY[0x1C3B72E00](0x6461527475706E69, 0xEB00000000737569);
    objc_msgSend(v9, sel_setValue_forKey_, v16, v17);

    objc_msgSend(v3, sel_setAllowsHitTesting_, 0);
    objc_msgSend(v3, sel_setMasksToBounds_, 1);
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v20 = v19;
    v21 = v3;
    CAFilter.__allocating_init(type:)(v18, v20);
    v23 = v22;
    objc_msgSend(v21, sel_setCompositingFilter_, v22);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    v24 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v24 + 16) = xmmword_1BD6441D0;
    *(_QWORD *)(v24 + 56) = v5;
    *(_QWORD *)(v24 + 32) = v9;
    outlined bridged method (mbnn) of @objc CALayer.filters.setter(v24, v21);

  }
  OUTLINED_FUNCTION_5_22();
}

void VariableBlurUIView.radius.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void VariableBlurUIView.radius.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    VariableBlurUIView.setupLayers()();
  OUTLINED_FUNCTION_0();
}

void VariableBlurUIView.blurMask.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  LOBYTE(v3) = *(_BYTE *)(v3 + 40);
  outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v3);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v3;
  OUTLINED_FUNCTION_5_22();
}

id key path getter for VariableBlurUIView.blurMask : VariableBlurUIView@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask;
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  v9 = *(_BYTE *)(v3 + 40);
  *(_BYTE *)(a2 + 40) = v9;
  return outlined copy of VariableBlurMask(v4, v5, v6, v7, v8, v9);
}

uint64_t key path setter for VariableBlurUIView.blurMask : VariableBlurUIView(uint64_t a1)
{
  _BYTE v2[48];

  outlined init with take of VariableBlurMask(a1, (uint64_t)v2);
  outlined retain of SystemApertureIconAsset((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  return VariableBlurUIView.blurMask.setter((uint64_t)v2);
}

void VariableBlurUIView.blurMask.didset()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  _QWORD aBlock[6];

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask];
  swift_beginAccess();
  v2 = *(void **)v1;
  v3 = *((_QWORD *)v1 + 1);
  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[40];
  outlined copy of VariableBlurMask(v2, v3, v4, v5, v6, v7);
  objc_msgSend(v0, sel_bounds);
  v10 = v8;
  v11 = v9;
  if (!(v7 >> 6))
  {
    v12 = static VariableBlurMask.gradientMask(size:start:end:mid:)(v6, v7 & 1, v8, v9, *(double *)&v2, *(double *)&v3, *(double *)&v4, *(double *)&v5);
    goto LABEL_5;
  }
  if (v7 >> 6 == 1)
  {
    v12 = static VariableBlurMask.shadowMask(size:fadeLength:)(v8, v9, *(double *)&v2);
LABEL_5:
    v13 = (id)v12;
LABEL_8:
    VariableBlurUIView.blurMaskImage.setter(v13);
    return;
  }
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3828]);
  v15 = v2;
  v20 = objc_msgSend(v14, sel_initWithSize_, v10, v11);
  v16 = swift_allocObject();
  *(double *)(v16 + 16) = v10;
  *(double *)(v16 + 24) = v11;
  *(_QWORD *)(v16 + 32) = v15;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = closure #1 in VariableBlurMask.image(size:)partial apply;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  aBlock[3] = &block_descriptor_58_0;
  v18 = _Block_copy(aBlock);
  outlined copy of VariableBlurMask(v2, v3, v4, v5, v6, v7);
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v20, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v16 & 1) == 0)
  {
    v13 = objc_msgSend(v19, sel_CGImage);
    outlined consume of VariableBlurMask(v2, v3, v4, v5, v6, v7);
    swift_release();

    outlined consume of VariableBlurMask(v2, v3, v4, v5, v6, v7);
    goto LABEL_8;
  }
  __break(1u);
}

CGImageRef_optional __swiftcall VariableBlurMask.image(size:)(CGSize size)
{
  uint64_t v1;
  double height;
  double width;
  void *v4;
  double v5;
  double v6;
  unsigned __int8 v7;
  int v8;
  id v10;
  double v11;
  id v12;
  id v13;
  id v14;
  double *v15;
  uint64_t v16;
  void *v17;
  id v18;
  CGImageRef_optional result;
  _QWORD v20[6];
  void *v21;
  double v22[5];
  unsigned __int8 v23;

  height = size.height;
  width = size.width;
  outlined init with take of VariableBlurMask(v1, (uint64_t)&v21);
  v4 = v21;
  outlined init with take of VariableBlurMask(v1, (uint64_t)v22);
  v7 = v23;
  v8 = v23 >> 6;
  if (!v8)
  {
    v23 &= 0x3Fu;
    return (CGImageRef_optional)static VariableBlurMask.gradientMask(size:start:end:mid:)(*(uint64_t *)&v22[4], v7 & 1, width, height, v22[0], v22[1], v22[2], v22[3]);
  }
  if (v8 == 1)
  {
    v23 &= 0x3Fu;
    return (CGImageRef_optional)OUTLINED_FUNCTION_13_108(v5, v6, v22[0]);
  }
  v23 &= 0x3Fu;
  v11 = v22[0];
  v12 = objc_allocWithZone(MEMORY[0x1E0DC3828]);
  v13 = v4;
  v14 = OUTLINED_FUNCTION_4_97(v12, sel_initWithSize_);
  v15 = (double *)OUTLINED_FUNCTION_15();
  v15[2] = width;
  v15[3] = height;
  v15[4] = v11;
  v16 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v16 + 16) = partial apply for closure #1 in VariableBlurMask.image(size:);
  *(_QWORD *)(v16 + 24) = v15;
  v20[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  v20[5] = v16;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v20[3] = &block_descriptor_96;
  v17 = _Block_copy(v20);
  outlined retain of SystemApertureIconAsset(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v14, sel_imageWithActions_, v17);

  _Block_release(v17);
  LOBYTE(v14) = OUTLINED_FUNCTION_7_122();
  result.value = (CGImageRef)swift_release();
  if ((v14 & 1) == 0)
  {
    v10 = objc_msgSend(v18, sel_CGImage);
    outlined retain of SystemApertureIconAsset(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);
    swift_release();

    return (CGImageRef_optional)v10;
  }
  __break(1u);
  return result;
}

void VariableBlurUIView.blurMaskImage.setter(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage) = a1;
  v3 = a1;

  VariableBlurUIView.setupLayers()();
}

void VariableBlurUIView.blurMask.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void VariableBlurUIView.blurMask.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    VariableBlurUIView.blurMask.didset();
  OUTLINED_FUNCTION_0();
}

id VariableBlurUIView.init(radius:blurMask:)(uint64_t a1, double a2)
{
  char *v2;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  objc_super v12;

  v5 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage] = 0;
  *(double *)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius] = a2;
  v6 = outlined init with take of VariableBlurMask(a1, (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask]);
  OUTLINED_FUNCTION_11_102(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  v12.receiver = v2;
  v12.super_class = v5;
  v7 = objc_msgSendSuper2(&v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = (void *)objc_opt_self();
  v9 = v7;
  v10 = objc_msgSend(v8, sel_clearColor);
  OUTLINED_FUNCTION_11_102((uint64_t)objc_msgSend(v9, sel_setBackgroundColor_, v10), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined consume of VariableBlurMask);

  return v9;
}

id VariableBlurUIView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void VariableBlurUIView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMaskImage] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void static VariableBlurUIView.layerClass.getter()
{
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for CABackdropLayer);
}

uint64_t VariableBlurUIView.backdropLayer.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_layer);
  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

Swift::Void __swiftcall VariableBlurUIView.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  unsigned int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  _QWORD aBlock[6];
  objc_super v24;

  v24.receiver = v0;
  v24.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v24, sel_layoutSubviews);
  v1 = &v0[OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_blurMask];
  OUTLINED_FUNCTION_2_0();
  v2 = *(void **)v1;
  v3 = *((double *)v1 + 1);
  v4 = *((double *)v1 + 2);
  v5 = *((double *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[40];
  OUTLINED_FUNCTION_4_135();
  objc_msgSend(v0, sel_bounds);
  v12 = v10;
  v13 = v11;
  if (!(v7 >> 6))
  {
    v14 = static VariableBlurMask.gradientMask(size:start:end:mid:)(v6, v7 & 1, v10, v11, *(double *)&v2, v3, v4, v5);
    goto LABEL_5;
  }
  if (v7 >> 6 == 1)
  {
    v14 = OUTLINED_FUNCTION_13_108(v8, v9, *(double *)&v2);
LABEL_5:
    v15 = (id)v14;
LABEL_8:
    VariableBlurUIView.blurMaskImage.setter(v15);
    return;
  }
  v16 = objc_allocWithZone(MEMORY[0x1E0DC3828]);
  v17 = v2;
  v22 = OUTLINED_FUNCTION_4_97(v16, sel_initWithSize_);
  v18 = OUTLINED_FUNCTION_15();
  *(double *)(v18 + 16) = v12;
  *(double *)(v18 + 24) = v13;
  *(_QWORD *)(v18 + 32) = v17;
  v19 = OUTLINED_FUNCTION_15();
  *(_QWORD *)(v19 + 16) = closure #1 in VariableBlurMask.image(size:)partial apply;
  *(_QWORD *)(v19 + 24) = v18;
  aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  aBlock[3] = &block_descriptor_14_0;
  v20 = _Block_copy(aBlock);
  OUTLINED_FUNCTION_4_135();
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v22, sel_imageWithActions_, v20);

  _Block_release(v20);
  LOBYTE(v18) = OUTLINED_FUNCTION_7_122();
  swift_release();
  if ((v18 & 1) == 0)
  {
    v15 = objc_msgSend(v21, sel_CGImage);
    OUTLINED_FUNCTION_5_129();
    swift_release();

    OUTLINED_FUNCTION_5_129();
    goto LABEL_8;
  }
  __break(1u);
}

id VariableBlurUIView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void VariableBlurUIView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VariableBlurUIView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double VariableBlurView.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t VariableBlurView.blurMask.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of VariableBlurMask(v1 + 8, a1);
}

__n128 VariableBlurView.init(radius:blurMask:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  char v6;
  __n128 result;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;
  char v11;

  outlined init with take of VariableBlurMask(a1, (uint64_t)v9);
  v5 = v10;
  v6 = v11;
  result = (__n128)v9[0];
  v8 = v9[1];
  *(double *)a2 = a3;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 40) = v5;
  *(_BYTE *)(a2 + 48) = v6;
  return result;
}

id VariableBlurView.makeUIView(context:)()
{
  double *v0;
  double v1;
  id v2;
  _BYTE v4[48];

  v1 = *v0;
  outlined init with take of VariableBlurMask((uint64_t)(v0 + 1), (uint64_t)v4);
  v2 = objc_allocWithZone((Class)type metadata accessor for VariableBlurUIView());
  outlined retain of SystemApertureIconAsset((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  return VariableBlurUIView.init(radius:blurMask:)((uint64_t)v4, v1);
}

uint64_t VariableBlurView.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _BYTE v5[48];

  v2 = *v1;
  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit18VariableBlurUIView_radius);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  VariableBlurUIView.setupLayers()();
  outlined init with take of VariableBlurMask((uint64_t)(v1 + 1), (uint64_t)v5);
  outlined retain of SystemApertureIconAsset((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of VariableBlurMask);
  return VariableBlurUIView.blurMask.setter((uint64_t)v5);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance VariableBlurView()
{
  return VariableBlurView.makeUIView(context:)();
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance VariableBlurView(uint64_t a1)
{
  return VariableBlurView.updateUIView(_:context:)(a1);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance VariableBlurView()
{
  lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance VariableBlurView()
{
  lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance VariableBlurView()
{
  lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t static VariableBlurMask.gradientMask(size:start:end:mid:)(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t result;
  id v22;
  _QWORD v23[6];

  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a3, a4);
  v17 = swift_allocObject();
  *(double *)(v17 + 16) = a3;
  *(double *)(v17 + 24) = a4;
  *(double *)(v17 + 32) = a5;
  *(double *)(v17 + 40) = a6;
  *(double *)(v17 + 48) = a7;
  *(double *)(v17 + 56) = a8;
  *(_QWORD *)(v17 + 64) = a1;
  *(_BYTE *)(v17 + 72) = a2 & 1;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = partial apply for closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:);
  *(_QWORD *)(v18 + 24) = v17;
  v23[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v23[5] = v18;
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 1107296256;
  v23[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v23[3] = &block_descriptor_27_2;
  v19 = _Block_copy(v23);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v16, sel_imageWithActions_, v19);

  _Block_release(v19);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = objc_msgSend(v20, sel_CGImage);
    swift_release();

    return (uint64_t)v22;
  }
  return result;
}

uint64_t static VariableBlurMask.shadowMask(size:fadeLength:)(CGFloat a1, CGFloat a2, double a3)
{
  CGFloat v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, void *);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  CGRect v32;
  CGRect v33;

  v6 = -a3;
  v32.origin.x = 0.0;
  v32.origin.y = 0.0;
  v32.size.width = a1;
  v32.size.height = a2;
  v33 = CGRectInset(v32, v6, v6);
  x = v33.origin.x;
  y = v33.origin.y;
  width = v33.size.width;
  height = v33.size.height;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v33.size.width, v33.size.height);
  v12 = swift_allocObject();
  *(CGFloat *)(v12 + 16) = x;
  *(CGFloat *)(v12 + 24) = y;
  *(CGFloat *)(v12 + 32) = width;
  *(CGFloat *)(v12 + 40) = height;
  *(double *)(v12 + 48) = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = partial apply for closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:);
  *(_QWORD *)(v13 + 24) = v12;
  v30 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v31 = v13;
  v14 = MEMORY[0x1E0C809B0];
  v26 = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
  v29 = &block_descriptor_37_3;
  v15 = _Block_copy(&v26);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v11, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v18 = objc_msgSend(v16, sel_CGImage);

    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, a1, a2);
    v20 = swift_allocObject();
    *(CGFloat *)(v20 + 16) = a1;
    *(CGFloat *)(v20 + 24) = a2;
    *(_QWORD *)(v20 + 32) = v18;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = partial apply for closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:);
    *(_QWORD *)(v21 + 24) = v20;
    v30 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    v31 = v21;
    v26 = v14;
    v27 = 1107296256;
    v28 = thunk for @escaping @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    v29 = &block_descriptor_47_2;
    v22 = _Block_copy(&v26);
    v23 = v18;
    swift_retain();
    swift_release();
    v24 = objc_msgSend(v19, sel_imageWithActions_, v22);

    _Block_release(v22);
    LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v19 & 1) == 0)
    {
      v25 = objc_msgSend(v24, sel_CGImage);
      swift_release();
      swift_release();

      return (uint64_t)v25;
    }
  }
  __break(1u);
  return result;
}

void closure #1 in VariableBlurMask.image(size:)(void *a1, void *a2, double a3, double a4)
{
  id v8;
  id v9;
  id v10;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, a3, a4);
  v9 = objc_msgSend(a2, sel_CGImage);
  objc_msgSend(v8, sel_setContents_, v9);

  objc_msgSend(v8, sel_setContentsGravity_, *MEMORY[0x1E0CD2F70]);
  v10 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v8, sel_renderInContext_, v10);

}

uint64_t sub_1BD4A77C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in VariableBlurMask.image(size:)(void *a1)
{
  uint64_t v1;

  closure #1 in VariableBlurMask.image(size:)(a1, *(void **)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t type metadata accessor for VariableBlurUIView()
{
  return objc_opt_self();
}

unint64_t lazy protocol witness table accessor for type VariableBlurView and conformance VariableBlurView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView;
  if (!lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VariableBlurView, &type metadata for VariableBlurView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView;
  if (!lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for VariableBlurView, &type metadata for VariableBlurView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VariableBlurView and conformance VariableBlurView);
  }
  return result;
}

void sub_1BD4A7860(double *a1)
{
  VariableBlurUIView.radius.setter(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for VariableBlurUIView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VariableBlurUIView.__allocating_init(radius:blurMask:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(uint64_t (**)(_OWORD *))(v1 + 104);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v2;
  v9 = v3;
  return v4(v7);
}

uint64_t initializeWithCopy for VariableBlurView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  outlined copy of VariableBlurMask(v3, v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for VariableBlurView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  outlined copy of VariableBlurMask(v3, v4, v5, v6, v7, v8);
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v14 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  outlined consume of VariableBlurMask(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for VariableBlurView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(void **)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  v10 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v4;
  outlined consume of VariableBlurMask(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableBlurView(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 48) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VariableBlurView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 40) = 0;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 8) = 0u;
      *(_BYTE *)(result + 48) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VariableBlurView()
{
  return &type metadata for VariableBlurView;
}

void destroy for VariableBlurMask(uint64_t a1)
{
  outlined consume of VariableBlurMask(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  outlined copy of VariableBlurMask(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  outlined copy of VariableBlurMask(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  outlined consume of VariableBlurMask(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for VariableBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  outlined consume of VariableBlurMask(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for VariableBlurMask(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7E && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 40) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VariableBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 32) = 0;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 40) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VariableBlurMask()
{
  return &type metadata for VariableBlurMask;
}

void closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, uint64_t a8, char a9)
{
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2790]), sel_init);
  objc_msgSend(v17, sel_setBounds_, 0.0, 0.0, a2, a3);
  objc_msgSend(v17, sel_setStartPoint_, a4, a5);
  objc_msgSend(v17, sel_setEndPoint_, a6, a7);
  if ((a9 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BD645380;
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v30, sel_blackColor);
    v32 = objc_msgSend(v31, sel_colorWithAlphaComponent_, 0.0);

    v33 = objc_msgSend(v32, sel_CGColor);
    type metadata accessor for CGColorRef(0);
    v35 = v34;
    *(_QWORD *)(v19 + 56) = v34;
    *(_QWORD *)(v19 + 32) = v33;
    v36 = objc_msgSend(v30, sel_blackColor);
    v37 = objc_msgSend(v36, sel_CGColor);

    *(_QWORD *)(v19 + 88) = v35;
    *(_QWORD *)(v19 + 64) = v37;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BD644B60;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
    *(NSNumber *)(v18 + 32) = NSNumber.init(floatLiteral:)(0.0);
    *(NSNumber *)(v18 + 40) = CGFloat._bridgeToObjectiveC()();
    *(NSNumber *)(v18 + 48) = NSNumber.init(floatLiteral:)(1.0);
    specialized Array._endMutation()();
    outlined bridged method (mbnn) of @objc CAGradientLayer.locations.setter(v18, v17);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BD646740;
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_blackColor);
    v22 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.0);

    v23 = objc_msgSend(v22, sel_CGColor);
    type metadata accessor for CGColorRef(0);
    v25 = v24;
    *(_QWORD *)(v19 + 56) = v24;
    *(_QWORD *)(v19 + 32) = v23;
    v26 = objc_msgSend(v20, sel_blackColor);
    v27 = objc_msgSend(v26, sel_CGColor);

    *(_QWORD *)(v19 + 88) = v25;
    *(_QWORD *)(v19 + 64) = v27;
    v28 = objc_msgSend(v20, sel_blackColor);
    v29 = objc_msgSend(v28, sel_CGColor);

    *(_QWORD *)(v19 + 120) = v25;
    *(_QWORD *)(v19 + 96) = v29;
  }
  outlined bridged method (mbnn) of @objc CAGradientLayer.colors.setter(v19, v17);
  v38 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v17, sel_renderInContext_, v38);

}

uint64_t sub_1BD4A810C()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(void *a1)
{
  uint64_t v1;

  closure #1 in static VariableBlurMask.gradientMask(size:start:end:mid:)(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
}

void closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  CGContext *v17;
  id v18;
  CGColor *v19;
  id v20;
  CGSize v21;
  CGRect v22;
  CGRect v23;

  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  objc_msgSend(v12, sel_setFrame_, a2, a3, a4, a5);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  v23 = CGRectOffset(v22, -a6, a6 * 3.0);
  objc_msgSend(v13, sel_setFrame_, v23.origin.x, v23.origin.y, v23.size.width, v23.size.height);
  objc_msgSend(v12, sel_addSublayer_, v13);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_blackColor);
  v16 = objc_msgSend(v15, sel_CGColor);

  objc_msgSend(v13, sel_setBackgroundColor_, v16);
  v17 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v18 = objc_msgSend(v14, sel_blackColor);
  v19 = (CGColor *)objc_msgSend(v18, sel_CGColor);

  v21.width = a6;
  v21.height = -a6;
  CGContextSetShadowWithColor(v17, v21, a6, v19);

  v20 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v12, sel_renderInContext_, v20);

}

void closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1, uint64_t a2, double a3, double a4)
{
  id v8;
  id v9;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  objc_msgSend(v8, sel_setFrame_, 0.0, 0.0, a3, a4);
  objc_msgSend(v8, sel_setContents_, a2);
  objc_msgSend(v8, sel_setContentsGravity_, *MEMORY[0x1E0CD2F70]);
  v9 = objc_msgSend(a1, sel_CGContext);
  objc_msgSend(v8, sel_renderInContext_, v9);

}

uint64_t sub_1BD4A8414()
{
  return OUTLINED_FUNCTION_23_4();
}

void partial apply for closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1)
{
  CGFloat *v1;

  closure #1 in static VariableBlurMask.shadowMask(size:fadeLength:)(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void partial apply for closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(void *a1)
{
  uint64_t v1;

  closure #2 in static VariableBlurMask.shadowMask(size:fadeLength:)(a1, *(_QWORD *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t *Defaults.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static Defaults.shared;
}

uint64_t Defaults.__allocating_init()()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_13();
  Defaults.init()();
  return v0;
}

uint64_t static Defaults.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return swift_retain();
}

id Defaults.featureFlags.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void Defaults.enableAudioVisualization.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.enableAudioVisualizationLogging.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(1u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.forceVideoLayerVisible.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(3u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldIgnorePoorConnection.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(4u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.showsForceAudioPriorityButton.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(5u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.startUplinkMuted.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(2u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldEnableEffectsRendering.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(6u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

id Defaults.supportsVideo.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_allowsVideo);
}

id Defaults.allowsScreenSharing.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_allowsScreenSharing);
}

id Defaults.requestToScreenShareEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_requestToScreenShareEnabled);
}

void Defaults.allowsScreenSharingNotifications.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    OUTLINED_FUNCTION_0_150(0x59u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

id Defaults.supportsEffects.getter()
{
  if ((OUTLINED_FUNCTION_48_5() & 1) != 0)
    return objc_msgSend((id)objc_opt_self(), sel_supportsEffects);
  else
    return 0;
}

void Defaults.supportsCinematicFraming.getter()
{
  void *v0;
  id v1;

  if ((OUTLINED_FUNCTION_48_5() & 1) != 0)
  {
    v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedInstance), sel_videoDeviceController);
    OUTLINED_FUNCTION_49_5();
    objc_msgSend(v0, sel_currentInputSupportsCinematicFraming);

  }
  OUTLINED_FUNCTION_0();
}

id Defaults.sharePlayAvailable.getter()
{
  return Defaults.sharePlayAvailable.getter((SEL *)&selRef_isSharePlayAvailable);
}

id Defaults.screenSharingAvailable.getter()
{
  return Defaults.sharePlayAvailable.getter((SEL *)&selRef_isScreenSharingAvailable);
}

id Defaults.sharePlayAvailable.getter(SEL *a1)
{
  id v2;
  id v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_conversationManager);

  v4 = objc_msgSend(v3, *a1);
  return v4;
}

void Defaults.forceScreenSharingAvailable.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x57u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.bannerDragControllerEnabled.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x41u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldShowVoicemailIntroText.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x42u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldShowVoicemailIntroText.setter(char a1)
{
  Defaults.shouldShowVoicemailIntroText.setter(a1, 0x42u);
}

void Defaults.shouldShowVoicemailIntroText.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.shouldShowVoicemailIntroText.getter();
  OUTLINED_FUNCTION_61_13(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldShowVoicemailIntroText.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.shouldShowVoicemailIntroText.setter(v1);
}

void sub_1BD4A8A40()
{
  OUTLINED_FUNCTION_0();
}

id Defaults.sckSystemPickerEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_sckSystemPickerEnabled);
}

void Defaults.shouldShowVideoLayerDebugColors.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x52u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

id Defaults.gelatoEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_gelatoEnabled);
}

id Defaults.collaborateTogetherEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_collaborateTogetherEnabled);
}

void Defaults.oneCollaborationHUDPerDocument.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x53u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

id Defaults.supportsScreenSharingCALayerHostMode.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_screenSharingCALayerHostMode);
}

id Defaults.supportsScreenSharingDeskView.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_screenSharingDeskViewEnabled);
}

id Defaults.gameCenterSharePlayIntegration.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_gameCenterSharePlayIntegration);
}

BOOL Defaults.useFlattenedUI.getter()
{
  return (OUTLINED_FUNCTION_48_5() & 1) == 0;
}

void Defaults.activelyCommunicatingAudioThreshold.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8BDC()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.activelyCommunicatingVideoThreshold.getter()
{
  Defaults.float(for:default:)();
}

void Defaults.mimimumActiveDuration.getter()
{
  Defaults.double(for:default:)();
}

void sub_1BD4A8C30()
{
  OUTLINED_FUNCTION_22_82();
}

uint64_t Defaults.forceMostActiveParticipantHandle.getter()
{
  char v0;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
    return Defaults.string(for:default:)(0xAu, 0);
  else
    return 0;
}

void Defaults.mostActiveParticipantChangeInterval.getter()
{
  Defaults.double(for:default:)();
}

void sub_1BD4A8C88()
{
  OUTLINED_FUNCTION_22_82();
}

void Defaults.shouldShowProminenceDebuggingLabels.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0xCu);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.organicSashFontSize.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A8CF8(float a1)
{
  return a1;
}

void Defaults.organicCellCornerRadius.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A8D18(float a1)
{
  return a1;
}

void Defaults.screenSharingCornerRadius.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A8D38(float a1)
{
  return a1;
}

void Defaults.organicCellGlowSizeMultiplier.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A8D5C(float a1)
{
  return a1;
}

void Defaults.emaTimeScale.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8D80()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.emaTimerFrequency.getter()
{
  Defaults.double(for:default:)();
}

void sub_1BD4A8DA8()
{
  OUTLINED_FUNCTION_22_82();
}

void Defaults.emaProminenceWeight1.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8DD0()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.emaProminenceWeight2.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8DF8()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.emaProminenceWeight3.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8E20()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.emaProminenceWeight4.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8E44()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.emaMinUIUpdateInterval.getter()
{
  Defaults.double(for:default:)();
}

void sub_1BD4A8E6C()
{
  OUTLINED_FUNCTION_22_82();
}

void Defaults.emaLowerBoundTreshold.getter()
{
  Defaults.float(for:default:)();
}

void sub_1BD4A8E94()
{
  OUTLINED_FUNCTION_9_102();
}

void Defaults.shouldCenterRoster.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x25u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

id Defaults.memojiCameraEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_memojiCameraEnabled);
}

void Defaults.gridInterItemSpacing.getter()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentDevice);
  v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2)
  {
    objc_msgSend(objc_msgSend(v0, sel_currentDevice), sel_userInterfaceIdiom);
    OUTLINED_FUNCTION_49_5();
  }
  Defaults.float(for:default:)();
}

double sub_1BD4A8FA4(float a1)
{
  return a1;
}

void Defaults.gridLayoutProminenceScaleAmount.getter()
{
  static Platform.current.getter();
  Defaults.float(for:default:)();
}

double sub_1BD4A8FF0(float a1)
{
  return a1;
}

void Defaults.shouldUseGridView.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x2Bu);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldUseGridView.setter(char a1)
{
  Defaults.shouldShowVoicemailIntroText.setter(a1, 0x2Bu);
}

void Defaults.shouldUseGridView.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.shouldUseGridView.getter();
  OUTLINED_FUNCTION_61_13(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldUseGridView.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.shouldUseGridView.setter(v1);
}

void sub_1BD4A908C()
{
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.maxHighVideoQualityParticipantCount.getter()
{
  char v0;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
    return Defaults.int(for:default:)(0x2Cu, 2);
  else
    return 2;
}

uint64_t Defaults.maxMediumVideoQualityParticipantCount.getter()
{
  char v0;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
    return Defaults.int(for:default:)(0x2Du, 8);
  else
    return 8;
}

void Defaults.allowAudioProminence.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x27u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.allowVideoProminence.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x26u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.disableAutomaticDrawerHiding.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x28u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.allowLocalVideoRecording.getter()
{
  return TUAllowLocalVideoRecording();
}

BOOL Defaults.reduceMotion.getter()
{
  return UIAccessibilityIsReduceMotionEnabled();
}

id Defaults.conversationHandoffEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_conversationHandoffEnabled);
}

id Defaults.lagunaEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_lagunaEnabled);
}

id Defaults.lagunaPullBackEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_lagunaPullBackEnabled);
}

id Defaults.uPlusNDowngradeAvailable.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_uPlusNDowngrade);
}

id Defaults.nameAndPhotoEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_nameAndPhotoEnabled);
}

id Defaults.uPlusOneScreenSharingAvailable.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_uPlusOneScreenSharing);
}

id Defaults.previewMSROptimizationEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_previewMSROptimizationEnabled);
}

void Defaults.fullScreenOneToOneInGFTEnabled.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x4Eu);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.avLessWantsSceneEnabled.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x4Fu);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x56u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

void Defaults.lastUserRequestedLocalParticipantCorner.getter()
{
  uint64_t v0;
  Swift::Int v1;

  type metadata accessor for AppUtilities();
  if (static AppUtilities.isRTL.getter())
    v0 = 2;
  else
    v0 = 3;
  v1 = Defaults.int(for:default:)(0x50u, v0);
  MultiwayViewConstraintsController.MultiwayCorner.init(rawValue:)(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.lastUserRequestedLocalParticipantCorner.setter(unsigned __int8 a1)
{
  _QWORD v1[4];

  v1[3] = MEMORY[0x1E0DEB418];
  v1[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v1, 0x50u);
}

uint64_t sub_1BD4A9444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  return OUTLINED_FUNCTION_6_107(a1, a2, a3, a4, a5, a6, a7, a8, v9);
}

void Defaults.lastUserRequestedLocalParticipantCorner.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.lastUserRequestedLocalParticipantCorner.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

void Defaults.lastUserRequestedLocalParticipantCorner.modify(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.lastUserRequestedLocalParticipantCorner.setter(v1);
}

void sub_1BD4A9494()
{
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.participantEmailsToShowAsNeedingAuthorization.getter()
{
  char v0;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
    return specialized Defaults.array<A>(for:default:)(0x2Au, MEMORY[0x1E0DEE9D8]);
  else
    return MEMORY[0x1E0DEE9D8];
}

void Defaults.captionsDisclosureHasBeenShown.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x43u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.captionsDisclosureHasBeenShown.setter(char a1)
{
  Defaults.shouldShowVoicemailIntroText.setter(a1, 0x43u);
}

void Defaults.captionsDisclosureHasBeenShown.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.captionsDisclosureHasBeenShown.getter();
  OUTLINED_FUNCTION_61_13(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.captionsDisclosureHasBeenShown.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.captionsDisclosureHasBeenShown.setter(v1);
}

void sub_1BD4A9564()
{
  OUTLINED_FUNCTION_0();
}

BOOL Defaults.captionsUserAXSettingEnabled.getter()
{
  return _AXSFaceTimeCaptionsEnabled() != 0;
}

void Defaults.captionsUserAXSettingEnabled.setter(char a1)
{
  uint64_t v1;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 728))() & 1) == (a1 & 1))
    OUTLINED_FUNCTION_0();
  else
    _AXSSetFaceTimeCaptionsEnabled();
}

void Defaults.captionsUserAXSettingEnabled.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  *(_BYTE *)(v1 + 8) = _AXSFaceTimeCaptionsEnabled() != 0;
  OUTLINED_FUNCTION_0();
}

void Defaults.captionsUserAXSettingEnabled.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.captionsUserAXSettingEnabled.setter(v1);
  OUTLINED_FUNCTION_0();
}

double Defaults.captionsLowConfidenceThreshold.getter()
{
  double result;
  char v1;

  Defaults.isInternalInstall.getter();
  result = 50.0;
  if ((v1 & 1) != 0)
    Defaults.double(for:default:)();
  return result;
}

void Defaults.captionsAllowedInScreenshots.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x45u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.captionsUnavailableThreshold.getter()
{
  char v0;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
    return OUTLINED_FUNCTION_21_84(0x46u);
  else
    return 3;
}

double Defaults.captionsTimeToSuppression.getter()
{
  double result;
  char v1;

  Defaults.isInternalInstall.getter();
  result = 5.0;
  if ((v1 & 1) != 0)
    Defaults.double(for:default:)();
  return result;
}

double Defaults.captionsTimeToLive.getter()
{
  double result;
  char v1;

  Defaults.isInternalInstall.getter();
  result = 60.0;
  if ((v1 & 1) != 0)
    Defaults.double(for:default:)();
  return result;
}

void Defaults.mockScreeningGeneratorEnabled.getter()
{
  char v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x49u);
  OUTLINED_FUNCTION_49_5();
  if ((v0 & 1) != 0)
    Defaults.isInternalInstall.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.secondsBeforeAnsweringAsScreening.getter()
{
  return Defaults.int(for:default:)(0x4Au, 17);
}

uint64_t Defaults.maxSecondsForScreeningState.getter()
{
  return Defaults.int(for:default:)(0x4Bu, 120);
}

void Defaults.screeningDebugSendConstantNotifications.getter()
{
  char v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x4Cu);
  OUTLINED_FUNCTION_49_5();
  if ((v0 & 1) != 0)
    Defaults.isInternalInstall.getter();
  OUTLINED_FUNCTION_0();
}

void Defaults.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A980C(float a1)
{
  return a1;
}

void Defaults.shouldShowLinkEducationFirstTimeAlert.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_4_136(0x40u);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldShowLinkEducationFirstTimeAlert.setter(char a1)
{
  Defaults.shouldShowVoicemailIntroText.setter(a1, 0x40u);
}

void Defaults.shouldShowLinkEducationFirstTimeAlert.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.shouldShowLinkEducationFirstTimeAlert.getter();
  OUTLINED_FUNCTION_61_13(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.shouldShowLinkEducationFirstTimeAlert.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.shouldShowLinkEducationFirstTimeAlert.setter(v1);
}

void sub_1BD4A98A8()
{
  OUTLINED_FUNCTION_0();
}

id Defaults.avLessSharePlayEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_avLessSharePlayEnabled);
}

id Defaults.wombatWisdomEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_wombatWisdomEnabled);
}

uint64_t key path setter for Defaults.participantHandlesOfAcknowledgedRCSessions : Defaults(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 896);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t Defaults.participantHandlesOfAcknowledgedRCSessions.getter()
{
  return specialized Defaults.array<A>(for:default:)(0x58u, MEMORY[0x1E0DEE9D8]);
}

void Defaults.participantHandlesOfAcknowledgedRCSessions.setter(uint64_t a1)
{
  _QWORD v2[4];

  v2[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  v2[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v2, 0x58u);
}

uint64_t sub_1BD4A9964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  return OUTLINED_FUNCTION_6_107(a1, a2, a3, a4, a5, a6, a7, a8, v9);
}

void Defaults.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = specialized Defaults.array<A>(for:default:)(0x58u, MEMORY[0x1E0DEE9D8]);
  OUTLINED_FUNCTION_0();
}

void Defaults.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    Defaults.participantHandlesOfAcknowledgedRCSessions.setter(v2);
  }
  Defaults.participantHandlesOfAcknowledgedRCSessions.setter(*a1);
}

void sub_1BD4A99EC()
{
  OUTLINED_FUNCTION_0();
}

void Defaults.systemHUDDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9A0C(float a1)
{
  return a1;
}

void Defaults.inCallHUDDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9A2C(float a1)
{
  return a1;
}

void Defaults.pendingAuthorizationDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9A4C(float a1)
{
  return a1;
}

void Defaults.handoffApproveDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9A6C(float a1)
{
  return a1;
}

void Defaults.shareNameAndPhotoDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9A90(float a1)
{
  return a1;
}

void Defaults.forceOutgoingSNaPBanner.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x3Au);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.forceIncomingSNaPBanner.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  OUTLINED_FUNCTION_0_150(0x3Bu);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void Defaults.startNoticeDismissal.getter()
{
  OUTLINED_FUNCTION_30_70();
}

double sub_1BD4A9B3C(float a1)
{
  return a1;
}

void Defaults.priorityNoticeDismissal.getter()
{
  OUTLINED_FUNCTION_30_70();
}

double sub_1BD4A9B58(float a1)
{
  return a1;
}

void Defaults.noticeDismissal.getter()
{
  OUTLINED_FUNCTION_30_70();
}

double sub_1BD4A9B74(float a1)
{
  return a1;
}

uint64_t Defaults.noticeExpirationSeconds.getter()
{
  return OUTLINED_FUNCTION_21_84(0x34u);
}

void Defaults.noticeCoordinatorTimeout.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9BAC(float a1)
{
  return a1;
}

void Defaults.ephemeralAlertDismissal.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9BCC(float a1)
{
  return a1;
}

void Defaults.controlsCrossFadeDuration.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9BF0(float a1)
{
  return a1;
}

uint64_t Defaults.countdownDuration.getter()
{
  return OUTLINED_FUNCTION_21_84(0x3Cu);
}

void Defaults.countdownTickDuration.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9C28(float a1)
{
  return a1;
}

void Defaults.joinCountdownThreshold.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9C4C(float a1)
{
  return a1;
}

void Defaults.joinCountdownDuration.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9C6C(float a1)
{
  return a1;
}

void Defaults.reactionDuration.getter()
{
  Defaults.float(for:default:)();
}

double sub_1BD4A9C8C(float a1)
{
  return a1;
}

void Defaults.radarReportingEnabled.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x54u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

void Defaults.testTrackingFailure.getter()
{
  char v0;
  id v1;

  Defaults.isInternalInstall.getter();
  if ((v0 & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    OUTLINED_FUNCTION_0_150(0x55u);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

void Defaults.testTrackingFailure.setter(char a1)
{
  Defaults.shouldShowVoicemailIntroText.setter(a1, 0x55u);
}

void Defaults.shouldShowVoicemailIntroText.setter(char a1, unsigned __int8 a2)
{
  _BYTE v2[24];
  uint64_t v3;

  v3 = MEMORY[0x1E0DEAFA0];
  v2[0] = a1;
  Defaults.writeDefaults(value:for:)((uint64_t)v2, a2);
}

uint64_t sub_1BD4A9D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  return OUTLINED_FUNCTION_6_107(a1, a2, a3, a4, a5, a6, a7, a8, v9);
}

void Defaults.testTrackingFailure.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_25_7(a1);
  Defaults.testTrackingFailure.getter();
  OUTLINED_FUNCTION_61_13(v1);
  OUTLINED_FUNCTION_0();
}

void Defaults.testTrackingFailure.modify(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_27_28(a1);
  Defaults.testTrackingFailure.setter(v1);
}

void sub_1BD4A9DC4()
{
  OUTLINED_FUNCTION_0();
}

uint64_t Defaults.Key.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BD4A9E08 + 4 * word_1BD6635B0[a1]))(0xD000000000000018, 0x80000001BD68F370);
}

uint64_t sub_1BD4A9E08()
{
  uint64_t v0;

  return v0 + 11;
}

uint64_t Defaults.BoxedValue.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void Defaults.isInternalInstall.getter()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v0)
  {
    objc_msgSend(v0, sel_isInternalInstall);
    OUTLINED_FUNCTION_49_5();
  }
  OUTLINED_FUNCTION_0();
}

void Defaults.writeDefaults(value:for:)(uint64_t a1, unsigned __int8 a2)
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  outlined init with copy of Any?(a1, (uint64_t)v11);
  v5 = v12;
  if (v12)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v11, v12);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = MEMORY[0x1E0C80A78](v6);
    v10 = (char *)v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  Defaults.Key.rawValue.getter(a2);
  OUTLINED_FUNCTION_25_66();
}

void sub_1BD4AA540()
{
  void *v0;
  uint64_t v1;
  void *v2;

  OUTLINED_FUNCTION_7_3();
  objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

  OUTLINED_FUNCTION_113();
}

uint64_t Defaults.BOOL(for:domain:default:)(unsigned __int8 a1, void *a2, char a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = Defaults.Key.rawValue.getter(a1);
  v7 = (void *)MEMORY[0x1C3B72E00](v6);
  swift_bridgeObjectRelease();
  v8 = OUTLINED_FUNCTION_5_42(a2, sel_objectForKey_);

  if (v8)
  {
    OUTLINED_FUNCTION_33_63();
    v17 = swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_107(v17, v18, v19, v20, v21, v22, v23, v24, v26);
    Defaults.Key.rawValue.getter(a1);
    OUTLINED_FUNCTION_25_66();
  }
  OUTLINED_FUNCTION_6_107(v9, v10, v11, v12, v13, v14, v15, v16, 0);
  return a3 & 1;
}

uint64_t Defaults.int(for:default:)(unsigned __int8 a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_standardUserDefaults);
  v6 = Defaults.Key.rawValue.getter(a1);
  v7 = (void *)MEMORY[0x1C3B72E00](v6);
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_objectForKey_, v7);

  if (v8)
  {
    OUTLINED_FUNCTION_33_63();
    v17 = swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_107(v17, v18, v19, v20, v21, v22, v23, v24, v27);
    v25 = objc_msgSend(v4, sel_standardUserDefaults);
    OUTLINED_FUNCTION_17_79();
  }
  OUTLINED_FUNCTION_6_107(v9, v10, v11, v12, v13, v14, v15, v16, 0);
  return a2;
}

void Defaults.float(for:default:)()
{
  void *v0;
  id v1;

  v0 = (void *)objc_opt_self();
  v1 = OUTLINED_FUNCTION_20_77(v0);
  OUTLINED_FUNCTION_24_66();
}

float sub_1BD4AA7B0(void *a1)
{
  void *v1;
  float v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  OUTLINED_FUNCTION_2_1();
  v4 = OUTLINED_FUNCTION_5_42(v1, sel_objectForKey_);

  if (v4)
  {
    OUTLINED_FUNCTION_34_45();
    v13 = OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_6_107(v13, v14, v15, v16, v17, v18, v19, v20, v23);
    v21 = OUTLINED_FUNCTION_29_69();
    OUTLINED_FUNCTION_17_79();
  }
  OUTLINED_FUNCTION_6_107(v5, v6, v7, v8, v9, v10, v11, v12, 0);
  return v2;
}

void Defaults.double(for:default:)()
{
  void *v0;
  id v1;

  v0 = (void *)objc_opt_self();
  v1 = OUTLINED_FUNCTION_20_77(v0);
  OUTLINED_FUNCTION_24_66();
}

double sub_1BD4AA894(void *a1)
{
  void *v1;
  double v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  OUTLINED_FUNCTION_2_1();
  v4 = OUTLINED_FUNCTION_5_42(v1, sel_objectForKey_);

  if (v4)
  {
    OUTLINED_FUNCTION_34_45();
    v13 = OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_6_107(v13, v14, v15, v16, v17, v18, v19, v20, v23);
    v21 = OUTLINED_FUNCTION_29_69();
    OUTLINED_FUNCTION_17_79();
  }
  OUTLINED_FUNCTION_6_107(v5, v6, v7, v8, v9, v10, v11, v12, 0);
  return v2;
}

uint64_t specialized Defaults.array<A>(for:default:)(unsigned __int8 a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = Defaults.Key.rawValue.getter(a1);
  v6 = (void *)MEMORY[0x1C3B72E00](v5);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_arrayForKey_, v6);

  if (v7)
  {
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v9 = specialized _arrayConditionalCast<A, B>(_:)(v8);
    swift_bridgeObjectRelease();
    if (v9)
      return v9;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t Defaults.string(for:default:)(unsigned __int8 a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_standardUserDefaults);
  v6 = Defaults.Key.rawValue.getter(a1);
  v7 = (void *)MEMORY[0x1C3B72E00](v6);
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_stringForKey_, v7);

  if (v8)
  {

    v9 = objc_msgSend(v4, sel_standardUserDefaults);
    Defaults.Key.rawValue.getter(a1);
    OUTLINED_FUNCTION_25_66();
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t Defaults.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t Defaults.__deallocating_deinit()
{
  Defaults.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for DefaultsProvider.forceVideoLayerVisible.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t protocol witness for DefaultsProvider.shouldIgnorePoorConnection.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t protocol witness for DefaultsProvider.showsForceAudioPriorityButton.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t protocol witness for DefaultsProvider.shouldEnableEffectsRendering.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t protocol witness for DefaultsProvider.supportsVideo.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t protocol witness for DefaultsProvider.supportsEffects.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t protocol witness for DefaultsProvider.useFlattenedUI.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t protocol witness for DefaultsProvider.activelyCommunicatingAudioThreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t protocol witness for DefaultsProvider.activelyCommunicatingVideoThreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t protocol witness for DefaultsProvider.mimimumActiveDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t protocol witness for DefaultsProvider.forceMostActiveParticipantHandle.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t protocol witness for DefaultsProvider.mostActiveParticipantChangeInterval.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowProminenceDebuggingLabels.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t protocol witness for DefaultsProvider.organicSashFontSize.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t protocol witness for DefaultsProvider.organicCellCornerRadius.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t protocol witness for DefaultsProvider.organicCellGlowSizeMultiplier.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t protocol witness for DefaultsProvider.emaTimeScale.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t protocol witness for DefaultsProvider.emaTimerFrequency.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight1.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight2.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight3.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t protocol witness for DefaultsProvider.emaProminenceWeight4.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t protocol witness for DefaultsProvider.emaMinUIUpdateInterval.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t protocol witness for DefaultsProvider.emaLowerBoundTreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t protocol witness for DefaultsProvider.shouldCenterRoster.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t protocol witness for DefaultsProvider.gridInterItemSpacing.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t protocol witness for DefaultsProvider.gridLayoutProminenceScaleAmount.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t protocol witness for DefaultsProvider.shouldUseGridView.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t (*protocol witness for DefaultsProvider.shouldUseGridView.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 520))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.maxHighVideoQualityParticipantCount.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t protocol witness for DefaultsProvider.maxMediumVideoQualityParticipantCount.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t protocol witness for DefaultsProvider.allowAudioProminence.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t protocol witness for DefaultsProvider.allowVideoProminence.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t protocol witness for DefaultsProvider.disableAutomaticDrawerHiding.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t protocol witness for DefaultsProvider.allowLocalVideoRecording.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t protocol witness for DefaultsProvider.reduceMotion.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t protocol witness for DefaultsProvider.participantEmailsToShowAsNeedingAuthorization.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t protocol witness for DefaultsProvider.kickMemberTimeout.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t protocol witness for DefaultsProvider.systemHUDDismissal.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t protocol witness for DefaultsProvider.inCallHUDDismissal.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t protocol witness for DefaultsProvider.noticeDismissal.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t protocol witness for DefaultsProvider.ephemeralAlertDismissal.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t protocol witness for DefaultsProvider.controlsCrossFadeDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t protocol witness for DefaultsProvider.countdownDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t protocol witness for DefaultsProvider.countdownTickDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t protocol witness for DefaultsProvider.joinCountdownThreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t protocol witness for DefaultsProvider.joinCountdownDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t (*protocol witness for DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 848))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.bannerDragControllerEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t (*protocol witness for DefaultsProvider.captionsDisclosureHasBeenShown.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 720))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t (*protocol witness for DefaultsProvider.captionsUserAXSettingEnabled.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 744))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.captionsLowConfidenceThreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t protocol witness for DefaultsProvider.captionsAllowedInScreenshots.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t protocol witness for DefaultsProvider.captionsUnavailableThreshold.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t protocol witness for DefaultsProvider.captionsTimeToSuppression.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t protocol witness for DefaultsProvider.captionsTimeToLive.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t protocol witness for DefaultsProvider.supportsScreenSharingCALayerHostMode.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t protocol witness for DefaultsProvider.supportsScreenSharingDeskView.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t protocol witness for DefaultsProvider.fullScreenOneToOneInGFTEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t protocol witness for DefaultsProvider.uPlusOneScreenSharingAvailable.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t (*protocol witness for DefaultsProvider.lastUserRequestedLocalParticipantCorner.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 680))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

uint64_t protocol witness for DefaultsProvider.videoMessagingEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t protocol witness for DefaultsProvider.memojiCameraEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t protocol witness for DefaultsProvider.mockScreeningGeneratorEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t protocol witness for DefaultsProvider.lagunaEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t protocol witness for DefaultsProvider.lagunaPullBackEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t protocol witness for DefaultsProvider.videoMessagingEnabledM3.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t protocol witness for DefaultsProvider.reactionDuration.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t protocol witness for DefaultsProvider.conversationHandoffEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t protocol witness for DefaultsProvider.sharePlayAvailable.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t protocol witness for DefaultsProvider.allowsScreenSharing.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t protocol witness for DefaultsProvider.requestToScreenShareEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t protocol witness for DefaultsProvider.gelatoEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t protocol witness for DefaultsProvider.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.getter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.setter in conformance Defaults()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t (*protocol witness for DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.modify in conformance Defaults(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 904))();
  return protocol witness for ControlsView.cnkContentAlpha.modify in conformance SystemApertureOngoingTelephonyControlsView;
}

void sub_1BD4AB120()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 232))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB144(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 240))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB164()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 504))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB188(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 512))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB1A8()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 664))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB1CC(unsigned __int8 *a1, uint64_t a2)
{
  (*(void (**)(_QWORD))(**(_QWORD **)a2 + 672))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB1F4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 704))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB218(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 712))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB238()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 728))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB25C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 736))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB27C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 832))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB2A0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 840))(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB2C0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 888))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB2E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  v1 = (*(uint64_t (**)(void))(v0 + 1072))();
  OUTLINED_FUNCTION_68_0(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AB30C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_31_5(a1);
  (*(void (**)(uint64_t))(v2 + 1080))(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t dispatch thunk of DefaultsProvider.enableAudioVisualization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DefaultsProvider.enableAudioVisualizationLogging.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DefaultsProvider.forceVideoLayerVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldIgnorePoorConnection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DefaultsProvider.showsForceAudioPriorityButton.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DefaultsProvider.startUplinkMuted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldEnableEffectsRendering.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DefaultsProvider.useFlattenedUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DefaultsProvider.activelyCommunicatingAudioThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DefaultsProvider.activelyCommunicatingVideoThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of DefaultsProvider.mimimumActiveDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of DefaultsProvider.forceMostActiveParticipantHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DefaultsProvider.mostActiveParticipantChangeInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowProminenceDebuggingLabels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of DefaultsProvider.organicSashFontSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DefaultsProvider.organicCellCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of DefaultsProvider.organicCellGlowSizeMultiplier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of DefaultsProvider.emaTimeScale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DefaultsProvider.emaTimerFrequency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight1.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight2.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight3.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of DefaultsProvider.emaProminenceWeight4.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of DefaultsProvider.emaMinUIUpdateInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of DefaultsProvider.emaLowerBoundTreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldCenterRoster.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of DefaultsProvider.gridInterItemSpacing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of DefaultsProvider.gridLayoutProminenceScaleAmount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldUseGridView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of DefaultsProvider.maxHighVideoQualityParticipantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of DefaultsProvider.maxMediumVideoQualityParticipantCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of DefaultsProvider.allowAudioProminence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of DefaultsProvider.allowVideoProminence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of DefaultsProvider.disableAutomaticDrawerHiding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of DefaultsProvider.allowLocalVideoRecording.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of DefaultsProvider.reduceMotion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of DefaultsProvider.participantEmailsToShowAsNeedingAuthorization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of DefaultsProvider.kickMemberTimeout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of DefaultsProvider.systemHUDDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of DefaultsProvider.inCallHUDDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of DefaultsProvider.noticeDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of DefaultsProvider.ephemeralAlertDismissal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of DefaultsProvider.controlsCrossFadeDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of DefaultsProvider.countdownDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of DefaultsProvider.countdownTickDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of DefaultsProvider.joinCountdownThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of DefaultsProvider.joinCountdownDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsCinematicFraming.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 432))();
}

uint64_t dispatch thunk of DefaultsProvider.shouldShowLinkEducationFirstTimeAlert.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 440))();
}

uint64_t dispatch thunk of DefaultsProvider.bannerDragControllerEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 464))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsDisclosureHasBeenShown.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 472))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 480))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 488))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUserAXSettingEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 496))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsLowConfidenceThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 504))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsAllowedInScreenshots.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 512))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsUnavailableThreshold.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 520))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsTimeToSuppression.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 528))();
}

uint64_t dispatch thunk of DefaultsProvider.captionsTimeToLive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 536))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsScreenSharingCALayerHostMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 544))();
}

uint64_t dispatch thunk of DefaultsProvider.supportsScreenSharingDeskView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 552))();
}

uint64_t dispatch thunk of DefaultsProvider.fullScreenOneToOneInGFTEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 560))();
}

uint64_t dispatch thunk of DefaultsProvider.uPlusOneScreenSharingAvailable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 568))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 576))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 584))();
}

uint64_t dispatch thunk of DefaultsProvider.lastUserRequestedLocalParticipantCorner.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 592))();
}

uint64_t dispatch thunk of DefaultsProvider.videoMessagingEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 600))();
}

uint64_t dispatch thunk of DefaultsProvider.memojiCameraEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 608))();
}

uint64_t dispatch thunk of DefaultsProvider.mockScreeningGeneratorEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 616))();
}

uint64_t dispatch thunk of DefaultsProvider.wombatWisdomEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 624))();
}

uint64_t dispatch thunk of DefaultsProvider.lagunaEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 632))();
}

uint64_t dispatch thunk of DefaultsProvider.lagunaPullBackEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 640))();
}

uint64_t dispatch thunk of DefaultsProvider.previewMSROptimizationEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 648))();
}

uint64_t dispatch thunk of DefaultsProvider.videoMessagingEnabledM3.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 656))();
}

uint64_t dispatch thunk of DefaultsProvider.reactionDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 664))();
}

uint64_t dispatch thunk of DefaultsProvider.collaborateTogetherEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 672))();
}

uint64_t dispatch thunk of DefaultsProvider.oneCollaborationHUDPerDocument.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 680))();
}

uint64_t dispatch thunk of DefaultsProvider.conversationHandoffEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 688))();
}

uint64_t dispatch thunk of DefaultsProvider.sharePlayAvailable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 696))();
}

uint64_t dispatch thunk of DefaultsProvider.allowsScreenSharing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 704))();
}

uint64_t dispatch thunk of DefaultsProvider.requestToScreenShareEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 712))();
}

uint64_t dispatch thunk of DefaultsProvider.gelatoEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 720))();
}

uint64_t dispatch thunk of DefaultsProvider.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 728))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 736))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 744))();
}

uint64_t dispatch thunk of DefaultsProvider.participantHandlesOfAcknowledgedRCSessions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 752))();
}

uint64_t method lookup function for Defaults()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Defaults.enableAudioVisualization.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of Defaults.enableAudioVisualizationLogging.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of Defaults.forceVideoLayerVisible.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of Defaults.shouldIgnorePoorConnection.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of Defaults.showsForceAudioPriorityButton.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of Defaults.shouldEnableEffectsRendering.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of Defaults.supportsVideo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Defaults.allowsScreenSharing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Defaults.requestToScreenShareEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Defaults.allowsScreenSharingNotifications.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Defaults.supportsEffects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of Defaults.supportsCinematicFraming.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Defaults.sharePlayAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of Defaults.screenSharingAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of Defaults.forceScreenSharingAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Defaults.bannerDragControllerEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of Defaults.shouldShowVoicemailIntroText.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of Defaults.sckSystemPickerEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of Defaults.shouldShowVideoLayerDebugColors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of Defaults.gelatoEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of Defaults.collaborateTogetherEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of Defaults.oneCollaborationHUDPerDocument.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of Defaults.supportsScreenSharingCALayerHostMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of Defaults.supportsScreenSharingDeskView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of Defaults.gameCenterSharePlayIntegration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of Defaults.useFlattenedUI.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of Defaults.activelyCommunicatingAudioThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of Defaults.activelyCommunicatingVideoThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of Defaults.mimimumActiveDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of Defaults.forceMostActiveParticipantHandle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of Defaults.mostActiveParticipantChangeInterval.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of Defaults.shouldShowProminenceDebuggingLabels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of Defaults.organicSashFontSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Defaults.organicCellCornerRadius.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of Defaults.screenSharingCornerRadius.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of Defaults.organicCellGlowSizeMultiplier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of Defaults.emaTimeScale.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of Defaults.emaTimerFrequency.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight1.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight2.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight3.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of Defaults.emaProminenceWeight4.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of Defaults.emaMinUIUpdateInterval.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of Defaults.emaLowerBoundTreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of Defaults.shouldCenterRoster.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of Defaults.memojiCameraEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of Defaults.gridInterItemSpacing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of Defaults.gridLayoutProminenceScaleAmount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of Defaults.shouldUseGridView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of Defaults.shouldUseGridView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of Defaults.maxHighVideoQualityParticipantCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of Defaults.maxMediumVideoQualityParticipantCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of Defaults.allowAudioProminence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of Defaults.allowVideoProminence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of Defaults.disableAutomaticDrawerHiding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of Defaults.allowLocalVideoRecording.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of Defaults.reduceMotion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of Defaults.conversationHandoffEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of Defaults.lagunaEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of Defaults.lagunaPullBackEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of Defaults.uPlusNDowngradeAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of Defaults.nameAndPhotoEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of Defaults.uPlusOneScreenSharingAvailable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of Defaults.fullScreenOneToOneInGFTEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of Defaults.avLessWantsSceneEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of Defaults.alwaysShowCallControlsAndLivePhotoButtonEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of Defaults.lastUserRequestedLocalParticipantCorner.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of Defaults.participantEmailsToShowAsNeedingAuthorization.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of Defaults.kickMemberTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of Defaults.captionsDisclosureHasBeenShown.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of Defaults.captionsUserAXSettingEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of Defaults.captionsLowConfidenceThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of Defaults.captionsAllowedInScreenshots.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of Defaults.captionsUnavailableThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of Defaults.captionsTimeToSuppression.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of Defaults.captionsTimeToLive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of Defaults.mockScreeningGeneratorEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of Defaults.secondsBeforeAnsweringAsScreening.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of Defaults.maxSecondsForScreeningState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of Defaults.screeningDebugSendConstantNotifications.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of Defaults.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of Defaults.shouldShowLinkEducationFirstTimeAlert.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of Defaults.avLessSharePlayEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of Defaults.videoMessagingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of Defaults.videoMessagingEnabledM3.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of Defaults.participantHandlesOfAcknowledgedRCSessions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of Defaults.systemHUDDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of Defaults.inCallHUDDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of Defaults.pendingAuthorizationDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of Defaults.handoffApproveDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of Defaults.shareNameAndPhotoDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of Defaults.forceOutgoingSNaPBanner.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of Defaults.forceIncomingSNaPBanner.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of Defaults.startNoticeDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of Defaults.priorityNoticeDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of Defaults.noticeDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of Defaults.noticeExpirationSeconds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of Defaults.noticeCoordinatorTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of Defaults.ephemeralAlertDismissal.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of Defaults.controlsCrossFadeDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of Defaults.countdownDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of Defaults.countdownTickDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of Defaults.joinCountdownThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of Defaults.joinCountdownDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of Defaults.reactionDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of Defaults.radarReportingEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of Defaults.testTrackingFailure.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of Defaults.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1168))();
}

uint64_t type metadata accessor for Defaults.BoxedValue()
{
  return objc_opt_self();
}

uint64_t outlined init with copy of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id PreCallConfirmationViewController.__allocating_init(callCenter:)()
{
  void *v0;

  OUTLINED_FUNCTION_16_1();
  return PreCallConfirmationViewController.init(callCenter:)(v0);
}

id PreCallConfirmationViewController.init(callCenter:)(void *a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  objc_super v11;

  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v4 = &v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter] = a1;
  v6 = type metadata accessor for PreCallConfirmationService();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v8 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_service];
  v8[3] = v6;
  v8[4] = (uint64_t)&protocol witness table for PreCallConfirmationService;
  *v8 = v7;
  v11.receiver = v1;
  v11.super_class = v3;
  v9 = a1;
  return objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, 0, 0);
}

id PreCallConfirmationViewController.__allocating_init(coder:)()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(OUTLINED_FUNCTION_16_1(), sel_initWithCoder_, v0);

  return v1;
}

void PreCallConfirmationViewController.init(coder:)()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t PreCallConfirmationViewController.requestPreCallConfirmation(_:cancel:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v8;
  char v9;
  uint64_t *v10;
  uint64_t *v11;
  void *v13;
  char v14;

  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel);
  *v10 = a2;
  v10[1] = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  OUTLINED_FUNCTION_2_125();
  v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion);
  *v11 = a4;
  v11[1] = a5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a4);
  OUTLINED_FUNCTION_2_125();
  PreCallConfirmationViewController.buttonsViewModel.getter();
  v13 = v8;
  v14 = v9;
  PreCallButtonsViewModel.setPreCallContext(_:)(&v13);
  return swift_release();
}

_QWORD *PreCallConfirmationViewController.buttonsViewModel.getter()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;
  char *v4;

  v1 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel])
  {
    v2 = *(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsViewModel];
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for WeakBox<PreCallConfirmationViewController>);
    swift_allocObject();
    v4 = v0;
    specialized WeakBox.init(_:)(v0);
    type metadata accessor for PreCallButtonsViewModel();
    swift_allocObject();
    v2 = PreCallButtonsViewModel.init(preCallDelegate:)();
    *(_QWORD *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Void __swiftcall PreCallConfirmationViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  PreCallConfirmationViewController.setupConstraints()();
  PreCallConfirmationViewController.statusViewModel.getter();
  PreCallStatusViewModel.startObservation()();
  swift_release();
  OUTLINED_FUNCTION_36();
}

void PreCallConfirmationViewController.setupConstraints()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  Class isa;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD644140;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  v4 = v3;
  v5 = objc_msgSend(v3, sel_topAnchor);

  v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  *(_QWORD *)(v2 + 32) = v9;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  v11 = v10;
  v12 = objc_msgSend(v10, sel_bottomAnchor);

  v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_bottomAnchor);

  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v2 + 40) = v16;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  v18 = v17;
  v19 = objc_msgSend(v17, sel_leadingAnchor);

  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);

  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v2 + 48) = v23;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___videoPreview, (uint64_t (*)(uint64_t))closure #1 in PreCallConfirmationViewController.videoPreview.getter);
  v25 = v24;
  v26 = objc_msgSend(v24, sel_trailingAnchor);

  v27 = objc_msgSend(v1, sel_view);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, sel_trailingAnchor);

    v30 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v29);
    *(_QWORD *)(v2 + 56) = v30;
    specialized Array._endMutation()();
    PreCallConfirmationViewController.setupButtonsView()();
    specialized Array.append<A>(contentsOf:)();
    PreCallConfirmationViewController.setupStatus()();
    specialized Array.append<A>(contentsOf:)();
    v31 = (void *)objc_opt_self();
    type metadata accessor for NSLayoutConstraint();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_activateConstraints_, isa);

    return;
  }
LABEL_9:
  __break(1u);
}

_QWORD *PreCallConfirmationViewController.statusViewModel.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel))
  {
    v2 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusViewModel);
  }
  else
  {
    v3 = PreCallConfirmationViewController.buttonsViewModel.getter();
    type metadata accessor for PreCallStatusViewModel();
    v2 = (_QWORD *)swift_allocObject();
    v2[7] = type metadata accessor for PreCallButtonsViewModel();
    v2[8] = &protocol witness table for PreCallButtonsViewModel;
    v2[3] = 0;
    v2[4] = v3;
    swift_unknownObjectWeakInit();
    v2[9] = 0;
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Void __swiftcall PreCallConfirmationViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1);
  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter], sel_videoDeviceController);
  objc_msgSend(v3, sel_startPreview);

  OUTLINED_FUNCTION_36();
}

id PreCallConfirmationViewController.setupButtonsView()()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id result;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD644B60;
  v2 = PreCallConfirmationViewController.buttonsView.getter();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  v6 = objc_msgSend(result, sel_leadingAnchor);

  v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v1 + 32) = v7;
  v8 = PreCallConfirmationViewController.buttonsView.getter();
  v9 = objc_msgSend(v8, sel_trailingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = result;
  v11 = objc_msgSend(result, sel_trailingAnchor);

  v12 = objc_msgSend(v9, sel_constraintLessThanOrEqualToAnchor_, v11);
  *(_QWORD *)(v1 + 40) = v12;
  v13 = PreCallConfirmationViewController.buttonsView.getter();
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend(result, sel_bottomAnchor);

    v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
    *(_QWORD *)(v1 + 48) = v17;
    specialized Array._endMutation()();
    return (id)v1;
  }
LABEL_7:
  __break(1u);
  return result;
}

id PreCallConfirmationViewController.setupStatus()()
{
  void *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;

  v1 = PreCallConfirmationViewController.statusViewModel.getter();
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v3 = v2;
  swift_beginAccess();
  v1[3] = &protocol witness table for CallControlsStatusView;
  swift_unknownObjectWeakAssign();
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BD644B60;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v6 = v5;
  v7 = objc_msgSend(v5, sel_topAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = result;
  v10 = objc_msgSend(result, sel_topAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v10, 52.0);
  *(_QWORD *)(v4 + 32) = v11;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v13 = v12;
  v14 = objc_msgSend(v12, sel_leadingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v15 = result;
  v16 = objc_msgSend(result, sel_safeAreaLayoutGuide);

  v17 = objc_msgSend(v16, sel_leadingAnchor);
  v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v17, 24.0);

  *(_QWORD *)(v4 + 40) = v18;
  CallControlsViewController.menuViewController.getter(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___statusView, (uint64_t (*)(uint64_t))closure #1 in CallControlsViewController.statusView.getter);
  v20 = v19;
  v21 = objc_msgSend(v19, sel_trailingAnchor);

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v22 = result;
    v23 = objc_msgSend(result, sel_safeAreaLayoutGuide);

    v24 = objc_msgSend(v23, sel_trailingAnchor);
    v25 = objc_msgSend(v21, sel_constraintLessThanOrEqualToAnchor_, v24);

    *(_QWORD *)(v4 + 48) = v25;
    specialized Array._endMutation()();
    return (id)v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

id closure #1 in PreCallConfirmationViewController.videoPreview.getter(char *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id result;
  void *v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v3, sel_setContentsGravity_, *MEMORY[0x1E0CD2F98]);

  v4 = *(void **)&a1[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_callCenter];
  v5 = objc_msgSend(v4, sel_videoDeviceController);
  v6 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v5, sel_setLocalFrontLayer_, v6);

  v7 = objc_msgSend(v4, sel_videoDeviceController);
  objc_msgSend(v7, sel_setCurrentVideoOrientation_, 2);

  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, sel_addSubview_, v2);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PreCallConfirmationViewController.buttonsView.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id result;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  __int128 v30[2];
  _BYTE v31[48];

  v1 = v0;
  v2 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for PreCallButtonsView();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  v9 = OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView;
  v10 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView];
  if (v10)
  {
    v11 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController____lazy_storage___buttonsView];
LABEL_9:
    v28 = v10;
    return v11;
  }
  outlined init with copy of IDSLookupManager((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_service], (uint64_t)v31);
  PreCallConfirmationViewController.buttonsViewModel.getter();
  type metadata accessor for PreCallButtonsViewModel();
  lazy protocol witness table accessor for type PreCallButtonsViewModel and conformance PreCallButtonsViewModel();
  swift_retain();
  Bindable<A>.init(wrappedValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CallControlsPreCallButtonViewModel>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645380;
  v13 = type metadata accessor for CancelConfirmationViewModel();
  swift_allocObject();
  v14 = CancelConfirmationViewModel.init()();
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 64) = &protocol witness table for CancelConfirmationViewModel;
  *(_QWORD *)(inited + 32) = v14;
  outlined init with copy of IDSLookupManager((uint64_t)v31, (uint64_t)v30);
  v15 = type metadata accessor for DialButtonViewModel();
  swift_allocObject();
  v16 = DialButtonViewModel.init(service:)(v30);
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = &protocol witness table for DialButtonViewModel;
  *(_QWORD *)(inited + 72) = v16;
  v17 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit015CallControlsPreH15ButtonViewModel_pGG_AH0jhlM6Holder33_801AF6C8C7AF9F90D2770D7757FA6A2ELLVs5NeverOTg506_sSi15f6Kit015hij3C15klm22_pAA0ecgH6Holder33_801opqrstuvw38ELLVIgynr_Si6offset_AaB_p7elementtAEs5X181OIegnrzr_TR04_s15a5Kit18ec7Buttonsg14V7service9viewh66AcA0cD21ConfirmationServicing_p_AA0cdefI0CtcfcAA0cdfI6Holder33_801jklmnopqR40ELLVSi_AA0d8Controlscd6ButtonfI0_ptXEfU_Tf3nnnpf_nTf1cn_n(inited);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  swift_setDeallocating();
  specialized _ContiguousArrayStorage.__deallocating_deinit();
  *(_QWORD *)&v8[*(int *)(v3 + 20)] = v17;
  outlined init with copy of PreCallButtonsView((uint64_t)v8, (uint64_t)v5);
  v18 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingController<PreCallButtonsView>));
  v19 = (void *)UIHostingController.init(rootView:)();
  UIHostingController.safeAreaRegions.setter();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  objc_msgSend(v1, sel_addChildViewController_, v19);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v21 = result;
  result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = result;
  objc_msgSend(v21, sel_addSubview_, result);

  objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
  result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v23 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  result = objc_msgSend(v19, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v24 = result;
  v25 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  result = objc_msgSend(v19, sel_view);
  if (result)
  {
    v26 = result;
    outlined destroy of PreCallButtonsView((uint64_t)v8);

    v27 = *(void **)&v1[v9];
    *(_QWORD *)&v1[v9] = v26;
    v11 = v26;

    v10 = 0;
    goto LABEL_9;
  }
LABEL_14:
  __break(1u);
  return result;
}

void PreCallConfirmationViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void PreCallConfirmationViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PreCallConfirmationViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t WeakBox<>.didTapCancel()()
{
  return WeakBox<>.didTapCancel()(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCancel);
}

uint64_t WeakBox<>.didPerformAction()()
{
  return WeakBox<>.didTapCancel()(&OBJC_IVAR____TtC15ConversationKit33PreCallConfirmationViewController_confirmationCompletion);
}

uint64_t WeakBox<>.didTapCancel()(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  void *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1 + 16);
  if (result)
  {
    v4 = (void *)result;
    v5 = *(void (**)(uint64_t))(result + *a1);
    if (v5)
    {
      v6 = swift_retain();
      v5(v6);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v5);
    }
    PreCallConfirmationViewController.buttonsViewModel.getter();
    PreCallButtonsViewModel.clearPreCallContext()();

    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for PreCallConfirmationViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for PreCallConfirmationViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreCallConfirmationViewController.__allocating_init(callCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t outlined init with copy of PreCallButtonsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreCallButtonsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PreCallButtonsView(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreCallButtonsView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.acceptsFirstMouse()()
{
  lazy protocol witness table accessor for type AcceptFirstMouseView and conformance AcceptFirstMouseView();
  static Alignment.center.getter();
  return View.overlay<A>(alignment:content:)();
}

id AcceptFirstMouseView.makeUIView(context:)()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36D0]), sel_init);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance AcceptFirstMouseView()
{
  return AcceptFirstMouseView.makeUIView(context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance AcceptFirstMouseView()
{
  lazy protocol witness table accessor for type AcceptFirstMouseView and conformance AcceptFirstMouseView();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance AcceptFirstMouseView()
{
  lazy protocol witness table accessor for type AcceptFirstMouseView and conformance AcceptFirstMouseView();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance AcceptFirstMouseView()
{
  lazy protocol witness table accessor for type AcceptFirstMouseView and conformance AcceptFirstMouseView();
  UIViewRepresentable.body.getter();
  __break(1u);
}

unint64_t lazy protocol witness table accessor for type AcceptFirstMouseView and conformance AcceptFirstMouseView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView;
  if (!lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AcceptFirstMouseView, &type metadata for AcceptFirstMouseView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView;
  if (!lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for AcceptFirstMouseView, &type metadata for AcceptFirstMouseView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AcceptFirstMouseView and conformance AcceptFirstMouseView);
  }
  return result;
}

ValueMetadata *type metadata accessor for AcceptFirstMouseView()
{
  return &type metadata for AcceptFirstMouseView;
}

uint64_t sub_1BD4AD3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
  v2 = type metadata accessor for ModifiedContent();
  v4[0] = v1;
  v4[1] = lazy protocol witness table accessor for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>();
  return MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t lazy protocol witness table accessor for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>;
  if (!lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDA280], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>);
  }
  return result;
}

uint64_t TUConversationLetMeInRequestState.debugDescription.getter(uint64_t a1)
{
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  result = 0x656E6F6E2ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x75716552746F6E2ELL;
      break;
    case 2:
      result = 0x747365757165722ELL;
      break;
    case 3:
      result = 0x65766F727070612ELL;
      break;
    default:
      _StringGuts.grow(_:)(71);
      v3._object = (void *)0x80000001BD68F520;
      v3._countAndFlagsBits = 0xD000000000000045;
      String.append(_:)(v3);
      v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TUConversationLetMeInRequestState()
{
  uint64_t *v0;

  return TUConversationLetMeInRequestState.debugDescription.getter(*v0);
}

id ConversationNoticeViewController.__allocating_init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(uint64_t a1, void *a2, char a3)
{
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;

  OUTLINED_FUNCTION_42_51();
  v7 = v6;
  v8 = objc_allocWithZone(v3);
  return ConversationNoticeViewController.init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(v7, a2, a3);
}

void one-time initialization function for leadingViewDiameter()
{
  static ConversationNoticeViewController.Constants.leadingViewDiameter = 0x4041800000000000;
}

uint64_t ConversationNoticeViewController.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return MEMORY[0x1C3B752C0](v0);
}

void ConversationNoticeViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void (*ConversationNoticeViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return InCallControlsBaseCell.delegate.modify;
}

uint64_t key path setter for ConversationNoticeViewController.controlsManager : ConversationNoticeViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xB8))(*a1);
}

id ConversationNoticeViewController.controlsManager.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return *v0;
}

void ConversationNoticeViewController.controlsManager.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_controlsManager);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.controlsManager.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationNoticeViewController.recipe : ConversationNoticeViewController(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(a1, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xD0))(v6);
}

void ConversationNoticeViewController.recipe.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v3, a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.recipe.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe;
  OUTLINED_FUNCTION_2_0();
  outlined assign with copy of ConversationControlsRecipe?(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_20_78(*v1);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_9_0();
}

void ConversationNoticeViewController.recipe.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationNoticeViewController.recipe.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    OUTLINED_FUNCTION_20_78(**(_QWORD **)(a1 + 24));
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for ConversationNoticeViewController.presentationSize : ConversationNoticeViewController()
{
  return ConversationNoticeViewController.presentationSize.setter();
}

double ConversationNoticeViewController.presentationSize.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  return *(double *)v0;
}

uint64_t ConversationNoticeViewController.presentationSize.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  OUTLINED_FUNCTION_42_51();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize);
  result = OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  v3[1] = v1;
  return result;
}

void ConversationNoticeViewController.expanded.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.expanded.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_expanded);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.expanded.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationNoticeViewController.menuPresented.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.menuPresented.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_menuPresented);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void ConversationNoticeViewController.menuPresented.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ConversationNoticeViewController.isSystemAperturePresentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation);
}

void ConversationNoticeViewController.systemApertureElement.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t EnumTagSinglePayload;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_4_137(v4);
  v5 = OUTLINED_FUNCTION_28_1();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v5);
  if ((_DWORD)EnumTagSinglePayload)
  {
    v16 = 0;
    v17 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1;
    v14 = 0;
  }
  else
  {
    v15 = v1 + *(int *)(v5 + 72);
    v10 = *(void **)(v15 + 48);
    v11 = *(_QWORD *)(v15 + 56);
    v12 = *(_QWORD *)(v15 + 64);
    v14 = *(_BYTE *)(v15 + 72);
    v13 = *(_QWORD *)v15;
    v16 = *(void **)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 8);
    v7 = *(_QWORD *)(v15 + 24);
    v8 = *(void **)(v15 + 32);
    v9 = *(_QWORD *)(v15 + 40);
    EnumTagSinglePayload = (uint64_t)outlined copy of SystemApertureElement?(*(id *)v15, v17, v16, v7, v8, v9, v10);
  }
  OUTLINED_FUNCTION_8_112(EnumTagSinglePayload, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v17;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v14;
}

void *ConversationNoticeViewController.systemAperturePreferredContentSize.getter()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  id v4;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) != 1)
    return 0;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
  if (v1)
  {
    OUTLINED_FUNCTION_36_54();
    v2 = (_QWORD *)swift_dynamicCastClass();
    if (v2)
    {
      v3 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xB8);
      v4 = v1;
      v1 = (void *)v3();

    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void ConversationNoticeViewController.noticeView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
}

id ConversationNoticeViewController.init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)(uint64_t a1, void *a2, char a3)
{
  _BYTE *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t *v15;
  id v16;
  id v17;
  objc_super v19;

  OUTLINED_FUNCTION_42_51();
  v9 = v8;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate);
  v10 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe];
  v11 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_77_0(v10, v12, v13, v11);
  v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_expanded] = 0;
  v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_menuPresented] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture] = 0;
  OUTLINED_FUNCTION_2_0();
  v14 = v3;
  outlined assign with copy of ConversationControlsRecipe?(v9, v10);
  swift_endAccess();
  v15 = (unint64_t *)&v14[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize];
  *v15 = v5;
  v15[1] = v4;
  *(_QWORD *)&v14[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_controlsManager] = a2;
  v14[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation] = a3;
  v16 = a2;

  v19.receiver = v14;
  v19.super_class = (Class)ObjC metadata update function for ConversationNoticeViewController();
  v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  ConversationNoticeViewController.updatePresentationSize(to:)((CGSize)__PAIR128__(v4, v5));

  outlined destroy of OS_dispatch_queue.SchedulerOptions?(v9, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  return v17;
}

uint64_t type metadata accessor for ConversationNoticeViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationNoticeViewController;
  if (!type metadata singleton initialization cache for ConversationNoticeViewController)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall ConversationNoticeViewController.updatePresentationSize(to:)(CGSize to)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _BYTE v5[8];
  double v6;

  OUTLINED_FUNCTION_42_51();
  static Layout.ConversationControls.values.getter((uint64_t)v5);
  if (v6 < v3)
    v3 = v6;
  v4 = v1 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_presentationSize;
  OUTLINED_FUNCTION_2_0();
  *(double *)v4 = v3;
  *(_QWORD *)(v4 + 8) = v2;
}

void ConversationNoticeViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ConversationNoticeViewController.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_delegate);
  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_recipe];
  v2 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);
  v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_expanded] = 0;
  v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_menuPresented] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ConversationNoticeViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)ObjC metadata update function for ConversationNoticeViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  ConversationNoticeViewController.setupRootView()();
}

Swift::Void __swiftcall ConversationNoticeViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  _QWORD *v1;
  Class isa;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  objc_super v14;

  isa = a1.value.super.isa;
  v14.receiver = v1;
  v14.super_class = (Class)ObjC metadata update function for ConversationNoticeViewController();
  objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_, isa);
  if (isa)
  {
    v3 = isa;
    v4 = OUTLINED_FUNCTION_25_1((uint64_t)v3, sel_traitCollection);
    v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

    v7 = OUTLINED_FUNCTION_123(v6, sel_preferredContentSizeCategory);
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();

    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v13 & 1) == 0)
      {
        if (*((_BYTE *)v1
             + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) == 1)
          OUTLINED_FUNCTION_20_78(*v1);
        else
          ConversationNoticeViewController.setupPillView()();
      }
    }

  }
}

void ConversationNoticeViewController.viewWillTransition(to:with:)(void *a1)
{
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v2 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  v4[4] = partial apply for closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:);
  v4[5] = v2;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 1107296256;
  v4[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v4[3] = &block_descriptor_97;
  v3 = _Block_copy(v4);
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v3, 0);
  _Block_release(v3);
}

void closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(id *)(v3 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);

    objc_msgSend(v5, sel_layoutIfNeeded);
  }
}

Swift::Bool __swiftcall ConversationNoticeViewController._canShowWhileLocked()()
{
  return 1;
}

void ConversationNoticeViewController.setupRootView()()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) == 1)
    ConversationNoticeViewController.setupFaceTimeApertureView()();
  else
    ConversationNoticeViewController.setupPillView()();
  ConversationNoticeViewController.updatePreferredContentSize()();
}

Swift::Void __swiftcall ConversationNoticeViewController.updateNoticeView()()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  void *v3;
  char *v4;

  v2 = OUTLINED_FUNCTION_25_1(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = (char *)objc_msgSend(v2, sel_SBUISA_layoutMode);

    if ((unint64_t)(v4 - 2) >= 3)
      ConversationNoticeViewController.setupPillView()();
    else
      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x1B0))();
    ConversationNoticeViewController.updatePreferredContentSize()();
  }
  else
  {
    __break(1u);
  }
}

void ConversationNoticeViewController.setupPillView()()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  objc_class *v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  Class v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD v46[2];
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v46[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))(v5);
  OUTLINED_FUNCTION_27_66(v1);
  if (v8)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?(v1, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return;
  }
  outlined init with take of ConversationControlsRecipe(v1, (uint64_t)v7);
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView), sel_removeFromSuperview);
  OUTLINED_FUNCTION_45_43();
  v9 = v48;
  if (v48)
  {
    v10 = v49;
    __swift_project_boxed_opaque_existential_1(v47, v48);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 128))(v46, v9, v10);
    v11 = v46[0];
    v12 = (id)v46[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    if (v12)
    {
      if (v12 == (id)1)
      {
        v12 = ConversationNoticeViewController.chevronView.getter();
      }
      else
      {
        ConversationNoticeViewController.trailingButton.getter();
        v14 = v13;
        outlined consume of NoticeAccessory(v11, (unint64_t)v12);
        v12 = v14;
      }
    }
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v12 = 0;
  }
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillView);
  ConversationNoticeViewController.leadingAccessoryView()();
  v16 = v15;
  v17 = v12;
  PLPillView.__allocating_init(leadingAccessoryView:trailingAccessoryView:)(v16, v12);
  v19 = v18;
  objc_msgSend(v18, sel_setOverrideUserInterfaceStyle_, 2);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7D3D0]), sel_initWithAttributedText_style_, *((_QWORD *)v7 + 10), 1);
  v21 = *((_QWORD *)v7 + 11);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_12;
LABEL_19:
    OUTLINED_FUNCTION_27();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v34 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v34 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v34 + 32) = v20;
    OUTLINED_FUNCTION_43_58(v34);
    type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillContentItem);
    v35 = v20;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v36 = OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_4_5(v36, sel_setCenterContentItems_);
    goto LABEL_20;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_19;
LABEL_12:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v21 & 0xC000000000000001) == 0, v21);
  if ((v21 & 0xC000000000000001) != 0)
    v23 = (objc_class *)MEMORY[0x1C3B73D18](0, v21);
  else
    v23 = (objc_class *)*(id *)(v21 + 32);
  isa = v23;
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_45_43();
  v25 = v48;
  if (v48)
  {
    v26 = v49;
    __swift_project_boxed_opaque_existential_1(v47, v48);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 104))(v46, v25, v26);
    v27 = SLOBYTE(v46[0]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    v28 = qword_1BD663940[v27];
  }
  else
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v47, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    v28 = 2;
  }
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7D3D0]), sel_initWithAttributedText_style_, isa, v28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v30 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v30 + 16) = xmmword_1BD6441C0;
  *(_QWORD *)(v30 + 32) = v20;
  *(_QWORD *)(v30 + 40) = v29;
  OUTLINED_FUNCTION_43_58(v30);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for PLPillContentItem);
  v31 = v20;
  v32 = v29;
  v33 = Array._bridgeToObjectiveC()().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v19, sel_setCenterContentItems_, v33);

LABEL_20:
  OUTLINED_FUNCTION_39_62(v37, sel_setAutoresizingMask_);
  v38 = v19;
  v39 = OUTLINED_FUNCTION_4_16();
  if (v39)
  {
    objc_msgSend(v39, sel_bounds);
    OUTLINED_FUNCTION_22_9();
    OUTLINED_FUNCTION_21_85(v38, sel_setFrame_);

    v40 = OUTLINED_FUNCTION_4_16();
    if (v40)
    {
      v41 = v40;
      objc_msgSend(v40, sel_addSubview_, v38);

      v48 = ObjC metadata update function for ConversationNoticeViewController();
      v47[0] = v2;
      v42 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
      v2;
      v43 = @nonobjc UITapGestureRecognizer.init(target:action:)(v47, (uint64_t)sel_handleTapGesture);
      OUTLINED_FUNCTION_4_5((uint64_t)v43, sel_addGestureRecognizer_);
      v44 = v38;
      ConversationNoticeViewController.noticeView.setter((uint64_t)v38);

      outlined destroy of ConversationControlsRecipe((uint64_t)v7);
      return;
    }
  }
  else
  {

    __break(1u);
  }

  __break(1u);
}

id ConversationNoticeViewController.chevronView.getter()
{
  id v0;
  id v1;
  id v2;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v0 = @nonobjc UIImage.__allocating_init(systemName:)();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v0);

  v2 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v1, sel_setTintColor_, v2);

  return v1;
}

void ConversationNoticeViewController.leadingAccessoryView()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  double v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v4 = OUTLINED_FUNCTION_25_1(v3, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  v6 = UIContentSizeCategory.isAccessibilityCategory.getter();
  OUTLINED_FUNCTION_4_137(*v0);
  v7 = OUTLINED_FUNCTION_28_1();
  v8 = OUTLINED_FUNCTION_13_110(v7);
  if ((_DWORD)v8 || (v9 = *(void **)(v1 + 56)) == 0)
  {
    OUTLINED_FUNCTION_8_112(v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    v10 = v9;
    OUTLINED_FUNCTION_8_112((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    if ((v6 & 1) != 0)
    {

    }
    else
    {
      static Layout.ConversationControls.values.getter((uint64_t)&v11);
      objc_msgSend(v10, sel_setFrame_, 0.0, 0.0, v12, v12);
      objc_msgSend(v10, sel_setContentMode_, 1);
      objc_msgSend(v10, sel_setClipsToBounds_, 1);
    }
  }
  OUTLINED_FUNCTION_91();
}

void ConversationNoticeViewController.trailingButton.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_4_137(v2);
  v3 = OUTLINED_FUNCTION_28_1();
  v4 = OUTLINED_FUNCTION_13_110(v3);
  if ((_DWORD)v4)
  {
    OUTLINED_FUNCTION_8_112(v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
LABEL_3:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v13, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    goto LABEL_4;
  }
  v5 = outlined init with copy of ConversationControlsType(v0, (uint64_t)v10);
  OUTLINED_FUNCTION_8_112(v5, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v13);
  outlined destroy of ConversationControlsType((uint64_t)v10);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_3;
  outlined init with take of Notice(&v13, (uint64_t)v10);
  v6 = v11;
  v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v7 + 128))(&v13, v6, v7);
  v8 = v13;
  if (*((_QWORD *)&v13 + 1) >= 2uLL)
  {
    outlined init with copy of IDSLookupManager((uint64_t)v10, (uint64_t)&v13);
    v9 = OUTLINED_FUNCTION_15();
    outlined init with take of Notice(&v13, v9 + 16);
    ConversationNoticeViewController.buttonView(with:actionHandler:)(v8, *((uint64_t *)&v8 + 1), (uint64_t)partial apply for closure #1 in ConversationNoticeViewController.trailingButton.getter, v9);
    OUTLINED_FUNCTION_30_71();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_30_71();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
LABEL_4:
  OUTLINED_FUNCTION_91();
}

void (*closure #1 in ConversationNoticeViewController.trailingButton.getter(_QWORD *a1))(void)
{
  uint64_t v1;
  uint64_t v2;
  void (*result)(void);
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  result = (void (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2);
  if (result)
  {
    v4 = (uint64_t)result;
    result();
    return (void (*)(void))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  return result;
}

id ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;

  v5 = v4;
  v10 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0xB0))();
  v11 = *((_BYTE *)v5 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation);
  type metadata accessor for ConversationNoticeButtonProvider();
  swift_allocObject();
  v12 = ConversationNoticeButtonProvider.init(controlsManager:context:)(v10, v11 ^ 1u);
  swift_retain();
  swift_bridgeObjectRetain();
  ControlsButtonProvider.title.setter(a1, a2);
  swift_release();
  v13 = static ConversationControlsButtonFactory.makeButton(frame:provider:)(v12);
  v15 = v14;
  v16 = v13;
  ControlsButtonProvider.button.setter(v13, v15);
  if ((v11 & 1) == 0)
  {
    objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v17 = objc_msgSend(v16, sel_widthAnchor);
    objc_msgSend(v16, sel_intrinsicContentSize);
    v18 = objc_msgSend(v17, sel_constraintEqualToConstant_);

    objc_msgSend(v18, sel_setActive_, 1);
    LODWORD(v19) = 1148846080;
    objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v19);
  }
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a3;
  v21[4] = a4;
  v22 = v16;
  swift_retain();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a3);
  UIControl.addAction(for:handler:)(64, (uint64_t)partial apply for closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:), (uint64_t)v21);
  swift_release();
  swift_release();
  swift_release();

  return v22;
}

Swift::Void __swiftcall ConversationNoticeViewController.handleTapGesture()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_25_4();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_4_137(v5);
  v6 = OUTLINED_FUNCTION_28_1();
  v7 = OUTLINED_FUNCTION_13_110(v6);
  if ((_DWORD)v7)
  {
    OUTLINED_FUNCTION_8_112(v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    v22 = 0u;
    v23 = 0u;
    v24 = 0;
LABEL_3:
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)&v22, (uint64_t *)&demangling cache variable for type metadata for Notice?);
    return;
  }
  v8 = outlined init with copy of ConversationControlsType(v1, (uint64_t)&v17);
  OUTLINED_FUNCTION_8_112(v8, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  ConversationControlsType.associatedNotice.getter((uint64_t)&v22);
  outlined destroy of ConversationControlsType((uint64_t)&v17);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_3;
  v9 = outlined init with take of Notice(&v22, (uint64_t)&v17);
  v10 = (void *)(*(uint64_t (**)(uint64_t))((*v4 & *v0) + 0xB0))(v9);
  ConversationControlsManager.noticeTapped(notice:isSystemAperturePresentation:)((uint64_t)&v17, *((unsigned __int8 *)v2+ OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation), v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
    v25,
    v26,
    v27);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
}

Swift::Void __swiftcall ConversationNoticeViewController.handleSystemApertureTapGesture()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Logger.conversationControls);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "handleSystemApertureTapGesture", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x180))();
}

uint64_t key path setter for ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture : ConversationNoticeViewController(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x198))(*a1);
}

id ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];

  v1 = OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture];
  }
  else
  {
    v4 = v0;
    v10[3] = ObjC metadata update function for ConversationNoticeViewController();
    v10[0] = v0;
    objc_allocWithZone(MEMORY[0x1E0DC3D80]);
    v5 = v0;
    v6 = @nonobjc UITapGestureRecognizer.init(target:action:)(v10, (uint64_t)sel_handleSystemApertureTapGesture);
    v7 = *(void **)&v0[v1];
    *(_QWORD *)&v4[v1] = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController____lazy_storage___systemApertureLeadingAccessoryTapGesture);
}

void ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter();
  OUTLINED_FUNCTION_0();
}

void ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter((uint64_t)v3);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter((uint64_t)v2);
    OUTLINED_FUNCTION_36();
  }
}

void ConversationNoticeViewController.setupFaceTimeApertureView()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  _QWORD *v22;
  _QWORD v23[4];

  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_25_4();
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_19_76(v11);
  OUTLINED_FUNCTION_27_66((uint64_t)v7);
  if (v12)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
    return;
  }
  outlined init with take of ConversationControlsRecipe((uint64_t)v7, v1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView], sel_removeFromSuperview);
  OUTLINED_FUNCTION_36_54();
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v1 + *(int *)(v8 + 36), v2, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  (*(void (**)(uint64_t))((*v10 & *v13) + 0x78))(v2);
  ConversationNoticeViewController.trailingButton.getter();
  OUTLINED_FUNCTION_14_100();
  v14 = OUTLINED_FUNCTION_10_109();
  OUTLINED_FUNCTION_39_62(v14, sel_setAutoresizingMask_);
  v15 = v13;
  v16 = OUTLINED_FUNCTION_123((uint64_t)v15, sel_view);
  if (v16)
  {
    objc_msgSend(v16, sel_bounds);
    OUTLINED_FUNCTION_22_9();
    OUTLINED_FUNCTION_21_85(v15, sel_setFrame_);

    v18 = OUTLINED_FUNCTION_123(v17, sel_view);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, sel_addSubview_, v15);

      v23[3] = ObjC metadata update function for ConversationNoticeViewController();
      v23[0] = v3;
      v20 = objc_allocWithZone(MEMORY[0x1E0DC3D80]);
      v3;
      v21 = @nonobjc UITapGestureRecognizer.init(target:action:)(v23, (uint64_t)sel_handleSystemApertureTapGesture);
      objc_msgSend(v15, sel_addGestureRecognizer_, v21);
      v22 = v15;
      ConversationNoticeViewController.noticeView.setter((uint64_t)v15);

      outlined destroy of ConversationControlsRecipe(v1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall ConversationNoticeViewController.updateFaceTimeApertureView()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)();
  id v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  OUTLINED_FUNCTION_19_76(*v0);
  OUTLINED_FUNCTION_27_66((uint64_t)v6);
  if (v10)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  }
  else
  {
    outlined init with take of ConversationControlsRecipe((uint64_t)v6, v2);
    v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
    if (v11)
    {
      OUTLINED_FUNCTION_36_54();
      v12 = swift_dynamicCastClass();
      if (v12)
      {
        v13 = (_QWORD *)v12;
        outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v2 + *(int *)(v7 + 36), v1, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
        v14 = *(void (**)())((*v9 & *v13) + 0x78);
        v15 = v11;
        v14();
        ConversationNoticeViewController.trailingButton.getter();
        OUTLINED_FUNCTION_14_100();
        OUTLINED_FUNCTION_10_109();

        outlined destroy of ConversationControlsRecipe(v2);
        return;
      }
    }
    outlined destroy of ConversationControlsRecipe(v2);
  }
  ConversationNoticeViewController.setupFaceTimeApertureView()();
}

void ConversationNoticeViewController.updateLeadingAccessory(in:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  Class isa;
  void *v17;
  void (*v18)(void *);
  id v19;

  v2 = v1;
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x88))();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)OUTLINED_FUNCTION_17_80();
    OUTLINED_FUNCTION_137((uint64_t)v7, sel_removeGestureRecognizer_);

  }
  ConversationNoticeViewController.leadingAccessoryView()();
  if (v8)
  {
    v9 = v8;
    if ((*(_BYTE *)(v2
                   + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_isSystemAperturePresentation) & 1) == 0
      && one-time initialization token for leadingViewDiameter != -1)
    {
      swift_once();
    }
    v10 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v11 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v11 + 16) = xmmword_1BD6441C0;
    v12 = objc_msgSend(v9, sel_widthAnchor);
    v13 = OUTLINED_FUNCTION_34_46(v12);

    *(_QWORD *)(v11 + 32) = v13;
    v14 = objc_msgSend(v9, sel_heightAnchor);
    v15 = OUTLINED_FUNCTION_34_46(v14);

    *(_QWORD *)(v11 + 40) = v15;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v10, sel_activateConstraints_, isa);

    v17 = (void *)OUTLINED_FUNCTION_17_80();
    OUTLINED_FUNCTION_137((uint64_t)v17, sel_addGestureRecognizer_);

    v18 = *(void (**)(void *))((*v4 & *a1) + 0x90);
    v19 = v9;
    v18(v9);

  }
  else
  {
    (*(void (**)(void))((*v4 & *a1) + 0x90))();
  }
}

id ConversationNoticeViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void ConversationNoticeViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationNoticeViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)ObjC metadata update function for ConversationNoticeViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t protocol witness for ConversationControlsViewController.delegate.getter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t protocol witness for ConversationControlsViewController.delegate.setter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.getter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t protocol witness for ConversationControlsViewController.recipe.setter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t protocol witness for ConversationControlsViewController.systemApertureElement.getter in conformance ConversationNoticeViewController@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD v4[10];

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x128))(v4);
  return outlined init with take of SystemApertureElement?((uint64_t)v4, a1);
}

uint64_t protocol witness for ConversationControlsViewController.systemAperturePreferredContentSize.getter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t protocol witness for ConversationControlsViewController.controlsManager.setter in conformance ConversationNoticeViewController()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

Swift::Void __swiftcall ConversationNoticeViewController.updatePreferredContentSize()()
{
  _QWORD *v0;
  void *v1;
  void (*v2)(void);
  id v3;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit32ConversationNoticeViewController_noticeView);
  if (v1)
  {
    v2 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0);
    v3 = v1;
    v2();
    objc_msgSend(v3, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_);
    objc_msgSend(v0, sel_setPreferredContentSize_);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = (_QWORD *)MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = v5;
    v7 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v8 = (_QWORD *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v5) + 0xB0))();
    v9 = (*(uint64_t (**)(void))((*v7 & *v8) + 0x400))();
    v11 = v10;

    if (v9)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(0xD000000000000014, 0x80000001BD68F6B0, 1, ObjectType, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v11 + 80))(0xD000000000000014, 0x80000001BD68F6B0, ObjectType, v11);
      v12 = swift_unknownObjectRelease();
    }
    if (a3)
      a3(v12);

  }
}

uint64_t sub_1BD4AFE60()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationNoticeViewController.viewWillTransition(to:with:)(a1, v1);
}

void sub_1BD4AFE8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x98))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFEC4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xB0))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFEFC(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC8))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *(double *)v0 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xE0))();
  *(_QWORD *)(v0 + 8) = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFF6C()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xF8))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFFA4(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x100))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4AFFDC()
{
  _BYTE *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x110))() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4B0014(unsigned __int8 *a1, _QWORD **a2)
{
  (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x118))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4B004C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x190))();
  OUTLINED_FUNCTION_0();
}

void type metadata completion function for ConversationNoticeViewController()
{
  unint64_t v0;

  type metadata accessor for ConversationControlsRecipe?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ConversationNoticeViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.controlsManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.recipe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.presentationSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.expanded.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.menuPresented.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureElement.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.__allocating_init(recipe:presentationSize:controlsManager:isSystemAperturePresentation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateNoticeView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.handleTapGesture()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.handleSystemApertureTapGesture()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.systemApertureLeadingAccessoryTapGesture.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateFaceTimeApertureView()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConversationNoticeViewController.updateLeadingAccessory(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t outlined init with take of SystemApertureElement?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BD4B047C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void (*partial apply for closure #1 in ConversationNoticeViewController.trailingButton.getter())(void)
{
  uint64_t v0;

  return closure #1 in ConversationNoticeViewController.trailingButton.getter((_QWORD *)(v0 + 16));
}

uint64_t sub_1BD4B04A8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ConversationNoticeViewController.buttonView(with:actionHandler:)(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

id OUTLINED_FUNCTION_39_62(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 18);
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, float a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    v5 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v6 = result + 4 * v5++;
      *(float *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t specialized Array.init(repeating:count:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  double *v12;

  if (a1 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    v5 = a1;
    if (a1)
    {
      type metadata accessor for CGRect(0);
      result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(_QWORD *)(result + 16) = v5;
      v11 = 32;
      do
      {
        v12 = (double *)(result + v11);
        *v12 = a2;
        v12[1] = a3;
        v12[2] = a4;
        v12[3] = a5;
        v11 += 32;
        --v5;
      }
      while (v5);
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return result;
}

uint64_t OrganicLayout.Configuration.init(deviceType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __int128 v3;
  uint64_t v4;

  if ((_BYTE)result)
  {
    v2 = 0;
    v3 = xmmword_1BD650840;
    if (result == 1)
      v4 = 0x408A100000000000;
    else
      v4 = 0x4089000000000000;
  }
  else
  {
    v3 = xmmword_1BD650830;
    v4 = 0;
    v2 = 1;
  }
  *(_QWORD *)a2 = 0x4030000000000000;
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 32) = v2;
  return result;
}

uint64_t OrganicLayout.init(containingSize:frameCount:indexToExpand:configuration:displayScale:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __n128 v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  __n128 v38;
  double v39;
  double v40;
  char v41;
  uint64_t v42;
  CGSize v43;

  v43.width = 0.0;
  v43.height = 0.0;
  if (CGSizeEqualToSize(*(CGSize *)&a5, v43))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
    v15 = String.init<A>(reflecting:)();
    v17 = v16;
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v17;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    return specialized Array.init(repeating:count:)(a1, 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    if (a6 >= a5)
      v19 = a5;
    else
      v19 = a6;
    if (a6 >= a5)
      v20 = a6;
    else
      v20 = a5;
    switch(a1)
    {
      case 4:
        v32 = OUTLINED_FUNCTION_0_151();
        static OrganicLayout.calculate4UpSizeInfo(in:withOverlap:displayScale:)(v32, v33, v34, v35);
        v36 = OUTLINED_FUNCTION_1_145();
        if ((v41 & 1) != 0)
          static OrganicLayout.create4UpOverlappingPairFrames(in:size:overlap:displayScale:)(v36, v37, v38, v39, v40);
        else
          static OrganicLayout.create4UpRegularFrames(in:size:overlap:displayScale:)(v36, v37, v38, v39, v40);
        break;
      case 3:
        v21 = OUTLINED_FUNCTION_0_151();
        static OrganicLayout.calculate3UpSizeInfo(in:withOverlap:displayScale:)(v21, v22, v23, v24);
        v25 = OUTLINED_FUNCTION_1_145();
        if ((v30 & 1) != 0)
          static OrganicLayout.create3UpOverlappingPairFrames(in:size:overlap:displayScale:)(v25, v26, v27, v28, v29);
        else
          static OrganicLayout.create3UpRegularFrames(in:size:overlap:displayScale:)(v25, v26, v27.n128_f64[0], v28, v29);
        break;
      case 2:
        v31 = static OrganicLayout.createOverlappingPairFrames(in:configuration:displayScale:)(a4, v19, v20, a7);
        break;
      default:
        result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
    }
    v42 = v31;
    if ((a3 & 1) == 0)
    {
      specialized static ParticipantLayout.expandingFrame(_:of:in:displayScale:scaleFactor:shouldInsetFromEdge:)(a2, v31, 0x3FB999999999999ALL, 0, 1, v19, v20, a7);
      OUTLINED_FUNCTION_55_5();
      v42 = a2;
    }
    static OrganicLayout.fitFrames(_:to:)(v42, a5, a6);
    OUTLINED_FUNCTION_55_5();
    return a2;
  }
}

double OrganicLayout.Configuration.minCellOverlap.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void OrganicLayout.Configuration.minCellOverlap.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*OrganicLayout.Configuration.minCellOverlap.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.minCellOverlapThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void OrganicLayout.Configuration.minCellOverlapThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*OrganicLayout.Configuration.minCellOverlapThreshold.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.maxCellOverlap.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void OrganicLayout.Configuration.maxCellOverlap.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*OrganicLayout.Configuration.maxCellOverlap.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double OrganicLayout.Configuration.maxCellOverlapThreshold.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void OrganicLayout.Configuration.maxCellOverlapThreshold.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*OrganicLayout.Configuration.maxCellOverlapThreshold.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*OrganicLayout.Configuration.shouldAlignTopFrameInPairToRightEdge.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t OrganicLayout.frames.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OrganicLayout.frames.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static OrganicLayout.createOverlappingPairFrames(in:configuration:displayScale:)(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  int64x2_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double v21;
  uint64_t v22;
  int64x2_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v29;
  uint64_t v30;
  int64x2_t v31;
  uint64_t v32;

  v8 = type metadata accessor for FloatingPointRoundingRule();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v31.i8[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(double *)a1;
  v13 = (*(double *)a1 + a3) * 0.5;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DED500], v8);
  *(double *)v14.i64 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v13);
  v31 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v32 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v15 = v31.i64[0];
  v16 = v32;
  v17 = floor((*(double *)v31.i64 - v12) * a4);
  v18 = *(_QWORD *)(v32 + 16);
  v19 = *(_QWORD *)(v32 + 24) >> 1;
  v20 = v18 + 1;
  if (v19 <= v18)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v15 = v31.i64[0];
    v16 = v32;
    v19 = *(_QWORD *)(v32 + 24) >> 1;
  }
  v21 = v17 / a4;
  *(_QWORD *)(v16 + 16) = v20;
  v22 = v16 + 32 * v18;
  *(_QWORD *)(v22 + 32) = 0;
  *(double *)(v22 + 40) = v21 * 0.0;
  v23 = vdupq_lane_s64(v15, 0);
  *(int64x2_t *)(v22 + 48) = v23;
  v24 = v18 + 2;
  if (v19 <= v20)
  {
    v31 = v23;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v23 = v31;
    v16 = v32;
  }
  *(_QWORD *)(v16 + 16) = v24;
  v25 = v16 + 32 * v20;
  *(_QWORD *)(v25 + 32) = 0;
  *(double *)(v25 + 40) = v21;
  *(int64x2_t *)(v25 + 48) = v23;
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v27 = *(double *)(v16 + 48);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      v16 = v30;
    }
    *(double *)(v16 + 32) = a2 - v27;
  }
  else
  {
    v26 = *(double *)(v16 + 80);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew()();
      v16 = v29;
    }
    *(double *)(v16 + 64) = a2 - v26;
  }
  return v16;
}

BOOL static OrganicLayout.calculate3UpSizeInfo(in:withOverlap:displayScale:)(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  uint64_t v19;

  v8 = type metadata accessor for FloatingPointRoundingRule();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 + a3 + a2;
  v13 = *MEMORY[0x1E0DED500];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v12 / 3.0);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if ((a1 + a3 * -4.0) * 0.5 >= (a2 + a3) / 2.25)
    v16 = (a2 + a3) / 2.25;
  else
    v16 = (a1 + a3 * -4.0) * 0.5;
  v14(v11, v13, v8);
  v17 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v16);
  v15(v11, v8);
  return v17 * 3.0 >= v12;
}

void static OrganicLayout.create3UpOverlappingPairFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64x2_t *v18;
  int64x2_t v19;
  unint64_t v20;
  int64x2_t *v21;
  unint64_t v22;
  uint64_t v23;
  int64x2_t *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  unint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;

  v33 = a3;
  v9 = type metadata accessor for FloatingPointRoundingRule();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= a1)
    v13 = a1;
  else
    v13 = a2;
  v34 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v14 = v34;
  v15 = *(_QWORD *)(v34 + 16);
  v16 = *(_QWORD *)(v34 + 24) >> 1;
  v17 = v15 + 1;
  if (v16 <= v15)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v14 = v34;
    v16 = *(_QWORD *)(v34 + 24) >> 1;
  }
  *(_QWORD *)(v14 + 16) = v17;
  v18 = (int64x2_t *)(v14 + 32 * v15);
  v18[2].i64[0] = 0;
  v18[2].i64[1] = 0;
  v19 = vdupq_lane_s64(v33.n128_i64[0], 0);
  v18[3] = v19;
  v20 = v15 + 2;
  if (v16 <= v17)
  {
    v33 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = (int64x2_t)v33;
    v14 = v34;
  }
  *(_QWORD *)(v14 + 16) = v20;
  v21 = (int64x2_t *)(v14 + 32 * v17);
  v21[2].i64[0] = 0;
  v21[2].i64[1] = 0;
  v21[3] = v19;
  v22 = *(_QWORD *)(v14 + 16);
  if (v22 >= *(_QWORD *)(v14 + 24) >> 1)
  {
    v33 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = (int64x2_t)v33;
  }
  v23 = v34;
  *(_QWORD *)(v34 + 16) = v22 + 1;
  v24 = (int64x2_t *)(v23 + 32 * v22);
  v24[2].i64[0] = 0;
  v24[2].i64[1] = 0;
  v24[3] = v19;
  v25 = *(double *)(v23 + 56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v23 = v32;
  }
  if (*(_QWORD *)(v23 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  v26 = *(double *)(v23 + 80);
  *(double *)(v23 + 64) = v13 - v26;
  *(double *)(v23 + 72) = v25 - a4;
  v27 = v26 * 0.25 + v13 - v26 - *(double *)(v23 + 48);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DED508], v9);
  v28 = CGFloat.rounded(_:toScale:)((uint64_t)v12, a5, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v29 = *(_QWORD *)(v23 + 16);
  if (!v29)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  v30 = 0.0;
  if (v28 > 0.0)
    v30 = v28;
  *(double *)(v23 + 32) = v30;
  if (v29 < 3)
    goto LABEL_23;
  if (a2 >= a1)
    v31 = a2;
  else
    v31 = a1;
  *(double *)(v23 + 104) = v31 - *(double *)(v23 + 120);
}

void static OrganicLayout.create3UpRegularFrames(in:size:overlap:displayScale:)(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  double v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  int64x2_t v28;
  int64x2_t v29;
  uint64_t v30;

  v30 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v8 = *(_QWORD *)&a3;
  v9 = v30;
  v10 = a3 - a4;
  v11 = floor((a3 - a4) * 0.0 * a5);
  v12 = *(_QWORD *)(v30 + 16);
  v13 = *(_QWORD *)(v30 + 24) >> 1;
  v14 = v12 + 1;
  if (v13 <= v12)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v8 = *(_QWORD *)&a3;
    v9 = v30;
    v13 = *(_QWORD *)(v30 + 24) >> 1;
  }
  *(_QWORD *)(v9 + 16) = v14;
  v15 = v9 + 32 * v12;
  *(_QWORD *)(v15 + 32) = 0;
  v16 = vdupq_lane_s64(v8, 0);
  *(double *)(v15 + 40) = v11 / a5;
  *(int64x2_t *)(v15 + 48) = v16;
  v17 = floor(v10 * a5);
  v18 = v12 + 2;
  if (v13 <= v14)
  {
    v28 = v16;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v16 = v28;
    v9 = v30;
  }
  *(_QWORD *)(v9 + 16) = v18;
  v19 = v9 + 32 * v14;
  *(_QWORD *)(v19 + 32) = 0;
  *(double *)(v19 + 40) = v17 / a5;
  *(int64x2_t *)(v19 + 48) = v16;
  v20 = floor((v10 + v10) * a5);
  v21 = *(_QWORD *)(v9 + 16);
  if (v21 >= *(_QWORD *)(v9 + 24) >> 1)
  {
    v29 = v16;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v16 = v29;
  }
  v22 = v30;
  *(_QWORD *)(v30 + 16) = v21 + 1;
  v23 = v30 + 32 * v21;
  *(_QWORD *)(v23 + 32) = 0;
  *(double *)(v23 + 40) = v20 / a5;
  *(int64x2_t *)(v23 + 48) = v16;
  if (v21)
  {
    a5 = *(double *)(v30 + 80);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    __break(1u);
  }
  specialized _ArrayBuffer._consumeAndCreateNew()();
  v22 = v26;
LABEL_9:
  *(double *)(v22 + 64) = a1 - a5;
  v24 = *(_QWORD *)(v22 + 16);
  if (v24 < 2)
  {
    __break(1u);
  }
  else
  {
    v25 = a4 + a4 + a1 - a5 - *(double *)(v22 + 48);
    if (v25 <= 0.0)
      v25 = 0.0;
    *(double *)(v22 + 32) = v25;
    if (v24 != 2)
    {
      *(_QWORD *)(v22 + 96) = 0;
      return;
    }
  }
  __break(1u);
}

BOOL static OrganicLayout.calculate4UpSizeInfo(in:withOverlap:displayScale:)(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  uint64_t v19;

  v8 = type metadata accessor for FloatingPointRoundingRule();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3 * 3.0 + a2;
  v13 = *MEMORY[0x1E0DED500];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v12 * 0.25);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if ((a1 - a3 * 4.0) * 0.5 >= (a2 + a3) / 3.25)
    v16 = (a2 + a3) / 3.25;
  else
    v16 = (a1 - a3 * 4.0) * 0.5;
  v14(v11, v13, v8);
  v17 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a4, v16);
  v15(v11, v8);
  return v17 * 4.0 >= v12;
}

void static OrganicLayout.create4UpOverlappingPairFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  double v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64x2_t *v18;
  int64x2_t v19;
  unint64_t v20;
  int64x2_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64x2_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  int64x2_t *v27;
  double MaxX;
  double v29;
  unint64_t v30;
  double MinX;
  double v32;
  double v33;
  double v34;
  double MaxY;
  unint64_t v36;
  double MinY;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  CGRect v41;
  CGRect v42;

  v39 = a3;
  v10 = type metadata accessor for FloatingPointRoundingRule();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v14 = v40;
  v15 = *(_QWORD *)(v40 + 16);
  v16 = *(_QWORD *)(v40 + 24) >> 1;
  v17 = v15 + 1;
  if (v16 <= v15)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v14 = v40;
    v16 = *(_QWORD *)(v40 + 24) >> 1;
  }
  *(_QWORD *)(v14 + 16) = v17;
  v18 = (int64x2_t *)(v14 + 32 * v15);
  v18[2].i64[0] = 0;
  v18[2].i64[1] = 0;
  v19 = vdupq_lane_s64(v39.n128_i64[0], 0);
  v18[3] = v19;
  v20 = v15 + 2;
  if (v16 <= v17)
  {
    v39 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = (int64x2_t)v39;
    v14 = v40;
  }
  *(_QWORD *)(v14 + 16) = v20;
  v21 = (int64x2_t *)(v14 + 32 * v17);
  v21[2].i64[0] = 0;
  v21[2].i64[1] = 0;
  v21[3] = v19;
  v22 = *(_QWORD *)(v14 + 16);
  v23 = v22 + 1;
  if (v22 >= *(_QWORD *)(v14 + 24) >> 1)
  {
    v39 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = (int64x2_t)v39;
  }
  v24 = v40;
  *(_QWORD *)(v40 + 16) = v23;
  v25 = (int64x2_t *)(v24 + 32 * v22);
  v25[2].i64[0] = 0;
  v25[2].i64[1] = 0;
  v25[3] = v19;
  v26 = (void (*)(char *, unint64_t, uint64_t))(v22 + 2);
  if (v23 >= *(_QWORD *)(v24 + 24) >> 1)
  {
    v39 = (__n128)v19;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v19 = (int64x2_t)v39;
    v24 = v40;
  }
  *(_QWORD *)(v24 + 16) = v26;
  v27 = (int64x2_t *)(v24 + 32 * v23);
  v27[2].i64[0] = 0;
  v27[2].i64[1] = 0;
  v27[3] = v19;
  MaxX = CGRectGetMaxX(*(CGRect *)(v24 + 64));
  if (*(_QWORD *)(v24 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_25;
  }
  v29 = MaxX + *(double *)(v24 + 80) * -0.25;
  v23 = *MEMORY[0x1E0DED508];
  v26 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 104);
  v26(v13, v23, v10);
  v5 = CGFloat.rounded(_:toScale:)((uint64_t)v13, a5, v29);
  v11 = *(_QWORD *)(v11 + 8);
  ((void (*)(char *, uint64_t))v11)(v13, v10);
  if (*(_QWORD *)(v24 + 16) < 2uLL)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v24 = v38;
    goto LABEL_14;
  }
  if (a1 - *(double *)(v24 + 80) < v5)
    v5 = a1 - *(double *)(v24 + 80);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_26;
LABEL_14:
  v30 = *(_QWORD *)(v24 + 16);
  if (!v30)
  {
    __break(1u);
    goto LABEL_28;
  }
  *(double *)(v24 + 32) = v5;
  if (v30 < 3)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v41.origin.y = *(CGFloat *)(v24 + 104);
  v41.size.width = *(CGFloat *)(v24 + 112);
  v41.origin.x = a1 - v41.size.width;
  *(double *)(v24 + 96) = a1 - v41.size.width;
  v41.size.height = *(CGFloat *)(v24 + 120);
  MinX = CGRectGetMinX(v41);
  if (*(_QWORD *)(v24 + 16) < 3uLL)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v32 = MinX + *(double *)(v24 + 112) * 0.25 - *(double *)(v24 + 112);
  v26(v13, v23, v10);
  v33 = CGFloat.rounded(_:toScale:)((uint64_t)v13, a5, v32);
  ((void (*)(char *, uint64_t))v11)(v13, v10);
  if (*(_QWORD *)(v24 + 16) < 4uLL)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v34 = 0.0;
  if (v33 > 0.0)
    v34 = v33;
  *(double *)(v24 + 128) = v34;
  MaxY = CGRectGetMaxY(*(CGRect *)(v24 + 32));
  v36 = *(_QWORD *)(v24 + 16);
  if (v36 < 2)
    goto LABEL_31;
  *(double *)(v24 + 72) = MaxY - a4;
  if (v36 < 4)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v42.size.width = *(CGFloat *)(v24 + 144);
  v42.size.height = *(CGFloat *)(v24 + 152);
  v42.origin.y = a2 - v42.size.height;
  *(double *)(v24 + 136) = a2 - v42.size.height;
  v42.origin.x = *(CGFloat *)(v24 + 128);
  MinY = CGRectGetMinY(v42);
  if (*(_QWORD *)(v24 + 16) >= 3uLL)
  {
    *(double *)(v24 + 104) = MinY - *(double *)(v24 + 120) + a4;
    return;
  }
LABEL_33:
  __break(1u);
}

void static OrganicLayout.create4UpRegularFrames(in:size:overlap:displayScale:)(double a1, double a2, __n128 a3, double a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64x2_t v20;
  double v21;
  unint64_t v22;
  uint64_t v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  double MaxX;
  double v33;
  unint64_t v34;
  double MinX;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  CGRect v42;

  v40 = a3;
  v8 = type metadata accessor for FloatingPointRoundingRule();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v12 = v40.n128_u64[0];
  v13 = v41;
  v14 = v40.n128_f64[0] - a4;
  v15 = floor(v14 * 0.0 * a5);
  v16 = *(_QWORD *)(v41 + 16);
  v17 = *(_QWORD *)(v41 + 24) >> 1;
  v18 = v16 + 1;
  if (v17 <= v16)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v12 = v40.n128_u64[0];
    v13 = v41;
    v17 = *(_QWORD *)(v41 + 24) >> 1;
  }
  *(_QWORD *)(v13 + 16) = v18;
  v19 = v13 + 32 * v16;
  *(_QWORD *)(v19 + 32) = 0;
  v20 = vdupq_lane_s64(v12, 0);
  *(double *)(v19 + 40) = v15 / a5;
  *(int64x2_t *)(v19 + 48) = v20;
  v21 = floor(v14 * a5);
  v22 = v16 + 2;
  if (v17 <= v18)
  {
    v40 = (__n128)v20;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v20 = (int64x2_t)v40;
    v13 = v41;
  }
  *(_QWORD *)(v13 + 16) = v22;
  v23 = v13 + 32 * v18;
  *(_QWORD *)(v23 + 32) = 0;
  *(double *)(v23 + 40) = v21 / a5;
  *(int64x2_t *)(v23 + 48) = v20;
  v24 = floor((v14 + v14) * a5);
  v25 = *(_QWORD *)(v13 + 16);
  v26 = v25 + 1;
  if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
  {
    v40 = (__n128)v20;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v20 = (int64x2_t)v40;
  }
  v27 = v41;
  *(_QWORD *)(v41 + 16) = v26;
  v28 = v27 + 32 * v25;
  *(_QWORD *)(v28 + 32) = 0;
  *(double *)(v28 + 40) = v24 / a5;
  *(int64x2_t *)(v28 + 48) = v20;
  v29 = floor(v14 * 3.0 * a5);
  v30 = (void (*)(char *, unint64_t, uint64_t))(v25 + 2);
  if (v26 >= *(_QWORD *)(v27 + 24) >> 1)
  {
    v40 = (__n128)v20;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v20 = (int64x2_t)v40;
    v27 = v41;
  }
  *(_QWORD *)(v27 + 16) = v30;
  v31 = v27 + 32 * v26;
  *(_QWORD *)(v31 + 32) = 0;
  *(double *)(v31 + 40) = v29 / a5;
  *(int64x2_t *)(v31 + 48) = v20;
  MaxX = CGRectGetMaxX(*(CGRect *)(v27 + 64));
  if (*(_QWORD *)(v27 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  v33 = MaxX + *(double *)(v27 + 80) * -0.25;
  v26 = *MEMORY[0x1E0DED508];
  v30 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 104);
  v30(v11, v26, v8);
  v29 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a5, v33);
  v9 = *(_QWORD *)(v9 + 8);
  ((void (*)(char *, uint64_t))v9)(v11, v8);
  if (*(_QWORD *)(v27 + 16) < 2uLL)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    specialized _ArrayBuffer._consumeAndCreateNew()();
    v27 = v39;
    goto LABEL_14;
  }
  if (a1 - *(double *)(v27 + 80) < v29)
    v29 = a1 - *(double *)(v27 + 80);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_23;
LABEL_14:
  v34 = *(_QWORD *)(v27 + 16);
  if (!v34)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(double *)(v27 + 32) = v29;
  if (v34 < 3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v42.origin.y = *(CGFloat *)(v27 + 104);
  v42.size.width = *(CGFloat *)(v27 + 112);
  v42.origin.x = a1 - v42.size.width;
  *(double *)(v27 + 96) = a1 - v42.size.width;
  v42.size.height = *(CGFloat *)(v27 + 120);
  MinX = CGRectGetMinX(v42);
  if (*(_QWORD *)(v27 + 16) < 3uLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v36 = MinX + *(double *)(v27 + 112) * 0.25 - *(double *)(v27 + 112);
  v30(v11, v26, v8);
  v37 = CGFloat.rounded(_:toScale:)((uint64_t)v11, a5, v36);
  ((void (*)(char *, uint64_t))v9)(v11, v8);
  if (*(_QWORD *)(v27 + 16) < 4uLL)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v38 = 0.0;
  if (v37 > 0.0)
    v38 = v37;
  *(double *)(v27 + 128) = v38;
}

uint64_t static OrganicLayout.fitFrames(_:to:)(uint64_t a1, double a2, double a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  unint64_t v11;
  int8x16_t *v12;
  int8x16_t v14;
  int8x16_t v15;
  uint64_t v16;

  if (a2 >= a3)
  {
    v5 = *(_QWORD *)(a1 + 16);
    v4 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v16 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v6 = 0;
      v4 = v16;
      v7 = *(_QWORD *)(v16 + 16);
      v8 = 32 * v7;
      do
      {
        v9 = *(int8x16_t *)(a1 + v6 + 32);
        v10 = *(int8x16_t *)(a1 + v6 + 48);
        v11 = v7 + 1;
        if (v7 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          v14 = *(int8x16_t *)(a1 + v6 + 32);
          v15 = *(int8x16_t *)(a1 + v6 + 48);
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v9 = v14;
          v10 = v15;
        }
        *(_QWORD *)(v16 + 16) = v11;
        v12 = (int8x16_t *)(v16 + v8 + v6);
        v12[2] = vextq_s8(v9, v9, 8uLL);
        v12[3] = vextq_s8(v10, v10, 8uLL);
        v6 += 32;
        v7 = v11;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return v4;
}

ValueMetadata *type metadata accessor for OrganicLayout()
{
  return &type metadata for OrganicLayout;
}

uint64_t getEnumTagSinglePayload for OrganicLayout.Configuration(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrganicLayout.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrganicLayout.Configuration()
{
  return &type metadata for OrganicLayout.Configuration;
}

void specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = MostActiveParticipantViewController.insulatingView.getter();
  if (v1)
  {
    v4 = v1;
    v2 = objc_msgSend(v1, sel_superview);

    if (!v2
      && *((_BYTE *)v0
         + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture) == 1)
    {
      objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
      objc_msgSend(v4, sel_setAutoresizingMask_, 18);
      v3 = objc_msgSend(v0, sel_view);
      objc_msgSend(v3, sel_addSubview_, v4);

    }
  }
}

{
  void *v0;
  id v1;
  id v2;
  char v3;
  id v4;
  void *v5;

  v1 = MultiwayViewController.insulatingView.getter();
  if (v1)
  {
    v5 = v1;
    v2 = objc_msgSend(v1, sel_superview);

    if (!v2)
    {
      MultiwayViewController.shouldShowActionTypePhotoCapture.getter();
      if ((v3 & 1) != 0)
      {
        OUTLINED_FUNCTION_18_4(v5, sel_setUserInteractionEnabled_);
        OUTLINED_FUNCTION_88_16(v5, sel_setAutoresizingMask_);
        v4 = objc_msgSend(v0, sel_view);
        objc_msgSend(v4, sel_addSubview_, v5);

      }
    }
    OUTLINED_FUNCTION_7_1(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

void specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = MostActiveParticipantViewController.flashView.getter();
  v2 = objc_msgSend(v1, sel_superview);

  if (!v2
    && *((_BYTE *)v0
       + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture) == 1)
  {
    v3 = MostActiveParticipantViewController.flashView.getter();
    objc_msgSend(v3, sel_setUserInteractionEnabled_, 0);

    v4 = MostActiveParticipantViewController.flashView.getter();
    objc_msgSend(v4, sel_setAutoresizingMask_, 18);

    v5 = objc_msgSend(v0, sel_view);
    if (v5)
    {
      v6 = v5;
      v7 = MostActiveParticipantViewController.flashView.getter();
      objc_msgSend(v6, sel_addSubview_, v7);

    }
    v8 = objc_msgSend(v0, sel_view);
    if (v8)
    {
      v9 = v8;
      v10 = MostActiveParticipantViewController.flashView.getter();
      objc_msgSend(v9, sel_bringSubviewToFront_, v10);

    }
  }
}

{
  void *v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  MultiwayViewController.flashView.getter();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_superview);

  if (!v2)
  {
    MultiwayViewController.shouldShowActionTypePhotoCapture.getter();
    if ((v3 & 1) != 0)
    {
      MultiwayViewController.flashView.getter();
      v5 = v4;
      OUTLINED_FUNCTION_18_4(v4, sel_setUserInteractionEnabled_);

      MultiwayViewController.flashView.getter();
      v7 = v6;
      OUTLINED_FUNCTION_88_16(v6, sel_setAutoresizingMask_);

      v8 = OUTLINED_FUNCTION_14_13();
      if (v8)
      {
        v9 = v8;
        MultiwayViewController.flashView.getter();
        v11 = v10;
        objc_msgSend(v9, sel_addSubview_, v10);

      }
      v12 = OUTLINED_FUNCTION_14_13();
      if (v12)
      {
        v13 = v12;
        MultiwayViewController.flashView.getter();
        v15 = v14;
        objc_msgSend(v13, sel_bringSubviewToFront_, v14);

      }
    }
  }
}

id specialized InsulatingView.init(frame:content:forwardHits:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  _BYTE *v6;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  *(_QWORD *)&v6[direct field offset for InsulatingView.content] = a1;
  v6[direct field offset for InsulatingView.forwardHits] = a2;
  v11 = a1;
  v18.receiver = v6;
  v18.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>);
  v12 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a3, a4, a5, a6);
  v13 = v11;
  v14 = v12;
  objc_msgSend(v14, sel_bounds);
  objc_msgSend(v13, sel_setBounds_);

  v15 = v13;
  objc_msgSend(v14, sel_center);
  objc_msgSend(v15, sel_setCenter_);

  OUTLINED_FUNCTION_88_16(v15, sel_setAutoresizingMask_);
  objc_msgSend(v15, sel__setHostsLayoutEngine_, 1);
  objc_msgSend(v14, sel_addSubview_, v15);
  objc_msgSend(v15, sel_setNeedsLayout);
  objc_msgSend(v15, sel_layoutIfNeeded);
  v16 = v14;
  OUTLINED_FUNCTION_88_16(v16, sel_setAutoresizingMask_);

  return v16;
}

void MostActiveParticipantViewController.mostActiveParticipant.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[344];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = OUTLINED_FUNCTION_14_2();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_2();
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v24 = v8;
    v25 = v0;
    v16 = v14 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v16, v12, type metadata accessor for Participant);
      OUTLINED_FUNCTION_58_36(v12, v7);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
        v19 = (const void *)(v7 + *(int *)(v18 + 48));
        OUTLINED_FUNCTION_7_2((uint64_t *)(v7 + *(int *)(v18 + 64)));
        memcpy(v26, v19, 0x150uLL);
        v20 = OUTLINED_FUNCTION_33();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v7, v20);
        LOBYTE(v19) = v26[0];
        outlined destroy of Participant.MediaInfo((uint64_t)v26);
        if ((v19 & 1) == 0)
        {
          outlined init with take of Participant(v12, v1);
          v21 = 0;
          v0 = v25;
          goto LABEL_10;
        }
      }
      else
      {
        OUTLINED_FUNCTION_40_58(v7);
      }
      outlined destroy of AccountUpdateNotice(v12, type metadata accessor for Participant);
      v16 += v17;
      --v15;
    }
    while (v15);
    v21 = 1;
    v0 = v25;
LABEL_10:
    v8 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = 1;
  }
  __swift_storeEnumTagSinglePayload(v1, v21, 1, v8);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_69_0(v1, 1, v8);
  if (v22)
  {
    v23 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant;
    OUTLINED_FUNCTION_1();
    _s15ConversationKit11ParticipantVWOcTm_2(v23, v3, type metadata accessor for Participant);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant(v1, v3);
  }
  OUTLINED_FUNCTION_52_1();
}

void MostActiveParticipantViewController.focusedParticipant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, a1, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.participantIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_14_2();
  if (OUTLINED_FUNCTION_4_40(v3))
  {
    v4 = OUTLINED_FUNCTION_33_0();
    v5 = a1;
    v6 = 1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_8_98(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    v5 = a1;
    v6 = 0;
    v4 = v7;
  }
  __swift_storeEnumTagSinglePayload(v5, v6, 1, v4);
  OUTLINED_FUNCTION_9_0();
}

void MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.ignoreFocusedParticipantUpdates.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for MostActiveParticipantViewController.participantsViewControllerDelegate : MostActiveParticipantViewController@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for MostActiveParticipantViewController.participantsViewControllerDelegate : MostActiveParticipantViewController(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t MostActiveParticipantViewController.participantsViewControllerDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  return MEMORY[0x1C3B752C0](v1);
}

void MostActiveParticipantViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

uint64_t (*MostActiveParticipantViewController.participantsViewControllerDelegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return MostActiveParticipantViewController.participantsViewControllerDelegate.modify;
}

void MostActiveParticipantViewController.remoteParticipantView.getter()
{
  MostActiveParticipantViewController.remoteParticipantView.getter(&OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView, 0);
}

void key path setter for MostActiveParticipantViewController.remoteParticipantView : MostActiveParticipantViewController(id *a1)
{
  MostActiveParticipantViewController.remoteParticipantView.setter((uint64_t)*a1);
}

void MostActiveParticipantViewController.remoteParticipantView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView);
}

void MostActiveParticipantViewController.remoteParticipantView.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  MostActiveParticipantViewController.remoteParticipantView.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantViewController.remoteParticipantView.modify(void **a1, char a2)
{
  RecentsListViewController.collectionView.modify(a1, a2, (void (*)(void))MostActiveParticipantViewController.remoteParticipantView.setter);
}

void MostActiveParticipantViewController.localParticipantView.getter()
{
  MostActiveParticipantViewController.remoteParticipantView.getter(&OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView, 1);
}

void MostActiveParticipantViewController.remoteParticipantView.getter(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (!v4)
  {
    v6 = v2;
    v7 = objc_allocWithZone((Class)type metadata accessor for ParticipantView());
    v8 = ParticipantView.init(frame:localParticipant:)(a2 & 1);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v6 + v3) = v8;
    v10 = v8;

    v4 = 0;
  }
  v11 = v4;
  OUTLINED_FUNCTION_18();
}

void key path setter for MostActiveParticipantViewController.localParticipantView : MostActiveParticipantViewController(id *a1)
{
  MostActiveParticipantViewController.localParticipantView.setter((uint64_t)*a1);
}

void MostActiveParticipantViewController.localParticipantView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView);
}

void MostActiveParticipantViewController.localParticipantView.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  MostActiveParticipantViewController.localParticipantView.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantViewController.localParticipantView.modify(void **a1, char a2)
{
  RecentsListViewController.collectionView.modify(a1, a2, (void (*)(void))MostActiveParticipantViewController.localParticipantView.setter);
}

void MostActiveParticipantViewController.currentParticipantView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  if (__swift_getEnumTagSinglePayload(v4, 1, v2)
    || (OUTLINED_FUNCTION_58_36(v4, v1), v5 = *(_QWORD *)(v1 + *(int *)(v2 + 28)), OUTLINED_FUNCTION_40_58(v1), v5))
  {
    MostActiveParticipantViewController.remoteParticipantView.getter();
  }
  else
  {
    MostActiveParticipantViewController.localParticipantView.getter();
  }
}

uint64_t MostActiveParticipantViewController.frontBoardInterfaceOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

void MostActiveParticipantViewController.frontBoardInterfaceOrientation.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1
                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.frontBoardInterfaceOrientation.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MostActiveParticipantViewController.shouldShowActionTypePhotoCapture.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture);
}

void MostActiveParticipantViewController.isVisibleInPIP.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.isVisibleInPIP.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.isVisibleInPIP.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

BOOL MostActiveParticipantViewController.shouldRegisterVideoLayers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 v13;
  char *v14;
  char v15;
  uint64_t v16;
  _BYTE v18[24];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v18[-v8];
  v10 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v10, v1, &demangling cache variable for type metadata for Participant?);
  v11 = OUTLINED_FUNCTION_59_0(v1);
  if (v12)
  {
    OUTLINED_FUNCTION_30_7(v11, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  else
  {
    outlined init with take of Participant(v1, (uint64_t)v9);
    v14 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP);
    OUTLINED_FUNCTION_1();
    v15 = *v14;
    v16 = outlined init with take of Participant((uint64_t)v9, (uint64_t)v7);
    v13 = (v15 & 1) != 0 || *(_QWORD *)&v7[*(int *)(v3 + 28)] != 0;
    OUTLINED_FUNCTION_35_2(v16, type metadata accessor for Participant);
  }
  return v13;
}

id MostActiveParticipantViewController.flashView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE *v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView);
  }
  else
  {
    v4 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews);
    OUTLINED_FUNCTION_2_0();
    *v4 = 1;
    type metadata accessor for FlashView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void key path setter for MostActiveParticipantViewController.flashView : MostActiveParticipantViewController(id *a1)
{
  MostActiveParticipantViewController.flashView.setter((uint64_t)*a1);
}

void MostActiveParticipantViewController.flashView.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_4_3(a1, OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView);
}

void MostActiveParticipantViewController.flashView.modify(uint64_t a1)
{
  id *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = MostActiveParticipantViewController.flashView.getter();
  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantViewController.flashView.modify(void **a1, char a2)
{
  RecentsListViewController.collectionView.modify(a1, a2, (void (*)(void))MostActiveParticipantViewController.flashView.setter);
}

id MostActiveParticipantViewController.insulatingView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _BYTE *v5;
  id result;
  id v7;
  double v8;
  id v9;
  SEL v10;
  _QWORD *v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  id v19;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView;
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView);
  v4 = v3;
  if (v3 != (void *)1)
    goto LABEL_5;
  v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews);
  OUTLINED_FUNCTION_2_0();
  *v5 = 1;
  result = OUTLINED_FUNCTION_101_17();
  if (result)
  {
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_22_9();
    v7 = objc_allocWithZone((Class)type metadata accessor for MomentsIndicatorView());
    v8 = OUTLINED_FUNCTION_66();
    v11 = objc_msgSend(v9, v10, v8);
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x68))(1);
    result = OUTLINED_FUNCTION_101_17();
    if (result)
    {
      v12 = result;
      objc_msgSend(result, sel_bounds);

      v13 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>));
      v14 = OUTLINED_FUNCTION_66();
      v4 = specialized InsulatingView.init(frame:content:forwardHits:)(v11, 0, v14, v15, v16, v17);
      v18 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      v19 = v4;
      outlined consume of UIView??(v18);
LABEL_5:
      outlined copy of UIView??(v3);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void key path setter for MostActiveParticipantViewController.insulatingView : MostActiveParticipantViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  MostActiveParticipantViewController.insulatingView.setter((uint64_t)v1);
}

void MostActiveParticipantViewController.insulatingView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView) = a1;
  outlined consume of UIView??(v2);
}

void MostActiveParticipantViewController.insulatingView.modify(uint64_t a1)
{
  id *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = MostActiveParticipantViewController.insulatingView.getter();
  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantViewController.insulatingView.modify(uint64_t *a1, char a2)
{
  void *v2;
  id v3;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    MostActiveParticipantViewController.insulatingView.setter((uint64_t)v2);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    MostActiveParticipantViewController.insulatingView.setter(*a1);
    OUTLINED_FUNCTION_36();
  }
}

void MostActiveParticipantViewController.hasInitializedMomentsViews.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.hasInitializedMomentsViews.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MostActiveParticipantViewController.hasInitializedMomentsViews.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id MostActiveParticipantViewController.__allocating_init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2, a3, a4, a5, a6);
}

id MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _BYTE *v6;
  objc_class *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  objc_super v21;

  v13 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v14 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant];
  v15 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_77_0(v14, v16, v17, v15);
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates] = 0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate);
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation] = 1;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView] = 1;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants] = a1;
  OUTLINED_FUNCTION_58_36(a2, (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant]);
  v18 = &v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_defaults];
  *v18 = a3;
  v18[1] = a4;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_shouldShowActionTypePhotoCapture] = a5;
  v6[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership] = a6;
  v21.receiver = v6;
  v21.super_class = v13;
  v19 = objc_msgSendSuper2(&v21, sel_initWithNibName_bundle_, 0, 0);
  OUTLINED_FUNCTION_40_58(a2);
  return v19;
}

void MostActiveParticipantViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void MostActiveParticipantViewController.init(coder:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant];
  v2 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_77_0(v1, v3, v4, v2);
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates] = 0;
  OUTLINED_FUNCTION_18_1(OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___remoteParticipantView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___localParticipantView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___flashView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController____lazy_storage___insulatingView] = 1;
  v0[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_hasInitializedMomentsViews] = 0;

  OUTLINED_FUNCTION_94_9();
  __break(1u);
}

Swift::Bool __swiftcall MostActiveParticipantViewController._canShowWhileLocked()()
{
  return 1;
}

Swift::Void __swiftcall MostActiveParticipantViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  char *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  Class isa;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  Class v81;
  objc_super v82;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v3 = (objc_class *)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v82.receiver = v2;
  v82.super_class = v3;
  objc_msgSendSuper2(&v82, sel_viewDidLoad);
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  OUTLINED_FUNCTION_98_15();
  v6 = OUTLINED_FUNCTION_123(v5, sel_view);
  if (!v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = v6;
  if (one-time initialization token for background != -1)
    swift_once();
  objc_msgSend(v7, sel_setBackgroundColor_, static Colors.MostActiveParticipantView.background);

  v9 = OUTLINED_FUNCTION_123(v8, sel_view);
  if (!v9)
    goto LABEL_16;
  v10 = v9;
  OUTLINED_FUNCTION_29_70();
  OUTLINED_FUNCTION_68_28();

  v12 = OUTLINED_FUNCTION_123(v11, sel_view);
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12;
  MostActiveParticipantViewController.remoteParticipantView.getter();
  v15 = v14;
  OUTLINED_FUNCTION_68_28();

  OUTLINED_FUNCTION_29_70();
  OUTLINED_FUNCTION_18_4(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  MostActiveParticipantViewController.remoteParticipantView.getter();
  v18 = v17;
  OUTLINED_FUNCTION_18_4(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_);

  OUTLINED_FUNCTION_29_70();
  ParticipantView.shouldOverrideShadowHidden.setter(1);

  MostActiveParticipantViewController.remoteParticipantView.getter();
  v20 = v19;
  ParticipantView.shouldOverrideShadowHidden.setter(1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v21 = OUTLINED_FUNCTION_5_10();
  *(_OWORD *)(v21 + 16) = xmmword_1BD644140;
  OUTLINED_FUNCTION_70_25();
  v23 = OUTLINED_FUNCTION_59_38(v22);
  OUTLINED_FUNCTION_8_20();
  v25 = OUTLINED_FUNCTION_123(v24, sel_view);
  if (!v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v26 = v25;
  v27 = OUTLINED_FUNCTION_59_38(v25);
  OUTLINED_FUNCTION_14();
  v28 = OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_18_14();

  *(_QWORD *)(v21 + 32) = v26;
  OUTLINED_FUNCTION_70_25();
  v30 = objc_msgSend(v29, sel_heightAnchor);
  OUTLINED_FUNCTION_8_20();
  v32 = OUTLINED_FUNCTION_123(v31, sel_view);
  if (!v32)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_heightAnchor);
  OUTLINED_FUNCTION_14();
  v35 = OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_18_14();

  *(_QWORD *)(v21 + 40) = v33;
  OUTLINED_FUNCTION_70_25();
  v37 = OUTLINED_FUNCTION_90_17(v36);
  OUTLINED_FUNCTION_8_20();
  v39 = OUTLINED_FUNCTION_123(v38, sel_view);
  if (!v39)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v40 = v39;
  v41 = OUTLINED_FUNCTION_90_17(v39);
  OUTLINED_FUNCTION_14();
  v42 = OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_18_14();

  *(_QWORD *)(v21 + 48) = v40;
  OUTLINED_FUNCTION_70_25();
  v44 = objc_msgSend(v43, sel_centerYAnchor);
  OUTLINED_FUNCTION_8_20();
  v46 = OUTLINED_FUNCTION_123(v45, sel_view);
  if (!v46)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, sel_centerYAnchor);
  OUTLINED_FUNCTION_14();
  v49 = OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_18_14();

  *(_QWORD *)(v21 + 56) = v47;
  specialized Array._endMutation()();
  *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints] = v21;
  swift_bridgeObjectRelease();
  v50 = (void *)objc_opt_self();
  type metadata accessor for NSLayoutConstraint();
  swift_bridgeObjectRetain();
  isa = OUTLINED_FUNCTION_81_21().super.isa;
  OUTLINED_FUNCTION_27();
  objc_msgSend(v50, sel_activateConstraints_, isa);

  v52 = OUTLINED_FUNCTION_5_10();
  *(_OWORD *)(v52 + 16) = xmmword_1BD644140;
  OUTLINED_FUNCTION_69_23();
  v54 = OUTLINED_FUNCTION_59_38(v53);
  OUTLINED_FUNCTION_13_44();
  v56 = OUTLINED_FUNCTION_123(v55, sel_view);
  if (!v56)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v57 = v56;
  v58 = OUTLINED_FUNCTION_59_38(v56);
  OUTLINED_FUNCTION_8_10();
  v59 = OUTLINED_FUNCTION_20_79();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v52 + 32) = v57;
  OUTLINED_FUNCTION_69_23();
  v61 = objc_msgSend(v60, sel_heightAnchor);
  OUTLINED_FUNCTION_13_44();
  v63 = OUTLINED_FUNCTION_123(v62, sel_view);
  if (!v63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v64 = v63;
  v65 = objc_msgSend(v63, sel_heightAnchor);
  OUTLINED_FUNCTION_8_10();
  v66 = OUTLINED_FUNCTION_20_79();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v52 + 40) = v64;
  OUTLINED_FUNCTION_69_23();
  v68 = OUTLINED_FUNCTION_90_17(v67);
  OUTLINED_FUNCTION_13_44();
  v70 = OUTLINED_FUNCTION_123(v69, sel_view);
  if (!v70)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v71 = v70;
  v72 = OUTLINED_FUNCTION_90_17(v70);
  OUTLINED_FUNCTION_8_10();
  v73 = OUTLINED_FUNCTION_20_79();
  OUTLINED_FUNCTION_10_20();

  *(_QWORD *)(v52 + 48) = v71;
  OUTLINED_FUNCTION_69_23();
  v75 = objc_msgSend(v74, sel_centerYAnchor);
  OUTLINED_FUNCTION_13_44();
  v77 = OUTLINED_FUNCTION_123(v76, sel_view);
  if (v77)
  {
    v78 = v77;
    v79 = objc_msgSend(v77, sel_centerYAnchor);
    OUTLINED_FUNCTION_8_10();
    v80 = OUTLINED_FUNCTION_20_79();
    OUTLINED_FUNCTION_10_20();

    *(_QWORD *)(v52 + 56) = v78;
    specialized Array._endMutation()();
    v81 = OUTLINED_FUNCTION_81_21().super.isa;
    OUTLINED_FUNCTION_27();
    objc_msgSend(v50, sel_activateConstraints_, v81);

    specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()();
    specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()();
    OUTLINED_FUNCTION_52_1();
    return;
  }
LABEL_25:
  __break(1u);
}

Swift::Void __swiftcall MostActiveParticipantViewController.focusOnMostActiveParticipant()()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_4_1();
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall MostActiveParticipantViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v6, sel_viewDidLayoutSubviews);
  v1 = MostActiveParticipantViewController.flashView.getter();
  v2 = OUTLINED_FUNCTION_14_13();
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v2, sel_bounds);
  OUTLINED_FUNCTION_152_5();
  OUTLINED_FUNCTION_32_55();

  v3 = MostActiveParticipantViewController.insulatingView.getter();
  if (!v3)
    return;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_14_13();
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v5, sel_bounds);
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_32_55();

}

Swift::Void __swiftcall MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  Class isa;
  Class v68;
  Swift::String v69;
  CGAffineTransform v70;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_2();
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  OUTLINED_FUNCTION_1();
  if (!MEMORY[0x1C3B752C0](v5))
    goto LABEL_23;
  v6 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  swift_unknownObjectRelease();
  if (v8)
    goto LABEL_23;
  v9 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  if (OUTLINED_FUNCTION_4_40(v9))
    goto LABEL_23;
  v10 = type metadata accessor for Participant;
  OUTLINED_FUNCTION_58_36(v9, v1);
  v11 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  OUTLINED_FUNCTION_40_58(v1);
  if (v11)
    goto LABEL_23;
  v12 = (_QWORD *)(v2
                 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation);
  OUTLINED_FUNCTION_1();
  if (*v12 < 3uLL)
  {
    OUTLINED_FUNCTION_29_70();
    v70.a = 1.0;
    v70.b = 0.0;
    v70.c = 0.0;
    v70.d = 1.0;
    v70.tx = 0.0;
    v70.ty = 0.0;
    ParticipantView.updateLayerTransform(to:)(&v70);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v13 = OUTLINED_FUNCTION_5_10();
    *(_OWORD *)(v13 + 16) = xmmword_1BD644140;
    MostActiveParticipantViewController.localParticipantView.getter();
    v15 = objc_msgSend(v14, sel_widthAnchor);
    OUTLINED_FUNCTION_26_2();
    v16 = OUTLINED_FUNCTION_5_19();
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_widthAnchor);
      OUTLINED_FUNCTION_18_11();
      v19 = OUTLINED_FUNCTION_4_138();
      OUTLINED_FUNCTION_4_39();

      *(_QWORD *)(v13 + 32) = v17;
      MostActiveParticipantViewController.localParticipantView.getter();
      v10 = (uint64_t (*)(uint64_t))&selRef_associatedAppBundleIdentifier;
      v21 = objc_msgSend(v20, sel_heightAnchor);
      OUTLINED_FUNCTION_26_2();
      v22 = OUTLINED_FUNCTION_5_19();
      if (v22)
      {
        v23 = objc_msgSend(v22, sel_heightAnchor);
        OUTLINED_FUNCTION_18_11();
        v24 = OUTLINED_FUNCTION_4_138();
        OUTLINED_FUNCTION_4_39();

        v25 = OUTLINED_FUNCTION_16_90();
        OUTLINED_FUNCTION_26_2();
        v26 = OUTLINED_FUNCTION_5_19();
        if (v26)
        {
          v27 = OUTLINED_FUNCTION_39_63(v26);
          OUTLINED_FUNCTION_18_11();
          v28 = OUTLINED_FUNCTION_4_138();
          OUTLINED_FUNCTION_4_39();

          v29 = OUTLINED_FUNCTION_15_96();
          OUTLINED_FUNCTION_26_2();
          v30 = OUTLINED_FUNCTION_5_19();
          if (v30)
            goto LABEL_22;
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  if (*v12 == 3)
  {
    OUTLINED_FUNCTION_29_70();
    CGAffineTransformMakeRotation(&v70, -1.57079633);
    OUTLINED_FUNCTION_37_50();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v13 = OUTLINED_FUNCTION_5_10();
    v31 = OUTLINED_FUNCTION_44_51((__n128 *)v13, (__n128)xmmword_1BD644140);
    OUTLINED_FUNCTION_26_2();
    v32 = OUTLINED_FUNCTION_5_19();
    if (v32)
    {
      v33 = v32;
      v34 = OUTLINED_FUNCTION_71_23(v32);
      OUTLINED_FUNCTION_18_11();
      v35 = OUTLINED_FUNCTION_4_138();
      OUTLINED_FUNCTION_4_39();

      *(_QWORD *)(v13 + 32) = v33;
      MostActiveParticipantViewController.localParticipantView.getter();
      v37 = OUTLINED_FUNCTION_71_23(v36);
      OUTLINED_FUNCTION_26_2();
      v38 = OUTLINED_FUNCTION_5_19();
      if (v38)
      {
        v39 = OUTLINED_FUNCTION_99_12(v38);
        OUTLINED_FUNCTION_18_11();
        v40 = OUTLINED_FUNCTION_4_138();
        OUTLINED_FUNCTION_4_39();

        v41 = OUTLINED_FUNCTION_16_90();
        OUTLINED_FUNCTION_26_2();
        v42 = OUTLINED_FUNCTION_5_19();
        if (v42)
        {
          v43 = OUTLINED_FUNCTION_39_63(v42);
          OUTLINED_FUNCTION_18_11();
          v44 = OUTLINED_FUNCTION_4_138();
          OUTLINED_FUNCTION_4_39();

          v45 = OUTLINED_FUNCTION_15_96();
          OUTLINED_FUNCTION_26_2();
          v30 = OUTLINED_FUNCTION_5_19();
          if (v30)
            goto LABEL_22;
          goto LABEL_31;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (*v12 == 4)
  {
    OUTLINED_FUNCTION_29_70();
    CGAffineTransformMakeRotation(&v70, 1.57079633);
    OUTLINED_FUNCTION_37_50();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v13 = OUTLINED_FUNCTION_5_10();
    v46 = OUTLINED_FUNCTION_44_51((__n128 *)v13, (__n128)xmmword_1BD644140);
    OUTLINED_FUNCTION_26_2();
    v47 = OUTLINED_FUNCTION_5_19();
    if (v47)
    {
      v48 = v47;
      v49 = OUTLINED_FUNCTION_71_23(v47);
      OUTLINED_FUNCTION_18_11();
      v50 = OUTLINED_FUNCTION_4_138();
      OUTLINED_FUNCTION_4_39();

      *(_QWORD *)(v13 + 32) = v48;
      MostActiveParticipantViewController.localParticipantView.getter();
      v52 = OUTLINED_FUNCTION_71_23(v51);
      OUTLINED_FUNCTION_26_2();
      v53 = OUTLINED_FUNCTION_5_19();
      if (v53)
      {
        v54 = OUTLINED_FUNCTION_99_12(v53);
        OUTLINED_FUNCTION_18_11();
        v55 = OUTLINED_FUNCTION_4_138();
        OUTLINED_FUNCTION_4_39();

        v56 = OUTLINED_FUNCTION_16_90();
        OUTLINED_FUNCTION_26_2();
        v57 = OUTLINED_FUNCTION_5_19();
        if (v57)
        {
          v58 = OUTLINED_FUNCTION_39_63(v57);
          OUTLINED_FUNCTION_18_11();
          v59 = OUTLINED_FUNCTION_4_138();
          OUTLINED_FUNCTION_4_39();

          v60 = OUTLINED_FUNCTION_15_96();
          OUTLINED_FUNCTION_26_2();
          v30 = OUTLINED_FUNCTION_5_19();
          if (v30)
          {
LABEL_22:
            v61 = v30;
            v62 = OUTLINED_FUNCTION_38_58(v30);
            OUTLINED_FUNCTION_18_11();
            v63 = OUTLINED_FUNCTION_4_138();
            OUTLINED_FUNCTION_4_39();

            *(_QWORD *)(v13 + 56) = v61;
            specialized Array._endMutation()();
            v64 = v13;
            v65 = (void *)objc_opt_self();
            v66 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipantViewConstraints;
            type metadata accessor for NSLayoutConstraint();
            swift_bridgeObjectRetain();
            isa = OUTLINED_FUNCTION_81_21().super.isa;
            OUTLINED_FUNCTION_53();
            objc_msgSend(v65, sel_deactivateConstraints_, isa);

            *(_QWORD *)(v2 + v66) = v64;
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_53();
            v68 = OUTLINED_FUNCTION_81_21().super.isa;
            OUTLINED_FUNCTION_27();
            objc_msgSend(v65, sel_activateConstraints_, v68);

LABEL_23:
            OUTLINED_FUNCTION_52_1();
            return;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_36:
  v70.a = 0.0;
  v70.b = -2.68156159e154;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  v70.a = -2.31584178e77;
  *(_QWORD *)&v70.b = 0x80000001BD68F790;
  type metadata accessor for UIInterfaceOrientation(0);
  v69._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_94_9();
  __break(1u);
}

void MostActiveParticipantViewController.focus(on:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  _BYTE v102[80];
  _BYTE v103[80];
  _BYTE v104[80];
  uint64_t v105[10];
  _QWORD v106[10];
  _QWORD v107[11];

  OUTLINED_FUNCTION_93();
  v3 = v2;
  OUTLINED_FUNCTION_4_129();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v93 = (void *)v5;
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_5_27();
  v87 = v8;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_0();
  v90 = v10;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_0();
  v91 = v12;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_0();
  v88 = v14;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_18_0();
  v97 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v86 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Participant?, Participant?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_5_27();
  v89 = v23;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_18_0();
  v92 = v25;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_18_0();
  v94 = v27;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_18_0();
  v95 = v29;
  OUTLINED_FUNCTION_8_4();
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v86 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v86 - v34;
  v96 = (unsigned __int8 *)v0;
  v36 = v0 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  v98 = (char *)v3;
  v37 = v3;
  v38 = v36;
  _s15ConversationKit11ParticipantVWOcTm_2(v37, (uint64_t)v35, type metadata accessor for Participant);
  OUTLINED_FUNCTION_77_16((uint64_t)v35);
  v39 = *(int *)(v20 + 48);
  v40 = v6;
  v41 = v1 + v39;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, v1, &demangling cache variable for type metadata for Participant?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, v41, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_69_0(v1, 1, v6);
  if (!v45)
  {
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t)v33, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_59_0(v41);
    if (!v45)
    {
      outlined init with take of Participant(v41, (uint64_t)v19);
      static Participant.== infix(_:_:)();
      v50 = v49;
      outlined destroy of AccountUpdateNotice((uint64_t)v19, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for Participant?);
      outlined destroy of AccountUpdateNotice((uint64_t)v33, type metadata accessor for Participant);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
      v6 = v97;
      v35 = v98;
      _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v98, v97, type metadata accessor for Participant);
      if ((v50 & 1) != 0)
        goto LABEL_11;
LABEL_13:
      outlined destroy of AccountUpdateNotice(v6, type metadata accessor for Participant);
      goto LABEL_14;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_22_29(v46, type metadata accessor for Participant);
LABEL_9:
    OUTLINED_FUNCTION_275(v42, &demangling cache variable for type metadata for (Participant?, Participant?));
    OUTLINED_FUNCTION_84_17(v47, v48, type metadata accessor for Participant);
    goto LABEL_13;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v35, &demangling cache variable for type metadata for Participant?);
  v42 = OUTLINED_FUNCTION_59_0(v41);
  if (!v45)
    goto LABEL_9;
  OUTLINED_FUNCTION_275(v42, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_84_17(v43, v44, type metadata accessor for Participant);
LABEL_11:
  v51 = 1;
  if (OUTLINED_FUNCTION_4_40(v38))
  {
    v52 = 0;
  }
  else
  {
    v79 = v88;
    _s15ConversationKit11ParticipantVWOcTm_2(v38, v88, type metadata accessor for Participant);
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice(v79, type metadata accessor for Participant);
    outlined init with take of Participant.VideoInfo?((uint64_t)v102, (uint64_t)v107);
    if (v107[0])
    {
      v52 = v107[3];
      outlined release of LinearGradient((uint64_t)v102);
      v51 = 0;
    }
    else
    {
      v52 = 0;
      v51 = 1;
    }
  }
  Participant.videoInfo.getter();
  outlined destroy of AccountUpdateNotice(v6, type metadata accessor for Participant);
  outlined init with take of Participant.VideoInfo?((uint64_t)v103, (uint64_t)v106);
  if (v106[0])
  {
    v84 = v106[3];
    outlined release of LinearGradient((uint64_t)v103);
    if (v52 == v84)
      v85 = v51;
    else
      v85 = 1;
    if (v85 != 1)
      goto LABEL_30;
  }
  else if ((v51 & 1) != 0)
  {
    goto LABEL_30;
  }
LABEL_14:
  v53 = v95;
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, v95, &demangling cache variable for type metadata for Participant?);
  v54 = v94;
  _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v35, v94, type metadata accessor for Participant);
  OUTLINED_FUNCTION_78_21(v54);
  OUTLINED_FUNCTION_2_0();
  outlined assign with take of Participant?(v54, v38);
  swift_endAccess();
  v55 = v96;
  v56 = &v96[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
  v57 = OUTLINED_FUNCTION_1();
  if ((*v56 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v35, v91, type metadata accessor for Participant);
    v98 = (char *)v40;
    v58 = v55[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership];
    MostActiveParticipantViewController.shouldRegisterVideoLayers.getter();
    OUTLINED_FUNCTION_83_25();
    LOBYTE(v88) = 1;
    v87 = 0;
    LOBYTE(v86) = 1;
    v59 = v93;
    OUTLINED_FUNCTION_72_27();
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v60, v61, v62, v63, v64, v65, v66, v58, v86, v87, v88, v89, v90, v91, v92, (uint64_t)v93, v94, v95, (uint64_t)v96,
      v97,
      v98,
      v99,
      v100,
      v101);
    MostActiveParticipantViewController.updateParticipantViewVisibility()();
    MostActiveParticipantViewController.currentParticipantView.getter();
    v68 = v67;
    ParticipantView.configure(with:)(v59);

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_49_47();

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_31_60();

    Participant.videoInfo.getter();
    outlined init with take of Participant.VideoInfo?((uint64_t)v104, (uint64_t)v105);
    if (v105[0])
    {
      outlined release of LinearGradient((uint64_t)v104);
      MostActiveParticipantViewController.update(participant:visibleCameraPosition:)();
    }
    v69 = v92;
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, v92, &demangling cache variable for type metadata for Participant?);
    v70 = (uint64_t)v98;
    v71 = OUTLINED_FUNCTION_69_0(v69, 1, (uint64_t)v98);
    if (v45)
    {
      OUTLINED_FUNCTION_22_29(v71, type metadata accessor for ParticipantViewModel);
      OUTLINED_FUNCTION_92_1(v72, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      v73 = v69;
      v74 = v90;
      outlined init with take of Participant(v73, v90);
      v75 = v89;
      outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, v89, &demangling cache variable for type metadata for Participant?);
      OUTLINED_FUNCTION_59_0(v75);
      if (v76)
      {
        outlined destroy of AccountUpdateNotice(v74, type metadata accessor for Participant);
        OUTLINED_FUNCTION_22_29(v77, type metadata accessor for ParticipantViewModel);
        OUTLINED_FUNCTION_92_1(v78, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v80 = v75;
        v81 = v70;
        v82 = v87;
        outlined init with take of Participant(v80, v87);
        if ((*(_QWORD *)(v74 + *(int *)(v81 + 28)) != 0) == (*(_QWORD *)(v82 + *(int *)(v81 + 28)) == 0)
          && *(_QWORD *)(*(_QWORD *)&v55[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants]
                       + 16) >= 2uLL)
        {
          MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()();
        }
        outlined destroy of AccountUpdateNotice(v82, type metadata accessor for Participant);
        outlined destroy of AccountUpdateNotice(v90, type metadata accessor for Participant);
        OUTLINED_FUNCTION_22_29(v83, type metadata accessor for ParticipantViewModel);
      }
    }
  }
  OUTLINED_FUNCTION_92_1(v57, &demangling cache variable for type metadata for Participant?);
LABEL_30:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateParticipantViewVisibility()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _BOOL8 v11;
  void *v12;
  void *v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_30_6();
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, v2, &demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_69_0(v2, 1, v4);
  if (v7)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant(v2, v0);
    MostActiveParticipantViewController.localParticipantView.getter();
    v9 = v8;
    v10 = *(_QWORD *)(v0 + *(int *)(v4 + 28));
    v11 = v10 == 0;
    objc_msgSend(v8, sel_setHidden_, v10 != 0);

    MostActiveParticipantViewController.remoteParticipantView.getter();
    v13 = v12;
    objc_msgSend(v12, sel_setHidden_, v11);

    OUTLINED_FUNCTION_35_2(v14, type metadata accessor for Participant);
  }
}

void MostActiveParticipantViewController.update(participant:visibleCameraPosition:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;

  OUTLINED_FUNCTION_93();
  v2 = v0;
  v34 = v3;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_33_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_41();
  v30 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - v18;
  v31 = OUTLINED_FUNCTION_14_2();
  v20 = *(int *)(v31 + 20);
  v33 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v19, v5 + v20, v6);
  OUTLINED_FUNCTION_77_16((uint64_t)v19);
  v32 = v2;
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)v17);
  v21 = v1 + *(int *)(v9 + 48);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, v1, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v1, 1, v6);
  if (v23)
  {
    OUTLINED_FUNCTION_90_1((uint64_t)v17);
    OUTLINED_FUNCTION_90_1((uint64_t)v19);
    v22 = OUTLINED_FUNCTION_69_0(v21, 1, v6);
    if (v23)
    {
      OUTLINED_FUNCTION_275(v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_11:
      MostActiveParticipantViewController.currentParticipantView.getter();
      v28 = v27;
      ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(v34, 1, *(_QWORD *)(v33 + *(int *)(v31 + 28)) == 0, 0);

      goto LABEL_12;
    }
    goto LABEL_9;
  }
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v21, 1, v6);
  if (v23)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v17);
    OUTLINED_FUNCTION_9_42((uint64_t)v19);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_9:
    OUTLINED_FUNCTION_275(v22, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_12;
  }
  v24 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v30, v21, v6);
  lazy protocol witness table accessor for type UUID and conformance UUID();
  v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  v26 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v26(v24, v6);
  OUTLINED_FUNCTION_90_1((uint64_t)v17);
  OUTLINED_FUNCTION_90_1((uint64_t)v19);
  v26((uint64_t)v14, v6);
  OUTLINED_FUNCTION_90_1(v1);
  if ((v25 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_52_1();
}

#error "1BD4B4D24: call analysis failed (funcsize=112)"

void MostActiveParticipantViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void MostActiveParticipantViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MostActiveParticipantViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void MostActiveParticipantViewController.update(participant:broadcastingState:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];
  unsigned __int8 v61;
  uint64_t v62;
  unsigned __int8 v63;
  unsigned __int8 v64;
  _QWORD v65[10];
  _BYTE v66[80];
  _BYTE v67[40];
  double v68[4];
  char v69;
  double v70[4];
  char v71;

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41();
  v54 = v4;
  OUTLINED_FUNCTION_4_129();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_41();
  v51 = v6;
  v7 = OUTLINED_FUNCTION_33_0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v53 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v55 = v16;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v50 - v18;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v50 - v23;
  v52 = *(int *)(v2 + 28);
  v25 = *(_QWORD *)(v21 + v52);
  v56 = v21;
  if (!v25)
  {
    v26 = v1;
    v27 = &v1[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_localParticipant];
    OUTLINED_FUNCTION_2_0();
    v28 = (uint64_t)v27;
    v1 = v26;
    outlined assign with copy of Participant(v56, v28);
    swift_endAccess();
    v21 = v56;
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v24, v21 + *(int *)(v2 + 20), v7, v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v7);
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)v19);
  v29 = v14 + *(int *)(v10 + 48);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v24, v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, v29, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0(v14, 1, v7);
  if (!v32)
  {
    v31 = v55;
    outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v14, v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    OUTLINED_FUNCTION_69_0(v29, 1, v7);
    if (!v32)
    {
      v33 = v53;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v53, v29, v7);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      HIDWORD(v50) = dispatch thunk of static Equatable.== infix(_:_:)();
      v34 = v1;
      v35 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v35(v33, v7);
      OUTLINED_FUNCTION_90_1((uint64_t)v19);
      OUTLINED_FUNCTION_90_1((uint64_t)v24);
      v35(v31, v7);
      v1 = v34;
      OUTLINED_FUNCTION_90_1(v14);
      if ((v50 & 0x100000000) == 0)
        goto LABEL_28;
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_9_42((uint64_t)v19);
    OUTLINED_FUNCTION_9_42((uint64_t)v24);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v31, v7);
LABEL_11:
    OUTLINED_FUNCTION_92_1(v30, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_90_1((uint64_t)v19);
  OUTLINED_FUNCTION_90_1((uint64_t)v24);
  v30 = OUTLINED_FUNCTION_69_0(v29, 1, v7);
  if (!v32)
    goto LABEL_11;
  OUTLINED_FUNCTION_92_1(v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_13:
  v36 = &v1[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
  OUTLINED_FUNCTION_1();
  if ((*v36 & 1) == 0)
  {
    _s15ConversationKit11ParticipantVWOcTm_2(v56, v54, type metadata accessor for Participant);
    v37 = v1[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership];
    Participant.videoInfo.getter();
    outlined init with take of Participant.VideoInfo?((uint64_t)v60, (uint64_t)v65);
    if (v65[0]
      && ((memcpy(v66, v65, 0x4AuLL),
           outlined release of LinearGradient((uint64_t)v60),
           outlined init with take of AspectRatio((uint64_t)&v66[40], (uint64_t)v67),
           outlined init with take of AspectRatio((uint64_t)v67, (uint64_t)v70),
           (v71 & 1) != 0)
       || (v70[0] == 1.0 ? (v38 = v70[1] == 1.0) : (v38 = 0), v38))
      && ((outlined init with take of AspectRatio((uint64_t)v67, (uint64_t)v68), (v69 & 1) != 0) || v68[2] == 1.0))
    {
      v40 = v68[3];
      if (v69)
        v40 = 1.0;
      v39 = v40 == 1.0;
    }
    else
    {
      v39 = 0;
    }
    MostActiveParticipantViewController.shouldRegisterVideoLayers.getter();
    OUTLINED_FUNCTION_83_25();
    LOBYTE(v52) = 1;
    v51 = 0;
    LOBYTE(v50) = v39;
    OUTLINED_FUNCTION_72_27();
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v41, v42, v43, v44, v45, v46, v47, v37, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60[0],
      v60[1],
      v61,
      v62,
      v63,
      v64);
    MostActiveParticipantViewController.currentParticipantView.getter();
    v49 = v48;
    ParticipantView.configure(with:)(0);

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_49_47();

    MostActiveParticipantViewController.currentParticipantView.getter();
    OUTLINED_FUNCTION_31_60();

    outlined destroy of AccountUpdateNotice(0, type metadata accessor for ParticipantViewModel);
  }
LABEL_28:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  uint64_t v2;

  *(_BYTE *)(v2
           + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isLocalMemberAuthorizedToChangeGroupMembership) = isLocalMemberAuthorizedToChangeGroupMembership;
}

void MostActiveParticipantViewController.update(with:updateReason:)(Swift::OpaquePointer a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  MostActiveParticipantViewController.updateRemoteParticipants(with:)(a1);
  MostActiveParticipantViewController.mostActiveParticipant.getter();
  MostActiveParticipantViewController.focus(on:)();
  OUTLINED_FUNCTION_98_15();
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall MostActiveParticipantViewController.updateRemoteParticipants(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_93();
  v5 = v4;
  v22 = type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  v7 = OUTLINED_FUNCTION_14_2();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_75_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    v20[1] = v5;
    v21 = v1;
    v14 = *(_QWORD *)(v8 + 72);
    v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = v5 + v23;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_2(v15, (uint64_t)v11, type metadata accessor for Participant);
      if (v11[*(int *)(v7 + 52)] == 1)
      {
        _s15ConversationKit11ParticipantVWOcTm_2((uint64_t)v11, v2, type metadata accessor for Participant.State);
        v16 = (char *)&loc_1BD4B5544 + 4 * byte_1BD6639A0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      outlined init with take of Participant((uint64_t)v11, v3);
      v17 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v24;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v17 = v24;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      outlined init with take of Participant(v3, v17 + v23 + v19 * v14);
      v15 += v14;
      --v13;
    }
    while (v13);
    v12 = v24;
    v1 = v21;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_remoteParticipants) = v12;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_52_1();
}

void MostActiveParticipantViewController.update(participant:audioPower:)(uint64_t a1, Swift::Float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  void (*v25)(uint64_t, uint64_t);
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v7 = OUTLINED_FUNCTION_33_0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_41();
  v28 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - v17;
  v19 = OUTLINED_FUNCTION_14_2();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v18, a1 + *(int *)(v19 + 20), v7);
  OUTLINED_FUNCTION_78_21((uint64_t)v18);
  v29 = v2;
  MostActiveParticipantViewController.participantIdentifier.getter((uint64_t)v15);
  v20 = v3 + *(int *)(v10 + 48);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_59_0(v3);
  if (v22)
  {
    OUTLINED_FUNCTION_42_23((uint64_t)v15);
    OUTLINED_FUNCTION_42_23((uint64_t)v18);
    v21 = OUTLINED_FUNCTION_59_0(v20);
    if (v22)
    {
      OUTLINED_FUNCTION_30_7(v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_11:
      MostActiveParticipantViewController.currentParticipantView.getter();
      v27 = v26;
      ParticipantMonogramView.updateAudioVisualization(with:)(a2);

      return;
    }
LABEL_9:
    OUTLINED_FUNCTION_30_7(v21, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    return;
  }
  outlined init with copy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v3, v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_59_0(v20);
  if (v22)
  {
    OUTLINED_FUNCTION_9_42((uint64_t)v15);
    OUTLINED_FUNCTION_9_42((uint64_t)v18);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    goto LABEL_9;
  }
  v23 = v28;
  OUTLINED_FUNCTION_8_98(v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  lazy protocol witness table accessor for type UUID and conformance UUID();
  v24 = dispatch thunk of static Equatable.== infix(_:_:)();
  v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v25(v23, v7);
  OUTLINED_FUNCTION_42_23((uint64_t)v15);
  OUTLINED_FUNCTION_42_23((uint64_t)v18);
  v25(v4, v7);
  OUTLINED_FUNCTION_42_23(v3);
  if ((v24 & 1) != 0)
    goto LABEL_11;
}

void MostActiveParticipantViewController.spatialPosition(for:relativeTo:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  double v5;
  id v6;
  SEL v7;

  if (objc_msgSend(v2, sel_view))
  {
    MostActiveParticipantViewController.currentParticipantView.getter();
    objc_msgSend(v4, sel_frame);
    OUTLINED_FUNCTION_22_9();
    v5 = OUTLINED_FUNCTION_66();
    objc_msgSend(v6, v7, a2, v5);
    OUTLINED_FUNCTION_152_5();
    OUTLINED_FUNCTION_66();
  }
  else
  {
    __break(1u);
  }
}

uint64_t protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance MostActiveParticipantViewController()
{
  return MostActiveParticipantViewController.participantsViewControllerDelegate.getter();
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance MostActiveParticipantViewController(uint64_t a1, uint64_t a2)
{
  MostActiveParticipantViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance MostActiveParticipantViewController(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return MostActiveParticipantViewController.participantsViewControllerDelegate.modify;
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance MostActiveParticipantViewController()
{
  MostActiveParticipantViewController.update(participant:broadcastingState:)();
}

void protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance MostActiveParticipantViewController(Swift::OpaquePointer a1)
{
  MostActiveParticipantViewController.update(with:updateReason:)(a1);
  OUTLINED_FUNCTION_0();
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance MostActiveParticipantViewController(uint64_t a1, Swift::Float a2)
{
  MostActiveParticipantViewController.update(participant:audioPower:)(a1, a2);
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance MostActiveParticipantViewController(Swift::OpaquePointer a1, Swift::Bool a2)
{
  MostActiveParticipantViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, a2);
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance MostActiveParticipantViewController(uint64_t a1, uint64_t a2)
{
  MostActiveParticipantViewController.spatialPosition(for:relativeTo:)(a1, a2);
}

uint64_t MostActiveParticipantViewController.localLivePhotoAlertView.getter()
{
  return 0;
}

id MostActiveParticipantViewController.underlyingView.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_view);
}

uint64_t MostActiveParticipantViewController.nameForPhotoIndicator.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_93();
  v48 = v2;
  v49 = v3;
  v4 = v0;
  v5 = type metadata accessor for PersonNameComponents();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_51_0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = v4 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  OUTLINED_FUNCTION_1();
  v15 = 0;
  if (__swift_getEnumTagSinglePayload(v14, 1, v9))
    return v15;
  _s15ConversationKit11ParticipantVWOcTm_2(v14, (uint64_t)v13, type metadata accessor for Participant);
  v16 = *(void **)&v13[*(int *)(v9 + 28)];
  if (!v16)
  {
LABEL_10:
    OUTLINED_FUNCTION_58_36((uint64_t)v13, v1);
    swift_retain();
    ParticipantContactDetailsCache.contactDetails(for:)(v1, v27, v28, v29, v30, v31, v32, v33, v36, v37, (uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, v46,
      v47);
    v15 = v41;
    v34 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    OUTLINED_FUNCTION_40_58(v1);
    OUTLINED_FUNCTION_40_58((uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v15;
  }
  v17 = v16;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v17);
  if (!v19)
  {

    goto LABEL_10;
  }
  v15 = v18;
  if ((objc_msgSend(v17, sel_shouldHideContact) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  PersonNameComponents.init()();
  PersonNameComponents.givenName.setter();
  PersonNameComponents.familyName.setter();
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v20 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v20, sel_stringFromPersonNameComponents_, isa);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v25 = v24;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v36 = v23;
  v37 = v25;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();

  v26 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35_2(v26, type metadata accessor for Participant);
  OUTLINED_FUNCTION_27();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t outlined init with take of Participant.VideoInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BD4B5E2C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  MostActiveParticipantViewController.remoteParticipantView.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4B5E50()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  MostActiveParticipantViewController.localParticipantView.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4B5E74()
{
  id *v0;

  OUTLINED_FUNCTION_4();
  *v0 = MostActiveParticipantViewController.flashView.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4B5E98()
{
  id *v0;

  OUTLINED_FUNCTION_4();
  *v0 = MostActiveParticipantViewController.insulatingView.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t ObjC metadata update function for MostActiveParticipantViewController()
{
  return type metadata accessor for MostActiveParticipantViewController();
}

uint64_t type metadata accessor for MostActiveParticipantViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for MostActiveParticipantViewController;
  if (!type metadata singleton initialization cache for MostActiveParticipantViewController)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for MostActiveParticipantViewController()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Participant(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Participant?();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MostActiveParticipantViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MostActiveParticipantViewController.__allocating_init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

id OUTLINED_FUNCTION_39_63(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1638));
}

id OUTLINED_FUNCTION_99_12(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, *(SEL *)(v1 + 1656));
}

id OUTLINED_FUNCTION_101_17()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 328));
}

uint64_t specialized Sequence.compactMap<A>(_:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v39 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v40 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v34 = (char *)v32 - v13;
  v14 = type metadata accessor for IndexPath();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v43 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  v32[0] = v2;
  v32[1] = a1;
  if (v20)
  {
    v21 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v35 = *(_QWORD *)(v15 + 72);
    v36 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
    v42 = v15;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v41 = MEMORY[0x1E0DEE9D8];
    v33 = v6;
    while (1)
    {
      v37(v19, v21, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v14);
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v14) == 1)
        break;
      v22 = (uint64_t)v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v43, v19, v14);
      v23 = *(id *)&v39[v36];
      ParticipantsCollectionViewDataSource.participant(at:)(v22, (uint64_t)v6);

      v24 = type metadata accessor for Participant(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v24) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
        v25 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v9, &v6[*(int *)(v24 + 20)], v10);
        outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for Participant);
        v25 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, v25, 1, v10);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v14);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      }
      else
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
        v27 = v34;
        v26(v34, v9, v10);
        v26(v38, v27, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v28 = *(_QWORD *)(v41 + 16);
        if (v28 >= *(_QWORD *)(v41 + 24) >> 1)
          v41 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v29 = v40;
        v30 = v41;
        *(_QWORD *)(v41 + 16) = v28 + 1;
        v26((char *)(v30+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v28), v38, v10);
        v6 = v33;
      }
      v21 += v35;
      if (!--v20)
        goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v41 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v14);
  }

  swift_bridgeObjectRelease();
  return v41;
}

uint64_t specialized MutableCollection<>.sort(by:)(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

void ParticipantListViewController.participantCount.getter()
{
  char *v0;
  id v1;

  v1 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
  OUTLINED_FUNCTION_15_97();

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0();
}

void ParticipantListViewController.collectionView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v1)
    v2 = v1;
  OUTLINED_FUNCTION_0();
}

void ParticipantListViewController.participantsViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void ParticipantListViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
}

void ParticipantListViewController.participantsViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4B6984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

uint64_t key path getter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1 + *a2;
  OUTLINED_FUNCTION_1();
  result = MEMORY[0x1C3B752C0](v4);
  v6 = *(_QWORD *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

void ParticipantListViewController.participantListViewControllerDelegate.getter()
{
  ParticipantGridViewController.participantsViewControllerDelegate.getter();
}

void ParticipantListViewController.participantListViewControllerDelegate.setter(uint64_t a1, uint64_t a2)
{
  ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
}

void ParticipantListViewController.participantsViewControllerDelegate.setter(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void ParticipantListViewController.participantListViewControllerDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_45();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate;
  v2[5] = v1;
  v2[6] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4B6A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  OUTLINED_FUNCTION_18();
}

void ParticipantListViewController.visibleParticipantIdentifiers.getter()
{
  void *v0;
  uint64_t v1;

  v1 = ParticipantListViewController.indexPathsForVisibleItems()();
  specialized Sequence.compactMap<A>(_:)(v1, (char *)v0);
  OUTLINED_FUNCTION_13_6();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_45_0();
}

uint64_t ParticipantListViewController.indexPathsForVisibleItems()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  objc_msgSend(v2, sel_layoutIfNeeded);
  v3 = objc_msgSend(v2, sel_indexPathsForVisibleItems);
  type metadata accessor for IndexPath();
  v4 = MEMORY[0x1E0CB1658];
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = v5;
  swift_bridgeObjectRetain();
  specialized MutableCollection<>.sort(by:)(&v7, (uint64_t (*)(_QWORD))v4, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  swift_bridgeObjectRelease();

  return v7;
}

void ParticipantListViewController.nonVisibleParticipantIdentifiers.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  ParticipantListViewController.indexPathsForVisibleItems()();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_13_6();
  v3 = specialized Sequence.compactMap<A>(_:)(v2, (char *)v0);
  swift_bridgeObjectRelease();
  v4 = ParticipantListViewController.participantIdentifiers.getter();
  specialized _ArrayProtocol.filter(_:)(v4, v3);
  OUTLINED_FUNCTION_45_0();
}

uint64_t ParticipantListViewController.participantIdentifiers.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = OUTLINED_FUNCTION_14_2();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = type metadata accessor for UUID();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_2();
  v9 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
  v10 = OUTLINED_FUNCTION_15_97();

  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v11, 0);
    OUTLINED_FUNCTION_37_3();
    v13 = v10 + v12;
    v19 = *(_QWORD *)(v3 + 72);
    do
    {
      outlined init with copy of ConversationControlsAction(v13, v6, type metadata accessor for Participant);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6 + *(int *)(v20 + 20), v7);
      outlined destroy of AccountUpdateNotice(v6, type metadata accessor for Participant);
      v14 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v14 = v21;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
        v14 = v21;
      }
      *(_QWORD *)(v14 + 16) = v16 + 1;
      OUTLINED_FUNCTION_37_3();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v14 + v17 + *(_QWORD *)(v2 + 72) * v16, v1, v7);
      v21 = v14;
      v13 += v19;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v14;
}

char *ParticipantListViewController.__allocating_init(localParticipant:remoteParticipants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)(a1, a2, a3, a4);
}

char *ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  objc_super v19;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout;
  v12 = objc_allocWithZone((Class)type metadata accessor for ParticipantListLayout());
  v13 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v12, sel_init);
  v14 = &v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  OUTLINED_FUNCTION_40_4((uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate]);
  objc_allocWithZone((Class)type metadata accessor for ParticipantsCollectionViewDataSource());
  swift_retain();
  *(_QWORD *)&v13[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource] = ParticipantsCollectionViewDataSource.init(participants:participantIsShownInGrid:)(a2, a3, a4);

  v19.receiver = v13;
  v19.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  outlined destroy of AccountUpdateNotice(a1, type metadata accessor for Participant);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout]
      + OBJC_IVAR____TtC15ConversationKit21ParticipantListLayout_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v17 + 8) = &protocol witness table for ParticipantListViewController;
  swift_unknownObjectWeakAssign();
  return v16;
}

void ParticipantListViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void ParticipantListViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;

  v1 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ParticipantListLayout()), sel_init);
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate]);
  OUTLINED_FUNCTION_40_4((uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall ParticipantListViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  SEL v15;
  id v16;
  uint64_t ObjCClassFromMetadata;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  UIView *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  UIView *v37;
  char *v38;
  void *v39;
  void *v40;
  objc_super v41;
  NSDirectionalEdgeInsets v42;
  NSDirectionalEdgeInsets v43;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v8 = OUTLINED_FUNCTION_90_0((uint64_t)v41.super_class, sel_viewDidLoad, v2, v3, v4, v5, v6, v7, v41);
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_view);
  if (!v9)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v9;
  objc_msgSend(v9, sel_bounds);

  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListLayout];
  v12 = objc_allocWithZone(MEMORY[0x1E0DC35B8]);
  v13 = OUTLINED_FUNCTION_66();
  v16 = objc_msgSend(v14, v15, v11, v13);
  OUTLINED_FUNCTION_45_44();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (one-time initialization token for reuseIdentifier != -1)
    swift_once();
  v18 = (void *)MEMORY[0x1C3B72E00](static ParticipantCell.reuseIdentifier, *(_QWORD *)algn_1EF4FCAC8);
  objc_msgSend(v16, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v18);

  objc_msgSend(v16, sel_setDataSource_, *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource]);
  v19 = OUTLINED_FUNCTION_117_4((uint64_t)objc_msgSend(v16, sel_setDelegate_, v1), sel_setDragInteractionEnabled_);
  v20 = OUTLINED_FUNCTION_23_2((uint64_t)v19, sel_setAlwaysBounceHorizontal_);
  v21 = OUTLINED_FUNCTION_117_4((uint64_t)v20, sel_setShowsHorizontalScrollIndicator_);
  OUTLINED_FUNCTION_23_2((uint64_t)v21, sel_setClipsToBounds_);
  v22 = v16;
  static Platform.current.getter();
  objc_msgSend(v22, sel__setContinuousCornerRadius_, 10.0);

  objc_opt_self();
  v23 = OUTLINED_FUNCTION_24_10();
  v24 = objc_msgSend(v18, sel_clearColor);
  OUTLINED_FUNCTION_48_1(v23, sel_setBackgroundColor_);

  v25 = OUTLINED_FUNCTION_0_5();
  if (!v25)
    goto LABEL_11;
  v26 = v25;
  objc_msgSend(v25, sel_addSubview_, v23);

  v27 = OUTLINED_FUNCTION_0_5();
  if (!v27)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v28 = v27;
  v42.top = OUTLINED_FUNCTION_66();
  UIView.addConstraintsToFill(_:insets:)(v29, v42);

  v30 = OUTLINED_FUNCTION_0_5();
  if (!v30)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v31 = v30;
  UIView.addTapInteraction(withTapCount:)(1);

  type metadata accessor for ParticipantDimmingView();
  v32 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v33 = OUTLINED_FUNCTION_0_5();
  if (!v33)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v34 = v33;
  OUTLINED_FUNCTION_48_1(v33, sel_addSubview_);

  v35 = OUTLINED_FUNCTION_0_5();
  if (v35)
  {
    v36 = v35;
    v43.top = OUTLINED_FUNCTION_66();
    UIView.addConstraintsToFill(_:insets:)(v37, v43);

    v38 = &v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
    v39 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
    v40 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent + 8];
    *(_QWORD *)v38 = v23;
    *((_QWORD *)v38 + 1) = v32;
    outlined consume of ConversationControlsRecipe.View?(v39, v40);
    OUTLINED_FUNCTION_9_103();
    return;
  }
LABEL_15:
  __break(1u);
}

Swift::Void __swiftcall ParticipantListViewController.centerParticipantListForAutomationIfNecessary()()
{
  char *v0;
  _QWORD *v1;
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;

  v2 = v0;
  v3 = (_QWORD *)OUTLINED_FUNCTION_8_13();
  v4 = *(v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_17_8(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v1 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v4 + 104))(v1, *MEMORY[0x1E0DEF740], v3);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, _QWORD *))(v4 + 8))(v1, v3);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
LABEL_5:
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 472))() & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      objc_msgSend(v2, sel_contentOffset);
      v10 = v9;
      objc_msgSend(v1, sel_itemSize);
      objc_msgSend(v2, sel_setContentOffset_animated_, 0, v11 * 0.5, v10);
    }
    goto LABEL_9;
  }
  v7 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  if (!v7)
    return;
  v2 = v7;
  v3 = objc_msgSend(v2, sel_collectionViewLayout);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v1 = (_QWORD *)v8;
    if (one-time initialization token for shared == -1)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_9:

}

Swift::Void __swiftcall ParticipantListViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1);
  ParticipantListViewController.centerParticipantListForAutomationIfNecessary()();
  OUTLINED_FUNCTION_36();
}

Swift::Void __swiftcall ParticipantListViewController.viewDidLayoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double *v10;
  double v11;
  double v12;
  char v13;
  id v14;
  id v15;
  BOOL v16;
  id v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)OUTLINED_FUNCTION_15_6();
  v9 = OUTLINED_FUNCTION_90_0((uint64_t)v18.super_class, sel_viewDidLayoutSubviews, v3, v4, v5, v6, v7, v8, v18);
  v10 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  v11 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize];
  v12 = *(double *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize + 8];
  v13 = v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_lastLayedOutViewSize + 16];
  v14 = OUTLINED_FUNCTION_25_1((uint64_t)v9, sel_view);
  if (v14)
  {
    objc_msgSend(v14, sel_bounds);
    OUTLINED_FUNCTION_5_87();
    if ((v13 & 1) != 0 || (v11 == v1 ? (v16 = v12 == v2) : (v16 = 0), !v16))
    {
      v15 = *(id *)&v0[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
      if (v15)
        v15 = objc_msgSend(v15, sel_reloadData);
    }
    v17 = OUTLINED_FUNCTION_25_1((uint64_t)v15, sel_view);
    if (v17)
    {
      objc_msgSend(v17, sel_bounds);
      OUTLINED_FUNCTION_5_87();
      *v10 = v1;
      v10[1] = v2;
      *((_BYTE *)v10 + 16) = 0;
      OUTLINED_FUNCTION_9_103();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Bool __swiftcall ParticipantListViewController._canShowWhileLocked()()
{
  return 1;
}

void ParticipantListViewController.__deallocating_deinit()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  OUTLINED_FUNCTION_48_1(v2, sel_removeObserver_);

  v10.receiver = v0;
  v10.super_class = v1;
  OUTLINED_FUNCTION_90_0(v3, sel_dealloc, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_45_0();
}

Swift::Void __swiftcall ParticipantListViewController.setOverlayHidden(_:)(Swift::Bool a1)
{
  uint64_t v1;
  id v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent))
  {
    v3 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent + 8);
    ParticipantDimmingView.setHidden(_:)(a1);

  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

uint64_t static ParticipantListViewController.filterAndSort(_:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v22);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v21 - v9;
  v11 = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    v13 = *(unsigned __int8 *)(v5 + 80);
    v14 = *(_QWORD *)(v5 + 72);
    v21[1] = a1;
    v23 = (v13 + 32) & ~v13;
    v15 = a1 + v23;
    do
    {
      outlined init with copy of ConversationControlsAction(v15, (uint64_t)v10, type metadata accessor for Participant);
      if (v10[*(int *)(v4 + 52)] == 1)
      {
        outlined init with copy of ConversationControlsAction((uint64_t)v10, (uint64_t)v3, type metadata accessor for Participant.State);
        v16 = (char *)&loc_1BD4B7A6C + 4 * byte_1BD663A80[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      outlined init with take of Participant((uint64_t)v10, (uint64_t)v8);
      v17 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v24;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v17 = v24;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      outlined init with take of Participant((uint64_t)v8, v17 + v23 + v19 * v14);
      v15 += v14;
      --v12;
    }
    while (v12);
    v11 = v24;
  }
  swift_bridgeObjectRelease();
  v24 = v11;
  swift_retain();
  specialized MutableCollection<>.sort(by:)(&v24, type metadata accessor for Participant, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), (uint64_t (*)(_QWORD *))specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  swift_release();
  return v24;
}

uint64_t closure #2 in static ParticipantListViewController.filterAndSort(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t);
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for Date();
  v34 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Date?, Date?));
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v33 - v17;
  v33[0] = a1;
  Participant.broadcastStartDate.getter((uint64_t)v33 - v17);
  v33[1] = a2;
  Participant.broadcastStartDate.getter((uint64_t)v16);
  v19 = (uint64_t)&v12[*(int *)(v10 + 48)];
  outlined init with take of Date?((uint64_t)v18, (uint64_t)v12);
  outlined init with take of Date?((uint64_t)v16, v19);
  LODWORD(v16) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v4);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v19, 1, v4);
  if ((_DWORD)v16 == 1)
  {
    if (EnumTagSinglePayload == 1)
    {
      Participant.contactDetails.getter();
      v21 = v42;
      v22 = v43;
      v23 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v40 = v22;
      v41 = v23;
      Participant.contactDetails.getter();
      v24 = v37;
      v25 = v38;
      v26 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v35 = v25;
      v36 = v26;
      lazy protocol witness table accessor for type String and conformance String();
      v27 = StringProtocol.localizedCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v27 == 1;
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v19, (uint64_t *)&demangling cache variable for type metadata for Date?);
      v28 = 0;
    }
  }
  else if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v4);
    v28 = 1;
  }
  else
  {
    v29 = v34;
    v30 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v30(v9, v12, v4);
    v30(v7, (char *)v19, v4);
    v28 = static Date.< infix(_:_:)();
    v31 = *(void (**)(char *, uint64_t))(v29 + 8);
    v31(v7, v4);
    v31(v9, v4);
  }
  return v28 & 1;
}

uint64_t ParticipantListViewController.rangeOfVisibleItems()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v24 - v4;
  v6 = type metadata accessor for IndexPath();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - v11;
  v13 = ParticipantListViewController.indexPathsForVisibleItems()();
  specialized Collection.first.getter(v13, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v14(v12, v5, v6);
  specialized BidirectionalCollection.last.getter(v13, (uint64_t)v3);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v5 = v3;
LABEL_5:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    return 0;
  }
  v14(v10, v3, v6);
  result = IndexPath.section.getter();
  if (result < 0)
  {
LABEL_27:
    __break(1u);
  }
  else
  {
    v17 = result;
    v25 = v7;
    v26 = v6;
    v18 = 0;
    v19 = 0;
    v15 = 0;
    v20 = 0;
    v27 = 1;
    v28 = 1;
    while (1)
    {
      if (v18 == IndexPath.section.getter())
      {
        result = IndexPath.item.getter();
        v15 = v20 + result;
        if (__OFADD__(v20, result))
          goto LABEL_25;
        v28 = 0;
      }
      if (v18 == IndexPath.section.getter())
      {
        result = IndexPath.item.getter();
        v19 = v20 + result;
        if (__OFADD__(v20, result))
          goto LABEL_26;
        v27 = 0;
      }
      result = ParticipantsCollectionViewDataSource.numberOfItemsInSection(_:)(v18);
      v21 = __OFADD__(v20, result);
      v20 += result;
      if (v21)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if (v17 == v18)
        break;
      v21 = __OFADD__(v18++, 1);
      if (v21)
      {
        __break(1u);
        break;
      }
    }
    v22 = v26;
    v23 = *(void (**)(char *, uint64_t))(v25 + 8);
    v23(v10, v26);
    result = ((uint64_t (*)(char *, uint64_t))v23)(v12, v22);
    if (((v28 | v27) & 1) != 0)
      return 0;
    if (v19 >= v15)
      return v15;
  }
  __break(1u);
  return result;
}

uint64_t ParticipantListViewController.visibilityIndex(for:)(uint64_t a1)
{
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD v24[6];

  v4 = v1;
  v6 = OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_17_8(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v2 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0DEF740], v6);
  v9 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v2, v6);
  if ((v9 & 1) != 0)
  {
    v11 = ParticipantListViewController.rangeOfVisibleItems()();
    if ((v13 & 1) == 0)
    {
      v14 = v11;
      v15 = v12;
      v16 = *(id *)&v4[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
      v17 = OUTLINED_FUNCTION_15_97();

      MEMORY[0x1E0C80A78](v18);
      v24[2] = a1;
      specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #2 in ParticipantsCollectionViewDataSource.indexPath(of:), (uint64_t)v24, v17);
      v20 = v19;
      v22 = v21;
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        if (v20 >= v14)
        {
          if (v15 < v20)
          {
            v23 = v20 - v15;
            if (!__OFSUB__(v20, v15))
              return v23;
            __break(1u);
          }
          return 0;
        }
        v23 = v14 - v20;
        if (!__OFSUB__(v14, v20))
          return v23;
        __break(1u);
      }
    }
    v23 = *(_QWORD *)(ParticipantListViewController.participantIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    return v23;
  }
  __break(1u);
  return result;
}

void *ParticipantListViewController.accessibilityParticipantCollectionView()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v1)
    v2 = v1;
  return v1;
}

void ParticipantListViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x1C3B72E00]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  OUTLINED_FUNCTION_18();
}

void ParticipantListViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ParticipantListViewController.update(participant:broadcastingState:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v5;
  id v6;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v3)
  {
    v5 = v3;
    v6 = OUTLINED_FUNCTION_44_18();
    ParticipantsCollectionViewDataSource.update(_:in:)(a1, v2);

    OUTLINED_FUNCTION_15_9(v6);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

void ParticipantListViewController.update(participant:localParticipantOrientation:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v7;
  id v8;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v4)
  {
    v7 = v4;
    v8 = OUTLINED_FUNCTION_24_10();
    ParticipantsCollectionViewDataSource.update(_:in:with:)(a1, v3, a2);

    OUTLINED_FUNCTION_15_9(v8);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

Swift::Void __swiftcall ParticipantListViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(Swift::OpaquePointer a1, Swift::Bool isLocalMemberAuthorizedToChangeGroupMembership)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *rawValue;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = type metadata accessor for Date();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_27();
  v54 = v6;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&rawValue - v8;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_5_27();
  v52 = v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&rawValue - v12;
  v14 = OUTLINED_FUNCTION_14_2();
  v45 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_5_27();
  v51 = v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&rawValue - v19;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&rawValue - v23;
  v25 = *(void **)&v2[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent];
  if (v25)
  {
    v50 = v22;
    v44 = v2;
    v26 = MEMORY[0x1E0DEE9D8];
    v58 = MEMORY[0x1E0DEE9D8];
    v27 = *((_QWORD *)a1._rawValue + 2);
    v43 = v25;
    swift_bridgeObjectRetain();
    if (v27)
    {
      v49 = v20 + 3;
      OUTLINED_FUNCTION_37_3();
      v55 = *(_QWORD *)(v28 + 72);
      rawValue = a1._rawValue;
      v46 = v29;
      v47 = v13;
      v30 = (char *)a1._rawValue + v29;
      v48 = v14;
      OUTLINED_FUNCTION_41_38();
      outlined init with copy of ConversationControlsAction((uint64_t)v30, (uint64_t)v24, type metadata accessor for Participant);
      outlined init with copy of ConversationControlsAction((uint64_t)v24, (uint64_t)v13, type metadata accessor for Participant.State);
      v31 = (char *)&loc_1BD4B86E8 + 4 * byte_1BD663A87[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(v26 + 16);
    v34 = v43;
    v33 = v44;
    if (v32)
    {
      OUTLINED_FUNCTION_37_3();
      v36 = v26 + v35;
      v37 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
      v39 = *(_QWORD *)(v38 + 72);
      swift_retain();
      do
      {
        v40 = *(id *)&v33[v37];
        v41 = OUTLINED_FUNCTION_13_6();
        ParticipantsCollectionViewDataSource.update(_:in:)(v41, v34);

        v36 += v39;
        --v32;
      }
      while (v32);

      swift_release_n();
    }
    else
    {
      swift_release();

    }
  }
}

uint64_t ParticipantListViewController.update(with:updateReason:)()
{
  UICollectionView *v0;
  UICollectionView *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = v0;
  OUTLINED_FUNCTION_15_6();
  v2 = OUTLINED_FUNCTION_13_6();
  static ParticipantListViewController.filterAndSort(_:)(v2);
  v3 = *(Class *)((char *)&v0->super.super.super.super.isa
                + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v3)
  {
    v0 = *(UICollectionView **)((char *)&v0->super.super.super.super.isa
                              + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource);
    v4 = v3;
    OUTLINED_FUNCTION_44_18();
    v5 = OUTLINED_FUNCTION_13_6();
    ParticipantsCollectionViewDataSource.set(_:in:)((Swift::OpaquePointer)v5, v1);

  }
  else
  {
    v6 = objc_retain(*(id *)((char *)&v0->super.super.super.super.isa
                           + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource));
    v7 = OUTLINED_FUNCTION_13_6();
    ParticipantsCollectionViewDataSource.set(_:)((Swift::OpaquePointer)v7);
  }

  return swift_bridgeObjectRelease();
}

void ParticipantListViewController.update(participant:audioPower:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v5;
  id v6;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent);
  if (v3)
  {
    v5 = v3;
    v6 = OUTLINED_FUNCTION_24_10();
    ParticipantsCollectionViewDataSource.updateAudioPower(forParticipant:in:withPower:)(a1, v3, 5.0);

    OUTLINED_FUNCTION_15_9(v6);
  }
  else
  {
    OUTLINED_FUNCTION_45_0();
  }
}

Swift::Void __swiftcall ParticipantListViewController.removeAllParticipants()()
{
  ParticipantListViewController.update(with:updateReason:)();
}

void ParticipantListViewController.spatialPosition(for:relativeTo:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  double Width;
  double v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v5 = v2;
  v60 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for IndexPath?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = type metadata accessor for IndexPath();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_6_0();
  v13 = OUTLINED_FUNCTION_8_13();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v17 = (uint64_t *)(v16 - v15);
  OUTLINED_FUNCTION_17_8(v18, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v17 = OUTLINED_FUNCTION_7_22();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0DEF740], v13);
  v19 = _dispatchPreconditionTest(_:)();
  v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v17, v13);
  if ((v19 & 1) != 0)
  {
    OUTLINED_FUNCTION_123(v20, sel_bounds);
    Width = CGRectGetWidth(v61);
    objc_msgSend(a2, sel_displayScale);
    v23 = v22;
    v24 = &v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate];
    OUTLINED_FUNCTION_1();
    v57 = v4;
    v58 = v3;
    v59 = v10;
    if (MEMORY[0x1C3B752C0](v24))
    {
      v25 = *((_QWORD *)v24 + 1);
      ObjectType = swift_getObjectType();
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(ObjectType, v25);
      LOBYTE(v25) = v28;
      OUTLINED_FUNCTION_113();
      v29 = v25 & 1;
    }
    else
    {
      v27 = 0;
      v29 = 1;
    }
    type metadata accessor for MultiwayViewConstraintsController();
    static MultiwayViewConstraintsController.listItemWidth(for:displayScale:configurableRosterCellWidth:)(v27, v29, Width, v23);
    v30 = ParticipantListViewController.rangeOfVisibleItems()();
    if ((v32 & 1) != 0)
      goto LABEL_10;
    v33 = v30;
    v34 = v31;
    v35 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource;
    v36 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
    v37 = OUTLINED_FUNCTION_15_97();

    MEMORY[0x1E0C80A78](v38);
    *(&v57 - 2) = v60;
    specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)(&v57 - 4), v37);
    v40 = v39;
    v42 = v41;
    v30 = swift_bridgeObjectRelease();
    if ((v42 & 1) != 0
      || (v43 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_viewContent]) == 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_123(v30, sel_bounds);
      CGRectGetWidth(v63);
      OUTLINED_FUNCTION_123(v45, sel_bounds);
      CGRectGetHeight(v64);
      return;
    }
    if (v40 < v33)
    {
      v44 = v43;
      OUTLINED_FUNCTION_123((uint64_t)v44, sel_bounds);
      CGRectGetHeight(v62);

      return;
    }
    if (v34 < v40)
    {
      v46 = v43;
      OUTLINED_FUNCTION_123((uint64_t)v46, sel_bounds);
      CGRectGetWidth(v65);
      OUTLINED_FUNCTION_123(v47, sel_bounds);
      CGRectGetHeight(v66);

      return;
    }
    v48 = *(void **)&v5[v35];
    v49 = v60 + *(int *)(OUTLINED_FUNCTION_14_2() + 20);
    v50 = v43;
    v51 = v48;
    v52 = v59;
    ParticipantsCollectionViewDataSource.indexPath(of:)(v49, v59);

    if (__swift_getEnumTagSinglePayload(v52, 1, v11) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, (uint64_t *)&demangling cache variable for type metadata for IndexPath?);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v57, v52, v11);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v55 = objc_msgSend(v50, sel_cellForItemAtIndexPath_, isa);

      if (v55)
      {
        objc_msgSend(v55, sel_frame);
        objc_msgSend(v50, sel_convertRect_toCoordinateSpace_, a2);

        OUTLINED_FUNCTION_36_55();
        return;
      }
      v53 = OUTLINED_FUNCTION_36_55();
    }
    OUTLINED_FUNCTION_123(v53, sel_bounds);
    CGRectGetWidth(v67);
    OUTLINED_FUNCTION_123(v56, sel_bounds);
    CGRectGetHeight(v68);

  }
  else
  {
    __break(1u);
  }
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.getter in conformance ParticipantListViewController()
{
  ParticipantListViewController.participantsViewControllerDelegate.getter();
}

void protocol witness for ParticipantsViewController.participantsViewControllerDelegate.setter in conformance ParticipantListViewController(uint64_t a1, uint64_t a2)
{
  ParticipantListViewController.participantsViewControllerDelegate.setter(a1, a2);
}

uint64_t (*protocol witness for ParticipantsViewController.participantsViewControllerDelegate.modify in conformance ParticipantListViewController(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  v5 = OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  v6 = v4 + v5;
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](v6);
  v8 = *(_QWORD *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return MostActiveParticipantViewController.participantsViewControllerDelegate.modify;
}

uint64_t protocol witness for ParticipantsViewController.participantIdentifiers.getter in conformance ParticipantListViewController()
{
  return ParticipantListViewController.participantIdentifiers.getter();
}

void protocol witness for ParticipantsViewController.participantCount.getter in conformance ParticipantListViewController()
{
  ParticipantListViewController.participantCount.getter();
}

void protocol witness for ParticipantsViewController.update(participant:broadcastingState:) in conformance ParticipantListViewController(uint64_t a1)
{
  ParticipantListViewController.update(participant:broadcastingState:)(a1);
}

void protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantListViewController(uint64_t a1, uint64_t a2)
{
  ParticipantListViewController.update(participant:localParticipantOrientation:)(a1, a2);
}

uint64_t protocol witness for ParticipantsViewController.update(with:updateReason:) in conformance ParticipantListViewController()
{
  return ParticipantListViewController.update(with:updateReason:)();
}

void protocol witness for ParticipantsViewController.update(participant:audioPower:) in conformance ParticipantListViewController(uint64_t a1)
{
  ParticipantListViewController.update(participant:audioPower:)(a1);
}

void protocol witness for ParticipantsViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:) in conformance ParticipantListViewController(Swift::OpaquePointer a1)
{
  ParticipantListViewController.updateLocalViews(for:isLocalMemberAuthorizedToChangeGroupMembership:)(a1, 0);
}

void protocol witness for ParticipantsViewController.removeAllParticipants() in conformance ParticipantListViewController()
{
  ParticipantListViewController.removeAllParticipants()();
}

void protocol witness for ParticipantsViewController.spatialPosition(for:relativeTo:) in conformance ParticipantListViewController(uint64_t a1, void *a2)
{
  ParticipantListViewController.spatialPosition(for:relativeTo:)(a1, a2);
}

void ParticipantListViewController.configurableRosterCellWidth.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1BD4B9190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  return v4;
}

void protocol witness for ParticipantListLayoutDelegate.configurableRosterCellWidth.getter in conformance ParticipantListViewController()
{
  ParticipantListViewController.configurableRosterCellWidth.getter();
}

void ParticipantListViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD v29[5];

  v5 = v2;
  v7 = OUTLINED_FUNCTION_15_6();
  v28 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v9 = OUTLINED_FUNCTION_98_11();
  v10 = type metadata accessor for Participant(v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_0();
  v12 = &v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate];
  OUTLINED_FUNCTION_1();
  if (!MEMORY[0x1C3B752C0](v12))
    goto LABEL_5;
  v26 = *((_QWORD *)v12 + 1);
  v27 = a2;
  ObjectType = swift_getObjectType();
  v29[3] = v7;
  v29[4] = &protocol witness table for ParticipantListViewController;
  v29[0] = v5;
  v13 = *(void **)&v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
  v14 = v5;
  v15 = v13;
  v16 = OUTLINED_FUNCTION_15_97();

  v17 = IndexPath.item.getter();
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v17 >= *(_QWORD *)(v16 + 16))
  {
LABEL_12:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_37_3();
  outlined init with copy of ConversationControlsAction(v16 + v18 + *(_QWORD *)(v11 + 72) * v19, v4, type metadata accessor for Participant);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v4 + *(int *)(v10 + 20), v28);
  outlined destroy of AccountUpdateNotice(v4, type metadata accessor for Participant);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v26 + 64))(v29, v3, ObjectType);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  a2 = v27;
LABEL_5:
  OUTLINED_FUNCTION_45_44();
  v20 = swift_dynamicCastClass();
  if (v20)
  {
    v21 = v20;
    if (MEMORY[0x1C3B752C0](v12))
    {
      swift_getObjectType();
      v22 = a2;
      if (OUTLINED_FUNCTION_23_79())
      {

        OUTLINED_FUNCTION_113();
      }
      else
      {
        v23 = *(id *)&v5[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_collectionViewDataSource];
        v24 = OUTLINED_FUNCTION_23_79();
        ParticipantsCollectionViewDataSource.configureCell(_:with:)(v21, v24);

        OUTLINED_FUNCTION_113();
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void ParticipantListViewController.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD *, uint64_t, uint64_t, uint64_t);
  id v16;
  _QWORD v17[5];

  v6 = OUTLINED_FUNCTION_15_6();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_98_11();
  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_45_44();
  v10 = swift_dynamicCastClass();
  if (v10)
  {
    v11 = v10 + OBJC_IVAR____TtC15ConversationKit15ParticipantCell_participantIdentifier;
    OUTLINED_FUNCTION_1();
    outlined init with copy of UUID?(v11, v4);
    if (__swift_getEnumTagSinglePayload(v4, 1, v8) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v4, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v3, v4, v8);
      v12 = v2 + OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate;
      OUTLINED_FUNCTION_1();
      if (MEMORY[0x1C3B752C0](v12))
      {
        v13 = *(_QWORD *)(v12 + 8);
        ObjectType = swift_getObjectType();
        v17[3] = v6;
        v17[4] = &protocol witness table for ParticipantListViewController;
        v17[0] = v2;
        v15 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v13 + 72);
        v16 = a2;
        OUTLINED_FUNCTION_44_18();
        v15(v17, v3, ObjectType, v13);

        swift_unknownObjectRelease();
        OUTLINED_FUNCTION_34_47();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      }
      else
      {
        OUTLINED_FUNCTION_34_47();
      }
    }
  }
  OUTLINED_FUNCTION_52_1();
}

void ParticipantListViewController.currentRosterViews.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    ParticipantListViewController.participantCount.getter();
    if (v1)
    {
      ParticipantListViewController.collectionView.getter();
      if (v2)
      {
        v3 = v2;
        v4 = objc_msgSend(v2, sel_visibleCells);
        OUTLINED_FUNCTION_17_8((uint64_t)v4, (unint64_t *)&lazy cache variable for type metadata for UICollectionViewCell);
        v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v5 >> 62)
        {
          OUTLINED_FUNCTION_17_8(v6, (unint64_t *)&lazy cache variable for type metadata for UIView);
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          v7 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          OUTLINED_FUNCTION_17_8(v7, (unint64_t *)&lazy cache variable for type metadata for UIView);

        }
        swift_bridgeObjectRelease();
      }
    }
  }
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1BD4B985C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate, a2);
}

void sub_1BD4B9878(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate);
}

uint64_t sub_1BD4B9894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for ParticipantListViewController.participantsViewControllerDelegate : ParticipantListViewController(a1, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate, a2);
}

void sub_1BD4B98B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  key path setter for ParticipantGridViewController.participantsViewControllerDelegate : ParticipantGridViewController(a1, a2, a3, a4, &OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate);
}

uint64_t dispatch thunk of ParticipantListViewControllerDelegate.configurableRosterCellWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for ParticipantListViewController()
{
  return objc_opt_self();
}

uint64_t method lookup function for ParticipantListViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ParticipantListViewController.__allocating_init(localParticipant:remoteParticipants:participantIsShownInGrid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ParticipantListViewController.ViewContent(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ParticipantListViewController.ViewContent(id *a1)
{

}

uint64_t assignWithCopy for ParticipantListViewController.ViewContent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ParticipantListViewController.ViewContent(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

void *type metadata accessor for ParticipantListViewController.ViewContent()
{
  return &unk_1E763B040;
}

void specialized UnsafeMutableBufferPointer._stableSortImpl(by:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  Swift::Int v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  char **v18;
  Swift::Int v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  Swift::Int v30;
  char *v31;
  uint64_t v32;
  Swift::Int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  char *v45;
  Swift::Int v46;
  char *v47;
  uint64_t v48;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  char *v53;
  Swift::Int v54;
  uint64_t v55;
  char *v56;
  Swift::Int v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char **v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  Swift::Int *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  Swift::Int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  Swift::Int v135;
  char *v136;
  Swift::Int v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  void (*v145)(char *, char *, uint64_t);
  char **v146;
  uint64_t v147;
  char *v148;
  Swift::Int v149;
  uint64_t v150;
  _QWORD *v151;

  v2 = v1;
  v147 = type metadata accessor for IndexPath();
  v151 = *(_QWORD **)(v147 - 8);
  v4 = MEMORY[0x1E0C80A78](v147);
  v136 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v148 = (char *)&v130 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v144 = (char *)&v130 - v9;
  MEMORY[0x1E0C80A78](v8);
  v143 = (char *)&v130 - v10;
  v11 = a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        specialized MutableCollection<>._insertionSort(within:sortedEnd:by:)(0, v12, 1, (_QWORD *)v11);
      return;
    }
    goto LABEL_140;
  }
  v14 = v13;
  v132 = specialized static Array._allocateUninitialized(_:)(v12 / 2);
  v133 = v12;
  v138 = v15;
  if (v12 <= 0)
  {
LABEL_104:
    v17 = MEMORY[0x1E0DEE9D8];
    v71 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v18 = (char **)v11;
LABEL_105:
    if (v71 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      if (v133 >= -1)
        goto LABEL_117;
      goto LABEL_144;
    }
    v122 = *v18;
    while (1)
    {
      v11 = v71 - 2;
      if (v71 < 2)
        break;
      if (!v122)
        goto LABEL_148;
      v123 = v17;
      v124 = v17 + 32;
      v125 = *(_QWORD *)(v17 + 32 + 16 * v11);
      v126 = *(_QWORD *)(v17 + 32 + 16 * (v71 - 1) + 8);
      specialized _merge<A>(low:mid:high:buffer:by:)((unint64_t)&v122[v151[9] * v125], (unint64_t)&v122[v151[9] * *(_QWORD *)(v124 + 16 * (v71 - 1))], (unint64_t)&v122[v151[9] * v126], v138);
      if (v2)
        goto LABEL_102;
      if (v126 < v125)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized _ArrayBuffer._consumeAndCreateNew()(v123);
        v123 = v129;
      }
      if (v11 >= *(_QWORD *)(v123 + 16))
        goto LABEL_136;
      v127 = (_QWORD *)(v123 + 32 + 16 * v11);
      *v127 = v125;
      v127[1] = v126;
      v128 = *(_QWORD *)(v123 + 16);
      if (v71 > v128)
        goto LABEL_137;
      v17 = v123;
      memmove((void *)(v123 + 32 + 16 * (v71 - 1)), (const void *)(v123 + 32 + 16 * v71), 16 * (v128 - v71));
      *(_QWORD *)(v123 + 16) = v128 - 1;
      v71 = v128 - 1;
      if (v128 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v131 = v14;
  v16 = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = (char **)v11;
  v146 = (char **)v11;
  while (1)
  {
    v19 = v16 + 1;
    v137 = v16;
    if (v16 + 1 >= v12)
    {
      v30 = v16 + 1;
      v38 = v147;
    }
    else
    {
      v20 = *v18;
      v139 = v2;
      v140 = v20;
      v149 = v12;
      v21 = v151;
      v22 = v151[9];
      v23 = (void (*)(char *, char *, uint64_t))v151[2];
      v24 = v143;
      v25 = v147;
      v23(v143, &v20[v22 * v19], v147);
      v26 = &v20[v22 * v137];
      v27 = v144;
      v23(v144, v26, v25);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1678]);
      v142 = v28;
      LODWORD(v145) = dispatch thunk of static Comparable.< infix(_:_:)();
      v29 = (void (*)(char *, uint64_t))v21[1];
      v29(v27, v25);
      v16 = v137;
      v29(v24, v25);
      v30 = v16 + 2;
      v150 = v22;
      if (v16 + 2 >= v149)
      {
        v12 = v149;
        v2 = v139;
      }
      else
      {
        v134 = v17;
        v141 = v22 * v19;
        v31 = v140;
        v32 = v22 * v30;
        while (1)
        {
          v33 = v30;
          v34 = v143;
          v35 = v147;
          v23(v143, &v31[v32], v147);
          v36 = v144;
          v23(v144, &v31[v141], v35);
          v37 = dispatch thunk of static Comparable.< infix(_:_:)();
          v29(v36, v35);
          v29(v34, v35);
          if (((v145 ^ v37) & 1) != 0)
            break;
          v30 = v33 + 1;
          v31 += v150;
          if (v33 + 1 >= v149)
          {
            v12 = v149;
            v30 = v149;
            v2 = v139;
            v17 = v134;
            v16 = v137;
            goto LABEL_13;
          }
        }
        v2 = v139;
        v17 = v134;
        v30 = v33;
        v16 = v137;
        v12 = v149;
      }
LABEL_13:
      v18 = v146;
      v38 = v147;
      if ((v145 & 1) != 0)
      {
        if (v30 < v16)
          goto LABEL_141;
        if (v16 < v30)
        {
          v134 = v17;
          v139 = v2;
          v39 = 0;
          v40 = v150;
          v41 = v150 * (v30 - 1);
          v42 = v30 * v150;
          v43 = v16;
          v44 = v16 * v150;
          do
          {
            if (v43 != v30 + v39 - 1)
            {
              v45 = v140;
              if (!v140)
                goto LABEL_147;
              v46 = v30;
              v47 = &v140[v44];
              v142 = &v140[v41];
              v48 = v147;
              v145 = (void (*)(char *, char *, uint64_t))v151[4];
              v145(v136, &v140[v44], v147);
              if (v44 < v41 || v47 >= &v45[v42])
              {
                v50 = v142;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v50 = v142;
                if (v44 != v41)
                  swift_arrayInitWithTakeBackToFront();
              }
              v145(v50, v136, v48);
              v18 = v146;
              v30 = v46;
              v40 = v150;
            }
            ++v43;
            --v39;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v30 + v39);
          v2 = v139;
          v17 = v134;
          v38 = v147;
          v16 = v137;
          v12 = v149;
        }
      }
    }
    if (v30 < v12)
    {
      if (__OFSUB__(v30, v16))
        goto LABEL_139;
      if (v30 - v16 < v131)
      {
        if (__OFADD__(v16, v131))
          goto LABEL_142;
        if (v16 + v131 >= v12)
          v51 = v12;
        else
          v51 = v16 + v131;
        if (v51 < v16)
          goto LABEL_143;
        if (v30 != v51)
        {
          v134 = v17;
          v135 = v51;
          v52 = v151[9];
          v53 = (char *)v151[2];
          v139 = v2;
          v140 = v53;
          v150 = v52 * (v30 - 1);
          v141 = v52;
          v54 = v30 * v52;
          do
          {
            v55 = 0;
            v145 = (void (*)(char *, char *, uint64_t))v30;
            v142 = (char *)v54;
            while (1)
            {
              v149 = v16;
              v56 = *v18;
              v57 = (Swift::Int)&(*v18)[v54 + v55];
              v58 = v143;
              v59 = v18;
              v60 = (void (*)(char *, char *, uint64_t))v140;
              ((void (*)(char *, Swift::Int, uint64_t))v140)(v143, v57, v38);
              v61 = v144;
              v60(v144, &v56[v150 + v55], v38);
              _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type IndexPath and conformance IndexPath, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], MEMORY[0x1E0CB1678]);
              LOBYTE(v56) = dispatch thunk of static Comparable.< infix(_:_:)();
              v62 = (void (*)(char *, uint64_t))v151[1];
              v62(v61, v38);
              v62(v58, v38);
              if ((v56 & 1) == 0)
                break;
              v63 = *v59;
              if (!*v59)
                goto LABEL_145;
              v54 = (Swift::Int)v142;
              v64 = &v63[v150 + v55];
              v65 = (void (*)(char *, char *, uint64_t))v151[4];
              v66 = v147;
              v65(v148, &v142[(_QWORD)v63 + v55], v147);
              v38 = v66;
              swift_arrayInitWithTakeFrontToBack();
              v65(v64, v148, v66);
              v55 -= v141;
              v16 = v149 + 1;
              v67 = v145;
              v18 = v146;
              if (v145 == (void (*)(char *, char *, uint64_t))(v149 + 1))
                goto LABEL_46;
            }
            v38 = v147;
            v67 = v145;
            v18 = v59;
            v54 = (Swift::Int)v142;
LABEL_46:
            v30 = (Swift::Int)v67 + 1;
            v150 += v141;
            v54 += v141;
            v16 = v137;
          }
          while (v30 != v135);
          v30 = v135;
          v2 = v139;
          v17 = v134;
        }
      }
    }
    if (v30 < v16)
      goto LABEL_138;
    v68 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v17 + 16) + 1, 1, (char *)v17);
      v17 = v120;
    }
    v70 = *(_QWORD *)(v17 + 16);
    v69 = *(_QWORD *)(v17 + 24);
    v71 = v70 + 1;
    v139 = v2;
    if (v70 >= v69 >> 1)
    {
      specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1, (char *)v17);
      v17 = v121;
    }
    v18 = v68;
    *(_QWORD *)(v17 + 16) = v71;
    v72 = v17 + 32;
    v73 = (Swift::Int *)(v17 + 32 + 16 * v70);
    *v73 = v16;
    v73[1] = v30;
    v145 = (void (*)(char *, char *, uint64_t))v30;
    if (v70)
      break;
    v71 = 1;
LABEL_96:
    v12 = (Swift::Int)v18[1];
    v16 = (Swift::Int)v145;
    v2 = v139;
    if ((uint64_t)v145 >= v12)
      goto LABEL_105;
  }
  while (1)
  {
    v74 = v71 - 1;
    if (v71 >= 4)
    {
      v79 = v72 + 16 * v71;
      v80 = *(_QWORD *)(v79 - 64);
      v81 = *(_QWORD *)(v79 - 56);
      v85 = __OFSUB__(v81, v80);
      v82 = v81 - v80;
      if (v85)
        goto LABEL_123;
      v84 = *(_QWORD *)(v79 - 48);
      v83 = *(_QWORD *)(v79 - 40);
      v85 = __OFSUB__(v83, v84);
      v77 = v83 - v84;
      v78 = v85;
      if (v85)
        goto LABEL_124;
      v86 = v71 - 2;
      v87 = (uint64_t *)(v72 + 16 * (v71 - 2));
      v89 = *v87;
      v88 = v87[1];
      v85 = __OFSUB__(v88, v89);
      v90 = v88 - v89;
      if (v85)
        goto LABEL_125;
      v85 = __OFADD__(v77, v90);
      v91 = v77 + v90;
      if (v85)
        goto LABEL_127;
      if (v91 >= v82)
      {
        v109 = (uint64_t *)(v72 + 16 * v74);
        v111 = *v109;
        v110 = v109[1];
        v85 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v85)
          goto LABEL_133;
        v102 = v77 < v112;
        goto LABEL_85;
      }
    }
    else
    {
      if (v71 != 3)
      {
        v103 = *(_QWORD *)(v17 + 32);
        v104 = *(_QWORD *)(v17 + 40);
        v85 = __OFSUB__(v104, v103);
        v96 = v104 - v103;
        v97 = v85;
        goto LABEL_79;
      }
      v76 = *(_QWORD *)(v17 + 32);
      v75 = *(_QWORD *)(v17 + 40);
      v85 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      v78 = v85;
    }
    if ((v78 & 1) != 0)
      goto LABEL_126;
    v86 = v71 - 2;
    v92 = (uint64_t *)(v72 + 16 * (v71 - 2));
    v94 = *v92;
    v93 = v92[1];
    v95 = __OFSUB__(v93, v94);
    v96 = v93 - v94;
    v97 = v95;
    if (v95)
      goto LABEL_128;
    v98 = (uint64_t *)(v72 + 16 * v74);
    v100 = *v98;
    v99 = v98[1];
    v85 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v85)
      goto LABEL_130;
    if (__OFADD__(v96, v101))
      goto LABEL_132;
    if (v96 + v101 >= v77)
    {
      v102 = v77 < v101;
LABEL_85:
      if (v102)
        v74 = v86;
      goto LABEL_87;
    }
LABEL_79:
    if ((v97 & 1) != 0)
      goto LABEL_129;
    v105 = (uint64_t *)(v72 + 16 * v74);
    v107 = *v105;
    v106 = v105[1];
    v85 = __OFSUB__(v106, v107);
    v108 = v106 - v107;
    if (v85)
      goto LABEL_131;
    if (v108 < v96)
      goto LABEL_96;
LABEL_87:
    v11 = v74 - 1;
    if (v74 - 1 >= v71)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v18)
      goto LABEL_146;
    v113 = v17;
    v114 = (uint64_t *)(v72 + 16 * v11);
    v115 = *v114;
    v116 = (_QWORD *)(v72 + 16 * v74);
    v117 = v116[1];
    v118 = v139;
    specialized _merge<A>(low:mid:high:buffer:by:)((unint64_t)&(*v18)[v151[9] * *v114], (unint64_t)&(*v18)[v151[9] * *v116], (unint64_t)&(*v18)[v151[9] * v117], v138);
    v139 = v118;
    if (v118)
      break;
    if (v117 < v115)
      goto LABEL_120;
    if (v74 > *(_QWORD *)(v113 + 16))
      goto LABEL_121;
    *v114 = v115;
    *(_QWORD *)(v72 + 16 * v11 + 8) = v117;
    v119 = *(_QWORD *)(v113 + 16);
    if (v74 >= v119)
      goto LABEL_122;
    v17 = v113;
    v71 = v119 - 1;
    memmove((void *)(v72 + 16 * v74), v116 + 2, 16 * (v119 - 1 - v74));
    *(_QWORD *)(v113 + 16) = v119 - 1;
    v18 = v146;
    if (v119 <= 2)
      goto LABEL_96;
  }
  v2 = v139;
LABEL_102:
  swift_bridgeObjectRelease();
  if (v133 < -1)
  {
    __break(1u);
    goto LABEL_104;
  }
LABEL_117:
  *(_QWORD *)(v132 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t TranscriptionViewModel.callUUID.getter()
{
  return TranscriptionViewModel.callUUID.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  return v1;
}

void TranscriptionViewModel.state.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_45_0();
}

uint64_t TranscriptionViewModel.captions.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  return v1;
}

uint64_t TranscriptionViewModel.Caption.init(id:dateCreated:dateUpdated:text:isBadTranscription:lowConfidenceRanges:isComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>)
{
  int *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v20;

  *a9 = a1;
  v15 = (int *)type metadata accessor for TranscriptionViewModel.Caption(0);
  v16 = (char *)a9 + v15[5];
  v17 = OUTLINED_FUNCTION_33();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v16, a2, v17);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)((char *)a9 + v15[6], a3, v17);
  v20 = (_QWORD *)((char *)a9 + v15[7]);
  *v20 = a4;
  v20[1] = a5;
  *((_BYTE *)a9 + v15[8]) = a6;
  *(_QWORD *)((char *)a9 + v15[9]) = a7;
  *((_BYTE *)a9 + v15[10]) = a8;
  return result;
}

void TranscriptionViewModel.__allocating_init(config:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_6();
  swift_allocObject();
  TranscriptionViewModel.init(config:)(v1, v0);
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.hidePrivacySensitiveContent.setter()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.setter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  static Published.subscript.setter();
  OUTLINED_FUNCTION_45_0();
}

uint64_t TranscriptionViewModel.$callUUID.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callUUID, &demangling cache variable for type metadata for Published<String>);
}

uint64_t TranscriptionViewModel.$captions.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
}

void TranscriptionViewModel.CaptionID.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

void TranscriptionViewModel.callUUID.setter()
{
  OUTLINED_FUNCTION_6_6();
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_27_67();
  TranscriptionViewModel.callUUID.getter();
  TranscriptionViewModel.state.setter();
  TranscriptionViewModel.captions.setter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_49_0();
}

void TranscriptionViewModel.callerDisplayName.setter()
{
  OUTLINED_FUNCTION_6_6();
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_27_67();
  OUTLINED_FUNCTION_49_0();
}

void TranscriptionViewModel.hidePrivacySensitiveContent.getter()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_608();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_45_0();
}

void TranscriptionViewModel.state.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_45_0();
}

BOOL static TranscriptionViewModel.State.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void TranscriptionViewModel.isGibberish.getter()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
}

void key path getter for TranscriptionViewModel.captions : TranscriptionViewModel()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_53_45();
  OUTLINED_FUNCTION_0();
}

void key path setter for TranscriptionViewModel.captions : TranscriptionViewModel()
{
  swift_bridgeObjectRetain();
  TranscriptionViewModel.captions.setter();
  OUTLINED_FUNCTION_0();
}

void TranscriptionViewModel.captions.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_45_0();
}

uint64_t TranscriptionViewModel.callerDisplayName.getter()
{
  return TranscriptionViewModel.callUUID.getter();
}

void TranscriptionViewModel.captions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.isGibberish.setter()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.setter();
}

uint64_t TranscriptionViewModel.Caption.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TranscriptionViewModel.Caption.id.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TranscriptionViewModel.Caption.id.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.dateCreated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_54_39();
  OUTLINED_FUNCTION_12_106();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t TranscriptionViewModel.Caption.dateCreated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_24_67();
  OUTLINED_FUNCTION_12_106();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

double (*TranscriptionViewModel.Caption.dateCreated.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.dateUpdated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_54_39();
  OUTLINED_FUNCTION_12_106();
  v0 = OUTLINED_FUNCTION_70_2();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

uint64_t TranscriptionViewModel.Caption.dateUpdated.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_24_67();
  OUTLINED_FUNCTION_12_106();
  v0 = OUTLINED_FUNCTION_69_1();
  return OUTLINED_FUNCTION_31_0(v0, v1, v2, v3);
}

double (*TranscriptionViewModel.Caption.dateUpdated.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void TranscriptionViewModel.Caption.text.getter()
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_0();
}

void TranscriptionViewModel.Caption.text.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_6_6();
  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 28));
  swift_bridgeObjectRelease();
  *v3 = v2;
  v3[1] = v0;
  OUTLINED_FUNCTION_18();
}

double (*TranscriptionViewModel.Caption.text.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.isBadTranscription.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 32));
}

void TranscriptionViewModel.Caption.isBadTranscription.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_24_67() + 32)) = v0;
  OUTLINED_FUNCTION_0();
}

double (*TranscriptionViewModel.Caption.isBadTranscription.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.lowConfidenceRanges.getter()
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return swift_bridgeObjectRetain();
}

void TranscriptionViewModel.Caption.lowConfidenceRanges.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(int *)(OUTLINED_FUNCTION_24_67() + 36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v2) = v0;
  OUTLINED_FUNCTION_18();
}

double (*TranscriptionViewModel.Caption.lowConfidenceRanges.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t TranscriptionViewModel.Caption.isComplete.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TranscriptionViewModel.Caption(0) + 40));
}

void TranscriptionViewModel.Caption.isComplete.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_24_67() + 40)) = v0;
  OUTLINED_FUNCTION_0();
}

double (*TranscriptionViewModel.Caption.isComplete.modify())(_QWORD)
{
  type metadata accessor for TranscriptionViewModel.Caption(0);
  return TPNumberPadCharacter.rawValue.getter;
}

void static TranscriptionViewModel.Caption.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if (*a1 == *a2)
  {
    v4 = type metadata accessor for TranscriptionViewModel.Caption(0);
    if ((OUTLINED_FUNCTION_101_2() & 1) != 0 && (OUTLINED_FUNCTION_101_2() & 1) != 0)
    {
      OUTLINED_FUNCTION_51_47();
      v7 = v7 && v5 == v6;
      if ((v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && *((unsigned __int8 *)a1 + *(int *)(v4 + 32)) == *((unsigned __int8 *)a2 + *(int *)(v4 + 32)))
      {
        specialized static Array<A>.== infix(_:_:)(*(int64x2_t **)((char *)a1 + *(int *)(v4 + 36)), *(int64x2_t **)((char *)a2 + *(int *)(v4 + 36)));
      }
    }
  }
  OUTLINED_FUNCTION_18();
}

BOOL static TranscriptionViewModel.CaptionID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void TranscriptionViewModel.CaptionID.hash(into:)(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void protocol witness for Hashable.hashValue.getter in conformance TranscriptionViewModel.CaptionID()
{
  TranscriptionViewModel.CaptionID.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance TranscriptionViewModel.CaptionID(int a1)
{
  Swift::UInt *v1;

  TranscriptionViewModel.CaptionID.hash(into:)(a1, *v1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.CaptionID(uint64_t *a1, uint64_t *a2)
{
  return static TranscriptionViewModel.CaptionID.== infix(_:_:)(*a1, *a2);
}

void TranscriptionViewModel.State.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
  OUTLINED_FUNCTION_0();
}

void TranscriptionViewModel.State.hashValue.getter(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(a1);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.State(char *a1, char *a2)
{
  return static TranscriptionViewModel.State.== infix(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance TranscriptionViewModel.State()
{
  unsigned __int8 *v0;

  TranscriptionViewModel.State.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance TranscriptionViewModel.State(uint64_t a1)
{
  unsigned __int8 *v1;

  TranscriptionViewModel.State.hash(into:)(a1, *v1);
}

#error "1BD4BF684: call analysis failed (funcsize=71)"

uint64_t static TranscriptionViewModel.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void TranscriptionViewModel.Configuration.defaultText.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel.Configuration(uint64_t *a1, uint64_t *a2)
{
  return static TranscriptionViewModel.Configuration.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t key path getter for TranscriptionViewModel.callUUID : TranscriptionViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TranscriptionViewModel.callUUID.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BD4BF76C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  *v0 = TranscriptionViewModel.callUUID.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

void key path setter for TranscriptionViewModel.callUUID : TranscriptionViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))TranscriptionViewModel.callUUID.setter);
}

void TranscriptionViewModel.callUUID.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = TranscriptionViewModel.callUUID.getter();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void TranscriptionViewModel.callUUID.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_49_48();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_49_48();
    OUTLINED_FUNCTION_18();
  }
}

uint64_t TranscriptionViewModel.$callUUID.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callUUID, &demangling cache variable for type metadata for Published<String>);
}

void TranscriptionViewModel.$callUUID.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$callUUID.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$callUUID.setter);
}

uint64_t key path getter for TranscriptionViewModel.callerDisplayName : TranscriptionViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TranscriptionViewModel.callerDisplayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void key path setter for TranscriptionViewModel.callerDisplayName : TranscriptionViewModel(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))TranscriptionViewModel.callerDisplayName.setter);
}

void TranscriptionViewModel.callerDisplayName.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.$callerDisplayName.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callerDisplayName, &demangling cache variable for type metadata for Published<String>);
}

void key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v10 - v9, a1);
  a6(v11);
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.$callerDisplayName.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<String>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callerDisplayName, &demangling cache variable for type metadata for Published<String>);
}

void TranscriptionViewModel.$callerDisplayName.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$callerDisplayName.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$callerDisplayName.setter);
}

void key path getter for TranscriptionViewModel.state : TranscriptionViewModel(_BYTE *a1@<X8>)
{
  char v2;

  TranscriptionViewModel.state.getter();
  *a1 = v2;
}

void sub_1BD4BFA64()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  TranscriptionViewModel.state.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void key path setter for TranscriptionViewModel.state : TranscriptionViewModel()
{
  TranscriptionViewModel.state.setter();
}

void sub_1BD4BFAA8()
{
  TranscriptionViewModel.state.setter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4BFAC8()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_53_45();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for TranscriptionViewModel.Caption(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptionViewModel.Caption);
}

void TranscriptionViewModel.state.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.$state.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
}

uint64_t TranscriptionViewModel.$state.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
}

void TranscriptionViewModel.$state.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$state.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$state.setter);
}

void key path getter for TranscriptionViewModel.isGibberish : TranscriptionViewModel(_BYTE *a1@<X8>)
{
  char v2;

  TranscriptionViewModel.isGibberish.getter();
  *a1 = v2 & 1;
}

void key path setter for TranscriptionViewModel.isGibberish : TranscriptionViewModel()
{
  TranscriptionViewModel.isGibberish.setter();
}

void TranscriptionViewModel.isGibberish.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.$isGibberish.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__isGibberish, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t TranscriptionViewModel.$isGibberish.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__isGibberish, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void TranscriptionViewModel.$isGibberish.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$isGibberish.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$isGibberish.setter);
}

uint64_t TranscriptionViewModel.$captions.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
}

void TranscriptionViewModel.$captions.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$captions.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$captions.setter);
}

void key path getter for TranscriptionViewModel.hidePrivacySensitiveContent : TranscriptionViewModel(_BYTE *a1@<X8>)
{
  char v2;

  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  *a1 = v2 & 1;
}

void key path setter for TranscriptionViewModel.hidePrivacySensitiveContent : TranscriptionViewModel()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.setter();
}

void TranscriptionViewModel.hidePrivacySensitiveContent.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_80((uint64_t)v1);
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_72_0(KeyPath);
  v3 = swift_getKeyPath();
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_19_4(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.$hidePrivacySensitiveContent.getter()
{
  return ShareCardViewModel.$shouldShowEndActivity.getter((uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__hidePrivacySensitiveContent, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

uint64_t TranscriptionViewModel.$hidePrivacySensitiveContent.setter(uint64_t a1)
{
  return LinkDetailHeaderView.$invitedMemberHandles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__hidePrivacySensitiveContent, (uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
}

void TranscriptionViewModel.$hidePrivacySensitiveContent.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_15_3(v2);
  v3 = OUTLINED_FUNCTION_21_50();
  OUTLINED_FUNCTION_70_13((uint64_t)v3);
  OUTLINED_FUNCTION_7_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_18();
}

void TranscriptionViewModel.$hidePrivacySensitiveContent.modify(uint64_t a1, char a2)
{
  LinkDetailHeaderView.$invitedMemberHandles.modify(a1, a2, (void (*)(void *))TranscriptionViewModel.$hidePrivacySensitiveContent.setter);
}

void TranscriptionViewModel.config.getter()
{
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_0();
}

uint64_t TranscriptionViewModel.init(config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v17 = v5 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_42_52();
  OUTLINED_FUNCTION_32_56();
  OUTLINED_FUNCTION_42_52();
  OUTLINED_FUNCTION_32_56();
  v12 = v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__state;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v12, v10, v16);
  OUTLINED_FUNCTION_41_39();
  OUTLINED_FUNCTION_33_64();
  v13 = v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__captions;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v13, v17, v19);
  OUTLINED_FUNCTION_41_39();
  OUTLINED_FUNCTION_33_64();
  v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel_config);
  *v14 = a1;
  v14[1] = a2;
  return v2;
}

void sub_1BD4C0158()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  TranscriptionViewModel.hidePrivacySensitiveContent.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C017C()
{
  TranscriptionViewModel.hidePrivacySensitiveContent.setter();
  OUTLINED_FUNCTION_0();
}

void TranscriptionViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String>);
  OUTLINED_FUNCTION_18_88(v0);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__callerDisplayName);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<TranscriptionViewModel.State>);
  OUTLINED_FUNCTION_17_1(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  OUTLINED_FUNCTION_18_88(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  OUTLINED_FUNCTION_17_1(v3);
  OUTLINED_FUNCTION_52_24(OBJC_IVAR____TtC15ConversationKit22TranscriptionViewModel__hidePrivacySensitiveContent);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_18();
}

uint64_t TranscriptionViewModel.__deallocating_deinit()
{
  TranscriptionViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance TranscriptionViewModel(_QWORD *a1, _QWORD *a2)
{
  return static TranscriptionViewModel.== infix(_:_:)(*a1, *a2) & 1;
}

void sub_1BD4C0298()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4();
  *v0 = TranscriptionViewModel.callerDisplayName.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C02BC()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_4();
  TranscriptionViewModel.isGibberish.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C02E0()
{
  TranscriptionViewModel.isGibberish.setter();
  OUTLINED_FUNCTION_0();
}

unint64_t lazy protocol witness table accessor for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State;
  if (!lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for TranscriptionViewModel.State, &type metadata for TranscriptionViewModel.State);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TranscriptionViewModel.State and conformance TranscriptionViewModel.State);
  }
  return result;
}

void sub_1BD4C0384()
{
  TranscriptionViewModel.$callUUID.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C03A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<String>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$callUUID.setter);
}

void sub_1BD4C03C4()
{
  TranscriptionViewModel.$callerDisplayName.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C03E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<String>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$callerDisplayName.setter);
}

void sub_1BD4C0404()
{
  TranscriptionViewModel.$state.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C0420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<TranscriptionViewModel.State>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$state.setter);
}

void sub_1BD4C0444()
{
  TranscriptionViewModel.$isGibberish.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C0460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$isGibberish.setter);
}

void sub_1BD4C0484()
{
  TranscriptionViewModel.$captions.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C04A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$captions.setter);
}

void sub_1BD4C04C4()
{
  TranscriptionViewModel.$hidePrivacySensitiveContent.getter();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C04E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for TranscriptionViewModel.$callUUID : TranscriptionViewModel(a1, a2, a3, a4, &demangling cache variable for type metadata for Published<Bool>.Publisher, (void (*)(uint64_t))TranscriptionViewModel.$hidePrivacySensitiveContent.setter);
}

uint64_t ObjC metadata update function for TranscriptionViewModel()
{
  return type metadata accessor for TranscriptionViewModel(0);
}

uint64_t type metadata accessor for TranscriptionViewModel(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for TranscriptionViewModel);
}

void type metadata completion function for TranscriptionViewModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<String>);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>(319, &lazy cache variable for type metadata for Published<TranscriptionViewModel.State>);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Bool>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<[TranscriptionViewModel.Caption]>();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for TranscriptionViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranscriptionViewModel.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void type metadata accessor for Published<[TranscriptionViewModel.Caption]>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for [TranscriptionViewModel.Caption]);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[TranscriptionViewModel.Caption]>);
  }
}

char *initializeBufferWithCopyOfBuffer for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for Date();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    v12 = a3[7];
    v13 = a3[8];
    v14 = &v4[v12];
    v15 = &a2[v12];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v4[v13] = a2[v13];
    v17 = a3[10];
    *(_QWORD *)&v4[a3[9]] = *(_QWORD *)&a2[a3[9]];
    v4[v17] = a2[v17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

char *initializeWithCopy for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = a3[8];
  v13 = &a1[v11];
  v14 = &a2[v11];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  a1[v12] = a2[v12];
  v16 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v16] = a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *initializeWithTake for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  v12 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v12] = a2[v12];
  return a1;
}

char *assignWithTake for TranscriptionViewModel.Caption(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = (uint64_t *)&a2[v11];
  v15 = *v13;
  v14 = v13[1];
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionViewModel.Caption()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD4C0ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_33();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  else
    OUTLINED_FUNCTION_18();
}

uint64_t storeEnumTagSinglePayload for TranscriptionViewModel.Caption()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD4C0B3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_33();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
}

uint64_t type metadata completion function for TranscriptionViewModel.Caption()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for TranscriptionViewModel.CaptionID()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t storeEnumTagSinglePayload for TranscriptionViewModel.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BD4C0CA0 + 4 * byte_1BD663B55[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BD4C0CD4 + 4 * asc_1BD663B50[v4]))();
}

uint64_t sub_1BD4C0CD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4C0CDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD4C0CE4);
  return result;
}

uint64_t sub_1BD4C0CF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD4C0CF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BD4C0CFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4C0D04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TranscriptionViewModel.State()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for TranscriptionViewModel.Configuration()
{
  OUTLINED_FUNCTION_34_0();
}

void ShareScreenButtonConfig.buttonConfig.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for ShareScreenButtonConfig.buttonConfig : ShareScreenButtonConfig(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ShareScreenButtonConfig.buttonConfig.getter();
  *a1 = v2;
}

void sub_1BD4C0DC4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ShareScreenButtonConfig.buttonConfig.getter();
  *a1 = v2;
}

void key path setter for ShareScreenButtonConfig.buttonConfig : ShareScreenButtonConfig()
{
  uint64_t v0;

  v0 = swift_retain();
  ShareScreenButtonConfig.buttonConfig.setter(v0);
}

uint64_t type metadata accessor for ShareScreenButtonConfig()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ShareScreenButtonConfig;
  if (!type metadata singleton initialization cache for ShareScreenButtonConfig)
    return swift_getSingletonMetadata();
  return result;
}

void ShareScreenButtonConfig.buttonConfig.setter(uint64_t a1)
{
  ShareScreenButtonConfig.buttonConfig.setter(a1, (uint64_t)&unk_1BD663F98, (uint64_t)partial apply for closure #1 in CaptionsViewModel.source.setter, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t ShareScreenButtonConfig.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t specialized ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void ShareScreenButtonConfig.buttonConfig.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void ShareScreenButtonConfig.buttonConfig.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  free(v1);
}

void ShareScreenButtonConfig.menuItems.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_0();
}

void key path getter for ShareScreenButtonConfig.menuItems : ShareScreenButtonConfig(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ShareScreenButtonConfig.menuItems.getter();
  *a1 = v2;
}

void sub_1BD4C114C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ShareScreenButtonConfig.menuItems.getter();
  *a1 = v2;
}

void key path setter for ShareScreenButtonConfig.menuItems : ShareScreenButtonConfig()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ShareScreenButtonConfig.menuItems.setter(v0);
}

void ShareScreenButtonConfig.menuItems.setter(uint64_t a1)
{
  ShareScreenButtonConfig.buttonConfig.setter(a1, (uint64_t)&unk_1BD663FC0, (uint64_t)partial apply for closure #1 in ShareScreenButtonConfig.menuItems.setter, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

void ShareScreenButtonConfig.buttonConfig.setter(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_getKeyPath();
  specialized ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)();
  OUTLINED_FUNCTION_17_22();
  a4(a1);
  OUTLINED_FUNCTION_10_10();
}

uint64_t closure #1 in ShareScreenButtonConfig.menuItems.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t partial apply for closure #1 in ShareScreenButtonConfig.menuItems.setter()
{
  uint64_t v0;

  return closure #1 in ShareScreenButtonConfig.menuItems.setter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void ShareScreenButtonConfig.menuItems.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void ShareScreenButtonConfig.menuItems.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

uint64_t ShareScreenButtonConfig.didTapAskToScreenShare.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_36();
  v1 = *(_QWORD *)(v0 + 32);
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  return v1;
}

uint64_t key path getter for ShareScreenButtonConfig.didTapAskToScreenShare : ShareScreenButtonConfig@<X0>(void (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  result = ShareScreenButtonConfig.didTapAskToScreenShare.getter();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ());
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)(uint64_t))result;
  return result;
}

void key path setter for ShareScreenButtonConfig.didTapAskToScreenShare : ShareScreenButtonConfig(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ());
  }
  else
  {
    v4 = 0;
  }
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v1);
  ShareScreenButtonConfig.didTapAskToScreenShare.setter((uint64_t)v4);
}

void ShareScreenButtonConfig.didTapAskToScreenShare.setter(uint64_t a1)
{
  swift_getKeyPath();
  specialized ShareScreenButtonConfig.withMutation<A, B>(keyPath:_:)();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(a1);
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_10_10();
}

uint64_t closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2;
  *(_QWORD *)(a1 + 40) = a3;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(a2);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v6);
}

uint64_t partial apply for closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter()
{
  uint64_t *v0;

  return closure #1 in ShareScreenButtonConfig.didTapAskToScreenShare.setter(v0[2], v0[3], v0[4]);
}

void ShareScreenButtonConfig.didTapAskToScreenShare.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit23ShareScreenButtonConfig___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type ShareScreenButtonConfig and conformance ShareScreenButtonConfig, (void (*)(uint64_t))type metadata accessor for ShareScreenButtonConfig);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_91();
}

void ShareScreenButtonConfig.didTapAskToScreenShare.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

void ShareScreenButtonConfig.__allocating_init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  OUTLINED_FUNCTION_23_9();
  swift_allocObject();
  ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)();
  OUTLINED_FUNCTION_91();
}

void ShareScreenButtonConfig.init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_9();
  v0[4] = 0;
  v0[5] = 0;
  ObservationRegistrar.init()();
  v0[2] = v3;
  v0[3] = v2;
  swift_retain();
  ShareScreenButtonConfig.didTapAskToScreenShare.setter(v1);
  OUTLINED_FUNCTION_17_22();
  OUTLINED_FUNCTION_91();
}

void ShareScreenButtonConfig.deinit()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_285();
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(*(_QWORD *)(v0 + 32));
  v1 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t ShareScreenButtonConfig.__deallocating_deinit()
{
  ShareScreenButtonConfig.deinit();
  return swift_deallocClassInstance();
}

uint64_t ShareScreenButton.state.getter()
{
  __int16 v0;

  ShareScreenButtonConfig.buttonConfig.getter();
  swift_retain();
  swift_release();
  v0 = specialized StateHolder.state.getter();
  swift_release();
  return v0 & 0x101;
}

uint64_t ShareScreenButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v4 = OUTLINED_FUNCTION_14_2();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 168))() & 1) == 0)
    goto LABEL_12;
  ShareScreenButtonConfig.menuItems.getter();
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (!v9
    || (ShareScreenButtonConfig.buttonConfig.getter(),
        swift_retain(),
        swift_release(),
        v10 = specialized StateHolder.state.getter(),
        swift_release(),
        (v10 & 0x100) != 0))
  {
LABEL_12:
    ShareScreenButtonConfig.buttonConfig.getter();
    v22 = 0uLL;
    v21 = v16;
    v23 = 1;
    goto LABEL_13;
  }
  ShareScreenButtonConfig.menuItems.getter();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v11 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      outlined init with copy of Participant(v13, (uint64_t)v7);
      v15 = v7[*(int *)(v4 + 24) + 1];
      outlined destroy of Participant((uint64_t)v7);
      if (v15 != 1)
        break;
      v13 += v14;
      if (!--v12)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v21 = a1;
  v22 = xmmword_1BD659090;
  v23 = 0;
  swift_retain();
LABEL_13:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
  lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<ShareMenuActionState> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
  result = _ConditionalContent<>.init(storage:)();
  v18 = v25;
  v19 = v26;
  v20 = v27;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v18;
  *(_QWORD *)(a2 + 16) = v19;
  *(_BYTE *)(a2 + 24) = v20;
  return result;
}

unint64_t lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu;
  if (!lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ScreenShareMenu, &unk_1E763B3A8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScreenShareMenu and conformance ScreenShareMenu);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ShareScreenButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ShareScreenButton@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return ShareScreenButton.body.getter(*v1, a1);
}

uint64_t ObjC metadata update function for ShareScreenButtonConfig()
{
  return type metadata accessor for ShareScreenButtonConfig();
}

uint64_t type metadata completion function for ShareScreenButtonConfig()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ShareScreenButtonConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShareScreenButtonConfig.__allocating_init(buttonConfig:menuItems:didTapAskToScreenShare:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for ShareScreenButton()
{
  return &type metadata for ShareScreenButton;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>>);
    v2 = lazy protocol witness table accessor for type ScreenShareMenu and conformance ScreenShareMenu();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconButton<ShareMenuActionState> and conformance IconButton<A>, &demangling cache variable for type metadata for IconButton<ShareMenuActionState>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ScreenShareMenu, IconButton<ShareMenuActionState>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ScreenShareMenu(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ScreenShareMenu(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for ScreenShareMenu(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *type metadata accessor for ScreenShareMenu()
{
  return &unk_1E763B3A8;
}

uint64_t associated type witness table accessor for View.Body : View in ScreenShareMenu()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ScreenShareMenu.body.getter(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  v4 = type metadata accessor for MenuOrder();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShareScreenButtonConfig.buttonConfig.getter();
  v9 = v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(double *)(v10 + 24) = a2;
  v12[1] = v9;
  v12[2] = partial apply for closure #1 in ScreenShareMenu.body.getter;
  v12[3] = v10;
  swift_retain();
  static MenuOrder.fixed.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>> and conformance IconMenu<A, B>, &demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  View.menuOrder(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in ScreenShareMenu.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(double *)(v19 + 24) = a3;
  swift_retain();
  Button.init(action:label:)();
  ShareScreenButtonConfig.menuItems.getter();
  ScreenShareMenu.askToShareScreenMenu(participants:)(a1, (uint64_t)v11, a3);
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v20(v15, v18, v12);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v11, (uint64_t)v8, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  v20(a2, v15, v12);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>));
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>((uint64_t)v8, (uint64_t)&a2[*(int *)(v21 + 48)], &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v18, v12);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v12);
}

uint64_t ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  v58 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>.Storage);
  MEMORY[0x1E0C80A78](v60);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x1E0C80A78](v10);
  v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v59);
  v52 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v55 = (uint64_t)&v50 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Participant(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v18);
  v51 = (uint64_t)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v50 - v22;
  MEMORY[0x1E0C80A78](v24);
  v56 = (uint64_t)&v50 - v25;
  ShareScreenButtonConfig.menuItems.getter();
  v27 = *(_QWORD *)(v26 + 16);
  v28 = swift_bridgeObjectRelease();
  if (v27 != 1)
    goto LABEL_4;
  ShareScreenButtonConfig.menuItems.getter();
  specialized Collection.first.getter(v29, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for Participant?);
LABEL_4:
    MEMORY[0x1E0C80A78](v28);
    *(&v50 - 2) = a1;
    *((double *)&v50 - 1) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
    lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>();
    Menu.init(content:label:)();
    v30 = v58;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v9, v7, v5);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  }
  v32 = (uint64_t)v17;
  v33 = v56;
  outlined init with take of Participant(v32, v56);
  outlined init with copy of Participant(v33, (uint64_t)v23);
  v34 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = a1;
  *(double *)(v35 + 24) = a3;
  outlined init with take of Participant((uint64_t)v23, v35 + v34);
  swift_retain();
  Button.init(action:label:)();
  Participant.isActive.getter();
  v37 = v36;
  v38 = v51;
  outlined init with copy of Participant(v33, v51);
  v50 = v5;
  if ((v37 & 1) != 0)
  {
    Participant.isRequestToScreenShareAvailable.getter();
    v40 = v39 ^ 1;
  }
  else
  {
    v40 = 1;
  }
  v41 = v59;
  outlined destroy of Participant(v38);
  KeyPath = swift_getKeyPath();
  v43 = swift_allocObject();
  *(_BYTE *)(v43 + 16) = v40 & 1;
  v44 = (uint64_t)v52;
  v45 = v53;
  v46 = v57;
  v47 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v57, v54);
  v48 = (uint64_t *)(v44 + *(int *)(v41 + 36));
  *v48 = KeyPath;
  v48[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v48[2] = v43;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  v49 = v55;
  outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>(v44, v55);
  outlined init with copy of VStack<TupleView<(ModifiedContent<HStack<TupleView<(<<opaque return type of View.buttonStyle<A>(_:)>>.0, <<opaque return type of View.buttonStyle<A>(_:)>>.0)>>, _PaddingLayout>, Spacer, ClarityUIKeypadView)>>(v49, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v49, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  return outlined destroy of Participant(v56);
}

uint64_t closure #1 in ScreenShareMenu.screenShareMenuItem()()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  ShareScreenButtonConfig.buttonConfig.getter();
  v1 = *(void (**)(uint64_t))(v0 + 224);
  swift_retain();
  v2 = swift_release();
  v1(v2);
  return swift_release();
}

uint64_t closure #2 in ScreenShareMenu.screenShareMenuItem()@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x794D206572616853;
  v3._object = (void *)0xEF6E656572635320;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(uint64_t a1, double a2)
{
  uint64_t v4;

  ShareScreenButtonConfig.menuItems.getter();
  swift_getKeyPath();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type [Participant] and conformance [A], &demangling cache variable for type metadata for [Participant]);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type Participant and conformance Participant, (void (*)(uint64_t))type metadata accessor for Participant);
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a3;
  v7 = type metadata accessor for Participant(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v29);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Participant(a1, (uint64_t)v13);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(double *)(v21 + 24) = a4;
  outlined init with take of Participant((uint64_t)v13, v21 + v20);
  v31 = a1;
  swift_retain();
  Button.init(action:label:)();
  Participant.isActive.getter();
  LOBYTE(a2) = v22;
  outlined init with copy of Participant(a1, (uint64_t)v10);
  if ((a2 & 1) != 0)
  {
    Participant.isRequestToScreenShareAvailable.getter();
    v24 = v23 ^ 1;
  }
  else
  {
    v24 = 1;
  }
  outlined destroy of Participant((uint64_t)v10);
  KeyPath = swift_getKeyPath();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = v24 & 1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v14);
  v27 = (uint64_t *)&v19[*(int *)(v29 + 36)];
  *v27 = KeyPath;
  v27[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
  v27[2] = v26;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>((uint64_t)v19, v30);
}

void (*closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)(uint64_t a1, uint64_t a2))(uint64_t)
{
  void (*result)(uint64_t);
  uint64_t v4;

  result = (void (*)(uint64_t))ShareScreenButtonConfig.didTapAskToScreenShare.getter();
  if (result)
  {
    v4 = (uint64_t)result;
    result(a2);
    return (void (*)(uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v4);
  }
  return result;
}

uint64_t closure #2 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X8>)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  Swift::String v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v10._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD67E690;
  v3._countAndFlagsBits = 0xD000000000000013;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

  lazy protocol witness table accessor for type String and conformance String();
  result = Text.init<A>(_:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8 & 1;
  *(_QWORD *)(a1 + 24) = v9;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ScreenShareMenu()
{
  uint64_t v0;

  return ScreenShareMenu.body.getter(*(_QWORD *)v0, *(double *)(v0 + 8));
}

uint64_t sub_1BD4C2AE4()
{
  OUTLINED_FUNCTION_285();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ScreenShareMenu.body.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in ScreenShareMenu.body.getter(*(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t partial apply for closure #1 in ScreenShareMenu.screenShareMenuItem()()
{
  return closure #1 in ScreenShareMenu.screenShareMenuItem()();
}

uint64_t partial apply for closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)()
{
  uint64_t v0;

  return closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t lazy protocol witness table accessor for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDFEE8], v1, &v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return closure #1 in closure #3 in ScreenShareMenu.askToShareScreenMenu(participants:)(a1, *(_QWORD *)(v2 + 16), a2, *(double *)(v2 + 24));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)OUTLINED_FUNCTION_14_2();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  OUTLINED_FUNCTION_285();
  v3 = v0 + ((v2 + 32) & ~v2);
  type metadata accessor for Participant.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 5u:
      v4 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v4);
      break;
    case 4u:
      v9 = OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_75(v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v11 = v3 + *(int *)(v10 + 48);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v11 + 120) >= 2uLL)
        __swift_destroy_boxed_opaque_existential_1(v11 + 96);
      if (*(_QWORD *)(v11 + 312))
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v3 + *(int *)(v10 + 64) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      break;
  }
  v5 = v3 + v1[5];
  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (id *)(v3 + v1[7]);
  if (*v7)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_33();
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  type metadata accessor for Participant.CountdownInfo(0);
  if (!OUTLINED_FUNCTION_7_23())
    OUTLINED_FUNCTION_5_62();
  swift_release();
  return swift_deallocObject();
}

void (*partial apply for closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)())(uint64_t)
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_14_2() - 8) + 80);
  return closure #1 in ScreenShareMenu.askToShareScreenMenu(participants:)(*(_QWORD *)(v0 + 16), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1BD4C2E08()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> (@out ())(uint64_t a1)
{
  uint64_t v1;

  thunk for @escaping @callee_guaranteed (@in_guaranteed Participant) -> ()(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1BD4C2E34()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>> and conformance IconMenu<A, B>, &demangling cache variable for type metadata for IconMenu<ShareMenuActionState, TupleView<(Button<Text>, _ConditionalContent<ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Menu<Text, ForEach<[Participant], Participant, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>>>>)>>);
  return swift_getOpaqueTypeConformance2();
}

double AspectRatio.portrait.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  outlined init with take of AspectRatio(v0, (uint64_t)&v2);
  result = v2;
  if (v3)
    return 1.0;
  return result;
}

BOOL static AspectRatio.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _QWORD v16[4];
  char v17;
  char v18[16];
  double v19;
  double v20;
  unsigned __int8 v21;
  _QWORD v22[4];
  char v23;
  _QWORD v24[4];
  char v25;

  outlined init with take of AspectRatio(a1, (uint64_t)v24);
  if (v25)
    v4 = 1.0;
  else
    v4 = *(double *)&v24[1];
  if (v25)
    v5 = 1.0;
  else
    v5 = *(double *)v24;
  outlined init with take of AspectRatio(a2, (uint64_t)v22);
  v6 = *(double *)v22;
  v7 = *(double *)&v22[1];
  if (v23)
  {
    v7 = 1.0;
    v6 = 1.0;
  }
  if (v5 != v6 || v4 != v7)
    return 0;
  outlined init with take of AspectRatio(a1, (uint64_t)v18);
  v9 = v21;
  v10 = v20;
  if (v21)
    v11 = 1.0;
  else
    v11 = v19;
  outlined init with take of AspectRatio(a2, (uint64_t)v16);
  v12 = *(double *)&v16[2];
  if (v17)
    v12 = 1.0;
  if (v11 != v12)
    return 0;
  v13 = *(double *)&v16[3];
  v14 = 1.0;
  if (v17)
    v13 = 1.0;
  if (!v9)
    v14 = v10;
  return v14 == v13;
}

double AspectRatio.landscape.getter()
{
  uint64_t v0;
  double result;
  _BYTE v2[16];
  double v3;
  char v4;

  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  result = v3;
  if (v4)
    return 1.0;
  return result;
}

BOOL AspectRatio.isRectangle.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  return (v2[32] & 1) == 0;
}

BOOL CGSize.containsZero.getter(double a1, double a2)
{
  return a2 == 0.0 || a1 == 0.0;
}

double static CGRect.identity.getter()
{
  return 0.0;
}

uint64_t AspectRatio.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  char v5;

  outlined init with take of AspectRatio(v0, (uint64_t)&v4);
  if ((v5 & 1) != 0)
    return 0x6572617571732ELL;
  _StringGuts.grow(_:)(17);
  v2._countAndFlagsBits = 0x676E61746365722ELL;
  v2._object = (void *)0xEB0000000028656CLL;
  String.append(_:)(v2);
  type metadata accessor for CGSize(0);
  OUTLINED_FUNCTION_0_152();
  v3._countAndFlagsBits = 8236;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  OUTLINED_FUNCTION_0_152();
  return 0;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance AspectRatio()
{
  uint64_t v0;
  _BYTE v2[40];

  outlined init with take of AspectRatio(v0, (uint64_t)v2);
  return AspectRatio.debugDescription.getter();
}

void AspectRatio.init(with:allowNonSquareSizes:isLocalParticipant:needsLandscapeCameraOrientation:localOrientation:contentsRect:cachedLocalAspectRatio:)(_QWORD *a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D2>, double a9@<D3>)
{
  double v10;
  double v11;
  char v12;
  double v13;
  double v14;
  int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  double v24;
  double v25;
  double v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char v32;
  double v33;
  double v34;
  unsigned __int8 v35;

  if ((a2 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_126();
    goto LABEL_12;
  }
  if ((a3 & 1) == 0)
  {
    static AspectRatio.remoteAspectRatios(with:contentsRect:)(a1, (uint64_t)&v30, a8, a9);
    v10 = *(double *)&v30;
    v11 = v31;
    v22 = v32;
    v13 = v33;
    v14 = v34;
    v15 = v35;
    OUTLINED_FUNCTION_2_126();
    if ((v22 & 1) == 0)
      goto LABEL_15;
LABEL_12:
    OUTLINED_FUNCTION_3_121();
    v27 = 1;
    goto LABEL_30;
  }
  static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)(a1, a5, a4 & 1, a6, (uint64_t)&v30);
  v10 = *(double *)&v30;
  v11 = v31;
  v12 = v32;
  v13 = v33;
  v14 = v34;
  v15 = v35;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)&static Logger.conversationKit);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    *(_DWORD *)v19 = 136315138;
    if ((v12 & 1) != 0)
    {
      v20 = 0xE300000000000000;
      v21 = 7104878;
    }
    else
    {
      *(double *)&v30 = v10;
      v31 = v11;
      type metadata accessor for CGSize(0);
      v21 = String.init<A>(reflecting:)();
      v20 = v28;
    }
    *(double *)&v30 = COERCE_DOUBLE(getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v20, &v29));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v17, v18, "Updating the local video aspect ratio to %s", v19, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_2_126();
  if ((v12 & 1) != 0)
    goto LABEL_12;
LABEL_15:
  if (v15)
    v26 = v10;
  else
    v26 = v14;
  if (v15)
    v25 = v11;
  else
    v25 = v13;
  if (v10 == v11)
    v23 = 0.0;
  else
    v23 = v10;
  if (v10 == v11)
    v24 = 0.0;
  else
    v24 = v11;
  if (v10 == v11)
  {
    v25 = 0.0;
    v26 = 0.0;
    v27 = 1;
  }
  else
  {
    v27 = 0;
  }
LABEL_30:
  *(double *)a7 = v23;
  *(double *)(a7 + 8) = v24;
  *(double *)(a7 + 16) = v25;
  *(double *)(a7 + 24) = v26;
  *(_BYTE *)(a7 + 32) = v27;
}

uint64_t static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;
  double v30;
  double v31;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  __int128 v40;
  char v41;
  _BYTE v43[40];
  __int128 v44;
  char v45;
  _BYTE v46[40];
  id v47[4];
  char v48;

  v44 = 0uLL;
  v45 = 1;
  outlined init with copy of IDSLookupManager((uint64_t)a1, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ParticipantVideoProvider);
  type metadata accessor for RemoteParticipantVideoProvider();
  if (swift_dynamicCast())
  {

    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    *(double *)&v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 112))(v9, v10));
    v13 = v12;
    v15 = v14;
    v17 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    *(double *)&v18 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96))(v17, v16));
  }
  else
  {
    v21 = a1[3];
    v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    *(double *)&v11 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 104))(v21, v22));
    v13 = v23;
    v15 = v24;
    v25 = a1[3];
    v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    *(double *)&v18 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v25, v26));
  }
  v27 = v18;
  v28 = v19;
  if ((a2 | 2) == 2)
    v29 = 1;
  else
    v29 = a3;
  if ((v20 & 1) == 0)
  {
    if (a2 == 1)
    {
      if ((v29 & 1) == 0)
      {
LABEL_10:
        v30 = *(double *)&v18;
        v31 = v19;
        swift_beginAccess();
        *(_QWORD *)&v44 = v27;
        *((double *)&v44 + 1) = v28;
        goto LABEL_14;
      }
    }
    else if (!((a2 != 3) | v29 & 1))
    {
      goto LABEL_10;
    }
  }
  if ((((v15 & 1) == 0) & v29) == 1)
  {
    v30 = v13;
    v31 = *(double *)&v11;
    swift_beginAccess();
    *(_QWORD *)&v44 = v11;
    *((double *)&v44 + 1) = v13;
LABEL_14:
    v45 = 0;
    if (v31 < v30)
      specialized closure #1 in static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)((uint64_t *)&v44, a2);
    goto LABEL_26;
  }
  outlined init with take of AspectRatio?(a4, (uint64_t)v43);
  if ((v43[33] & 1) != 0)
  {
    swift_beginAccess();
    __asm { FMOV            V0.2D, #1.0 }
    v44 = _Q0;
  }
  else
  {
    outlined init with take of AspectRatio((uint64_t)v43, (uint64_t)v46);
    outlined init with take of AspectRatio((uint64_t)v46, (uint64_t)v47);
    if (v48)
      v37 = 0x3FF0000000000000;
    else
      v37 = (uint64_t)v47[1];
    if (v48)
      v38 = 0x3FF0000000000000;
    else
      v38 = (uint64_t)v47[0];
    swift_beginAccess();
    *(_QWORD *)&v44 = v38;
    *((_QWORD *)&v44 + 1) = v37;
  }
  v45 = 0;
LABEL_26:
  result = swift_beginAccess();
  v40 = v44;
  v41 = v45;
  *(_OWORD *)a5 = v44;
  *(_BYTE *)(a5 + 16) = v41;
  *(_OWORD *)(a5 + 24) = v40;
  *(_BYTE *)(a5 + 40) = v41;
  return result;
}

double static AspectRatio.remoteAspectRatios(with:contentsRect:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  char v11;
  _BOOL4 v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  id v34;
  double v35;
  double v36;
  double result;

  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  *(double *)&v9 = COERCE_DOUBLE(OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88)));
  if ((v11 & 1) != 0)
  {
    v13 = 0.0;
    v14 = 0.0;
    v12 = 1;
  }
  else
  {
    v12 = 1;
    if ((v9 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v13 = *(double *)&v9;
      else
        v13 = 0.0;
      if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v14 = v10;
      else
        v14 = 0.0;
      v12 = (*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFLL) == 0;
    }
    else
    {
      v13 = 0.0;
      v14 = 0.0;
    }
  }
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  *(double *)&v16 = COERCE_DOUBLE(OUTLINED_FUNCTION_7_16(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 104)));
  if ((v18 & 1) == 0
    && (v19 = *(double *)&v16, (v16 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    && (v20 = v17, (*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFLL) != 0))
  {
    if (v12)
    {
      v21 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v21, sel_bounds);
      v23 = v22;
      v25 = v24;

      v13 = v23;
      v14 = v25;
    }
  }
  else
  {
    v20 = v13;
    v19 = v14;
    if (v12)
    {
      v26 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      OUTLINED_FUNCTION_5_130(v26);
      v28 = v27;
      v30 = v29;

      v13 = v28;
      v14 = v30;
      v31 = OUTLINED_FUNCTION_6_108();
      OUTLINED_FUNCTION_5_130(v31);
      v33 = v32;

      v34 = OUTLINED_FUNCTION_6_108();
      OUTLINED_FUNCTION_5_130(v34);
      v36 = v35;

      v19 = v33;
      v20 = v36;
    }
  }
  result = v19 * a3;
  *(double *)a2 = v13 * a3;
  *(double *)(a2 + 8) = v14 * a4;
  *(_BYTE *)(a2 + 16) = 0;
  *(double *)(a2 + 24) = v19 * a3;
  *(double *)(a2 + 32) = v20 * a4;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

uint64_t specialized closure #1 in static AspectRatio.localAspectRatios(with:localOrientation:needsLandscapeCameraOrientation:cachedLocalAspectRatio:)(uint64_t *a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  if (static Platform.current.getter() < 2u || static Platform.current.getter() == 2)
  {
    swift_beginAccess();
    v4 = *((_BYTE *)a1 + 16);
    if (v4)
      v5 = *a1;
    else
      v5 = a1[1];
    if (*((_BYTE *)a1 + 16))
      v6 = a1[1];
    else
      v6 = *a1;
    result = swift_beginAccess();
    *a1 = v5;
    a1[1] = v6;
    *((_BYTE *)a1 + 16) = v4;
  }
  else
  {
    v8 = (a2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
    if ((a2 & 0xFFFFFFFFFFFFFFFDLL) == 1)
      v9 = 0x4008000000000000;
    else
      v9 = 0x4010000000000000;
    if (v8)
      v10 = 0x4010000000000000;
    else
      v10 = 0x4008000000000000;
    result = swift_beginAccess();
    *a1 = v9;
    a1[1] = v10;
    *((_BYTE *)a1 + 16) = 0;
  }
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance AspectRatio(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  outlined init with take of AspectRatio(a1, (uint64_t)v4);
  outlined init with take of AspectRatio(a2, (uint64_t)v5);
  return static AspectRatio.== infix(_:_:)((uint64_t)v4, (uint64_t)v5);
}

uint64_t getEnumTagSinglePayload for AspectRatio(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AspectRatio(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

uint64_t getEnumTag for AspectRatio(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t destructiveInjectEnumTag for AspectRatio(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 32) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AspectRatio()
{
  return &type metadata for AspectRatio;
}

void static ConversationHUDControlsButtonShelfView.Configuration.fillEqually.getter(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[50];

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  v4 = static UIContentSizeCategory.>= infix(_:_:)();
  if ((v4 & 1) != 0)
    v5 = 0;
  else
    v5 = 3;
  static Layout.ConversationControls.values.getter((uint64_t)v7);
  v6 = v7[29];
  *(_QWORD *)a1 = v4 & 1;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = 0;
}

id ConversationHUDControlsButtonShelfView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)(a1, a2, a3, a4);
}

id ConversationHUDControlsButtonShelfView.init(recipe:controlsManager:context:menuHostViewController:)(uint64_t a1, void *a2, char a3, void *a4)
{
  char *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  id v41;
  void *v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  id v56;
  id v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  int v73;
  objc_super v74;
  _BYTE v75[248];
  double v76;
  double v77;
  double v78;
  double v79;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha] = 0x3FF0000000000000;
  v74.receiver = v4;
  v74.super_class = (Class)type metadata accessor for ConversationHUDControlsButtonShelfView();
  v9 = objc_msgSendSuper2(&v74, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = a1 + *(int *)(type metadata accessor for ConversationControlsRecipe() + 60);
  v11 = *(unsigned __int8 *)(v10 + 40);
  if (v11 >= 0xFE)
  {

LABEL_5:
    outlined destroy of ConversationControlsRecipe(a1);
    return v9;
  }
  v69 = a3;
  v13 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v14 = *(_QWORD *)(v10 + 16);
  v15 = *(_QWORD *)(v10 + 24);
  v16 = *(_QWORD *)(v10 + 32);
  v17 = OUTLINED_FUNCTION_0_153();
  if ((v11 & 0x80) == 0)
  {
    outlined copy of ConversationControlsRecipe.Actions(v17, v18, v19, v20, v21, v22);

    v23 = OUTLINED_FUNCTION_0_153();
    outlined consume of ConversationControlsRecipe.Actions?(v23, v24, v25, v26, v27, v28);
    goto LABEL_5;
  }
  outlined copy of ConversationControlsRecipe.Actions?(v17, v18, v19, v20, v21, v22);
  v65 = v9;
  v30 = v9;
  objc_msgSend(v30, sel_setAxis_, v12);
  v64 = v14;
  objc_msgSend(v30, sel_setAlignment_, v14);
  v72 = v30;
  v66 = v15;
  objc_msgSend(v30, sel_setDistribution_, v15);
  if ((v11 & 1) == 0)
    objc_msgSend(v30, sel_setSpacing_, *(double *)&v16);
  v31 = *(_QWORD *)(v13 + 16);
  v9 = v65;
  if (v31)
  {
    v63 = a1;
    v32 = *(_QWORD *)(type metadata accessor for ConversationControlsAction() - 8);
    v33 = v12;
    v34 = v13 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v60 = v33;
    v61 = v13;
    v59 = v16;
    v62 = v11;
    outlined copy of ConversationControlsRecipe.Actions(v13, v33, v14, v66, v16, v11);
    v71 = *(_QWORD *)(v32 + 72);
    v67 = *MEMORY[0x1E0DC48F0];
    v68 = a2;
    v35 = v69;
    do
    {
      ConversationControlsAction.button(controlsManager:menuHostViewController:context:options:)();
      v37 = v36;
      v39 = v38;
      ObjectType = swift_getObjectType();
      v41 = v37;
      static Layout.ConversationControls.iOS.getter((uint64_t)v75);
      objc_msgSend(v41, sel__setTouchInsets_, v76, v77, v78, v79);

      objc_opt_self();
      v42 = (void *)swift_dynamicCastObjCClass();
      if (v42)
        objc_msgSend(v42, sel_setPreferredBehavioralStyle_, 1);
      if (v35 == 2 && (type metadata accessor for ConversationControlsButton(), (v43 = swift_dynamicCastClass()) != 0))
      {
        v44 = (char *)v43;
        v45 = v41;
        objc_msgSend(v44, sel_setMaximumContentSizeCategory_, v67);
        v70 = ObjectType;
        v46 = (uint64_t *)&v44[OBJC_IVAR___CNKConversationControlsButton_localizedName];
        OUTLINED_FUNCTION_2_0();
        v47 = a4;
        v49 = *v46;
        v48 = v46[1];
        v50 = objc_allocWithZone((Class)type metadata accessor for LabeledButtonView());
        swift_bridgeObjectRetain();
        v51 = v45;
        v52 = v49;
        a4 = v47;
        a2 = v68;
        v53 = v48;
        ObjectType = v70;
        v35 = v69;
        v54 = LabeledButtonView.init(control:text:)(v44, v52, v53);
        objc_msgSend(v72, sel_addArrangedSubview_, v54);

      }
      else
      {
        objc_msgSend(v72, sel_addArrangedSubview_, v41);
      }
      if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v39 + 32))(ObjectType, v39) == 1)
      {
        v55 = objc_msgSend(v41, sel_widthAnchor);
        v56 = objc_msgSend(v41, sel_heightAnchor);
        v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v56);

        type metadata accessor for UILayoutPriority(0);
        lazy protocol witness table accessor for type UILayoutPriority and conformance UILayoutPriority();
        static _UIKitNumericRawRepresentable.- infix(_:_:)();
        LODWORD(v58) = v73;
        objc_msgSend(v57, sel_setPriority_, v58);
        objc_msgSend(v57, sel_setActive_, 1);

      }
      v34 += v71;
      --v31;
    }
    while (v31);
    v12 = v60;
    v13 = v61;
    v14 = v64;
    v16 = v59;
    LOBYTE(v11) = v62;
    outlined consume of ConversationControlsRecipe.Actions?(v61, v60, v64, v66, v59, v62);
    a1 = v63;
    v9 = v65;
  }

  outlined destroy of ConversationControlsRecipe(a1);
  outlined consume of ConversationControlsRecipe.Actions?(v13, v12, v14, v66, v16, v11);
  return v9;
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset()
{
  char *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v1 = objc_msgSend(v0, sel_arrangedSubviews);
  type metadata accessor for UIView();
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_12;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha];
    swift_beginAccess();
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1C3B73D18](i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      swift_getObjectType();
      if (dynamic_cast_existential_1_conditional((uint64_t)v7))
      {
        v9 = v8;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, double))(v9 + 16))(ObjectType, v9, *v4);
      }
      else
      {
        objc_msgSend(v7, sel_setAlpha_, *v4);
      }

    }
    goto LABEL_12;
  }
  __break(1u);
}

double ConversationHUDControlsButtonShelfView.cnkContentAlpha.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha;
  OUTLINED_FUNCTION_2_0();
  return *(double *)v1;
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;
  double *v3;

  v3 = (double *)(v1 + OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset();
}

void (*ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  return ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify;
}

void ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    ConversationHUDControlsButtonShelfView.cnkContentAlpha.didset();
  OUTLINED_FUNCTION_0();
}

id ConversationHUDControlsButtonShelfView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ConversationHUDControlsButtonShelfView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit38ConversationHUDControlsButtonShelfView_cnkContentAlpha] = 0x3FF0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id ConversationHUDControlsButtonShelfView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ConversationHUDControlsButtonShelfView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ConversationHUDControlsButtonShelfView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationHUDControlsButtonShelfView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.axis.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.axis.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.alignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.alignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.alignment.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.distribution.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.distribution.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.distribution.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.spacing.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.spacing.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ConversationHUDControlsButtonShelfView.Configuration.spacing.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t static ConversationHUDControlsButtonShelfView.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    return 0;
  }
  v2 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t ConversationHUDControlsButtonShelfView.Configuration.init(axis:alignment:distribution:spacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

uint64_t type metadata accessor for ConversationHUDControlsButtonShelfView()
{
  return objc_opt_self();
}

void *ConversationHUDControlsButtonShelfView.Configuration.default.unsafeMutableAddressor()
{
  return &static ConversationHUDControlsButtonShelfView.Configuration.default;
}

double static ConversationHUDControlsButtonShelfView.Configuration.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)&result = 3;
  *(_OWORD *)(a1 + 16) = xmmword_1BD6400D0;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

void sub_1BD4C455C(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x60))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C4598(double *a1, _QWORD **a2)
{
  (*(void (**)(double))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x68))(*a1);
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for ConversationHUDControlsButtonShelfView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.__allocating_init(recipe:controlsManager:context:menuHostViewController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConversationHUDControlsButtonShelfView.cnkContentAlpha.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t storeEnumTagSinglePayload for ConversationHUDControlsButtonShelfView.Configuration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ConversationHUDControlsButtonShelfView.Configuration()
{
  return &type metadata for ConversationHUDControlsButtonShelfView.Configuration;
}

char *PushToTalkLabelButtonView.__allocating_init(button:labelText:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return PushToTalkLabelButtonView.init(button:labelText:)(a1, a2, a3);
}

id PushToTalkLabelButtonView.button.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button);
}

id PushToTalkLabelButtonView.label.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);
}

char *PushToTalkLabelButtonView.init(button:labelText:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  objc_super v22;

  v7 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button] = a1;
  v10 = a1;

  v22.receiver = v9;
  v22.super_class = (Class)type metadata accessor for PushToTalkLabelButtonView();
  v11 = (char *)objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button];
  v13 = v11;
  objc_msgSend(v13, sel_addSubview_, v12);
  v14 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  v15 = *(void **)&v13[OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label];
  outlined bridged method (mbnn) of @objc UILabel.text.setter(a2, a3, v15);
  v16 = one-time initialization token for buttonLabel;
  v17 = v15;
  if (v16 != -1)
    swift_once();
  objc_msgSend(v17, sel_setFont_, static Fonts.PTT.buttonLabel);

  v18 = *(void **)&v13[v14];
  objc_msgSend(v18, sel_setTextAlignment_, 1);
  v19 = one-time initialization token for buttonLabel;
  v20 = v18;
  if (v19 != -1)
    swift_once();
  objc_msgSend(v20, sel_setTextColor_, static Colors.PTT.buttonLabel);

  objc_msgSend(v13, sel_addSubview_, *(_QWORD *)&v13[v14]);
  PushToTalkLabelButtonView.setupConstraints()();

  return v13;
}

uint64_t type metadata accessor for PushToTalkLabelButtonView()
{
  return objc_opt_self();
}

id PushToTalkLabelButtonView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PushToTalkLabelButtonView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void PushToTalkLabelButtonView.setupConstraints()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  Class isa;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_label);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit25PushToTalkLabelButtonView_button), sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BD6564F0;
  v4 = OUTLINED_FUNCTION_2_2(v3, sel_topAnchor);
  v5 = OUTLINED_FUNCTION_25_1((uint64_t)v4, (const char *)&selRef_setUserInteractionEnabled_ + 4);
  v6 = OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v3 + 32) = v1;
  v8 = OUTLINED_FUNCTION_2_2(v7, sel_leadingAnchor);
  v9 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_leadingAnchor);
  v10 = OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v3 + 40) = v1;
  v12 = OUTLINED_FUNCTION_2_2(v11, sel_trailingAnchor);
  v13 = OUTLINED_FUNCTION_25_1((uint64_t)v12, sel_trailingAnchor);
  v14 = OUTLINED_FUNCTION_0_17();
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v3 + 48) = v1;
  v16 = objc_msgSend(OUTLINED_FUNCTION_2_2(v15, sel_heightAnchor), sel_constraintEqualToConstant_, 80.0);
  OUTLINED_FUNCTION_14();
  *(_QWORD *)(v3 + 56) = v13;
  v18 = objc_msgSend(OUTLINED_FUNCTION_2_2(v17, sel_widthAnchor), sel_constraintEqualToConstant_, 80.0);
  OUTLINED_FUNCTION_14();
  *(_QWORD *)(v3 + 64) = v13;
  v20 = OUTLINED_FUNCTION_9(v19, sel_topAnchor);
  v21 = OUTLINED_FUNCTION_2_2((uint64_t)v20, sel_bottomAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 10.0);
  OUTLINED_FUNCTION_14();

  *(_QWORD *)(v3 + 72) = v13;
  v24 = OUTLINED_FUNCTION_9(v23, sel_leadingAnchor);
  v25 = OUTLINED_FUNCTION_25_1((uint64_t)v24, sel_leadingAnchor);
  v26 = OUTLINED_FUNCTION_0_21((uint64_t)v25);

  *(_QWORD *)(v3 + 80) = v26;
  v28 = OUTLINED_FUNCTION_9(v27, sel_trailingAnchor);
  v29 = OUTLINED_FUNCTION_25_1((uint64_t)v28, sel_trailingAnchor);
  v30 = OUTLINED_FUNCTION_0_21((uint64_t)v29);

  *(_QWORD *)(v3 + 88) = v30;
  v32 = OUTLINED_FUNCTION_9(v31, sel_bottomAnchor);
  v33 = OUTLINED_FUNCTION_25_1((uint64_t)v32, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v3 + 96) = v34;
  specialized Array._endMutation()();
  v35 = (void *)objc_opt_self();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, isa);

}

id PushToTalkLabelButtonView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void PushToTalkLabelButtonView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PushToTalkLabelButtonView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushToTalkLabelButtonView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for PushToTalkLabelButtonView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushToTalkLabelButtonView.__allocating_init(button:labelText:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t CallControlTextButton.init(config:)()
{
  type metadata accessor for CallControlsTextButtonConfiguration(0);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  return Bindable<A>.init(wrappedValue:)();
}

uint64_t type metadata accessor for CallControlsTextButtonConfiguration(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlsTextButtonConfiguration);
}

void CallControlTextButtonStyle.init(tint:role:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  *a3 = a1;
  v5 = type metadata accessor for CallControlTextButtonStyle(0);
  outlined init with take of Any?(a2, (uint64_t)a3 + *(int *)(v5 + 20), &demangling cache variable for type metadata for ButtonRole?);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for CallControlTextButtonStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButtonStyle);
}

void CallControlsTextButtonConfiguration.__allocating_init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_21_86();
  swift_allocObject();
  CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(v15, v14, v13, v12, v11, v10, a7, a8, a9, a10);
  OUTLINED_FUNCTION_8_0();
}

uint64_t CallControlTextButton.config.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t key path setter for CallControlTextButton.config : CallControlTextButton()
{
  swift_retain();
  return CallControlTextButton.config.setter();
}

uint64_t CallControlTextButton.config.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return Bindable.wrappedValue.setter();
}

void CallControlTextButton.config.modify(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  v2[4] = Bindable.wrappedValue.modify();
  OUTLINED_FUNCTION_18();
}

uint64_t CallControlTextButton.$config.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return Bindable.projectedValue.getter();
}

void CallControlTextButton.buttonWithAccessbilityLabel()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD v18[4];

  v18[1] = a1;
  v18[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>>.Storage);
  MEMORY[0x1E0C80A78](v18[0]);
  v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  v13 = v12;
  v15 = v14;
  swift_release();
  CallControlTextButton.buttonWithAccessbilityIdentifier()((uint64_t)v5);
  if (v15)
  {
    v18[2] = v13;
    v18[3] = v15;
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type String and conformance String();
    View.accessibilityLabel<A>(_:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_bridgeObjectRelease();
    v16 = &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>;
    outlined init with take of Any?((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v17 = (uint64_t)v11;
  }
  else
  {
    v16 = &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>;
    outlined init with copy of FeatureEligibility?((uint64_t)v5, (uint64_t)v2, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v17 = (uint64_t)v5;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v17, v16);
}

void CallControlsTextButtonConfiguration.accessibilityLabel.getter()
{
  CallControlsTextButtonConfiguration.accessibilityLabel.getter();
}

{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_37_51();
  OUTLINED_FUNCTION_9_0();
}

void CallControlTextButton.buttonWithAccessbilityIdentifier()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>.Storage);
  MEMORY[0x1E0C80A78](v17);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  v13 = v12;
  swift_release();
  CallControlTextButton.button()((uint64_t)v5);
  if (v13)
  {
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    v14 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>;
    outlined init with take of Any?((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    outlined init with copy of FeatureEligibility?((uint64_t)v11, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v15 = (uint64_t)v11;
  }
  else
  {
    v14 = &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>;
    outlined init with copy of FeatureEligibility?((uint64_t)v5, (uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    v15 = (uint64_t)v5;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v15, v14);
}

void CallControlsTextButtonConfiguration.accessibilityIdentifier.getter()
{
  CallControlsTextButtonConfiguration.accessibilityLabel.getter();
}

uint64_t CallControlTextButton.button()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a1;
  v21 = type metadata accessor for CallControlTextButtonStyle(0);
  MEMORY[0x1E0C80A78](v21);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Text>);
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  Bindable.wrappedValue.getter();
  CallControlsTextButtonConfiguration.text.getter();
  v10 = v9;
  v12 = v11;
  swift_release();
  v24 = v10;
  v25 = v12;
  Bindable.wrappedValue.getter();
  swift_retain();
  swift_release();
  lazy protocol witness table accessor for type String and conformance String();
  Button<>.init<A>(_:action:)();
  Bindable.wrappedValue.getter();
  outlined init with copy of CallControlTextButtonStyle(v24 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, (uint64_t)v2);
  swift_release();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<Text> and conformance Button<A>, &demangling cache variable for type metadata for Button<Text>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButtonStyle and conformance CallControlTextButtonStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonStyle);
  View.buttonStyle<A>(_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v2, type metadata accessor for CallControlTextButtonStyle);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  Bindable.wrappedValue.getter();
  LOBYTE(v10) = CallControlsTextButtonConfiguration.enabled.getter();
  swift_release();
  KeyPath = swift_getKeyPath();
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = (v10 & 1) == 0;
  v16 = v22;
  v15 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v23, v8, v22);
  v17 = (uint64_t *)(v15
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>)
                           + 36));
  *v17 = KeyPath;
  v17[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v17[2] = v14;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
}

void CallControlsTextButtonConfiguration.text.getter()
{
  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_2_6();
  swift_release();
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_37_51();
  OUTLINED_FUNCTION_9_0();
}

uint64_t CallControlsTextButtonConfiguration.enabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  swift_getKeyPath();
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_2_6();
  swift_release();
  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled);
  OUTLINED_FUNCTION_9_4();
  return *v1;
}

uint64_t CallControlsTextButtonConfiguration.buttonStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of CallControlTextButtonStyle(v1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, a1);
}

void key path getter for CallControlsTextButtonConfiguration.text : CallControlsTextButtonConfiguration(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CallControlsTextButtonConfiguration.text.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for CallControlsTextButtonConfiguration.text : CallControlsTextButtonConfiguration()
{
  swift_bridgeObjectRetain();
  CallControlsTextButtonConfiguration.text.setter();
}

void CallControlsTextButtonConfiguration.text.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_32_57();
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_1();
}

uint64_t CallControlsTextButtonConfiguration.access<A>(keyPath:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.text.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__text);
  swift_beginAccess();
  *v5 = a2;
  v5[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t specialized CallControlsTextButtonConfiguration.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t CallControlsTextButtonConfiguration.withMutation<A, B>(keyPath:_:)()
{
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void CallControlsTextButtonConfiguration.text.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_122();
  OUTLINED_FUNCTION_91();
}

void CallControlsTextButtonConfiguration.text.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

void key path getter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for CallControlsTextButtonConfiguration.accessibilityLabel : CallControlsTextButtonConfiguration(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))CallControlsTextButtonConfiguration.accessibilityLabel.setter);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityLabel.setter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.setter();
}

{
  swift_getKeyPath();
  OUTLINED_FUNCTION_32_57();
  OUTLINED_FUNCTION_17_22();
  return swift_bridgeObjectRelease();
}

void CallControlsTextButtonConfiguration.accessibilityLabel.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_122();
  OUTLINED_FUNCTION_91();
}

void CallControlsTextButtonConfiguration.accessibilityLabel.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

void key path getter for CallControlsTextButtonConfiguration.accessibilityIdentifier : CallControlsTextButtonConfiguration(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void key path setter for CallControlsTextButtonConfiguration.accessibilityIdentifier : CallControlsTextButtonConfiguration(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for IconButtonConfig.title : <A>IconButtonConfig<A>(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))CallControlsTextButtonConfiguration.accessibilityIdentifier.setter);
}

uint64_t CallControlsTextButtonConfiguration.accessibilityIdentifier.setter()
{
  return CallControlsTextButtonConfiguration.accessibilityLabel.setter();
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v6;

  v6 = (_QWORD *)(a1 + *a4);
  swift_beginAccess();
  *v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void CallControlsTextButtonConfiguration.accessibilityIdentifier.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_122();
  OUTLINED_FUNCTION_91();
}

void CallControlsTextButtonConfiguration.accessibilityIdentifier.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

uint64_t key path getter for CallControlsTextButtonConfiguration.enabled : CallControlsTextButtonConfiguration@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = CallControlsTextButtonConfiguration.enabled.getter();
  *a1 = result & 1;
  return result;
}

void key path setter for CallControlsTextButtonConfiguration.enabled : CallControlsTextButtonConfiguration()
{
  CallControlsTextButtonConfiguration.enabled.setter();
}

void CallControlsTextButtonConfiguration.enabled.setter()
{
  swift_getKeyPath();
  OUTLINED_FUNCTION_32_57();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_14_1();
}

uint64_t closure #1 in CallControlsTextButtonConfiguration.enabled.setter(uint64_t a1, char a2)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(a1 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled);
  result = swift_beginAccess();
  *v3 = a2;
  return result;
}

void CallControlsTextButtonConfiguration.enabled.modify()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_11_9((uint64_t)v2);
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_10_0(OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration___observationRegistrar);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlsTextButtonConfiguration and conformance CallControlsTextButtonConfiguration, (void (*)(uint64_t))type metadata accessor for CallControlsTextButtonConfiguration);
  OUTLINED_FUNCTION_0_9(v3);
  OUTLINED_FUNCTION_17_22();
  *v1 = v0;
  OUTLINED_FUNCTION_8_17();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_3_122();
  OUTLINED_FUNCTION_91();
}

void CallControlsTextButtonConfiguration.enabled.modify(_QWORD **a1)
{
  ShareScreenButtonConfig.buttonConfig.modify(a1);
}

uint64_t CallControlsTextButtonConfiguration.didTap.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_didTap);
  swift_retain();
  return v1;
}

void CallControlsTextButtonConfiguration.init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  OUTLINED_FUNCTION_21_86();
  v17 = (_QWORD *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityLabel);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityIdentifier);
  *v18 = 0;
  v18[1] = 0;
  ObservationRegistrar.init()();
  outlined init with take of CallControlTextButtonStyle(v16, v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle);
  v19 = (_QWORD *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__text);
  *v19 = v15;
  v19[1] = v14;
  swift_bridgeObjectRelease();
  *v17 = v13;
  v17[1] = v12;
  swift_bridgeObjectRelease();
  *v18 = v11;
  v18[1] = a7;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__enabled) = a8;
  v20 = (_QWORD *)(v10 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_didTap);
  *v20 = a9;
  v20[1] = a10;
  OUTLINED_FUNCTION_8_0();
}

void sub_1BD4C6264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CallControlsTextButtonConfiguration.accessibilityLabel.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C6288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CallControlsTextButtonConfiguration.accessibilityIdentifier.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C62AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4();
  CallControlsTextButtonConfiguration.text.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C62D0()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_4();
  *v0 = CallControlsTextButtonConfiguration.enabled.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4C62F4()
{
  CallControlsTextButtonConfiguration.enabled.setter();
  OUTLINED_FUNCTION_0();
}

uint64_t outlined init with copy of CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallControlTextButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.text.setter()
{
  uint64_t *v0;

  return closure #1 in CallControlsTextButtonConfiguration.text.setter(v0[2], v0[3], v0[4]);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter()
{
  uint64_t *v0;

  return closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityLabel);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.accessibilityIdentifier.setter()
{
  uint64_t *v0;

  return closure #1 in CallControlsTextButtonConfiguration.accessibilityLabel.setter(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration__accessibilityIdentifier);
}

uint64_t partial apply for closure #1 in CallControlsTextButtonConfiguration.enabled.setter()
{
  uint64_t v0;

  return closure #1 in CallControlsTextButtonConfiguration.enabled.setter(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t outlined init with take of CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CallControlTextButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void CallControlsTextButtonConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;

  outlined destroy of AccountUpdateNotice(v0 + OBJC_IVAR____TtC15ConversationKit35CallControlsTextButtonConfiguration_buttonStyle, type metadata accessor for CallControlTextButtonStyle);
  OUTLINED_FUNCTION_23_80();
  OUTLINED_FUNCTION_23_80();
  OUTLINED_FUNCTION_23_80();
  swift_release();
  v1 = type metadata accessor for ObservationRegistrar();
  OUTLINED_FUNCTION_17_1(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t CallControlsTextButtonConfiguration.__deallocating_deinit()
{
  CallControlsTextButtonConfiguration.deinit();
  return swift_deallocClassInstance();
}

uint64_t CallControlTextButtonStyle.tint.getter()
{
  return swift_retain();
}

void CallControlTextButtonStyle.role.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CallControlTextButtonStyle(0);
  outlined init with copy of FeatureEligibility?(v1 + *(int *)(v3 + 20), a1, &demangling cache variable for type metadata for ButtonRole?);
  OUTLINED_FUNCTION_0();
}

uint64_t CallControlTextButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for CallControlTextButtonDefaultStyle(0);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v6 = (_QWORD *)(v5 - v4);
  v7 = OUTLINED_FUNCTION_38_59();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_77();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_77();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  Button<>.init(_:)();
  v17 = *v1;
  v18 = type metadata accessor for CallControlTextButtonStyle(0);
  outlined init with copy of FeatureEligibility?((uint64_t)v1 + *(int *)(v18 + 20), (uint64_t)v6 + *(int *)(v3 + 20), &demangling cache variable for type metadata for ButtonRole?);
  *v6 = v17;
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButtonDefaultStyle and conformance CallControlTextButtonDefaultStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonDefaultStyle);
  swift_retain();
  View.buttonStyle<A>(_:)();
  outlined destroy of AccountUpdateNotice((uint64_t)v6, type metadata accessor for CallControlTextButtonDefaultStyle);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t type metadata accessor for CallControlTextButtonDefaultStyle(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButtonDefaultStyle);
}

uint64_t associated type witness table accessor for View.Body : View in CallControlTextButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in CallControlTextButtonStyle()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD4C66E4(uint64_t *a1@<X8>)
{
  *a1 = CallControlTextButton.config.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t initializeBufferWithCopyOfBuffer for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CallControlTextButton(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CallControlTextButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallControlTextButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD4C68B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CallControlTextButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD4C68F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CallControlTextButton(uint64_t a1)
{
  return type metadata accessor for ConversationControlsAppLaunchButtonType(a1, (uint64_t *)&type metadata singleton initialization cache for CallControlTextButton);
}

void type metadata completion function for CallControlTextButton()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for Bindable<CallControlsTextButtonConfiguration>, type metadata accessor for CallControlsTextButtonConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CE0058]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t ObjC metadata update function for CallControlsTextButtonConfiguration()
{
  return type metadata accessor for CallControlsTextButtonConfiguration(0);
}

uint64_t type metadata completion function for CallControlsTextButtonConfiguration()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for CallControlTextButtonStyle(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CallControlsTextButtonConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CallControlsTextButtonConfiguration.__allocating_init(buttonStyle:text:accessibilityLabel:accessibilityIdentifier:enabled:didTap:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t getEnumTagSinglePayload for CallControlTextButtonStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for CallControlTextButtonStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BD4C6AD8()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>, lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>);
    v2 = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>()
{
  return lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>, AccessibilityAttachmentModifier>, _ConditionalContent<ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>, ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>>> and conformance <> _ConditionalContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CDB8A0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, (void (*)(uint64_t))MEMORY[0x1E0CDCFD0]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyTransformModifier<Bool>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1BD4C6DB0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  type metadata accessor for CallControlTextButtonDefaultStyle(255);
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<PrimitiveButtonStyleConfiguration.Label> and conformance Button<A>, &demangling cache variable for type metadata for Button<PrimitiveButtonStyleConfiguration.Label>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type CallControlTextButtonDefaultStyle and conformance CallControlTextButtonDefaultStyle, (void (*)(uint64_t))type metadata accessor for CallControlTextButtonDefaultStyle);
  return swift_getOpaqueTypeConformance2();
}

void initializeBufferWithCopyOfBuffer for CallControlTextButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_15_22();
  }
  else
  {
    v4 = OUTLINED_FUNCTION_12_107();
    OUTLINED_FUNCTION_15_22();
    if (OUTLINED_FUNCTION_55())
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
      OUTLINED_FUNCTION_1_146(v5);
    }
    else
    {
      OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
      OUTLINED_FUNCTION_2_127();
    }
  }
  OUTLINED_FUNCTION_91();
}

void destroy for CallControlTextButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = OUTLINED_FUNCTION_20_81();
  if (__swift_getEnumTagSinglePayload(v4, 1, v5))
    OUTLINED_FUNCTION_0();
  else
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void initializeWithCopy for CallControlTextButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_12_107();
  OUTLINED_FUNCTION_15_22();
  if (OUTLINED_FUNCTION_55())
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    OUTLINED_FUNCTION_1_146(v3);
  }
  else
  {
    OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
    OUTLINED_FUNCTION_2_127();
  }
  OUTLINED_FUNCTION_91();
}

void assignWithCopy for CallControlTextButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_retain();
  OUTLINED_FUNCTION_22();
  v5 = (uint64_t)a1 + *(int *)(a3 + 20);
  v6 = OUTLINED_FUNCTION_20_81();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v6);
  v8 = OUTLINED_FUNCTION_55();
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24));
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_27_68(v9);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    OUTLINED_FUNCTION_1_146(v10);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  OUTLINED_FUNCTION_2_127();
LABEL_7:
  OUTLINED_FUNCTION_91();
}

_QWORD *initializeWithTake for CallControlTextButtonStyle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = OUTLINED_FUNCTION_12_107();
  if (OUTLINED_FUNCTION_55())
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    OUTLINED_FUNCTION_1_146(v4);
  }
  else
  {
    OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
    OUTLINED_FUNCTION_2_127();
  }
  return a1;
}

void assignWithTake for CallControlTextButtonStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  v5 = (uint64_t)a1 + *(int *)(a3 + 20);
  v6 = OUTLINED_FUNCTION_20_81();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v6);
  v8 = OUTLINED_FUNCTION_55();
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 40));
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_27_68(v9);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    OUTLINED_FUNCTION_1_146(v10);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_0_154(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  OUTLINED_FUNCTION_2_127();
LABEL_7:
  OUTLINED_FUNCTION_91();
}

uint64_t getEnumTagSinglePayload for CallControlTextButtonDefaultStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_15Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CallControlTextButtonDefaultStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_16Tm(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

void type metadata completion function for CallControlTextButtonStyle()
{
  unint64_t v0;

  type metadata accessor for Published<TUCallTransmissionMode>(319, &lazy cache variable for type metadata for ButtonRole?, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8338], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t associated type witness table accessor for PrimitiveButtonStyle.Body : View in CallControlTextButtonDefaultStyle()
{
  return swift_getOpaqueTypeConformance2();
}

void CallControlTextButtonDefaultStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a2;
  v3 = type metadata accessor for ButtonBorderShape();
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for BorderedProminentButtonStyle();
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>>);
  v11 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  v38 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
  v16 = MEMORY[0x1E0C80A78](v36);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v16);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v48 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  BorderedProminentButtonStyle.init()();
  lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>>);
  lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, (void (*)(uint64_t))MEMORY[0x1E0CDCDC0]);
  v21 = v37;
  v22 = v40;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v22);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v21);
  v23 = v43;
  static ButtonBorderShape.capsule.getter();
  KeyPath = swift_getKeyPath();
  v25 = (uint64_t *)&v18[*(int *)(v36 + 36)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
  v28 = v44;
  v27 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v25 + *(int *)(v26 + 28), v23, v45);
  *v25 = KeyPath;
  v29 = v39;
  v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v18, v15, v41);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v27);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  v31 = *v46;
  v32 = swift_getKeyPath();
  v49 = v31;
  swift_retain_n();
  v33 = AnyShapeStyle.init<A>(_:)();
  v34 = v47;
  outlined init with copy of FeatureEligibility?((uint64_t)v18, v47, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
  swift_release();
  v35 = (uint64_t *)(v34
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>)
                           + 36));
  *v35 = v32;
  v35[1] = v33;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
}

void closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a1;
  v1 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v49);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  MEMORY[0x1E0C80A78](v50);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x1E0C80A78](v51);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>);
  MEMORY[0x1E0C80A78](v52);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  PrimitiveButtonStyleConfiguration.label.getter();
  v13 = static Edge.Set.leading.getter();
  v14 = static Edge.Set.trailing.getter();
  v15 = MEMORY[0x1C3B71FFC](0);
  v16 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v16 & v13) != v13)
    v15 = MEMORY[0x1C3B71FFC](v15 | v13);
  v17 = MEMORY[0x1C3B71FFC](v15);
  if (MEMORY[0x1C3B71FFC](v17 & v14) != v14)
    LOBYTE(v15) = MEMORY[0x1C3B71FFC](v15 | v14);
  EdgeInsets.init(_all:)();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v4, v1);
  v26 = &v6[*(int *)(v49 + 36)];
  *v26 = v15;
  *((_QWORD *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v27 = static Edge.Set.top.getter();
  v28 = static Edge.Set.bottom.getter();
  v29 = MEMORY[0x1C3B71FFC](0);
  v30 = MEMORY[0x1C3B71FFC]();
  if (MEMORY[0x1C3B71FFC](v30 & v27) != v27)
    v29 = MEMORY[0x1C3B71FFC](v29 | v27);
  v31 = MEMORY[0x1C3B71FFC](v29);
  if (MEMORY[0x1C3B71FFC](v31 & v28) != v28)
    LOBYTE(v29) = MEMORY[0x1C3B71FFC](v29 | v28);
  EdgeInsets.init(_all:)();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;
  outlined init with copy of FeatureEligibility?((uint64_t)v6, (uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  v40 = &v8[*(int *)(v50 + 36)];
  *v40 = v29;
  *((_QWORD *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
  static Font.subheadline.getter();
  v41 = Font.bold()();
  swift_release();
  KeyPath = swift_getKeyPath();
  outlined init with copy of FeatureEligibility?((uint64_t)v8, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  v43 = (uint64_t *)&v10[*(int *)(v51 + 36)];
  *v43 = KeyPath;
  v43[1] = v41;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
  v44 = static Alignment.center.getter();
  v46 = v45;
  outlined init with copy of FeatureEligibility?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  v47 = (uint64_t *)&v12[*(int *)(v52 + 36)];
  *v47 = v44;
  v47[1] = v46;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  outlined init with take of Any?((uint64_t)v12, v53, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>);
}

uint64_t sub_1BD4C7AB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_38_59();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void partial apply for implicit closure #2 in implicit closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)()
{
  OUTLINED_FUNCTION_38_59();
  PrimitiveButtonStyleConfiguration.trigger()();
  OUTLINED_FUNCTION_0();
}

void partial apply for closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)(uint64_t a1@<X8>)
{
  closure #1 in CallControlTextButtonDefaultStyle.makeBody(configuration:)(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _OverlayModifier<AcceptFirstMouseView> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<AcceptFirstMouseView>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>);
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type PrimitiveButtonStyleConfiguration.Label and conformance PrimitiveButtonStyleConfiguration.Label, (void (*)(uint64_t))MEMORY[0x1E0CDD128]);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1BD4C7D3C()
{
  EnvironmentValues._buttonBorderShape.getter();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for EnvironmentValues._buttonBorderShape : EnvironmentValues, serialized(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ButtonBorderShape();
  v3 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues._buttonBorderShape.setter();
}

uint64_t sub_1BD4C7DF0()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>>);
    v2 = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<AnyShapeStyle?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<AnyShapeStyle?>);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v4);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>, _EnvironmentKeyWritingModifier<AnyShapeStyle?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  _QWORD v10[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>>);
    v3 = type metadata accessor for BorderedProminentButtonStyle();
    v4 = (void (*)(uint64_t))MEMORY[0x1E0CDCDC0];
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<PrimitiveButtonStyleConfiguration.Label, _PaddingLayout>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Font?>>, _OverlayModifier<AcceptFirstMouseView>>>);
    v6 = v5;
    lazy protocol witness table accessor for type UUID and conformance UUID(&lazy protocol witness table cache variable for type BorderedProminentButtonStyle and conformance BorderedProminentButtonStyle, v4);
    v10[2] = v2;
    v10[3] = v3;
    v10[4] = v6;
    v10[5] = v7;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type CurrentValueSubject<PreCallControlsContext?, Never> and conformance CurrentValueSubject<A, B>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ButtonBorderShape> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
    v10[0] = OpaqueTypeConformance2;
    v10[1] = v9;
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD9C20], v1, v10);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void InCallControlsPTTTitleCell.configure(with:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIBackgroundConfiguration?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.listPlainCell()();
  v7 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  UIBackgroundConfiguration.backgroundColor.setter();
  v8 = type metadata accessor for UIBackgroundConfiguration();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  MEMORY[0x1C3B7370C](v6);
  InCallControlsPTTTitleCell.setupAvatarViewController(viewModel:)((uint64_t)a1);
  InCallControlsPTTTitleCell.setupTitleLabel()();
  v10 = *a1;
  v9 = a1[1];
  v11 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel);
  outlined bridged method (mbgnn) of @objc UILabel.text.setter(v10, v9, v11);

}

id InCallControlsPTTTitleCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id InCallControlsPTTTitleCell.init(frame:)()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  objc_super *v6;
  SEL v7;
  id v8;

  OUTLINED_FUNCTION_17_7();
  ObjectType = swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_9((uint64_t)v4, sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint] = 0;

  v5 = OUTLINED_FUNCTION_15_0();
  v8 = objc_msgSendSuper2(v6, v7, v5, v4, ObjectType);
  objc_msgSend(v8, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  return v8;
}

id InCallControlsPTTTitleCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsPTTTitleCell.init(coder:)()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView] = 0;
  v1 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void InCallControlsPTTTitleCell.setupAvatarViewController(viewModel:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class isa;
  Class v37;
  id v38;

  v3 = v1;
  v5 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView);
  if (v6)
  {
    objc_msgSend(v6, sel_removeFromSuperview);
    v7 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = 0;

    v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController) = 0;

  }
  _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
  static UIImageView.appIcon(for:)(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  v10 = v9;
  v11 = objc_msgSend(v9, sel_image);

  v12 = *(id *)(a1 + 48);
  v38 = v11;
  specialized ConversationControlsBadgingAvatarViewController.__allocating_init(pttCall:badgeImage:)(v12, v11);
  v13 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController;
  v14 = *(void **)(v3 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarViewController) = v15;

  v16 = *(void **)(v3 + v13);
  if (v16 && (v17 = objc_msgSend(v16, sel_view)) != 0)
  {
    v18 = *(void **)(v3 + v5);
    *(_QWORD *)(v3 + v5) = v17;
    v19 = v17;

    v20 = OUTLINED_FUNCTION_0_15();
    objc_msgSend(v20, sel_addSubview_, v19);

    objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v21 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BD644140;
    v23 = objc_msgSend(OUTLINED_FUNCTION_9(v22, sel_widthAnchor), sel_constraintEqualToConstant_, 100.0);
    OUTLINED_FUNCTION_8_10();
    *(_QWORD *)(v22 + 32) = v2;
    v25 = objc_msgSend(OUTLINED_FUNCTION_9(v24, sel_heightAnchor), sel_constraintEqualToConstant_, 100.0);
    OUTLINED_FUNCTION_8_10();
    *(_QWORD *)(v22 + 40) = v2;
    v27 = OUTLINED_FUNCTION_9(v26, sel_centerXAnchor);
    v28 = OUTLINED_FUNCTION_0_15();
    v29 = objc_msgSend(v28, sel_centerXAnchor);

    v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
    OUTLINED_FUNCTION_8_10();

    *(_QWORD *)(v22 + 48) = v28;
    v32 = OUTLINED_FUNCTION_9(v31, sel_topAnchor);
    v33 = OUTLINED_FUNCTION_0_15();
    v34 = objc_msgSend(v33, sel_topAnchor);

    v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
    *(_QWORD *)(v22 + 56) = v35;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_activateConstraints_, isa);

    v37 = isa;
  }
  else
  {
    v37 = (Class)v38;
  }

}

void InCallControlsPTTTitleCell.setupTitleLabel()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Class isa;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_avatarView];
  if (v1)
  {
    v2 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint;
    v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabelTopConstraint];
    if (v3)
    {
      v4 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
      v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel];
      isa = v1;
      v46 = v3;
      objc_msgSend(v5, sel_removeConstraint_);
      v7 = objc_msgSend(*(id *)&v0[v4], sel_topAnchor);
      v8 = -[objc_class bottomAnchor](isa, sel_bottomAnchor);
      v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 14.0);

      v10 = *(void **)&v0[v2];
      *(_QWORD *)&v0[v2] = v9;

      v11 = *(void **)&v0[v2];
      if (!v11)
      {
LABEL_13:

LABEL_14:
        return;
      }
      v12 = v11;
      objc_msgSend(v12, sel_setActive_, 1);
    }
    else
    {
      v13 = OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel;
      v14 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit26InCallControlsPTTTitleCell_titleLabel];
      v15 = one-time initialization token for tableViewHeaderTitleLabel;
      v46 = v1;
      v16 = v14;
      if (v15 != -1)
        swift_once();
      objc_msgSend(v16, sel_setTextColor_, static Colors.InCallControls.tableViewHeaderTitleLabel);

      v17 = one-time initialization token for detailTitleLabel;
      v18 = *(id *)&v0[v13];
      if (v17 != -1)
        swift_once();
      objc_msgSend(v18, sel_setFont_, static Fonts.PTT.detailTitleLabel);

      objc_msgSend(*(id *)&v0[v13], sel_setNumberOfLines_, 2);
      objc_msgSend(*(id *)&v0[v13], sel_setTextAlignment_, 1);
      v19 = objc_msgSend(v0, sel_contentView);
      objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v0[v13]);

      objc_msgSend(*(id *)&v0[v13], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v20 = objc_msgSend(*(id *)&v0[v13], sel_topAnchor);
      v21 = objc_msgSend(v46, sel_bottomAnchor);
      v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 14.0);

      v23 = *(void **)&v0[v2];
      *(_QWORD *)&v0[v2] = v22;

      v24 = *(void **)&v0[v2];
      if (!v24)
        goto LABEL_14;
      v45 = (id)objc_opt_self();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BD644E30;
      v26 = *(void **)&v0[v13];
      v27 = v24;
      v28 = objc_msgSend(v26, sel_centerXAnchor);
      v29 = objc_msgSend(v0, sel_contentView);
      v30 = objc_msgSend(v29, sel_centerXAnchor);

      v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
      *(_QWORD *)(v25 + 32) = v31;
      v32 = objc_msgSend(*(id *)&v0[v13], sel_leadingAnchor);
      v33 = objc_msgSend(v0, sel_contentView);
      v34 = objc_msgSend(v33, sel_leadingAnchor);

      v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
      *(_QWORD *)(v25 + 40) = v35;
      v36 = objc_msgSend(*(id *)&v0[v13], sel_trailingAnchor);
      v37 = objc_msgSend(v0, sel_contentView);
      v38 = objc_msgSend(v37, sel_trailingAnchor);

      v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
      *(_QWORD *)(v25 + 48) = v39;
      *(_QWORD *)(v25 + 56) = v27;
      v40 = *(void **)&v0[v13];
      v12 = v27;
      v41 = objc_msgSend(v40, (SEL)&selRef_groupConversations + 5);
      v42 = objc_msgSend(v0, sel_contentView);
      v43 = objc_msgSend(v42, (SEL)&selRef_groupConversations + 5);

      v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -20.0);
      *(_QWORD *)(v25 + 64) = v44;
      specialized Array._endMutation()();
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v45, sel_activateConstraints_, isa);
    }

    goto LABEL_13;
  }
}

id InCallControlsPTTTitleCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InCallControlsPTTTitleCell()
{
  return objc_opt_self();
}

Swift::String __swiftcall TUCall.channelDisplayName()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String result;
  _QWORD v22[2];

  v1 = type metadata accessor for CharacterSet();
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v1).n128_u64[0];
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_provider, v3);
  v7 = objc_msgSend(v6, sel_localizedName);

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v10 = v9;

  v11 = outlined bridged method (pb) of @objc TUCall.callerNameFromNetwork.getter(v0);
  if (!v12)
    goto LABEL_7;
  v13 = v11;
  v14 = v12;
  v22[0] = v11;
  v22[1] = v12;
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type String and conformance String();
  v15 = StringProtocol.trimmingCharacters(in:)();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v13 = v8;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v10 = v14;
LABEL_8:
  v19 = v13;
  v20 = v10;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

id @objc TUCall.channelDisplayName()(void *a1)
{
  id v1;
  Swift::String v2;
  void *v3;

  v1 = a1;
  v2 = TUCall.channelDisplayName()();

  v3 = (void *)MEMORY[0x1C3B72E00](v2._countAndFlagsBits, v2._object);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t outlined bridged method (pb) of @objc TUCall.callerNameFromNetwork.getter(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_callerNameFromNetwork);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)()
{
  swift_release();
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_3_123();
  return OUTLINED_FUNCTION_17_81();
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)(uint64_t a1)
{
  __int128 v3;

  swift_release();
  v3 = *(_OWORD *)(a1 + 16);
  outlined release of String((uint64_t)&v3);
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_3_123();
  return OUTLINED_FUNCTION_17_81();
}

uint64_t CallScreeningListeningState.init(prevState:canScreenCall:)(__int128 *a1)
{
  _BYTE v2[24];

  outlined init with take of CallScreening.EndingAction(a1, (uint64_t)v2);
  outlined release of CallScreening.EndingAction((uint64_t)v2);
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CKStateMachineContainer<CallScreening.State>);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_3_123();
  return OUTLINED_FUNCTION_17_81();
}

uint64_t CallScreeningListeningState.canScreenCall.getter(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t CallScreeningListeningState.stateMachineContainer.getter()
{
  return swift_retain();
}

void CallScreeningListeningState.willExit(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;

  v12 = type metadata accessor for Logger();
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_2();
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v14 = type metadata accessor for CallScreeningListeningState(0, a5, a6, v13);
  v15 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningListeningState<A>, v14);
  if (CallScreeningState.stateMachine.getter(v14, v15))
  {
    (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_4_27();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_4_27();
    v16 = Logger.logObject.getter();
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v24 = v17;
      v18 = OUTLINED_FUNCTION_105();
      v26[0] = OUTLINED_FUNCTION_105();
      *(_DWORD *)v18 = 136446466;
      swift_release();
      swift_release();
      v23 = v16;
      v27 = OUTLINED_FUNCTION_1_147();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_13_111();
      swift_release();
      swift_release();
      *(_WORD *)(v18 + 12) = 2082;
      outlined retain of CallScreening.State(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))outlined copy of CallScreening.State);
      CallScreening.State.description.getter();
      v20 = v19;
      v22 = v21;
      OUTLINED_FUNCTION_8_16();
      v27 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8_16();
      OUTLINED_FUNCTION_8_16();
      _os_log_impl(&dword_1BD004000, v23, v24, "%{public}s Exiting to %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    swift_release_n();
    swift_release_n();
    OUTLINED_FUNCTION_4_27();
    OUTLINED_FUNCTION_4_27();
    swift_unknownObjectRelease();

    OUTLINED_FUNCTION_96_1(v25);
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t type metadata accessor for CallScreeningListeningState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CallScreeningListeningState);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CallScreeningListeningState.enteredState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v2 = v1;
  v3 = v0;
  v4 = type metadata accessor for Logger();
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v6 = type metadata accessor for CallScreeningListeningState(0, v3, v2, v5);
  v7 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningListeningState<A>, v6);
  if (CallScreeningState.stateMachine.getter(v6, v7))
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
    swift_retain();
    OUTLINED_FUNCTION_14_11();
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *(_DWORD *)v10 = 136446210;
      OUTLINED_FUNCTION_1_147();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_13_111();
      swift_release();
      swift_release();
      _os_log_impl(&dword_1BD004000, v8, v9, "EnteredState %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    OUTLINED_FUNCTION_96_1(v11);
  }
  OUTLINED_FUNCTION_1_29();
}

uint64_t CallScreeningListeningState.update(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = type metadata accessor for Logger();
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  if (one-time initialization token for shared != -1)
    swift_once();
  v6[19] = static CKStateMachineActor.shared;
  return OUTLINED_FUNCTION_4_4();
}

void CallScreeningListeningState.update(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  _QWORD *v25;
  os_log_type_t v27;
  uint64_t v28;

  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v4 + 80);
  v5 = *(_QWORD *)(v4 + 104);
  v6 = *(_QWORD *)(v4 + 112);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v4 + 96);
  v7 = type metadata accessor for CallScreeningListeningState(0, v5, v6, a4);
  v8 = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningListeningState<A>, v7);
  v9 = CallScreeningState.stateMachine.getter(v7, v8);
  *(_QWORD *)(v4 + 160) = v9;
  if (v9)
  {
    v10 = *(_QWORD *)(v4 + 72);
    v11 = *(_QWORD *)(v4 + 104);
    v12 = *(void (**)(uint64_t))(*(_QWORD *)(v4 + 112) + 16);
    *(_QWORD *)(v4 + 168) = v12;
    v12(v11);
    swift_retain();
    OUTLINED_FUNCTION_15_22();
    outlined retain of AnsweringMachineCallStatus(v10);
    swift_retain();
    OUTLINED_FUNCTION_15_22();
    outlined retain of AnsweringMachineCallStatus(v10);
    v13 = Logger.logObject.getter();
    v27 = static os_log_type_t.default.getter();
    v14 = os_log_type_enabled(v13, v27);
    v15 = *(_QWORD *)(v4 + 144);
    v16 = *(_QWORD *)(v4 + 120);
    v17 = *(_QWORD *)(v4 + 128);
    if (v14)
    {
      OUTLINED_FUNCTION_29_71();
      v28 = OUTLINED_FUNCTION_19_77();
      *(_DWORD *)(v4 + 16) = 136446466;
      OUTLINED_FUNCTION_17_22();
      v18 = OUTLINED_FUNCTION_11_0();
      *(_QWORD *)(v4 + 56) = OUTLINED_FUNCTION_2_128(v18, v19, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_17_22();
      OUTLINED_FUNCTION_11_0();
      OUTLINED_FUNCTION_13_111();
      OUTLINED_FUNCTION_10_110();
      v20 = AnsweringMachineCallStatus.description.getter();
      v22 = v21;
      OUTLINED_FUNCTION_10_15();
      *(_QWORD *)(v4 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v20, v22, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_10_15();
      OUTLINED_FUNCTION_10_15();
      OUTLINED_FUNCTION_49_28(&dword_1BD004000, v13, v27, "%{public}s recieved callUpdate %{public}s");
      OUTLINED_FUNCTION_25_67();
      OUTLINED_FUNCTION_60();
    }
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_23_0();
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_10_15();

    v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v24(v15, v16);
    *(_QWORD *)(v4 + 176) = v24;
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 184) = v25;
    *v25 = v4;
    v25[1] = CallScreeningListeningState.update(with:);
    OUTLINED_FUNCTION_16_91();
    __asm { BR              X1 }
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_16_91();
  __asm { BR              X0 }
}

uint64_t CallScreeningListeningState.update(with:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_4_4();
}

uint64_t CallScreeningListeningState.update(with:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void (*v5)(_DWORD *, uint64_t);
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 72);
  if ((*(_BYTE *)(v0 + 208) & 1) != 0 || (*(_BYTE *)(v1 + 33) & 1) != 0)
  {
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v13;
    *v13 = v0;
    v13[1] = CallScreeningListeningState.update(with:);
    OUTLINED_FUNCTION_16_91();
    __asm { BR              X8 }
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 168))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_15_22();
  outlined retain of AnsweringMachineCallStatus(v1);
  OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_15_22();
  outlined retain of AnsweringMachineCallStatus(v1);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void (**)(_DWORD *, uint64_t))(v0 + 176);
  v6 = *(_DWORD **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 120);
  if (v4)
  {
    OUTLINED_FUNCTION_29_71();
    v16 = OUTLINED_FUNCTION_19_77();
    *v6 = 136446466;
    OUTLINED_FUNCTION_17_22();
    v8 = OUTLINED_FUNCTION_11_0();
    *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_2_128(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_13_111();
    OUTLINED_FUNCTION_17_22();
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_10_110();
    v10 = AnsweringMachineCallStatus.description.getter();
    v12 = v11;
    OUTLINED_FUNCTION_10_15();
    *(_QWORD *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_10_15();
    OUTLINED_FUNCTION_49_28(&dword_1BD004000, v2, v3, "%{public}s Cannot screen call with %{public}s");
    OUTLINED_FUNCTION_25_67();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_23_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_10_15();

  v5(v6, v7);
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  return OUTLINED_FUNCTION_16(*(uint64_t (**)(void))(v0 + 8));
}

{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_29_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in CallScreeningListeningState.update(with:)(__int128 *a1)
{
  unint64_t v1;
  void *v2;
  _BYTE v3[48];
  unint64_t v4;

  outlined init with take of CallScreening.State(a1, (uint64_t)v3);
  v1 = v4;
  v4 &= 0x1FFFFFFFFFFFFFFFuLL;
  lazy protocol witness table accessor for type CKStateMachineError and conformance CKStateMachineError();
  v2 = (void *)swift_allocError();
  if (v1 >> 61 == 1)

  else
    swift_willThrow();
}

void protocol witness for CallScreeningState.willExit(to:) in conformance CallScreeningListeningState<A>(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  CallScreeningListeningState.willExit(to:)(a1, *v2, v2[1], v2[2], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void protocol witness for CallScreeningState.enteredState() in conformance CallScreeningListeningState<A>()
{
  CallScreeningListeningState.enteredState()();
}

uint64_t protocol witness for UpdatesWithCallStatus.update(with:) in conformance CallScreeningListeningState<A>(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  *v9 = v3;
  v9[1] = partial apply for closure #1 in AsyncCancellableTimer.wait(with:);
  return CallScreeningListeningState.update(with:)(a1, v6, v7, v8, v10, v11);
}

uint64_t static CallScreeningListeningState.== infix(_:_:)()
{
  return 1;
}

uint64_t CallScreeningListeningState.description.getter()
{
  return 0x6E696E657473694CLL;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance CallScreeningListeningState<A>()
{
  return 0x6E696E657473694CLL;
}

uint64_t instantiation function for generic protocol witness table for CallScreeningListeningState<A>(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for CallScreeningListeningState<A>);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for CallScreeningListeningState()
{
  swift_release();
  return swift_release();
}

_QWORD *initializeBufferWithCopyOfBuffer for CallScreeningListeningState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CallScreeningListeningState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CallScreeningListeningState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t ClarityUIFavorite.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_5_0();
  return v1;
}

uint64_t ClarityUIFavorite.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClarityUIFavorite.actions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ClarityUIFavorite.actions.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ClarityUIFavorite.contact.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = (void *)v1[3];
  v3 = (void *)v1[4];
  v4 = v1[5];
  v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  v6 = v2;
  v7 = v3;
  return swift_bridgeObjectRetain();
}

__n128 ClarityUIFavorite.contact.setter(__n128 *a1)
{
  _QWORD *v1;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (void *)v1[3];
  v6 = (void *)v1[4];
  swift_bridgeObjectRelease();

  result = *a1;
  *(__n128 *)(v1 + 3) = *a1;
  v1[5] = v3;
  v1[6] = v4;
  return result;
}

uint64_t (*ClarityUIFavorite.contact.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void __swiftcall ClarityUIFavorite.init(id:actions:contact:)(ConversationKit::ClarityUIFavorite *__return_ptr retstr, Swift::String id, Swift::OpaquePointer actions, ConversationKit::ClarityUIContact contact)
{
  uint64_t v4;
  void *v5;

  v4 = *((_QWORD *)contact.cnContact.super.isa + 2);
  v5 = (void *)*((_QWORD *)contact.cnContact.super.isa + 3);
  retstr->id = id;
  retstr->actions = actions;
  *(_OWORD *)&retstr->contact.cnContact.super.isa = *(_OWORD *)contact.cnContact.super.isa;
  retstr->contact.id._countAndFlagsBits = v4;
  retstr->contact.id._object = v5;
}

uint64_t static ClarityUIFavorite.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t ClarityUIFavorite.hash(into:)()
{
  OUTLINED_FUNCTION_5_0();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int ClarityUIFavorite.hashValue.getter()
{
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_5_0();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ClarityUIFavorite()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Void __swiftcall CNFavoritesEntry.makeCall()()
{
  void *v0;
  void *v1;
  _QWORD v2[6];

  v2[4] = closure #1 in CNFavoritesEntry.makeCall();
  v2[5] = 0;
  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 1107296256;
  v2[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  v2[3] = &block_descriptor_98;
  v1 = _Block_copy(v2);
  objc_msgSend(v0, sel_performActionWithCompletion_, v1);
  _Block_release(v1);
}

uint64_t closure #1 in CNFavoritesEntry.makeCall()(void *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  result = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v6 = type metadata accessor for TaskPriority();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    type metadata accessor for MainActor();
    v7 = a1;
    v8 = static MainActor.shared.getter();
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x1E0DF06E8];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = a1;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in CNFavoritesEntry.makeCall()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  type metadata accessor for MainActor();
  *(_QWORD *)(v4 + 64) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in closure #1 in CNFavoritesEntry.makeCall()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  swift_release();
  if (one-time initialization token for clarityUI != -1)
    swift_once();
  v1 = *(void **)(v0 + 56);
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)&static Log.clarityUI);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v8 = Error.localizedDescription.getter();
    *(_QWORD *)(v0 + 48) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_10();
    OUTLINED_FUNCTION_3_10();
    _os_log_impl(&dword_1BD004000, v5, v6, "Unable to call favorite. Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_3_10();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CNFavoritesEntry.callType.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v3 = objc_msgSend(v0, sel_actionType);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v2 == OUTLINED_FUNCTION_1_88() && v1 == v4)
  {
    OUTLINED_FUNCTION_12_15();
    goto LABEL_16;
  }
  v6 = OUTLINED_FUNCTION_1_18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_16:

    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v6 == OUTLINED_FUNCTION_1_88() && v1 == v7)
  {

    OUTLINED_FUNCTION_12_15();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_1_18();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      if (one-time initialization token for clarityUI != -1)
        swift_once();
      v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)&static Log.clarityUI);
      v11 = v0;
      v12 = Logger.logObject.getter();
      v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)OUTLINED_FUNCTION_105();
        v19 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v14 = 136315138;
        v15 = objc_msgSend(v11, sel_actionType);
        type metadata accessor for CNActionType(0);
        v16 = String.init<A>(describing:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v12, v13, "Unhandled action type for favorite: %s", v14, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_60();
      }

      return 0;
    }
  }
  return 1;
}

uint64_t destroy for ClarityUIFavorite(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClarityUIFavorite(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v4;
  v8 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClarityUIFavorite(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  v7 = (void *)a2[4];
  v8 = (void *)a1[4];
  a1[4] = v7;
  v9 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClarityUIFavorite(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();

  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIFavorite()
{
  return &type metadata for ClarityUIFavorite;
}

uint64_t sub_1BD4CA874()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in CNFavoritesEntry.makeCall()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = dispatch thunk of CallScreeningStateMachine.transition(with:reason:validation:);
  return closure #1 in closure #1 in CNFavoritesEntry.makeCall()(a1, v4, v5, v6);
}

void TUStringShareItem.activityViewControllerPlaceholderItem(_:)(_QWORD *a1@<X8>)
{
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

id @objc TUStringShareItem.activityViewControllerPlaceholderItem(_:)()
{
  void *v0;
  _QWORD v2[4];

  TUStringShareItem.activityViewControllerPlaceholderItem(_:)(v2);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v0 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return v0;
}

double TUStringShareItem.activityViewController(_:itemForActivityType:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  if (!a1)
    goto LABEL_7;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_7:
      v10 = objc_msgSend(v2, sel_message);
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v13 = v12;

      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
      *(_QWORD *)a2 = v11;
      *(_QWORD *)(a2 + 8) = v13;
      return result;
    }
  }
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id @objc TUStringShareItem.activityViewController(_:itemForActivityType:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  TUStringShareItem.activityViewController(_:itemForActivityType:)((uint64_t)a4, (uint64_t)v17);

  v9 = v18;
  if (!v18)
    return 0;
  v10 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
  v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v15;
}

LPLinkMetadata_optional __swiftcall TUStringShareItem.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  objc_class *v1;
  LPLinkMetadata_optional result;

  v1 = 0;
  result.value.super.isa = v1;
  return result;
}

id @objc TUStringShareItem.activityViewControllerLinkMetadata(_:)()
{
  return 0;
}

uint64_t LinkDetailParticipantCollectionViewCell.style.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v10;
  __int128 v11;

  v2 = *a1;
  v3 = a1[3];
  v10 = *((_OWORD *)a1 + 2);
  v11 = *(_OWORD *)(a1 + 1);
  v4 = a1[6];
  v5 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  OUTLINED_FUNCTION_2_0();
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)v5 = v2;
  *(_OWORD *)(v5 + 8) = v11;
  *(_QWORD *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v10;
  *(_QWORD *)(v5 + 48) = v4;
  outlined consume of LinkDetailParticipantCollectionViewCell.Style(v6, v7, v8);
  return LinkDetailParticipantCollectionViewCell.applyStyle()();
}

uint64_t LinkDetailParticipantCollectionViewCell.Style.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  uint64_t countAndFlagsBits;
  Swift::String v8;

  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
    return 0;
  if (v1 == 1)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v8._object = (void *)0xE000000000000000;
    v3._countAndFlagsBits = 0x454D495445434146;
    v3._object = (void *)0xEE004C4542414C5FLL;
    v4.value._countAndFlagsBits = 0x61737265766E6F43;
    v4.value._object = (void *)0xEF74694B6E6F6974;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v8._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v8)._countAndFlagsBits;

  }
  else
  {
    countAndFlagsBits = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain();
  }
  return countAndFlagsBits;
}

void LinkDetailParticipantCollectionViewCell.style.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  OUTLINED_FUNCTION_2_0();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  outlined copy of LinkDetailParticipantCollectionViewCell.Style(v4, v5, v6);
  OUTLINED_FUNCTION_32();
}

void *key path getter for LinkDetailParticipantCollectionViewCell.style : LinkDetailParticipantCollectionViewCell@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *a2 = *(_QWORD *)v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  return outlined copy of LinkDetailParticipantCollectionViewCell.Style(v4, v5, v6);
}

uint64_t key path setter for LinkDetailParticipantCollectionViewCell.style : LinkDetailParticipantCollectionViewCell(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v8[7];

  v1 = *(void **)(a1 + 8);
  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v8[0] = *(void **)a1;
  v8[1] = v1;
  v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  outlined copy of LinkDetailParticipantCollectionViewCell.Style(v8[0], (uint64_t)v1, (unint64_t)v2);
  return LinkDetailParticipantCollectionViewCell.style.setter((uint64_t *)v8);
}

uint64_t LinkDetailParticipantCollectionViewCell.applyStyle()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  id v20;
  void (*v21)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char *v28;
  char *v29;
  uint64_t v30[5];
  Swift::String v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v28 = (char *)&v28 - v8;
  v9 = type metadata accessor for UIListContentConfiguration();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C3B73748](v11);
  v14 = v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    if (v15 == 1)
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
      v31._object = (void *)0xE000000000000000;
      v17._countAndFlagsBits = 0x454D495445434146;
      v17._object = (void *)0xEE004C4542414C5FLL;
      v18.value._countAndFlagsBits = 0x61737265766E6F43;
      v18.value._object = (void *)0xEF74694B6E6F6974;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v31._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v31);

    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  UIListContentConfiguration.text.setter();
  v20 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4AD0]);
  v21 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v21(v30, 0);
  UIListContentConfiguration.directionalLayoutMargins.setter();
  v30[3] = v9;
  v30[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v13, v9);
  MEMORY[0x1C3B73700](v30);
  v30[0] = MEMORY[0x1E0DEE9D8];
  LinkDetailParticipantCollectionViewCell.styleAccessories.getter();
  specialized Array.append<A>(contentsOf:)();
  LinkDetailParticipantCollectionViewCell.avatarAccessory()((uint64_t)v3);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    outlined destroy of Conversation?((uint64_t)v3, &demangling cache variable for type metadata for UICellAccessory?);
  }
  else
  {
    v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v24 = v28;
    v23(v28, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v29, v24, v4);
    v25 = v30[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
      v25 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *(_QWORD *)(v25 + 16) = v26 + 1;
    v23((char *)(v25+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26), v29, v4);
    v30[0] = v25;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
  }
  UICollectionViewListCell.accessories.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void LinkDetailParticipantCollectionViewCell.style.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t LinkDetailParticipantCollectionViewCell.style.modify(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return LinkDetailParticipantCollectionViewCell.applyStyle()();
  return result;
}

void *LinkDetailParticipantCollectionViewCell.avatarController.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController);
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void LinkDetailParticipantCollectionViewCell.avatarController.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_32();
}

void LinkDetailParticipantCollectionViewCell.avatarController.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id LinkDetailParticipantCollectionViewCell.joinButton.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton);
  OUTLINED_FUNCTION_2_0();
  return *v1;
}

void LinkDetailParticipantCollectionViewCell.joinButton.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_32();
}

void LinkDetailParticipantCollectionViewCell.joinButton.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id LinkDetailParticipantCollectionViewCell.joinButtonFont.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont));
}

void one-time initialization function for maxWidth()
{
  static LinkDetailParticipantCollectionViewCell.maxWidth = 0x4054000000000000;
}

uint64_t *LinkDetailParticipantCollectionViewCell.maxWidth.unsafeMutableAddressor()
{
  if (one-time initialization token for maxWidth != -1)
    swift_once();
  return &static LinkDetailParticipantCollectionViewCell.maxWidth;
}

double static LinkDetailParticipantCollectionViewCell.maxWidth.getter()
{
  if (one-time initialization token for maxWidth != -1)
    swift_once();
  return *(double *)&static LinkDetailParticipantCollectionViewCell.maxWidth;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth);
  if (v2 == 2)
  {
    swift_getObjectType();
    v3 = closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

BOOL closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  void *v7;
  uint64_t inited;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  double v15;
  Swift::String v17;

  v2 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  v17._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001BD690040;
  v3._countAndFlagsBits = 0xD000000000000012;
  v4.value._countAndFlagsBits = 0x61737265766E6F43;
  v4.value._object = (void *)0xEF74694B6E6F6974;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v17);

  v7 = (void *)MEMORY[0x1C3B72E00](v6._countAndFlagsBits, v6._object);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  v9 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v10 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 40) = v10;
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  v12 = v9;
  v13 = v10;
  v14 = Dictionary.init(dictionaryLiteral:)();
  v15 = outlined bridged method (mbnn) of @objc NSString.size(withAttributes:)(v14, v7);

  if (one-time initialization token for maxWidth != -1)
    swift_once();
  return *(double *)&static LinkDetailParticipantCollectionViewCell.maxWidth < v15;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7];
  v9 = v1
     + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration;
  swift_beginAccess();
  outlined init with copy of UIButton.Configuration?(v9, (uint64_t)v8);
  v10 = type metadata accessor for UIButton.Configuration();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, v8, v10);
  outlined destroy of Conversation?((uint64_t)v8, &demangling cache variable for type metadata for UIButton.Configuration?);
  closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter(v1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of UIButton.Configuration?((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t closure #1 in LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  uint64_t KeyPath;
  void *v19;
  id v20;
  id v21;
  uint64_t (*v22)(_BYTE *, _QWORD);
  uint64_t v24;
  void *v25;
  _BYTE v26[32];
  Swift::String v27;

  v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()();
  if ((LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter() & 1) != 0)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    @nonobjc UIImage.__allocating_init(systemName:)();
    UIButton.Configuration.image.setter();
    v10 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, *MEMORY[0x1E0DC4A88], 2);
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v27._object = (void *)0xE000000000000000;
    v12._object = (void *)0x80000001BD690040;
    v12._countAndFlagsBits = 0xD000000000000012;
    v13.value._countAndFlagsBits = 0x61737265766E6F43;
    v13.value._object = (void *)0xEF74694B6E6F6974;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v27);

    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    v15 = type metadata accessor for AttributedString();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v15);
    UIButton.Configuration.attributedTitle.setter();
    v16 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.attributedTitle.modify();
    if (!__swift_getEnumTagSinglePayload(v17, 1, v15))
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      swift_getKeyPath();
      v25 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont);
      v19 = v25;
      lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
      v20 = v19;
      AttributedString.subscript.setter();
    }
    v16(v26, 0);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DC3060], v2);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.contentInsets.setter();
  if (one-time initialization token for systemGreenWithUserInterfaceStyleLight != -1)
    swift_once();
  v21 = (id)static UIColor.systemGreenWithUserInterfaceStyleLight;
  v22 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  return v22(v26, 0);
}

id LinkDetailParticipantCollectionViewCell.imageView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView);
  }
  else
  {
    v4 = closure #1 in LinkDetailParticipantCollectionViewCell.imageView.getter();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id closure #1 in LinkDetailParticipantCollectionViewCell.imageView.getter()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_scale_, *MEMORY[0x1E0DC4B60], 2);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  v1 = v0;
  @nonobjc UIImage.__allocating_init(systemName:withConfiguration:)(0x69662E6F65646976, 0xEA00000000006C6CLL, v0);
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v2);
  v5 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  return v4;
}

uint64_t LinkDetailParticipantCollectionViewCell.styleAccessories.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  v1 = type metadata accessor for UICellAccessory.DisplayedState();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  if (v13 == 1)
  {
    v14 = LinkDetailParticipantCollectionViewCell.joinButtonExceedsMaxWidth.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    v15 = *(_QWORD *)(type metadata accessor for UICellAccessory() - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    if ((v14 & 1) != 0)
    {
      *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
      v19 = v18 + v17;
    }
    else
    {
      *(_OWORD *)(v18 + 16) = xmmword_1BD645380;
      LinkDetailParticipantCollectionViewCell.imageAccessory()(v18 + v17);
      v19 = v18 + v17 + v16;
    }
    LinkDetailParticipantCollectionViewCell.joinAccessory()(v19);
  }
  else
  {
    v20 = type metadata accessor for UICellAccessory.LayoutDimension();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v20);
    v21 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UICellAccessory>);
    type metadata accessor for UICellAccessory();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BD6441D0;
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DC1C20], v1);
    static UICellAccessory.disclosureIndicator(displayed:options:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v18;
}

uint64_t LinkDetailParticipantCollectionViewCell.joinAccessory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t (**v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellAccessory.Placement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (id *)(v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton);
  swift_beginAccess();
  v16 = *v15;
  LinkDetailParticipantCollectionViewCell.joinButtonConfiguration.getter((uint64_t)v14);
  v17 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v17);
  UIButton.configuration.setter();

  v18 = *v15;
  v19 = (uint64_t (**)())&v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                   + 48)];
  v20 = *MEMORY[0x1E0DC1C20];
  v21 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v8, v20, v21);
  *v19 = OUTLINED_FUNCTION_28_0;
  v19[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DC1D18], v5);
  v22 = *MEMORY[0x1E0DC1C48];
  v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v4, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v23);
  v24 = v18;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v27);
}

uint64_t LinkDetailParticipantCollectionViewCell.imageAccessory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (**v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UICellAccessory.Placement();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LinkDetailParticipantCollectionViewCell.imageView.getter();
  v12 = (uint64_t (**)(uint64_t))&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                                     + 48)];
  v13 = *MEMORY[0x1E0DC1C20];
  v14 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  *v12 = specialized NoticeQueueStore.count.getter;
  v12[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC1D10], v4);
  v15 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v15);
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id LinkDetailParticipantCollectionViewCell.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id LinkDetailParticipantCollectionViewCell.init(frame:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  objc_super *v13;
  SEL v14;

  v1 = v0;
  OUTLINED_FUNCTION_17_7();
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_QWORD *)v3 + 6) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController] = 0;
  v4 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton;
  v5 = (void *)objc_opt_self();
  v6 = v0;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_buttonWithType_, 1);
  result = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1420]);
  if (result)
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont] = result;
    v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth] = 2;
    v8 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration];
    v9 = type metadata accessor for UIButton.Configuration();
    OUTLINED_FUNCTION_77_0(v8, v10, v11, v9);
    *(_QWORD *)&v6[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView] = 0;

    v12 = OUTLINED_FUNCTION_15_0();
    return objc_msgSendSuper2(v13, v14, v12, v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id LinkDetailParticipantCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LinkDetailParticipantCollectionViewCell.init(coder:)()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_QWORD *)v1 + 6) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButton;
  *(_QWORD *)&v0[v2] = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4B10], *MEMORY[0x1E0DC1420]);
  if (!v3)
    __break(1u);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_joinButtonFont] = v3;
  v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonExceedsMaxWidth] = 2;
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___joinButtonConfiguration];
  v5 = type metadata accessor for UIButton.Configuration();
  OUTLINED_FUNCTION_77_0(v4, v6, v7, v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell____lazy_storage___imageView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall LinkDetailParticipantCollectionViewCell.prepareForReuse()()
{
  char *v0;
  void **v1;
  void *v2;
  _OWORD v3[3];
  uint64_t v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v5, sel_prepareForReuse);
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  LinkDetailParticipantCollectionViewCell.style.setter((uint64_t *)v3);
  v1 = (void **)&v0[OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController];
  OUTLINED_FUNCTION_2_0();
  v2 = *v1;
  *v1 = 0;

  UICollectionViewListCell.accessories.setter();
}

id LinkDetailParticipantCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ObjC metadata update function for LinkDetailParticipantCollectionViewCell()
{
  return type metadata accessor for LinkDetailParticipantCollectionViewCell();
}

uint64_t type metadata accessor for LinkDetailParticipantCollectionViewCell()
{
  uint64_t result;

  result = type metadata singleton initialization cache for LinkDetailParticipantCollectionViewCell;
  if (!type metadata singleton initialization cache for LinkDetailParticipantCollectionViewCell)
    return swift_getSingletonMetadata();
  return result;
}

void type metadata completion function for LinkDetailParticipantCollectionViewCell()
{
  unint64_t v0;

  type metadata accessor for UIButton.Configuration?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t destroy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1)
{
  unint64_t result;
  void *v3;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    v3 = *(void **)a1;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    v4 = *(void **)a2;
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = v6;
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    v10 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *((_QWORD *)a2 + 2);
  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      v9 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v10 = *a2;
    v11 = a2[1];
    v12 = a2[2];
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v5 = *(id *)a1;
  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v6;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    v8 = *(void **)a1;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LinkDetailParticipantCollectionViewCell.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

double destructiveInjectEnumTag for LinkDetailParticipantCollectionViewCell.Style(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkDetailParticipantCollectionViewCell.Style()
{
  return &type metadata for LinkDetailParticipantCollectionViewCell.Style;
}

uint64_t LinkDetailParticipantCollectionViewCell.avatarAccessory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void *v20;
  id v21;
  unint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v41;
  id v42;
  uint64_t (**v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v61 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UICellAccessory.LayoutDimension?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICellAccessory.Placement();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_style;
  swift_beginAccess();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 < 2)
    goto LABEL_9;
  v52 = v8;
  v53 = v12;
  v54 = v6;
  v55 = v5;
  v56 = v4;
  v57 = v10;
  v16 = *(void **)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v58 = v9;
  v59 = v15;
  v17 = *(_QWORD *)(v13 + 32);
  v60 = *(_QWORD *)(v13 + 24);
  v18 = *(_QWORD *)(v13 + 40);
  v19 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit39LinkDetailParticipantCollectionViewCell_avatarController);
  swift_beginAccess();
  v20 = *v19;
  if (!*v19)
    goto LABEL_9;
  v21 = v16;
  v22 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = objc_msgSend(v20, sel_view);
  v24 = v16;
  if (!v23)
  {
    outlined consume of LinkDetailParticipantCollectionViewCell.Style(v16, v59, v14);
LABEL_9:
    v37 = 1;
    v38 = v61;
    goto LABEL_10;
  }
  v48 = v23;
  v49 = v16;
  v50 = v17;
  v51 = v18;
  v25 = v21;
  v26 = v21;
  if (!v24)
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
  v27 = *v19;
  v28 = (uint64_t)v56;
  v30 = v52;
  v29 = v53;
  if (*v19)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BD6443F0;
    *(_QWORD *)(v31 + 32) = v26;
    v62 = v31;
    specialized Array._endMutation()();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for CNContact);
    v32 = v26;
    v33 = v25;
    v34 = v27;
    v35 = v26;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setContacts_, isa);

    v26 = v32;
  }
  else
  {
    v41 = v25;
  }
  v42 = v48;
  objc_msgSend(v48, sel_setFrame_, 0.0, 0.0, 37.0, 37.0, v48);
  v43 = (uint64_t (**)(uint64_t))&v30[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (displayed: UICellAccessory.DisplayedState, at: ()))
                                                      + 48)];
  v44 = *MEMORY[0x1E0DC1C20];
  v45 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v30, v44, v45);
  *v43 = specialized NoticeQueueStore.count.getter;
  v43[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v30, *MEMORY[0x1E0DC1D10], v55);
  v46 = type metadata accessor for UICellAccessory.LayoutDimension();
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v46);
  v47 = v42;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  v38 = v61;
  static UICellAccessory.customView(configuration:)();
  outlined consume of LinkDetailParticipantCollectionViewCell.Style(v49, v59, v22);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v58);
  v37 = 0;
LABEL_10:
  v39 = type metadata accessor for UICellAccessory();
  return __swift_storeEnumTagSinglePayload(v38, v37, 1, v39);
}

uint64_t sub_1BD4CD114()
{
  return 8;
}

uint64_t sub_1BD4CD120()
{
  return swift_release();
}

uint64_t sub_1BD4CD128(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD4CD13C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

double outlined bridged method (mbnn) of @objc NSString.size(withAttributes:)(uint64_t a1, void *a2)
{
  Class isa;
  double v4;
  double v5;

  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_sizeWithAttributes_, isa);
  v5 = v4;

  return v5;
}

uint64_t specialized Sequence.flatMap<A>(_:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_windows);
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIWindow);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      specialized Array.append<A>(contentsOf:)();
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UIAlertController.show()()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;

  v1 = UIAlertController.keyWindowScene.getter();
  v2 = objc_msgSend(v1, sel_keyWindow);

  if (v2)
  {
LABEL_4:
    v4 = objc_msgSend(v2, sel_rootViewController);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_presentViewController_animated_completion_, v0, 1, 0);

    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationKit);
      v7 = Logger.logObject.getter();
      v8 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)OUTLINED_FUNCTION_7_8();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1BD004000, v7, v8, "SERIOUS ERROR: Failed to find a viewcontroller to preset UIAlertController", v9, 2u);
        OUTLINED_FUNCTION_60();
      }

      lazy protocol witness table accessor for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError();
      OUTLINED_FUNCTION_10_8();
      OUTLINED_FUNCTION_4_51(v10, 0xD00000000000002CLL);

    }
    return;
  }
  v3 = UIAlertController.topLevelWindow.getter();
  if (v3)
  {
    v2 = (id)v3;
    goto LABEL_4;
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v11 = type metadata accessor for Logger();
  __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationKit);
  v12 = Logger.logObject.getter();
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_7_8();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1BD004000, v12, v13, "SERIOUS ERROR: Failed to find top window to preset UIAlertController", v14, 2u);
    OUTLINED_FUNCTION_60();
  }

  lazy protocol witness table accessor for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_4_51(v15, 0xD000000000000023);
}

unint64_t UIAlertController.FailedToFindWindowError.init()()
{
  return 0xD000000000000023;
}

void UIAlertController.FailedToFindVCError.message.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

unint64_t UIAlertController.FailedToFindVCError.init()()
{
  return 0xD00000000000002CLL;
}

uint64_t UIAlertController.alertWindow.getter()
{
  uint64_t v0;
  id v1;

  v0 = static UIAlertController.alertWindow;
  v1 = (id)static UIAlertController.alertWindow;
  return v0;
}

void key path setter for UIAlertController.alertWindow : UIAlertController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIAlertController.alertWindow.setter((uint64_t)v1);
}

void UIAlertController.alertWindow.setter(uint64_t a1)
{
  void *v1;

  v1 = (void *)static UIAlertController.alertWindow;
  static UIAlertController.alertWindow = a1;

}

void UIAlertController.alertWindow.modify(_QWORD *a1)
{
  void *v1;
  id v2;

  v1 = (void *)static UIAlertController.alertWindow;
  *a1 = static UIAlertController.alertWindow;
  v2 = v1;
  OUTLINED_FUNCTION_0();
}

void UIAlertController.alertWindow.modify(uint64_t *a1)
{
  uint64_t v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)static UIAlertController.alertWindow;
  static UIAlertController.alertWindow = v1;

}

void *UIAlertController.keyWindowScene.getter()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = UIApplication.connectedWindowScenes.getter();

  if (v1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_124();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3B73D18](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, sel__isKeyWindowScene))
      {
        type metadata accessor for ActivityScene();
        if (!swift_dynamicCastClass())
        {
          OUTLINED_FUNCTION_3_3();
          return v5;
        }
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_11;
    }
    __break(1u);
LABEL_15:
    OUTLINED_FUNCTION_124();
  }
LABEL_11:
  OUTLINED_FUNCTION_3_3();
  return 0;
}

uint64_t UIAlertController.topLevelWindow.getter()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v1 = UIApplication.connectedAppWindows.getter();

  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    v7 = OUTLINED_FUNCTION_124();
    specialized _copyCollectionToContiguousArray<A>(_:)(v7);
    v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_124();
  }
  v9 = v2;
  specialized MutableCollection<>.sort(by:)(&v9);
  swift_bridgeObjectRelease();
  v3 = v9;
  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    OUTLINED_FUNCTION_124();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v4)
      goto LABEL_10;
  }
  else
  {
    v4 = *(_QWORD *)(v9 + 16);
    if (!v4)
      goto LABEL_10;
  }
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) != 0)
    v5 = (id)MEMORY[0x1C3B73D18](0, v3);
  else
    v5 = *(id *)(v3 + 32);
  v4 = (uint64_t)v5;
LABEL_10:
  swift_release();
  return v4;
}

unint64_t lazy protocol witness table accessor for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError;
  if (!lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for UIAlertController.FailedToFindWindowError, &type metadata for UIAlertController.FailedToFindWindowError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIAlertController.FailedToFindWindowError and conformance UIAlertController.FailedToFindWindowError);
  }
  return result;
}

uint64_t UIApplication.connectedWindowScenes.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_connectedScenes);
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for UIScene);
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t UIApplication.connectedAppWindows.getter()
{
  unint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  result = UIApplication.connectedWindowScenes.getter();
  v1 = result;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!(result >> 62))
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    v7 = specialized Sequence.flatMap<A>(_:)(v6);
    swift_release();
    return v7;
  }
  result = _CocoaArrayWrapper.endIndex.getter();
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x1C3B73D18](i, v1);
      else
        v4 = *(id *)(v1 + 8 * i + 32);
      v5 = v4;
      type metadata accessor for ActivityScene();
      if (swift_dynamicCastClass())
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    v6 = v8;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError;
  if (!lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for UIAlertController.FailedToFindVCError, &type metadata for UIAlertController.FailedToFindVCError);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIAlertController.FailedToFindVCError and conformance UIAlertController.FailedToFindVCError);
  }
  return result;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **a1, id *a2, unint64_t a3, void **a4)
{
  id *v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  BOOL v13;
  void **v14;
  unint64_t v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  id *v20;
  BOOL v21;
  id *v24;
  id *v25;
  id *v26;
  unint64_t v27;
  id *v28;
  void *v29;
  id v30;
  id v31;
  char v32;
  BOOL v33;
  void **v34;
  BOOL v35;
  void **v38;
  id *v39;
  unint64_t v40;
  id *v41;

  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    specialized UnsafeMutablePointer.moveInitialize(from:count:)(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v38 = a4;
    v12 = &a4[v11];
    if (v7 >= v6 || v10 <= 7)
    {
LABEL_39:
      v14 = v38;
      goto LABEL_40;
    }
    type metadata accessor for UIWindowLevel(0);
    v24 = (id *)(a3 - 8);
    while (1)
    {
      v39 = v24 + 1;
      v41 = v6;
      v25 = v12 - 1;
      v26 = v6;
      v27 = (unint64_t)v12;
      v29 = *(v26 - 1);
      v28 = v26 - 1;
      v30 = *(v12 - 1);
      v31 = v29;
      objc_msgSend(v30, sel_windowLevel);
      objc_msgSend(v31, sel_windowLevel);
      lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel();
      v32 = dispatch thunk of static Comparable.< infix(_:_:)();

      if ((v32 & 1) != 0)
      {
        v33 = v39 != v41 || v24 >= v41;
        v34 = v38;
        v12 = (void **)v27;
        v6 = v28;
        if (!v33)
          goto LABEL_35;
      }
      else
      {
        v34 = v38;
        v35 = v39 != (id *)v27 || (unint64_t)v24 >= v27;
        v28 = v25;
        v12 = v25;
        v6 = v41;
        if (!v35)
          goto LABEL_35;
      }
      *v24 = *v28;
LABEL_35:
      --v24;
      if (v6 <= v7 || v12 <= v34)
        goto LABEL_39;
    }
  }
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(a1, a2 - a1, a4);
  v12 = &a4[v9];
  v13 = (unint64_t)v6 >= a3 || v8 <= 7;
  v14 = a4;
  if (!v13)
  {
    type metadata accessor for UIWindowLevel(0);
    v40 = a3;
    do
    {
      v15 = (unint64_t)v12;
      v16 = *v14;
      v17 = *v6;
      v18 = v16;
      objc_msgSend(v17, sel_windowLevel);
      objc_msgSend(v18, sel_windowLevel);
      lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel();
      v19 = dispatch thunk of static Comparable.< infix(_:_:)();

      if ((v19 & 1) != 0)
      {
        v20 = v6;
        v21 = v7 == v6++;
      }
      else
      {
        v20 = v14;
        v21 = v7 == v14++;
      }
      v12 = (void **)v15;
      if (!v21)
        *v7 = *v20;
      ++v7;
    }
    while ((unint64_t)v14 < v15 && (unint64_t)v6 < v40);
  }
  v6 = v7;
LABEL_40:
  specialized UnsafeMutablePointer.moveInitialize(from:count:)(v14, v12 - v14, v6);
  return 1;
}

uint64_t sub_1BD4CE990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UIAlertController.alertWindow.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for UIAlertController.FailedToFindWindowError()
{
  return &type metadata for UIAlertController.FailedToFindWindowError;
}

ValueMetadata *type metadata accessor for UIAlertController.FailedToFindVCError()
{
  return &type metadata for UIAlertController.FailedToFindVCError;
}

unint64_t lazy protocol witness table accessor for type UIWindowLevel and conformance UIWindowLevel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel;
  if (!lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel)
  {
    type metadata accessor for UIWindowLevel(255);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DC2AC8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIWindowLevel and conformance UIWindowLevel);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIScene and conformance NSObject()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UIScene and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIScene and conformance NSObject)
  {
    type metadata accessor for NSObject(255, &lazy cache variable for type metadata for UIScene);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIScene and conformance NSObject);
  }
  return result;
}

id InCallControlsSectionHeaderView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

char *InCallControlsSectionHeaderView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  double v5;
  objc_super *v6;
  SEL v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  Class isa;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  Class v31;

  OUTLINED_FUNCTION_17_7();
  v2 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v4 = v0;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_123((uint64_t)v4, sel_init);

  type metadata accessor for InCallControlsSectionHeaderView();
  v5 = OUTLINED_FUNCTION_15_0();
  v8 = (char *)objc_msgSendSuper2(v6, v7, v5);
  v9 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  v10 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel];
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC4AB8];
  v13 = v8;
  v14 = v10;
  v15 = objc_msgSend(v11, sel_preferredFontForTextStyle_, v12);
  isa = UIFont.withTraits(_:)(0x8000u).super.isa;

  objc_msgSend(v14, sel_setFont_, isa);
  v17 = one-time initialization token for collectionViewSectionHeaderTitleLabel;
  v18 = *(id *)&v8[v9];
  if (v17 != -1)
    swift_once();
  objc_msgSend(v18, sel_setTextColor_, static Colors.InCallControls.collectionViewSectionHeaderTitleLabel);

  v19 = *(void **)&v8[v9];
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_addSubview_, v19);
  v20 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BD644140;
  v22 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v19, sel_leadingAnchor), sel_leadingAnchor);
  v23 = OUTLINED_FUNCTION_1_21((uint64_t)v22, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v21 + 32) = v1;
  v24 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_trailingAnchor), sel_trailingAnchor);
  v25 = OUTLINED_FUNCTION_1_21((uint64_t)v24, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v21 + 40) = v1;
  v26 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v8[v9], sel_topAnchor), sel_topAnchor);
  v27 = OUTLINED_FUNCTION_1_21((uint64_t)v26, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_1_4();

  *(_QWORD *)(v21 + 48) = v1;
  v28 = objc_msgSend(*(id *)&v8[v9], sel_bottomAnchor);
  v29 = OUTLINED_FUNCTION_123((uint64_t)v28, sel_bottomAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, -4.0);

  *(_QWORD *)(v21 + 56) = v30;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  v31 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_activateConstraints_, v31);

  return v13;
}

uint64_t type metadata accessor for InCallControlsSectionHeaderView()
{
  return objc_opt_self();
}

id InCallControlsSectionHeaderView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InCallControlsSectionHeaderView.init(coder:)()
{
  char *v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall InCallControlsSectionHeaderView.configure(with:)(ConversationKit::InCallControlsActivitySectionHeaderViewModel with)
{
  uint64_t v1;

  outlined bridged method (mbgnn) of @objc UILabel.text.setter(with.title._countAndFlagsBits, (uint64_t)with.title._object, *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit31InCallControlsSectionHeaderView_titleLabel));
}

id InCallControlsSectionHeaderView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InCallControlsSectionHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for InCallControlsSectionHeaderView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InCallControlsSectionHeaderView.configure(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t NameAndPhotoUtilities.pendingIncomingName(from:)()
{
  void *v0;
  uint64_t v1;
  uint64_t ObjectType;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  os_log_type_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_65_5();
  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 960))() & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    v3 = (void *)OUTLINED_FUNCTION_58_37(ObjectType);
    if (v3)
    {
      v4 = objc_msgSend(v3, sel_value);
      OUTLINED_FUNCTION_18_14();
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v7 = v6;

      NameAndPhotoUtilities.allContactHandlesFromHandle(_:)(v5, v7);
      v8 = NameAndPhotoUtilities.pendingIncomingIMNickname(from:)();
      OUTLINED_FUNCTION_133();
      if (v8)
      {
        OUTLINED_FUNCTION_13_3();
        v1 = static NameAndPhotoUtilities.formattedDisplayName(for:)(v8);

        return v1;
      }
      if (one-time initialization token for nickname != -1)
        swift_once();
      v20 = OUTLINED_FUNCTION_17_2();
      v21 = (void *)__swift_project_value_buffer(v20, (uint64_t)&static Logger.nickname);
      OUTLINED_FUNCTION_124();
      Logger.logObject.getter();
      v22 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_4_14(v22))
      {
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_29_72(4.8149e-34);
        OUTLINED_FUNCTION_124();
        v23 = OUTLINED_FUNCTION_14_20();
        OUTLINED_FUNCTION_16_26(v23, v24, v25, v26, v27);
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_3_3();
        OUTLINED_FUNCTION_2_1();
        v19 = "Couldnt find a pending IMNickname for handle %s";
LABEL_16:
        OUTLINED_FUNCTION_3_23(&dword_1BD004000, v17, v18, v19);
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_3_3();
    }
    else
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v9 = OUTLINED_FUNCTION_17_2();
      v10 = (void *)__swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
      OUTLINED_FUNCTION_50_44();
      Logger.logObject.getter();
      v11 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_4_14(v11))
      {
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_29_72(4.8149e-34);
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
        v12 = OUTLINED_FUNCTION_14_20();
        OUTLINED_FUNCTION_16_26(v12, v13, v14, v15, v16);
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_97_0();
        OUTLINED_FUNCTION_2_1();
        v19 = "Couldnt find a pending IMNickname since cant find handle for call %s";
        goto LABEL_16;
      }

      OUTLINED_FUNCTION_97_0();
    }
    return 0;
  }
  return 0x6861726F4D206F52;
}

void NameAndPhotoUtilities.sendNameAndPhoto(using:)(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  os_log_type_t v3;
  NSObject *v4;
  uint64_t ObjectType;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v2;
  ObjectType = swift_getObjectType();
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_value);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NameAndPhotoUtilities.fromIDFromCall(_:)(a1, a2);
    if (v11)
    {
      if (one-time initialization token for nickname != -1)
        swift_once();
      v12 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_22_83(v12, (uint64_t)&static Logger.nickname);
      Logger.logObject.getter();
      v13 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_11(v13))
      {
        v14 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v14 = 136315138;
        OUTLINED_FUNCTION_124();
        v15 = OUTLINED_FUNCTION_229();
        OUTLINED_FUNCTION_225(v15, v16, v17, v18, v19, v20, v21);
        OUTLINED_FUNCTION_222();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_3_3();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v4, v3, "Sharing name and photo handle id %s", v14);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_3_3();
      OUTLINED_FUNCTION_88_0();
    }
    if (one-time initialization token for nickname != -1)
      swift_once();
    v22 = OUTLINED_FUNCTION_17_2();
    v23 = (void *)__swift_project_value_buffer(v22, (uint64_t)&static Logger.nickname);
    OUTLINED_FUNCTION_124();
    Logger.logObject.getter();
    v24 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v24))
    {
      v25 = (_DWORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_105();
      *v25 = 136315138;
      OUTLINED_FUNCTION_124();
      v26 = OUTLINED_FUNCTION_229();
      OUTLINED_FUNCTION_225(v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_33_65();
      OUTLINED_FUNCTION_3_3();
      OUTLINED_FUNCTION_25();
      OUTLINED_FUNCTION_3_23(&dword_1BD004000, v33, v34, "Cant share name and photo to handle id %s because of nil fromID");
      OUTLINED_FUNCTION_6_3();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_3_3();
  }
  OUTLINED_FUNCTION_0_20();
}

void NameAndPhotoUtilities.sendName(using:)(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t ObjectType;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  Class isa;
  void *v44;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = (void *)OUTLINED_FUNCTION_6_9(ObjectType, *(uint64_t (**)(uint64_t, uint64_t))(a2 + 72));
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_value);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = v11;

    v13 = NameAndPhotoUtilities.fromIDFromCall(_:)(a1, a2);
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      if (one-time initialization token for nickname != -1)
        swift_once();
      v17 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_22_83(v17, (uint64_t)&static Logger.nickname);
      Logger.logObject.getter();
      v18 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_11(v18))
      {
        v19 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v19 = 136315138;
        OUTLINED_FUNCTION_124();
        v20 = OUTLINED_FUNCTION_229();
        OUTLINED_FUNCTION_225(v20, v21, v22, v23, v24, v25, v26);
        OUTLINED_FUNCTION_222();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        OUTLINED_FUNCTION_3_3();
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v3, (os_log_type_t)v10, "Sharing only name to handle id %s", v19);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_3_3();
      v40 = *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
      if ((objc_msgSend(v40, sel_respondsToSelector_, sel_sendNameOnlyToHandleIDs_fromHandleID_) & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        v41 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v41 + 16) = xmmword_1BD6441D0;
        *(_QWORD *)(v41 + 32) = v10;
        *(_QWORD *)(v41 + 40) = v12;
        v42 = v40;
        isa = Array._bridgeToObjectiveC()().super.isa;
        v44 = (void *)MEMORY[0x1C3B72E00](v15, v16);
        objc_msgSend(v42, sel_sendNameOnlyToHandleIDs_fromHandleID_, isa, v44);
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_53();

      }
      else
      {
        OUTLINED_FUNCTION_53();
        OUTLINED_FUNCTION_13_3();
      }
    }
    else
    {
      if (one-time initialization token for nickname != -1)
        swift_once();
      v27 = OUTLINED_FUNCTION_17_2();
      v28 = (void *)__swift_project_value_buffer(v27, (uint64_t)&static Logger.nickname);
      OUTLINED_FUNCTION_124();
      Logger.logObject.getter();
      v29 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_4_14(v29))
      {
        v30 = (_DWORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *v30 = 136315138;
        OUTLINED_FUNCTION_124();
        v31 = OUTLINED_FUNCTION_229();
        OUTLINED_FUNCTION_225(v31, v32, v33, v34, v35, v36, v37);
        OUTLINED_FUNCTION_33_65();
        OUTLINED_FUNCTION_3_3();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_3_23(&dword_1BD004000, v38, v39, "Cant share name and photo to handle id %s because of nil fromID");
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_3_3();
    }
  }
  OUTLINED_FUNCTION_0_20();
}

void NameAndPhotoUtilities.acceptIncomingName(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  NSObject *v16;
  Class isa;
  id v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  os_log_type_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  os_log_type_t v80;
  uint8_t *v81;
  void *v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  id v119;
  id v120;
  id v121;
  os_log_type_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t v130;
  void *v131;
  id v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  NSObject *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v4 = v2;
  v192 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v7 = (void *)OUTLINED_FUNCTION_58_37(ObjectType);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_value);

    v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    v12 = v11;

    v13 = (void *)NameAndPhotoUtilities.allContactHandlesFromHandle(_:)((uint64_t)v10, v12);
    v14 = NameAndPhotoUtilities.pendingIncomingIMNickname(from:)();
    if (v14)
    {
      v184 = v14;
      OUTLINED_FUNCTION_13_3();
      v15 = *(void **)(v4 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
      v16 = MEMORY[0x1C3B72E00](v10, v12);
      isa = (Class)objc_msgSend((id)objc_opt_self(), sel_keysForNicknameHandling);
      if (!isa)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
        static Array._unconditionallyBridgeFromObjectiveC(_:)();
        isa = Array._bridgeToObjectiveC()().super.isa;
        OUTLINED_FUNCTION_53();
      }
      v18 = objc_msgSend(v15, sel_contactForDestinationId_keysToFetch_, v16, isa);

      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend(v19, sel_mutableCopy);
        _bridgeAnyObjectToAny(_:)();
        v21 = swift_unknownObjectRelease();
        OUTLINED_FUNCTION_59(v21, (unint64_t *)&lazy cache variable for type metadata for CNMutableContact);
        if (swift_dynamicCast())
        {
          v182 = v15;
          v22 = v191;
          v23 = objc_msgSend(v184, sel_firstName);
          if (!v23)
          {
            v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v23 = (id)MEMORY[0x1C3B72E00](v24);
            OUTLINED_FUNCTION_27();
          }
          objc_msgSend(v191, sel_setGivenName_, v23);

          v25 = objc_msgSend(v184, sel_lastName);
          v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v28 = v27;

          outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(v26, v28, v191);
          v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C973D0]), sel_init);
          objc_msgSend(v29, sel_updateContact_, v191);
          if (one-time initialization token for nickname != -1)
            swift_once();
          v30 = OUTLINED_FUNCTION_17_2();
          v31 = __swift_project_value_buffer(v30, (uint64_t)&static Logger.nickname);
          swift_bridgeObjectRetain_n();
          Logger.logObject.getter();
          v32 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_51_3(v32))
          {
            v175 = (uint64_t)v29;
            v33 = (uint8_t *)OUTLINED_FUNCTION_105();
            v191 = (void *)OUTLINED_FUNCTION_105();
            *(_DWORD *)v33 = 136315138;
            v188 = v12;
            OUTLINED_FUNCTION_8_8();
            v34 = String.init<A>(reflecting:)();
            v187 = (id)OUTLINED_FUNCTION_56_40(v34, v35, v36, v37, v38, v39, v40, v41, v168, (uint64_t)v19, v175, (uint64_t)v31, (uint64_t)v22, (uint64_t)v182);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            OUTLINED_FUNCTION_19_1();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v31, (os_log_type_t)v28, "Accepting incoming name from handle id %s", v33);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_19_1();
          v187 = 0;
          v92 = objc_msgSend(v182, sel_executeSaveRequest_error_, v29, &v187);
          v93 = v187;
          if (v92)
          {
            OUTLINED_FUNCTION_8_8();
            v94 = v93;
            NameAndPhotoUtilities.createIMHandle(with:)((uint64_t)v10, v12, v95, v96, v97, v98, v99, v100, v168, v171, v174, (uint64_t)v31, v179, (uint64_t)v182, (uint64_t)v184, v186, (uint64_t)v187, v188, v189,
              v190,
              (uint64_t)v191,
              v192,
              v193,
              v194);
            v102 = v101;
            OUTLINED_FUNCTION_2_1();
            if (v102)
            {
              OUTLINED_FUNCTION_2_1();
              v103 = objc_msgSend(*(id *)(v4+ OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_clearPendingNicknameUpdatesForHandle_, v102);
              OUTLINED_FUNCTION_25_68(v103, v104, v105, v106, v107, v108, v109, v110, v169, v172, v176, (uint64_t)v178, v180, (uint64_t)v183, v185);

            }
            else
            {
              OUTLINED_FUNCTION_8_8();
              v149 = v178;
              Logger.logObject.getter();
              v150 = OUTLINED_FUNCTION_232();
              if (OUTLINED_FUNCTION_51_3(v150))
              {
                v151 = (uint8_t *)OUTLINED_FUNCTION_105();
                v191 = (void *)OUTLINED_FUNCTION_105();
                *(_DWORD *)v151 = 136315138;
                v187 = v10;
                v188 = v12;
                OUTLINED_FUNCTION_8_8();
                v152 = OUTLINED_FUNCTION_39_64();
                v187 = (id)OUTLINED_FUNCTION_56_40(v152, v153, v154, v155, v156, v157, v158, v159, v169, v172, (uint64_t)v29, (uint64_t)v178, (uint64_t)v22, (uint64_t)v183);
                OUTLINED_FUNCTION_59_1();
                OUTLINED_FUNCTION_19_1();
                OUTLINED_FUNCTION_133();
                OUTLINED_FUNCTION_48(&dword_1BD004000, v149, (os_log_type_t)v28, "Failed to create IMHandle from handle %s", v151);
                OUTLINED_FUNCTION_21();
                OUTLINED_FUNCTION_60();
              }

              v160 = OUTLINED_FUNCTION_19_1();
              OUTLINED_FUNCTION_25_68(v160, v161, v162, v163, v164, v165, v166, v167, v169, v172, v176, (uint64_t)v178, v180, (uint64_t)v183, v185);

            }
          }
          else
          {
            v119 = v187;
            OUTLINED_FUNCTION_2_1();
            _convertNSErrorToError(_:)();
            OUTLINED_FUNCTION_18_14();
            swift_willThrow();
            v120 = v29;
            OUTLINED_FUNCTION_356_0();
            v121 = v120;
            OUTLINED_FUNCTION_356_0();
            Logger.logObject.getter();
            v122 = OUTLINED_FUNCTION_232();
            if (os_log_type_enabled(v31, v122))
            {
              v130 = OUTLINED_FUNCTION_105();
              v131 = (void *)OUTLINED_FUNCTION_105();
              v187 = v131;
              *(_DWORD *)v130 = 136315394;
              v191 = v121;
              OUTLINED_FUNCTION_59((uint64_t)v131, (unint64_t *)&lazy cache variable for type metadata for CNSaveRequest);
              v132 = v121;
              v133 = String.init<A>(reflecting:)();
              OUTLINED_FUNCTION_33_36(v133, v134, v135, v136, v137, v138, v139, v140, v168, v171);
              OUTLINED_FUNCTION_41_40();

              OUTLINED_FUNCTION_53();
              *(_WORD *)(v130 + 12) = 2080;
              v191 = v10;
              OUTLINED_FUNCTION_356_0();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
              v141 = OUTLINED_FUNCTION_44_52();
              OUTLINED_FUNCTION_33_36(v141, v142, v143, v144, v145, v146, v147, v148, v170, v173);
              OUTLINED_FUNCTION_41_40();
              OUTLINED_FUNCTION_53();
              OUTLINED_FUNCTION_10_9();
              OUTLINED_FUNCTION_10_9();
              _os_log_impl(&dword_1BD004000, v31, v122, "Failed to execute saveRequest %s error: %s", (uint8_t *)v130, 0x16u);
              OUTLINED_FUNCTION_42_53();
              OUTLINED_FUNCTION_60();
            }
            OUTLINED_FUNCTION_25_68(0, v123, v124, v125, v126, v127, v128, v129, v168, v171, v174, (uint64_t)v31, v179, (uint64_t)v182, v184);

            OUTLINED_FUNCTION_10_9();
            OUTLINED_FUNCTION_10_9();
            OUTLINED_FUNCTION_10_9();

          }
        }
        else
        {
          OUTLINED_FUNCTION_2_1();
          if (one-time initialization token for nickname != -1)
            swift_once();
          v78 = OUTLINED_FUNCTION_17_2();
          __swift_project_value_buffer(v78, (uint64_t)&static Logger.nickname);
          v79 = v19;
          Logger.logObject.getter();
          v80 = OUTLINED_FUNCTION_37_4();
          if (os_log_type_enabled(v20, v80))
          {
            v81 = (uint8_t *)OUTLINED_FUNCTION_105();
            v82 = (void *)OUTLINED_FUNCTION_105();
            v187 = v82;
            *(_DWORD *)v81 = 136315138;
            v191 = v79;
            OUTLINED_FUNCTION_59((uint64_t)v82, (unint64_t *)&lazy cache variable for type metadata for CNContact);
            v83 = v79;
            v84 = String.init<A>(reflecting:)();
            OUTLINED_FUNCTION_33_36(v84, v85, v86, v87, v88, v89, v90, v91, v168, v171);
            OUTLINED_FUNCTION_34_48();

            OUTLINED_FUNCTION_25();
            OUTLINED_FUNCTION_48(&dword_1BD004000, v20, v80, "Failed to create mutableContact for contact %s", v81);
            OUTLINED_FUNCTION_21();
            OUTLINED_FUNCTION_60();
          }

          OUTLINED_FUNCTION_25_68(v111, v112, v113, v114, v115, v116, v117, v118, v168, v171, v174, v177, v179, (uint64_t)v181, v184);
        }
      }
      else
      {
        if (one-time initialization token for nickname != -1)
          swift_once();
        v67 = OUTLINED_FUNCTION_17_2();
        __swift_project_value_buffer(v67, (uint64_t)&static Logger.nickname);
        OUTLINED_FUNCTION_8_8();
        Logger.logObject.getter();
        v68 = OUTLINED_FUNCTION_37_4();
        if (OUTLINED_FUNCTION_22_8(v68))
        {
          v69 = (uint8_t *)OUTLINED_FUNCTION_105();
          v191 = (void *)OUTLINED_FUNCTION_105();
          *(_DWORD *)v69 = 136315138;
          v188 = v12;
          OUTLINED_FUNCTION_8_8();
          v70 = OUTLINED_FUNCTION_39_64();
          v187 = (id)OUTLINED_FUNCTION_56_40(v70, v71, v72, v73, v74, v75, v76, v77, v168, v171, v174, v177, v179, (uint64_t)v181);
          OUTLINED_FUNCTION_59_1();
          OUTLINED_FUNCTION_19_1();
          OUTLINED_FUNCTION_133();
          OUTLINED_FUNCTION_48(&dword_1BD004000, v16, OS_LOG_TYPE_DEFAULT, "Cannot accept incoming name because couldnt find a contact for handle %s", v69);
          OUTLINED_FUNCTION_6_3();
          OUTLINED_FUNCTION_60();
        }

        OUTLINED_FUNCTION_19_1();
      }
    }
    else
    {
      OUTLINED_FUNCTION_2_1();
      if (one-time initialization token for nickname != -1)
        swift_once();
      v55 = OUTLINED_FUNCTION_17_2();
      v56 = __swift_project_value_buffer(v55, (uint64_t)&static Logger.nickname);
      OUTLINED_FUNCTION_124();
      Logger.logObject.getter();
      v57 = OUTLINED_FUNCTION_232();
      if (OUTLINED_FUNCTION_51_3(v57))
      {
        v58 = (uint8_t *)OUTLINED_FUNCTION_105();
        v187 = (id)OUTLINED_FUNCTION_105();
        *(_DWORD *)v58 = 136315138;
        v191 = v13;
        OUTLINED_FUNCTION_124();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
        v59 = OUTLINED_FUNCTION_44_52();
        OUTLINED_FUNCTION_33_36(v59, v60, v61, v62, v63, v64, v65, v66, v168, v171);
        OUTLINED_FUNCTION_34_48();
        OUTLINED_FUNCTION_3_3();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v56, v3, "Cannot accept incoming name because couldnt find a pending IMNickname for handle %s", v58);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_3_3();
    }
  }
  else
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v42 = OUTLINED_FUNCTION_17_2();
    v43 = (void *)__swift_project_value_buffer(v42, (uint64_t)&static Logger.nickname);
    OUTLINED_FUNCTION_50_44();
    Logger.logObject.getter();
    v44 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_4_14(v44))
    {
      OUTLINED_FUNCTION_105();
      v191 = (void *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_29_72(4.8149e-34);
      v188 = a2;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Call);
      v45 = OUTLINED_FUNCTION_39_64();
      v187 = (id)OUTLINED_FUNCTION_56_40(v45, v46, v47, v48, v49, v50, v51, v52, v168, v171, v174, v177, v179, (uint64_t)v181);
      OUTLINED_FUNCTION_59_1();
      OUTLINED_FUNCTION_97_0();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_3_23(&dword_1BD004000, v53, v54, "Cannot accept incoming name because failed to find handle for activeCall %s");
      OUTLINED_FUNCTION_6_3();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_97_0();
  }
}

uint64_t static NameAndPhotoUtilities.formattedDisplayName(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  Class isa;
  id v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PersonNameComponents?);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v5 = v4 - v3;
  v6 = type metadata accessor for PersonNameComponents();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_77();
  v10 = v9 - v8;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(a1, sel_firstName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v13 = objc_msgSend(a1, sel_lastName);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)();
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v15 = objc_msgSend(v11, sel_localizedStringFromPersonNameComponents_style_options_, isa, 2, 0);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v16;
}

void NameAndPhotoUtilities.denyIncomingName(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_127();
  v0 = OUTLINED_FUNCTION_14_8();
  specialized NameAndPhotoUtilities.denyIncomingName(from:)(v0, v1, v2, v3);
}

void NameAndPhotoUtilities.denySendingNameAndPhoto(using:)()
{
  OUTLINED_FUNCTION_4_127();
  OUTLINED_FUNCTION_14_8();
  specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)();
}

uint64_t NameAndPhotoUtilities.pendingOrCurrentIMNickname(from:)(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (a2)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_88_0();
  }
  if (one-time initialization token for nickname != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v3, (uint64_t)&static Logger.nickname);
  v4 = OUTLINED_FUNCTION_37_4();
  if (os_log_type_enabled(v2, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_105();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v2, v4, "Could not handle id is nil so unable to get imnicknames", v5, 2u);
    OUTLINED_FUNCTION_60();
  }

  return 0;
}

id NameAndPhotoUtilities.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static NameAndPhotoUtilities.shared.getter()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return (id)static NameAndPhotoUtilities.shared;
}

uint64_t closure #1 in static NameAndPhotoUtilities.prewarm()()
{
  uint64_t result;

  if (one-time initialization token for shared != -1)
    return swift_once();
  return result;
}

void one-time initialization function for secondsDelayBeforeShowingNameAndPhotoBanner()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner = (*(double (**)(void))(*(_QWORD *)static Defaults.shared
                                                                                                 + 824))();
}

double static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner.getter()
{
  if (one-time initialization token for secondsDelayBeforeShowingNameAndPhotoBanner != -1)
    swift_once();
  return *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
}

void NameAndPhotoUtilities.personalNickname.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

id key path getter for NameAndPhotoUtilities.personalNickname : NameAndPhotoUtilities@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for NameAndPhotoUtilities.personalNickname : NameAndPhotoUtilities(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  NameAndPhotoUtilities.personalNickname.setter(v1);
}

void NameAndPhotoUtilities.personalNickname.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  NameAndPhotoUtilities.personalNickname.didset(v4);

  OUTLINED_FUNCTION_9_0();
}

uint64_t NameAndPhotoUtilities.personalNickname.didset(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags();
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in NameAndPhotoUtilities.personalNickname.didset;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_18_2;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  v14 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags], MEMORY[0x1E0DEAF38]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t closure #1 in NameAndPhotoUtilities.personalNickname.didset(void *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void **v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t ObjectType;
  id v25;
  void (*v26)(uint64_t, id, uint64_t, uint64_t);
  id v27;
  uint64_t v28[3];

  if (one-time initialization token for nickname != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.nickname);
  v5 = a1;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v28[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = (void **)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
    swift_beginAccess();
    v11 = *v10;
    if (*v10)
    {
      type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMNickname);
      v12 = v11;
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
    }
    else
    {
      v15 = 0xE300000000000000;
      v13 = 7104878;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v6, v7, "Updated personalNickname to %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v9, -1, -1);
    MEMORY[0x1C3B751B8](v8, -1, -1);

  }
  else
  {

  }
  v16 = (id *)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
  swift_beginAccess();
  v17 = *v16;
  v18 = *v16;
  NameAndPhotoUtilities.updatePersonalDisplayName(using:)(v17);

  v19 = *v16;
  v20 = *v16;
  NameAndPhotoUtilities.updatePersonalAvatarView(using:)(v19);

  v21 = &v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate];
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v21);
  if (result)
  {
    v23 = *((_QWORD *)v21 + 1);
    ObjectType = swift_getObjectType();
    v25 = *v16;
    v26 = *(void (**)(uint64_t, id, uint64_t, uint64_t))(v23 + 8);
    v27 = v25;
    v26(a2, v25, ObjectType, v23);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t NameAndPhotoUtilities.updatePersonalDisplayName(using:)(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  if (a1)
  {
    v2 = a1;
    v3 = static NameAndPhotoUtilities.formattedDisplayName(for:)(v2);
    v5 = v4;

    v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
    swift_beginAccess();
    *v6 = v3;
    v6[1] = v5;
  }
  else
  {
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
    swift_beginAccess();
    *v7 = 0;
    v7[1] = 0;
  }
  return swift_bridgeObjectRelease();
}

void NameAndPhotoUtilities.updatePersonalAvatarView(using:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  void **v16;
  void *v17;
  void **v18;

  v2 = v1;
  if (!a1)
    goto LABEL_5;
  v3 = a1;
  v4 = objc_msgSend(v3, sel_avatar);
  if (!v4)
  {

LABEL_5:
    v18 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
    swift_beginAccess();
    v17 = *v18;
    *v18 = 0;
    goto LABEL_6;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_imageData);

  v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = v8;

  v10 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v10, sel_scale);
  v12 = v11;

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  outlined copy of Data._Representation(v7, v9);
  v13 = UIImage.__allocating_init(data:scale:)(v7, v9, v12);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v13);
  v15 = objc_msgSend(v14, sel_layer);
  objc_msgSend(v15, sel_setMasksToBounds_, 1);

  outlined consume of Data._Representation(v7, v9);
  v16 = (void **)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
  swift_beginAccess();
  v17 = *v16;
  *v16 = v14;
LABEL_6:

}

void NameAndPhotoUtilities.personalNickname.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  OUTLINED_FUNCTION_18();
}

void NameAndPhotoUtilities.personalNickname.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    NameAndPhotoUtilities.personalNickname.setter(v3);

  }
  else
  {
    NameAndPhotoUtilities.personalNickname.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t key path getter for NameAndPhotoUtilities.delegate : NameAndPhotoUtilities@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t key path setter for NameAndPhotoUtilities.delegate : NameAndPhotoUtilities(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

void NameAndPhotoUtilities.delegate.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1_7();
  MEMORY[0x1C3B752C0](v0);
  OUTLINED_FUNCTION_32();
}

void NameAndPhotoUtilities.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_9_0();
}

void NameAndPhotoUtilities.delegate.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_2_0();
  v6 = MEMORY[0x1C3B752C0](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  OUTLINED_FUNCTION_18();
}

void NameAndPhotoUtilities.personalDisplayName.getter()
{
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_32();
}

void NameAndPhotoUtilities.personalDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName);
  OUTLINED_FUNCTION_2_0();
  *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void NameAndPhotoUtilities.personalDisplayName.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void NameAndPhotoUtilities.personalAvatarView.getter()
{
  id *v0;
  id v1;

  OUTLINED_FUNCTION_1_7();
  v1 = *v0;
  OUTLINED_FUNCTION_32();
}

void NameAndPhotoUtilities.personalAvatarView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;

}

void NameAndPhotoUtilities.personalAvatarView.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id NameAndPhotoUtilities.fromIDFromCall(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v18;
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  ObjectType = swift_getObjectType();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 160);
  v5 = (void *)v4(ObjectType, a2);
  v6 = objc_msgSend(v5, sel_isFaceTimeProvider);

  if (!v6)
  {
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 256))(ObjectType, a2);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_handle);

      if (v12)
      {
        v13 = objc_msgSend(v12, sel_value);

        goto LABEL_14;
      }
    }
    v14 = (void *)v4(ObjectType, a2);
    v15 = objc_msgSend(v14, sel_prioritizedSenderIdentities);

    v16 = objc_msgSend(v15, sel_firstObject);
    if (v16)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v19, 0, sizeof(v19));
    }
    _sypSgWObTm_0((uint64_t)v19, (uint64_t)v20, &demangling cache variable for type metadata for Any?);
    if (v21)
    {
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUSenderIdentity);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = objc_msgSend(v18, sel_handle);

        if (!v8)
          return v8;
        v13 = objc_msgSend(v8, sel_value);

LABEL_14:
        v8 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v8;
      }
    }
    else
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for Any?);
    }
    return 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_facetimeService);
  v8 = (id)IMPreferredAccountForService();

  if (v8)
  {
    outlined bridged method (ob) of @objc IMAccount.displayName.getter(v8);
    return (id)v9;
  }
  return v8;
}

id NameAndPhotoUtilities.init()()
{
  char *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v27;
  uint64_t v28;

  v1 = (objc_class *)OUTLINED_FUNCTION_15_6();
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = &v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalDisplayName];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalAvatarView] = 0;
  v3 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider;
  v4 = objc_allocWithZone(MEMORY[0x1E0D358B0]);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController;
  *(_QWORD *)&v5[v6] = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore;
  v8 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedInstance), sel_contactStore);
  OUTLINED_FUNCTION_4_39();
  *(_QWORD *)&v5[v7] = &stru_1E766FFF8.name;
  v9 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_pendingNicknameFetchKeys;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441C0;
  v11 = (void *)*MEMORY[0x1E0C967C0];
  v12 = (void *)*MEMORY[0x1E0C966A8];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x1E0C967C0];
  *(_QWORD *)(v10 + 40) = v12;
  v28 = v10;
  specialized Array._endMutation()();
  *(_QWORD *)&v5[v9] = v28;
  v13 = &v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds] = MEMORY[0x1E0DEE9D8];
  v14 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_idsLookupManager;
  objc_opt_self();
  v15 = v11;
  *(_QWORD *)&v5[v14] = OUTLINED_FUNCTION_25_1((uint64_t)v12, sel_sharedManager);

  v27.receiver = v5;
  v27.super_class = v1;
  v16 = objc_msgSendSuper2(&v27, sel_init);
  objc_opt_self();
  v17 = v16;
  v18 = OUTLINED_FUNCTION_25_1((uint64_t)v17, sel_defaultCenter);
  OUTLINED_FUNCTION_54_40(v18, v19, v20, (uint64_t)sel_handleIdsStatusChanged, *MEMORY[0x1E0DBD648]);

  v22 = OUTLINED_FUNCTION_25_1(v21, sel_defaultCenter);
  OUTLINED_FUNCTION_54_40(v22, v23, v24, (uint64_t)sel_handlePersonalNicknameChanged_, *MEMORY[0x1E0D35610]);

  v25 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)((uint64_t)v17, v25);

  return v17;
}

Swift::Void __swiftcall NameAndPhotoUtilities.getOrFetchPersonalNickName()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15();
  swift_unknownObjectWeakInit();
  specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)(v0, v1);
}

void closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    NameAndPhotoUtilities.personalNickname.setter(a1);

  }
}

uint64_t specialized NameAndPhotoUtilities.getOrFetchPersonalNickname(completion:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock[6];

  v4 = (void *)objc_opt_self();
  swift_retain();
  v5 = objc_msgSend(v4, sel_sharedController);
  v6 = *MEMORY[0x1E0DBD438];
  v7 = objc_msgSend(v5, sel_hasListenerForID_, *MEMORY[0x1E0DBD438]);

  if ((v7 & 1) == 0)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.nickname);
    v9 = Logger.logObject.getter();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      aBlock[0] = v12;
      v32 = a1;
      *(_DWORD *)v11 = 136315138;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v9, v10, "Adding addListenerID: %s to IMDaemonController", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v12, -1, -1);
      MEMORY[0x1C3B751B8](v11, -1, -1);
    }

    v15 = objc_msgSend(v4, sel_sharedController);
    objc_msgSend(v15, sel_addListenerID_capabilities_, v6, *MEMORY[0x1E0D36CB8]);

  }
  v16 = *(void **)(a1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
  v17 = objc_msgSend(v16, sel_personalNickname, v32, v33, aBlock[0]);
  if (v17)
  {
    v18 = v17;
    if (one-time initialization token for nickname != -1)
      swift_once();
    v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)&static Logger.nickname);
    v20 = v18;
    v21 = Logger.logObject.getter();
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      aBlock[0] = (uint64_t)v20;
      v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v24 = v18;

      _os_log_impl(&dword_1BD004000, v21, v22, "Reading the personal nick name from cache %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v24, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);
    }
    else
    {

      v21 = v20;
    }

    swift_beginAccess();
    v28 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v28)
    {
      v29 = v28;
      v30 = v20;
      NameAndPhotoUtilities.personalNickname.setter(v18);
      swift_release();

      v20 = v29;
    }
    else
    {
      swift_release();
    }

  }
  else
  {
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = partial apply for closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName();
    *(_QWORD *)(v26 + 24) = a2;
    aBlock[4] = (uint64_t)partial apply for closure #1 in PersonalNicknameMenuView.getPersonalNickname(completion:);
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = (uint64_t)&block_descriptor_12_3;
    v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_fetchPersonalNicknameWithCompletion_, v27);
    _Block_release(v27);
    swift_release();
  }
  return swift_release();
}

void NameAndPhotoUtilities.suggestedBannerType(for:)(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t, uint64_t)@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[2];
  unsigned __int8 v16;

  v4 = v3;
  if (one-time initialization token for shared != -1)
    swift_once();
  v8 = static Features.shared;
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static Features.shared) + 0xB8))() & 1) == 0)
    goto LABEL_15;
  if (!a1)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v11, (uint64_t)&static Logger.nickname);
    v12 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_5_3(v12))
    {
      *(_WORD *)OUTLINED_FUNCTION_105() = 0;
      OUTLINED_FUNCTION_2_5(&dword_1BD004000, v13, v14, "Not showing Name+Photo banner because not tracking active call");
      OUTLINED_FUNCTION_60();
    }

    goto LABEL_15;
  }
  v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus);
  *v9 = a1;
  v9[1] = (uint64_t)a2;
  OUTLINED_FUNCTION_50_44();
  OUTLINED_FUNCTION_10();
  v10 = NameAndPhotoUtilities.beginCheckForShouldShowOutgoingShareBanner(forCall:)(a1, (uint64_t)a2);
  if (v10 == 2)
  {
    OUTLINED_FUNCTION_49_49();
    swift_unknownObjectRelease();
    return;
  }
  NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)(a1, a2, v10 & 1, (uint64_t)v15);
  OUTLINED_FUNCTION_113();
  if (v16 == 255)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v15, &demangling cache variable for type metadata for ConversationControlsType?);
LABEL_15:
    OUTLINED_FUNCTION_49_49();
    goto LABEL_16;
  }
  outlined init with take of ConversationControlsType(v15, a3);
LABEL_16:
  OUTLINED_FUNCTION_26_11();
}

uint64_t NameAndPhotoUtilities.beginCheckForShouldShowOutgoingShareBanner(forCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;

  result = NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(a1, a2);
  if (result == 2)
  {
    swift_bridgeObjectRetain();
    v3 = NameAndPhotoUtilities.beginQueryIsShareNameAndPhotoAvailable(forDestination:)();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

void NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t, uint64_t)@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;

  if ((a3 & 1) != 0)
  {
    NameAndPhotoUtilities.areAllRemoteParticipantsContacts(for:)(a1, a2);
    v7 = 13;
    if ((v6 & 1) == 0)
      v7 = 14;
    v18 = v7;
    v19 = 0u;
    v20 = 0u;
    v21 = 6;
    _sypSgWObTm_0((uint64_t)&v18, a4, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  else
  {
    v8 = (void *)OUTLINED_FUNCTION_15_6();
    v9 = OUTLINED_FUNCTION_6_9((uint64_t)v8, a2[21]);
    v10 = specialized Set.count.getter(v9);
    swift_bridgeObjectRelease();
    if (v10 != 1)
      goto LABEL_11;
    v11 = OUTLINED_FUNCTION_6_9((uint64_t)v8, a2[9]);
    v12 = v11;
    if (v11)
    {
      v13 = OUTLINED_FUNCTION_25_1(v11, sel_value);
      OUTLINED_FUNCTION_18_14();
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v15 = v14;

    }
    else
    {
      v15 = 0;
    }
    v16 = NameAndPhotoUtilities.shouldShowIncomingShareBanner(from:)(v12, v15);
    OUTLINED_FUNCTION_53();
    if ((v16 & 1) != 0)
    {
      *(_QWORD *)a4 = 20;
      *(_OWORD *)(a4 + 8) = 0u;
      *(_OWORD *)(a4 + 24) = 0u;
      v17 = 6;
    }
    else
    {
LABEL_11:
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      v17 = -1;
    }
    *(_BYTE *)(a4 + 40) = v17;
  }
}

uint64_t NameAndPhotoUtilities.shouldShowIncomingShareBanner(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t var58[13];

  if (one-time initialization token for shared != -1)
    swift_once();
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 960))() & 1) != 0)
    return 1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    NameAndPhotoUtilities.createIMHandle(with:)(a1, a2, v5, v6, v7, v8, v9, v10, v31, v32, v33, var58[0], var58[1], var58[2], var58[3], var58[4], var58[5], var58[6], var58[7],
      var58[8],
      var58[9],
      var58[10],
      var58[11],
      var58[12]);
    if (v11)
    {
      v12 = v11;
      swift_bridgeObjectRelease();
      v13 = (unint64_t)objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_nicknameUpdateForHandle_nicknameIfAvailable_, v12, 0);
      v14 = v13;
      a2 = (v13 >> 1) & 1;
      if (one-time initialization token for nickname != -1)
        swift_once();
      v15 = type metadata accessor for Logger();
      __swift_project_value_buffer(v15, (uint64_t)&static Logger.nickname);
      v16 = Logger.logObject.getter();
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = v14 & 2;
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v32 = v20;
        *(_DWORD *)v19 = 136315394;
        LOBYTE(var58[0]) = v18 >> 1;
        v21 = String.init<A>(reflecting:)();
        var58[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 1024;
        LODWORD(var58[0]) = v18 >> 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl(&dword_1BD004000, v16, v17, "shouldShowIncomingShareBanner=%s because nicknameUpdate.contains(.nameUpdate): %{BOOL}d", (uint8_t *)v19, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v20, -1, -1);
        MEMORY[0x1C3B751B8](v19, -1, -1);
      }

    }
    else
    {
      if (one-time initialization token for nickname != -1)
        swift_once();
      v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)&static Logger.nickname);
      swift_bridgeObjectRetain();
      v24 = Logger.logObject.getter();
      v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v33 = a2;
        var58[0] = v27;
        *(_DWORD *)v26 = 136315138;
        swift_bridgeObjectRetain();
        v28 = String.init<A>(reflecting:)();
        v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v29, var58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v24, v25, "Cant determine if we should show incoming share banner for handle %s because failed to create IMHandle", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v27, -1, -1);
        MEMORY[0x1C3B751B8](v26, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  return a2;
}

void NameAndPhotoUtilities.areAllRemoteParticipantsContacts(for:)(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  Class isa;
  id v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;

  ObjectType = swift_getObjectType();
  v4 = a2[21];
  v5 = v4(ObjectType, (uint64_t)a2);
  v6 = specialized Set.count.getter(v5);
  swift_bridgeObjectRelease();
  if (v6 != 1)
  {
    v7 = (void *)a2[20](ObjectType, (uint64_t)a2);
    v8 = objc_msgSend(v7, sel_isTelephonyProvider);

    if (!v8)
    {
      v9 = v4(ObjectType, (uint64_t)a2);
      v10 = v9;
      if ((v9 & 0xC000000000000001) != 0)
      {
        __CocoaSet.makeIterator()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
        lazy protocol witness table accessor for type TUHandle and conformance NSObject();
        Set.Iterator.init(_cocoa:)();
        v10 = v34;
        v31 = v35;
        v11 = v36;
        v12 = v37;
        v13 = v38;
      }
      else
      {
        v12 = 0;
        v14 = -1 << *(_BYTE *)(v9 + 32);
        v31 = v9 + 56;
        v11 = ~v14;
        v15 = -v14;
        if (v15 < 64)
          v16 = ~(-1 << v15);
        else
          v16 = -1;
        v13 = v16 & *(_QWORD *)(v9 + 56);
      }
      v30 = (unint64_t)(v11 + 64) >> 6;
      while (1)
      {
        v17 = v12;
        if (v10 < 0)
        {
          if (!__CocoaSet.Iterator.next()())
            goto LABEL_39;
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v20 = v33;
          swift_unknownObjectRelease();
          if (!v33)
            goto LABEL_39;
        }
        else
        {
          if (v13)
          {
            v18 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
            v19 = v18 | (v12 << 6);
          }
          else
          {
            v21 = v12 + 1;
            if (__OFADD__(v12, 1))
            {
              __break(1u);
              return;
            }
            if (v21 >= v30)
              goto LABEL_39;
            v22 = *(_QWORD *)(v31 + 8 * v21);
            ++v12;
            if (!v22)
            {
              v12 = v17 + 2;
              if (v17 + 2 >= v30)
                goto LABEL_39;
              v22 = *(_QWORD *)(v31 + 8 * v12);
              if (!v22)
              {
                v12 = v17 + 3;
                if (v17 + 3 >= v30)
                  goto LABEL_39;
                v22 = *(_QWORD *)(v31 + 8 * v12);
                if (!v22)
                {
                  v12 = v17 + 4;
                  if (v17 + 4 >= v30)
                    goto LABEL_39;
                  v22 = *(_QWORD *)(v31 + 8 * v12);
                  if (!v22)
                  {
                    v23 = v17 + 5;
                    while (v23 < v30)
                    {
                      v22 = *(_QWORD *)(v31 + 8 * v23++);
                      if (v22)
                      {
                        v12 = v23 - 1;
                        goto LABEL_31;
                      }
                    }
LABEL_39:
                    outlined consume of [String : Application].Iterator._Variant();
                    return;
                  }
                }
              }
            }
LABEL_31:
            v13 = (v22 - 1) & v22;
            v19 = __clz(__rbit64(v22)) + (v12 << 6);
          }
          v20 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v19);
          if (!v20)
            goto LABEL_39;
        }
        v24 = v10;
        v25 = *(void **)(v32 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
        v26 = objc_msgSend(v20, sel_value);
        if (!v26)
        {
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v26 = (id)MEMORY[0x1C3B72E00](v27);
          swift_bridgeObjectRelease();
        }
        isa = (Class)objc_msgSend((id)objc_opt_self(), sel_keysForNicknameHandling);
        if (!isa)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        v29 = objc_msgSend(v25, sel_contactForDestinationId_keysToFetch_, v26, isa);

        v10 = v24;
        if (!v29)
        {
          outlined consume of [String : Application].Iterator._Variant();
          return;
        }
      }
    }
  }
  if (a2[33](ObjectType, (uint64_t)a2))
    swift_bridgeObjectRelease();
}

Swift::Void __swiftcall NameAndPhotoUtilities.handleIdsStatusChanged()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, __int128 *, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18[2];
  unsigned __int8 v19;
  _OWORD v20[3];

  v1 = v0;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_3(v2, (uint64_t)&static Logger.conversationControls);
  v3 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_5_3(v3))
  {
    *(_WORD *)OUTLINED_FUNCTION_105() = 0;
    OUTLINED_FUNCTION_2_5(&dword_1BD004000, v4, v5, "Recieved ids status changed call");
    OUTLINED_FUNCTION_60();
  }

  v6 = OUTLINED_FUNCTION_8_8();
  v7 = NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)((Swift::OpaquePointer)v6);
  OUTLINED_FUNCTION_2_1();
  if (v7)
  {
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus];
    if (v8)
    {
      v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_queriedCallForSNAPStatus + 8];
      ObjectType = swift_getObjectType();
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 88);
      swift_unknownObjectRetain();
      if ((v11(ObjectType, v9) & 1) != 0)
      {
        v12 = NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(v8, v9);
        NameAndPhotoUtilities.checkBannerType(forCall:shouldShowOutgoingShareBanner:)(v8, (uint64_t (**)(uint64_t, uint64_t))v9, (v12 == 2) | v12 & 1, (uint64_t)v18);
        if (v19 == 255)
        {
          OUTLINED_FUNCTION_113();
          outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, &demangling cache variable for type metadata for ConversationControlsType?);
        }
        else
        {
          outlined init with take of ConversationControlsType(v18, v20);
          v13 = &v1[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate];
          OUTLINED_FUNCTION_2_0();
          if (MEMORY[0x1C3B752C0](v13))
          {
            v14 = *((_QWORD *)v13 + 1);
            v15 = swift_getObjectType();
            outlined init with copy of ConversationControlsType((uint64_t)v20, (uint64_t)v18);
            v16 = *(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v14 + 16);
            v17 = OUTLINED_FUNCTION_124();
            v16(v17, v18, v15, v14);
            OUTLINED_FUNCTION_113();
            OUTLINED_FUNCTION_10();
            OUTLINED_FUNCTION_13_3();
            outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v18, &demangling cache variable for type metadata for ConversationControlsType?);
          }
          else
          {
            OUTLINED_FUNCTION_113();
          }
          outlined destroy of ConversationControlsType((uint64_t)v20);
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

Swift::Bool __swiftcall NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)(Swift::OpaquePointer forDestinations)
{
  Class isa;
  unsigned __int8 v2;
  unsigned __int8 v3;
  Class v4;

  isa = Array._bridgeToObjectiveC()().super.isa;
  v2 = OUTLINED_FUNCTION_4_24((uint64_t)isa, sel_isNameAndPhotoAvailableForDestination_);

  if ((v2 & 1) != 0)
    return 1;
  v4 = Array._bridgeToObjectiveC()().super.isa;
  v3 = OUTLINED_FUNCTION_4_24((uint64_t)v4, sel_isiMessageAvailableForAnyDestinationInDestinations_);

  return v3;
}

uint64_t NameAndPhotoUtilities.checkForShouldShowOutgoingShareBanner(forCall:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void (*v28)(char *, _QWORD);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v58;
  unsigned int v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  Swift::Bool v65;
  uint64_t v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t ObjectType;
  uint64_t v75;
  char *v76;
  char v77[32];
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;

  ObjectType = swift_getObjectType();
  v75 = a2;
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 168))(ObjectType, a2);
  v4 = specialized Set.count.getter(v3);
  if (v4)
  {
    v5 = v4;
    v81 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    if ((v3 & 0xC000000000000001) != 0)
    {
      v6 = __CocoaSet.startIndex.getter();
      v8 = 1;
    }
    else
    {
      v6 = specialized _NativeSet.startIndex.getter(v3);
      v8 = v10 & 1;
    }
    v78 = v6;
    v79 = v7;
    v80 = v8;
    if ((v5 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        v11 = v78;
        v12 = v79;
        v13 = v80;
        specialized Set.subscript.getter(v78, v79, v80, v3);
        v15 = v14;
        v16 = objc_msgSend(v14, sel_value);
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v19 = v18;

        v20 = v81;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v20 = v81;
        }
        v21 = *(_QWORD *)(v20 + 16);
        if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          v20 = v81;
        }
        *(_QWORD *)(v20 + 16) = v21 + 1;
        v22 = v20 + 16 * v21;
        *(_QWORD *)(v22 + 32) = v17;
        *(_QWORD *)(v22 + 40) = v19;
        if ((v3 & 0xC000000000000001) != 0)
        {
          if ((v13 & 1) == 0)
          {
            __break(1u);
LABEL_74:
            swift_once();
LABEL_60:
            v60 = type metadata accessor for Logger();
            __swift_project_value_buffer(v60, (uint64_t)&static Logger.nickname);
            v61 = Logger.logObject.getter();
            v62 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v61, v62))
            {
              v63 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v63 = 0;
              _os_log_impl(&dword_1BD004000, v61, v62, "shouldShowOutgoingShareBanner = true on FaceTime call", v63, 2u);
              MEMORY[0x1C3B751B8](v63, -1, -1);
            }

            return 1;
          }
          if (__CocoaSet.Index.handleBitPattern.getter())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<TUHandle>.Index);
          v28 = (void (*)(char *, _QWORD))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v28(v77, 0);
        }
        else
        {
          v23 = specialized _NativeSet.index(after:)(v11, v12, v13, v3);
          v25 = v24;
          v27 = v26;
          outlined consume of Set<TUHandle>.Index._Variant(v11, v12, v13);
          v78 = v23;
          v79 = v25;
          v80 = v27 & 1;
        }
        if (!--v5)
        {
          outlined consume of Set<TUHandle>.Index._Variant(v78, v79, v80);
          swift_bridgeObjectRelease();
          v9 = v81;
          goto LABEL_19;
        }
      }
    }
    __break(1u);
    goto LABEL_72;
  }
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x1E0DEE9D8];
LABEL_19:
  v29 = *(_QWORD *)(v9 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    v30 = (uint64_t *)(v9 + 40);
    v31 = MEMORY[0x1E0DEE9D8];
    do
    {
      v32 = *(v30 - 1);
      v33 = *v30;
      swift_bridgeObjectRetain();
      v34 = (void *)MEMORY[0x1C3B72E00](v32, v33);
      v35 = (id)TUCopyIDSCanonicalAddressForDestinationID();

      if (v35)
      {
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v38 = v37;
        swift_bridgeObjectRelease();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v31 = v41;
        }
        v39 = *(_QWORD *)(v31 + 16);
        if (v39 >= *(_QWORD *)(v31 + 24) >> 1)
        {
          specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
          v31 = v42;
        }
        *(_QWORD *)(v31 + 16) = v39 + 1;
        v40 = v31 + 16 * v39;
        *(_QWORD *)(v40 + 32) = v36;
        *(_QWORD *)(v40 + 40) = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v43 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds;
  *(_QWORD *)&v76[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_currentCallRemoteParticipantHandleIds] = v31;
  swift_bridgeObjectRelease();
  v44 = &v76[OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_personalNickname];
  swift_beginAccess();
  if (!*(_QWORD *)v44)
  {
    if (one-time initialization token for nickname == -1)
    {
LABEL_38:
      v52 = type metadata accessor for Logger();
      __swift_project_value_buffer(v52, (uint64_t)&static Logger.nickname);
      v48 = Logger.logObject.getter();
      v49 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v48, v49))
      {
LABEL_56:

        return 0;
      }
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      v51 = "shouldShowOutgoingShareBanner = false due to personalNickname is nil";
LABEL_55:
      _os_log_impl(&dword_1BD004000, v48, v49, v51, v50, 2u);
      MEMORY[0x1C3B751B8](v50, -1, -1);
      goto LABEL_56;
    }
LABEL_72:
    swift_once();
    goto LABEL_38;
  }
  v45 = swift_bridgeObjectRetain();
  v46 = NameAndPhotoUtilities.hasAlreadySentOrDeniedSendingNameAndPhoto(to:)(v45);
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v47 = type metadata accessor for Logger();
    __swift_project_value_buffer(v47, (uint64_t)&static Logger.nickname);
    v48 = Logger.logObject.getter();
    v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49))
      goto LABEL_56;
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    v51 = "shouldShowOutgoingShareBanner = false bc hasAlreadySentOrDeniedSendingToRemotes";
    goto LABEL_55;
  }
  if ((NameAndPhotoUtilities.snapEnabled.getter() & 1) == 0)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v54 = type metadata accessor for Logger();
    __swift_project_value_buffer(v54, (uint64_t)&static Logger.nickname);
    v48 = Logger.logObject.getter();
    v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49))
      goto LABEL_56;
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    v51 = "shouldShowOutgoingShareBanner = false bc snapEnabled is false";
    goto LABEL_55;
  }
  if (!NameAndPhotoUtilities.alwaysAskNameAndPhotoSharingEnabled.getter())
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v55 = type metadata accessor for Logger();
    __swift_project_value_buffer(v55, (uint64_t)&static Logger.nickname);
    v48 = Logger.logObject.getter();
    v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49))
      goto LABEL_56;
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    v51 = "shouldShowOutgoingShareBanner = false bc alwaysAskNameAndPhotoSharing is not enabled";
    goto LABEL_55;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v75 + 392))(ObjectType, v75) & 1) != 0)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v53 = type metadata accessor for Logger();
    __swift_project_value_buffer(v53, (uint64_t)&static Logger.nickname);
    v48 = Logger.logObject.getter();
    v49 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v48, v49))
      goto LABEL_56;
    v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v50 = 0;
    v51 = "shouldShowOutgoingShareBanner = false bc isEmergency";
    goto LABEL_55;
  }
  v58 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v75 + 160))(ObjectType, v75);
  v59 = objc_msgSend(v58, sel_isFaceTimeProvider);

  if (v59)
  {
    if (one-time initialization token for nickname != -1)
      goto LABEL_74;
    goto LABEL_60;
  }
  v64 = swift_bridgeObjectRetain();
  v65 = NameAndPhotoUtilities.isShareNameAndPhotoAvailable(forDestinations:)((Swift::OpaquePointer)v64);
  swift_bridgeObjectRelease();
  if (!v65)
    return 2;
  if (one-time initialization token for nickname != -1)
    swift_once();
  v66 = type metadata accessor for Logger();
  __swift_project_value_buffer(v66, (uint64_t)&static Logger.nickname);
  v67 = v76;
  v68 = Logger.logObject.getter();
  v69 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v68, v69))
  {

    return 1;
  }
  v70 = (uint8_t *)swift_slowAlloc();
  v71 = swift_slowAlloc();
  *(_DWORD *)v70 = 136315138;
  v78 = v71;
  v81 = *(_QWORD *)&v76[v43];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  v72 = String.init<A>(reflecting:)();
  v81 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v72, v73, &v78);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BD004000, v68, v69, "shouldShowOutgoingShareBanner = true bc destination status found in cache for handleIDs: %s", v70, 0xCu);
  v56 = 1;
  swift_arrayDestroy();
  MEMORY[0x1C3B751B8](v71, -1, -1);
  MEMORY[0x1C3B751B8](v70, -1, -1);

  return v56;
}

uint64_t NameAndPhotoUtilities.allContactHandlesFromHandle(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v6;
  void *v7;
  void *v8;
  Class isa;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD6441D0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v6 = specialized Set.init<A>(_:)(inited);
  v14 = v6;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_contactStore);
  v8 = (void *)MEMORY[0x1C3B72E00](a1, a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v7, sel_contactForDestinationId_keysToFetch_, v8, isa);

  if (v10)
  {
    v11 = objc_msgSend(v10, sel_handles);
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Set.formUnion<A>(_:)(v12);
    return v14;
  }
  return v6;
}

id NameAndPhotoUtilities.pendingIncomingIMNickname(from:)()
{
  uint64_t v0;
  void *v1;
  Class isa;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v3 = objc_msgSend(v1, sel_pendingNicknameForHandleIDs_, isa);

  if (!v3)
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)&static Logger.nickname);
    swift_bridgeObjectRetain_n();
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
      lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Set<String> and conformance Set<A>, &demangling cache variable for type metadata for Set<String>, MEMORY[0x1E0DEB3D0]);
      lazy protocol witness table accessor for type String and conformance String();
      Sequence<>.joined(separator:)();
      v9 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v5, v6, "Couldnt find a pending IMNickname for handle %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v8, -1, -1);
      MEMORY[0x1C3B751B8](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v3;
}

void NameAndPhotoUtilities.createIMHandle(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;

  OUTLINED_FUNCTION_65_5();
  a23 = v25;
  a24 = v26;
  v28 = v27;
  OUTLINED_FUNCTION_59(v29, &lazy cache variable for type metadata for IMServiceImpl);
  v30 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
  v31 = (id)IMPreferredAccountForService();
  OUTLINED_FUNCTION_4_39();
  if (!v24)
    goto LABEL_6;
  if (v28)
  {
    v32 = v24;
    OUTLINED_FUNCTION_88_0();
  }
  v33 = v24;
  v30 = 0;
  v34 = objc_msgSend(v24, sel_imHandleWithID_, 0);

  if (v34)
  {

  }
  else
  {
LABEL_6:
    if (one-time initialization token for nickname != -1)
      swift_once();
    v35 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_22_83(v35, (uint64_t)&static Logger.nickname);
    v36 = v24;
    Logger.logObject.getter();
    v37 = OUTLINED_FUNCTION_232();
    if (OUTLINED_FUNCTION_21_12(v37))
    {
      v38 = OUTLINED_FUNCTION_105();
      a12 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v38 = 136315394;
      if (v28)
      {
        OUTLINED_FUNCTION_124();
        v39 = OUTLINED_FUNCTION_14_20();
        v41 = v40;
      }
      else
      {
        v41 = 0xE300000000000000;
        v39 = OUTLINED_FUNCTION_80_19();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v39, v41, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      OUTLINED_FUNCTION_3_3();
      v42 = swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      if (v24)
      {
        OUTLINED_FUNCTION_59(v42, &lazy cache variable for type metadata for IMAccount);
        v43 = v36;
        v44 = String.init<A>(reflecting:)();
        v46 = v45;
      }
      else
      {
        v46 = 0xE300000000000000;
        v44 = OUTLINED_FUNCTION_80_19();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v46, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      OUTLINED_FUNCTION_13_3();
      _os_log_impl(&dword_1BD004000, v30, v37, "Could not create IMHandle with handle %s account: %s", (uint8_t *)v38, 0x16u);
      OUTLINED_FUNCTION_42_53();
      OUTLINED_FUNCTION_60();
    }

    OUTLINED_FUNCTION_3_3();
  }
  OUTLINED_FUNCTION_8_0();
}

void NameAndPhotoUtilities.currentIMNickname(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  unsigned int v31;
  void *v32;
  unsigned int v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  id v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;

  OUTLINED_FUNCTION_65_5();
  a23 = v25;
  a24 = v27;
  if (v26)
  {
    v28 = v26;
    v29 = (void *)objc_opt_self();
    v30 = v28;
    v31 = objc_msgSend(v29, sel_contactIsInAutoUpdateState_, v30);
    v32 = *(void **)(v24 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameProvider);
    v33 = objc_msgSend(v32, sel_haveNicknamesLoaded);
    v34 = 0;
    if (v31 && v33)
      v34 = objc_msgSend(v32, sel_currentNicknameForContact_, v30);
    if (one-time initialization token for nickname != -1)
      swift_once();
    v35 = OUTLINED_FUNCTION_17_2();
    v36 = __swift_project_value_buffer(v35, (uint64_t)&static Logger.nickname);
    v37 = v34;
    Logger.logObject.getter();
    v38 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_21_12(v38))
    {
      v39 = OUTLINED_FUNCTION_105();
      a12 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v39 = 67109634;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 8) = 2080;
      v40 = String.init<A>(reflecting:)();
      OUTLINED_FUNCTION_16_26(v40, v41, v42, v43, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v45 = swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 18) = 2080;
      if (v34)
      {
        OUTLINED_FUNCTION_59(v45, &lazy cache variable for type metadata for IMNickname);
        v46 = v37;
        v47 = String.init<A>(reflecting:)();
        v49 = v48;
      }
      else
      {
        v49 = 0xE300000000000000;
        v47 = OUTLINED_FUNCTION_80_19();
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v47, v49, &a12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v36, v38, "SNAP: imNicknameProviderReady: %{BOOL}d contactIsInAutoUpdateState: %s fetched contacts associated IMNickname: %s", (uint8_t *)v39, 0x1Cu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_8_0();
}

Swift::Void __swiftcall NameAndPhotoUtilities.handlePersonalNicknameChanged(_:)(NSNotification a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  objc_class *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = v1;
  if (one-time initialization token for nickname != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  v6 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.nickname);
  v7 = a1.super.isa;
  v8 = v6;
  Logger.logObject.getter();
  v9 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v9))
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_105();
    v11 = OUTLINED_FUNCTION_105();
    v15 = v11;
    *(_DWORD *)v10 = 136315138;
    OUTLINED_FUNCTION_59(v11, &lazy cache variable for type metadata for NSNotification);
    v12 = v7;
    v13 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v15);
    OUTLINED_FUNCTION_59_1();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v8, v2, "handlePersonalNicknameChanged %s", v10);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  NameAndPhotoUtilities.personalNickname.setter(objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController), sel_personalNickname));
  OUTLINED_FUNCTION_26_11();
}

id NameAndPhotoUtilities.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_15_6();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL NameAndPhotoUtilities.alwaysAskNameAndPhotoSharingEnabled.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_sharingAudience);

  return v1 == (id)2;
}

id NameAndPhotoUtilities.snapEnabled.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = objc_msgSend(v0, sel_sharingEnabled);

  return v1;
}

uint64_t NameAndPhotoUtilities.hasAlreadySentOrDeniedSendingNameAndPhoto(to:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t *v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  id v42;
  char v43;

  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 952))() & 1) != 0)
    return 0;
  if (((*(uint64_t (**)(void))(*(_QWORD *)v2 + 960))() & 1) != 0)
    return 1;
  type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMServiceImpl);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_iMessageService);
  v6 = (id)IMPreferredAccountForService();

  v43 = 0;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController;
    swift_bridgeObjectRetain();
    LOBYTE(v9) = 0;
    v10 = (unint64_t *)(a1 + 40);
    LOBYTE(v11) = 1;
    while (1)
    {
      v13 = *(v10 - 1);
      v12 = *v10;
      if (!v6)
      {
        v43 = 0;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      v14 = v6;
      v15 = v6;
      v16 = outlined bridged method (mbgnn) of @objc IMAccount.imHandle(withID:)(v13, v12, v15);

      if (!v16)
        break;
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        v11 = objc_msgSend(*(id *)(v40 + v8), sel_handleIsAllowedForSharing_, v17);
      else
        v11 = 0;
      v6 = v14;
      if ((v9 & 1) != 0)
        v9 = 1;
      else
        v9 = objc_msgSend(*(id *)(v40 + v8), sel_handleIsDeniedForSharing_, v17);
      v10 += 2;

      if (!--v7)
      {
        v43 = v9;
        swift_bridgeObjectRelease();
        v3 = v11 | v9;
        goto LABEL_21;
      }
    }
    v43 = v9;
    v6 = v14;
LABEL_28:
    swift_bridgeObjectRelease();
    if (one-time initialization token for nickname != -1)
      swift_once();
    v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)&static Logger.nickname);
    v30 = v6;
    swift_bridgeObjectRetain();
    v31 = v30;
    v32 = Logger.logObject.getter();
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v41[0] = v35;
      *(_DWORD *)v34 = 136315394;
      if (v6)
      {
        v42 = v31;
        type metadata accessor for NSObject(0, &lazy cache variable for type metadata for IMAccount);
        v36 = v31;
        v37 = String.init<A>(reflecting:)();
        v39 = v38;
      }
      else
      {
        v39 = 0xE300000000000000;
        v37 = 7104878;
      }
      v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain();
      v42 = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v32, v33, "Failed to generate imHandle using account %s handleID: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v35, -1, -1);
      MEMORY[0x1C3B751B8](v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  v3 = 1;
LABEL_21:
  if (one-time initialization token for nickname != -1)
    swift_once();
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)&static Logger.nickname);
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v42 = (id)v22;
    *(_DWORD *)v21 = 136315650;
    v23 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v25 = String.init<A>(reflecting:)();
    v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    swift_beginAccess();
    v27 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, (uint64_t *)&v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v19, v20, "hasAlreadySentOrDeniedSendingNameAndPhoto: %s due to hasAlreadySentToAll: %s hasDeniedToAny: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v22, -1, -1);
    MEMORY[0x1C3B751B8](v21, -1, -1);

  }
  else
  {

  }
  return v3;
}

uint64_t NameAndPhotoUtilities.beginQueryIsShareNameAndPhotoAvailable(forDestination:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  Class isa;
  uint64_t v21;

  v1 = v0;
  if (NameAndPhotoUtilities.isSnapQueryEnabled()())
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)&static Logger.nickname);
    swift_bridgeObjectRetain_n();
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v21 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      v7 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v3, v4, "beginQueryIsShareNameAndPhotoAvailable - Querying IDS to see com.apple.private.alloy.nameandphoto status for handleIDs: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v6, -1, -1);
      MEMORY[0x1C3B751B8](v5, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_idsLookupManager);
    v18 = swift_bridgeObjectRetain();
    specialized Set.init<A>(_:)(v18);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_beginBatchQueryWithDestinations_services_, isa, 63);

    return 2;
  }
  else
  {
    if (one-time initialization token for nickname != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)&static Logger.nickname);
    swift_bridgeObjectRetain_n();
    v10 = Logger.logObject.getter();
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
      v14 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v10, v11, "beginQueryIsShareNameAndPhotoAvailable - SNAP Query is disabled for handleIDs: %s", v12, 0xCu);
      v16 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v13, -1, -1);
      MEMORY[0x1C3B751B8](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  return v16;
}

Swift::Bool __swiftcall NameAndPhotoUtilities.isSnapQueryEnabled()()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  id v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v0)
  {
    __break(1u);
    return (char)v0;
  }
  v1 = v0;
  outlined bridged method (mbnn) of @objc FTServerBag.object(forKey:)(0xD00000000000001CLL, 0x80000001BD690140, v0);
  v3 = v2;

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    OUTLINED_FUNCTION_10();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  _sypSgWObTm_0((uint64_t)v8, (uint64_t)v9, &demangling cache variable for type metadata for Any?);
  if (!v10)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v9, &demangling cache variable for type metadata for Any?);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_59(v4, (unint64_t *)&lazy cache variable for type metadata for NSNumber);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    LOBYTE(v0) = 1;
    return (char)v0;
  }
  v5 = objc_msgSend(v7, sel_BOOLValue);

  LOBYTE(v0) = v5 ^ 1;
  return (char)v0;
}

void outlined bridged method (mbnn) of @objc CNMutableContact.lastName.setter(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)MEMORY[0x1C3B72E00]();
  OUTLINED_FUNCTION_27();
  objc_msgSend(a3, sel_setLastName_, v4);

}

id outlined bridged method (mbgnn) of @objc IMAccount.imHandle(withID:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)MEMORY[0x1C3B72E00]();
  v5 = objc_msgSend(a3, sel_imHandleWithID_, v4);

  return v5;
}

void specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  id v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_65_5();
  v54 = v2;
  v4 = v3;
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(v6, v5);
  if (v7)
  {
    v8 = objc_msgSend(v7, sel_value);
    OUTLINED_FUNCTION_4_39();
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v11 = v10;

    OUTLINED_FUNCTION_8_8();
    NameAndPhotoUtilities.createIMHandle(with:)(v9, v11, v12, v13, v14, v15, v16, v17, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
      v51,
      v52,
      v53,
      v1,
      v54);
    v19 = v18;
    OUTLINED_FUNCTION_2_1();
    if (v19)
    {
      OUTLINED_FUNCTION_2_1();
      if (one-time initialization token for nickname != -1)
        swift_once();
      v20 = OUTLINED_FUNCTION_17_2();
      v21 = __swift_project_value_buffer(v20, (uint64_t)&static Logger.nickname);
      v22 = v19;
      Logger.logObject.getter();
      v23 = OUTLINED_FUNCTION_12_0();
      if (os_log_type_enabled(v21, v23))
      {
        v24 = (uint8_t *)OUTLINED_FUNCTION_105();
        v25 = (_QWORD *)OUTLINED_FUNCTION_105();
        *(_DWORD *)v24 = 138412290;
        v26 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v25 = v19;

        OUTLINED_FUNCTION_48(&dword_1BD004000, v21, v23, "Denying sending name and photo to handle %@", v24);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      v35 = *(Class *)((char *)&v4->isa + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_imNicknameController);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      v36 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v36 + 16) = xmmword_1BD6443F0;
      *(_QWORD *)(v36 + 32) = v22;
      v37 = specialized Array._endMutation()();
      OUTLINED_FUNCTION_59(v37, (unint64_t *)&lazy cache variable for type metadata for IMHandle);
      v38 = v22;
      isa = Array._bridgeToObjectiveC()().super.isa;
      OUTLINED_FUNCTION_27();
      objc_msgSend(v35, sel_denyHandlesForNicknameSharing_, isa);

    }
    else
    {
      if (one-time initialization token for nickname != -1)
        swift_once();
      v27 = OUTLINED_FUNCTION_17_2();
      __swift_project_value_buffer(v27, (uint64_t)&static Logger.nickname);
      OUTLINED_FUNCTION_8_8();
      Logger.logObject.getter();
      v28 = OUTLINED_FUNCTION_37_4();
      if (OUTLINED_FUNCTION_22_8(v28))
      {
        v29 = (uint8_t *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_105();
        *(_DWORD *)v29 = 136315138;
        OUTLINED_FUNCTION_8_8();
        v30 = OUTLINED_FUNCTION_14_20();
        OUTLINED_FUNCTION_16_26(v30, v31, v32, v33, v34);
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_19_1();
        OUTLINED_FUNCTION_133();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v4, OS_LOG_TYPE_DEFAULT, "Cant deny nickname sharing because could not create IMHandle with handle %s", v29);
        OUTLINED_FUNCTION_6_3();
        OUTLINED_FUNCTION_60();
      }

      OUTLINED_FUNCTION_19_1();
    }
  }
}

void specialized NameAndPhotoUtilities.denyIncomingName(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (one-time initialization token for nickname != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.nickname);
  OUTLINED_FUNCTION_50_44();
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_105();
    v16 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v9 = 136315138;
    v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_value);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      v13 = OUTLINED_FUNCTION_14_20();
      v15 = v14;
    }
    else
    {
      v15 = 0xE300000000000000;
      v13 = OUTLINED_FUNCTION_80_19();
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_48(&dword_1BD004000, v7, v8, "Denying incoming name from handle %s", v9);
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_60();
  }

  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_26_11();
}

uint64_t sub_1BD4D5548()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static NameAndPhotoUtilities.prewarm()()
{
  return closure #1 in static NameAndPhotoUtilities.prewarm()();
}

uint64_t sub_1BD4D5560()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t dispatch thunk of NameAndPhotoUtilitiesDelegate.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of NameAndPhotoUtilitiesDelegate.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for NameAndPhotoUtilities()
{
  return objc_opt_self();
}

void partial apply for closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(void *a1)
{
  uint64_t v1;

  closure #1 in NameAndPhotoUtilities.getOrFetchPersonalNickName()(a1, v1);
}

uint64_t sub_1BD4D55CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BD4D55F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in NameAndPhotoUtilities.personalNickname.didset()
{
  uint64_t v0;

  return closure #1 in NameAndPhotoUtilities.personalNickname.didset(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_39_64()
{
  return String.init<A>(reflecting:)();
}

void ConversationControlsButtonProvider.init(controlsManager:context:shape:)(uint64_t a1, char a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 136) = a1;
  ControlsButtonProvider.init(context:shape:)(a2, a3);
}

Swift::Void __swiftcall ControlsButtonProvider.buttonChanged()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OUTLINED_FUNCTION_8_1();
  if (v1)
  {
    v2 = (void *)v1;
    OUTLINED_FUNCTION_15();
    swift_weakInit();
    v3 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), MEMORY[0x1E0C809B0], 1107296256, v6, v7);
    v4 = v2;
    swift_release();
    objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v3);
    _Block_release(v3);

    LOBYTE(v3) = *(_BYTE *)(v0 + 41);
    *(_BYTE *)(OUTLINED_FUNCTION_15() + 16) = (_BYTE)v3;
    v5 = v4;
    UIButton.pointerStyleProvider.setter();

    objc_msgSend(v5, sel_setPointerInteractionEnabled_, 1);
    objc_msgSend(v5, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48F0]);
    objc_msgSend(v5, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E0DC4918]);
    objc_msgSend(v5, sel_setNeedsUpdateConfiguration);

  }
}

uint64_t ConversationControlsButtonProvider.deinit()
{
  uint64_t v0;

  ControlsButtonProvider.deinit();

  return v0;
}

void ControlsButtonProvider.button.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  MEMORY[0x1C3B752C0](v0 + 16);
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.button.setter(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  OUTLINED_FUNCTION_2_0();
  v2[3] = a2;
  v5 = swift_unknownObjectWeakAssign();
  (*(void (**)(uint64_t))(*v2 + 424))(v5);

  OUTLINED_FUNCTION_9_0();
}

double ControlsButtonProvider.cnkContentAlpha.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  return *(double *)(v0 + 32);
}

void ControlsButtonProvider.cnkContentAlpha.setter(double a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(double *)(v1 + 32) = a1;
  ControlsButtonProvider.cnkContentAlpha.didset();
}

void ControlsButtonProvider.cnkContentAlpha.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.cnkContentAlpha.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    ControlsButtonProvider.cnkContentAlpha.didset();
  OUTLINED_FUNCTION_0();
}

uint64_t ControlsButtonProvider.callbackCancellable.getter()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

uint64_t ControlsButtonProvider.callbackCancellable.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_release();
}

void ControlsButtonProvider.callbackCancellable.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ControlsButtonProvider.menuDataSource.getter()
{
  return 0;
}

void *ControlsButtonProvider.backgroundStyle.getter()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(void **)(v0 + 56);
  outlined copy of ButtonBackgroundStyle?(v1, *(void **)(v0 + 64), *(_BYTE *)(v0 + 72));
  return v1;
}

void ControlsButtonProvider.backgroundStyle.setter(void *a1, void *a2, char a3)
{
  uint64_t v3;
  void *v7;
  void *v8;
  char v9;

  OUTLINED_FUNCTION_2_0();
  v7 = *(void **)(v3 + 56);
  v8 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  v9 = *(_BYTE *)(v3 + 72);
  *(_BYTE *)(v3 + 72) = a3;
  outlined copy of ButtonBackgroundStyle?(a1, a2, a3);
  outlined consume of ButtonBackgroundStyle?(v7, v8, v9);
  ControlsButtonProvider.backgroundStyle.didset();
  outlined consume of ButtonBackgroundStyle?(a1, a2, a3);
}

void ControlsButtonProvider.backgroundStyle.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.titleFont.modify()
{
  char v0;

  OUTLINED_FUNCTION_551();
  if ((v0 & 1) == 0)
    ControlsButtonProvider.backgroundStyle.didset();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.foregroundColor.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 80);
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.foregroundColor.setter(void *a1)
{
  uint64_t v1;
  id v3;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 80) = a1;
  v3 = a1;
  OUTLINED_FUNCTION_134();
  ControlsButtonProvider.backgroundStyle.didset();

  OUTLINED_FUNCTION_9_0();
}

void ControlsButtonProvider.foregroundColor.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.captureGroupName.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.captureGroupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  swift_bridgeObjectRelease();
  ControlsButtonProvider.backgroundStyle.didset();
  OUTLINED_FUNCTION_9_0();
}

void ControlsButtonProvider.captureGroupName.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.image.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 104);
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.image.setter(void *a1)
{
  uint64_t v1;
  id v3;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 104) = a1;
  v3 = a1;
  OUTLINED_FUNCTION_134();
  ControlsButtonProvider.backgroundStyle.didset();

  OUTLINED_FUNCTION_9_0();
}

void ControlsButtonProvider.image.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.title.getter()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  swift_bridgeObjectRelease();
  ControlsButtonProvider.backgroundStyle.didset();
  OUTLINED_FUNCTION_9_0();
}

void ControlsButtonProvider.title.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ControlsButtonProvider.titleFont.getter()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 128);
  OUTLINED_FUNCTION_32();
}

void ControlsButtonProvider.titleFont.setter(void *a1)
{
  uint64_t v1;
  id v3;

  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v1 + 128) = a1;
  v3 = a1;
  OUTLINED_FUNCTION_134();
  ControlsButtonProvider.backgroundStyle.didset();

  OUTLINED_FUNCTION_9_0();
}

void ControlsButtonProvider.titleFont.modify(uint64_t a1)
{
  OUTLINED_FUNCTION_16_54(a1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void ConversationControlsButtonProvider.__allocating_init(context:shape:)()
{
  OUTLINED_FUNCTION_16_92();
  __break(1u);
}

id ControlsButtonProvider.makeButton(frame:)()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = static ConversationControlsButtonFactory.makeButton(frame:provider:)(v0);
  v3 = v2;
  v4 = v1;
  ControlsButtonProvider.button.setter(v1, v3);
  return v1;
}

Swift::Void __swiftcall ControlsButtonProvider.updateButtonConfiguration()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  double (*v10)(void);
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OUTLINED_FUNCTION_8_1();
  if (v1)
  {
    v3 = (void *)v1;
    v4 = v2;
    v5 = objc_opt_self();
    v6 = (_QWORD *)OUTLINED_FUNCTION_15();
    v6[2] = v3;
    v6[3] = v4;
    v6[4] = v0;
    v7 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v7 + 16) = partial apply for closure #1 in ControlsButtonProvider.updateButtonConfiguration();
    *(_QWORD *)(v7 + 24) = v6;
    v8 = OUTLINED_FUNCTION_9_2((uint64_t)thunk for @escaping @callee_guaranteed () -> (), MEMORY[0x1E0C809B0], 1107296256, v13, v14);
    v9 = v3;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend((id)v5, sel_performWithoutAnimation_, v8);
    _Block_release(v8);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v5 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      ControlsButtonProvider.updateTextAttributes()();
      v10 = *(double (**)(void))(*(_QWORD *)v0 + 192);
      v11 = v9;
      v12 = v10();
      UIButton.updateContentAlpha(_:)(v12);
      swift_release();

    }
  }
}

void ControlsButtonProvider.startedContextMenu(button:animator:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Class isa;

  v2 = type metadata accessor for Notification();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_77();
  v6 = v5 - v4;
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  static Notification.contextMenuWillPresent(target:)(a1);
  isa = Notification._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v7, sel_postNotification_, isa);

  OUTLINED_FUNCTION_91();
}

void ControlsButtonProvider.endedContextMenu(button:animator:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = type metadata accessor for Notification();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v8 = v7 - v6;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  static Notification.contextMenuDidDismiss(target:)(a1);
  NSNotificationCenter.post(_:afterAnimatorCompletes:)(v8, a2);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_91();
}

void ControlsButtonProvider.prominentTitleFont.getter()
{
  uint64_t v0;
  id v1;

  if (*(_BYTE *)(v0 + 40))
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4B10]);
    UIFont.withTraits(_:)(0x8002u);

    UIFont.caseSensitive()();
    OUTLINED_FUNCTION_134();
  }
  OUTLINED_FUNCTION_18();
}

void ConversationControlsButtonProvider.__allocating_init(controlsManager:context:shape:)(uint64_t a1)
{
  *(_QWORD *)(OUTLINED_FUNCTION_15() + 136) = a1;
  OUTLINED_FUNCTION_20_82();
  OUTLINED_FUNCTION_18();
}

id ConversationControlsButtonProvider.controlsManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

void ControlsButtonProvider.init(context:shape:)(char a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 32) = 0x3FF0000000000000;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 72) = -4;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  *(_BYTE *)(v2 + 40) = a1;
  *(_BYTE *)(v2 + 41) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1BD4D6304()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void ConversationControlsButtonProvider.init(context:shape:)()
{
  OUTLINED_FUNCTION_16_92();
  __break(1u);
}

void ConversationControlsButtonProvider.__ivar_destroyer()
{
  uint64_t v0;

}

uint64_t ControlsButtonProvider.deinit()
{
  uint64_t v0;

  outlined destroy of weak ConversationControlsCountdownJoinButtonDelegate?(v0 + 16);
  swift_release();
  outlined consume of ButtonBackgroundStyle?(*(void **)(v0 + 56), *(void **)(v0 + 64), *(_BYTE *)(v0 + 72));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ConversationControlsButtonProvider.__deallocating_deinit()
{
  uint64_t v0;

  ControlsButtonProvider.deinit();

  return swift_deallocClassInstance();
}

void ControlsButtonProvider.ImageGeometry.size.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*ControlsButtonProvider.ImageGeometry.size.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ControlsButtonProvider.ImageGeometry.offset.getter(double a1, double a2, double a3)
{
  return a3;
}

void ControlsButtonProvider.ImageGeometry.offset.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*ControlsButtonProvider.ImageGeometry.offset.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double default argument 1 of ControlsButtonProvider.ImageGeometry.init(size:offset:)()
{
  return 0.0;
}

void key path setter for ControlsButtonProvider.button : ControlsButtonProvider(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;

  v1 = *(id *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(id *)a1;
  ControlsButtonProvider.button.setter(v1, v2);
}

void ControlsButtonProvider.cnkContentAlpha.didset()
{
  double *v0;
  uint64_t v1;
  void *v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
  if (v1)
  {
    v2 = (void *)v1;
    swift_beginAccess();
    UIButton.updateContentAlpha(_:)(v0[4]);

  }
}

uint64_t ControlsButtonProvider.context.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ControlsButtonProvider.shape.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t key path setter for ControlsButtonProvider.callbackCancellable : ControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 224);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t key path setter for ControlsButtonProvider.backgroundStyle : ControlsButtonProvider(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  uint64_t (*v4)(id, void *, uint64_t);
  uint64_t v5;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(uint64_t (**)(id, void *, uint64_t))(**(_QWORD **)a2 + 256);
  v5 = *(unsigned __int8 *)(a1 + 16);
  outlined copy of ButtonBackgroundStyle?(*(id *)a1, v3, v5);
  return v4(v2, v3, v5);
}

uint64_t key path setter for ControlsButtonProvider.foregroundColor : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 280);
  v4 = *a1;
  return v3(v2);
}

uint64_t key path setter for ControlsButtonProvider.captureGroupName : ControlsButtonProvider(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 304);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t key path setter for ControlsButtonProvider.image : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 328);
  v4 = *a1;
  return v3(v2);
}

uint64_t key path setter for ControlsButtonProvider.title : ControlsButtonProvider(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 352);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t key path setter for ControlsButtonProvider.titleFont : ControlsButtonProvider(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 376);
  v4 = *a1;
  return v3(v2);
}

void ControlsButtonProvider.backgroundStyle.didset()
{
  void *v0;
  id v1;

  v0 = (void *)OUTLINED_FUNCTION_8_1();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_setNeedsUpdateConfiguration);

  }
}

void ControlsButtonProvider.__allocating_init(context:shape:)()
{
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_20_82();
  OUTLINED_FUNCTION_18();
}

uint64_t closure #1 in ControlsButtonProvider.updateButtonConfiguration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(_QWORD *)a3 + 416))(v5);
  v8 = type metadata accessor for UIButton.Configuration();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  return UIButton.configuration.setter();
}

void ControlsButtonProvider.updateTextAttributes()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIConfigurationTextAttributesTransformer?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - v12;
  v14 = (void *)(*(uint64_t (**)(__n128))(*(_QWORD *)v0 + 168))(v11);
  if (v14)
  {
    v27 = v14;
    v15 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = v27;
      UIButton.configuration.getter();
      v18 = type metadata accessor for UIButton.Configuration();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v18))
      {
        outlined init with copy of UIButton.Configuration?((uint64_t)v13, (uint64_t)v9);
        UIButton.configuration.setter();

        v19 = (uint64_t)v13;
LABEL_8:
        outlined destroy of UIButton.Configuration?(v19);
        return;
      }
      *(_QWORD *)(swift_allocObject() + 16) = v16;
      v22 = v16;
      UIConfigurationTextAttributesTransformer.init(_:)();
      v23 = type metadata accessor for UIConfigurationTextAttributesTransformer();
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v23);
      UIButton.Configuration.titleTextAttributesTransformer.setter();
      UIButton.configuration.setter();

    }
    else if (v0[40])
    {
      v20 = v27;
      UIButton.configuration.getter();
      v21 = type metadata accessor for UIButton.Configuration();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v21))
      {
        outlined init with copy of UIButton.Configuration?((uint64_t)v6, (uint64_t)v9);
        UIButton.configuration.setter();

        v19 = (uint64_t)v6;
        goto LABEL_8;
      }
      v24 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A98]);
      *(_QWORD *)(swift_allocObject() + 16) = v24;
      UIConfigurationTextAttributesTransformer.init(_:)();
      v25 = type metadata accessor for UIConfigurationTextAttributesTransformer();
      __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v25);
      UIButton.Configuration.titleTextAttributesTransformer.setter();
      UIButton.configuration.setter();

    }
    else
    {
      objc_msgSend(v27, sel_sbui_updateConfiguration);

    }
  }
}

uint64_t ControlsButtonProvider.defaultButtonConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  unsigned __int8 v35;
  id v36;
  void *v37;
  char v38;
  id v39;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v3 = type metadata accessor for AttributeContainer();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_77();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_77();
  v7 = v6 - v5;
  v8 = type metadata accessor for UIButton.Configuration.CornerStyle();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_77();
  v12 = v11 - v10;
  v13 = type metadata accessor for UIButton.Configuration.Size();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_77();
  v17 = v16 - v15;
  v18 = type metadata accessor for UIButton.Configuration();
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_77();
  v21 = v20 - v19;
  static UIButton.Configuration.filled()();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0DC3188], v13);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DC3060], v8);
  v22 = UIButton.Configuration.cornerStyle.setter();
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 344))(v22);
  if (v24)
  {
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    v25 = type metadata accessor for AttributedString();
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v25);
    v23 = UIButton.Configuration.attributedTitle.setter();
  }
  v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 320))(v23);
  if (v26)
  {
    v27 = (void *)v26;
    v28 = (void *)objc_opt_self();
    v29 = objc_msgSend(v28, sel_unspecifiedConfiguration);
    v30 = objc_msgSend(v27, sel_imageWithSymbolConfiguration_, v29);

    UIButton.Configuration.image.setter();
    v31 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
    v32 = objc_msgSend(v28, sel_configurationWithFont_scale_, v31, 3);

    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  }
  v33 = (id)(*(uint64_t (**)(void))(*(_QWORD *)v2 + 248))();
  if (v35 < 0xFCu)
    goto LABEL_8;
  if ((ControlsButtonProvider.usesVibrantBackgroundStyle.getter() & 1) != 0)
  {
    v33 = ControlsButtonProvider.defaultVibrantBackgroundStyle.getter();
LABEL_8:
    v36 = v33;
    v37 = v34;
    v38 = v35;
    goto LABEL_10;
  }
  v36 = ControlsButtonProvider.defaultFlatBackgroundColor.getter();
  v37 = 0;
  v38 = 64;
LABEL_10:
  if (!(*(uint64_t (**)(void))(*(_QWORD *)v2 + 272))())
    v39 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  UIButton.Configuration.baseForegroundColor.setter();
  UIButton.Configuration.withBackgroundStyle(_:)(v36, v38, a1);
  outlined consume of ButtonBackgroundStyle(v36, v37, v38);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v21, v42);
}

uint64_t closure #1 in ControlsButtonProvider.buttonChanged()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 408))(result);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.buttonChanged()()
{
  return closure #1 in ControlsButtonProvider.buttonChanged()();
}

uint64_t closure #2 in ControlsButtonProvider.buttonChanged()(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  CGFloat *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  CGRect v38;

  v5 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UIPointerShape?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (CGFloat *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UIPointerEffect();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  objc_msgSend(a1, sel_bounds);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (void *)UIPointerEffect.preview.getter();
  v22 = objc_msgSend(v21, sel_target);

  v23 = objc_msgSend(v22, sel_container);
  objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v23, v14, v16, v18, v20);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  if (v5)
  {
    v38.origin.x = v25;
    v38.origin.y = v27;
    v38.size.width = v29;
    v38.size.height = v31;
    v32 = CGRectGetHeight(v38) * 0.5;
  }
  else
  {
    static UIPointerShape.defaultCornerRadius.getter();
    v32 = v33;
  }
  type metadata accessor for UIPointerStyle();
  *v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D90]), sel_initWithView_, a1);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DC1E30], v9);
  *v8 = v25;
  v8[1] = v27;
  v8[2] = v29;
  v8[3] = v31;
  v8[4] = v32;
  v34 = *MEMORY[0x1E0DC1B88];
  v35 = type metadata accessor for UIPointerShape();
  (*(void (**)(CGFloat *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v8, v34, v35);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v35);
  return UIPointerStyle.init(effect:shape:)();
}

uint64_t sub_1BD4D70B8()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t partial apply for closure #2 in ControlsButtonProvider.buttonChanged()(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return closure #2 in ControlsButtonProvider.buttonChanged()(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

id outlined copy of ButtonBackgroundStyle?(id result, void *a2, char a3)
{
  if (a3 <= 0xFBu)
    return outlined copy of ButtonBackgroundStyle(result, a2, a3);
  return result;
}

void outlined consume of ButtonBackgroundStyle?(void *a1, void *a2, char a3)
{
  if (a3 <= 0xFBu)
    outlined consume of ButtonBackgroundStyle(a1, a2, a3);
}

uint64_t sub_1BD4D70F4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.updateButtonConfiguration()()
{
  uint64_t *v0;

  return closure #1 in ControlsButtonProvider.updateButtonConfiguration()(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BD4D712C()
{
  return OUTLINED_FUNCTION_23_4();
}

uint64_t ControlsButtonProvider.__deallocating_deinit()
{
  ControlsButtonProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ButtonLifecycleDelegate.didLayoutSubviews(button:) in conformance ControlsButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.movedToWindow(button:) in conformance ControlsButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.startedContextMenu(button:animator:) in conformance ControlsButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t protocol witness for ButtonLifecycleDelegate.endedContextMenu(button:animator:) in conformance ControlsButtonProvider()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t ControlsButtonProvider.usesVibrantBackgroundStyle.getter()
{
  _BYTE *v0;
  void *v1;
  void *v2;
  char v3;
  char v4;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
  if (!v1)
    goto LABEL_8;
  v2 = v1;
  if (objc_msgSend(v1, sel_tintAdjustmentMode) == (id)2 || !v0[40])
  {

LABEL_8:
    v4 = 0;
    return v4 & 1;
  }
  if (one-time initialization token for shared != -1)
    swift_once();
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 320))();

  v4 = v3 ^ 1;
  return v4 & 1;
}

id ControlsButtonProvider.defaultVibrantBackgroundStyle.getter()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 40) < 2u)
    return 0;
  type metadata accessor for ConversationHUDInCallBackdropView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id ControlsButtonProvider.defaultFlatBackgroundColor.getter()
{
  uint64_t v0;
  id result;
  id v2;
  uint64_t v3;
  id v4;

  result = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  v2 = result;
  if (!*(_BYTE *)(v0 + 40))
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    return @nonobjc UIColor.init(dynamicProvider:)((uint64_t)partial apply for closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter, v3);
  }
  return result;
}

id closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)UITraitCollection.modifyingTraits(_:)();
  v4 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, v3);

  return v4;
}

uint64_t closure #1 in closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  return UIMutableTraits.userInterfaceLevel.setter();
}

uint64_t closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;

  v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  lazy protocol witness table accessor for type AttributeScopes.UIKitAttributes.FontAttribute and conformance AttributeScopes.UIKitAttributes.FontAttribute();
  v7 = a2;
  return AttributeContainer.subscript.setter();
}

uint64_t ControlsButtonProvider.presentingControl.getter()
{
  return OUTLINED_FUNCTION_8_1();
}

uint64_t ControlsButtonProvider.debugDescription.getter()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;

  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ControlsButtonProvider.Type);
  v4._countAndFlagsBits = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_49(v4);
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = 0x7865746E6F63203ALL;
  v0._object = (void *)0xEC000000203D2074;
  String.append(_:)(v0);
  v5._countAndFlagsBits = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_49(v5);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0x206570616873203BLL;
  v1._object = (void *)0xEA0000000000203DLL;
  String.append(_:)(v1);
  v6._countAndFlagsBits = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_49(v6);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 15931;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  return 60;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ControlsButtonProvider()
{
  return ControlsButtonProvider.debugDescription.getter();
}

void sub_1BD4D75A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 168))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D75C8()
{
  double *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(double (**)(void))(v1 + 192))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D75EC(double *a1, uint64_t a2)
{
  (*(void (**)(double))(**(_QWORD **)a2 + 200))(*a1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D7614()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 216))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D763C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)v0 = (*(uint64_t (**)(void))(v1 + 248))();
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D7668()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 272))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D7690()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 296))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D76B8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 320))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D76E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 344))();
  v0[1] = v2;
  OUTLINED_FUNCTION_0();
}

void sub_1BD4D7708()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))(v1 + 368))();
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for ConversationControlsButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConversationControlsButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConversationControlsButtonProvider.__allocating_init(controlsManager:context:shape:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t type metadata accessor for ControlsButtonProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlsButtonProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlsButtonProvider.button.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ControlsButtonProvider.cnkContentAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ControlsButtonProvider.callbackCancellable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ControlsButtonProvider.backgroundStyle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ControlsButtonProvider.foregroundColor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ControlsButtonProvider.captureGroupName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ControlsButtonProvider.image.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ControlsButtonProvider.title.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ControlsButtonProvider.titleFont.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ControlsButtonProvider.__allocating_init(context:shape:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t dispatch thunk of ControlsButtonProvider.makeButton(frame:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ControlsButtonProvider.updateButtonConfiguration()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ControlsButtonProvider.buttonConfiguration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ControlsButtonProvider.buttonChanged()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ControlsButtonProvider.didLayoutSubviews(button:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ControlsButtonProvider.movedToWindow(button:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ControlsButtonProvider.startedContextMenu(button:animator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ControlsButtonProvider.endedContextMenu(button:animator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

ValueMetadata *type metadata accessor for ControlsButtonProvider.ImageGeometry()
{
  return &type metadata for ControlsButtonProvider.ImageGeometry;
}

uint64_t sub_1BD4D7938()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ControlsButtonProvider.defaultFlatBackgroundColor.getter(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return closure #1 in ControlsButtonProvider.textAttributesTransformer(font:)(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BD4D7978()
{
  return 8;
}

uint64_t sub_1BD4D7984()
{
  return swift_release();
}

uint64_t sub_1BD4D798C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BD4D79A0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t type metadata accessor for UIPointerStyle()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIPointerStyle;
  if (!lazy cache variable for type metadata for UIPointerStyle)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIPointerStyle);
  }
  return result;
}

uint64_t *AssetPackageDescriptor.phoneInCall.unsafeMutableAddressor()
{
  if (one-time initialization token for phoneInCall != -1)
    swift_once();
  return &static AssetPackageDescriptor.phoneInCall;
}

uint64_t *AssetPackageDescriptor.faceTimeVideo.unsafeMutableAddressor()
{
  if (one-time initialization token for faceTimeVideo != -1)
    swift_once();
  return &static AssetPackageDescriptor.faceTimeVideo;
}

uint64_t static AssetPackageDescriptor.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    type metadata accessor for NSObject();
    if ((static NSObject.== infix(_:_:)() & 1) != 0)
    {
      v7 = a1[4];
      v8 = a2[4];
      if (v7)
      {
        if (v8)
        {
          v9 = a1[3] == a2[3] && v7 == v8;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t AssetPackageDescriptor.packageName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id AssetPackageDescriptor.bundle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t AssetPackageDescriptor.activeState.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall AssetPackageDescriptor.init(packageName:bundle:activeState:)(ConversationKit::AssetPackageDescriptor *__return_ptr retstr, Swift::String packageName, NSBundle bundle, Swift::String_optional activeState)
{
  retstr->packageName = packageName;
  retstr->bundle = bundle;
  retstr->activeState = activeState;
}

uint64_t one-time initialization function for faceTimeVideo()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  return OUTLINED_FUNCTION_2_129((uint64_t)v0, &static AssetPackageDescriptor.faceTimeVideo);
}

uint64_t static AssetPackageDescriptor.faceTimeVideo.getter()
{
  void *v0;
  id v1;

  if (one-time initialization token for faceTimeVideo != -1)
    swift_once();
  OUTLINED_FUNCTION_0_155(&static AssetPackageDescriptor.faceTimeVideo);
  v1 = v0;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t one-time initialization function for phoneInCall()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
  return OUTLINED_FUNCTION_2_129((uint64_t)v0, &static AssetPackageDescriptor.phoneInCall);
}

uint64_t static AssetPackageDescriptor.phoneInCall.getter()
{
  void *v0;
  id v1;

  if (one-time initialization token for phoneInCall != -1)
    swift_once();
  OUTLINED_FUNCTION_0_155(&static AssetPackageDescriptor.phoneInCall);
  v1 = v0;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t destroy for AssetPackageDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AssetPackageDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AssetPackageDescriptor(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetPackageDescriptor(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetPackageDescriptor()
{
  return &type metadata for AssetPackageDescriptor;
}

void ConversationControlsRecipe.isNotice.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = OUTLINED_FUNCTION_5_2(a1, a2, a3, a4, a5, a6, a7, a8, v16);
  OUTLINED_FUNCTION_14_15(v8, v9, v10, v11, v12, v13, v14, v15, v17);
  OUTLINED_FUNCTION_18_6();
}

void ConversationControlsRecipe.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  id v7;
  Swift::String v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;

  v1 = v0;
  _StringGuts.grow(_:)(25);
  ConversationControlsType.debugDescription.getter();
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x3A656C746974202CLL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  v7 = objc_msgSend(*(id *)(v1 + 80), sel_string, v3, v5);
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_27_69();
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x746974627573202CLL;
  v8._object = (void *)0xEB000000003A656CLL;
  String.append(_:)(v8);
  v9 = *(_QWORD *)(v1 + 88);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
      goto LABEL_3;
LABEL_7:
    OUTLINED_FUNCTION_13_3();
    v14 = 0;
    v16 = (void *)0xE000000000000000;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_7;
LABEL_3:
  specialized Array._checkSubscript(_:wasNativeTypeChecked:)(0, (v9 & 0xC000000000000001) == 0, v9);
  if ((v9 & 0xC000000000000001) != 0)
    v11 = (id)MEMORY[0x1C3B73D18](0, v9);
  else
    v11 = *(id *)(v9 + 32);
  v12 = v11;
  OUTLINED_FUNCTION_13_3();
  v13 = OUTLINED_FUNCTION_34_49();

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v16 = v15;

LABEL_8:
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_49_0();
}

uint64_t default argument 1 of ConversationControlsRecipe.View.init(view:fallbackImage:hash:)()
{
  return 0;
}

void ConversationControlsRecipe.init(type:avatar:leadingAccessoryView:title:subtitles:subtitleLeadingBadge:fullSentence:showsInfoButton:showsSubtitleChevron:titleConfiguration:subtitleConfiguration:actions:leadingViewType:)(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, unint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, NSObject *a8@<X7>, uint64_t a9@<X8>, NSObject *a10, NSObject *a11, uint64_t a12, os_log_type_t a13, char a14, uint64_t a15, uint64_t a16, uint8_t *a17, void *a18, uint64_t a19, unsigned __int8 a20)
{
  _QWORD *v20;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject **v30;
  char *v31;
  char *v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v65;
  char v68[8];
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  unsigned __int8 v72;
  __int128 v73;
  __int128 v74;
  char v75;

  outlined init with take of ConversationControlsRecipe.Actions?((uint64_t)a17, (uint64_t)v68);
  v56 = v69;
  v57 = v70;
  v25 = (int *)OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_11_2();
  v28 = (uint64_t)v20 + *(int *)(v27 + 36);
  v59 = v28;
  v29 = type metadata accessor for AttributedString();
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v29);
  v30 = (NSObject **)((char *)v20 + v25[10]);
  v31 = (char *)v20 + v25[15];
  *((_QWORD *)v31 + 4) = 0;
  *(_OWORD *)v31 = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  v58 = (uint64_t)v31;
  v31[40] = -2;
  *((_BYTE *)v20 + v25[16]) = 0;
  v32 = (char *)v20 + v25[17];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v32[16] = -1;
  v33 = (char *)v20 + v25[18];
  *(_QWORD *)v33 = 1;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 40) = 0u;
  *(_OWORD *)(v33 + 56) = 0u;
  v33[72] = 0;
  outlined init with copy of ConversationControlsType(a1, (uint64_t)v20);
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a5;
  v20[10] = a6;
  v20[11] = a7;
  *v30 = a8;
  v30[1] = a10;
  v30[2] = a11;
  v65 = a6;
  outlined copy of ConversationControlsRecipe.View?(a8, a10);
  v60 = a3;
  v61 = a4;
  outlined copy of ConversationControlsRecipe.View?(a3, a4);
  v34 = a2;
  outlined assign with copy of AttributedString?(a12, v59);
  *((_BYTE *)v20 + v25[11]) = a13;
  *((_BYTE *)v20 + v25[12]) = a14;
  *(_QWORD *)((char *)v20 + v25[13]) = a15;
  *(_QWORD *)((char *)v20 + v25[14]) = a16;
  v35 = *(void **)v32;
  v36 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = a18;
  *((_QWORD *)v32 + 1) = a19;
  LOBYTE(a4) = v32[16];
  v32[16] = a20;
  outlined copy of LeadingViewType?(a18, a19, a20);
  outlined consume of LeadingViewType?(v35, v36, a4);
  outlined init with take of ConversationControlsRecipe.Actions?((uint64_t)a17, (uint64_t)&v71);
  if (v72 >= 0xFEu)
  {
    outlined consume of LeadingViewType?(a18, a19, a20);
    outlined consume of ConversationControlsRecipe.View?(a8, a10);
    OUTLINED_FUNCTION_19_78();
    outlined consume of ConversationControlsRecipe.View?(v60, v61);

LABEL_16:
    OUTLINED_FUNCTION_53_46(v37, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    OUTLINED_FUNCTION_41_41();
    outlined assign with take of Participant?((uint64_t)a17, v58, &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
    OUTLINED_FUNCTION_43_59((uint64_t)v20);
    OUTLINED_FUNCTION_33_66(a9, 0);
    outlined destroy of AccountUpdateNotice((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    return;
  }
  outlined init with take of ConversationControlsType(&v71, &v73);
  outlined init with take of ConversationControlsType(&v73, &v74);
  if ((v75 & 0x80000000) == 0)
  {
    OUTLINED_FUNCTION_1_148();
    v38 = a8;
    v39 = a18;
    v40 = v65;
    if (a5 > 2)
    {
      if (one-time initialization token for conversationControls != -1)
        swift_once();
      v41 = type metadata accessor for Logger();
      v42 = (void *)OUTLINED_FUNCTION_2_130(v41, (uint64_t)&static Logger.conversationControls);
      v43 = static os_log_type_t.fault.getter();
      if (OUTLINED_FUNCTION_22_84(v43))
      {
        OUTLINED_FUNCTION_21_87();
        v44 = OUTLINED_FUNCTION_13_112();
        OUTLINED_FUNCTION_39_65(v44);
        OUTLINED_FUNCTION_12_108(4.8149e-34);
        v45 = OUTLINED_FUNCTION_37_52();
        v47 = OUTLINED_FUNCTION_36_56(v45, v46);
        OUTLINED_FUNCTION_8_113(v47);
        OUTLINED_FUNCTION_27();
        OUTLINED_FUNCTION_20_83();
        OUTLINED_FUNCTION_20_83();
        v48 = "Too many trailing actions (%s)";
        goto LABEL_14;
      }
      goto LABEL_17;
    }
LABEL_15:
    outlined consume of LeadingViewType?(v39, a19, a20);
    OUTLINED_FUNCTION_15_98(v38, a10);

    OUTLINED_FUNCTION_15_98(v60, v61);
    v37 = OUTLINED_FUNCTION_48_48();
    goto LABEL_16;
  }
  v75 &= ~0x80u;
  OUTLINED_FUNCTION_1_148();
  v38 = a8;
  v39 = a18;
  v40 = v65;
  if (a5 <= 5)
    goto LABEL_15;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v49 = type metadata accessor for Logger();
  v42 = (void *)OUTLINED_FUNCTION_2_130(v49, (uint64_t)&static Logger.conversationControls);
  v50 = static os_log_type_t.fault.getter();
  if (OUTLINED_FUNCTION_22_84(v50))
  {
    OUTLINED_FUNCTION_21_87();
    v51 = OUTLINED_FUNCTION_13_112();
    OUTLINED_FUNCTION_39_65(v51);
    OUTLINED_FUNCTION_12_108(4.8149e-34);
    v52 = OUTLINED_FUNCTION_37_52();
    v54 = OUTLINED_FUNCTION_36_56(v52, v53);
    OUTLINED_FUNCTION_8_113(v54);
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_20_83();
    OUTLINED_FUNCTION_20_83();
    v48 = "Too many buttonShelf actions (%s)";
LABEL_14:
    _os_log_impl(&dword_1BD004000, v38, a13, v48, a17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }
LABEL_17:
  OUTLINED_FUNCTION_4_139();
  OUTLINED_FUNCTION_19_78();
  OUTLINED_FUNCTION_15_98(v60, v61);

  OUTLINED_FUNCTION_52_44();
  OUTLINED_FUNCTION_48_48();
  OUTLINED_FUNCTION_48_48();
  v55 = outlined consume of ConversationControlsRecipe.Actions(v38, v56, a19, v57, a18);
  OUTLINED_FUNCTION_53_46(v55, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_41_41();
  outlined destroy of AccountUpdateNotice((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  OUTLINED_FUNCTION_33_66(a9, 1);
}

uint64_t SystemApertureElement.init(leadingView:trailingView:minimalView:detachedMinimalView:maximumLayoutMode:alertingStyle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  return result;
}

void ConversationControlsRecipe.supportsAlerting.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;
  int8x8_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int8x16_t v21;
  int8x16_t v22;
  char v23;

  v8 = OUTLINED_FUNCTION_5_2(a1, a2, a3, a4, a5, a6, a7, a8, v19);
  if (v23 != 6
    || ((v16 = vorrq_s8(v21, v22),
         v17 = vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)),
         v20 == 5)
      ? (v18 = *(_QWORD *)&v17 == 0)
      : (v18 = 0),
        !v18))
  {
    OUTLINED_FUNCTION_14_15(v8, v9, v10, v11, v12, v13, v14, v15, v20);
  }
  OUTLINED_FUNCTION_18_6();
}

uint64_t SystemApertureElement.AlertingStyle.alertRequiredForTransition(from:)(unsigned __int8 a1, char a2)
{
  _BOOL4 v2;

  v2 = a1 > 0xFDu || (a1 & 0xC0) != 64;
  return (a2 & 0x80) == 0 || v2;
}

void ConversationControlsRecipe.buttonShelfActions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 60);
  v2 = *(char *)(v1 + 40);
  if ((int)v2 <= -3)
    OUTLINED_FUNCTION_25_69(v2, (_QWORD *)v1);
  OUTLINED_FUNCTION_0();
}

void EphemeralAlert.description.getter(id a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  id v7;
  id v8;

  if (a2)
  {
    v4 = a2;
    v5 = OUTLINED_FUNCTION_34_49();
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_10_3();
    v6._countAndFlagsBits = 2108704;
    v6._object = (void *)0xE300000000000000;
    String.append(_:)(v6);
    v7 = objc_msgSend(v4, sel_string, v2, v3);
    OUTLINED_FUNCTION_75_2();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_27_69();

    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = objc_msgSend(a1, sel_string);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

  }
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_49_0();
}

uint64_t ConversationControlsRecipe.isMicIndicatorVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v0 = type metadata accessor for ConversationControlsAction();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_30_6();
  v2 = ConversationControlsRecipe.allActions.getter();
  v3 = swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v6 = *(_QWORD *)(v1 + 72);
    v7 = v4 - 1;
    do
    {
      v8 = v7;
      static ConversationControlsAction.== infix(_:_:)();
      v9 = v3;
      if ((v3 & 1) != 0)
        break;
      v7 = v8 - 1;
      v5 += v6;
    }
    while (v8);
  }
  else
  {
    v9 = 0;
  }
  OUTLINED_FUNCTION_35_2(v3, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsAction);
  OUTLINED_FUNCTION_27();
  return v9 & 1;
}

void ConversationControlsRecipe.copyWithoutSystemApertureViews()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  outlined init with copy of ConversationControlsRecipe(v1, a1);
  v3 = a1 + *(int *)(OUTLINED_FUNCTION_28_1() + 72);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(void **)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(void **)(v3 + 32);
  v8 = *(_QWORD *)(v3 + 40);
  v9 = *(void **)(v3 + 48);
  v10 = *(_QWORD *)(v3 + 56);
  v11 = *(_QWORD *)(v3 + 64);
  v12 = *(_BYTE *)(v3 + 72);
  if (*(_QWORD *)v3 == 1)
  {
    v13 = 1;
  }
  else
  {
    outlined consume of SystemApertureElement?(*(void **)v3, v4, v5, v6, v7, v8, v9);
    v13 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)v3 = v13;
  *(_QWORD *)(v3 + 8) = v4;
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 32) = v7;
  *(_QWORD *)(v3 + 40) = v8;
  *(_QWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 56) = v10;
  *(_QWORD *)(v3 + 64) = v11;
  *(_BYTE *)(v3 + 72) = v12;
}

void ConversationControlsRecipe.showsDefaultHUDOnTap.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  static ConversationControlsType.== infix(_:_:)(v0);
  OUTLINED_FUNCTION_14_15(v1, v2, v3, v4, v5, v6, v7, v8, 24);
  OUTLINED_FUNCTION_18_6();
}

void ConversationControlsRecipe.trailingActions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 60);
  v2 = *(char *)(v1 + 40);
  if ((v2 & 0x80000000) == 0)
    OUTLINED_FUNCTION_25_69(v2, (_QWORD *)v1);
  OUTLINED_FUNCTION_0();
}

void SystemApertureElement.leadingView.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SystemApertureElement.trailingView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 16);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SystemApertureElement.minimalView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void SystemApertureElement.detachedMinimalView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 48);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

uint64_t SystemApertureElement.maximumLayoutMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SystemApertureElement.maximumLayoutMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*SystemApertureElement.maximumLayoutMode.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t SystemApertureElement.AlertingStyle.debugDescription.getter(unsigned __int8 a1)
{
  Swift::String v1;
  Swift::String v2;

  if (!(a1 >> 6))
    return 0x676E697472656C61;
  if (a1 >> 6 != 1)
    return 6583656;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v1);
  OUTLINED_FUNCTION_13_3();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0xD000000000000011;
}

uint64_t static SystemApertureElement.AlertingStyle.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  char v2;

  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40)
        goto LABEL_9;
      goto LABEL_6;
    }
    if (a2 == 128)
    {
      v2 = 1;
      return v2 & 1;
    }
LABEL_9:
    v2 = 0;
    return v2 & 1;
  }
  if (a2 >= 0x40u)
    goto LABEL_9;
LABEL_6:
  v2 = ((a1 & 1) == 0) ^ a2;
  return v2 & 1;
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance SystemApertureElement.AlertingStyle()
{
  unsigned __int8 *v0;

  return SystemApertureElement.AlertingStyle.debugDescription.getter(*v0);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SystemApertureElement.AlertingStyle(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static SystemApertureElement.AlertingStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t SystemApertureElement.alertingStyle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

double SystemApertureElement.copyWithoutViews()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  double result;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_BYTE *)(v1 + 72);
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = v2;
  *(_BYTE *)(a1 + 72) = v3;
  return result;
}

void ConversationControlsRecipe.View.fallbackImage.getter(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipe.View.fallbackImage.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ConversationControlsRecipe.View.fallbackImage.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.View.hash.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ConversationControlsRecipe.LabelConfiguration.numberOfLines.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ConversationControlsRecipe.LabelConfiguration.numberOfLines.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

ConversationKit::ConversationControlsRecipe::LabelConfiguration __swiftcall ConversationControlsRecipe.LabelConfiguration.init()()
{
  return (ConversationKit::ConversationControlsRecipe::LabelConfiguration)1;
}

uint64_t default argument 0 of ConversationControlsRecipe.LabelConfiguration.init(numberOfLines:)()
{
  return 1;
}

void *ConversationControlsRecipe.maxTrailingActions.unsafeMutableAddressor()
{
  return &static ConversationControlsRecipe.maxTrailingActions;
}

uint64_t static ConversationControlsRecipe.maxTrailingActions.getter()
{
  return 2;
}

void *ConversationControlsRecipe.maxButtonShelfActions.unsafeMutableAddressor()
{
  return &static ConversationControlsRecipe.maxButtonShelfActions;
}

uint64_t static ConversationControlsRecipe.maxButtonShelfActions.getter()
{
  return 5;
}

uint64_t ConversationControlsRecipe.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined init with copy of ConversationControlsType(v1, a1);
}

uint64_t ConversationControlsRecipe.type.setter(uint64_t a1)
{
  uint64_t v1;

  return outlined assign with take of ConversationControlsType(a1, v1);
}

uint64_t (*ConversationControlsRecipe.type.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.avatar.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 48);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipe.avatar.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ConversationControlsRecipe.avatar.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.leadingAccessoryView.getter()
{
  uint64_t v0;

  outlined copy of ConversationControlsRecipe.View?(*(id *)(v0 + 56), *(void **)(v0 + 64));
  OUTLINED_FUNCTION_18();
}

void ConversationControlsRecipe.leadingAccessoryView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  outlined consume of ConversationControlsRecipe.View?(*(void **)(v3 + 56), *(void **)(v3 + 64));
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ConversationControlsRecipe.leadingAccessoryView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id ConversationControlsRecipe.title.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

void ConversationControlsRecipe.title.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ConversationControlsRecipe.title.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.subtitles.getter()
{
  return swift_bridgeObjectRetain();
}

void ConversationControlsRecipe.subtitles.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*ConversationControlsRecipe.subtitles.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.fullSentence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 36), v2, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipe.fullSentence.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_47_33(v1, v0 + *(int *)(v1 + 36), (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.fullSentence.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.subtitleLeadingBadge.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_1();
  outlined copy of ConversationControlsRecipe.View?(*(id *)(v0 + *(int *)(v1 + 40)), *(void **)(v0 + *(int *)(v1 + 40) + 8));
  OUTLINED_FUNCTION_18();
}

void ConversationControlsRecipe.subtitleLeadingBadge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + *(int *)(OUTLINED_FUNCTION_28_1() + 40);
  outlined consume of ConversationControlsRecipe.View?(*(void **)v7, *(void **)(v7 + 8));
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
  OUTLINED_FUNCTION_18();
}

double (*ConversationControlsRecipe.subtitleLeadingBadge.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.showsInfoButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 44));
}

void ConversationControlsRecipe.showsInfoButton.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_28_1() + 44)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.showsInfoButton.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.showsSubtitleChevron.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 48));
}

void ConversationControlsRecipe.showsSubtitleChevron.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_28_1() + 48)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.showsSubtitleChevron.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.titleConfiguration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 52));
}

void ConversationControlsRecipe.titleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_28_1() + 52)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.titleConfiguration.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.subtitleConfiguration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 56));
}

void ConversationControlsRecipe.subtitleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_28_1() + 56)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.subtitleConfiguration.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.actions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 60), v2, &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipe.actions.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_47_33(v1, v0 + *(int *)(v1 + 60), &demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.actions.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUI.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  _BYTE v6[40];
  char v7;

  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_40_59(4);
  v7 = 6;
  static ConversationControlsType.== infix(_:_:)(v1);
  v4 = v3;
  outlined destroy of ConversationControlsType((uint64_t)v6);
  v5 = OUTLINED_FUNCTION_43_59(v1);
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_40_59(24);
    v7 = 6;
    static ConversationControlsType.== infix(_:_:)(v0);
    v5 = outlined destroy of ConversationControlsType((uint64_t)v6);
  }
  OUTLINED_FUNCTION_35_2(v5, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  OUTLINED_FUNCTION_18();
}

uint64_t ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 64));
}

void ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_28_1() + 64)) = a1;
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.allowsDeepLinkToFullScreenCallUIWhenCustom.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.allowsCallDetailsPresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_30_6();
  v2 = OUTLINED_FUNCTION_43_59(v0);
  OUTLINED_FUNCTION_35_2(v2, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  OUTLINED_FUNCTION_18();
}

id ConversationControlsRecipe.leadingViewType.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 68);
  v2 = *(id *)v1;
  outlined copy of LeadingViewType?(*(id *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  return v2;
}

void ConversationControlsRecipe.leadingViewType.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + *(int *)(OUTLINED_FUNCTION_28_1() + 68);
  outlined consume of LeadingViewType?(*(id *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3;
  OUTLINED_FUNCTION_18();
}

double (*ConversationControlsRecipe.leadingViewType.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

void ConversationControlsRecipe.systemApertureElement.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_124_2(v0 + *(int *)(v1 + 72), v2, (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
  OUTLINED_FUNCTION_0();
}

void ConversationControlsRecipe.systemApertureElement.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_47_33(v1, v0 + *(int *)(v1 + 72), (uint64_t *)&demangling cache variable for type metadata for SystemApertureElement?);
  OUTLINED_FUNCTION_0();
}

double (*ConversationControlsRecipe.systemApertureElement.modify())(_QWORD)
{
  OUTLINED_FUNCTION_28_1();
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ConversationControlsRecipe.requiresAnimation(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  char v25;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  v5 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  outlined init with copy of FeatureEligibility?(a1, v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v2, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
LABEL_5:
    v13 = 1;
    return v13 & 1;
  }
  outlined init with take of ConversationControlsRecipe(v2, (uint64_t)v11);
  OUTLINED_FUNCTION_49_50(23);
  v25 = 6;
  static ConversationControlsType.== infix(_:_:)(v1);
  OUTLINED_FUNCTION_45_45();
  outlined init with copy of ConversationControlsRecipe((uint64_t)v11, (uint64_t)v8);
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_50(22);
    v25 = 6;
    static ConversationControlsType.== infix(_:_:)((uint64_t)v8);
    OUTLINED_FUNCTION_45_45();
    outlined destroy of AccountUpdateNotice((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    OUTLINED_FUNCTION_35_2(v12, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
    goto LABEL_5;
  }
  outlined destroy of AccountUpdateNotice((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  v14 = *(int *)(v5 + 60);
  v15 = (_QWORD *)(v1 + v14);
  v16 = *(char *)(v1 + v14 + 40);
  if ((int)v16 <= -3)
  {
    v17 = *v15;
    outlined copy of ConversationControlsRecipe.Actions(*v15, v15[1], v15[2], v15[3], v15[4], v16);
    v14 = *(int *)(v5 + 60);
  }
  else
  {
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = &v11[v14];
  v19 = v18[40];
  if ((int)v19 <= -3)
    outlined copy of ConversationControlsRecipe.Actions(*(_QWORD *)v18, *((_QWORD *)v18 + 1), *((_QWORD *)v18 + 2), *((_QWORD *)v18 + 3), *((_QWORD *)v18 + 4), v19);
  v24 = v17;
  specialized Array.append<A>(contentsOf:)();
  specialized Set.init<A>(_:)();
  v24 = v20;
  if (one-time initialization token for avLessLeaveConfirmationActions != -1)
    swift_once();
  v23[1] = static ConversationControlsAction.avLessLeaveConfirmationActions;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<ConversationControlsAction>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ConversationControlsAction]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type Set<ConversationControlsAction> and conformance Set<A>, &demangling cache variable for type metadata for Set<ConversationControlsAction>, MEMORY[0x1E0DEB3E0]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [ConversationControlsAction] and conformance [A], &demangling cache variable for type metadata for [ConversationControlsAction], MEMORY[0x1E0DEAF50]);
  lazy protocol witness table accessor for type ConversationControlsAction and conformance ConversationControlsAction();
  v13 = Collection<>.contains<A>(_:)();
  v21 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35_2(v21, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
  return v13 & 1;
}

void ConversationControlsRecipe.wantsSessionSizeClass.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int8x16_t v17;
  int8x8_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  int8x16_t v22;
  int8x16_t v23;
  char v24;

  v8 = OUTLINED_FUNCTION_5_2(a1, a2, a3, a4, a5, a6, a7, a8, v20);
  if (v24 != 6
    || (v21 != 5 ? (v16 = v21 == 2) : (v16 = 1),
        (v17 = vorrq_s8(v22, v23),
         v18 = vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)),
         v16)
      ? (v19 = *(_QWORD *)&v18 == 0)
      : (v19 = 0),
        !v19))
  {
    OUTLINED_FUNCTION_14_15(v8, v9, v10, v11, v12, v13, v14, v15, v21);
  }
  OUTLINED_FUNCTION_18_6();
}

uint64_t static ConversationControlsRecipe.Actions.== infix(_:_:)(__int128 *a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  BOOL v34;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;

  v1 = outlined init with take of ConversationControlsType(a1, &v46);
  v9 = v50;
  if ((v50 & 0x80) != 0)
  {
    LOBYTE(v50) = v50 & 0x7F;
    v18 = v46;
    v19 = v47;
    v20 = v48;
    v21 = v49;
    OUTLINED_FUNCTION_50_45((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v37);
    v28 = v45;
    if ((v45 & 0x80) == 0)
      goto LABEL_13;
    LOBYTE(v45) = v45 & 0x7F;
    v29 = v41;
    v30 = v42;
    v31 = v43;
    v32 = *(double *)&v44;
    specialized static Array<A>.== infix(_:_:)(v18, v39, v22, v23, v24, v25, v26, v27, v39, v41, v42, v43, v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48, *(uint64_t *)&v49,
      v50);
    if ((v33 & 1) == 0)
      goto LABEL_13;
    v34 = *((_QWORD *)&v18 + 1) == v29 && v19 == v30;
    if (!v34 || v20 != v31)
      goto LABEL_13;
    if ((v9 & 1) != 0)
    {
      if ((v28 & 1) == 0)
        goto LABEL_13;
    }
    else if ((v28 & 1) != 0 || v21 != v32)
    {
      goto LABEL_13;
    }
    v17 = 1;
    return v17 & 1;
  }
  v10 = v46;
  OUTLINED_FUNCTION_50_45((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v37);
  if ((char)v45 < 0)
  {
LABEL_13:
    v17 = 0;
    return v17 & 1;
  }
  specialized static Array<A>.== infix(_:_:)(v10, v38, v11, v12, v13, v14, v15, v16, v38, v40, v42, v43, v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48, *(uint64_t *)&v49,
    v50);
  return v17 & 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ConversationControlsRecipe.Actions(__int128 *a1, __int128 *a2)
{
  __int128 v4[3];
  _OWORD v5[3];

  outlined init with take of ConversationControlsType(a1, v4);
  outlined init with take of ConversationControlsType(a2, v5);
  return static ConversationControlsRecipe.Actions.== infix(_:_:)(v4) & 1;
}

uint64_t ConversationControlsRecipe.allActions.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (uint64_t *)(v0 + *(int *)(OUTLINED_FUNCTION_28_1() + 60));
  v2 = *((unsigned __int8 *)v1 + 40);
  if (v2 <= 0xFD)
  {
    if ((v2 & 0x80) != 0)
      v4 = MEMORY[0x1E0DEE9D8];
    else
      v4 = *v1;
    outlined copy of ConversationControlsRecipe.Actions(*v1, v1[1], v1[2], v1[3], v1[4], v2);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  specialized Array.append<A>(contentsOf:)();
  return v4;
}

void EphemeralAlert.subtitle.getter(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  OUTLINED_FUNCTION_0();
}

uint64_t EphemeralAlert.wantsAutomaticDismissal.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t EphemeralAlert.wantsAutomaticDismissal.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*EphemeralAlert.wantsAutomaticDismissal.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void protocol witness for CustomStringConvertible.description.getter in conformance EphemeralAlert()
{
  id *v0;

  EphemeralAlert.description.getter(*v0, v0[1]);
}

uint64_t outlined init with take of ConversationControlsRecipe.Actions?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsRecipe.Actions?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConversationControlsRecipe()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ConversationControlsRecipe;
  if (!type metadata singleton initialization cache for ConversationControlsRecipe)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t outlined assign with copy of AttributedString?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined release of ConversationControlsRecipe.Actions?(uint64_t a1)
{
  outlined consume of ConversationControlsRecipe.Actions?(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

unint64_t lazy protocol witness table accessor for type ConversationControlsAction and conformance ConversationControlsAction()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction;
  if (!lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction)
  {
    v1 = type metadata accessor for ConversationControlsAction();
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ConversationControlsAction, v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ConversationControlsAction and conformance ConversationControlsAction);
  }
  return result;
}

void destroy for SystemApertureElement(id *a1)
{

}

uint64_t initializeWithCopy for SystemApertureElement(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v10;
  __int128 v11;
  __int128 v12;

  v3 = *a2;
  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  v10 = (void *)v4;
  v11 = a2[2];
  v12 = a2[3];
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  v5 = (id)v3;
  v6 = v10;
  v7 = (id)v11;
  v8 = (id)v12;
  return a1;
}

uint64_t assignWithCopy for SystemApertureElement(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v4;

  *(_QWORD *)(a1 + 8) = v5;
  v8 = *(void **)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v11 = v8;

  *(_QWORD *)(a1 + 24) = v9;
  v12 = *(void **)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  v15 = v12;

  *(_QWORD *)(a1 + 40) = v13;
  v16 = *(void **)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v16;
  v19 = v16;

  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for SystemApertureElement(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemApertureElement(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemApertureElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for SystemApertureElement()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t getEnumTagSinglePayload for SystemApertureElement.AlertingStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7E)
  {
    if (a2 + 130 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 130) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 131;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v5 >= 0x7D)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for SystemApertureElement.AlertingStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 130 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 130) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7D)
    return ((uint64_t (*)(void))((char *)&loc_1BD4D9F3C + 4 * byte_1BD664CA5[v4]))();
  *a1 = a2 - 126;
  return ((uint64_t (*)(void))((char *)sub_1BD4D9F70 + 4 * byte_1BD664CA0[v4]))();
}

uint64_t sub_1BD4D9F70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4D9F78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BD4D9F80);
  return result;
}

uint64_t sub_1BD4D9F98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BD4D9FA0);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1BD4D9FA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BD4D9FAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for SystemApertureElement.AlertingStyle(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return v1 & 1 | 2u;
}

_BYTE *destructiveProjectEnumData for SystemApertureElement.AlertingStyle(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *destructiveInjectEnumTag for SystemApertureElement.AlertingStyle(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
    v2 = *result & 1 | ((_BYTE)a2 << 6);
  else
    v2 = a2 & 1 | 0x80;
  *result = v2;
  return result;
}

void type metadata accessor for SystemApertureElement.AlertingStyle()
{
  OUTLINED_FUNCTION_34_0();
}

void destroy for LeadingViewType(id *a1)
{
  outlined consume of PreCallControlsContext(*a1);
}

uint64_t initializeBufferWithCopyOfBuffer for LeadingViewType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of PreCallControlsContext(*(id *)a2);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LeadingViewType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  outlined copy of PreCallControlsContext(*(id *)a2);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  outlined consume of PreCallControlsContext(v6);
  return a1;
}

uint64_t assignWithTake for LeadingViewType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  outlined consume of PreCallControlsContext(v4);
  return a1;
}

void type metadata accessor for LeadingViewType()
{
  OUTLINED_FUNCTION_34_0();
}

char *initializeBufferWithCopyOfBuffer for ConversationControlsRecipe(char *a1, char **a2, int *a3)
{
  char *v4;
  int v5;
  __int128 v7;
  char *v8;
  char *v9;
  char v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  unsigned int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(*((_BYTE *)a2 + 40))
    {
      case 0:
        v7 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(char *, char **))(v7 - 8))(a1, a2);
        v4[40] = 0;
        break;
      case 1:
        v9 = a2[1];
        *(_QWORD *)v4 = *a2;
        *((_QWORD *)v4 + 1) = v9;
        v10 = 1;
        goto LABEL_8;
      case 2:
        v11 = *a2;
        *(_QWORD *)a1 = *a2;
        a1[40] = 2;
        v12 = v11;
        break;
      case 3:
        v13 = a2[1];
        *(_QWORD *)v4 = *a2;
        *((_QWORD *)v4 + 1) = v13;
        v10 = 3;
LABEL_8:
        v4[40] = v10;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[40] = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v14 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v14;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
        break;
    }
    v15 = a2[7];
    v16 = a2[6];
    *((_QWORD *)v4 + 6) = v16;
    v17 = v16;
    if (v15)
    {
      v19 = a2[8];
      v18 = a2[9];
      *((_QWORD *)v4 + 7) = v15;
      *((_QWORD *)v4 + 8) = v19;
      *((_QWORD *)v4 + 9) = v18;
      v20 = v15;
      v21 = v19;
    }
    else
    {
      *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
      *((_QWORD *)v4 + 9) = a2[9];
    }
    v23 = a2[10];
    v22 = a2[11];
    *((_QWORD *)v4 + 10) = v23;
    *((_QWORD *)v4 + 11) = v22;
    v24 = a3[9];
    v25 = &v4[v24];
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for AttributedString();
    v28 = v23;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    v30 = a3[10];
    v31 = &v4[v30];
    v32 = (uint64_t)a2 + v30;
    v33 = *(void **)v32;
    if (*(_QWORD *)v32)
    {
      v35 = *(void **)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 16);
      *(_QWORD *)v31 = v33;
      *((_QWORD *)v31 + 1) = v35;
      *((_QWORD *)v31 + 2) = v34;
      v36 = v33;
      v37 = v35;
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *((_QWORD *)v31 + 2) = *(_QWORD *)(v32 + 16);
    }
    v38 = a3[12];
    v4[a3[11]] = *((_BYTE *)a2 + a3[11]);
    v4[v38] = *((_BYTE *)a2 + v38);
    v39 = a3[14];
    *(_QWORD *)&v4[a3[13]] = *(char **)((char *)a2 + a3[13]);
    *(_QWORD *)&v4[v39] = *(char **)((char *)a2 + v39);
    v40 = a3[15];
    v41 = &v4[v40];
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = *((unsigned __int8 *)v42 + 40);
    if (v43 <= 0xFD)
    {
      v45 = *v42;
      v46 = v42[1];
      v47 = v42[2];
      v48 = v42[3];
      v49 = v42[4];
      outlined copy of ConversationControlsRecipe.Actions(*v42, v46, v47, v48, v49, *((unsigned __int8 *)v42 + 40));
      *(_QWORD *)v41 = v45;
      *((_QWORD *)v41 + 1) = v46;
      *((_QWORD *)v41 + 2) = v47;
      *((_QWORD *)v41 + 3) = v48;
      *((_QWORD *)v41 + 4) = v49;
      v41[40] = v43;
    }
    else
    {
      v44 = *((_OWORD *)v42 + 1);
      *(_OWORD *)v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v44;
      *(_OWORD *)(v41 + 25) = *(_OWORD *)((char *)v42 + 25);
    }
    v50 = a3[17];
    v4[a3[16]] = *((_BYTE *)a2 + a3[16]);
    v51 = &v4[v50];
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = *((unsigned __int8 *)a2 + v50 + 16);
    if (v53 == 255)
    {
      *(_OWORD *)v51 = *(_OWORD *)v52;
      v51[16] = *((_BYTE *)v52 + 16);
    }
    else
    {
      v54 = v53 & 1;
      v55 = *v52;
      v56 = v52[1];
      outlined copy of PreCallControlsContext((id)*v52);
      *(_QWORD *)v51 = v55;
      *((_QWORD *)v51 + 1) = v56;
      v51[16] = v54;
    }
    v57 = a3[18];
    v58 = &v4[v57];
    v59 = (uint64_t)a2 + v57;
    v60 = *(char **)((char *)a2 + v57);
    if (v60 == (void *)1)
    {
      memcpy(v58, (const void *)v59, 0x49uLL);
    }
    else
    {
      v61 = *(_QWORD *)(v59 + 8);
      *(_QWORD *)v58 = v60;
      *((_QWORD *)v58 + 1) = v61;
      v67 = *(_OWORD *)(v59 + 16);
      v68 = *(_OWORD *)(v59 + 32);
      *((_OWORD *)v58 + 1) = v67;
      *((_OWORD *)v58 + 2) = v68;
      v69 = *(_OWORD *)(v59 + 48);
      *((_OWORD *)v58 + 3) = v69;
      *((_QWORD *)v58 + 8) = *(_QWORD *)(v59 + 64);
      v58[72] = *(_BYTE *)(v59 + 72);
      v62 = v60;
      v63 = (id)v67;
      v64 = (id)v68;
      v65 = (id)v69;
    }
  }
  return v4;
}

void destroy for ConversationControlsRecipe(uint64_t a1, int *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;

  switch(*(_BYTE *)(a1 + 40))
  {
    case 0:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 2:

      break;
    case 5:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  v4 = *(void **)(a1 + 56);
  if (v4)
  {

  }
  swift_bridgeObjectRelease();
  v5 = a1 + a2[9];
  v6 = type metadata accessor for AttributedString();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (id *)(a1 + a2[10]);
  if (*v7)
  {

  }
  v8 = a1 + a2[15];
  if (*(unsigned __int8 *)(v8 + 40) <= 0xFDu)
    outlined consume of ConversationControlsRecipe.Actions(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32));
  v9 = a1 + a2[17];
  if (*(unsigned __int8 *)(v9 + 16) != 255)
    outlined consume of PreCallControlsContext(*(id *)v9);
  v10 = (id *)(a1 + a2[18]);
  if (*v10 != (id)1)
  {

  }
}

uint64_t initializeWithCopy for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unsigned int v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  switch(*(_BYTE *)(a2 + 40))
  {
    case 0:
      v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
      break;
    case 1:
      v7 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = 1;
      goto LABEL_6;
    case 2:
      v9 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 2;
      v10 = v9;
      break;
    case 3:
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v11;
      v8 = 3;
LABEL_6:
      *(_BYTE *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      break;
    case 5:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 5;
      swift_unknownObjectRetain();
      break;
    default:
      v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  v13 = *(void **)(a2 + 56);
  v14 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v14;
  v15 = v14;
  if (v13)
  {
    v17 = *(void **)(a2 + 64);
    v16 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 72) = v16;
    v18 = v13;
    v19 = v17;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v21 = *(void **)(a2 + 80);
  v20 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v21;
  *(_QWORD *)(a1 + 88) = v20;
  v22 = a3[9];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = type metadata accessor for AttributedString();
  v26 = v21;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = a2 + v28;
  v31 = *(void **)v30;
  if (*(_QWORD *)v30)
  {
    v33 = *(void **)(v30 + 8);
    v32 = *(_QWORD *)(v30 + 16);
    *v29 = v31;
    v29[1] = v33;
    v29[2] = v32;
    v34 = v31;
    v35 = v33;
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[2] = *(_QWORD *)(v30 + 16);
  }
  v36 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  v37 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  v38 = a3[15];
  v39 = a1 + v38;
  v40 = (uint64_t *)(a2 + v38);
  v41 = *((unsigned __int8 *)v40 + 40);
  if (v41 <= 0xFD)
  {
    v43 = *v40;
    v44 = v40[1];
    v45 = v40[2];
    v46 = v40[3];
    v47 = v40[4];
    outlined copy of ConversationControlsRecipe.Actions(*v40, v44, v45, v46, v47, *((unsigned __int8 *)v40 + 40));
    *(_QWORD *)v39 = v43;
    *(_QWORD *)(v39 + 8) = v44;
    *(_QWORD *)(v39 + 16) = v45;
    *(_QWORD *)(v39 + 24) = v46;
    *(_QWORD *)(v39 + 32) = v47;
    *(_BYTE *)(v39 + 40) = v41;
  }
  else
  {
    v42 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v42;
    *(_OWORD *)(v39 + 25) = *(_OWORD *)((char *)v40 + 25);
  }
  v48 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v49 = a1 + v48;
  v50 = (uint64_t *)(a2 + v48);
  v51 = *(unsigned __int8 *)(a2 + v48 + 16);
  if (v51 == 255)
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_BYTE *)(v49 + 16) = *((_BYTE *)v50 + 16);
  }
  else
  {
    v52 = v51 & 1;
    v53 = *v50;
    v54 = v50[1];
    outlined copy of PreCallControlsContext((id)*v50);
    *(_QWORD *)v49 = v53;
    *(_QWORD *)(v49 + 8) = v54;
    *(_BYTE *)(v49 + 16) = v52;
  }
  v55 = a3[18];
  v56 = (_QWORD *)(a1 + v55);
  v57 = a2 + v55;
  v58 = *(void **)(a2 + v55);
  if (v58 == (void *)1)
  {
    memcpy(v56, (const void *)v57, 0x49uLL);
  }
  else
  {
    v59 = *(_QWORD *)(v57 + 8);
    *v56 = v58;
    v56[1] = v59;
    v65 = *(_OWORD *)(v57 + 16);
    v66 = *(_OWORD *)(v57 + 32);
    *((_OWORD *)v56 + 1) = v65;
    *((_OWORD *)v56 + 2) = v66;
    v67 = *(_OWORD *)(v57 + 48);
    *((_OWORD *)v56 + 3) = v67;
    v56[8] = *(_QWORD *)(v57 + 64);
    *((_BYTE *)v56 + 72) = *(_BYTE *)(v57 + 72);
    v60 = v58;
    v61 = (id)v65;
    v62 = (id)v66;
    v63 = (id)v67;
  }
  return a1;
}

uint64_t assignWithCopy for ConversationControlsRecipe(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  void *v13;
  id v14;
  _OWORD *v15;
  void *v16;
  void *v17;
  _OWORD *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  int v78;
  int v79;
  char v80;
  __int128 v81;
  char v82;
  void *v83;
  uint64_t v84;
  id v85;
  char v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  id v100;
  void *v101;
  uint64_t v102;
  void *v103;
  id v104;
  void *v105;
  uint64_t v106;
  void *v107;
  id v108;
  void *v109;
  uint64_t v110;
  void *v111;
  id v112;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;

  if ((__int128 *)a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    switch(*((_BYTE *)a2 + 40))
    {
      case 0:
        v6 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        *(_BYTE *)(a1 + 40) = 0;
        break;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v7 = 1;
        goto LABEL_7;
      case 2:
        v8 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 2;
        v9 = v8;
        break;
      case 3:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v7 = 3;
LABEL_7:
        *(_BYTE *)(a1 + 40) = v7;
        swift_bridgeObjectRetain();
        break;
      case 5:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 5;
        swift_unknownObjectRetain();
        break;
      default:
        v10 = *a2;
        v11 = a2[1];
        *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
        break;
    }
  }
  v12 = *(void **)(a1 + 48);
  v13 = (void *)*((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v13;
  v14 = v13;

  v15 = (_OWORD *)(a1 + 56);
  v16 = *(void **)(a1 + 56);
  v18 = (__int128 *)((char *)a2 + 56);
  v17 = (void *)*((_QWORD *)a2 + 7);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 56) = v17;
      v19 = v17;

      v20 = *(void **)(a1 + 64);
      v21 = (void *)*((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v21;
      v22 = v21;

      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View((id *)(a1 + 56));
      v26 = *((_QWORD *)a2 + 9);
      *v15 = *v18;
      *(_QWORD *)(a1 + 72) = v26;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 56) = v17;
    v23 = (void *)*((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 64) = v23;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    v24 = v17;
    v25 = v23;
  }
  else
  {
    v27 = *v18;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *v15 = v27;
  }
  v28 = (void *)*((_QWORD *)a2 + 10);
  v29 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v28;
  v30 = v28;

  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[9];
  v32 = (void *)(a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for AttributedString();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34);
  if (EnumTagSinglePayload)
  {
    if (!v36)
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v37 = *(_QWORD *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v32, v34);
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, char *, uint64_t))(v37 + 24))(v32, v33, v34);
LABEL_23:
  v39 = a3[10];
  v40 = a1 + v39;
  v41 = (__int128 *)((char *)a2 + v39);
  v42 = *(void **)(a1 + v39);
  v43 = *(void **)((char *)a2 + v39);
  if (v42)
  {
    if (v43)
    {
      *(_QWORD *)v40 = v43;
      v44 = v43;

      v45 = *(void **)(v40 + 8);
      v46 = (void *)*((_QWORD *)v41 + 1);
      *(_QWORD *)(v40 + 8) = v46;
      v47 = v46;

      v48 = *((_QWORD *)v41 + 2);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.View((id *)v40);
      v48 = *((_QWORD *)v41 + 2);
      *(_OWORD *)v40 = *v41;
    }
    *(_QWORD *)(v40 + 16) = v48;
  }
  else if (v43)
  {
    *(_QWORD *)v40 = v43;
    v49 = (void *)*((_QWORD *)v41 + 1);
    *(_QWORD *)(v40 + 8) = v49;
    *(_QWORD *)(v40 + 16) = *((_QWORD *)v41 + 2);
    v50 = v43;
    v51 = v49;
  }
  else
  {
    v114 = *v41;
    *(_QWORD *)(v40 + 16) = *((_QWORD *)v41 + 2);
    *(_OWORD *)v40 = v114;
  }
  *(_BYTE *)(a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  v52 = a3[15];
  v53 = (uint64_t *)(a1 + v52);
  v54 = (uint64_t *)((char *)a2 + v52);
  v55 = *((unsigned __int8 *)a2 + v52 + 40);
  if (*(unsigned __int8 *)(a1 + v52 + 40) <= 0xFDu)
  {
    if (v55 <= 0xFD)
    {
      v65 = *v54;
      v66 = v54[1];
      v67 = v54[2];
      v68 = v54[3];
      v69 = v54[4];
      outlined copy of ConversationControlsRecipe.Actions(v65, v66, v67, v68, v69, v55);
      v70 = *v53;
      v71 = v53[1];
      v72 = v53[2];
      v73 = v53[3];
      v74 = v53[4];
      *v53 = v65;
      v53[1] = v66;
      v53[2] = v67;
      v53[3] = v68;
      v53[4] = v69;
      *((_BYTE *)v53 + 40) = v55;
      outlined consume of ConversationControlsRecipe.Actions(v70, v71, v72, v73, v74);
    }
    else
    {
      outlined destroy of ConversationControlsRecipe.Actions(v53);
      v58 = *(_OWORD *)((char *)v54 + 25);
      v59 = *((_OWORD *)v54 + 1);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v59;
      *(_OWORD *)((char *)v53 + 25) = v58;
    }
  }
  else if (v55 <= 0xFD)
  {
    v60 = *v54;
    v61 = v54[1];
    v62 = v54[2];
    v63 = v54[3];
    v64 = v54[4];
    outlined copy of ConversationControlsRecipe.Actions(v60, v61, v62, v63, v64, v55);
    *v53 = v60;
    v53[1] = v61;
    v53[2] = v62;
    v53[3] = v63;
    v53[4] = v64;
    *((_BYTE *)v53 + 40) = v55;
  }
  else
  {
    v56 = *(_OWORD *)v54;
    v57 = *((_OWORD *)v54 + 1);
    *(_OWORD *)((char *)v53 + 25) = *(_OWORD *)((char *)v54 + 25);
    *(_OWORD *)v53 = v56;
    *((_OWORD *)v53 + 1) = v57;
  }
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v75 = a3[17];
  v76 = a1 + v75;
  v77 = (__int128 *)((char *)a2 + v75);
  v78 = *(unsigned __int8 *)(a1 + v75 + 16);
  v79 = *((unsigned __int8 *)a2 + v75 + 16);
  if (v78 == 255)
  {
    if (v79 == 255)
    {
      v81 = *v77;
      *(_BYTE *)(v76 + 16) = *((_BYTE *)v77 + 16);
      *(_OWORD *)v76 = v81;
    }
    else
    {
      v86 = v79 & 1;
      v87 = *(void **)v77;
      v88 = *((_QWORD *)v77 + 1);
      outlined copy of PreCallControlsContext(v87);
      *(_QWORD *)v76 = v87;
      *(_QWORD *)(v76 + 8) = v88;
      *(_BYTE *)(v76 + 16) = v86;
    }
  }
  else if (v79 == 255)
  {
    outlined destroy of LeadingViewType((id *)v76);
    v80 = *((_BYTE *)v77 + 16);
    *(_OWORD *)v76 = *v77;
    *(_BYTE *)(v76 + 16) = v80;
  }
  else
  {
    v82 = v79 & 1;
    v83 = *(void **)v77;
    v84 = *((_QWORD *)v77 + 1);
    outlined copy of PreCallControlsContext(v83);
    v85 = *(id *)v76;
    *(_QWORD *)v76 = v83;
    *(_QWORD *)(v76 + 8) = v84;
    *(_BYTE *)(v76 + 16) = v82;
    outlined consume of PreCallControlsContext(v85);
  }
  v89 = a3[18];
  v90 = a1 + v89;
  v91 = (uint64_t)a2 + v89;
  v92 = *(void **)(a1 + v89);
  v93 = *(void **)v91;
  if (v92 != (void *)1)
  {
    if (v93 != (void *)1)
    {
      v99 = *(_QWORD *)(v91 + 8);
      *(_QWORD *)v90 = v93;
      v100 = v93;

      *(_QWORD *)(v90 + 8) = v99;
      v101 = *(void **)(v91 + 16);
      v102 = *(_QWORD *)(v91 + 24);
      v103 = *(void **)(v90 + 16);
      *(_QWORD *)(v90 + 16) = v101;
      v104 = v101;

      *(_QWORD *)(v90 + 24) = v102;
      v105 = *(void **)(v91 + 32);
      v106 = *(_QWORD *)(v91 + 40);
      v107 = *(void **)(v90 + 32);
      *(_QWORD *)(v90 + 32) = v105;
      v108 = v105;

      *(_QWORD *)(v90 + 40) = v106;
      v109 = *(void **)(v91 + 48);
      v110 = *(_QWORD *)(v91 + 56);
      v111 = *(void **)(v90 + 48);
      *(_QWORD *)(v90 + 48) = v109;
      v112 = v109;

      *(_QWORD *)(v90 + 56) = v110;
      *(_QWORD *)(v90 + 64) = *(_QWORD *)(v91 + 64);
      *(_BYTE *)(v90 + 72) = *(_BYTE *)(v91 + 72);
      return a1;
    }
    outlined destroy of SystemApertureElement((id *)v90);
    goto LABEL_49;
  }
  if (v93 == (void *)1)
  {
LABEL_49:
    memcpy((void *)v90, (const void *)v91, 0x49uLL);
    return a1;
  }
  v94 = *(_QWORD *)(v91 + 8);
  *(_QWORD *)v90 = v93;
  *(_QWORD *)(v90 + 8) = v94;
  v115 = *(_OWORD *)(v91 + 16);
  *(_OWORD *)(v90 + 16) = v115;
  v116 = *(_OWORD *)(v91 + 32);
  *(_OWORD *)(v90 + 32) = v116;
  v117 = *(_OWORD *)(v91 + 48);
  *(_OWORD *)(v90 + 48) = v117;
  *(_QWORD *)(v90 + 64) = *(_QWORD *)(v91 + 64);
  *(_BYTE *)(v90 + 72) = *(_BYTE *)(v91 + 72);
  v95 = v93;
  v96 = (id)v115;
  v97 = (id)v116;
  v98 = (id)v117;
  return a1;
}

uint64_t initializeWithTake for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = a3[9];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  v11 = type metadata accessor for AttributedString();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[10];
  v14 = a3[11];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v17 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = *(_OWORD *)((char *)v20 + 25);
  v23 = a3[16];
  v24 = a3[17];
  v25 = *(_BYTE *)(a2 + v23);
  *(_OWORD *)((char *)v19 + 25) = v22;
  *(_BYTE *)(a1 + v23) = v25;
  v26 = a1 + v24;
  *(_OWORD *)v26 = *(_OWORD *)(a2 + v24);
  LOBYTE(v23) = *(_BYTE *)(a2 + v24 + 16);
  v27 = a3[18];
  *(_BYTE *)(v26 + 16) = v23;
  memcpy((void *)(a1 + v27), (const void *)(a2 + v27), 0x49uLL);
  return a1;
}

uint64_t assignWithTake for ConversationControlsRecipe(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unsigned int v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;

  if (a1 != a2)
  {
    outlined destroy of ConversationControlsType(a1);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v8 = *(void **)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 56);
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 56) = v9;

      v10 = *(void **)(a1 + 64);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      goto LABEL_8;
    }
    outlined destroy of ConversationControlsRecipe.View((id *)(a1 + 56));
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
LABEL_8:
  v11 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v12 = a3[9];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = type metadata accessor for AttributedString();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_13:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_14:
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = (_QWORD *)(a2 + v20);
  v23 = *(void **)(a1 + v20);
  if (v23)
  {
    if (*v22)
    {
      *(_QWORD *)v21 = *v22;

      v24 = *(void **)(v21 + 8);
      *(_QWORD *)(v21 + 8) = v22[1];

      goto LABEL_19;
    }
    outlined destroy of ConversationControlsRecipe.View((id *)v21);
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
LABEL_19:
  *(_QWORD *)(v21 + 16) = v22[2];
  v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[15];
  v28 = (uint64_t *)(a1 + v27);
  v29 = a2 + v27;
  if (*(unsigned __int8 *)(a1 + v27 + 40) > 0xFDu)
  {
LABEL_22:
    v31 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
    *(_OWORD *)((char *)v28 + 25) = *(_OWORD *)(v29 + 25);
    goto LABEL_24;
  }
  v30 = *(unsigned __int8 *)(v29 + 40);
  if (v30 > 0xFD)
  {
    outlined destroy of ConversationControlsRecipe.Actions(v28);
    goto LABEL_22;
  }
  v32 = *(_QWORD *)(v29 + 32);
  v33 = *v28;
  v34 = v28[1];
  v35 = v28[2];
  v36 = v28[3];
  v37 = v28[4];
  v38 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v38;
  v28[4] = v32;
  *((_BYTE *)v28 + 40) = v30;
  outlined consume of ConversationControlsRecipe.Actions(v33, v34, v35, v36, v37);
LABEL_24:
  v39 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  if (*(unsigned __int8 *)(a1 + v39 + 16) == 255)
  {
LABEL_27:
    *(_OWORD *)v40 = *(_OWORD *)v41;
    *(_BYTE *)(v40 + 16) = *(_BYTE *)(v41 + 16);
    goto LABEL_29;
  }
  v42 = *(unsigned __int8 *)(v41 + 16);
  if (v42 == 255)
  {
    outlined destroy of LeadingViewType((id *)v40);
    goto LABEL_27;
  }
  v43 = *(id *)v40;
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_BYTE *)(v40 + 16) = v42 & 1;
  outlined consume of PreCallControlsContext(v43);
LABEL_29:
  v44 = a3[18];
  v45 = a1 + v44;
  v46 = (_QWORD *)(a2 + v44);
  v47 = *(void **)(a1 + v44);
  if (v47 != (void *)1)
  {
    if (*v46 != 1)
    {
      v48 = v46[1];
      *(_QWORD *)v45 = *v46;

      v49 = v46[2];
      v50 = v46[3];
      v51 = *(void **)(v45 + 16);
      *(_QWORD *)(v45 + 8) = v48;
      *(_QWORD *)(v45 + 16) = v49;

      v52 = v46[4];
      v53 = v46[5];
      v54 = *(void **)(v45 + 32);
      *(_QWORD *)(v45 + 24) = v50;
      *(_QWORD *)(v45 + 32) = v52;

      v55 = v46[6];
      v56 = v46[7];
      v57 = *(void **)(v45 + 48);
      *(_QWORD *)(v45 + 40) = v53;
      *(_QWORD *)(v45 + 48) = v55;

      v58 = v46[8];
      *(_QWORD *)(v45 + 56) = v56;
      *(_QWORD *)(v45 + 64) = v58;
      *(_BYTE *)(v45 + 72) = *((_BYTE *)v46 + 72);
      return a1;
    }
    outlined destroy of SystemApertureElement((id *)v45);
  }
  memcpy((void *)v45, v46, 0x49uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationControlsRecipe()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1BD4DB4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ConversationControlsRecipe()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BD4DB55C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 80) = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

void type metadata completion function for ConversationControlsRecipe()
{
  unint64_t v0;

  type metadata accessor for AttributedString?();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for AttributedString?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for AttributedString?)
  {
    type metadata accessor for AttributedString();
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for AttributedString?);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ConversationControlsRecipe.View(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for ConversationControlsRecipe.View(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ConversationControlsRecipe.View(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for ConversationControlsRecipe.View()
{
  OUTLINED_FUNCTION_34_0();
}

void type metadata accessor for ConversationControlsRecipe.LabelConfiguration()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t destroy for ConversationControlsRecipe.Actions(_QWORD *a1)
{
  return outlined consume of ConversationControlsRecipe.Actions(*a1, a1[1], a1[2], a1[3], a1[4]);
}

uint64_t initializeWithCopy for ConversationControlsRecipe.Actions(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((unsigned __int8 *)a2 + 40);
  outlined copy of ConversationControlsRecipe.Actions(*a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t *assignWithCopy for ConversationControlsRecipe.Actions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((unsigned __int8 *)a2 + 40);
  outlined copy of ConversationControlsRecipe.Actions(*a2, v4, v5, v6, v7, v8);
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = a1[3];
  v13 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  *((_BYTE *)a1 + 40) = v8;
  outlined consume of ConversationControlsRecipe.Actions(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t *assignWithTake for ConversationControlsRecipe.Actions(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *a1;
  v7 = a1[1];
  v6 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v10;
  a1[4] = v3;
  *((_BYTE *)a1 + 40) = v4;
  outlined consume of ConversationControlsRecipe.Actions(v5, v7, v6, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationControlsRecipe.Actions(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (*(_BYTE *)(a1 + 40) & 0x7E | (*(unsigned __int8 *)(a1 + 40) >> 7)) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ConversationControlsRecipe.Actions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 32) = 0;
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 40) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t getEnumTag for ConversationControlsRecipe.Actions(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40) >> 7;
}

uint64_t destructiveProjectEnumData for ConversationControlsRecipe.Actions(uint64_t result)
{
  *(_BYTE *)(result + 40) &= ~0x80u;
  return result;
}

uint64_t destructiveInjectEnumTag for ConversationControlsRecipe.Actions(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = *(_BYTE *)(result + 40) & 1 | (a2 << 7);
  return result;
}

void type metadata accessor for ConversationControlsRecipe.Actions()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t initializeBufferWithCopyOfBuffer for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EphemeralAlert(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EphemeralAlert(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EphemeralAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EphemeralAlert()
{
  OUTLINED_FUNCTION_34_0();
}

uint64_t OUTLINED_FUNCTION_39_65(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = result;
  return result;
}

id DeviceWaveformView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DeviceWaveformView.barColor.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void DeviceWaveformView.barColor.setter(void *a1)
{
  DeviceWaveformView.barColor.setter(a1, &OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_barColor);
}

void DeviceWaveformView.barColor.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

id DeviceWaveformView.filterType.getter()
{
  id *v0;

  OUTLINED_FUNCTION_1_7();
  return OUTLINED_FUNCTION_27_27(*v0);
}

void DeviceWaveformView.filterType.setter(void *a1)
{
  DeviceWaveformView.barColor.setter(a1, &OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_filterType);
}

void DeviceWaveformView.barColor.setter(void *a1, _QWORD *a2)
{
  char *v2;
  void **v4;
  void *v5;
  id v6;

  v4 = (void **)&v2[*a2];
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  objc_msgSend(v2, sel_setNeedsLayout);
  OUTLINED_FUNCTION_9_0();
}

void DeviceWaveformView.filterType.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path setter for DeviceWaveformView.power : DeviceWaveformView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xA8);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t DeviceWaveformView.power.getter()
{
  OUTLINED_FUNCTION_1_7();
  return swift_bridgeObjectRetain();
}

void DeviceWaveformView.power.setter(uint64_t a1)
{
  char *v1;
  char *v3;

  v3 = &v1[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_power];
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v3 = a1;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNeedsLayout);
  OUTLINED_FUNCTION_9_0();
}

void DeviceWaveformView.power.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void DeviceWaveformView.barColor.modify(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) != 0)
    OUTLINED_FUNCTION_0();
  else
    objc_msgSend(*(id *)(a1 + 24), sel_setNeedsLayout);
}

id DeviceWaveformView.init()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_barColor;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_systemGreenColor);
  v4 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_filterType;
  type metadata accessor for NSString();
  *(_QWORD *)&v3[v4] = OUTLINED_FUNCTION_8_114();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_power] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews] = v5;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DeviceWaveformView();
  v6 = objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  DeviceWaveformView.configureViews()();

  return v6;
}

unint64_t type metadata accessor for NSString()
{
  unint64_t result;

  result = lazy cache variable for type metadata for NSString;
  if (!lazy cache variable for type metadata for NSString)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSString);
  }
  return result;
}

uint64_t type metadata accessor for DeviceWaveformView()
{
  return objc_opt_self();
}

id DeviceWaveformView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DeviceWaveformView.init(coder:)()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_barColor;
  *(_QWORD *)&v1[v2] = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
  v3 = OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_filterType;
  type metadata accessor for NSString();
  *(_QWORD *)&v1[v3] = OUTLINED_FUNCTION_8_114();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_power] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews] = v4;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall DeviceWaveformView.layoutSubviews()()
{
  _QWORD *v0;
  double Width;
  double Height;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(void);
  double v7;
  uint64_t (*v8)(void);
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  float v15;
  unint64_t v16;
  double v17;
  double v18;
  CGFloat v19;
  void *v20;
  id v21;
  id v22;
  objc_super v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for DeviceWaveformView();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  OUTLINED_FUNCTION_2_39();
  Width = CGRectGetWidth(v24);
  OUTLINED_FUNCTION_2_39();
  Height = CGRectGetHeight(v25);
  OUTLINED_FUNCTION_1_7();
  v3 = MEMORY[0x1F32EC000];
  if (MEMORY[0x1F32EC000] >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  v4 = *(_QWORD *)((MEMORY[0x1F32EC000] & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_12;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    Width = (Width + -18.75) / 14.0;
    v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0);
    v7 = Height - (Width + Width) - Width;
    v8 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70);
    Height = Width * 0.5;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1C3B73D18](v5, v3);
      else
        v9 = *(id *)(v3 + 8 * v5 + 32);
      v10 = v9;
      v11 = *(_QWORD *)(v6() + 16);
      v12 = swift_bridgeObjectRelease();
      v13 = 0.0;
      if (v5 < v11)
      {
        v14 = ((uint64_t (*)(uint64_t, double))v6)(v12, 0.0);
        if (v5 >= *(_QWORD *)(v14 + 16))
        {
          __break(1u);
          goto LABEL_14;
        }
        v15 = *(float *)(v14 + 4 * v5 + 32);
        swift_bridgeObjectRelease();
        v13 = v15;
      }
      v16 = v5 + 1;
      v17 = Width + v7 * v13;
      v18 = (Width + 1.25) * (double)(uint64_t)v5 + 1.25;
      objc_msgSend(v0, sel_bounds);
      v19 = CGRectGetHeight(v26) * 0.5;
      v20 = (void *)v8();
      objc_msgSend(v10, sel_setBackgroundColor_, v20);

      objc_msgSend(v10, sel_setBounds_, 0.0, 0.0, Width, v17);
      v21 = OUTLINED_FUNCTION_11_104();
      objc_msgSend(v21, sel_setPosition_, v18, v19);

      v22 = OUTLINED_FUNCTION_11_104();
      objc_msgSend(v22, sel_setCornerRadius_, Width * 0.5);

      v5 = v16;
      if (v4 == v16)
        goto LABEL_12;
    }
  }
  __break(1u);
}

void DeviceWaveformView.configureViews()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  uint64_t (*v5)(void);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_layer);
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (void *)OUTLINED_FUNCTION_28_7(*v0);
  objc_msgSend(v2, sel_setCompositingFilter_, v4);

  v5 = *(uint64_t (**)(void))((*v3 & *v1) + 0x70);
  v6 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC15ConversationKit18DeviceWaveformView_bandViews);
  v7 = 14;
  v8 = *MEMORY[0x1E0CD2A68];
  do
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
    v10 = objc_msgSend(v9, sel_layer);
    objc_msgSend(v10, sel_setAnchorPoint_, 0.0, 0.5);

    v11 = (void *)v5();
    objc_msgSend(v9, sel_setBackgroundColor_, v11);

    v12 = OUTLINED_FUNCTION_9_104();
    objc_msgSend(v12, sel_setAllowsEdgeAntialiasing_, 1);

    v13 = OUTLINED_FUNCTION_9_104();
    objc_msgSend(v13, sel_setCornerCurve_, v8);

    objc_msgSend(v1, sel_addSubview_, v9);
    OUTLINED_FUNCTION_2_0();
    v14 = v9;
    MEMORY[0x1C3B7301C]();
    if (*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    --v7;
  }
  while (v7);
}

id DeviceWaveformView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void DeviceWaveformView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DeviceWaveformView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceWaveformView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BD4DC678()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0x70))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4DC6B0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = OUTLINED_FUNCTION_28_7(v1);
  OUTLINED_FUNCTION_0();
}

void sub_1BD4DC6E0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_0();
  *v0 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & v1) + 0xA0))();
  OUTLINED_FUNCTION_0();
}

uint64_t method lookup function for DeviceWaveformView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DeviceWaveformView.barColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DeviceWaveformView.filterType.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DeviceWaveformView.power.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t ThoughtBubble.init(anchorPoint:cornerRadius:growsRightwards:isPad:scale:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a7;
  *(double *)(a3 + 24) = a6;
  *(_BYTE *)(a3 + 32) = result;
  *(_BYTE *)(a3 + 33) = a2;
  return result;
}

double CGRect.scaledBy(_:anchor:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a2 * a6 + a4 - a1 * a6 * a2;
}

double ThoughtBubble.anchorPoint.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ThoughtBubble.anchorPoint.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*ThoughtBubble.anchorPoint.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ThoughtBubble.scale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ThoughtBubble.scale.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void ThoughtBubble.cornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*ThoughtBubble.cornerRadius.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ThoughtBubble.growsRightwards.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ThoughtBubble.growsRightwards.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*ThoughtBubble.growsRightwards.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t ThoughtBubble.isPad.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t ThoughtBubble.isPad.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*ThoughtBubble.isPad.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

double ThoughtBubble.animatableData.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ThoughtBubble.animatableData.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

double (*ThoughtBubble.animatableData.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 16);
  return ThoughtBubble.animatableData.modify;
}

double ThoughtBubble.animatableData.modify(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) = *(_QWORD *)a1;
  return result;
}

double ThoughtBubble.intermediateBubbleScale.getter()
{
  uint64_t v0;
  double v1;
  double result;

  v1 = *(double *)(v0 + 16);
  result = 0.0;
  if (v1 >= 0.1)
  {
    result = 1.0;
    if (v1 < 0.3)
      return (v1 + -0.1) / 0.2;
  }
  return result;
}

double ThoughtBubble.thoughtBubbleScale.getter()
{
  uint64_t v0;
  double v1;
  double result;

  v1 = *(double *)(v0 + 16);
  result = 0.0;
  if (v1 > 0.2)
  {
    if (v1 < 0.5)
      return (v1 + -0.2) / 1.8;
    else
      return (v1 + -0.4) / 0.6;
  }
  return result;
}

double ThoughtBubble.anchorBubbleRect(in:)(double a1)
{
  uint64_t v1;
  double v2;
  double v3;

  v2 = -8.0;
  if ((*(_BYTE *)(v1 + 33) & 1) == 0)
    v2 = -6.0;
  v3 = *(double *)v1 + a1;
  if ((*(_BYTE *)(v1 + 32) & 1) == 0)
    v2 = -(v2 + 8.0);
  return v3 + v2;
}

double ThoughtBubble.intermediateBubbleRect(in:)(double a1)
{
  uint64_t v1;
  double v2;
  double v3;

  v2 = -3.0;
  if ((*(_BYTE *)(v1 + 33) & 1) == 0)
    v2 = 0.0;
  v3 = *(double *)v1 + a1;
  if ((*(_BYTE *)(v1 + 32) & 1) == 0)
    v2 = -(v2 + 14.0);
  return v3 + v2;
}

double ThoughtBubble.path(in:)@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  Path.init(_:)();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t closure #1 in ThoughtBubble.path(in:)(double a1, CGFloat a2, CGFloat a3, double a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  _QWORD v41[2];
  double v42;
  double v43;
  double v44;
  double v45;
  CGFloat v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  CGAffineTransform transform;
  CGRect v53;
  CGRect v54;
  __C::CGRect v55;
  __C::CGRect v56;

  v42 = a4;
  v10 = type metadata accessor for RoundedCornerStyle();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v14 = ThoughtBubble.intermediateBubbleRect(in:)(a1);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = ThoughtBubble.intermediateBubbleScale.getter();
  static UnitPoint.center.getter();
  v51 = v20 * v21;
  v44 = v14 + v18 * v22 - v18 * v21 * v22;
  v45 = v18 * v21;
  v43 = v16 + v20 * v23 - v20 * v21 * v23;
  v24 = v42;
  v25 = ThoughtBubble.anchorBubbleRect(in:)(a1);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = *(double *)(a6 + 16);
  if (v32 >= 0.2)
    v33 = 1.0;
  else
    v33 = v32 / 0.2;
  static UnitPoint.center.getter();
  v49 = v31 * v33;
  v50 = v29 * v33;
  v47 = v27 + v31 * v35 - v35 * (v31 * v33);
  v48 = v25 + v29 * v34 - v34 * (v29 * v33);
  v41[1] = ThoughtBubble.thoughtBubbleScale.getter();
  v41[0] = v36;
  v38 = v43;
  v37 = v44;
  v53.origin.x = v44;
  v53.origin.y = v43;
  v39 = v45;
  v53.size.width = v45;
  v53.size.height = v51;
  CGRectGetMidX(v53);
  v54.origin.x = a1;
  v54.origin.y = v46;
  v54.size.width = a3;
  v54.size.height = v24;
  CGRectGetWidth(v54);
  transform.a = 1.0;
  transform.b = 0.0;
  transform.c = 0.0;
  transform.d = 1.0;
  transform.tx = 0.0;
  transform.ty = 0.0;
  v55.origin.x = v37;
  v55.origin.y = v38;
  v55.size.width = v39;
  v55.size.height = v51;
  Path.addEllipse(in:transform:)(v55, &transform);
  v56.origin.y = v47;
  v56.origin.x = v48;
  v56.size.height = v49;
  v56.size.width = v50;
  Path.addEllipse(in:transform:)(v56, &transform);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0CDB0C0], v10);
  Path.addRoundedRect(in:cornerSize:style:transform:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t partial apply for closure #1 in ThoughtBubble.path(in:)(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in ThoughtBubble.path(in:)(*(double *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(double *)(v1 + 48), a1, *(_QWORD *)(v1 + 16));
}

double protocol witness for Shape.path(in:) in conformance ThoughtBubble@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;
  __int128 v8;
  __int128 v9;
  __int16 v10;

  v3 = v1[1];
  v8 = *v1;
  v9 = v3;
  v10 = *((_WORD *)v1 + 16);
  ThoughtBubble.path(in:)((uint64_t)v6);
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v7;
  return result;
}

void protocol witness for Animatable.animatableData.getter in conformance ThoughtBubble(double *a1@<X8>)
{
  *a1 = ThoughtBubble.animatableData.getter();
}

void protocol witness for Animatable.animatableData.setter in conformance ThoughtBubble(double *a1)
{
  ThoughtBubble.animatableData.setter(*a1);
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance ThoughtBubble(_QWORD *a1))()
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 16);
  return protocol witness for Animatable.animatableData.modify in conformance ThoughtBubble;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ThoughtBubble()
{
  lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return static Shape._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ThoughtBubble()
{
  lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return static Shape._makeViewList(view:inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance ThoughtBubble()
{
  lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble();
  return Shape.body.getter();
}

__n128 ThoughtBubble.inset(by:)@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v1 + 32);
  return result;
}

unint64_t lazy protocol witness table accessor for type ThoughtBubble and conformance ThoughtBubble()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ThoughtBubble, &type metadata for ThoughtBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ThoughtBubble, &type metadata for ThoughtBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ThoughtBubble, &type metadata for ThoughtBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble;
  if (!lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble)
  {
    result = MEMORY[0x1C3B750C8](&protocol conformance descriptor for ThoughtBubble, &type metadata for ThoughtBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ThoughtBubble and conformance ThoughtBubble);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>;
  if (!lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ShapeView<ThoughtBubble, ForegroundStyle>);
    result = MEMORY[0x1C3B750C8](MEMORY[0x1E0CD8668], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ShapeView<ThoughtBubble, ForegroundStyle> and conformance _ShapeView<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for InsettableShape.InsetShape : InsettableShape in ThoughtBubble()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BD4DD0F4(double *a1@<X8>)
{
  *a1 = ThoughtBubble.animatableData.getter();
}

void sub_1BD4DD11C(double *a1)
{
  ThoughtBubble.animatableData.setter(*a1);
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ThoughtBubble(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 34))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThoughtBubble(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThoughtBubble()
{
  return &type metadata for ThoughtBubble;
}

uint64_t EffectsViewConstraintManager.__allocating_init(containingGuide:localParticipantView:effectsView:)(void *a1, void *a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(a1, a2, a3);
  return v6;
}

uint64_t EffectsViewConstraintManager.init(containingGuide:localParticipantView:effectsView:)(void *a1, void *a2, id a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v44;

  v6 = v3;
  objc_msgSend(a3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v10 = OUTLINED_FUNCTION_5_10();
  *(_OWORD *)(v10 + 16) = xmmword_1BD644140;
  if (a2)
  {
    v11 = a2;
    v12 = OUTLINED_FUNCTION_9((uint64_t)v11, sel_topAnchor);
    v13 = OUTLINED_FUNCTION_2_11((uint64_t)v12, sel_topAnchor);
    v14 = OUTLINED_FUNCTION_0_157();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v10 + 32) = v5;
    v16 = OUTLINED_FUNCTION_9(v15, sel_leadingAnchor);
    v17 = OUTLINED_FUNCTION_2_11((uint64_t)v16, sel_leadingAnchor);
    v18 = OUTLINED_FUNCTION_0_157();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v10 + 40) = v5;
    v20 = OUTLINED_FUNCTION_9(v19, sel_trailingAnchor);
    v21 = OUTLINED_FUNCTION_2_11((uint64_t)v20, sel_trailingAnchor);
    v22 = OUTLINED_FUNCTION_0_157();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v10 + 48) = v5;
    v24 = OUTLINED_FUNCTION_9(v23, sel_bottomAnchor);
    v25 = OUTLINED_FUNCTION_2_11((uint64_t)v24, sel_bottomAnchor);
    v26 = OUTLINED_FUNCTION_0_157();
    OUTLINED_FUNCTION_8_5();

    *(_QWORD *)(v10 + 56) = v5;
    OUTLINED_FUNCTION_7_123();
    v27 = v44;

  }
  else
  {
    v28 = OUTLINED_FUNCTION_9(v10, sel_topAnchor);
    v29 = OUTLINED_FUNCTION_2_2((uint64_t)v28, sel_topAnchor);
    v30 = OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_1_4();

    *(_QWORD *)(v10 + 32) = v4;
    v32 = OUTLINED_FUNCTION_9(v31, sel_leadingAnchor);
    v33 = OUTLINED_FUNCTION_2_2((uint64_t)v32, sel_leadingAnchor);
    v34 = OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_1_4();

    *(_QWORD *)(v10 + 40) = v4;
    v36 = OUTLINED_FUNCTION_9(v35, sel_trailingAnchor);
    v37 = OUTLINED_FUNCTION_2_2((uint64_t)v36, sel_trailingAnchor);
    v38 = OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_1_4();

    *(_QWORD *)(v10 + 48) = v4;
    v40 = OUTLINED_FUNCTION_9(v39, sel_bottomAnchor);
    v41 = OUTLINED_FUNCTION_2_2((uint64_t)v40, sel_bottomAnchor);
    v42 = OUTLINED_FUNCTION_0_17();
    OUTLINED_FUNCTION_1_4();

    *(_QWORD *)(v10 + 56) = v4;
    OUTLINED_FUNCTION_7_123();
    v27 = v44;

  }
  *(_QWORD *)(v6 + 16) = v27;
  return v6;
}

uint64_t EffectsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t EffectsViewConstraintManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EffectsViewConstraintManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EffectsViewConstraintManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for EffectsViewConstraintManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffectsViewConstraintManager.__allocating_init(containingGuide:localParticipantView:effectsView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EffectsViewConstraintManager.constraintsForLayout(_:in:deviceOrientation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t ParticipantAlertView.ViewModel.text.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id ParticipantAlertView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

char *ParticipantAlertView.init()()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjectType;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  Class isa;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  objc_super v57;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3F58]);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, sel_init);
  v6 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  v57.receiver = v5;
  v57.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v57, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  v9 = *(void **)&v7[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
  v10 = one-time initialization token for alertTitle;
  v11 = v7;
  v12 = v9;
  if (v10 != -1)
    swift_once();
  objc_msgSend(v12, sel_setFont_, static Fonts.ParticipantViews.alertTitle);

  v13 = one-time initialization token for alertText;
  v14 = *(id *)&v7[v8];
  if (v13 != -1)
    swift_once();
  objc_msgSend(v14, sel_setTextColor_, static Colors.ParticipantViews.alertText);

  v15 = *(void **)&v7[v8];
  objc_msgSend(v15, sel_setNumberOfLines_, 0);
  objc_msgSend(v15, sel_setTextAlignment_, 1);
  v16 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  v17 = *(id *)&v11[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView];
  UIVisualEffectView.applyEffect(_:)(ConversationKit_PlatformEffectViewStyle_light);

  v18 = *(void **)&v11[v16];
  objc_msgSend(v18, sel__setContinuousCornerRadius_, 10.0);
  objc_msgSend(v11, sel_addSubview_, v18);
  v19 = *(void **)&v7[v8];
  objc_msgSend(v11, sel_addSubview_, v19);
  v20 = v18;
  v21 = v19;
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v22 = *(void **)&v11[v16];
  LODWORD(v23) = 1148846080;
  objc_msgSend(v22, sel_setContentHuggingPriority_forAxis_, 1, v23);
  v24 = objc_msgSend(v22, sel_widthAnchor);
  v25 = objc_msgSend(v24, sel_constraintGreaterThanOrEqualToConstant_, 240.0);

  v26 = objc_msgSend(*(id *)&v11[v16], sel_heightAnchor);
  v53 = v8;
  v27 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToConstant_, 47.0);

  v56 = (id)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BD64C100;
  *(_QWORD *)(v28 + 32) = v25;
  *(_QWORD *)(v28 + 40) = v27;
  v29 = *(void **)&v11[v16];
  v55 = v25;
  v54 = v27;
  v30 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(v29, sel_leadingAnchor), sel_leadingAnchor);
  v31 = OUTLINED_FUNCTION_5_84((uint64_t)v30, sel_constraintGreaterThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 48) = v1;
  v32 = OUTLINED_FUNCTION_6_109(*(void **)&v11[v16]);
  v33 = OUTLINED_FUNCTION_123((uint64_t)v32, sel_trailingAnchor);
  v34 = OUTLINED_FUNCTION_5_84((uint64_t)v33, sel_constraintLessThanOrEqualToAnchor_constant_);
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 56) = v1;
  v35 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v11[v16], sel_centerXAnchor), sel_centerXAnchor);
  v36 = OUTLINED_FUNCTION_4_140();
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 64) = v1;
  v37 = OUTLINED_FUNCTION_123((uint64_t)objc_msgSend(*(id *)&v11[v16], sel_centerYAnchor), sel_centerYAnchor);
  v38 = OUTLINED_FUNCTION_4_140();
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 72) = v1;
  v39 = objc_msgSend(*(id *)&v7[v53], sel_leadingAnchor);
  v40 = objc_msgSend(*(id *)&v11[v16], sel_leadingAnchor);
  v41 = OUTLINED_FUNCTION_5_84((uint64_t)v40, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 80) = v1;
  v42 = OUTLINED_FUNCTION_6_109(*(void **)&v7[v53]);
  v43 = OUTLINED_FUNCTION_6_109(*(void **)&v11[v16]);
  v44 = OUTLINED_FUNCTION_5_84((uint64_t)v43, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 88) = v1;
  v45 = objc_msgSend(*(id *)&v7[v53], sel_topAnchor);
  v46 = objc_msgSend(*(id *)&v11[v16], sel_topAnchor);
  v47 = OUTLINED_FUNCTION_5_84((uint64_t)v46, sel_constraintEqualToAnchor_constant_);
  OUTLINED_FUNCTION_2_131();

  *(_QWORD *)(v28 + 96) = v1;
  v48 = objc_msgSend(*(id *)&v7[v53], sel_bottomAnchor);
  v49 = objc_msgSend(*(id *)&v11[v16], sel_bottomAnchor);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v49, -16.0);

  *(_QWORD *)(v28 + 104) = v50;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_activateConstraints_, isa);

  return v11;
}

id ParticipantAlertView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ParticipantAlertView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));

  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

id ParticipantAlertView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ParticipantAlertView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_visualEffectView;
  *(_QWORD *)&v0[v1] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3F58]));
  v2 = OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel;
  *(_QWORD *)&v0[v2] = OUTLINED_FUNCTION_70_0(objc_allocWithZone(MEMORY[0x1E0DC3990]));

  OUTLINED_FUNCTION_21_4();
  __break(1u);
}

Swift::Void __swiftcall ParticipantAlertView.configure(with:)(ConversationKit::ParticipantAlertView::ViewModel with)
{
  uint64_t v1;

  outlined bridged method (mbgnn) of @objc UILabel.text.setter(with.text._countAndFlagsBits, (uint64_t)with.text._object, *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel));
}

double ParticipantAlertView.intrinsicContentSize.getter()
{
  return 240.0;
}

id ParticipantAlertView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ParticipantAlertView()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ParticipantAlertView.ViewModel()
{
  return &type metadata for ParticipantAlertView.ViewModel;
}

void *SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter.unsafeMutableAddressor()
{
  return &static SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter;
}

__int128 *SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets.unsafeMutableAddressor()
{
  if (one-time initialization token for systemApertureButtonContentInsets != -1)
    swift_once();
  return &static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
}

double static SystemApertureNoticeLayoutSharedConstants.systemApertureLeadingViewDiameter.getter()
{
  return 35.33;
}

double one-time initialization function for systemApertureButtonContentInsets()
{
  double result;

  result = 8.0;
  static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets = xmmword_1BD665200;
  *(_OWORD *)&qword_1EF4FD390 = xmmword_1BD665200;
  return result;
}

double static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets.getter()
{
  if (one-time initialization token for systemApertureButtonContentInsets != -1)
    swift_once();
  return *(double *)&static SystemApertureNoticeLayoutSharedConstants.systemApertureButtonContentInsets;
}

void one-time initialization function for titleViewHorizontalPadding()
{
  static SystemApertureNoticeView.Constants.titleViewHorizontalPadding = 0x4020000000000000;
}

double one-time initialization function for systemAperturePadding()
{
  double result;

  result = 15.67;
  static SystemApertureNoticeView.Constants.systemAperturePadding = xmmword_1BD665210;
  *(_OWORD *)&qword_1EF4D1D88 = xmmword_1BD665210;
  return result;
}

uint64_t key path setter for SystemApertureNoticeView.fullSentence : SystemApertureNoticeView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AttributedString?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x78))(v6);
}

void SystemApertureNoticeView.fullSentence.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;

  v2 = v1;
  v4 = type metadata accessor for AttributedString();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (AttributedString?, AttributedString?));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  swift_beginAccess();
  v22 = (uint64_t)&v20[*(int *)(v18 + 48)];
  outlined init with copy of AttributedString?(a1, (uint64_t)v20);
  outlined init with copy of AttributedString?(v21, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v4) == 1)
  {
    if (__swift_getEnumTagSinglePayload(v22, 1, v4) == 1)
    {
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      return;
    }
  }
  else
  {
    outlined init with copy of AttributedString?((uint64_t)v20, (uint64_t)v17);
    if (__swift_getEnumTagSinglePayload(v22, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v11, v22, v4);
      _s10Foundation4UUIDVACSHAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type AttributedString and conformance AttributedString, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF268]);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v11, v4);
      v24(v17, v4);
      outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
      if ((v23 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
  }
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v20, &demangling cache variable for type metadata for (AttributedString?, AttributedString?));
LABEL_8:
  outlined init with copy of AttributedString?(v21, (uint64_t)v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v4) == 1)
  {
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView), sel_setAttributedText_, 0);
  }
  else
  {
    v25 = v29;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v29, v14, v4);
    v26 = *(void **)(v2 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView);
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSAttributedString);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v28, v25, v4);
    type metadata accessor for AttributeScopes.UIKitAttributes();
    _s10Foundation4UUIDVACSHAAWlTm_0(&lazy protocol witness table cache variable for type AttributeScopes.UIKitAttributes and conformance AttributeScopes.UIKitAttributes, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1A00], MEMORY[0x1E0DC19F8]);
    v27 = (void *)NSAttributedString.init<A>(_:including:)();
    objc_msgSend(v26, sel_setAttributedText_, v27);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v4);
  }
}

uint64_t SystemApertureNoticeView.fullSentence.getter()
{
  OUTLINED_FUNCTION_1();
  return OUTLINED_FUNCTION_18_89();
}

uint64_t outlined init with copy of AttributedString?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void SystemApertureNoticeView.fullSentence.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_fullSentence;
  OUTLINED_FUNCTION_1();
  outlined init with copy of AttributedString?(v6, (uint64_t)v5);
  swift_beginAccess();
  outlined assign with copy of AttributedString?(a1, v6);
  swift_endAccess();
  SystemApertureNoticeView.fullSentence.didset((uint64_t)v5);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?(a1, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
}

void SystemApertureNoticeView.fullSentence.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AttributedString?)
                             - 8)
                 + 64);
  v3[4] = malloc(v4);
  v3[5] = malloc(v4);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_18_89();
  OUTLINED_FUNCTION_18();
}

void SystemApertureNoticeView.fullSentence.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    outlined init with copy of AttributedString?((uint64_t)v4, (uint64_t)v3);
    SystemApertureNoticeView.fullSentence.setter((uint64_t)v3);
    outlined destroy of OS_dispatch_queue.SchedulerOptions?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for AttributedString?);
  }
  else
  {
    SystemApertureNoticeView.fullSentence.setter((uint64_t)v4);
  }
  free(v4);
  free(v3);
  OUTLINED_FUNCTION_4_2(v2);
}

void SystemApertureNoticeView.leadingView.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_retain(*(id *)(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView)
                         + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView));
  OUTLINED_FUNCTION_0();
}

void SystemApertureNoticeView.leadingView.setter(void *a1)
{
  LeadingContainerView.wrappedView.setter(a1);
  OUTLINED_FUNCTION_0();
}

void (*SystemApertureNoticeView.leadingView.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  SystemApertureNoticeView.leadingView.getter();
  *a1 = v3;
  return SystemApertureNoticeView.leadingView.modify;
}

void SystemApertureNoticeView.leadingView.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    LeadingContainerView.wrappedView.setter(v2);

  }
  else
  {
    LeadingContainerView.wrappedView.setter(*a1);
  }
}

id SystemApertureNoticeView.trailingButton.didset(void *a1)
{
  char *v1;
  char *v2;
  id result;

  if (a1)
    objc_msgSend(a1, sel_removeFromSuperview);
  v2 = &v1[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton];
  result = (id)swift_beginAccess();
  if (*(_QWORD *)v2)
    return objc_msgSend(v1, sel_addSubview_);
  return result;
}

void *SystemApertureNoticeView.trailingButton.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  OUTLINED_FUNCTION_1();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void SystemApertureNoticeView.trailingButton.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  SystemApertureNoticeView.trailingButton.didset(v4);

}

void SystemApertureNoticeView.trailingButton.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton);
  OUTLINED_FUNCTION_1();
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  OUTLINED_FUNCTION_18();
}

void SystemApertureNoticeView.trailingButton.modify(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    SystemApertureNoticeView.trailingButton.setter(v3);

  }
  else
  {
    SystemApertureNoticeView.trailingButton.setter(*(void **)(*(_QWORD *)a1 + 24));
  }
  OUTLINED_FUNCTION_4_2(v2);
}

uint64_t SystemApertureNoticeView.systemAperturePreferredContentSize.getter()
{
  double v0;

  v0 = SystemApertureNoticeView.calculateWidthForMicroNotice()();
  SystemApertureNoticeView.calculateHeightForMicroNotice()();
  return *(_QWORD *)&v0;
}

double SystemApertureNoticeView.calculateHeightForMicroNotice()()
{
  if (one-time initialization token for systemAperturePadding != -1)
    swift_once();
  return *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding
       + *(double *)&qword_1EF4D1D88
       + 0.0
       + 35.33;
}

double SystemApertureNoticeView.calculateWidthForMicroNotice()()
{
  uint64_t *v0;
  double v1;
  double v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  double v19;

  SystemApertureNoticeView.minimumWidthForMicroNotice()();
  v2 = v1;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView);
  v4 = objc_msgSend(v3, sel_text);
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;

    swift_bridgeObjectRelease();
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v6 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      SystemApertureNoticeView.maximumWidthForMicroNotice()();
      v11 = v10;
      if (one-time initialization token for systemAperturePadding != -1)
        swift_once();
      v12 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1) + 0.0 + 35.33;
      if (one-time initialization token for titleViewHorizontalPadding != -1)
        swift_once();
      v13 = v12 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
      objc_msgSend(v3, sel_sizeThatFits_, v11, 1.79769313e308);
      v15 = v13 + v14;
      v16 = (void *)OUTLINED_FUNCTION_1_41(*v0);

      if (v16)
      {
        v17 = v15 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
        SystemApertureNoticeView.trailingButtonWidth.getter();
        v15 = v17 + v18;
      }
      v19 = v15 + *(double *)&qword_1EF4D1D90;
      if (v2 > v15 + *(double *)&qword_1EF4D1D90)
        v19 = v2;
      if (v19 >= v11)
        return v11;
      else
        return v19;
    }
  }
  return v2;
}

void SystemApertureNoticeView.maximumWidthForMicroNotice()()
{
  void *v0;
  id v1;
  void *v2;
  CGRect v3;

  v1 = objc_msgSend(v0, sel_window);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_frame);
    CGRectGetWidth(v3);

  }
  OUTLINED_FUNCTION_12_1();
}

void SystemApertureNoticeView.minimumWidthForMicroNotice()()
{
  uint64_t v0;
  CGRect v1;

  SystemApertureNoticeView.minimumWidthFromSensorToEdge()();
  objc_msgSend(OUTLINED_FUNCTION_25_1(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide), sel_layoutFrame);
  OUTLINED_FUNCTION_42_47();
  v1.origin.x = OUTLINED_FUNCTION_66();
  CGRectGetWidth(v1);
  OUTLINED_FUNCTION_9_9();
}

double SystemApertureNoticeView.minimumWidthFromSensorToEdge()()
{
  _QWORD *v0;
  _QWORD *v1;
  double v2;
  _QWORD *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  double v16;

  v1 = v0;
  if (one-time initialization token for systemAperturePadding != -1)
    swift_once();
  v2 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1) + 0.0;
  v3 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();

  if (v4)
  {
    SystemApertureNoticeView.trailingButtonWidth.getter();
    v6 = v5 + -17.665;
  }
  else
  {
    v6 = 17.665;
  }
  v7 = v2 + v6 + SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter();
  if (((*(uint64_t (**)(void))((*v3 & *v1) + 0xE8))() & 1) != 0)
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v8, (uint64_t)&static Logger.conversationControls);
    v9 = OUTLINED_FUNCTION_11_17();
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1BD004000, v9, v10, "minimumWidthFromSensorToEdge is using standard large phone size", v11, 2u);
      OUTLINED_FUNCTION_60();
    }

  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_17_2();
    __swift_project_value_buffer(v12, (uint64_t)&static Logger.conversationControls);
    v13 = OUTLINED_FUNCTION_11_17();
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1BD004000, v13, v14, "minimumWidthFromSensorToEdge is using offset for non-large phone", v15, 2u);
      OUTLINED_FUNCTION_60();
    }

    objc_msgSend(v1, sel_displayScale);
    return v7 + 2.0 / v16;
  }
  return v7;
}

BOOL SystemApertureNoticeView.isDeviceNativeScreenSizeLargePhone.getter()
{
  id v0;
  double v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  _BOOL4 v5;
  _BOOL8 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  CGRect v17;
  CGRect v18;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_scale);
  v2 = v1;
  objc_msgSend(v0, sel_nativeBounds);
  OUTLINED_FUNCTION_37_5();
  v3 = CGRectGetWidth(v17) / v2;
  v18.origin.x = OUTLINED_FUNCTION_8_18();
  v4 = CGRectGetHeight(v18) / v2;
  v5 = fabs(v3 + -430.0) < 2.22044605e-16;
  v6 = fabs(v4 + -932.0) < 2.22044605e-16 && v5;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v7 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationControls);
  v8 = OUTLINED_FUNCTION_11_17();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = OUTLINED_FUNCTION_105();
    v16 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v10 = 67109634;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2080;
    type metadata accessor for CGSize(0);
    v11 = OUTLINED_FUNCTION_22_85();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v16);
    OUTLINED_FUNCTION_23_81();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 18) = 2080;
    v13 = OUTLINED_FUNCTION_22_85();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v16);
    OUTLINED_FUNCTION_23_81();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v8, v9, "isDeviceNativeScreenSizeLargePhone is %{BOOL}d from comparing %s to %s", (uint8_t *)v10, 0x1Cu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_60();
  }

  return v6;
}

void SystemApertureNoticeView.availableWidthForTrailingButton.getter()
{
  uint64_t v0;
  id v1;
  CGRect v2;

  SystemApertureNoticeView.maximumWidthForMicroNotice()();
  v1 = OUTLINED_FUNCTION_25_1(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v1, sel_layoutFrame);
  OUTLINED_FUNCTION_37_5();

  v2.origin.x = OUTLINED_FUNCTION_8_18();
  CGRectGetWidth(v2);
  if (one-time initialization token for systemAperturePadding != -1)
    swift_once();
  SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter();
  OUTLINED_FUNCTION_9_9();
}

void SystemApertureNoticeView.trailingButtonWidth.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_1_41(*v0);
  if (v1)
  {
    v2 = (void *)v1;
    SystemApertureNoticeView.availableWidthForTrailingButton.getter();
    objc_msgSend(v2, sel_sizeThatFits_);

  }
  OUTLINED_FUNCTION_12_1();
}

double SystemApertureNoticeView.distanceFromLeadingViewEndcapMinXToObstructredAreaMinX.getter()
{
  void *v0;
  double Height;
  CGRect v3;

  objc_msgSend(objc_msgSend(v0, sel_SBUISA_systemApertureObstructedAreaLayoutGuide), sel_layoutFrame);
  OUTLINED_FUNCTION_42_47();
  v3.origin.x = OUTLINED_FUNCTION_66();
  Height = CGRectGetHeight(v3);
  if (one-time initialization token for systemAperturePadding != -1)
    swift_once();
  return sqrt((Height * 0.5 + 17.665) * (Height * 0.5 + 17.665)- (*(double *)&qword_1EF4D1D88 + 17.665 - Height * 0.5) * (*(double *)&qword_1EF4D1D88 + 17.665 - Height * 0.5))- Height * 0.5;
}

id SystemApertureNoticeView.__allocating_init(frame:)()
{
  Class v0;
  id v1;
  double v2;
  id v3;
  SEL v4;

  OUTLINED_FUNCTION_17_7();
  v1 = objc_allocWithZone(v0);
  v2 = OUTLINED_FUNCTION_15_0();
  return objc_msgSend(v3, v4, v2);
}

id SystemApertureNoticeView.init(frame:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  double v6;
  objc_super *v7;
  SEL v8;
  id v9;
  uint64_t v11;

  OUTLINED_FUNCTION_17_7();
  v1 = OUTLINED_FUNCTION_15_99();
  OUTLINED_FUNCTION_0_10(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView;
  type metadata accessor for LeadingContainerView();
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  v11 = type metadata accessor for SystemApertureNoticeView();
  v6 = OUTLINED_FUNCTION_15_0();
  v9 = objc_msgSendSuper2(v7, v8, v6, v4, v11);
  SystemApertureNoticeView.setupSubviews()((uint64_t)v9);

  return v9;
}

void SystemApertureNoticeView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;

  objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  OUTLINED_FUNCTION_0();
}

void SystemApertureNoticeView.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_15_99();
  OUTLINED_FUNCTION_0_10(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_trailingButton] = 0;
  v2 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView;
  type metadata accessor for LeadingContainerView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id SystemApertureNoticeView.setupSubviews()(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;

  v2 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView];
  v3 = OUTLINED_FUNCTION_11_4(a1, sel_setMarqueeEnabled_);
  OUTLINED_FUNCTION_11_4((uint64_t)v3, sel_setMarqueeRunning_);
  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setTextAlignment_, 4);
  OUTLINED_FUNCTION_11_4((uint64_t)objc_msgSend(v2, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E0DC48D0]), sel_setAdjustsFontForContentSizeCategory_);
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView]);
  return objc_msgSend(v1, sel_addSubview_, v2);
}

Swift::Void __swiftcall SystemApertureNoticeView.layoutSubviews()()
{
  _QWORD *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  id v16;
  double v17;
  id v18;
  SEL v19;
  double MaxX;
  void *v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double MaxY;
  uint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t (*v37)(void);
  void *v38;
  double v39;
  double v40;
  double Height;
  uint64_t v42;
  id v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double Width;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  void *v60;
  double v61;
  double v62;
  double v63;
  double v64;
  objc_super v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;

  v65.receiver = v0;
  v65.super_class = (Class)type metadata accessor for SystemApertureNoticeView();
  objc_msgSendSuper2(&v65, sel_layoutSubviews);
  OUTLINED_FUNCTION_1_149();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  if (one-time initialization token for systemAperturePadding != -1)
    swift_once();
  v9 = *(double *)&qword_1EF4D1D90;
  v10 = UIEdgeInsetsInsetRect_1(v2, v4, v6, v8, *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding, *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1), *(double *)&qword_1EF4D1D88, *(double *)&qword_1EF4D1D90);
  v12 = v11;
  v13 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_leadingContainerView), sel_sizeThatFits_);
  v15 = v14;
  v16 = OUTLINED_FUNCTION_25_1((uint64_t)v13, sel_effectiveUserInterfaceLayoutDirection);
  if (v16)
    OUTLINED_FUNCTION_1_149();
  v17 = OUTLINED_FUNCTION_24_68();
  objc_msgSend(v18, v19, v17);
  if (!v16)
  {
    v66.origin.x = OUTLINED_FUNCTION_24_68();
    MaxX = CGRectGetMaxX(v66);
    if (one-time initialization token for titleViewHorizontalPadding != -1)
      swift_once();
    v9 = MaxX + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  }
  v21 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit24SystemApertureNoticeView_titleView);
  v22 = OUTLINED_FUNCTION_25_1((uint64_t)objc_msgSend(v21, sel_sizeToFit, v12), sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v22, sel_layoutFrame);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v67.origin.x = v24;
  v67.origin.y = v26;
  v67.size.width = v28;
  v67.size.height = v30;
  MaxY = CGRectGetMaxY(v67);
  OUTLINED_FUNCTION_9(v32, sel__tightBoundingRectOfFirstLine);
  v64 = MaxY - v33;
  SystemApertureNoticeView.trailingButtonWidth.getter();
  v35 = v34;
  if (one-time initialization token for titleViewHorizontalPadding != -1)
    swift_once();
  v36 = v10 - v15 - *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  v37 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0);
  v38 = (void *)v37();

  v39 = v35 + *(double *)&static SystemApertureNoticeView.Constants.titleViewHorizontalPadding;
  if (!v38)
    v39 = 0.0;
  v40 = v36 - v39;
  OUTLINED_FUNCTION_1_149();
  Height = CGRectGetHeight(v68);
  v43 = OUTLINED_FUNCTION_25_1(v42, sel_SBUISA_systemApertureObstructedAreaLayoutGuide);
  objc_msgSend(v43, sel_layoutFrame);
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;

  v69.origin.x = v45;
  v69.origin.y = v47;
  v69.size.width = v49;
  v69.size.height = v51;
  v52 = Height - CGRectGetHeight(v69);
  OUTLINED_FUNCTION_9(v53, sel_bounds);
  Width = CGRectGetWidth(v70);
  if (v40 >= Width)
    v56 = Width;
  else
    v56 = v40;
  OUTLINED_FUNCTION_9(v54, sel_bounds);
  v57 = CGRectGetHeight(v71);
  if (v52 >= v57)
    v58 = v57;
  else
    v58 = v52;
  v59 = ((uint64_t (*)(id))v37)(objc_msgSend(v21, sel_setFrame_, v9, v64, v56, v58));
  if (v59)
  {
    v60 = (void *)v59;
    if (v16)
    {
      v61 = *((double *)&static SystemApertureNoticeView.Constants.systemAperturePadding + 1);
    }
    else
    {
      OUTLINED_FUNCTION_1_149();
      v61 = v62 - *(double *)&qword_1EF4D1D90 - v35;
    }
    objc_msgSend(v60, sel_setFrame_, v61, *(double *)&static SystemApertureNoticeView.Constants.systemAperturePadding, v35, v63);

  }
}

id SystemApertureNoticeView.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for SystemApertureNoticeView);
}

void LeadingContainerView.wrappedView.willset(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  char v6;
  id v7;
  id v8;

  v3 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  if (v3)
  {
    v8 = *(id *)(v1
               + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
    if (a1)
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v4 = v8;
      v5 = a1;
      v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
      v7 = v3;
    }
    objc_msgSend(v8, sel_removeFromSuperview);
LABEL_8:

  }
}

void LeadingContainerView.wrappedView.didset(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  id v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  Class isa;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  if (v3)
  {
    if (a1)
    {
      _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      isa = v3;
      v5 = a1;
      v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) != 0)
        goto LABEL_8;
    }
    else
    {
      v7 = v3;
    }
    objc_msgSend(v2, sel_addSubview_, v3, isa);
    objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BD644B60;
    v10 = objc_msgSend(v3, sel_centerXAnchor);
    v11 = objc_msgSend(v2, sel_centerXAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(_QWORD *)(v9 + 32) = v12;
    v13 = objc_msgSend(v3, sel_centerYAnchor);
    v14 = objc_msgSend(v2, sel_centerYAnchor);
    v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

    *(_QWORD *)(v9 + 40) = v15;
    v16 = objc_msgSend(v3, sel_widthAnchor);
    v17 = objc_msgSend(v2, sel_widthAnchor);
    v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(_QWORD *)(v9 + 48) = v18;
    specialized Array._endMutation()();
    _sSo8NSObjectCMaTm_0(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_activateConstraints_, isa);

LABEL_8:
  }
}

void LeadingContainerView.wrappedView.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView;
  v4 = *(void **)(v1
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  v5 = v4;
  LeadingContainerView.wrappedView.willset(a1);
  v6 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = a1;
  v7 = a1;

  LeadingContainerView.wrappedView.didset(v4);
}

char *LeadingContainerView.forLastBaselineLayout.getter()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  if (v1)
  {
    v2 = *(char **)&v0[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView];
  }
  else
  {
    v2 = v0;
    v1 = 0;
  }
  v3 = v1;
  return v2;
}

double LeadingContainerView.sizeThatFits(_:)(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  void *v5;
  double result;

  v5 = *(void **)(v4
                + OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView);
  if (!v5)
    return 0.0;
  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1148846080;
  objc_msgSend(v5, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, a3, a4);
  return result;
}

id LeadingContainerView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for LeadingContainerView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id LeadingContainerView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKitP33_7B133F2533FF4A198A88A5022078738420LeadingContainerView_wrappedView] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LeadingContainerView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id LeadingContainerView.__deallocating_deinit()
{
  return MovieScrubber.ScubberCoordinator.__deallocating_deinit((uint64_t (*)(_QWORD))type metadata accessor for LeadingContainerView);
}

uint64_t type metadata accessor for LeadingContainerView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SystemApertureNoticeView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for SystemApertureNoticeView;
  if (!type metadata singleton initialization cache for SystemApertureNoticeView)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BD4E0050(_QWORD **a1)
{
  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x70))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4E0088(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x88))();
  OUTLINED_FUNCTION_0();
}

void sub_1BD4E00C8(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_1_41(**a1);
  OUTLINED_FUNCTION_0();
}

ValueMetadata *type metadata accessor for SystemApertureNoticeLayoutSharedConstants()
{
  return &type metadata for SystemApertureNoticeLayoutSharedConstants;
}

void type metadata completion function for SystemApertureNoticeView()
{
  unint64_t v0;

  type metadata accessor for AttributedString?();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SystemApertureNoticeView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.fullSentence.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.leadingView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.trailingButton.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.systemAperturePreferredContentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SystemApertureNoticeView.isDeviceNativeScreenSizeLargePhone.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  char v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v27 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_41();
  v31 = v6;
  OUTLINED_FUNCTION_56_7();
  v7 = type metadata accessor for UUID();
  v36 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v26[0] = a1;
    v26[1] = v2;
    OUTLINED_FUNCTION_37_3();
    v28 = v11;
    v29 = a1 + v11;
    v33 = *(_QWORD *)(v5 + 72);
    v37 = a2 + 56;
    OUTLINED_FUNCTION_25_2();
    v12 = 0;
    v32 = MEMORY[0x1E0DEE9D8];
    v13 = a2;
    do
    {
      v34 = v12;
      v35 = v29 + v33 * v12;
      if (*(_QWORD *)(a2 + 16)
        && (lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID),
            v14 = dispatch thunk of Hashable._rawHashValue(seed:)(),
            v15 = -1 << *(_BYTE *)(v13 + 32),
            v16 = v14 & ~v15,
            ((*(_QWORD *)(v37 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0))
      {
        v17 = v13;
        v18 = ~v15;
        v19 = *(_QWORD *)(v36 + 72);
        v20 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
        while (1)
        {
          v20(v10, *(_QWORD *)(v17 + 48) + v19 * v16, v7);
          lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
          v21 = dispatch thunk of static Equatable.== infix(_:_:)();
          v22 = OUTLINED_FUNCTION_263();
          v23(v22);
          if ((v21 & 1) != 0)
            break;
          v16 = (v16 + 1) & v18;
          v17 = v13;
          if (((*(_QWORD *)(v37 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            goto LABEL_8;
        }
      }
      else
      {
LABEL_8:
        _s15ConversationKit11ParticipantVWOcTm_4();
        v24 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = OUTLINED_FUNCTION_484();
        v25 = *(_QWORD *)(v24 + 16);
        if (v25 >= *(_QWORD *)(v24 + 24) >> 1)
          v24 = OUTLINED_FUNCTION_484();
        *(_QWORD *)(v24 + 16) = v25 + 1;
        v32 = v24;
        outlined init with take of Participant(v31, v24 + v28 + v25 * v33);
      }
      v12 = v34 + 1;
      a2 = v13;
    }
    while (v34 + 1 != v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_29();
}

void specialized MomentsBackedViewControllerProtocol.bringMomentsAndFlashViewsToFrontIfNecessary()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews];
  swift_beginAccess();
  if (*v1 == 1)
  {
    v2 = MultiwayViewController.insulatingView.getter();
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, sel_superview);

      if (v4)
      {
        MultiwayViewController.flashView.getter();
        v6 = v5;
        v7 = objc_msgSend(v5, sel_superview);

        if (v7)
        {
          MultiwayViewController.localLivePhotoAlertView.getter();
          if (v8)
          {
            v9 = v8;
            v10 = objc_msgSend(v0, sel_view);
            objc_msgSend(v10, sel_insertSubview_belowSubview_, v3, v9);

          }
          else
          {
            v10 = objc_msgSend(v0, sel_view);
            objc_msgSend(v10, sel_bringSubviewToFront_, v3);
          }

          v11 = objc_msgSend(v0, sel_view);
          if (v11)
          {
            v12 = v11;
            MultiwayViewController.flashView.getter();
            v14 = v13;
            objc_msgSend(v12, sel_bringSubviewToFront_, v13);

          }
        }
      }

    }
  }
}

uint64_t specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(void (*)(), uint64_t);

  v0 = MostActiveParticipantViewController.flashView.getter();
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v2 = *(void (**)(void (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  swift_retain();
  v2(partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto(), v1);

  return swift_release_n();
}

void specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(void (*)(), uint64_t);
  _QWORD *v3;

  MultiwayViewController.flashView.getter();
  v3 = v0;
  v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v2 = *(void (**)(void (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x50);
  swift_retain();
  v2(partial apply for specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto(), v1);
  swift_release_n();

}

void specialized closure #1 in MomentsBackedViewControllerProtocol.remoteDidTakePhoto()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4E1284(void *a1)
{
  uint64_t (*v1)(void);
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    v4 = v1();
    if (v5)
    {
      v6 = v4;
      v7 = v5;
      if (((uint64_t (*)(void))v2)())
      {
        OUTLINED_FUNCTION_120();
        OUTLINED_FUNCTION_136_1();
        (*(void (**)(void))(v8 + 104))();
        OUTLINED_FUNCTION_18_14();
        OUTLINED_FUNCTION_136_1();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 152))(2, v6, v7);

        OUTLINED_FUNCTION_2_1();
      }
      else
      {

        OUTLINED_FUNCTION_2_1();
      }
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_289_0();
}

Swift::Void __swiftcall MultiwayViewController.didTapOneToOneShutterButton()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  _BOOL8 v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _QWORD v38[4];

  OUTLINED_FUNCTION_93();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_51_0();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v38 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v38 - v10;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  ConversationController.remoteOneToOneParticipant.getter();
  OUTLINED_FUNCTION_69_0((uint64_t)v3, 1, v4);
  if (v13)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    outlined init with take of Participant((uint64_t)v3, (uint64_t)v11);
    v14 = MultiwayViewController.participantGridState.getter();
    if (!v14)
    {
      Participant.isActiveWithVideo.getter();
      if (v14)
      {
        if (one-time initialization token for conversationKit != -1)
          swift_once();
        static os_log_type_t.default.getter();
        OUTLINED_FUNCTION_255();
        MultiwayViewController.flashView.getter();
        OUTLINED_FUNCTION_120();
        v15 = specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
        v16(v15);

        v17 = *(int *)(v4 + 24);
        v18 = v11[v17];
        _s15ConversationKit11ParticipantVWOcTm_4();
        if (v18 == 1)
        {
          Participant.hasReducedQualityVideo.getter();
          v20 = v19;
          outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
          if ((v20 & 1) == 0)
          {
            v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
            OUTLINED_FUNCTION_18_3();
            v22 = OUTLINED_FUNCTION_444();
LABEL_18:
            v29 = OUTLINED_FUNCTION_0_3(v22, v23);
            v31 = v30;

            v32._countAndFlagsBits = v29;
            v32._object = v31;
            MultiwayViewController.showOneToOneLivePhotosAlert(_:)(v32);
            OUTLINED_FUNCTION_21_0();
            v33 = v11[v17];
            _s15ConversationKit11ParticipantVWOcTm_4();
            if (v33 == 1)
            {
              Participant.hasReducedQualityVideo.getter();
              v36 = v35;
              OUTLINED_FUNCTION_43_19(v35, type metadata accessor for Participant);
              if ((v36 & 1) == 0)
                ConversationController.captureMoment(for:)();
            }
            else
            {
              OUTLINED_FUNCTION_43_19(v34, type metadata accessor for Participant);
            }
            OUTLINED_FUNCTION_315(v37, type metadata accessor for Participant);
            goto LABEL_15;
          }
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
        }
        v21 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
        OUTLINED_FUNCTION_18_3();
        OUTLINED_FUNCTION_61();
        goto LABEL_18;
      }
    }
    OUTLINED_FUNCTION_315(v14, type metadata accessor for Participant);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.error.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v24 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v24 + 16) = xmmword_1BD6441D0;
  v25 = (_QWORD *)(v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  OUTLINED_FUNCTION_1();
  v38[0] = *v25;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Participant]);
  v26 = String.init<A>(reflecting:)();
  v28 = v27;
  *(_QWORD *)(v24 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v24 + 32) = v26;
  *(_QWORD *)(v24 + 40) = v28;
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_53();
LABEL_15:
  OUTLINED_FUNCTION_52_1();
}

Swift::Void __swiftcall MultiwayViewController.updateShouldShowReactionPickerTipView()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  BOOL v12;
  BOOL v13;
  int v14;

  OUTLINED_FUNCTION_93();
  v3 = OUTLINED_FUNCTION_140_9();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_1();
  if ((MultiwayViewController.canShowReactionsView()() & 1) != 0
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) & 1) == 0)
  {
    MultiwayViewController.inCallControlsVisible.getter();
  }
  static VideoReactionPickerTip.shouldShow.setter();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_17_2();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
  OUTLINED_FUNCTION_12_13();
  v6 = OUTLINED_FUNCTION_19_73();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = OUTLINED_FUNCTION_105();
    *(_DWORD *)v8 = 67109376;
    static VideoReactionPickerTip.shouldShow.getter();
    OUTLINED_FUNCTION_436();
    *(_WORD *)(v8 + 8) = 1024;
    MultiwayViewController.inCallControlsVisible.getter();
    v14 = v9 & 1;
    OUTLINED_FUNCTION_436();

    _os_log_impl(&dword_1BD004000, v6, v7, "updateShouldShowReactionPickerTipView - VideoReactionPickerTip.shouldShow: %{BOOL}d, inCallControlsVisible: %{BOOL}d", (uint8_t *)v8, 0xEu);
    OUTLINED_FUNCTION_60();
  }

  v10 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip;
  OUTLINED_FUNCTION_1();
  v12 = 0;
  if (!__swift_getEnumTagSinglePayload(v10, 1, v3))
  {
    OUTLINED_FUNCTION_430_0(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip);
    v11 = Tip.shouldDisplay.getter();
    OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    if ((v11 & 1) != 0)
      v12 = 1;
  }
  v13 = v12;
  MultiwayViewController.reactionsState.setter(&v13, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (void (*)(char *))MultiwayViewController.reactionPickerTipState.didset);
  OUTLINED_FUNCTION_52_1();
}

uint64_t _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit32MostActiveParticipantsControllerC15ActivityDetailsVy10Foundation4UUIDV_GGG_APs5NeverOTg506_sSi15f5Kit32hijk3C15lm38Vyx_GAFIgynr_Si6offset_AF7elementtAFs5p140OIegnrzr_SHRzlTR10Foundation4UUIDV_TG504_s15a5Kit32cdef79C22applyProminenceWeights33_96A8A9BA1FE613479F021FF747BF6BADLL06sortedE0SayAC15gH47U54_GGAJ_tFAISi_AItXEfU0_10Foundation4UUIDV_Tg5Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v2 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v30 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v30 - v11);
  v37 = MEMORY[0x1E0DEE9D8];
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  v13 = v37;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = swift_bridgeObjectRetain();
  v34 = v14;
  v30 = a1;
  if (v14)
  {
    v16 = 0;
    v17 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v31 = *(_QWORD *)(v2 + 72);
    v32 = v17;
    v18 = v15 + v17;
    v33 = v4;
    do
    {
      v19 = (uint64_t)&v35[*(int *)(v5 + 48)];
      outlined init with copy of FeatureEligibility?(v18, v19, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v20 = (uint64_t)v9 + *(int *)(v5 + 48);
      *v9 = v16;
      outlined init with take of MultiwayViewController.ViewContent?(v19, v20, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      v21 = *v12;
      outlined init with copy of FeatureEligibility?((uint64_t)v12 + *(int *)(v5 + 48), (uint64_t)v4, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      if (v21 == 2)
      {
        v23 = one-time initialization token for shared;
        v24 = 55;
      }
      else if (v21 == 1)
      {
        v23 = one-time initialization token for shared;
        v24 = 54;
      }
      else
      {
        v23 = one-time initialization token for shared;
        if (v21)
          v24 = 56;
        else
          v24 = 53;
      }
      if (v23 != -1)
        v22 = swift_once();
      v25 = (*(float (**)(uint64_t))(*(_QWORD *)static Defaults.shared + 8 * v24))(v22);
      *(float *)&v4[*(int *)(v36 + 48)] = v25;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v13 = v37;
      }
      v26 = *(_QWORD *)(v13 + 16);
      if (v26 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v13 = v37;
      }
      ++v16;
      *(_QWORD *)(v13 + 16) = v26 + 1;
      v27 = v31;
      v28 = v13 + v32 + v26 * v31;
      v4 = v33;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v33, v28, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v18 += v27;
    }
    while (v34 != v16);
  }
  swift_bridgeObjectRelease();
  return v13;
}

void specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  char v4;
  _QWORD *v5;
  BOOL v6;
  unsigned __int8 *v7;
  unsigned __int8 v8;
  unsigned int v9;
  char v10;
  _BYTE *v11;
  char v12;
  char v13;
  _BYTE *v14;
  char v15;
  char v16;
  char v18;
  char v19;
  unsigned __int8 v20;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  swift_beginAccess();
  if (*v3 != 1
    || (MultiwayViewController.isScreenSharing.getter(), (v4 & 1) != 0)
    || ((v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState),
         swift_beginAccess(),
         (unint64_t)(*v5 - 1) > 1)
      ? (v6 = a1 == 0)
      : (v6 = 1),
        v6))
  {
    v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
    swift_beginAccess();
    if (*v7 == 4)
    {
      MultiwayViewController.captionsLayoutState.getter((char *)&v20);
      if (v20 == 3 || !v20)
      {
        v8 = 1;
      }
      else
      {
        MultiwayViewController.captionsLayoutState.getter((char *)&v20);
        v8 = v20;
      }
      LOBYTE(v9) = 0;
      v10 = 0;
      *v7 = v8;
      goto LABEL_36;
    }
LABEL_35:
    LOBYTE(v9) = 0;
    v10 = 0;
    goto LABEL_36;
  }
  if (a1 != 1)
  {
    v14 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
    swift_beginAccess();
    if (*v14 == 4)
    {
      MultiwayViewController.isCaptioningEnabled.getter();
      if ((v15 & 1) != 0)
      {
        MultiwayViewController.captionsLayoutState.getter((char *)&v20);
        if (v20 == 3 || !v20)
        {
          v9 = 1;
        }
        else
        {
          MultiwayViewController.captionsLayoutState.getter((char *)&v20);
          if (v20 == 3)
            v9 = 1;
          else
            v9 = v20;
        }
      }
      else
      {
        v9 = 0;
      }
      MultiwayViewController.isCaptioningEnabled.getter();
      v10 = v18;
LABEL_41:
      if (v9 != 1)
        goto LABEL_36;
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  v11 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  swift_beginAccess();
  v9 = *v11;
  if (v9 == 4)
  {
    MultiwayViewController.isCaptioningEnabled.getter();
    v10 = v12;
    MultiwayViewController.isCaptioningEnabled.getter();
    if ((v13 & 1) == 0)
    {
      LOBYTE(v9) = 0;
      goto LABEL_36;
    }
    MultiwayViewController.captionsLayoutState.getter((char *)&v20);
    if (v20 == 3)
      goto LABEL_42;
    if (!v20)
      goto LABEL_42;
    MultiwayViewController.captionsLayoutState.getter((char *)&v20);
    v9 = v20;
    if (v20 == 3)
      goto LABEL_42;
    goto LABEL_41;
  }
  *v11 = 4;
  MultiwayViewController.isCaptioningEnabled.getter();
  if ((v16 & 1) == 0)
    goto LABEL_35;
  v10 = 1;
  if (v9 <= 3 && v9 != 2)
  {
LABEL_42:
    MultiwayViewController.captionsBubbleModeIsAllowed.getter();
    if ((v19 & 1) != 0)
      LOBYTE(v9) = 1;
    else
      LOBYTE(v9) = 2;
  }
LABEL_36:
  v20 = v9;
  MultiwayViewController.implementNewCaptionsState(newLayoutState:newRecognizerState:)((ConversationKit::CaptionsLayoutState)&v20, v10 & 1);
}

Swift::Int __swiftcall MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(Swift::Bool portraitAspect, Swift::Bool mediaPipIsVisible, ConversationKit::CaptionsLayoutState_optional captionsLayoutState)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  unsigned __int8 *v8;
  int v9;
  char v10;
  Swift::Int v11;
  id v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  BOOL v22;
  uint64_t v23;

  OUTLINED_FUNCTION_96();
  v5 = v4;
  v7 = v6;
  v9 = *v8;
  v10 = *v3;
  static Layout.MediaPip.padding.getter();
  if ((v10 & 1) != 0)
  {
    if ((v7 & 1) != 0)
      v11 = 20;
    else
      v11 = 18;
    if (one-time initialization token for shared != -1)
      swift_once();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    v12 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v13 = objc_msgSend(v12, sel_userInterfaceIdiom);

    if (v13 == (id)5 || v13 == (id)1)
    {
      if ((v5 & 1) != 0 || v9 && v9 != 3)
      {
        static Layout.MediaPip.padding.getter();
        if ((v7 & 1) != 0)
        {
          if (one-time initialization token for shared != -1)
            swift_once();
          OUTLINED_FUNCTION_11_6();
          static Platform.current.getter();
          OUTLINED_FUNCTION_12_4();
          return 9;
        }
        else
        {
          if (one-time initialization token for shared != -1)
            swift_once();
          OUTLINED_FUNCTION_11_6();
          static Platform.current.getter();
          OUTLINED_FUNCTION_12_4();
          return 12;
        }
      }
    }
    else if (!v13)
    {
      static Layout.MediaPip.padding.getter();
      if (one-time initialization token for shared != -1)
        swift_once();
      OUTLINED_FUNCTION_11_6();
      static Platform.current.getter();
      OUTLINED_FUNCTION_12_4();
      if ((v5 & 1) != 0)
      {
        return 4;
      }
      else
      {
        v11 = 6;
        if (v9 && v9 != 3)
        {
          if (v9 == 2)
            return 2;
          else
            return 4;
        }
      }
    }
  }
  else
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v15 = static Defaults.shared;
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();
    objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_currentDevice), sel_userInterfaceIdiom);
    OUTLINED_FUNCTION_49_5();
    if (v15)
    {
      if ((v5 & 1) != 0)
        return 3;
      v11 = 4;
    }
    else
    {
      static Layout.MediaPip.padding.getter();
      OUTLINED_FUNCTION_11_6();
      static Platform.current.getter();
      v16 = OUTLINED_FUNCTION_12_4();
      if ((v5 & 1) != 0)
        return 2;
      v11 = 3;
    }
    v17 = OUTLINED_FUNCTION_2_2(v16, sel_currentDevice);
    OUTLINED_FUNCTION_164_2(v17);
    OUTLINED_FUNCTION_14_18();
    if (!v5
      || (v19 = OUTLINED_FUNCTION_2_2(v18, sel_currentDevice),
          OUTLINED_FUNCTION_164_2(v19),
          OUTLINED_FUNCTION_14_18(),
          v5 == 1)
      || (v20 = OUTLINED_FUNCTION_2_2(v18, sel_currentDevice),
          OUTLINED_FUNCTION_164_2(v20),
          OUTLINED_FUNCTION_14_18(),
          v5 == 5))
    {
      if (v9 && v9 != 3)
      {
        v21 = OUTLINED_FUNCTION_2_2(v18, sel_currentDevice);
        OUTLINED_FUNCTION_164_2(v21);
        OUTLINED_FUNCTION_14_18();
        v22 = v9 == 2 && v5 == 0;
        v23 = -2;
        if (!v22)
          v23 = -1;
        v11 += v23;
      }
    }
  }
  return v11;
}

BOOL specialized MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v4, (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v5 = type metadata accessor for UUID();
  v6 = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v5) != 1;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return v6;
}

uint64_t specialized MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  v1 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = partial apply for specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_371;
  v4 = _Block_copy(aBlock);
  v5 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 128));
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(*v12 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v22 = a1;
    v24 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v14, 0);
    v16 = *(unsigned __int8 *)(v5 + 80);
    v21[1] = v13;
    v17 = v13 + ((v16 + 32) & ~v16);
    v23 = *(_QWORD *)(v5 + 72);
    do
    {
      outlined init with copy of FeatureEligibility?(v17, (uint64_t)v7, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v7, v8);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v15 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v24;
      }
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v19, v11, v8);
      v24 = v15;
      v17 += v23;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    a1 = v22;
  }
  *a1 = v15;
  return swift_bridgeObjectRelease();
}

_OWORD *specialized MostActiveParticipantsController.init(participantIdentifiers:configuration:)(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v3 = v2;
  v29 = a2;
  v30 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v5 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  v35 = v5;
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for DispatchQoS();
  v31 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[1] = 0u;
  v2[2] = 0u;
  v14 = (uint64_t)v3 + *(_QWORD *)(*(_QWORD *)v3 + 112);
  v15 = type metadata accessor for UUID();
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = MEMORY[0x1E0DEE9D8];
  v17 = v16;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  static Date.distantPast.getter();
  v18 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = v17;
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v9, *MEMORY[0x1E0DEF8D0], v28);
  *(_QWORD *)((char *)v2 + v18) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = v29;
  v19 = *(void **)((char *)v2 + v18);
  v20 = swift_allocObject();
  v21 = v30;
  *(_QWORD *)(v20 + 16) = v3;
  *(_QWORD *)(v20 + 24) = v21;
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:);
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_504;
  v22 = _Block_copy(aBlock);
  v23 = v19;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v36 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  v24 = v33;
  v25 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v13, v24, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  swift_release();
  return v3;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.init(participantIdentifiers:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  float v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v23 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v20 = a1;
    v24 = MEMORY[0x1E0DEE9D8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    v13 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    v22 = v5;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v14(v7, v13, v4);
      v14(v10, (uint64_t)v7, v4);
      if (one-time initialization token for shared != -1)
        swift_once();
      v15 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
      *(_DWORD *)&v10[v8[9]] = 0;
      *(float *)&v10[v8[10]] = v15;
      v10[v8[11]] = 0;
      *(_DWORD *)&v10[v8[12]] = 1065353216;
      *(_DWORD *)&v10[v8[13]] = 0;
      *(_DWORD *)&v10[v8[14]] = 0;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v24;
      }
      v16 = *(_QWORD *)(v12 + 16);
      if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        v12 = v24;
      }
      *(_QWORD *)(v12 + 16) = v16 + 1;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v16, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v5 = v22;
      v13 += v21;
      --v11;
    }
    while (v11);
    a1 = v20;
  }
  v17 = (_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 128));
  swift_beginAccess();
  *v17 = v12;
  return swift_bridgeObjectRelease();
}

uint64_t specialized MostActiveParticipantsController.update(_:mediaPriorities:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v23 = type metadata accessor for DispatchWorkItemFlags();
  v26 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v22 = *(id *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v16 = (_OWORD *)(v15 + ((v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  v17 = *(_OWORD *)(a2 + 16);
  *v16 = *(_OWORD *)a2;
  v16[1] = v17;
  v16[2] = *(_OWORD *)(a2 + 32);
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_479;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  swift_retain();
  outlined retain of ParticipantMediaPriorities((void **)a2);
  static DispatchQoS.unspecified.getter();
  v27 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  v20 = v23;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v6, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v20);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
  return swift_release();
}

void specialized closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  float v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  float v33;
  uint64_t v34;
  float (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  int v38;
  float v39;
  char v40;
  float v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  float v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;

  v6 = type metadata accessor for UUID();
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v56 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v56 - v18;
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  v60 = a1;
  v21 = (uint64_t *)(a1 + v20);
  swift_beginAccess();
  v22 = *v21;
  v61 = a2;
  v65 = a2;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:), (uint64_t)v64, v22);
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease();
  v28 = *(float *)(a3 + 40);
  v27 = *(float *)(a3 + 44);
  v29 = v27 + 0.01;
  if (one-time initialization token for shared != -1)
    swift_once();
  if ((*(float (**)(void))(*(_QWORD *)static Defaults.shared + 328))() < v29)
  {
    v31 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v10, v61, v63);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v31);
    v32 = v60 + *(_QWORD *)(*(_QWORD *)v60 + 112);
    swift_beginAccess();
    outlined assign with take of Date?((uint64_t)v10, v32, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v30 = swift_endAccess();
  }
  v33 = v28 + 0.01;
  v34 = static Defaults.shared;
  v35 = *(float (**)(void))(*(_QWORD *)static Defaults.shared + 328);
  if (((float (*)(uint64_t))v35)(v30) < (float)(v28 + 0.01) || v35() < v29)
  {
    if ((v26 & 1) == 0)
    {
      if ((v24 & 0x8000000000000000) != 0)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v24 >= *(_QWORD *)(*v21 + 16))
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v36 = *(unsigned __int8 *)(v12 + 80);
      v37 = *v21 + ((v36 + 32) & ~v36);
      v57 = *(_QWORD *)(v12 + 72);
      outlined init with copy of FeatureEligibility?(v37 + v57 * v24, (uint64_t)v16, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v38 = v16[v11[11]];
      if (v38 == v35() >= v33)
        v39 = (*(float (**)(void))(*(_QWORD *)v34 + 408))();
      else
        v39 = *(float *)&v16[v11[10]];
      v44 = 1;
LABEL_20:
      v45 = v62;
      v46 = v59;
      v47 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v59, v61, v63);
      v48 = *(_DWORD *)&v16[v11[9]];
      v49 = *(_DWORD *)&v16[v11[12]];
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v16, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v19, v46, v47);
      *(_DWORD *)&v19[v11[9]] = v48;
      *(float *)&v19[v11[10]] = v39;
      v19[v11[11]] = v44;
      *(_DWORD *)&v19[v11[12]] = v49;
      *(float *)&v19[v11[13]] = v28;
      *(float *)&v19[v11[14]] = v27;
      swift_beginAccess();
      v50 = *v21;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v21 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v50 = specialized _ArrayBuffer._consumeAndCreateNew()();
        *v21 = v50;
      }
      if (v24 < *(_QWORD *)(v50 + 16))
      {
        outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v19, v50 + ((v36 + 32) & ~(unint64_t)v36) + v57 * v24);
LABEL_26:
        swift_endAccess();
        specialized MostActiveParticipantsController.startEMATimerIfNecessary()();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        return;
      }
      __break(1u);
      goto LABEL_29;
    }
    v40 = 1;
    v41 = 1.0;
LABEL_25:
    v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v19, v61, v63);
    v53 = (*(float (**)(uint64_t))(*(_QWORD *)v34 + 408))(v52);
    *(float *)&v19[v11[9]] = v41;
    *(float *)&v19[v11[10]] = v53;
    v19[v11[11]] = v40;
    *(_DWORD *)&v19[v11[12]] = 1065353216;
    *(float *)&v19[v11[13]] = v28;
    *(float *)&v19[v11[14]] = v27;
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v54 = *(_QWORD *)(*v21 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v54);
    v55 = *v21;
    *(_QWORD *)(v55 + 16) = v54 + 1;
    outlined init with copy of FeatureEligibility?((uint64_t)v19, v55+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v54, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    goto LABEL_26;
  }
  if ((v26 & 1) != 0)
  {
    v40 = 0;
    v41 = 0.0;
    goto LABEL_25;
  }
  if ((v24 & 0x8000000000000000) != 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v42 = *v21;
  if (v24 < *(_QWORD *)(*v21 + 16))
  {
    v36 = *(unsigned __int8 *)(v12 + 80);
    v57 = *(_QWORD *)(v12 + 72);
    v16 = v58;
    outlined init with copy of FeatureEligibility?(v42 + ((v36 + 32) & ~v36) + v57 * v24, (uint64_t)v58, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    v43 = v16[v11[11]];
    if (v43 == v35() >= v33)
    {
      v39 = (*(float (**)(void))(*(_QWORD *)v34 + 408))();
      v44 = 0;
    }
    else
    {
      v44 = 0;
      v39 = *(float *)&v16[v11[10]];
    }
    goto LABEL_20;
  }
LABEL_32:
  __break(1u);
}

uint64_t specialized MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[7];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x1E0C80A78](v2);
  v50 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTimeInterval();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v44 = (_QWORD *)((char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = type metadata accessor for DispatchTime();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)v39 - v11;
  ObjectType = type metadata accessor for OS_dispatch_source.TimerFlags();
  v13 = *(_QWORD *)(ObjectType - 8);
  MEMORY[0x1E0C80A78](ObjectType);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchPredicate();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (_QWORD *)((char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v22 = *(void **)(v1 + v21);
  *v20 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v17 + 104))(v20, *MEMORY[0x1E0DEF740], v16, v18);
  v23 = v22;
  v24 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v20, v16);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  if (*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136)))
    return result;
  v40 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_source);
  v39[1] = v26;
  v27 = *(void **)(v1 + v21);
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_source.TimerFlags and conformance OS_dispatch_source.TimerFlags);
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_source.TimerFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [OS_dispatch_source.TimerFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v24 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, ObjectType);
  ObjectType = swift_getObjectType();
  static DispatchTime.now()();
  if (one-time initialization token for shared != -1)
    goto LABEL_7;
LABEL_4:
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 416))();
  v29 = v42;
  MEMORY[0x1C3B72C50](v9);
  v30 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  v31 = v43;
  v32 = v30(v9, v43);
  v33 = (*(double (**)(uint64_t))(*(_QWORD *)static Defaults.shared + 416))(v32);
  v34 = v44;
  default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v44);
  MEMORY[0x1C3B73730](v29, v34, ObjectType, v33);
  (*(void (**)(_QWORD *, uint64_t))(v45 + 8))(v34, v46);
  v30(v29, v31);
  v35 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary();
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_485;
  v36 = _Block_copy(aBlock);
  swift_retain();
  v37 = v47;
  static DispatchQoS.unspecified.getter();
  v38 = v50;
  default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v49);
  swift_release();
  swift_release();
  OS_dispatch_source.resume()();
  *(_QWORD *)(v1 + v40) = v24;
  return swift_unknownObjectRelease();
}

uint64_t specialized MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v20 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v19 = *(id *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(_BYTE *)(v15 + v14 + v12) = v20;
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_297;
  v16 = _Block_copy(aBlock);
  v17 = v19;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v24 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return swift_release();
}

uint64_t specialized closure #1 in MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = specialized MostActiveParticipantsController.boostParticipantEMAToMax(_:)(a2);
  if ((a3 & 1) == 0)
  {
    specialized MostActiveParticipantsController.updateActiveParticipantsEMA()();
    return specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(0);
  }
  return result;
}

uint64_t specialized MostActiveParticipantsController.boostParticipantEMAToMax(_:)(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  float v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[16];
  uint64_t v30;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v29[-v9];
  v11 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  swift_beginAccess();
  v12 = *v11;
  v30 = a1;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for specialized closure #1 in MostActiveParticipantsController.boostParticipantEMAToMax(_:), (uint64_t)v29, v12);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v22 = type metadata accessor for UUID();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v7, a1, v22);
    if (one-time initialization token for shared == -1)
    {
LABEL_10:
      v23 = static Defaults.shared;
      v24 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
      v25 = (*(float (**)(void))(*(_QWORD *)v23 + 424))();
      *(_DWORD *)&v7[v4[9]] = 1065353216;
      *(float *)&v7[v4[10]] = v24;
      v7[v4[11]] = 1;
      *(float *)&v7[v4[12]] = v25 + 0.01;
      *(_DWORD *)&v7[v4[13]] = 0;
      *(_DWORD *)&v7[v4[14]] = 0;
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v26 = *(_QWORD *)(*v11 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
      v27 = *v11;
      *(_QWORD *)(v27 + 16) = v26 + 1;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, v27+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      return swift_endAccess();
    }
LABEL_16:
    swift_once();
    goto LABEL_10;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v14 < *(_QWORD *)(*v11 + 16))
  {
    v7 = (_BYTE *)((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v16 = *(_QWORD *)(v5 + 72) * v14;
    v17 = &v7[*v11 + v16];
    v18 = type metadata accessor for UUID();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, a1, v18);
    v2 = *(_DWORD *)&v17[v4[10]];
    if (one-time initialization token for shared == -1)
      goto LABEL_5;
    goto LABEL_14;
  }
  __break(1u);
LABEL_14:
  swift_once();
LABEL_5:
  v19 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 424))();
  *(_DWORD *)&v10[v4[9]] = 1065353216;
  *(_DWORD *)&v10[v4[10]] = v2;
  v10[v4[11]] = 1;
  *(float *)&v10[v4[12]] = v19 + 0.01;
  *(_DWORD *)&v10[v4[13]] = 0;
  *(_DWORD *)&v10[v4[14]] = 0;
  swift_beginAccess();
  v20 = *v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v11 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v20 = specialized _ArrayBuffer._consumeAndCreateNew()();
    *v11 = v20;
  }
  if (v14 >= *(_QWORD *)(v20 + 16))
  {
    __break(1u);
    goto LABEL_16;
  }
  outlined assign with take of Date?((uint64_t)v10, (uint64_t)&v7[v20 + v16], &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  return swift_endAccess();
}

uint64_t specialized MostActiveParticipantsController.updateActiveParticipantsEMA()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t result;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  float v42;
  float v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD aBlock[6];

  v1 = v0;
  v68 = type metadata accessor for DispatchWorkItemFlags();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DispatchQoS();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v4 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v60 - v8;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails));
  MEMORY[0x1E0C80A78](v70);
  v60 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails)?);
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char **)((char *)&v60 - v14);
  v16 = type metadata accessor for DispatchPredicate();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char **)((char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD *)(*v1 + 152);
  v71 = v1;
  v22 = *(void **)((char *)v1 + v21);
  *v20 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v17 + 104))(v20, *MEMORY[0x1E0DEF740], v16, v18);
  v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v20, v16);
  if ((v22 & 1) != 0)
  {
    v25 = v71;
    v26 = (_QWORD *)((char *)v71 + *(_QWORD *)(*v71 + 128));
    swift_beginAccess();
    v75 = v26;
    v27 = *v26;
    v76 = *(_QWORD *)(*v26 + 16);
    v61 = v27;
    swift_bridgeObjectRetain();
    v72 = v25 + 4;
    result = swift_beginAccess();
    v28 = 0;
    v29 = v70;
    v30 = (unint64_t *)v69;
    v62 = v6;
    v73 = v15;
    while (1)
    {
      if (v28 == v76)
      {
        v31 = 1;
        v32 = v76;
      }
      else
      {
        if (v28 >= *(_QWORD *)(v61 + 16))
          goto LABEL_21;
        v33 = v28;
        v32 = v28 + 1;
        v34 = (uint64_t)&v60[*(int *)(v29 + 48)];
        outlined init with copy of FeatureEligibility?(v61+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v28, v34, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v35 = (uint64_t)v30 + *(int *)(v29 + 48);
        *v30 = v33;
        outlined init with take of MultiwayViewController.ViewContent?(v34, v35, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v31 = 0;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v30, v31, 1, v29);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: MostActiveParticipantsController<UUID>.ActivityDetails)?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v29) == 1)
        return swift_bridgeObjectRelease();
      v78 = v32;
      v36 = *v15;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15 + *(int *)(v29 + 48), (uint64_t)v9, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v37 = (int *)v74;
      v79 = swift_allocBox();
      v39 = v38;
      outlined init with copy of FeatureEligibility?((uint64_t)v9, v38, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      swift_beginAccess();
      v40 = v37[10];
      v41 = *(float *)(v39 + v40) + 1.0;
      if (*(_BYTE *)(v39 + v37[11]))
        v42 = 1.0;
      else
        v42 = 0.0;
      v43 = (float)(v42 * (float)(2.0 / (float)(v41 + 1.0)))
          + (float)(*(float *)(v39 + v37[9]) * (float)(1.0 - (float)(2.0 / (float)(v41 + 1.0))));
      *(float *)(v39 + v40) = v41;
      *(float *)(v39 + v37[9]) = v43;
      outlined init with copy of FeatureEligibility?(v39, (uint64_t)v6, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v44 = v75;
      swift_beginAccess();
      v45 = *v44;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v45;
      if ((result & 1) == 0)
      {
        result = specialized _ArrayBuffer._consumeAndCreateNew()();
        v45 = result;
        *v75 = result;
      }
      v46 = v79;
      if ((v36 & 0x8000000000000000) != 0)
        break;
      if (v36 >= *(_QWORD *)(v45 + 16))
        goto LABEL_20;
      outlined assign with take of Date?((uint64_t)v6, v45+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v36, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      swift_endAccess();
      v47 = *v72;
      if (*v72)
      {
        v48 = v71[5];
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        swift_retain();
        v77 = static OS_dispatch_queue.main.getter();
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = v47;
        *(_QWORD *)(v49 + 24) = v48;
        *(_QWORD *)(v49 + 32) = v46;
        *(float *)(v49 + 40) = v43;
        aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA();
        aBlock[5] = v49;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        aBlock[3] = &block_descriptor_309;
        v50 = _Block_copy(aBlock);
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v47);
        swift_retain();
        swift_release();
        v51 = v63;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        v52 = v9;
        v53 = v66;
        v54 = v4;
        v55 = v68;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        v56 = (void *)v77;
        MEMORY[0x1C3B7361C](0, v51, v53, v50);
        _Block_release(v50);

        v6 = v62;
        outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v47);
        v57 = v53;
        v9 = v52;
        v29 = v70;
        v58 = v55;
        v4 = v54;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v57, v58);
        v59 = v51;
        v30 = (unint64_t *)v69;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v65);
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      result = swift_release();
      v15 = v73;
      v28 = v78;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(char *a1)
{
  _QWORD *v1;
  double v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  double v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  BOOL v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[6];

  v3 = v1;
  v5 = type metadata accessor for DispatchWorkItemFlags();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for DispatchQoS();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = (uint64_t *)type metadata accessor for DispatchPredicate();
  v16 = *(v15 - 1);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)((char *)v3 + *(_QWORD *)(*v3 + 152));
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t *, __n128))(v16 + 104))(v19, *MEMORY[0x1E0DEF740], v15, v17);
  v21 = v20;
  v22 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t *))(v16 + 8))(v19, v15);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  v15 = (_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 128));
  swift_beginAccess();
  aBlock[0] = *v15;
  swift_bridgeObjectRetain_n();
  specialized MutableCollection<>.sort(by:)(aBlock);
  swift_bridgeObjectRelease();
  v22 = specialized MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(aBlock[0]);
  swift_release();
  if ((a1 & 1) == 0)
  {
    *v15 = v22;
    return swift_bridgeObjectRelease();
  }
  Date.init()();
  a1 = (char *)v3 + *(_QWORD *)(*v3 + 144);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, a1, v8);
  Date.timeIntervalSince(_:)();
  v2 = v23;
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  v24(v14, v8);
  if (one-time initialization token for shared != -1)
    goto LABEL_12;
LABEL_4:
  if ((*(double (**)(void))(*(_QWORD *)static Defaults.shared + 456))() >= v2)
    return swift_bridgeObjectRelease();
  v25 = swift_bridgeObjectRetain();
  v26 = specialized MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(v25, v22);
  swift_bridgeObjectRelease();
  *v15 = v22;
  swift_bridgeObjectRelease();
  result = swift_beginAccess();
  v28 = v3[2];
  if (v28)
  {
    if (v26)
    {
      v29 = v3[3];
      swift_retain();
      Date.init()();
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, v14, v8);
      swift_endAccess();
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v30 = (void *)static OS_dispatch_queue.main.getter();
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = v28;
      v31[3] = v29;
      v31[4] = v3;
      aBlock[4] = (uint64_t)partial apply for specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:);
      aBlock[5] = (uint64_t)v31;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = (uint64_t)&block_descriptor_303;
      v32 = _Block_copy(aBlock);
      _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v28);
      swift_retain();
      swift_release();
      v33 = v37;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      v34 = v40;
      v35 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B7361C](0, v33, v34, v32);
      _Block_release(v32);

      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v28);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v33, v39);
    }
  }
  return result;
}

uint64_t specialized MostActiveParticipantsController.markParticipantAsReacting(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v20 = *(id *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_473;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v24 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return swift_release();
}

uint64_t specialized closure #1 in MostActiveParticipantsController.markParticipantAsReacting(_:)(uint64_t a1, uint64_t a2)
{
  specialized MostActiveParticipantsController.boostParticipantEMAToMax(_:)(a2);
  specialized MostActiveParticipantsController.updateActiveParticipantsEMA()();
  return specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)((char *)1);
}

uint64_t specialized MostActiveParticipantsController.markParticipantAsOffline(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS();
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v20 = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(_QWORD *)(v15 + ((v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  aBlock[4] = partial apply for specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:);
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_498;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v24 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return swift_release();
}

void specialized closure #1 in MostActiveParticipantsController.markParticipantAsOffline(_:)(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  float v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 408))();
  *(_DWORD *)&v7[v4[9]] = 0;
  *(float *)&v7[v4[10]] = v9;
  v7[v4[11]] = 0;
  *(_DWORD *)&v7[v4[12]] = 1065353216;
  *(_DWORD *)&v7[v4[13]] = 0;
  *(_DWORD *)&v7[v4[14]] = 0;
  v10 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 128));
  v11 = swift_beginAccess();
  v12 = *v10;
  MEMORY[0x1E0C80A78](v11);
  *(&v21 - 2) = a1;
  swift_bridgeObjectRetain();
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:), (uint64_t)(&v21 - 4), v12);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v19 = *(_QWORD *)(*v10 + 16);
    specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
    v20 = *v10;
    *(_QWORD *)(v20 + 16) = v19 + 1;
    outlined init with copy of FeatureEligibility?((uint64_t)v7, v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v19, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    goto LABEL_9;
  }
  swift_beginAccess();
  v17 = *v10;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v10 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_6;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = specialized _ArrayBuffer._consumeAndCreateNew()();
  *v10 = v17;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_6:
  if (v14 < *(_QWORD *)(v17 + 16))
  {
    outlined assign with copy of MostActiveParticipantsController<UUID>.ActivityDetails((uint64_t)v7, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14);
LABEL_9:
    swift_endAccess();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t specialized closure #1 in closure #1 in MostActiveParticipantsController.update(_:mediaPriorities:)()
{
  OUTLINED_FUNCTION_522_0();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.updateActiveParticipantsEMA()(void (*a1)(char *, float, float, float), float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v9 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  a1(v7, a2, *(float *)(v9 + *(int *)(v8 + 52)), *(float *)(v9 + *(int *)(v8 + 56)));
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t specialized MostActiveParticipantsController.applyProminenceWeights(sortedParticipants:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t active;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 > 2)
  {
    v14 = swift_bridgeObjectRetain();
    active = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay15ConversationKit32MostActiveParticipantsControllerC15ActivityDetailsVy10Foundation4UUIDV_GGG_APs5NeverOTg506_sSi15f5Kit32hijk3C15lm38Vyx_GAFIgynr_Si6offset_AF7elementtAFs5p140OIegnrzr_SHRzlTR10Foundation4UUIDV_TG504_s15a5Kit32cdef79C22applyProminenceWeights33_96A8A9BA1FE613479F021FF747BF6BADLL06sortedE0SayAC15gH47U54_GGAJ_tFAISi_AItXEfU0_10Foundation4UUIDV_Tg5Tf3nnnpf_nTf1cn_n(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    active = MEMORY[0x1E0DEE9D8];
    if (v8)
    {
      v17 = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v11 = a1 + v10;
      v12 = *(_QWORD *)(v2 + 72);
      do
      {
        outlined init with copy of FeatureEligibility?(v11, (uint64_t)v4, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        outlined init with copy of FeatureEligibility?((uint64_t)v4, (uint64_t)v7, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        if (one-time initialization token for shared != -1)
          swift_once();
        *(float *)&v7[*(int *)(v16 + 48)] = (*(float (**)(void))(*(_QWORD *)static Defaults.shared + 448))();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        active = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          active = v17;
        }
        v13 = *(_QWORD *)(active + 16);
        if (v13 >= *(_QWORD *)(active + 24) >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          active = v17;
        }
        *(_QWORD *)(active + 16) = v13 + 1;
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, active + v10 + v13 * v12, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v11 += v12;
        --v8;
      }
      while (v8);
    }
  }
  return active;
}

BOOL specialized MostActiveParticipantsController.shouldPostMostActiveParticipantsDidChange(oldParticipantsDetails:newParticipantsDetails:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;

  v51 = (uint64_t *)a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v54 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v49 - v11;
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)((char *)v2 + *(_QWORD *)(*v2 + 152));
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v14 + 104))(v17, *MEMORY[0x1E0DEF740], v13, v15);
  v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) == 0)
    goto LABEL_32;
  v2 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  swift_beginAccess();
  v20 = specialized Collection.prefix(_:)(*v2, a1);
  v52 = v22;
  v24 = v23 >> 1;
  v25 = (v23 >> 1) - v21;
  if (__OFSUB__(v23 >> 1, v21))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v25)
  {
    v26 = v21;
    v49 = v20;
    v50 = v2;
    v55 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v2 = (uint64_t *)&v55;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v2 = &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails;
    while (v26 < v24)
    {
      outlined init with copy of FeatureEligibility?(v52 + *(_QWORD *)(v54 + 72) * v26, v6, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, v6, v7);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      a1 = (uint64_t)v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16) + 1, 1);
        a1 = (uint64_t)v55;
      }
      v28 = *(_QWORD *)(a1 + 16);
      v27 = *(_QWORD *)(a1 + 24);
      if (v28 >= v27 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        a1 = (uint64_t)v55;
      }
      *(_QWORD *)(a1 + 16) = v28 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, v12, v7);
      v55 = (uint64_t *)a1;
      if (v24 == ++v26)
      {
        swift_unknownObjectRelease();
        v2 = v50;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  a1 = MEMORY[0x1E0DEE9D8];
LABEL_14:
  v29 = *v2;
  v2 = v51;
  v30 = specialized Collection.prefix(_:)(v29, (uint64_t)v51);
  v52 = v32;
  v34 = v33 >> 1;
  v35 = (v33 >> 1) - v31;
  if (__OFSUB__(v33 >> 1, v31))
    goto LABEL_34;
  if (v35)
  {
    v36 = v31;
    v50 = (uint64_t *)v30;
    v55 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v2 = (uint64_t *)&v55;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    while (v36 < v34)
    {
      outlined init with copy of FeatureEligibility?(v52 + *(_QWORD *)(v54 + 72) * v36, v6, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v53, v6, v7);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v6, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v2 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2[2] + 1, 1);
        v2 = v55;
      }
      v38 = v2[2];
      v37 = v2[3];
      if (v38 >= v37 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
        v2 = v55;
      }
      v2[2] = v38 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v38, v53, v7);
      v55 = v2;
      if (v34 == ++v36)
      {
        swift_unknownObjectRelease();
        goto LABEL_25;
      }
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  v2 = (uint64_t *)MEMORY[0x1E0DEE9D8];
LABEL_25:
  specialized static Array<A>.== infix(_:_:)();
  LOBYTE(v6) = v39;
  if ((v39 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_28:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1BD645380;
      v55 = (uint64_t *)a1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID]);
      v41 = String.init<A>(reflecting:)();
      v43 = v42;
      v44 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
      v45 = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v40 + 64) = v45;
      *(_QWORD *)(v40 + 32) = v41;
      *(_QWORD *)(v40 + 40) = v43;
      v55 = v2;
      v46 = String.init<A>(reflecting:)();
      *(_QWORD *)(v40 + 96) = v44;
      *(_QWORD *)(v40 + 104) = v45;
      *(_QWORD *)(v40 + 72) = v46;
      *(_QWORD *)(v40 + 80) = v47;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      goto LABEL_29;
    }
LABEL_37:
    swift_once();
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease();
  return (v6 & 1) == 0;
}

uint64_t specialized closure #1 in MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)(uint64_t (*a1)(BOOL))
{
  BOOL v2;

  v2 = specialized MostActiveParticipantsController.mostActiveParticipantProminenceChangeReason.getter();
  return a1(v2);
}

uint64_t default argument 2 of OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x1E0DEF480];
  type metadata accessor for DispatchTimeInterval();
  OUTLINED_FUNCTION_100_0();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 104))(a1, v2);
}

uint64_t specialized closure #1 in MostActiveParticipantsController.startEMATimerIfNecessary()()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    specialized MostActiveParticipantsController.updateActiveParticipantsEMA()();
    if ((specialized MostActiveParticipantsController.activityDetailsAboveThreshold()() & 1) != 0)
      specialized MostActiveParticipantsController.checkForMostActiveParticipantChange(shouldPostCallback:)((char *)1);
    return swift_release();
  }
  return result;
}

uint64_t specialized MostActiveParticipantsController.activityDetailsAboveThreshold()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL8 v31;
  _BYTE v32[4];
  int v33;
  _BYTE *v34;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails?);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v12 + 104))(v15, *MEMORY[0x1E0DEF740], v11, v13);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) != 0)
  {
    v34 = v7;
    v19 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v19, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v20 = type metadata accessor for UUID();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    v22 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
    swift_beginAccess();
    v23 = *v22;
    v24 = *(_QWORD *)(*v22 + 16);
    if (v24)
    {
      v33 = EnumTagSinglePayload;
      v25 = v23 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v26 = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        outlined init with copy of FeatureEligibility?(v25, (uint64_t)v4, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v27 = *(float *)&v4[*(int *)(v1 + 36)];
        if (one-time initialization token for shared != -1)
          swift_once();
        if ((*(float (**)(void))(*(_QWORD *)static Defaults.shared + 464))() < v27)
          break;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
        v25 += v26;
        if (!--v24)
        {
          v28 = 1;
          v29 = (uint64_t)v34;
          goto LABEL_11;
        }
      }
      v29 = (uint64_t)v34;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v34, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails);
      v28 = 0;
LABEL_11:
      EnumTagSinglePayload = v33;
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = 1;
      v29 = (uint64_t)v34;
    }
    __swift_storeEnumTagSinglePayload(v29, v28, 1, v1);
    swift_bridgeObjectRelease();
    v31 = __swift_getEnumTagSinglePayload(v29, 1, v1) != 1 || EnumTagSinglePayload != 1;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for MostActiveParticipantsController<UUID>.ActivityDetails?);
    return v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void default argument 1 of OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  OUTLINED_FUNCTION_285_0();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OUTLINED_FUNCTION_8_15();
}

void specialized EffectsHandler.wipeEffectsState()()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  void *v4;
  id *v5;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_320_2();
  if (v1)
  {
    MultiwayViewController.effectsViewController.getter();
    if (v2)
    {
      v3 = v2;
      objc_opt_self();
      v4 = (void *)OUTLINED_FUNCTION_95();
      if (v4)
        objc_msgSend(v4, sel_removeAllEffects);

    }
    v5 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
    OUTLINED_FUNCTION_1();
    if (*v5)
      OUTLINED_FUNCTION_18_4(*v5, sel_setMode_);
  }
  OUTLINED_FUNCTION_8_15();
}

void specialized EffectsHandler.handleAVCServerTimeout()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  OUTLINED_FUNCTION_93();
  v10 = *(_QWORD *)(OUTLINED_FUNCTION_285_0() - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v3);
  v4 = OUTLINED_FUNCTION_20_3();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  v6 = os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_59(v6, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v7 = (void *)OUTLINED_FUNCTION_7_22();
  *(_QWORD *)(OUTLINED_FUNCTION_15() + 16) = v0;
  v8 = OUTLINED_FUNCTION_15_1((uint64_t)thunk for @escaping @callee_guaranteed () -> ());
  v9 = v0;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_269();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_431((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  OUTLINED_FUNCTION_290_4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v2, v1, v8);
  _Block_release(v8);

  OUTLINED_FUNCTION_39_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_52_1();
}

void specialized closure #1 in EffectsHandler.handleAVCServerTimeout()(void *a1)
{
  char *v2;
  char *v3;
  char *v4;

  MultiwayViewController.constraintController.getter();
  if (v2)
  {
    v3 = v2;
    MultiwayViewController.effectsAvailabilityDidChange(_:)(0);
    v4 = &v3[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState];
    swift_beginAccess();
    if (*(_QWORD *)v4 <= 6uLL && ((1 << *(_QWORD *)v4) & 0x6C) != 0)
      objc_msgSend(a1, sel_setControlsState_animated_, 1, 1);
    MultiwayViewController.removeAllEffectsObjects()();

  }
}

void MultiwayViewController.constraintController.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v4);
  OUTLINED_FUNCTION_5_131((uint64_t)&v4, (uint64_t)v5);
  OUTLINED_FUNCTION_83_26(v5);
  if (!v2)
    v3 = *(id *)(v1 + 48);
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

BOOL static MultiwayViewController.LayoutIdiom.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void MultiwayViewController.layoutIdiom.getter(BOOL *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  BOOL v4;

  v4 = 0;
  if ((static Platform.current.getter() - 1) >= 3u)
  {
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v1
                                                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                               + 0xB0))() & 1) == 0
      || (v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations),
          OUTLINED_FUNCTION_1(),
          *v3 != 1))
    {
      v4 = 1;
    }
  }
  *a1 = v4;
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall MultiwayViewController.handleToggleLayoutAction()()
{
  uint64_t v0;
  char v1;
  char v2;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible) = 2;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_320_2();
  if (v1)
    v2 = 0;
  else
    v2 = 1;
  MultiwayViewController.layoutStyle.setter(&v2);
}

void sub_1BD4E66E0()
{
  MultiwayViewController.updateCurrentLayout()();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.activeRemoteParticipants(in:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  _BYTE v6[16];
  uint64_t v7;

  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  Date.init()();
  v7 = v1;
  OUTLINED_FUNCTION_124();
  specialized _ArrayProtocol.filter(_:)((uint64_t (*)(char *))partial apply for closure #1 in MultiwayViewController.activeRemoteParticipants(in:), (uint64_t)v6, a1);
  v4 = OUTLINED_FUNCTION_134_1();
  v5(v4);
  OUTLINED_FUNCTION_91();
}

void MultiwayViewController.isOneToOneModeEnabled.getter()
{
  ConversationController.isOneToOneModeEnabled.getter();
  OUTLINED_FUNCTION_0();
}

BOOL CNKPiPState.isPipped.getter(uint64_t a1)
{
  return a1 == 2;
}

void CNKPiPState.debugDescription.getter(uint64_t a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      break;
    default:
      if (one-time initialization token for default != -1)
        swift_once();
      v4 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v4, (uint64_t)&static Log.default);
      v5 = OUTLINED_FUNCTION_55_6();
      if (OUTLINED_FUNCTION_51_3(v5))
      {
        v6 = (_WORD *)OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_220_0(v6);
        OUTLINED_FUNCTION_130(&dword_1BD004000, v1, v2, "Unknown enum case", v3);
        OUTLINED_FUNCTION_60();
      }

      break;
  }
  OUTLINED_FUNCTION_91();
}

void protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance CNKPiPState()
{
  uint64_t *v0;

  CNKPiPState.debugDescription.getter(*v0);
}

void VideoMessagingError.hash(into:)()
{
  Swift::UInt v0;

  v0 = OUTLINED_FUNCTION_407();
  Hasher._combine(_:)(v0);
  OUTLINED_FUNCTION_0();
}

void VideoMessagingError.hashValue.getter()
{
  OUTLINED_FUNCTION_5_1();
  Hasher._combine(_:)(0);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

uint64_t one-time initialization function for showAddPeople()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0x50646441776F6873, 0xED0000656C706F65);
  static NSNotificationName.showAddPeople = result;
  return result;
}

id static NSNotificationName.showAddPeople.getter()
{
  if (one-time initialization token for showAddPeople != -1)
    swift_once();
  return (id)static NSNotificationName.showAddPeople;
}

uint64_t one-time initialization function for ICSIsOnScreenNotification()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000060, 0x80000001BD692460);
  static MultiwayViewController.ICSIsOnScreenNotification = result;
  return result;
}

uint64_t *MultiwayViewController.ICSIsOnScreenNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for ICSIsOnScreenNotification != -1)
    swift_once();
  return &static MultiwayViewController.ICSIsOnScreenNotification;
}

id static MultiwayViewController.ICSIsOnScreenNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ICSIsOnScreenNotification, (id *)&static MultiwayViewController.ICSIsOnScreenNotification);
}

uint64_t one-time initialization function for ICSIsOffScreenNotification()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000061, 0x80000001BD6923F0);
  static MultiwayViewController.ICSIsOffScreenNotification = result;
  return result;
}

uint64_t *MultiwayViewController.ICSIsOffScreenNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for ICSIsOffScreenNotification != -1)
    swift_once();
  return &static MultiwayViewController.ICSIsOffScreenNotification;
}

id static MultiwayViewController.ICSIsOffScreenNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for ICSIsOffScreenNotification, (id *)&static MultiwayViewController.ICSIsOffScreenNotification);
}

uint64_t one-time initialization function for LivePhotoAvailabilityChangeNotification()
{
  uint64_t result;

  result = MEMORY[0x1C3B72E00](0xD000000000000027, 0x80000001BD6923C0);
  static MultiwayViewController.LivePhotoAvailabilityChangeNotification = result;
  return result;
}

uint64_t *MultiwayViewController.LivePhotoAvailabilityChangeNotification.unsafeMutableAddressor()
{
  if (one-time initialization token for LivePhotoAvailabilityChangeNotification != -1)
    swift_once();
  return &static MultiwayViewController.LivePhotoAvailabilityChangeNotification;
}

id static MultiwayViewController.LivePhotoAvailabilityChangeNotification.getter()
{
  return default argument 0 of ScreenSharingInteraction.init(interactionController:)(&one-time initialization token for LivePhotoAvailabilityChangeNotification, (id *)&static MultiwayViewController.LivePhotoAvailabilityChangeNotification);
}

void MultiwayViewController.queryForSuggestedBannerStartTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_1();
  v0 = OUTLINED_FUNCTION_21_6();
  outlined init with copy of FeatureEligibility?(v0, v1, v2);
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.queryForSuggestedBannerStartTime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_50();
  outlined assign with take of Date?(v0, v1, v2);
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.queryForSuggestedBannerStartTime.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.remoteControlAccessoryEventsAgent.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.remoteControlAccessoryEventsAgent.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void MultiwayViewController.remoteControlAccessoryEventsAgent.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow, (void (*)(uint64_t))MultiwayViewController.isInCallEndedBlockAndReportFlow.didset);
}

uint64_t key path getter for MultiwayViewController.isInCallEndedBlockAndReportFlow : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char *v4;
  void *v5;
  void *v6;

  v2 = v1;
  v3 = a1 & 1;
  v4 = (char *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow);
  swift_beginAccess();
  if (*v4 != v3)
  {
    MultiwayViewController.localParticipantView.getter();
    if (v5)
    {
      v6 = v5;
      type metadata accessor for LocalParticipantView();
      if (swift_dynamicCastClass())
      {
        LocalParticipantView.shouldAddOverlayBlur.setter(*v4);
        MultiwayViewController.updateLocalParticipantState()();
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      }

    }
  }
}

void MultiwayViewController.localParticipantView.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v4);
  OUTLINED_FUNCTION_5_131((uint64_t)&v4, (uint64_t)v5);
  OUTLINED_FUNCTION_83_26(v5);
  if (!v2)
    v3 = *(id *)(v1 + 56);
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

_QWORD *MultiwayViewController.updateLocalParticipantState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  char v13;
  _QWORD *result;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t *v22;
  int v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  char v33;
  char v34;
  unsigned __int8 *v35;
  _QWORD *v36;
  void (*v37)(_BYTE *);
  _QWORD *v38;
  char *v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[160];
  _BYTE v49[216];
  uint64_t v50[6];
  uint64_t v51;
  _BYTE v52[8];
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for logger != -1)
    swift_once();
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)logger);
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1BD004000, v10, v11, "updateLocalParticipantState", v12, 2u);
    MEMORY[0x1C3B751B8](v12, -1, -1);
  }

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v13 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v13 & 1) != 0)
  {
    v15 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v15, (uint64_t)v49, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v49, (uint64_t)v50, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v50);
    if ((_DWORD)result != 1)
    {
      v39 = v4;
      v16 = *(id *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v49);
      v45 = ConversationController.isOneToOneModeEnabled.getter();
      ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
      v44 = v17;
      v18 = (uint64_t *)&v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
      swift_beginAccess();
      v19 = *v18;
      swift_bridgeObjectRetain();
      ConversationController.hasRingingCalls.getter();
      v43 = v20;
      ConversationController.isTrackingActiveConversation.getter();
      v42 = v21;
      v22 = (uint64_t *)&v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
      swift_beginAccess();
      v41 = *v22;
      ConversationController.isWaitingOnFirstRemoteFrame.getter();
      v40 = v23;
      v24 = ConversationController.isLocallyCreated.getter();
      v25 = &v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
      swift_beginAccess();
      v26 = v1;
      v27 = *((_QWORD *)v25 + 1);
      ObjectType = swift_getObjectType();
      v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 208);
      swift_unknownObjectRetain();
      LOBYTE(v27) = v29(ObjectType, v27);
      swift_unknownObjectRelease();
      ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
      LOBYTE(v25) = v16[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

      v52[0] = v45 & 1;
      v52[1] = v44 & 1;
      v53 = v19;
      v54 = v43 & 1;
      v55 = v42 & 1;
      v56 = v41;
      v57 = v40 & 1;
      v58 = v24 & 1;
      v59 = v27 & 1;
      v60 = (char)v25;
      v30 = MultiwayViewController.localParticipantState(for:)((uint64_t)v52);
      swift_bridgeObjectRelease();
      if (v30 > 0x3Fu)
        goto LABEL_10;
      v31 = (unsigned __int8 *)(v51 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      if (*v31 != 128
        || (swift_beginAccess(),
            v32 = (uint64_t)v39,
            _s15ConversationKit11ParticipantVWOcTm_4(),
            Participant.isActiveWithVideo.getter(),
            v34 = v33,
            outlined destroy of AccountUpdateNotice(v32, type metadata accessor for Participant),
            (v34 & 1) == 0))
      {
LABEL_10:
        v35 = (unsigned __int8 *)(v51 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if (*v35 >= 0x81u && (v30 & 0x80) == 0)
        {
          ConversationController.lookupActiveConversation()();
          if (v47)
          {
            outlined init with take of Notice(&v46, (uint64_t)v48);
            v36 = *(_QWORD **)(v26 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
            v37 = *(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v36) + 0xC8);
            v38 = v36;
            v37(v48);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
          }
          else
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v46, &demangling cache variable for type metadata for Conversation?);
          }
        }
        MultiwayViewController.setLocalParticipantState(_:animated:)(v30, 1);
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v49);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(int a1)
{
  char *v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  _QWORD *result;
  unsigned __int8 *v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  char *v37;
  int v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  void *v61;
  unsigned __int8 v62;
  char *v63;
  id v64;
  void *v65;
  _QWORD *v66;
  uint64_t (*v67)(void);
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  char v72;
  char v73;
  unsigned __int8 v74;
  char v75;
  uint64_t v76;
  char *v77;
  id v78;
  void *v79;
  uint64_t v80;
  _BYTE *v81;
  char *v82;
  void *v83;
  void *v84;
  unsigned int v85;
  void *v86;
  void *v87;
  unsigned int v88;
  void *v89;
  void *v90;
  unsigned int v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  BOOL v95;
  char v96;
  uint64_t v97;
  char v98;
  void *v99;
  char v100;
  id v101;
  id v102;
  uint64_t v103;
  id *v104;
  void (*v105)(_QWORD, uint64_t *, id);
  id v106;
  void *v107;
  void *v108;
  char v109;
  void (*v110)(_QWORD);
  _QWORD *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int v116;
  id v117;
  int v118;
  int v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  char v123;
  __int128 v124;
  uint64_t v125;
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  _BYTE v129[240];
  _BYTE v130[216];
  uint64_t v131[2];
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  id v137;
  id v138;

  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_86;
  }
  v14 = (uint64_t)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v14, (uint64_t)v130, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v130, (uint64_t)v131, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v131);
  if ((_DWORD)result == 1)
    return result;
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v130, (uint64_t)v129, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v129);
  if ((MultiwayViewController.wantsStandardControls.getter() & 1) != 0)
  {
    v16 = (unsigned __int8 *)(v134 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    v17 = *v16;
    v118 = a1;
    if (v17 >= 0x81)
    {
      v19 = *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
      ConversationController.isTrackingActiveConversation.getter();
      if ((v20 & 1) != 0)
      {
        v21 = 0;
      }
      else
      {
        v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
        ObjectType = swift_getObjectType();
        v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 600))(ObjectType, v22) ^ 1;
      }
      v24 = v19 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callWaitingUUIDs;
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v24 + 16))
      {
        v116 = 0;
        v18 = 1;
      }
      else
      {
        v25 = v19 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
        swift_beginAccess();
        v26 = *(_QWORD *)(v25 + 8);
        v27 = swift_getObjectType();
        v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 208);
        swift_unknownObjectRetain();
        LODWORD(v26) = v28(v27, v26);
        swift_unknownObjectRelease();
        if (((v26 | v21) & 1) != 0)
        {
          v116 = 0;
          v18 = 1;
        }
        else
        {
          ConversationController.hasRingingCalls.getter();
          if ((v29 & 1) != 0 && (MultiwayViewController.didExpandActiveVideoCallFromBanner.getter() & 1) == 0
            || (v30 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow],
                swift_beginAccess(),
                (*v30 & 1) != 0))
          {
            v116 = 0;
            v18 = 1;
          }
          else
          {
            v31 = *(_QWORD *)(v25 + 8);
            v32 = swift_getObjectType();
            v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 184);
            swift_unknownObjectRetain();
            LODWORD(v31) = v33(v32, v31);
            swift_unknownObjectRelease();
            if ((_DWORD)v31 == 5
              || (v34 = *(_QWORD *)(v25 + 8),
                  v35 = swift_getObjectType(),
                  v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 184),
                  swift_unknownObjectRetain(),
                  LODWORD(v34) = v36(v35, v34),
                  swift_unknownObjectRelease(),
                  (_DWORD)v34 == 6))
            {
              v37 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen];
              swift_beginAccess();
              v18 = 0;
              v38 = *v37;
            }
            else
            {
              v18 = 0;
              v38 = 1;
            }
            v116 = v38;
          }
        }
      }
    }
    else
    {
      v18 = 0;
      v116 = 1;
    }
    v39 = v138;
    if (v138)
      objc_msgSend(v138, sel_setHidden_, v18 ^ 1u);
    v117 = v39;
    v119 = v18;
    v40 = *(_QWORD *)&v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    v41 = v40 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
    swift_beginAccess();
    outlined init with copy of RadarReporting(v41, (uint64_t)v126);
    v42 = v127;
    v43 = v128;
    __swift_project_boxed_opaque_existential_1(v126, v127);
    v115 = v40;
    v2 = v40 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v44 = *(_QWORD *)(v2 + 8);
    v45 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 104);
    v46 = swift_unknownObjectRetain();
    v45(&v124, v46, v44, v42, v43);
    swift_unknownObjectRelease();
    if (!v125)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v124, &demangling cache variable for type metadata for Conversation?);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
      v62 = v118;
      goto LABEL_41;
    }
    outlined init with take of Notice(&v124, (uint64_t)&v120);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
    v47 = v122;
    __swift_project_boxed_opaque_existential_1(&v120, v122);
    v48 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v47 + 1) + 280))(v47, *((_QWORD *)&v47 + 1));
    v49 = v119 ^ 1;
    if (v48 == 2)
      v49 = 1;
    if ((v49 & 1) != 0)
      goto LABEL_30;
    v50 = *(_QWORD *)(v2 + 8);
    v51 = swift_getObjectType();
    v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 184);
    swift_unknownObjectRetain();
    LODWORD(v50) = v52(v51, v50);
    swift_unknownObjectRelease();
    if ((_DWORD)v50 != 4
      || (v53 = *(_QWORD *)(v2 + 8),
          v54 = swift_getObjectType(),
          v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 304),
          swift_unknownObjectRetain(),
          LOBYTE(v53) = v55(v54, v53),
          swift_unknownObjectRelease(),
          (v53 & 1) != 0))
    {
LABEL_30:
      v3 = 0;
    }
    else
    {
      v113 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo];
      swift_beginAccess();
      v3 = *v113 ^ 1;
    }
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1BD6441D0;
      LOBYTE(v126[0]) = v3 & 1;
      v57 = String.init<A>(reflecting:)();
      v59 = v58;
      *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v56 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v56 + 32) = v57;
      *(_QWORD *)(v56 + 40) = v59;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      v60 = (_BYTE *)(v135 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
      swift_beginAccess();
      *v60 = v3 & 1;
      LocalParticipantView.updateHiding()();
      result = objc_msgSend(v4, sel_view);
      if (!result)
        goto LABEL_88;
      v61 = result;
      v62 = v118;
      if ((v3 & 1) != 0
        || (v63 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner],
            swift_beginAccess(),
            *v63 == 1))
      {
        v64 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      }
      else
      {
        if (one-time initialization token for background != -1)
          swift_once();
        v64 = (id)static Colors.MultiwayViewController.background;
      }
      v65 = v64;
      objc_msgSend(v61, sel_setBackgroundColor_, v64);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
LABEL_41:
      if (v62 == 10)
      {
        v66 = *(_QWORD **)(v115 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
        v67 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v66) + 0xF0);
        v68 = v66;
        v62 = v67();

      }
      v69 = *(_QWORD *)(v2 + 8);
      v70 = swift_getObjectType();
      v71 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 184);
      swift_unknownObjectRetain();
      LODWORD(v69) = v71(v70, v69);
      swift_unknownObjectRelease();
      v95 = (_DWORD)v69 == 6;
      v72 = v119;
      if (v95)
        v73 = 1;
      else
        v73 = v119;
      v74 = v62;
      if ((v62 - 2) < 7u)
        v75 = 1;
      else
        v75 = v73;
      v76 = v133;
      v77 = (char *)(v133 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden);
      swift_beginAccess();
      *v77 = v75;
      InCallBannerHostViewController.hideOrShowRootView()();
      v78 = v132;
      result = objc_msgSend(v132, sel_view);
      if (result)
      {
        v79 = result;
        objc_msgSend(result, sel_setHidden_, 1);

        v80 = v135;
        v81 = (_BYTE *)(v135 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden);
        swift_beginAccess();
        *v81 = v72;
        LocalParticipantView.requiresControlsHidden.didset();
        if (static Platform.current.getter() != 3)
        {
          v82 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen];
          swift_beginAccess();
          if (*v82 != 1)
            goto LABEL_63;
        }
        MultiwayViewController.call.getter();
        v84 = v83;
        v85 = objc_msgSend(v83, sel_isOutgoing);

        if (!v85)
          goto LABEL_63;
        MultiwayViewController.call.getter();
        v87 = v86;
        v88 = objc_msgSend(v86, sel_status);

        if (v88 != 5)
        {
          MultiwayViewController.call.getter();
          v90 = v89;
          v91 = objc_msgSend(v89, sel_status);

          if (v91 != 6)
            goto LABEL_63;
        }
        if (VideoMessageController.State.rawValue.getter(v74) != 0xD000000000000014 || v92 != 0x80000001BD66C3B0)
        {
          v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v93 & 1) != 0)
            goto LABEL_76;
          v95 = VideoMessageController.State.rawValue.getter(v74) == 0x616C696176616E75 && v94 == 0xEB00000000656C62;
          if (!v95)
          {
            v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v96 & 1) == 0)
            {
LABEL_63:
              v97 = type metadata accessor for ConversationControlsRecipe();
              __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v97);
              LocalParticipantView.hudRecipe.setter((uint64_t)v8);
              v98 = v119;
              v99 = v117;
LABEL_64:
              if (v137)
                objc_msgSend(v137, sel_setHidden_, v116);
              if ((v98 & 1) == 0)
              {
                v100 = MultiwayViewController.controlsMode.getter();
                InCallControlsViewController.mode.setter(v100);
              }
              if (v99)
              {
                v101 = v99;
                if ((objc_msgSend(v101, sel_isHidden) & 1) == 0)
                  objc_msgSend(v101, sel_layoutIfNeeded);

              }
              v102 = objc_msgSend(v78, sel_view);
              MultiwayViewController.bringSubviewToFront(_:)(v102);

              MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
              return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v130);
            }
LABEL_76:
            (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v80
                                                                                 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                                           + 0x248))(0);
            if (one-time initialization token for shared != -1)
              swift_once();
            v103 = static ConversationControlsRecipeGenerator.shared;
            v120 = 10;
            v121 = 0u;
            v122 = 0u;
            v123 = 6;
            v104 = (id *)(v76 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
            swift_beginAccess();
            v105 = *(void (**)(_QWORD, uint64_t *, id))(*(_QWORD *)v103 + 96);
            v106 = *v104;
            v105(0, &v120, v106);

            outlined destroy of ConversationControlsType((uint64_t)&v120);
            LocalParticipantView.hudRecipe.setter((uint64_t)v8);
            v107 = MultiwayViewController.bannerPresentationManager.getter();
            if (v107)
            {
              v108 = v107;
              v120 = 10;
              v121 = 0u;
              v122 = 0u;
              v123 = 6;
              BannerPresentationManager.updatePresentedHUD(type:replacingNotice:)();

              outlined destroy of ConversationControlsType((uint64_t)&v120);
            }
            MultiwayViewController.isPresentingEffectsBrowser.getter();
            v98 = v119;
            v99 = v117;
            if ((v109 & 1) != 0)
            {
              if (v136)
              {
                v110 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v136) + 0xB0);
                v111 = v136;
                v110(0);

              }
              v112 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled];
              swift_beginAccess();
              *v112 = 0;
              MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
            }
            goto LABEL_64;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
      __break(1u);
LABEL_88:
      __break(1u);
      return result;
    }
LABEL_86:
    swift_once();
    goto LABEL_32;
  }
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v130);
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.isInCallEndedBlockAndReportFlow.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))MultiwayViewController.isInCallEndedBlockAndReportFlow.setter);
}

void MultiwayViewController.LayoutIdiom.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.LayoutStyle.hashValue.getter()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;

  v0 = OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_22_7(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2();
}

id MultiwayViewController.conversationController.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
}

void MultiwayViewController.ConversationSnapshot.init(of:)(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t *v9;
  char v10;
  char v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v21 = ConversationController.isOneToOneModeEnabled.getter();
  ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
  v20 = v4;
  v5 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  OUTLINED_FUNCTION_1();
  v6 = *v5;
  swift_bridgeObjectRetain();
  ConversationController.hasRingingCalls.getter();
  v19 = v7;
  ConversationController.isTrackingActiveConversation.getter();
  v18 = v8;
  v9 = (uint64_t *)&a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  OUTLINED_FUNCTION_1();
  v17 = *v9;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  v11 = v10;
  v12 = ConversationController.isLocallyCreated.getter();
  v13 = &a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  OUTLINED_FUNCTION_1();
  v14 = *((_QWORD *)v13 + 1);
  v15 = OUTLINED_FUNCTION_650();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 208);
  swift_unknownObjectRetain();
  LOBYTE(v14) = v16(v15, v14);
  swift_unknownObjectRelease();
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  LOBYTE(v13) = a1[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

  *(_BYTE *)a2 = v21 & 1;
  *(_BYTE *)(a2 + 1) = v20 & 1;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_BYTE *)(a2 + 17) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = v11 & 1;
  *(_BYTE *)(a2 + 33) = v12 & 1;
  *(_BYTE *)(a2 + 34) = v14 & 1;
  *(_BYTE *)(a2 + 35) = (_BYTE)v13;
}

void *MultiwayViewController.bannerPresentationManager.getter()
{
  uint64_t v0;
  _QWORD *v1;
  void **v2;
  void *v3;
  id v4;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  swift_beginAccess();
  if (!*v1)
    return 0;
  v2 = (void **)(*v1 + OBJC_IVAR___CNKBannerPresentationManager_value);
  swift_beginAccess();
  v3 = *v2;
  v4 = v3;
  return v3;
}

void MultiwayViewController.bannerPresentationManagerBox.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.bannerPresentationManagerBox.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  MultiwayViewController.bannerPresentationManagerBox.didset();
  OUTLINED_FUNCTION_9_0();
}

id key path getter for MultiwayViewController.bannerPresentationManagerBox : MultiwayViewController@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void key path setter for MultiwayViewController.bannerPresentationManagerBox : MultiwayViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  MultiwayViewController.bannerPresentationManagerBox.setter(v1);
}

void MultiwayViewController.bannerPresentationManagerBox.didset()
{
  char *v0;
  char *v1;
  _QWORD **v2;
  _QWORD *v3;
  void (*v4)(char *, _UNKNOWN **);
  _QWORD *v5;
  char *v6;

  v1 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox];
  swift_beginAccess();
  if (*(_QWORD *)v1)
  {
    v2 = (_QWORD **)(*(_QWORD *)v1 + OBJC_IVAR___CNKBannerPresentationManager_value);
    swift_beginAccess();
    v3 = *v2;
    if ((MultiwayViewController.isFrontmostMultiway.getter() & 1) != 0)
    {
      v4 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x120);
      v5 = v3;
      v6 = v0;
      v4(v0, &protocol witness table for MultiwayViewController);

    }
  }
}

uint64_t MultiwayViewController.isFrontmostMultiway.getter()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient);
  swift_beginAccess();
  if ((*v1 & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    swift_beginAccess();
    v2 = static AmbientState.isPresented ^ 1;
  }
  return v2 & 1;
}

void MultiwayViewController.bannerPresentationManagerBox.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.bannerPresentationManagerBox.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))MultiwayViewController.bannerPresentationManagerBox.didset);
}

void MultiwayViewController.conversationControlsManager.getter()
{
  os_log_type_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, _UNKNOWN **);
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (MultiwayViewController.bannerPresentationManager.getter()
    && (OUTLINED_FUNCTION_120(),
        v2 = (_QWORD *)MEMORY[0x1E0DEEDD8],
        (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v3) + 0x180))(),
        OUTLINED_FUNCTION_14_18(),
        v1))
  {
    if ((MultiwayViewController.isFrontmostMultiway.getter() & 1) != 0)
    {
      v4 = *(void (**)(uint64_t, _UNKNOWN **))((*v2 & *v1) + 0x438);
      v5 = swift_unknownObjectRetain();
      v4(v5, &protocol witness table for MultiwayViewController);
    }
  }
  else
  {
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_17_2();
    v7 = OUTLINED_FUNCTION_3(v6, (uint64_t)&static Logger.conversationControls);
    v8 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_13_0(v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_105();
      *(_WORD *)v9 = 0;
      OUTLINED_FUNCTION_130(&dword_1BD004000, v7, v0, "Unable to acquire ConversationControlsManager", v9);
      OUTLINED_FUNCTION_60();
    }

  }
  OUTLINED_FUNCTION_18();
}

uint64_t MultiwayViewController.mostActiveParticipants.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CollectionOfOne<Participant>);
  MEMORY[0x1E0C80A78](v1);
  v79 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for UUID();
  v83 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v77 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v82);
  v86 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v78 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v89 = (uint64_t)&v76 - v9;
  MEMORY[0x1E0C80A78](v8);
  v88 = (uint64_t)&v76 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v12 = MEMORY[0x1E0C80A78](v11);
  v84 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v91 = (char *)&v76 - v15;
  MEMORY[0x1E0C80A78](v14);
  v92 = (uint64_t)&v76 - v16;
  v99 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v99);
  v95 = type metadata accessor for Participant(0);
  v93 = *(_QWORD *)(v95 - 8);
  v17 = MEMORY[0x1E0C80A78](v95);
  v85 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v94 = (uint64_t)&v76 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v22 = MEMORY[0x1E0C80A78](v21);
  v96 = (char *)&v76 - v23;
  MEMORY[0x1E0C80A78](v22);
  specialized MostActiveParticipantsController.mostActiveParticipantIdentifiers.getter();
  swift_bridgeObjectRetain();
  specialized Set.init<A>(_:)();
  v25 = v24;
  v90 = v0;
  v26 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v27, v25);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  specialized Sequence.compactMap<A>(_:)(v28, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v26;
  specialized Sequence.compactMap<A>(_:)();
  v31 = v30;
  v80 = 0;
  swift_bridgeObjectRelease();
  v101 = v31;
  specialized Array.append<A>(contentsOf:)();
  specialized Array.append<A>(contentsOf:)();
  if (*(_QWORD *)(v101 + 16))
  {
    v98 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    v81 = v101;
    swift_bridgeObjectRetain();
    v97 = MEMORY[0x1E0DEE9D8];
    _s15ConversationKit11ParticipantVWOcTm_4();
    _s15ConversationKit11ParticipantVWOcTm_4();
    v32 = (char *)&loc_1BD4E8C8C + *((int *)qword_1BD4E9440 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v33 = MEMORY[0x1E0DEE9D8];
  v101 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(v90 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 112))(ObjectType, v34);
  v38 = (uint64_t)v91;
  v39 = v92;
  v40 = v95;
  v41 = v93;
  if (v37)
  {
    v42 = v36;
    v43 = v37;
    __swift_storeEnumTagSinglePayload(v92, 1, 1, v95);
    v44 = *(_QWORD *)(v33 + 16);
    if (v44)
    {
      v45 = v33 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      v46 = *(_QWORD *)(v41 + 72);
      v97 = v33;
      swift_bridgeObjectRetain();
      v47 = v94;
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_4();
        v48 = *(void **)(v47 + *(int *)(v40 + 28));
        v49 = v47;
        if (v48)
        {
          v50 = objc_msgSend(v48, sel_value);
          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v53 = v52;

          if (v51 == v42 && v43 == v53)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v40 = v95;
            goto LABEL_17;
          }
          v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          v49 = v94;
          v40 = v95;
          if ((v55 & 1) != 0)
            break;
        }
        v47 = v49;
        outlined destroy of AccountUpdateNotice(v49, type metadata accessor for Participant);
        v45 += v46;
        if (!--v44)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = v92;
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      v39 = v92;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v92, &demangling cache variable for type metadata for Participant?);
      outlined init with take of Participant(v94, v39);
      __swift_storeEnumTagSinglePayload(v39, 0, 1, v40);
LABEL_18:
      v56 = v40;
      v57 = v87;
      v58 = (uint64_t)v86;
      v59 = (uint64_t)v85;
      v61 = v88;
      v60 = v89;
      v62 = (uint64_t)v84;
      v38 = (uint64_t)v91;
    }
    else
    {
      swift_bridgeObjectRelease();
      v56 = v40;
      v57 = v87;
      v58 = (uint64_t)v86;
      v59 = (uint64_t)v85;
      v61 = v88;
      v60 = v89;
      v62 = (uint64_t)v84;
    }
    outlined init with copy of FeatureEligibility?(v39, v38, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload(v38, 1, v56) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for Participant?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for Participant?);
      goto LABEL_35;
    }
    outlined init with take of Participant(v38, v59);
    specialized Collection.first.getter(v101, v62);
    if (__swift_getEnumTagSinglePayload(v62, 1, v56) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v62, &demangling cache variable for type metadata for Participant?);
      __swift_storeEnumTagSinglePayload(v61, 1, 1, v57);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v60, v59 + *(int *)(v56 + 20), v57);
    }
    else
    {
      v63 = v62 + *(int *)(v56 + 20);
      v64 = v62;
      v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16);
      v65(v61, v63, v57);
      outlined destroy of AccountUpdateNotice(v64, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload(v61, 0, 1, v57);
      v65(v60, v59 + *(int *)(v56 + 20), v57);
    }
    __swift_storeEnumTagSinglePayload(v60, 0, 1, v57);
    v66 = v58 + *(int *)(v82 + 48);
    outlined init with copy of FeatureEligibility?(v61, v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(v60, v66, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v58, 1, v57) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v66, 1, v57) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_33:
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for Participant?);
        v70 = v59;
LABEL_34:
        outlined destroy of AccountUpdateNotice(v70, type metadata accessor for Participant);
        goto LABEL_35;
      }
    }
    else
    {
      v67 = v78;
      outlined init with copy of FeatureEligibility?(v58, v78, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v66, 1, v57) != 1)
      {
        v71 = v83;
        v72 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v77, v66, v57);
        lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        v73 = dispatch thunk of static Equatable.== infix(_:_:)();
        v74 = *(void (**)(char *, uint64_t))(v71 + 8);
        v74(v72, v57);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v89, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v88, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v74((char *)v67, v57);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if ((v73 & 1) != 0)
          goto LABEL_33;
LABEL_30:
        MEMORY[0x1E0C80A78](v68);
        *(&v76 - 2) = v59;
        specialized MutableCollection._halfStablePartition(isSuffixElement:)((uint64_t)partial apply for closure #4 in MultiwayViewController.mostActiveParticipants.getter, (uint64_t)(&v76 - 4));
        if (*(_QWORD *)(v101 + 16) < v69)
        {
          __break(1u);
          JUMPOUT(0x1BD4E9440);
        }
        specialized Array.replaceSubrange<A>(_:with:)();
        _s15ConversationKit11ParticipantVWOcTm_4();
        specialized Array.replaceSubrange<A>(_:with:)();
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for Participant?);
        v70 = v59;
        goto LABEL_34;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v89, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v61, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v67, v57);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v58, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_30;
  }
LABEL_35:
  v100 = v101;
  specialized Array.append<A>(contentsOf:)();
  return v100;
}

uint64_t closure #4 in MultiwayViewController.mostActiveParticipants.getter()
{
  type metadata accessor for Participant(0);
  return static UUID.== infix(_:_:)() & 1;
}

void MultiwayViewController.layoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewController.layoutStyle : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void key path setter for MultiwayViewController.layoutStyle : MultiwayViewController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewController.layoutStyle.setter(&v1);
}

void MultiwayViewController.layoutStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  MultiwayViewController.layoutStyle.didset();
}

void sub_1BD4E95A4()
{
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewController.layoutStyle.didset()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t ObjectType;
  char v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  v2 = (char *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
  swift_beginAccess();
  v3 = *v2;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 256))(v3, ObjectType, v1);
  v5 = *v2;
  ConversationController.updateLayoutStyle(_:)((ConversationKit::MultiwayViewController::LayoutStyle)&v5);
}

id sub_1BD4E9634()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  _BYTE v3[216];
  uint64_t v4[38];

  MultiwayViewController.updateChangeLayoutButtonAppearanceState()();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v3, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (id)getEnumTag for TapInteraction.EventType(v4);
  if ((_DWORD)result != 1)
  {
    result = *(id *)(v1 + 168);
    if (result)
      return objc_msgSend(result, sel_setNeedsUpdateConfiguration);
  }
  return result;
}

void MultiwayViewController.layoutStyle.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.layoutStyle.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))MultiwayViewController.layoutStyle.didset);
}

void MultiwayViewController.isSplitViewActive.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isSplitViewActive.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isSplitViewActive.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.updateLayoutStyleForReactionView()()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  int v3;
  char v4;
  char v5[24];

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) == 1)
  {
    v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
    result = swift_beginAccess();
    if (*v1 == 1)
    {
      *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible) = 1;
      v4 = 0;
      MultiwayViewController.layoutStyle.setter(&v4);
    }
  }
  else
  {
    v3 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible);
    if (v3 != 2)
    {
      v5[0] = v3 & 1;
      MultiwayViewController.layoutStyle.setter(v5);
    }
  }
  return result;
}

void sub_1BD4E9860()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 + v0) = 2;
  MultiwayViewController.updateCurrentLayout()();
}

void MultiwayViewController.updateCurrentLayout()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char v11;
  char v12;
  char *v13;
  void *v14;
  unsigned __int8 *v15;
  unsigned __int8 v16;
  Swift::Int v17;
  Swift::Int *v18;
  _QWORD *v19;
  void *v20;
  unsigned __int8 v21[26];
  _BYTE v22[216];
  _BYTE v23[216];
  uint64_t v24[27];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v2, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v24) != 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v23, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle);
    swift_beginAccess();
    v21[2] = *v3;
    v4 = (void *)v24[1];
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v22);
    v5 = objc_msgSend(v4, sel_view);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_frame);
      v8 = v7;
      v10 = v9;

      ParticipantGridViewController.mediaPipIsVisible.getter();
      v12 = v11;
      MultiwayViewController.constraintController.getter();
      if (v13)
      {
        v14 = v13;
        v15 = (unsigned __int8 *)&v13[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
        swift_beginAccess();
        v16 = *v15;

      }
      else
      {
        v16 = 3;
      }
      v21[0] = v16;
      v17 = MultiwayViewController.LayoutStyle.maximumParticipantCount(portraitAspect:mediaPipIsVisible:captionsLayoutState:)(v8 < v10, v12 & 1, (ConversationKit::CaptionsLayoutState_optional)v21);
      v18 = (Swift::Int *)(*(_QWORD *)(v1
                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController)
                         + *(_QWORD *)(**(_QWORD **)(v1
                                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostActiveParticipantsController)
                                     + 120));
      swift_beginAccess();
      *v18 = v17;
      v21[0] = *v3;
      v21[1] = 1;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v21);
      MultiwayViewController.conversationControlsManager.getter();
      if (v19)
      {
        v20 = v19;
        (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v19) + 0x9C0))();
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v23);

      }
      else
      {
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v23);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t MultiwayViewController.isShowingReactions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
}

uint64_t MultiwayViewController.reactionsState.didset(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t);
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[216];
  uint64_t v29[28];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Event<Tips.EmptyDonation>);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState;
  v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
  if (*a1 != v10)
  {
    v24 = result;
    if (v10)
    {
      v11 = MultiwayViewController.reactionsViewController.getter();
      if (v11)
      {
        v12 = v11;
        (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0x98))();

      }
    }
    v13 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v13, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v28, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v29) != 1)
    {
      v14 = *(void **)(v13 + 48);
      LOBYTE(v25[0]) = *(_BYTE *)(v2 + v9);
      v15 = v14;
      MultiwayViewConstraintsController.reactionsState.setter((char *)v25);

    }
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 320);
    v19 = v18(ObjectType, v16);
    MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v19 & 1, 0, 0, 0, 0);
    if (*(_BYTE *)(v2 + v9) == 1)
    {
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.updateLocalParticipantState()();
      static VideoReactionPickerTip.hasOpenedReactionPicker.getter();
      Tips.Event.sendDonation<>(_:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v24);
      v20 = v18(ObjectType, v16);
      MultiwayViewController.controlStateAnimationTiming(for:)(v20 & 1, v25);
      v21 = v26;
      v22 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      MultiwayViewController.showReactionPicker(after:)(v23);
    }
    else
    {
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.hideReactionPicker()();
    }
    MultiwayViewController.updateShouldShowReactionPickerTipView()();
    return MultiwayViewController.updateLayoutStyleForReactionView()();
  }
  return result;
}

void *MultiwayViewController.reactionsViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[216];
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    v2 = *(void **)(v1 + 200);
    v3 = v2;
  }
  return v2;
}

id MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(int a1, char a2, void (*a3)(id), uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  id result;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(uint64_t);
  void (*v32)();
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  void (*v38)();
  _QWORD *v39;

  v7 = v6;
  LODWORD(v34) = a1;
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  result = (id)(*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    result = objc_msgSend(v7, sel_viewIfLoaded);
    if (result)
    {
      v19 = result;
      v33 = a6;
      objc_msgSend(result, sel_setNeedsLayout);
      v20 = (_QWORD *)swift_allocObject();
      v20[2] = v7;
      v20[3] = a3;
      v20[4] = a4;
      v38 = partial apply for closure #1 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:);
      v39 = v20;
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = 0;
      v22 = (uint64_t *)(v21 + 16);
      *(_QWORD *)(v21 + 24) = 0;
      v7;
      v23 = (id)_sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a3);
      if ((a2 & 1) != 0)
      {
        v23 = objc_msgSend(v19, sel_snapshotViewAfterScreenUpdates_, 0);
        if (v23)
        {
          v24 = v23;
          MultiwayViewController.setupReducedMotionAnimation(forSnapshot:animations:completion:)(v23, (uint64_t)&v38, v22);

        }
      }
      if ((v34 & 1) != 0)
      {
        MultiwayViewController.restartAutoHideInCallControlsTimer()();
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
        v34 = v25;
        MultiwayViewController.controlStateAnimationTiming(for:)(a2 & 1, v35);
        v26 = (uint64_t)v39;
        v32 = v38;
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = v21;
        v27[3] = a5;
        v27[4] = v33;
        v29 = v36;
        v28 = v37;
        v30 = __swift_project_boxed_opaque_existential_1(v35, v36);
        swift_retain();
        swift_retain();
        _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy((uint64_t)a5);
        specialized static UIView.animate(with:delay:animations:completion:)((uint64_t)v30, 0, 0, v32, v26, (uint64_t)partial apply for closure #2 in MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:), (uint64_t)v27, v34, v29, v28);
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      }
      else
      {
        if (a3)
          a3(v23);
        v31 = (void (*)(uint64_t))*v22;
        if (v31)
        {
          swift_retain();
          v31(1);
          outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v31);
        }
        if (a5)
          a5(1);
      }
      MultiwayViewController.updateStatusBarHidden()();

      swift_release();
      return (id)swift_release();
    }
    else if (a5)
    {
      return (id)((uint64_t (*)(_QWORD))a5)(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MultiwayViewController.updateFloatingLocalParticpantView()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[6];
  uint64_t v27[2];
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  _BYTE v32[216];
  uint64_t v33[28];

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v13 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v13, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v32, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v33) != 1)
    {
      v14 = (unsigned __int8 *)(v33[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      v15 = *v14;
      if (v15 > 0x80)
        v16 = 1;
      else
        v16 = *(_BYTE *)(*(_QWORD *)(v1
                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_isOneToOneModeEnabledByCallCenter);
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_4();
      v17 = 1;
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) & 1) == 0)
        v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v32, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v27);
      v18 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
      BYTE1(v24) = 1;
      LOBYTE(v24) = v16;
      LOBYTE(v23) = 1;
      ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v4, 2, 0, 0, 0, v17, 0, v18 & 1, v23, 0, v24, v25, v26[0], v26[1], v26[2], v26[3], v26[4], v26[5], v27[0],
        v27[1],
        v28,
        v29,
        v30,
        v31);
      v19 = v33[7];
      LocalParticipantView.configure(with:)(v7);
      LocalParticipantView.configureControls(_:)(v15);
      LocalParticipantView.updateControlsAlpha(animated:)(0);
      LocalParticipantView.updateHiding()();
      ConversationController.isCameraBlurEnabled.getter();
      v20 = 0;
      if ((v21 & 1) != 0)
        v20 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
      v22 = (_BYTE *)(v19 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled);
      swift_beginAccess();
      *v22 = v20 & 1;
      LocalParticipantView.blurEnabled.didset();
      MultiwayViewController.updateCameraFlipButtonAvailability()();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v32);
      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for ParticipantViewModel);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MultiwayViewController.controlStateAnimationTiming(for:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if ((a1 & 1) != 0)
  {
    a2[3] = (uint64_t)&type metadata for CubicAnimationParameters;
    a2[4] = (uint64_t)&protocol witness table for CubicAnimationParameters;
    result = swift_allocObject();
    *a2 = result;
    *(_OWORD *)(result + 16) = xmmword_1BD650870;
    *(_OWORD *)(result + 32) = xmmword_1BD650880;
    *(_QWORD *)(result + 48) = 0x3FEFD70A3D70A3D7;
  }
  else
  {
    if (one-time initialization token for springParameters != -1)
      swift_once();
    v5 = xmmword_1EF4FD820;
    v6 = static Animation.ConversationControls.springParameters;
    v4 = xmmword_1EF4FD830;
    a2[3] = (uint64_t)&type metadata for SpringAnimationParameters;
    a2[4] = (uint64_t)&protocol witness table for SpringAnimationParameters;
    result = swift_allocObject();
    *a2 = result;
    *(_OWORD *)(result + 16) = v6;
    *(_OWORD *)(result + 32) = v5;
    *(_OWORD *)(result + 48) = v4;
  }
  return result;
}

void MultiwayViewController.showReactionPicker(after:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[6];

  v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer);
  if (v4)
    objc_msgSend(v4, sel_invalidate);
  v5 = (void *)objc_opt_self();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10[4] = partial apply for closure #1 in MultiwayViewController.showReactionPicker(after:);
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
  v10[3] = &block_descriptor_283;
  v7 = _Block_copy(v10);
  swift_release();
  v8 = objc_msgSend(v5, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v7, a1);
  _Block_release(v7);
  v9 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = v8;

}

void MultiwayViewController.hideReactionPicker()()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer);
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  v2 = MultiwayViewController.reactionsViewController.getter();
  if (v2)
  {
    v3 = v2;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA8))();

  }
}

void closure #1 in MultiwayViewController.showReactionPicker(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unsigned __int8 *v7;
  _QWORD *v8;
  void *v9;
  void (*v10)(void);
  id v11;
  _BYTE v12[216];
  uint64_t v13[27];
  _BYTE v14[216];
  uint64_t v15[27];

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) != 1)
      goto LABEL_8;
    v5 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v15) == 1
      || (v6 = *(void **)(v5 + 56),
          outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v13) == 1)|| (v7 = (unsigned __int8 *)(*(_QWORD *)(v5 + 48)+ OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState), swift_beginAccess(), *v7 >> 6 > 1u)|| (v8 = MultiwayViewController.reactionsViewController.getter()) == 0)
    {
LABEL_8:

    }
    else
    {
      v9 = v8;
      v10 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v8) + 0xA0);
      v11 = v6;
      v10();

    }
  }
}

void MultiwayViewController.isLocalReactionActive.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  id v6;
  unsigned __int8 *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v15[216];
  uint64_t v16[27];
  _BYTE v17[216];
  uint64_t v18[27];

  v2 = v1;
  v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
  if (v4 != (a1 & 1))
  {
    v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v18) != 1)
    {
      v6 = *(id *)(v5 + 48);
      MultiwayViewConstraintsController.isLocalReactionActive.setter(v4);

    }
    if (*(_BYTE *)(v2 + v3) == 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v16) != 1)
      {
        v7 = (unsigned __int8 *)(*(_QWORD *)(v5 + 48)
                               + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        v8 = *v7;
        if (v8 < 0x40 || (v8 & 0xC0) == 0x40)
        {
          v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
          ObjectType = swift_getObjectType();
          v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 320))(ObjectType, v9);
          MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v11 & 1, 0, 0, 0, 0);
          MultiwayViewController.updateFloatingLocalParticpantView()();
          MultiwayViewController.updateLocalParticipantState()();
        }
      }
    }
    else
    {
      v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
      v13 = swift_getObjectType();
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 320))(v13, v12);
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v14 & 1, 0, 0, 0, 0);
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateFloatingLocalParticpantView()();
    }
  }
}

void MultiwayViewController.isLocalReactionActive.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive) = a1;
  MultiwayViewController.isLocalReactionActive.didset(v2);
}

void MultiwayViewController.reactionPickerTipState.didset(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  void *v5;
  int v6;
  int v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t ObjectType;
  char v16;
  double v17;
  void *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  _BYTE *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  id (*v40)();
  uint64_t v41;
  _BYTE v42[216];
  uint64_t v43[28];

  v2 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState;
  if (*a1 != v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState])
  {
    v3 = v1;
    v4 = MultiwayViewController.reactionPickerTipView.getter();
    if (v4)
    {
      v5 = v4;
      MultiwayViewController.layoutIdiom.getter((BOOL *)v43);
      v6 = LOBYTE(v43[0]);
      v7 = v1[v2];
      if (v7 == 1)
      {
        objc_msgSend(v5, sel_removeFromSuperview);
        v8 = objc_msgSend(v1, sel_view);
        if (!v8)
        {
          __break(1u);
          return;
        }
        v9 = v8;
        objc_msgSend(v8, sel_addSubview_, v5);

        v10 = v5;
        MultiwayViewController.bringSubviewToFront(_:)(v5);

      }
      v11 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v42, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v43) != 1)
      {
        v12 = *(void **)(v11 + 48);
        LOBYTE(aBlock) = v3[v2];
        v13 = v12;
        MultiwayViewConstraintsController.reactionPickerTipState.setter((char *)&aBlock);

      }
      v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      ObjectType = swift_getObjectType();
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 320))(ObjectType, v14);
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v6, v16 & 1, 0, 0, 0, 0);
      v17 = 1.0;
      if (v7)
        v17 = 0.0;
      objc_msgSend(v5, sel_setAlpha_, v17);
      v18 = (void *)objc_opt_self();
      if (one-time initialization token for shared != -1)
        swift_once();
      v19 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 1016))();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v5;
      *(_BYTE *)(v20 + 24) = v7;
      v40 = partial apply for closure #1 in MultiwayViewController.reactionPickerTipState.didset;
      v41 = v20;
      v21 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v37 = 1107296256;
      v38 = thunk for @escaping @callee_guaranteed () -> ();
      v39 = &block_descriptor_648;
      v22 = _Block_copy(&aBlock);
      v23 = v5;
      swift_release();
      v24 = swift_allocObject();
      *(_BYTE *)(v24 + 16) = v7;
      *(_QWORD *)(v24 + 24) = v23;
      v40 = partial apply for closure #2 in MultiwayViewController.reactionPickerTipState.didset;
      v41 = v24;
      aBlock = v21;
      v37 = 1107296256;
      v38 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v39 = &block_descriptor_654;
      v25 = _Block_copy(&aBlock);
      v26 = v23;
      swift_release();
      objc_msgSend(v18, sel_animateWithDuration_animations_completion_, v22, v25, v19);
      _Block_release(v25);
      _Block_release(v22);
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v27 = type metadata accessor for Logger();
      __swift_project_value_buffer(v27, (uint64_t)&static Logger.conversationKit);
      v28 = v3;
      v29 = Logger.logObject.getter();
      v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        *(_DWORD *)v31 = 136315138;
        v33 = v3[v2];
        aBlock = v32;
        if (v33)
          v34 = 0x656C6269736976;
        else
          v34 = 0x6E6564646968;
        if (v33)
          v35 = 0xE700000000000000;
        else
          v35 = 0xE600000000000000;
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BD004000, v29, v30, "reactionPickerTipState updated to %s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v32, -1, -1);
        MEMORY[0x1C3B751B8](v31, -1, -1);

      }
      else
      {

      }
    }
  }
}

void *MultiwayViewController.reactionPickerTipView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[216];
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    v2 = *(void **)(v1 + 208);
    v3 = v2;
  }
  return v2;
}

void MultiwayViewController.bringSubviewToFront(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  char v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  _BYTE v55[216];
  uint64_t v56[7];
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;

  v2 = v1;
  v4 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v55, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v56) != 1 && a1)
  {
    v5 = a1;
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
    v6 = objc_msgSend(v2, sel_view);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_bringSubviewToFront_, v5);

      if (v58)
      {
        v8 = v58;
        v9 = objc_msgSend(v2, sel_view);
        if (!v9)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v10 = v9;
        v11 = objc_msgSend(v8, sel_view);
        if (!v11)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        v12 = v11;
        objc_msgSend(v10, sel_bringSubviewToFront_, v11);

      }
      if (v60)
      {
        v13 = v60;
        v14 = objc_msgSend(v13, sel_superview);

        if (v14)
        {
          v15 = objc_msgSend(v2, sel_view);
          if (!v15)
          {
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          v16 = v15;
          objc_msgSend(v15, sel_bringSubviewToFront_, v13);

          v13 = v16;
        }

      }
      if (v61)
      {
        v17 = v61;
        v18 = objc_msgSend(v17, sel_superview);

        if (v18)
        {
          v19 = objc_msgSend(v2, sel_view);
          if (!v19)
          {
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          v20 = v19;
          objc_msgSend(v19, sel_bringSubviewToFront_, v17);

          v17 = v20;
        }

      }
      specialized MomentsBackedViewControllerProtocol.bringMomentsAndFlashViewsToFrontIfNecessary()();
      v21 = objc_msgSend(v2, sel_view);
      if (v21)
      {
        v22 = v21;
        v23 = objc_msgSend(v62, sel_view);
        if (v23)
        {
          v24 = v23;
          v25 = v57;
          objc_msgSend(v22, sel_insertSubview_belowSubview_, v23, v57);

          if (v63)
          {
            v26 = objc_msgSend(v63, sel_view);
            if (v26)
            {
              v27 = v26;
              v28 = objc_msgSend(v2, sel_view);
              if (!v28)
              {
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              v29 = v28;
              objc_msgSend(v28, sel_insertSubview_belowSubview_, v27, v25);

            }
          }
          v30 = MultiwayViewController.reactionPickerTipView.getter();
          if (v30)
          {
            v31 = v30;
            if (*((_BYTE *)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState) == 1)
            {
              v32 = objc_msgSend(v2, sel_view);
              if (!v32)
              {
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
              v33 = v32;
              objc_msgSend(v32, sel_insertSubview_belowSubview_, v31, v25);

              v31 = v33;
            }

          }
          if (!v59 || (v34 = objc_msgSend(v59, sel_view)) == 0)
          {
LABEL_46:
            v52 = objc_msgSend(v2, sel_view);
            if (v52)
            {
              v49 = v52;
              v53 = objc_msgSend((id)v56[2], sel_view);
              if (v53)
              {
                v54 = v53;
                objc_msgSend(v49, sel_bringSubviewToFront_, v53);

                _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
                goto LABEL_49;
              }
              goto LABEL_56;
            }
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          v35 = v34;
          v36 = objc_msgSend(v34, sel_superview);
          v37 = objc_msgSend(v2, sel_view);
          v38 = v37;
          if (v36)
          {
            if (v37)
            {
              type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
              v39 = v36;
              v40 = static NSObject.== infix(_:_:)();

              if ((v40 & 1) == 0)
                goto LABEL_45;
LABEL_36:
              v41 = objc_msgSend(v2, sel_view);
              if (v41)
              {
                v42 = v41;
                objc_msgSend(v41, sel_bringSubviewToFront_, v35);

                v43 = objc_msgSend(v2, sel_view);
                if (v43)
                {
                  v44 = v43;
                  v45 = objc_msgSend((id)v56[3], sel_view);
                  if (v45)
                  {
                    v46 = v45;
                    objc_msgSend(v44, sel_bringSubviewToFront_, v45);

                    v47 = objc_msgSend(v2, sel_view);
                    if (v47)
                    {
                      v48 = v47;
                      v49 = objc_msgSend(v47, sel_subviewForEffectsBrowserViewController);

                      if (!v49)
                      {

                        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
                        return;
                      }
                      v50 = objc_msgSend(v2, sel_view);
                      if (v50)
                      {
                        v51 = v50;
                        objc_msgSend(v50, sel_insertSubview_aboveSubview_, v49, v35);

                        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v55);
LABEL_49:

                        return;
                      }
LABEL_67:
                      __break(1u);
                      return;
                    }
LABEL_66:
                    __break(1u);
                    goto LABEL_67;
                  }
LABEL_65:
                  __break(1u);
                  goto LABEL_66;
                }
LABEL_64:
                __break(1u);
                goto LABEL_65;
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            v38 = v36;
          }
          else if (!v37)
          {
            goto LABEL_36;
          }

          v35 = v38;
LABEL_45:

          goto LABEL_46;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
}

void MultiwayViewController.reactionsState.setter(_BYTE *a1, _QWORD *a2, void (*a3)(char *))
{
  uint64_t v3;
  char v4;
  char v5;

  v4 = *(_BYTE *)(v3 + *a2);
  *(_BYTE *)(v3 + *a2) = *a1;
  v5 = v4;
  a3(&v5);
  OUTLINED_FUNCTION_3_1();
}

void MultiwayViewController.needsTips.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.needsTips.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.needsTips.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.startTipStateObserver()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  void (*v48)(unint64_t, char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x1E0C80A78](v2);
  v52 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for VideoReactionPickerTip();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v45 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - v17;
  v19 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v19, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  }
  else
  {
    v51 = v12;
    v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v18, v6, v7);
    v50 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask;
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask);
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v22(v15, v18, v7);
    v23 = v18;
    v48 = (void (*)(unint64_t, char *, uint64_t))v20;
    if (v21)
    {
      v24 = v22;
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      swift_retain();
    }
    else
    {
      v26 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v52, 1, 1, v26);
      v27 = swift_allocObject();
      v49 = v18;
      v28 = v27;
      swift_unknownObjectWeakInit();
      v22(v51, v15, v7);
      type metadata accessor for MainActor();
      swift_retain();
      v47 = static MainActor.shared.getter();
      v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v30 = swift_allocObject();
      v46 = v22;
      v31 = v30;
      *(_QWORD *)(v30 + 16) = v47;
      *(_QWORD *)(v30 + 24) = MEMORY[0x1E0DF06E8];
      v20((char *)(v30 + v29), v51, v7);
      *(_QWORD *)(v31 + ((v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
      v24 = v46;
      v23 = v49;
      swift_release();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      v21 = v32;
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    }
    v25(v15, v7);
    *(_QWORD *)(v1 + v50) = v21;
    swift_release();
    v33 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask;
    v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask);
    v35 = v53;
    v24(v53, v23, v7);
    if (v34)
    {
      swift_retain();
      v25(v35, v7);
      v36 = v23;
    }
    else
    {
      v37 = type metadata accessor for TaskPriority();
      __swift_storeEnumTagSinglePayload(v52, 1, 1, v37);
      v38 = swift_allocObject();
      v49 = v23;
      v39 = v38;
      swift_unknownObjectWeakInit();
      v24(v51, v35, v7);
      type metadata accessor for MainActor();
      swift_retain();
      v40 = static MainActor.shared.getter();
      v41 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v42 = (v9 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = v40;
      *(_QWORD *)(v43 + 24) = MEMORY[0x1E0DF06E8];
      v48(v43 + v41, v51, v7);
      *(_QWORD *)(v43 + v42) = v39;
      swift_release();
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5();
      v34 = v44;
      v25(v53, v7);
      v36 = v49;
    }
    v25(v36, v7);
    *(_QWORD *)(v1 + v33) = v34;
    swift_release();
  }
}

uint64_t closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[14] = swift_task_alloc();
  v6 = type metadata accessor for Tips.Status();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[19] = swift_task_alloc();
  v5[20] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[21] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>);
  v5[22] = v7;
  v5[23] = *(_QWORD *)(v7 - 8);
  v5[24] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncMapSequence<AsyncStream<Tips.Status>, Bool>.Iterator);
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = type metadata accessor for MainActor();
  v5[30] = static MainActor.shared.getter();
  v5[31] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v9;
  return swift_task_switch();
}

uint64_t closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[23];
  v2 = v0[24];
  v3 = v0[22];
  OUTLINED_FUNCTION_140_9();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip);
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)lazy protocol witness table cache variable for type AsyncStream<Tips.Status> and conformance AsyncStream<A>);
  OUTLINED_FUNCTION_354_1();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.Iterator.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_1();
  v4 = static MainActor.shared.getter();
  v0[33] = v4;
  if (v4)
  {
    swift_getObjectType();
    v5 = dispatch thunk of Actor.unownedExecutor.getter();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v0[34] = v5;
  v0[35] = v7;
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 288) = AsyncMapSequence.Iterator.baseIterator.modify();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type AsyncStream<Tips.Status>.Iterator and conformance AsyncStream<A>.Iterator);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v1;
  *v1 = v0;
  v1[1] = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_9_7(&v4);
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 288))(v2 + 16, 0);
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = OUTLINED_FUNCTION_69_0(v0[14], 1, v0[15]);
  if (!v2)
  {
    v5 = v0[27];
    v4 = v0[28];
    v6 = v0[25];
    v7 = v0[26];
    OUTLINED_FUNCTION_430_0(v0[17], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[16] + 32));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    AsyncMapSequence.Iterator.transform.getter();
    v0[38] = v8;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v9 = (_QWORD *)swift_task_alloc();
    v0[39] = (uint64_t)v9;
    *v9 = v0;
    v9[1] = closure #1 in implicit closure #1 in MultiwayViewController.startTipStateObserver();
    OUTLINED_FUNCTION_308_2();
    __asm { BR              X2 }
  }
  OUTLINED_FUNCTION_225_3(v1, &demangling cache variable for type metadata for Tips.Status?);
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_308_2();
  return swift_task_switch();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 288))(v0 + 16, 1);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v5 = v1;
  v3 = *(_QWORD *)(v1 + 128);
  v2 = *(_QWORD *)(v1 + 136);
  OUTLINED_FUNCTION_9_7(&v5);
  OUTLINED_FUNCTION_43();
  *(_BYTE *)(v1 + 321) = *(_BYTE *)(v1 + 320);
  OUTLINED_FUNCTION_101(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return swift_task_switch();
}

{
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v1 = *(_BYTE *)(v0 + 321);
  v2 = MEMORY[0x1C3B752C0](*(_QWORD *)(v0 + 104) + 16);
  v3 = (void *)v2;
  if ((v1 & 1) != 0)
  {
    if (!v2)
      goto LABEL_7;
    v11 = 1;
    v4 = &v11;
  }
  else
  {
    if (!v2)
      goto LABEL_7;
    v10 = 0;
    v4 = &v10;
  }
  MultiwayViewController.reactionsState.setter(v4, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (void (*)(char *))MultiwayViewController.reactionPickerTipState.didset);

LABEL_7:
  v5 = static MainActor.shared.getter();
  *(_QWORD *)(v0 + 264) = v5;
  if (v5)
  {
    swift_getObjectType();
    v6 = dispatch thunk of Actor.unownedExecutor.getter();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)(v0 + 272) = v6;
  *(_QWORD *)(v0 + 280) = v8;
  return OUTLINED_FUNCTION_24_29();
}

{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for Tips.Status();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Tips.Status?);
  v5[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for AsyncStream<Tips.Status>);
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncStream<Tips.Status>.Iterator);
  v5[15] = v8;
  v5[16] = *(_QWORD *)(v8 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  v5[20] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[21] = v9;
  return swift_task_switch();
}

uint64_t closure #2 in implicit closure #2 in MultiwayViewController.startTipStateObserver()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  int v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_140_9();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip);
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  v1 = OUTLINED_FUNCTION_311_0();
  v2(v1);
  OUTLINED_FUNCTION_1();
  v3 = *MEMORY[0x1E0CE9838];
  *(_DWORD *)(v0 + 192) = *MEMORY[0x1E0CE9610];
  *(_DWORD *)(v0 + 196) = v3;
  *(_QWORD *)(v0 + 176) = static MainActor.shared.getter();
  v4 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_388_1(v4);
  return AsyncStream.Iterator.next(isolation:)();
}

{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_9_7(&v2);
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_2_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  char v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_69_0(v1, 1, v2);
  if (v3)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    OUTLINED_FUNCTION_43();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_12();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_308_2();
    __asm { BR              X0 }
  }
  v6 = *(unsigned int *)(v0 + 192);
  v5 = *(unsigned int *)(v0 + 196);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)(v0 + 80), v1, v2);
  type metadata accessor for Tips.InvalidationReason();
  OUTLINED_FUNCTION_100_0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 104))(v7, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v7, v5, v2);
  v10 = static Tips.Status.== infix(_:_:)();
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v7, v2);
  if ((v10 & 1) != 0)
  {
    v12 = MEMORY[0x1C3B752C0](*(_QWORD *)(v0 + 48) + 16);
    if (v12)
    {
      v13 = (void *)v12;
      v16 = 0;
      MultiwayViewController.reactionsState.setter(&v16, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTipState, (void (*)(char *))MultiwayViewController.reactionPickerTipState.didset);

    }
  }
  v11(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 176) = static MainActor.shared.getter();
  v14 = (_QWORD *)swift_task_alloc();
  OUTLINED_FUNCTION_388_1(v14);
  OUTLINED_FUNCTION_308_2();
  return AsyncStream.Iterator.next(isolation:)();
}

uint64_t MultiwayViewController.stopTipStateObserver()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask;
  v2 = MEMORY[0x1E0DEE9C0];
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask))
  {
    v3 = swift_retain();
    MEMORY[0x1C3B73268](v3, v2 + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  v4 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask))
  {
    v5 = swift_retain();
    MEMORY[0x1C3B73268](v5, v2 + 8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    swift_release();
  }
  *(_QWORD *)(v0 + v4) = 0;
  return swift_release();
}

void MultiwayViewController.avcEffects.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.avcEffects.setter()
{
  AudioPowerSpectrumViewModel.waveformColorRemote.setter();
}

void MultiwayViewController.avcEffects.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.didExpandIncomingCallBanner.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.didExpandIncomingCallBanner.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner, (void (*)(uint64_t))MultiwayViewController.didExpandIncomingCallBanner.didset);
}

uint64_t key path getter for MultiwayViewController.didExpandIncomingCallBanner : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

_QWORD *MultiwayViewController.didExpandIncomingCallBanner.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  _QWORD *result;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
  result = (_QWORD *)swift_beginAccess();
  if (*v3 != v2)
    return MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  return result;
}

void MultiwayViewController.didExpandIncomingCallBanner.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.didExpandIncomingCallBanner.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))MultiwayViewController.didExpandIncomingCallBanner.setter);
}

uint64_t MultiwayViewController.didExpandActiveVideoCallFromBanner.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _BYTE *v16;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner);
  if (v2 != 2)
    return v2 & 1;
  v3 = v0;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v5 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v5, (uint64_t)v20);
  v6 = v21;
  v7 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v8 = v4 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 8);
  v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 104);
  v11 = swift_unknownObjectRetain();
  v10(&v18, v11, v9, v6, v7);
  swift_unknownObjectRelease();
  if (v19)
  {
    outlined init with take of Notice(&v18, (uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    v12 = v24;
    v13 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 280))(v12, v13) == 2)
    {
      v14 = (unsigned __int8 *)(v3
                              + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
      swift_beginAccess();
      v15 = *v14;
    }
    else
    {
      v15 = 0;
    }
    v16 = (_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner);
    swift_beginAccess();
    if (*v16 == 1)
      *(_BYTE *)(v3 + v1) = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v18, &demangling cache variable for type metadata for Conversation?);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return 0;
  }
  return v15;
}

Swift::Void __swiftcall MultiwayViewController.resetDidExpandIncomingCallBanner()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner) = 2;
  MultiwayViewController.didExpandIncomingCallBanner.setter(0);
}

id MultiwayViewController.ViewContent.listViewController.getter()
{
  id *v0;

  return *v0;
}

void MultiwayViewController.ViewContent.listViewController.setter(void *a1)
{
  id *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.listViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.gridViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void MultiwayViewController.ViewContent.gridViewController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.gridViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.controlsViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void MultiwayViewController.ViewContent.controlsViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_115();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.controlsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.inCallBannerHostViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void MultiwayViewController.ViewContent.inCallBannerHostViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_110_5();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.inCallBannerHostViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.callControlsViewController.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.callControlsViewController.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_109_8();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*MultiwayViewController.ViewContent.callControlsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.constraintController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

void MultiwayViewController.ViewContent.constraintController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_292_2();
  *(_QWORD *)(v1 + 48) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.constraintController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.floatingLocalParticipantView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

void MultiwayViewController.ViewContent.floatingLocalParticipantView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.floatingLocalParticipantView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.effectsViewController.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 64);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.effectsViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_373_3();
  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.effectsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.effectsControlsViewController.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 72);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.effectsControlsViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_281_5();
  *(_QWORD *)(v1 + 72) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.effectsControlsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.effectsBrowserViewController.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 80);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.effectsBrowserViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_280_4();
  *(_QWORD *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.effectsBrowserViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.floatingControlsView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 88);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.floatingControlsView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_279_5();
  *(_QWORD *)(v1 + 88) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.floatingControlsView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.mostActiveParticipantViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 96);
}

void MultiwayViewController.ViewContent.mostActiveParticipantViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_278_3();
  *(_QWORD *)(v1 + 96) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.mostActiveParticipantViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.participantLabelsView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 104);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.participantLabelsView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_277_5();
  *(_QWORD *)(v1 + 104) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.participantLabelsView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.bottomControlsView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 112);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.bottomControlsView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_276_2();
  *(_QWORD *)(v1 + 112) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.bottomControlsView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.oneToOneShutterButton.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 120);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.oneToOneShutterButton.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_273_5();
  *(_QWORD *)(v1 + 120) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.oneToOneShutterButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 128);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_272_4();
  *(_QWORD *)(v1 + 128) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.oneToOneLivePhotoAlertView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

id MultiwayViewController.ViewContent.captionsViewController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

void MultiwayViewController.ViewContent.captionsViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_271_3();
  *(_QWORD *)(v1 + 136) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.captionsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.localParticipantDragController.getter()
{
  return swift_retain();
}

void MultiwayViewController.ViewContent.localParticipantDragController.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 144) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.localParticipantDragController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ViewContent.captionsViewDragController.getter()
{
  return swift_retain();
}

void MultiwayViewController.ViewContent.captionsViewDragController.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 152) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.captionsViewDragController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.screenSharingSnapshotView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 160);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.screenSharingSnapshotView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.screenSharingSnapshotView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.changeLayoutButton.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 168);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.changeLayoutButton.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.changeLayoutButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 176);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_367_2();
  *(_QWORD *)(v1 + 176) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.changeLayoutButtonBackgroundView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.deskViewButton.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 184);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.deskViewButton.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_270_2();
  *(_QWORD *)(v1 + 184) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.deskViewButton.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.topCornerButtonsStackView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 192);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.topCornerButtonsStackView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_266_4();
  *(_QWORD *)(v1 + 192) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.topCornerButtonsStackView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.reactionsViewController.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 200);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.reactionsViewController.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_265_6();
  *(_QWORD *)(v1 + 200) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.reactionsViewController.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.reactionPickerTipView.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 208);
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.ViewContent.reactionPickerTipView.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_264_3();
  *(_QWORD *)(v1 + 208) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ViewContent.reactionPickerTipView.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.ViewContent.participantsViewControllers.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
  v1 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v1 + 16) = xmmword_1BD646730;
  v2 = *(void **)(v0 + 8);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_514_0();
  *(_QWORD *)(v1 + 64) = &protocol witness table for ParticipantGridViewController;
  *(_QWORD *)(v1 + 32) = v2;
  v3 = *(void **)v0;
  *(_QWORD *)(v1 + 96) = OUTLINED_FUNCTION_519_0();
  *(_QWORD *)(v1 + 104) = &protocol witness table for ParticipantListViewController;
  *(_QWORD *)(v1 + 72) = v3;
  v4 = *(void **)(v0 + 24);
  *(_QWORD *)(v1 + 136) = OUTLINED_FUNCTION_518_0();
  *(_QWORD *)(v1 + 144) = &protocol witness table for InCallBannerHostViewController;
  *(_QWORD *)(v1 + 112) = v4;
  v5 = *(void **)(v0 + 96);
  *(_QWORD *)(v1 + 176) = ObjC metadata update function for MostActiveParticipantViewController();
  *(_QWORD *)(v1 + 184) = &protocol witness table for MostActiveParticipantViewController;
  *(_QWORD *)(v1 + 152) = v5;
  v6 = *(void **)(v0 + 136);
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_516_0();
  *(_QWORD *)(v1 + 224) = &protocol witness table for CaptionsViewController;
  *(_QWORD *)(v1 + 192) = v6;
  v7 = v2;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  OUTLINED_FUNCTION_91();
}

uint64_t MultiwayViewController.ViewContent.allViews.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char **v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char **v13;
  id v14;
  id v15;
  uint64_t inited;
  _QWORD *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t i;
  void *v32;
  id v33;
  _QWORD v35[5];
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  v2 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6443F0;
  v3 = *(void **)(v0 + 56);
  *(_QWORD *)(v2 + 32) = v3;
  v35[0] = v2;
  specialized Array._endMutation()();
  v36 = v35[0];
  MultiwayViewController.ViewContent.participantsViewControllers.getter();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = &selRef_associatedAppBundleIdentifier;
  if (v5)
  {
    v7 = v4 + 32;
    v8 = v3;
    do
    {
      outlined init with copy of RadarReporting(v7, (uint64_t)v35);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
      v9 = OUTLINED_FUNCTION_407();
      type metadata accessor for NSObject(v9, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
      v10 = OUTLINED_FUNCTION_97();
      if ((v10 & 1) != 0)
      {
        v11 = v53;
        v12 = OUTLINED_FUNCTION_20_4(v10, v6[143]);
        if (v12)
        {
          v13 = v6;
          v14 = v12;
          MEMORY[0x1C3B7301C]();
          if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            OUTLINED_FUNCTION_38_60();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          OUTLINED_FUNCTION_185_5();

          v6 = v13;
        }
        else
        {

        }
      }
      v7 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v3;
    OUTLINED_FUNCTION_27();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIViewController?>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BD645390;
  OUTLINED_FUNCTION_40_60(v1 + 64, (uint64_t)&v49);
  OUTLINED_FUNCTION_40_60((uint64_t)&v49, inited + 32);
  OUTLINED_FUNCTION_6_110(v1 + 72, (uint64_t)&v48);
  OUTLINED_FUNCTION_6_110((uint64_t)&v48, (uint64_t)&v50);
  *(_QWORD *)(inited + 40) = v50;
  OUTLINED_FUNCTION_40_60(v1 + 80, (uint64_t)&v47);
  OUTLINED_FUNCTION_40_60((uint64_t)&v47, inited + 48);
  OUTLINED_FUNCTION_6_110(v1 + 200, (uint64_t)&v46);
  OUTLINED_FUNCTION_6_110((uint64_t)&v46, (uint64_t)&v51);
  *(_QWORD *)(inited + 56) = v51;
  v35[0] = inited;
  specialized Array._endMutation()();
  v17 = (_QWORD *)v35[0];
  if (*(_QWORD *)(v35[0] + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_40;
  }
  v18 = *(void **)(v35[0] + 32);
  if (v18)
  {
    outlined retain of UIColor?(&v49);
    outlined retain of UIColor?(&v48);
    outlined retain of UIColor?(&v47);
    outlined retain of UIColor?(&v46);
    v19 = OUTLINED_FUNCTION_178_4(v18);
    if (v19)
    {
      v20 = v19;
      OUTLINED_FUNCTION_161_8();
    }

  }
  else
  {
    outlined retain of UIColor?(&v49);
    outlined retain of UIColor?(&v48);
    outlined retain of UIColor?(&v47);
    outlined retain of UIColor?(&v46);
  }
  v21 = (void *)v17[5];
  if (v21)
  {
    v22 = OUTLINED_FUNCTION_178_4(v21);
    if (v22)
    {
      v23 = v22;
      OUTLINED_FUNCTION_161_8();
    }

  }
  v24 = (void *)v17[6];
  if (v24)
  {
    v25 = OUTLINED_FUNCTION_178_4(v24);
    if (v25)
    {
      v26 = v25;
      OUTLINED_FUNCTION_161_8();
    }

  }
  v27 = (void *)v17[7];
  if (v27)
  {
    v28 = OUTLINED_FUNCTION_178_4(v27);
    if (v28)
    {
      v29 = v28;
      OUTLINED_FUNCTION_161_8();
    }
    OUTLINED_FUNCTION_2_1();

  }
  else
  {
    OUTLINED_FUNCTION_2_1();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIView?>);
  v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BD64C380;
  OUTLINED_FUNCTION_6_110(v1 + 88, (uint64_t)&v45);
  OUTLINED_FUNCTION_6_110((uint64_t)&v45, v30 + 32);
  OUTLINED_FUNCTION_6_110(v1 + 104, (uint64_t)&v44);
  OUTLINED_FUNCTION_6_110((uint64_t)&v44, v30 + 40);
  OUTLINED_FUNCTION_6_110(v1 + 112, (uint64_t)&v43);
  OUTLINED_FUNCTION_6_110((uint64_t)&v43, v30 + 48);
  OUTLINED_FUNCTION_40_60(v1 + 120, (uint64_t)&v42);
  OUTLINED_FUNCTION_40_60((uint64_t)&v42, (uint64_t)&v52);
  *(_QWORD *)(v30 + 56) = v52;
  OUTLINED_FUNCTION_54_41(v1 + 128, (uint64_t)&v41);
  OUTLINED_FUNCTION_54_41((uint64_t)&v41, (uint64_t)&v53);
  *(_QWORD *)(v30 + 64) = v53;
  OUTLINED_FUNCTION_6_110(v1 + 160, (uint64_t)&v40);
  OUTLINED_FUNCTION_6_110((uint64_t)&v40, v30 + 72);
  OUTLINED_FUNCTION_40_60(v1 + 168, (uint64_t)&v39);
  OUTLINED_FUNCTION_40_60((uint64_t)&v39, (uint64_t)v35);
  *(_QWORD *)(v30 + 80) = v35[0];
  OUTLINED_FUNCTION_6_110(v1 + 176, (uint64_t)&v38);
  OUTLINED_FUNCTION_6_110((uint64_t)&v38, v30 + 88);
  OUTLINED_FUNCTION_6_110(v1 + 208, (uint64_t)&v37);
  OUTLINED_FUNCTION_6_110((uint64_t)&v37, v30 + 96);
  specialized Array._endMutation()();
  if (*(_QWORD *)(v30 + 16) < 9uLL)
  {
LABEL_40:
    __break(1u);
    JUMPOUT(0x1BD4ED85CLL);
  }
  outlined retain of UIColor?(&v45);
  outlined retain of UIColor?(&v44);
  outlined retain of UIColor?(&v43);
  outlined retain of UIColor?(&v42);
  outlined retain of UIColor?(&v41);
  outlined retain of UIColor?(&v40);
  outlined retain of UIColor?(&v39);
  outlined retain of UIColor?(&v38);
  outlined retain of UIColor?(&v37);
  for (i = 32; i != 104; i += 8)
  {
    v32 = *(void **)(v30 + i);
    if (v32)
    {
      v33 = v32;
      MEMORY[0x1C3B7301C]();
      if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        OUTLINED_FUNCTION_38_60();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      OUTLINED_FUNCTION_185_5();

    }
  }
  OUTLINED_FUNCTION_13_3();
  return v36;
}

__n128 MultiwayViewController.ViewContent.init(listViewController:gridViewController:controlsViewController:inCallBannerHostViewController:callControlsViewController:constraintController:floatingLocalParticipantView:effectsViewController:effectsControlsViewController:effectsBrowserViewController:floatingControlsView:mostActiveParticipantViewController:participantLabelsView:bottomControlsView:oneToOneShutterButton:oneToOneLivePhotoAlertView:captionsViewController:localParticipantDragController:captionsViewDragController:screenSharingSnapshotView:changeLayoutButton:changeLayoutButtonBackgroundView:deskViewButton:topCornerButtonsStackView:reactionsViewController:reactionPickerTipView:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __n128 a18, uint64_t a19)
{
  __n128 result;

  result = a18;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(__n128 *)(a9 + 192) = a18;
  *(_QWORD *)(a9 + 208) = a19;
  return result;
}

uint64_t MultiwayViewController.controlsMode.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;
  _QWORD *v11;
  void *v12;
  void *v13;
  unsigned int v14;
  _BOOL4 v15;

  MultiwayViewController.call.getter();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_isConversation);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    MultiwayViewController.call.getter();
    v6 = v5;
    v7 = objc_msgSend(v4, sel_activeConversationForCall_, v5);

    v8 = objc_msgSend(v7, sel_link);
    if (v8)
    {
      v9 = (_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationLetMeInRequestState);
      swift_beginAccess();
      if ((unint64_t)(*v9 - 1) <= 1)
        return (*v9 == 2) | 0x40u;
    }
  }
  v11 = (_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if ((unint64_t)(*v11 - 1) > 1)
    return 0;
  MultiwayViewController.call.getter();
  v13 = v12;
  v14 = objc_msgSend(v12, sel_isConversation);

  if (v14)
    v15 = *v11 == 1;
  else
    v15 = 0;
  return v15 | 0x20u;
}

void MultiwayViewController.call.getter()
{
  OUTLINED_FUNCTION_1();
  objc_opt_self();
  swift_dynamicCastObjCClassUnconditional();
  OUTLINED_FUNCTION_13_6();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_32();
}

uint64_t MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter()
{
  char v0;
  _QWORD v2[3];
  uint64_t v3;

  ConversationController.lookupActiveConversation()();
  v0 = v3;
  if (v3)
  {
    __swift_project_boxed_opaque_existential_1(v2, v3);
    v0 = Conversation.isLocalMemberAuthorizedToChangeGroupMembership()();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, &demangling cache variable for type metadata for Conversation?);
  }
  return v0 & 1;
}

uint64_t MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.oneToOneModeEnabled.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.activeCallHasPreviouslyReceivedFirstRemoteFrame.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.remoteParticipants.getter()
{
  return swift_bridgeObjectRetain();
}

void MultiwayViewController.ConversationSnapshot.remoteParticipants.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_0();
}

uint64_t (*MultiwayViewController.ConversationSnapshot.remoteParticipants.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.hasRingingCalls.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MultiwayViewController.ConversationSnapshot.hasRingingCalls.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.hasRingingCalls.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isTrackingActiveConversation.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.activeConversationState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t MultiwayViewController.ConversationSnapshot.activeConversationState.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.activeConversationState.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isWaitingOnFirstRemoteFrame.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.isLocallyCreated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t MultiwayViewController.ConversationSnapshot.isLocallyCreated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.isLocallyCreated.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.wantsHoldMusic.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t MultiwayViewController.ConversationSnapshot.wantsHoldMusic.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.wantsHoldMusic.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

uint64_t MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 35) = result;
  return result;
}

uint64_t (*MultiwayViewController.ConversationSnapshot.shouldShowLastFrameUI.modify())(_QWORD)
{
  return TPNumberPadCharacter.rawValue.getter;
}

void MultiwayViewController.viewContent.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[216];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v3, (uint64_t)v4);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
  OUTLINED_FUNCTION_6_110((uint64_t)v4, a1);
  OUTLINED_FUNCTION_332_3();
}

void MultiwayViewController.viewContent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[216];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v4);
  v2 = OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_6_110(v2, v3);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
  OUTLINED_FUNCTION_332_3();
}

void MultiwayViewController.viewContent.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.isModallyPresentingCallDetails.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
  if (!v1)
    return 0;
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  v3 = v1;
  LOBYTE(v2) = v2();

  return v2 & 1;
}

void *MultiwayViewController.inCallControlsDismissTimer.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
  v2 = v1;
  return v1;
}

void MultiwayViewController.inCallControlsDismissTimer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer) = a1;

}

id MultiwayViewController.pipZoomControl.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  OUTLINED_FUNCTION_1();
  return *v1;
}

void MultiwayViewController.pipZoomControl.setter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.pipZoomControl.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.shouldShowZoomControls.didset(char a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) != (a1 & 1))
    MultiwayViewController.updateZoomControls(for:)(0xFCu);
}

void MultiwayViewController.updateZoomControls(for:)(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  _QWORD **v11;
  _QWORD *v12;
  uint64_t (*v13)(void);
  _QWORD *v14;
  _BYTE v15[216];
  _BYTE v16[216];
  uint64_t v17[27];

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v17) != 1)
  {
    v9 = a1;
    if (a1 >= 0xFCu)
    {
      v10 = (unsigned __int8 *)(v17[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      v9 = *v10;
    }
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) == 1
      && v9 >> 6 >= 2
      && v9 == 128)
    {
      v11 = (_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      v12 = *v11;
      v13 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x1B8);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
      v14 = v12;
      LOBYTE(v13) = v13();

      if ((v13 & 1) != 0)
      {
        MultiwayViewController.showZoomControl()();
LABEL_16:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
        return;
      }
    }
    else
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v15);
    }
    MultiwayViewController.hideZoomControl()();
    goto LABEL_16;
  }
  if (one-time initialization token for default != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Log.default);
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BD004000, v6, v7, "PipZoomControl: Not able to update because of missing view content", v8, 2u);
    MEMORY[0x1C3B751B8](v8, -1, -1);
  }

}

void MultiwayViewController.shouldShowZoomControls.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls) = a1;
  MultiwayViewController.shouldShowZoomControls.didset(v2);
}

uint64_t MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter()
{
  char v0;

  MultiwayViewController.isCaptioningEnabled.getter();
  if ((v0 & 1) != 0)
    return (uint64_t)objc_msgSend((id)objc_opt_self(), sel_allowsPortraitBlurWhenCaptionsEnabled);
  else
    return 1;
}

void MultiwayViewController.isCaptioningEnabled.getter()
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CaptioningStateManager.isCaptioningEnabled.getter();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.captionsPausedState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  OUTLINED_FUNCTION_1();
  *a1 = *v3;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.captionsPausedState.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState);
  OUTLINED_FUNCTION_2_0();
  *v3 = v2;
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewController.captionsPausedState.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.isScreenSharing.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[216];
  uint64_t v4[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_5_131((uint64_t)v3, (uint64_t)v4);
  OUTLINED_FUNCTION_12_109(v4);
  if (!v2)
    OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_69_24();
}

id MultiwayViewController.features.getter()
{
  return OUTLINED_FUNCTION_7(OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features);
}

void MultiwayViewController.deviceOrientation.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.deviceOrientation.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation, MultiwayViewController.deviceOrientation.didset);
}

uint64_t key path getter for MultiwayViewController.deviceOrientation : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.deviceOrientation.didset(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (one-time initialization token for default == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)&static Log.default);
  v10 = v2;
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  v13 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = (uint64_t *)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
    swift_beginAccess();
    v21 = *v16;
    type metadata accessor for CNKDeviceOrientation(0);
    v17 = String.init<A>(reflecting:)();
    v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13 = &OBJC_IVAR____TtC15ConversationKit27ConversationControlsManager_isWaitingOnFirstRemoteFrame;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v11, v12, "Device Orientation has changed: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v15, -1, -1);
    MEMORY[0x1C3B751B8](v14, -1, -1);
  }
  else
  {

  }
  v19 = (uint64_t *)&v10[v13[27]];
  swift_beginAccess();
  ConversationController.deviceOrientation.setter(*v19);
  MultiwayViewController.updateViewConstraints()();
  MultiwayViewController.didUpdateLocalParticipantOrientation(_:)(*v19);
  if (*v19 != a1 && v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState] == 1)
    MultiwayViewController.toggleReactionsView()();
}

Swift::Void __swiftcall MultiwayViewController.updateViewConstraints()()
{
  void *v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  void (*v12)(void);
  _BYTE v13[216];
  objc_super v14;
  _BYTE v15[216];
  uint64_t v16[27];

  v14.receiver = v0;
  v14.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v14, sel_updateViewConstraints);
  v1 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v15);
  OUTLINED_FUNCTION_6_110((uint64_t)v15, (uint64_t)v16);
  OUTLINED_FUNCTION_12_109(v16);
  if (v2)
    goto LABEL_5;
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v13);
  v3 = OUTLINED_FUNCTION_7_86();
  if (v3)
  {
    v4 = v16[6];
    objc_msgSend(v3, sel_safeAreaInsetFrame);
    OUTLINED_FUNCTION_152_5();
    OUTLINED_FUNCTION_1();
    v5 = OUTLINED_FUNCTION_66();
    MultiwayViewConstraintsController.update(for:deviceOrientation:)(v6, v5, v7, v8, v9);
    OUTLINED_FUNCTION_1();
    v10 = OUTLINED_FUNCTION_7_86();
    if (v10)
    {
      v11 = v10;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout), *(_QWORD *)(v4 + OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24));
      OUTLINED_FUNCTION_339_0();
      v12();

      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v15);
LABEL_5:
      OUTLINED_FUNCTION_188_5();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

_QWORD *MultiwayViewController.didUpdateLocalParticipantOrientation(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *result;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  __int128 v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)();
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  char *v54;
  _BYTE v55[264];
  _BYTE v56[216];
  uint64_t v57[12];
  void *v58;
  void *v59;

  v2 = v1;
  v47 = a1;
  v3 = type metadata accessor for Participant(0);
  v48 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
    goto LABEL_15;
  v11 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v56, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v57);
  if ((_DWORD)result == 1)
    return result;
  v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  swift_beginAccess();
  if (!*v12)
  {
    MultiwayViewController.isPipped.getter();
    if ((v13 & 1) == 0)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v56, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
      result = (_QWORD *)ConversationController.visibleParticipants.getter();
      v46 = result[2];
      if (!v46)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v37[1] = v2;
      v14 = 0;
      v44 = (char *)result
          + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
      v42 = v57[0];
      v43 = v57[1];
      v40 = v58;
      v41 = v57[3];
      v39 = v59;
      v38 = xmmword_1BD646730;
      v45 = result;
      v15 = (void *)v57[0];
      v16 = v58;
      while (v14 < result[2])
      {
        v53 = v14 + 1;
        _s15ConversationKit11ParticipantVWOcTm_4();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<ParticipantsViewController>);
        v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v38;
        v18 = type metadata accessor for ParticipantGridViewController();
        *(_QWORD *)(v17 + 56) = v18;
        *(_QWORD *)(v17 + 64) = &protocol witness table for ParticipantGridViewController;
        v19 = (void *)v43;
        *(_QWORD *)(v17 + 32) = v43;
        *(_QWORD *)(v17 + 96) = type metadata accessor for ParticipantListViewController();
        *(_QWORD *)(v17 + 104) = &protocol witness table for ParticipantListViewController;
        *(_QWORD *)(v17 + 72) = v15;
        *(_QWORD *)(v17 + 136) = type metadata accessor for InCallBannerHostViewController();
        *(_QWORD *)(v17 + 144) = &protocol witness table for InCallBannerHostViewController;
        v20 = (void *)v41;
        *(_QWORD *)(v17 + 112) = v41;
        v50 = (_QWORD *)(v17 + 112);
        *(_QWORD *)(v17 + 176) = type metadata accessor for MostActiveParticipantViewController();
        *(_QWORD *)(v17 + 184) = &protocol witness table for MostActiveParticipantViewController;
        *(_QWORD *)(v17 + 152) = v16;
        v51 = (_QWORD *)(v17 + 152);
        *(_QWORD *)(v17 + 216) = type metadata accessor for CaptionsViewController();
        *(_QWORD *)(v17 + 224) = &protocol witness table for CaptionsViewController;
        v21 = v39;
        *(_QWORD *)(v17 + 192) = v39;
        v52 = (_QWORD *)(v17 + 192);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v17 + 32), v18);
        v49 = protocol witness for ParticipantsViewController.update(participant:localParticipantOrientation:) in conformance ParticipantGridViewController;
        v22 = v19;
        v23 = v15;
        v24 = v20;
        v25 = v16;
        v26 = v21;
        v27 = (uint64_t)v54;
        v28 = v47;
        ((void (*)(char *, uint64_t, uint64_t, _UNKNOWN **))v49)(v54, v47, v18, &protocol witness table for ParticipantGridViewController);
        v29 = *(_QWORD *)(v17 + 96);
        v30 = *(_QWORD *)(v17 + 104);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v17 + 72), v29);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v27, v28, v29, v30);
        v31 = *(_QWORD *)(v17 + 136);
        v32 = *(_QWORD *)(v17 + 144);
        __swift_project_boxed_opaque_existential_1(v50, v31);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v27, v28, v31, v32);
        v33 = *(_QWORD *)(v17 + 176);
        v34 = *(_QWORD *)(v17 + 184);
        __swift_project_boxed_opaque_existential_1(v51, v33);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v27, v28, v33, v34);
        v35 = *(_QWORD *)(v17 + 216);
        v36 = *(_QWORD *)(v17 + 224);
        __swift_project_boxed_opaque_existential_1(v52, v35);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v27, v28, v35, v36);
        swift_setDeallocating();
        specialized _ContiguousArrayStorage.__deallocating_deinit();
        outlined destroy of AccountUpdateNotice(v27, type metadata accessor for Participant);
        result = v45;
        v14 = v53;
        if (v46 == v53)
          goto LABEL_12;
      }
      __break(1u);
LABEL_15:
      __break(1u);
      return result;
    }
  }
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v56, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v55);
LABEL_6:
  MultiwayViewController.updatePresentationSize()();
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);
  MultiwayViewController.notifyLocalParticipantAspectRatioChanged()();
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v56);
}

void MultiwayViewController.toggleReactionsView()()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[2];

  v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState);
  if ((v1 & 1) != 0 || (MultiwayViewController.canShowReactionsView()() & 1) != 0)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.default.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
    v6[1] = v1 ^ 1;
    v3 = String.init<A>(reflecting:)();
    v5 = v4;
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v2 + 32) = v3;
    *(_QWORD *)(v2 + 40) = v5;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v6[0] = v1 ^ 1;
    MultiwayViewController.reactionsState.setter(v6, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState, (void (*)(char *))MultiwayViewController.reactionsState.didset);
  }
}

void MultiwayViewController.deviceOrientation.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  OUTLINED_FUNCTION_1();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.deviceOrientation.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, MultiwayViewController.deviceOrientation.setter);
}

void MultiwayViewController.frontBoardInterfaceOrientation.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.frontBoardInterfaceOrientation.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  MultiwayViewController.frontBoardInterfaceOrientation.didset();
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path getter for MultiwayViewController.frontBoardInterfaceOrientation : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t MultiwayViewController.frontBoardInterfaceOrientation.didset()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  _BYTE v7[216];
  uint64_t v8[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = getEnumTag for TapInteraction.EventType(v8);
  if ((_DWORD)result != 1)
  {
    v3 = *(_QWORD *)(v1 + 96);
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation);
    swift_beginAccess();
    v5 = *v4;
    v6 = (_QWORD *)(v3
                  + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_frontBoardInterfaceOrientation);
    result = swift_beginAccess();
    *v6 = v5;
  }
  return result;
}

void MultiwayViewController.frontBoardInterfaceOrientation.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.frontBoardInterfaceOrientation.modify(uint64_t a1, char a2)
{
  LocalParticipantView.blurEnabled.modify(a1, a2, (void (*)(uint64_t))MultiwayViewController.frontBoardInterfaceOrientation.didset);
}

void MultiwayViewController.wantsPIPRotationForLocalPreview.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[216];
  uint64_t v13[27];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_1();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  OUTLINED_FUNCTION_1();
  if (!*v3)
  {
    MultiwayViewController.isPipped.getter();
    if ((v4 & 1) != 0)
    {
      v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_40_60(v5, (uint64_t)v12);
      OUTLINED_FUNCTION_40_60((uint64_t)v12, (uint64_t)v13);
      OUTLINED_FUNCTION_12_109(v13);
      if (!v6)
      {
        OUTLINED_FUNCTION_1();
        v7 = OUTLINED_FUNCTION_64();
        outlined init with copy of FeatureEligibility?(v7, v8, v9);
        v10 = OUTLINED_FUNCTION_14_2();
        v11 = OUTLINED_FUNCTION_69_0(v1, 1, v10);
        if (v6)
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v1, &demangling cache variable for type metadata for Participant?);
        else
          OUTLINED_FUNCTION_315(v11, type metadata accessor for Participant);
      }
    }
  }
  OUTLINED_FUNCTION_29_60();
}

void MultiwayViewController.isPipped.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.supportedDeviceOrientations.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.supportedDeviceOrientations.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.supportedDeviceOrientations.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.isOnScreen.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_21_6();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_19();
  return v1;
}

void MultiwayViewController.isOnScreen.setter()
{
  void *v0;
  id v1;
  char v2;

  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_157();
  static Published.subscript.getter();
  OUTLINED_FUNCTION_27_0();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  OUTLINED_FUNCTION_327();
  static Published.subscript.setter();
  MultiwayViewController.isOnScreen.didset(v2);
  OUTLINED_FUNCTION_8_15();
}

uint64_t key path getter for MultiwayViewController.isOnScreen : MultiwayViewController@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = MultiwayViewController.isOnScreen.getter();
  *a1 = result & 1;
  return result;
}

void key path setter for MultiwayViewController.isOnScreen : MultiwayViewController()
{
  MultiwayViewController.isOnScreen.setter();
}

void MultiwayViewController.isOnScreen.didset(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  __CFNotificationCenter *v8;
  __CFNotificationCenter *v9;
  uint64_t v10;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)&static Logger.conversationKit);
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 1024;
    MultiwayViewController.isOnScreen.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1BD004000, v5, v6, "isOnScreen oldvalue: %{BOOL}d, newValue: %{BOOL}d", (uint8_t *)v7, 0xEu);
    MEMORY[0x1C3B751B8](v7, -1, -1);
  }
  else
  {

  }
  if ((MultiwayViewController.isOnScreen.getter() & 1) != (a1 & 1))
  {
    if ((MultiwayViewController.isOnScreen.getter() & 1) != 0)
    {
      v8 = CFNotificationCenterGetDarwinNotifyCenter();
      if (one-time initialization token for ICSIsOnScreenNotification != -1)
        swift_once();
      CFNotificationCenterPostNotification(v8, (CFNotificationName)static MultiwayViewController.ICSIsOnScreenNotification, 0, 0, 1u);

      MultiwayViewController.resumeUserInterface()();
    }
    else if ((MultiwayViewController.isFrontmostMultiway.getter() & 1) != 0)
    {
      v9 = CFNotificationCenterGetDarwinNotifyCenter();
      if (one-time initialization token for ICSIsOffScreenNotification != -1)
        swift_once();
      CFNotificationCenterPostNotification(v9, (CFNotificationName)static MultiwayViewController.ICSIsOffScreenNotification, 0, 0, 1u);

      if (one-time initialization token for shared != -1)
        swift_once();
      v10 = (*(uint64_t (**)(void))(*(_QWORD *)static ConversationHUDMenuController.shared + 88))();
      if (v10)
      {
        (*(void (**)(unint64_t, unint64_t))(*(_QWORD *)v10 + 528))(0xD00000000000001DLL, 0x80000001BD6923A0);
        swift_release();
      }
      MultiwayViewController.pauseUserInterface()();
    }
    MultiwayViewController.updateScreenSharingBlurIfNeeded()();
    MultiwayViewController.showCallDetailsIfNecessary()();
  }
}

void MultiwayViewController.resumeUserInterface()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  _QWORD *v13;
  void *v14;
  char v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[216];
  uint64_t v55[28];

  v1 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v1);
  v41 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1E0C80A78](v3);
  v42 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ForegroundCollaborationState(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  MultiwayViewController.updateStatusBarHidden()();
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  swift_beginAccess();
  ConversationController.deviceOrientation.setter(*v9);
  MultiwayViewController.updateFloatingLocalParticpantView()();
  v10 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v10, (uint64_t)v54, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v54, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v55) != 1)
  {
    v11 = *(id *)(v10 + 56);
    LocalParticipantView.updateControlsAlpha(animated:)(0);

  }
  MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
  MultiwayViewController.conversationControlsManager.getter();
  v13 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v12)
  {
    v14 = v12;
    (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v12) + 0x978))();

  }
  MultiwayViewController.restartAutoHideInCallControlsTimer()();
  if ((MultiwayViewController.isOnScreen.getter() & 1) != 0)
  {
    MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()();
    MultiwayViewController.isPipped.getter();
    if ((v15 & 1) == 0)
    {
      MultiwayViewController.conversationControlsManager.getter();
      if (v16)
      {
        v17 = v16;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*v13 & *v17) + 0x7E0))(v7);

      }
    }
    MultiwayViewController.conversationControlsManager.getter();
    if (v18)
    {
      v19 = v18;
      ConversationControlsManager.showInCallHUD()();

    }
    ConversationController.lookupActiveConversation()();
    if (v48)
    {
      outlined init with take of Notice(&v46, (uint64_t)v51);
      v20 = v52;
      v21 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 200))(v20, v21) & 1) != 0
        && (MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter() & 1) != 0)
      {
        MultiwayViewController.call.getter();
        v23 = v22;
        v24 = objc_msgSend(v22, sel_wantsHoldMusic);

        if ((v24 & 1) == 0)
        {
          MultiwayViewController.call.getter();
          v26 = v25;
          objc_msgSend(v25, sel_setIsSendingVideo_, 1);

          MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(0);
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v46, &demangling cache variable for type metadata for Conversation?);
    }
    v27 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    swift_beginAccess();
    if (*(char *)(v27 + 16) < 0)
    {
      v28 = *(unsigned __int8 *)(v27 + 1);
      if ((ConversationController.isCarPlayConnected.getter() & 1) == 0)
      {
        if ((ConversationController.shouldDeferStartCameraAction.getter() & 1) != 0)
        {
          ConversationController.didDeferStartCameraAction.setter(1);
        }
        else
        {
          MultiwayViewController.localVideoProvider.getter();
          v30 = v52;
          v29 = v53;
          __swift_project_boxed_opaque_existential_1(v51, v52);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, *v9, 1, v30, v29);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        }
        outlined init with take of MultiwayViewController.ViewContent?(v10, (uint64_t)&v46, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)&v46, (uint64_t)v51, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v51) != 1)
        {
          v31 = *(void **)(v10 + 56);
          MultiwayViewController.isPipped.getter();
          if ((v32 & 1) == 0)
          {
            swift_beginAccess();
            v33 = v41;
            _s15ConversationKit11ParticipantVWOcTm_4();
            v34 = v31;
            v35 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
            LOWORD(v38) = 257;
            LOBYTE(v37) = 1;
            v36 = v42;
            ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)(v33, 2, 0, 0, 0, 0, 0, v35 & 1, v37, 0, v38, v39, v40, v41, v42, v43, v44, v45, v46,
              *((uint64_t *)&v46 + 1),
              v47,
              v48,
              v49,
              v50);
            ParticipantView.registerVideoLayers(with:)(v36);

            outlined destroy of AccountUpdateNotice(v36, type metadata accessor for ParticipantViewModel);
          }
        }
      }
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void MultiwayViewController.pauseUserInterface()()
{
  void *v0;
  id v1;
  id v2;
  char *v3;
  id v4;
  char v5;
  char v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  char v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(unint64_t, unint64_t);
  _QWORD *v27;
  id v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v1 = objc_msgSend(v0, sel_navigationController);
  v2 = objc_msgSend(v1, sel_topViewController);

  if (v2)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
    v3 = v0;
    v4 = v2;
    v5 = static NSObject.== infix(_:_:)();

    if ((v5 & 1) != 0)
    {
      MultiwayViewController.isPipped.getter();
      if ((v6 & 1) != 0
        && (MultiwayViewController.isOnScreen.getter() & 1) != 0
        && (MultiwayViewController.shouldPauseForRingingCall.getter() & 1) == 0)
      {
        MultiwayViewController.call.getter();
        v28 = v16;
        objc_msgSend(v16, sel_setRemoteVideoPresentationState_, 1);

      }
      else if ((MultiwayViewController.isFrontmostMultiway.getter() & 1) != 0)
      {
        MultiwayViewController.call.getter();
        v8 = v7;
        objc_msgSend(v7, sel_setRemoteVideoPresentationState_, 2);

        v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
        ConversationController.lookupActiveConversation()();
        if (v33)
        {
          outlined init with take of Notice(&v32, (uint64_t)v29);
          v10 = v30;
          v11 = v31;
          __swift_project_boxed_opaque_existential_1(v29, v30);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 200))(v10, v11) & 1) != 0)
          {
            MultiwayViewController.call.getter();
            v13 = v12;
            v14 = objc_msgSend(v12, sel_isSendingVideo);

            if ((v14 & 1) != 0)
              v15 = 1;
            else
              v15 = MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter();
            MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(v15 & 1);
            MultiwayViewController.call.getter();
            v18 = v17;
            objc_msgSend(v17, sel_setIsSendingVideo_, 0);

          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v32, &demangling cache variable for type metadata for Conversation?);
        }
        v19 = v9 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
        swift_beginAccess();
        v20 = *(_QWORD *)(v19 + 8);
        ObjectType = swift_getObjectType();
        v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 184);
        swift_unknownObjectRetain();
        LODWORD(v19) = v22(ObjectType, v20);
        swift_unknownObjectRelease();
        MultiwayViewController.localVideoProvider.getter();
        v23 = v30;
        v24 = v31;
        __swift_project_boxed_opaque_existential_1(v29, v30);
        if ((_DWORD)v19 == 1)
          (*(void (**)(uint64_t, uint64_t))(v24 + 64))(v23, v24);
        else
          (*(void (**)(uint64_t, uint64_t))(v24 + 56))(v23, v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        v25 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
        if (v25)
        {
          v26 = *(void (**)(unint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & *v25) + 0xB8);
          v27 = v25;
          v26(0xD000000000000016, 0x80000001BD691C50);

        }
      }
    }
  }
}

void MultiwayViewController.updateScreenSharingBlurIfNeeded()()
{
  void *v0;
  void *v1;
  unsigned int v2;
  void *v3;
  void *v4;
  id v5;

  MultiwayViewController.call.getter();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_isSharingScreen);

  if (v2)
  {
    MultiwayViewController.call.getter();
    v4 = v3;
    v5 = objc_msgSend(v3, sel_isSharingScreen);

    MultiwayViewController.updateScreenSharingSnapshotView(_:)(v5);
  }
}

Swift::Void __swiftcall MultiwayViewController.showCallDetailsIfNecessary()()
{
  void (*v0)(unint64_t);
  void (*v1)(unint64_t);
  _QWORD *v2;
  char v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = v0;
  MultiwayViewController.conversationControlsManager.getter();
  if (v2)
  {
    v7 = v2;
    v3 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x328))();
    v4 = v7;
    if ((v3 & 1) != 0)
    {
      v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
      if (v5)
      {
        v6 = OUTLINED_FUNCTION_220_3(v5);
        OUTLINED_FUNCTION_61();
        v1(0xD00000000000003DLL);

        v4 = v6;
      }
      else
      {
        v4 = v7;
      }
    }

  }
  else
  {
    OUTLINED_FUNCTION_43_1();
  }
}

void MultiwayViewController.isOnScreen.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = MultiwayViewController.isOnScreen.getter() & 1;
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.isOnScreen.modify()
{
  MultiwayViewController.isOnScreen.setter();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.$isOnScreen.getter()
{
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_32();
}

void key path setter for MultiwayViewController.$isOnScreen : MultiwayViewController(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  MultiwayViewController.$isOnScreen.setter((uint64_t)v5);
}

void MultiwayViewController.$isOnScreen.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, a1, v4);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.setter();
  swift_endAccess();
  OUTLINED_FUNCTION_101(a1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_91();
}

void MultiwayViewController.$isOnScreen.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;

  v1 = OUTLINED_FUNCTION_46_17();
  OUTLINED_FUNCTION_35_11((uint64_t)v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v0[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[5] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v0[6] = malloc(v4);
  v0[7] = malloc(v4);
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.$isOnScreen.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = OUTLINED_FUNCTION_38_21();
    v7(v6);
    MultiwayViewController.$isOnScreen.setter((uint64_t)v3);
    OUTLINED_FUNCTION_52((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else
  {
    MultiwayViewController.$isOnScreen.setter(*(_QWORD *)(*(_QWORD *)a1 + 56));
  }
  free(v4);
  free(v3);
  free(v2);
}

void MultiwayViewController.isOnScreenPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher);
  Publisher.eraseToAnyPublisher()();
  OUTLINED_FUNCTION_39_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_91();
}

uint64_t MultiwayViewController.isVisibleForStartingCamera.getter()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;

  if ((MultiwayViewController.isOnScreen.getter() & 1) != 0
    && (v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner),
        swift_beginAccess(),
        (*v1 & 1) == 0))
  {
    v2 = ConversationController.isCarPlayConnected.getter() ^ 1;
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v0 = qword_1EF4D1E58;
  if (!qword_1EF4D1E58)
    return 0;
  v1 = static MultiwayViewController._stoppedSendingVideoDueToOffscreen;
  v2 = byte_1EF4D1E60 & 1;
  MultiwayViewController.call.getter();
  v4 = v3;
  swift_bridgeObjectRetain();
  v5 = objc_msgSend(v4, sel_uniqueProxyIdentifier);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;

  if (v6 == v1 && v0 == v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v2;
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
    return 0;
  return v2;
}

uint64_t MultiwayViewController.stoppedSendingVideoDueToOffscreen.setter(char a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MultiwayViewController.call.getter();
  v3 = v2;
  v4 = objc_msgSend(v2, sel_uniqueProxyIdentifier);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  static MultiwayViewController._stoppedSendingVideoDueToOffscreen = v5;
  qword_1EF4D1E58 = v7;
  byte_1EF4D1E60 = a1;
  return swift_bridgeObjectRelease();
}

void MultiwayViewController.hasParticipantVideo.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

uint64_t key path getter for MultiwayViewController.hasParticipantVideo : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void *MultiwayViewController.hasParticipantVideo.didset(char a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  void *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1 & 1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo);
  result = (void *)swift_beginAccess();
  if (*v3 != v2)
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BD6441D0;
    LOBYTE(v10) = *v3;
    v6 = String.init<A>(reflecting:)();
    v8 = v7;
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v8;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v9 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
    swift_beginAccess();
    result = (void *)MEMORY[0x1C3B752C0](v9);
    if (result)
    {
      objc_msgSend(result, sel_updateBackgroundStartPipAuthorizationState, v10);
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void MultiwayViewController.isDisplayedInBanner.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isDisplayedInBanner.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner, (void (*)(uint64_t))MultiwayViewController.isDisplayedInBanner.didset);
}

uint64_t key path getter for MultiwayViewController.isDisplayedInBanner : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isDisplayedInBanner.didset(char a1)
{
  char *v1;
  char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  char *v21;
  _BYTE v22[56];
  _BYTE v23[216];
  uint64_t v24[27];

  v2 = v1;
  v3 = a1 & 1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner];
  swift_beginAccess();
  if (*v8 == v3)
    return;
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v24) == 1)
    return;
  v10 = *(void **)(v9 + 48);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v11 = v10;
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_5;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
  v22[8] = *v8;
  v14 = String.init<A>(reflecting:)();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v2, sel_view);
  if (v17)
  {
    v18 = v17;
    if (*v8 == 1)
    {
      v19 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    }
    else
    {
      if (one-time initialization token for background != -1)
        swift_once();
      v19 = (id)static Colors.MultiwayViewController.background;
    }
    v20 = v19;
    objc_msgSend(v18, sel_setBackgroundColor_, v19);

    MultiwayViewController.updateViewConstraints()();
    v21 = &v11[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    swift_beginAccess();
    MultiwayViewController.updateViewVisibility(localParticipantState:)(*v21);

  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.updateViewVisibility(localParticipantState:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char v29;
  id v30;
  void *v31;
  char v32;
  double v33;
  id v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t active;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const void *v47;
  const void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _BYTE *v60;
  _QWORD *v61;
  void (*v62)(unint64_t, unint64_t);
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD v79[42];
  _BYTE v80[288];
  _BYTE v81[216];
  id v82[28];

  LOBYTE(v2) = a1;
  v3 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v3);
  v74 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v68 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Participant(0);
  v71 = *(char **)(v69 - 8);
  v7 = MEMORY[0x1E0C80A78](v69);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v70 = (uint64_t)&v64 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v64 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v66 = (uint64_t)&v64 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v64 - v17;
  v19 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v19, (uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v81, (uint64_t)v82, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType((uint64_t *)v82) == 1)
    return;
  v20 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner;
  swift_beginAccess();
  v21 = 0.0;
  if ((*(_BYTE *)v20 & 1) == 0)
  {
    v22 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
    swift_beginAccess();
    if (*v22)
      v21 = 0.0;
    else
      v21 = 1.0;
  }
  v76 = v14;
  v73 = v3;
  v67 = v1;
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v81, (uint64_t)v80, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v80);
  if (one-time initialization token for conversationKit != -1)
LABEL_45:
    swift_once();
  v65 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BD6441D0;
  *(double *)v79 = v21;
  v24 = String.init<A>(reflecting:)();
  v26 = v25;
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v23 + 32) = v24;
  *(_QWORD *)(v23 + 40) = v26;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  objc_msgSend(v82[7], sel_setAlpha_, v21);
  objc_msgSend(v82[14], sel_setAlpha_, v21);
  v27 = objc_msgSend(v82[2], sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_47;
  }
  v28 = v27;
  objc_msgSend(v27, sel_setAlpha_, v21);

  v29 = *(_BYTE *)v20;
  v30 = objc_msgSend(v82[1], sel_view);
  if (!v30)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    return;
  }
  v31 = v30;
  v32 = v29 | (v2 > 0x80u);
  v33 = 1.0;
  v21 = 0.0;
  if (v29 & 1 | (v2 > 0x80u))
    v33 = 0.0;
  objc_msgSend(v30, sel_setAlpha_, v33);

  v34 = objc_msgSend(v82[0], sel_view);
  if (!v34)
    goto LABEL_48;
  v35 = v34;
  v36 = &metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
  v37 = v67;
  if ((v32 & 1) == 0)
  {
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
      v21 = 0.0;
    else
      v21 = 1.0;
  }
  objc_msgSend(v35, sel_setAlpha_, v21);

  active = MultiwayViewController.mostActiveParticipants.getter();
  v20 = active;
  v39 = MEMORY[0x1E0DEE9D8];
  v78 = MEMORY[0x1E0DEE9D8];
  v75 = *(_QWORD *)(active + 16);
  if (v75)
  {
    v40 = 0;
    v41 = v69;
    v9 = v71;
    v72 = active;
    while (1)
    {
      if (v40 >= *(_QWORD *)(v20 + 16))
      {
        __break(1u);
        goto LABEL_45;
      }
      v42 = *((_QWORD *)v9 + 9);
      v77 = (v9[80] + 32) & ~(unint64_t)v9[80];
      _s15ConversationKit11ParticipantVWOcTm_4();
      v2 = v41;
      v43 = *(_QWORD *)&v18[*(int *)(v41 + 28)];
      v44 = (uint64_t)v76;
      _s15ConversationKit11ParticipantVWOcTm_4();
      if (!v43)
        goto LABEL_28;
      v45 = (uint64_t)v74;
      _s15ConversationKit11ParticipantVWOcTm_4();
      if (swift_getEnumCaseMultiPayload() != 4)
        break;
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v47 = (const void *)(v45 + *(int *)(v46 + 48));
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)(v45 + *(int *)(v46 + 64)), *(_QWORD *)(v45 + *(int *)(v46 + 64) + 8));
      v48 = v47;
      v9 = v71;
      memcpy(v79, v48, sizeof(v79));
      v49 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v45, v49);
      v50 = v79[0];
      outlined destroy of Participant.MediaInfo((uint64_t)v79);
      outlined destroy of AccountUpdateNotice(v44, type metadata accessor for Participant);
      v20 = v72;
      if ((v50 & 1) == 0)
      {
        outlined init with take of Participant((uint64_t)v18, v70);
        v51 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v51 + 16) + 1, 1);
          v51 = v78;
        }
        v53 = *(_QWORD *)(v51 + 16);
        v52 = *(_QWORD *)(v51 + 24);
        if (v53 >= v52 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
          v51 = v78;
        }
        *(_QWORD *)(v51 + 16) = v53 + 1;
        outlined init with take of Participant(v70, v51 + v77 + v53 * v42);
        v41 = v69;
        v9 = v71;
        goto LABEL_30;
      }
LABEL_29:
      outlined destroy of AccountUpdateNotice((uint64_t)v18, type metadata accessor for Participant);
      v41 = v2;
LABEL_30:
      if (v75 == ++v40)
      {
        v54 = v41;
        v39 = v78;
        v37 = v67;
        v36 = (_QWORD *)&metadata instantiation cache for protocol conformance descriptor for ImageNames.Roster;
        goto LABEL_33;
      }
    }
    outlined destroy of AccountUpdateNotice(v45, type metadata accessor for Participant.State);
    v20 = v72;
LABEL_28:
    outlined destroy of AccountUpdateNotice(v44, type metadata accessor for Participant);
    goto LABEL_29;
  }
  v54 = v69;
LABEL_33:
  swift_bridgeObjectRelease();
  v55 = v68;
  specialized Collection.first.getter(v39, v68);
  swift_release();
  if (__swift_getEnumTagSinglePayload(v55, 1, v54) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v55, &demangling cache variable for type metadata for Participant?);
    swift_beginAccess();
    v56 = (uint64_t)v65;
    _s15ConversationKit11ParticipantVWOcTm_4();
  }
  else
  {
    v57 = v55;
    v56 = v66;
    outlined init with take of Participant(v57, v66);
  }
  MostActiveParticipantViewController.focus(on:)();
  outlined destroy of AccountUpdateNotice(v56, type metadata accessor for Participant);
  v58 = *(_QWORD *)(v37 + v36[494]) + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v58 + 16) >= 2uLL)
    MostActiveParticipantViewController.toggleRingButtonIfNecessary(isPipped:)(1);
  v59 = (_QWORD *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  if ((*v59 == 1
     || (v60 = (_BYTE *)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen),
         swift_beginAccess(),
         (*v60 & 1) == 0))
    && (v61 = *(_QWORD **)(v37 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator)) != 0)
  {
    v62 = *(void (**)(unint64_t, unint64_t))((*MEMORY[0x1E0DEEDD8] & *v61) + 0xB8);
    v63 = v61;
    v62(0xD000000000000018, 0x80000001BD6921E0);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v81);

  }
  else
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v81);
  }
}

void MultiwayViewController.isDisplayedInBanner.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.isDisplayedInBanner.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))MultiwayViewController.isDisplayedInBanner.setter);
}

void MultiwayViewController.isInVideoMessageFlow.getter()
{
  uint64_t v0;
  void (*v1)(void);
  id v2;
  id v3;

  OUTLINED_FUNCTION_323_1();
  v1 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & v0) + 0x198);
  v3 = v2;
  v1();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for MultiwayViewController.deskViewTapHandler : MultiwayViewController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.deskViewTapHandler : MultiwayViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.deskViewTapHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  v0 = OUTLINED_FUNCTION_21_6();
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v0);
  return OUTLINED_FUNCTION_21_6();
}

void MultiwayViewController.deskViewTapHandler.setter()
{
  MultiwayViewController.deskViewTapHandler.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_6_6();
  v4 = (uint64_t *)(v1 + *v3);
  OUTLINED_FUNCTION_2_0();
  v5 = *v4;
  *v4 = v2;
  v4[1] = v0;
  outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v5);
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewController.deskViewTapHandler.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  OUTLINED_FUNCTION_1();
  return *(_QWORD *)v1;
}

void MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  OUTLINED_FUNCTION_2_0();
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_BYTE *)(v7 + 16) = a3 & 1;
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewController.mostRecentFullScreenFocusedAspectRatio.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.mostRecentGridIsFullScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.mostRecentGridIsFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.mostRecentGridIsFullScreen.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.localParticipantIsFullScreen.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[216];
  uint64_t v4[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)v3);
  OUTLINED_FUNCTION_5_131((uint64_t)v3, (uint64_t)v4);
  OUTLINED_FUNCTION_12_109(v4);
  if (!v2)
    OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_69_24();
}

uint64_t key path getter for MultiwayViewController.windowAspectRatioHandler : MultiwayViewController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.windowAspectRatioHandler : MultiwayViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.windowAspectRatioHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

void MultiwayViewController.windowAspectRatioHandler.setter()
{
  MultiwayViewController.deskViewTapHandler.setter();
}

void MultiwayViewController.windowAspectRatioHandler.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for MultiwayViewController.captionsLayoutChangeHandler : MultiwayViewController@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.captionsLayoutChangeHandler : MultiwayViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.captionsLayoutChangeHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

void MultiwayViewController.captionsLayoutChangeHandler.setter()
{
  MultiwayViewController.deskViewTapHandler.setter();
}

void MultiwayViewController.captionsLayoutChangeHandler.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t key path getter for MultiwayViewController.unansweredCallDismissalHandler : MultiwayViewController@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v4);
}

uint64_t key path setter for MultiwayViewController.unansweredCallDismissalHandler : MultiwayViewController(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @callee_guaranteed () -> ();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  _sx7SwiftUI4FontV6WeightVRi_zRi0_zlyxIsegnd_SglWOy(v3);
  return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?(v8);
}

uint64_t MultiwayViewController.unansweredCallDismissalHandler.getter()
{
  return MultiwayViewController.deskViewTapHandler.getter();
}

void MultiwayViewController.unansweredCallDismissalHandler.setter()
{
  MultiwayViewController.deskViewTapHandler.setter();
}

void MultiwayViewController.unansweredCallDismissalHandler.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.isShowingHUD.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[216];
  uint64_t v11[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v10);
  OUTLINED_FUNCTION_6_110((uint64_t)v10, (uint64_t)v11);
  OUTLINED_FUNCTION_12_109(v11);
  if (!v2)
  {
    v3 = *(char **)(v1 + 48);
    v4 = &v3[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
    OUTLINED_FUNCTION_1();
    if (*v4)
    {
      v5 = v3;
      ConversationController.lookupActiveConversation()();
      if (v8)
      {
        v6 = v9;
        __swift_project_boxed_opaque_existential_1(v7, v8);
        OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56));
        OUTLINED_FUNCTION_49_5();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      }
      else
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, &demangling cache variable for type metadata for Conversation?);
      }
    }
  }
  OUTLINED_FUNCTION_29_60();
}

void MultiwayViewController.isFullScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isFullScreen.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen, (void (*)(uint64_t))MultiwayViewController.isFullScreen.didset);
}

uint64_t key path getter for MultiwayViewController.isFullScreen : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isFullScreen.didset(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _BYTE v18[56];
  _BYTE v19[216];
  uint64_t v20[27];

  v2 = v1;
  v3 = a1 & 1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (char *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
  swift_beginAccess();
  if (*v8 != v3)
  {
    v9 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v20) != 1)
    {
      v10 = *(void **)(v9 + 48);
      type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
      v11 = v10;
      *v7 = static OS_dispatch_queue.main.getter();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
      v12 = _dispatchPreconditionTest(_:)();
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
      if ((v12 & 1) != 0)
      {
        if (one-time initialization token for conversationKit == -1)
        {
LABEL_5:
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1BD6441D0;
          v18[8] = *v8;
          v14 = String.init<A>(reflecting:)();
          v16 = v15;
          *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v13 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(_QWORD *)(v13 + 32) = v14;
          *(_QWORD *)(v13 + 40) = v16;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          v17 = &v11[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
          swift_beginAccess();
          MultiwayViewController.updateViewVisibility(localParticipantState:)(*v17);
          specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(*v8);
          MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();

          return;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_5;
    }
  }
}

void MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  unsigned int v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[8];

  v1 = v0;
  if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v0
                                                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                             + 0xB8))() & 1) != 0)
  {
    MultiwayViewController.call.getter();
    v3 = v2;
    v4 = objc_msgSend(v2, sel_isConnected);

    if (v4)
    {
      v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen);
      swift_beginAccess();
      if (*v5 == 1)
      {
        if (one-time initialization token for shared != -1)
          swift_once();
        v6 = static NameAndPhotoUtilities.shared + OBJC_IVAR____TtC15ConversationKit21NameAndPhotoUtilities_delegate;
        swift_beginAccess();
        *(_QWORD *)(v6 + 8) = &protocol witness table for MultiwayViewController;
        swift_unknownObjectWeakAssign();
        swift_unknownObjectWeakInit();
        specialized MultiwayViewController.getSuggestedBannerType(completion:)(v1, (uint64_t)v7);
        swift_unknownObjectWeakDestroy();
      }
      else
      {
        MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
      }
    }
    else
    {
      MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
    }
  }
}

void MultiwayViewController.isFullScreen.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.isFullScreen.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))MultiwayViewController.isFullScreen.setter);
}

void MultiwayViewController.isAmbient.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isAmbient.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isAmbient.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1BD4F28A8(char a1)
{
  void *v1;

  return a1 & 1;
}

void MultiwayViewController.isShownAboveCoverSheet.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4F28EC(void *a1)
{
  if (a1)
  {
    objc_msgSend(a1, sel_isShownAboveCoverSheet);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isPipStashed.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isPipStashed.setter(char a1)
{
  SharedContentViewController.isPipped.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed, (void (*)(uint64_t))MultiwayViewController.isPipStashed.didset);
}

uint64_t key path getter for MultiwayViewController.isPipStashed : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.isPipStashed.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  swift_beginAccess();
  if (*v3 != v2)
    MultiwayViewController.updateCanPostReactionNotice()();
}

void MultiwayViewController.updateCanPostReactionNotice()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BD645380;
  MultiwayViewController.isPipped.getter();
  v2 = String.init<A>(reflecting:)();
  v4 = v3;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v6 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v4;
  v7 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed);
  swift_beginAccess();
  v8 = String.init<A>(reflecting:)();
  *(_QWORD *)(v1 + 96) = v5;
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 72) = v8;
  *(_QWORD *)(v1 + 80) = v9;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  MultiwayViewController.conversationControlsManager.getter();
  v11 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (v10)
  {
    v12 = v10;
    MultiwayViewController.isPipped.getter();
    (*(void (**)(_QWORD))((*v11 & *v12) + 0x390))(v13 & 1);

  }
  MultiwayViewController.conversationControlsManager.getter();
  if (v14)
  {
    v15 = v14;
    if (*v7)
      v16 = 1;
    else
      v16 = 2;
    (*(void (**)(uint64_t))((*v11 & *v15) + 0x378))(v16);

  }
}

void MultiwayViewController.isPipStashed.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_35_11((uint64_t)v0);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.isPipStashed.modify(uint64_t a1, uint64_t a2)
{
  PlaceholderCall.isSendingVideo.modify(a1, a2, (void (*)(_QWORD))MultiwayViewController.isPipStashed.setter);
}

void MultiwayViewController.pipState.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.pipState.setter(uint64_t a1)
{
  MultiwayViewController.deviceOrientation.setter(a1, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState, MultiwayViewController.pipState.didset);
}

void MultiwayViewController.deviceOrientation.setter(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a2);
  OUTLINED_FUNCTION_2_0();
  v7 = *v6;
  *v6 = a1;
  a3(v7);
  OUTLINED_FUNCTION_9_0();
}

uint64_t key path getter for MultiwayViewController.pipState : MultiwayViewController@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void MultiwayViewController.pipState.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  if (*v8 == a1)
    return;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (one-time initialization token for conversationKit != -1)
LABEL_21:
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD645380;
  v24 = *v8;
  type metadata accessor for CNKPiPState(0);
  v11 = String.init<A>(reflecting:)();
  v13 = v12;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v15 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  MultiwayViewController.isPipped.getter();
  LOBYTE(v24) = v16 & 1;
  v17 = String.init<A>(reflecting:)();
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v15;
  *(_QWORD *)(v10 + 72) = v17;
  *(_QWORD *)(v10 + 80) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (*v8 == 1)
  {
    if (one-time initialization token for shared != -1)
      swift_once();
    v19 = (*(uint64_t (**)(void))(*(_QWORD *)static ConversationHUDMenuController.shared + 88))();
    if (v19)
    {
      (*(void (**)(unint64_t, unint64_t))(*(_QWORD *)v19 + 528))(0xD000000000000016, 0x80000001BD692230);
      swift_release();
    }
  }
  MultiwayViewController.updateTileVisibilityForPiPState()();
  switch(*v8)
  {
    case 0:
    case 2:
      if ((MultiwayViewController.shouldPauseForRingingCall.getter() & 1) == 0)
        MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()();
      break;
    case 1:
    case 3:
      MultiwayViewController.updateViewsForPiPStateChange()();
      specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(*v8 != 1);
      break;
    default:
      if (one-time initialization token for default != -1)
        swift_once();
      v20 = type metadata accessor for Logger();
      __swift_project_value_buffer(v20, (uint64_t)&static Log.default);
      v21 = Logger.logObject.getter();
      v22 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1BD004000, v21, v22, "Unknown enum case", v23, 2u);
        MEMORY[0x1C3B751B8](v23, -1, -1);
      }

      break;
  }
  MultiwayViewController.showCallDetailsIfNecessary()();
  MultiwayViewController.updateCanPostReactionNotice()();
}

void MultiwayViewController.updateTileVisibilityForPiPState()()
{
  uint64_t v0;
  _QWORD *v1;
  double v2;
  uint64_t v3;
  double v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  v2 = 0.0;
  v3 = 0;
  v4 = 1.0;
  v5 = 1;
  switch(*v1)
  {
    case 0:
    case 2:
      goto LABEL_13;
    case 1:
      goto LABEL_12;
    case 3:
      if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
      {
        v2 = 0.0;
      }
      else
      {
        if (one-time initialization token for shared != -1)
          swift_once();
        v2 = (*(double (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
      }
LABEL_12:
      v5 = 0;
      v4 = 0.0;
      v3 = *(_QWORD *)&v2;
LABEL_13:
      MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(v3, v5, v4);
      break;
    default:
      if (one-time initialization token for default != -1)
        swift_once();
      v6 = type metadata accessor for Logger();
      __swift_project_value_buffer(v6, (uint64_t)&static Log.default);
      v7 = Logger.logObject.getter();
      v8 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1BD004000, v7, v8, "Unknown enum case", v9, 2u);
        MEMORY[0x1C3B751B8](v9, -1, -1);
      }

      break;
  }
}

Swift::Void __swiftcall MultiwayViewController.updateViewsForPiPStateChange()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  void *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  BOOL v25;
  BOOL *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  uint64_t *v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  unint64_t *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  _BYTE v71[216];
  uint64_t v72[30];
  _BYTE v73[216];
  uint64_t v74[45];
  _BYTE v75[216];
  uint64_t v76[30];
  _BYTE v77[216];
  uint64_t v78[28];

  OUTLINED_FUNCTION_93();
  v4 = v0;
  type metadata accessor for ParticipantViewModel(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_2();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_42_32();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v59 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v59 - v13;
  v15 = (_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131((uint64_t)v15, (uint64_t)v77);
  OUTLINED_FUNCTION_5_131((uint64_t)v77, (uint64_t)v78);
  OUTLINED_FUNCTION_12_109(v78);
  if (!v16)
  {
    v61 = v14;
    v17 = (void *)v15[6];
    LOWORD(v76[0]) = 513;
    v18 = v17;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)v76);
    v62 = v18;
    v19 = &v18[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
    OUTLINED_FUNCTION_1();
    MultiwayViewController.updateViewVisibility(localParticipantState:)(*v19);
    OUTLINED_FUNCTION_5_131((uint64_t)v15, (uint64_t)v75);
    OUTLINED_FUNCTION_5_131((uint64_t)v75, (uint64_t)v76);
    OUTLINED_FUNCTION_12_109(v76);
    if (!v16)
    {
      v60 = v1;
      v20 = (char *)v15[12];
      v21 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_494_0(v21, v22, &demangling cache variable for type metadata for Participant?);
      v23 = OUTLINED_FUNCTION_69_0(v2, 1, v7);
      if (v16)
      {
        OUTLINED_FUNCTION_219(v23, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant(v2, (uint64_t)v61);
        v24 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
        OUTLINED_FUNCTION_1();
        v25 = (unint64_t)(*v24 - 1) < 2;
        v26 = (BOOL *)&v20[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_isVisibleInPIP];
        OUTLINED_FUNCTION_2_0();
        *v26 = v25;
        v59 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_498();
        v27 = v20;
        v28 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
        LOWORD(v57) = 257;
        LOBYTE(v56) = 1;
        v29 = v60;
        ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v11, 2, 0, 0, 0, 0, 0, v28 & 1, v56, 0, v57, v58, v59, v60, (uint64_t)v61, (uint64_t)v62, v63, v64, v65,
          v66,
          v67,
          v68,
          v69,
          v70);
        v30 = *v24;
        _s15ConversationKit11ParticipantVWOcTm_4();
        if (v30 == 1)
        {
          v31 = *(_QWORD *)(v3 + *(int *)(v7 + 28));
          outlined destroy of AccountUpdateNotice(v3, type metadata accessor for Participant);
          if (!v31)
          {
            MostActiveParticipantViewController.localParticipantView.getter();
            v33 = v32;
            ParticipantView.registerVideoLayers(with:)(v29);

            v34 = v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
            OUTLINED_FUNCTION_1();
            if (*(char *)(v34 + 16) < 0)
            {
              v35 = *(_BYTE *)(v34 + 1);
              MostActiveParticipantViewController.localParticipantView.getter();
              v37 = v36;
              v38 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
              OUTLINED_FUNCTION_1();
              OUTLINED_FUNCTION_481_0(v35, *v38);

            }
          }
        }
        else
        {
          outlined destroy of AccountUpdateNotice(v3, type metadata accessor for Participant);
        }
        if (*v24 != 3)
        {

LABEL_19:
          v43 = v29;
LABEL_28:
          outlined destroy of AccountUpdateNotice(v43, type metadata accessor for ParticipantViewModel);
          OUTLINED_FUNCTION_43_19(v55, type metadata accessor for Participant);
          goto LABEL_29;
        }
        v39 = (v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive);
        OUTLINED_FUNCTION_1();
        if (((uint64_t)v39->isa & 1) != 0)
        {
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          v40 = OUTLINED_FUNCTION_17_2();
          OUTLINED_FUNCTION_3(v40, (uint64_t)&static Logger.conversationKit);
          v41 = OUTLINED_FUNCTION_12_0();
          if (OUTLINED_FUNCTION_4_14(v41))
          {
            v42 = (uint8_t *)OUTLINED_FUNCTION_105();
            *(_WORD *)v42 = 0;
            OUTLINED_FUNCTION_130(&dword_1BD004000, v39, (os_log_type_t)v27, "Not registering fullScreenMultiwayViewController local layers as splitViewMultiwayViewController is active", v42);
            OUTLINED_FUNCTION_60();
          }

          goto LABEL_19;
        }
        OUTLINED_FUNCTION_5_131((uint64_t)v15, (uint64_t)v73);
        OUTLINED_FUNCTION_5_131((uint64_t)v73, (uint64_t)v74);
        if (getEnumTag for TapInteraction.EventType(v74) != 1)
        {
          v44 = *(id *)(v15[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
          ParticipantView.registerVideoLayers(with:)(v60);

        }
        v45 = (unint64_t *)(v59 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState);
        OUTLINED_FUNCTION_1();
        if (((char)v45[2] & 0x80000000) == 0)
        {

LABEL_27:
          v43 = v60;
          goto LABEL_28;
        }
        v46 = v27;
        v47 = *v45;
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_131((uint64_t)v15, (uint64_t)v71);
        OUTLINED_FUNCTION_5_131((uint64_t)v71, (uint64_t)v72);
        OUTLINED_FUNCTION_12_109(v72);
        if (!v16)
        {
          v49 = v47 >> 8;
          v50 = v15[7];
          swift_endAccess();
          v51 = *(void **)(v50 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
          v52 = (uint64_t *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
          OUTLINED_FUNCTION_1();
          v53 = *v52;
          v54 = v51;
          OUTLINED_FUNCTION_481_0(v49, v53);

          goto LABEL_27;
        }
        outlined destroy of AccountUpdateNotice(v60, type metadata accessor for ParticipantViewModel);
        OUTLINED_FUNCTION_43_19(v48, type metadata accessor for Participant);
        swift_endAccess();

      }
    }
LABEL_29:
    MultiwayViewController.updateScreenSharingBlurIfNeeded()();

  }
  OUTLINED_FUNCTION_52_1();
}

uint64_t MultiwayViewController.shouldPauseForRingingCall.getter()
{
  char v1;

  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    return 0;
  ConversationController.hasRingingCalls.getter();
  return v1 & 1;
}

void MultiwayViewController.setForegroundOrPiPRemoteVideoPresentationState()()
{
  char v0;
  void *v1;
  void *v2;
  id v3;

  MultiwayViewController.isPipped.getter();
  if ((v0 & 1) != 0)
  {
    MultiwayViewController.call.getter();
    v3 = v1;
    objc_msgSend(v1, sel_setRemoteVideoPresentationState_, 1);
  }
  else
  {
    if ((MultiwayViewController.isOnScreen.getter() & 1) == 0)
      return;
    MultiwayViewController.call.getter();
    v3 = v2;
    objc_msgSend(v2, sel_setRemoteVideoPresentationState_, 0);
  }

}

void MultiwayViewController.pipState.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = OUTLINED_FUNCTION_38_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  OUTLINED_FUNCTION_1();
  v2[3] = *v3;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.pipState.modify(uint64_t a1, uint64_t a2)
{
  MultiwayViewController.deviceOrientation.modify(a1, a2, MultiwayViewController.pipState.setter);
}

void MultiwayViewController.deviceOrientation.modify(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(_QWORD *)(*(_QWORD *)a1 + 24));
  OUTLINED_FUNCTION_11(v3);
}

uint64_t MultiwayViewController.isCaptioningEnabled.setter(Swift::Bool a1)
{
  partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
  CaptioningStateManager.setCaptioningEnabled(_:)(a1);
  return swift_release();
}

void MultiwayViewController.isCaptioningEnabled.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  MultiwayViewController.isCaptioningEnabled.getter();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_0();
}

{
  MultiwayViewController.isCaptioningEnabled.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_0();
}

_QWORD *MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  int v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t active;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE v39[240];
  _BYTE v40[216];
  _BYTE v41[216];
  uint64_t v42[27];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = a1[1];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    v11 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v41, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v41, (uint64_t)v42, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v42);
    if ((_DWORD)result != 1)
    {
      memcpy(v40, v42, sizeof(v40));
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v41, (uint64_t)v39, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      v38 = MEMORY[0x1E0DEE9D8];
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v39);
      active = MultiwayViewController.mostActiveParticipants.getter();
      MultiwayViewController.activeRemoteParticipants(in:)(active);
      v14 = v13;
      swift_bridgeObjectRelease();
      v15 = v8 | (v9 << 8);
      v16 = (id)v42[1];
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v16, v14, &v38, v15);

      v17 = (id)v42[12];
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v17, (uint64_t)v14, &v38, v15, (uint64_t (*)(_QWORD))type metadata accessor for MostActiveParticipantViewController, (uint64_t)&protocol witness table for MostActiveParticipantViewController, (void (*)(uint64_t, id *))MostActiveParticipantViewController.update(with:updateReason:));

      MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(2, 1);
      v18 = (void *)v42[0];
      swift_beginAccess();
      v19 = v18;
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v19, v21, &v38, v15, (uint64_t (*)(_QWORD))type metadata accessor for ParticipantListViewController, (uint64_t)&protocol witness table for ParticipantListViewController, (void (*)(uint64_t, id *))ParticipantListViewController.update(with:updateReason:));
      swift_bridgeObjectRelease();

      ParticipantListViewController.participantCount.getter();
      MultiwayViewController.setParticipantListState(_:animated:)(v22 > 0, 1);
      v23 = (void *)v42[4];
      if (v42[4])
      {
        v24 = v42[5];
        swift_getObjectType();
        v25 = v23;
        ParticipantListViewController.participantCount.getter();
        (*(void (**)(void))(v24 + 72))();

      }
      v26 = (uint64_t *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                      + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
      swift_beginAccess();
      v27 = *v26;
      swift_beginAccess();
      v35[0] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      specialized Array.append<A>(contentsOf:)();
      v28 = v35[0];
      MultiwayViewController.ViewContent.participantsViewControllers.getter();
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        v31 = v29 + 32;
        do
        {
          outlined init with copy of RadarReporting(v31, (uint64_t)v35);
          v32 = v36;
          v33 = v37;
          v34 = __swift_project_boxed_opaque_existential_1(v35, v36);
          specialized closure #1 in MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((uint64_t)v34, v28, &v38, v15, v32, v33);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
          v31 += 40;
          --v30;
        }
        while (v30);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      MultiwayViewController.updatePresentationSize()();
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v41);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MultiwayViewController.effectsViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v4);
  OUTLINED_FUNCTION_5_131((uint64_t)&v4, (uint64_t)v5);
  OUTLINED_FUNCTION_83_26(v5);
  if (!v2)
    v3 = *(id *)(v1 + 64);
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

void key path setter for MultiwayViewController.effectsViewController : MultiwayViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  MultiwayViewController.effectsViewController.setter(v1);
}

void MultiwayViewController.effectsViewController.setter(id a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  _BYTE v6[216];
  uint64_t v7[27];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_110(v3, (uint64_t)v6);
  OUTLINED_FUNCTION_6_110((uint64_t)v6, (uint64_t)v7);
  OUTLINED_FUNCTION_12_109(v7);
  if (!v4)
  {
    v5 = *(void **)(v3 + 64);
    *(_QWORD *)(v3 + 64) = a1;
    a1 = a1;

  }
  OUTLINED_FUNCTION_25_29();

  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.effectsViewController.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  MultiwayViewController.effectsViewController.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.effectsViewController.modify(id *a1, char a2)
{
  MultiwayViewController.effectsViewController.modify(a1, a2);
}

{
  id v2;

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    OUTLINED_FUNCTION_252_3();
    OUTLINED_FUNCTION_15_9(v2);
  }
  else
  {
    OUTLINED_FUNCTION_252_3();
    OUTLINED_FUNCTION_43_1();
  }
}

void MultiwayViewController.effectsBrowserViewController.getter()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6[27];

  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v2, (uint64_t)&v5);
  OUTLINED_FUNCTION_5_131((uint64_t)&v5, (uint64_t)v6);
  OUTLINED_FUNCTION_83_26(v6);
  if (!v3)
  {
    v4 = *(void **)(v2 + 72);
    if (v4)
    {
      OUTLINED_FUNCTION_421_0(v4);
      v1();
      OUTLINED_FUNCTION_49_5();
    }
  }
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_18();
}

void key path setter for MultiwayViewController.effectsBrowserViewController : MultiwayViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  MultiwayViewController.effectsBrowserViewController.setter(v1);
}

void MultiwayViewController.effectsBrowserViewController.setter(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  _QWORD *v7;
  void (*v8)(uint64_t);
  _QWORD *v9;
  uint64_t v10;
  _BYTE v11[216];
  uint64_t v12[27];
  _BYTE v13[216];
  uint64_t v14[27];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_110(v3, (uint64_t)v13);
  OUTLINED_FUNCTION_6_110((uint64_t)v13, (uint64_t)v14);
  OUTLINED_FUNCTION_12_109(v14);
  if (!v4)
  {
    v5 = *(void **)(v3 + 80);
    *(_QWORD *)(v3 + 80) = a1;
    v6 = a1;

  }
  swift_endAccess();
  OUTLINED_FUNCTION_6_110(v3, (uint64_t)v11);
  OUTLINED_FUNCTION_6_110((uint64_t)v11, (uint64_t)v12);
  OUTLINED_FUNCTION_12_109(v12);
  if (!v4)
  {
    v7 = *(_QWORD **)(v3 + 72);
    if (v7)
    {
      v8 = *(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7) + 0x98);
      v9 = v7;
      v10 = OUTLINED_FUNCTION_13_6();
      v8(v10);
      a1 = (void *)v3;
    }
  }

  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.effectsBrowserViewController.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  MultiwayViewController.effectsBrowserViewController.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.effectsBrowserViewController.modify(id *a1, char a2)
{
  id v2;

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    OUTLINED_FUNCTION_356_1();
    OUTLINED_FUNCTION_7_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_356_1();
    OUTLINED_FUNCTION_36();
  }
}

void MultiwayViewController.effectsControlsViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v5);
  OUTLINED_FUNCTION_5_131((uint64_t)&v5, (uint64_t)v6);
  OUTLINED_FUNCTION_83_26(v6);
  if (!v2)
  {
    v3 = *(void **)(v1 + 72);
    if (v3)
      v4 = v3;
  }
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

void *MultiwayViewController.captionsViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[216];
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    v2 = *(void **)(v1 + 136);
    v3 = v2;
  }
  return v2;
}

void MultiwayViewController.inCallControlsViewController.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v4);
  OUTLINED_FUNCTION_5_131((uint64_t)&v4, (uint64_t)v5);
  OUTLINED_FUNCTION_83_26(v5);
  if (!v2)
    v3 = *(id *)(v1 + 16);
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

id sub_1BD4F4470(id a1)
{
  return a1;
}

void MultiwayViewController.delegate.getter()
{
  BannerPresentationManager.presentationDelegate.getter();
}

void MultiwayViewController.delegate.setter()
{
  MultiwayViewController.delegate.setter();
}

{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_35();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.delegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  v2[4] = v1;
  v2[5] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4F4520(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

id sub_1BD4F454C(id a1)
{
  return a1;
}

void MultiwayViewController.iOSDelegate.getter()
{
  BannerPresentationManager.presentationDelegate.getter();
}

void MultiwayViewController.iOSDelegate.setter()
{
  MultiwayViewController.delegate.setter();
}

void key path getter for MultiwayViewController.delegate : MultiwayViewController()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD4F4628(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  OUTLINED_FUNCTION_32();
}

void key path setter for MultiwayViewController.delegate : MultiwayViewController()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_35();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.iOSDelegate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_124_1();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  v2[4] = v1;
  v2[5] = v3;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

void sub_1BD4F46B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.effectsEnabled.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.effectsEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.effectsEnabled.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

double MultiwayViewController.preferredPIPContentAspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[80];
  _BYTE v26[80];
  _QWORD v27[10];
  _QWORD v28[10];
  _BYTE v29[80];
  _BYTE v30[40];
  _QWORD v31[4];
  char v32;
  _BYTE v33[216];
  uint64_t v34[27];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v3 = v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_78();
  v6 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  outlined init with take of MultiwayViewController.ViewContent?(v6, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v33, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_12_109(v34);
  if (v12)
  {
    v7 = OUTLINED_FUNCTION_99_5();
    v13 = __swift_storeEnumTagSinglePayload(v7, v8, 1, v4);
LABEL_6:
    OUTLINED_FUNCTION_30_7(v13, &demangling cache variable for type metadata for Participant?);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v6 + 8)
     + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v9, (uint64_t)v3, &demangling cache variable for type metadata for Participant?);
  v10 = OUTLINED_FUNCTION_99_5();
  v13 = OUTLINED_FUNCTION_69_0(v10, v11, v4);
  if (v12)
    goto LABEL_6;
  v16 = OUTLINED_FUNCTION_134_1();
  outlined init with take of Participant(v16, v17);
  Participant.videoInfo.getter();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v25, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v28[0])
  {
    memcpy(v29, v28, 0x4AuLL);
    outlined release of LinearGradient((uint64_t)v25);
    outlined init with take of AspectRatio((uint64_t)&v29[40], (uint64_t)v30);
    v19 = outlined init with take of AspectRatio((uint64_t)v30, (uint64_t)v31);
    if ((v32 & 1) != 0)
    {
      OUTLINED_FUNCTION_15_12(v19, type metadata accessor for Participant);
      return 100.0;
    }
    v21 = *(double *)v31;
    v15 = *(double *)&v31[2];
    Participant.videoInfo.getter();
    OUTLINED_FUNCTION_15_12(v22, type metadata accessor for Participant);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v27[0])
    {
      v23 = v27[3];
      outlined release of LinearGradient((uint64_t)v26);
      if (v23 == 1)
      {
        return v21;
      }
      else if (v23 == 3)
      {
        return v21;
      }
    }
    return v15;
  }
  OUTLINED_FUNCTION_15_12(v18, type metadata accessor for Participant);
LABEL_7:
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
    return 100.0;
  MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter();
  return v14;
}

void MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  uint64_t *v10;
  _BOOL4 IsPortrait;
  id v12;
  void *v13;
  id v14;
  void *v15;

  v1 = v0;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    v2 = objc_msgSend(v0, sel_view);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, sel_frame);
      v5 = v4;

      v6 = objc_msgSend(v1, sel_view);
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, sel_frame);
        v9 = v8;

        v10 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation];
        swift_beginAccess();
        IsPortrait = UIInterfaceOrientationIsPortrait(*v10);
        v12 = objc_msgSend(v1, sel_view);
        v13 = v12;
        if (v9 >= v5 == IsPortrait)
        {
          if (v12)
          {
            objc_msgSend(v12, sel_frame);

            v14 = objc_msgSend(v1, sel_view);
            if (v14)
            {
              v15 = v14;
              objc_msgSend(v14, sel_frame);

              return;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          return;
        }
        if (v12)
        {
          objc_msgSend(v12, sel_frame);

          return;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t MultiwayViewController.fullScreenFocusedParticipantOrientation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[80];
  _QWORD v16[10];
  _BYTE v17[216];
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v3 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_1();
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_186_3(v5, (uint64_t)v17);
  OUTLINED_FUNCTION_186_3((uint64_t)v17, (uint64_t)&v18);
  OUTLINED_FUNCTION_12_109(&v18);
  if (v6)
    return 1;
  v7 = OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_494_0(v7, v8, &demangling cache variable for type metadata for Participant?);
  v9 = OUTLINED_FUNCTION_69_0(v1, 1, v3);
  if (v6)
  {
    OUTLINED_FUNCTION_219(v9, &demangling cache variable for type metadata for Participant?);
    return 1;
  }
  v10 = OUTLINED_FUNCTION_396_1();
  outlined init with take of Participant(v10, v11);
  Participant.videoInfo.getter();
  OUTLINED_FUNCTION_315(v12, type metadata accessor for Participant);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v16[0])
    return 1;
  v13 = v16[3];
  outlined release of LinearGradient((uint64_t)v15);
  return v13;
}

void MultiwayViewController.shouldShowLastFrameUI.getter()
{
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.shouldDisconnectOnDismissal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97[216];
  uint64_t v98[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v97);
  OUTLINED_FUNCTION_6_110((uint64_t)v97, (uint64_t)v98);
  v2 = OUTLINED_FUNCTION_12_109(v98);
  if (!v9)
  {
    OUTLINED_FUNCTION_200_3(v2, v3, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?, v4, v5, v6, v7, v8, v29, v31, v33, v35, v37, v39, v41, v43, v45, v47, v49,
      v51,
      v53,
      v55,
      v57,
      v59,
      v61,
      v63,
      v65,
      v67,
      v69,
      v71,
      v73,
      v75,
      v77,
      v79,
      v81,
      v83,
      v85,
      v87,
      v89,
      v91,
      v93,
      v95,
      v97[0]);
    OUTLINED_FUNCTION_412_1(v10, v11, v12, v13);
    v14 = ConversationController.isOneToOneModeEnabled.getter();
    if ((v14 & 1) == 0)
    {
      v21 = (unsigned __int8 *)(v98[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_mode);
      v22 = OUTLINED_FUNCTION_1();
      LODWORD(v21) = *v21;
      OUTLINED_FUNCTION_146_5(v22, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v23, v24, v25, v26, v27, v28, v30, v32, v34, v36, v38, v40, v42, v44, v46, v48, v50,
        v52,
        v54,
        v56,
        v58,
        v60,
        v62,
        v64,
        v66,
        v68,
        v70,
        v72,
        v74,
        v76,
        v78,
        v80,
        v82,
        v84,
        v86,
        v88,
        v90,
        v92,
        v94,
        v96,
        v97[0]);
      __asm { BR              X10 }
    }
    OUTLINED_FUNCTION_146_5(v14, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v15, v16, v17, v18, v19, v20, v30, v32, v34, v36, v38, v40, v42, v44, v46, v48, v50,
      v52,
      v54,
      v56,
      v58,
      v60,
      v62,
      v64,
      v66,
      v68,
      v70,
      v72,
      v74,
      v76,
      v78,
      v80,
      v82,
      v84,
      v86,
      v88,
      v90,
      v92,
      v94,
      v96,
      v97[0]);
  }
  OUTLINED_FUNCTION_18();
}

void sub_1BD4F4F2C()
{
  char v0;

  if ((v0 & 1) != 0)
    JUMPOUT(0x1BD4F4F20);
  JUMPOUT(0x1BD4F4F1CLL);
}

void MultiwayViewController.effectsBrowserIsOpaque.getter()
{
  void *v0;
  void *v1;
  id v2;

  MultiwayViewController.effectsBrowserViewController.getter();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_viewIfLoaded);

    if (v2)
    {
      objc_msgSend(v2, sel_alpha);

    }
  }
}

uint64_t MultiwayViewController.needsUpdatePresentationContexts.didset(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t result;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS();
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v13 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts) == 1
      && (a1 & 1) == 0)
    {
      v15 = (void *)static OS_dispatch_queue.main.getter();
      v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = partial apply for closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset;
      aBlock[5] = v16;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
      aBlock[3] = &block_descriptor_261;
      v17 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      MEMORY[0x1C3B7361C](0, v8, v5, v17);
      _Block_release(v17);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #1 in MultiwayViewController.needsUpdatePresentationContexts.didset(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  void *v5;
  void *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (char *)v2;
    MultiwayViewController.needsUpdatePresentationContexts.setter(0);
    MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(0);
    v4 = &v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
    swift_beginAccess();
    v5 = (void *)MEMORY[0x1C3B752C0](v4);
    if (v5)
    {
      v6 = v5;
      if ((objc_msgSend(v5, sel_respondsToSelector_, sel_participantsDidChangeLocationIn_) & 1) != 0)
        objc_msgSend(v6, sel_participantsDidChangeLocationIn_, v3);
      swift_unknownObjectRelease();
    }

  }
}

uint64_t MultiwayViewController.needsUpdatePresentationContexts.setter(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts) = a1;
  return MultiwayViewController.needsUpdatePresentationContexts.didset(v2);
}

uint64_t MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1;
  v4 = swift_bridgeObjectRetain();
  v5 = specialized Sequence.compactMap<A>(_:)(v4, v3);
  swift_bridgeObjectRelease();
  ConversationController.update(presentationContexts:forceUpdate:)((Swift::OpaquePointer)v5, a1);
  return swift_bridgeObjectRelease();
}

void MultiwayViewController.flashView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v1 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView);
  if (!v2)
  {
    v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
    OUTLINED_FUNCTION_2_0();
    *v3 = 1;
    type metadata accessor for FlashView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v6 = v4;

    v2 = 0;
  }
  v7 = v2;
  OUTLINED_FUNCTION_9_0();
}

void key path setter for MultiwayViewController.flashView : MultiwayViewController(id *a1)
{
  MultiwayViewController.flashView.setter((uint64_t)*a1);
}

void MultiwayViewController.flashView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView) = a1;

}

void MultiwayViewController.flashView.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_3(a1);
  MultiwayViewController.flashView.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.flashView.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    MultiwayViewController.flashView.setter((uint64_t)v3);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    MultiwayViewController.flashView.setter((uint64_t)v2);
    OUTLINED_FUNCTION_36();
  }
}

id MultiwayViewController.insulatingView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  id result;
  void *v8;
  id v9;
  double v10;
  id v11;
  SEL v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  id v21;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView);
  v4 = v3;
  if (v3 != (void *)1)
    goto LABEL_5;
  v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
  v6 = OUTLINED_FUNCTION_2_0();
  *v5 = 1;
  result = OUTLINED_FUNCTION_9(v6, sel_view);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_bounds);
    OUTLINED_FUNCTION_237_5();
    v9 = objc_allocWithZone((Class)type metadata accessor for MomentsIndicatorView());
    v10 = OUTLINED_FUNCTION_66();
    objc_msgSend(v11, v12, v10);
    OUTLINED_FUNCTION_120();
    v14 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & v13) + 0x68))(1);
    result = OUTLINED_FUNCTION_9(v14, sel_view);
    if (result)
    {
      objc_msgSend(result, sel_bounds);
      OUTLINED_FUNCTION_238_2();
      v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for InsulatingView<MomentsIndicatorView>));
      v16 = OUTLINED_FUNCTION_66();
      v4 = specialized InsulatingView.init(frame:content:forwardHits:)(v8, 0, v16, v17, v18, v19);
      v20 = *(void **)(v1 + v2);
      *(_QWORD *)(v1 + v2) = v4;
      v21 = v4;
      outlined consume of UIView??(v20);
LABEL_5:
      outlined copy of UIView??(v3);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void key path setter for MultiwayViewController.insulatingView : MultiwayViewController(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  MultiwayViewController.insulatingView.setter((uint64_t)v1);
}

void MultiwayViewController.insulatingView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView) = a1;
  outlined consume of UIView??(v2);
}

void MultiwayViewController.insulatingView.modify(uint64_t a1)
{
  id *v1;

  OUTLINED_FUNCTION_8_3(a1);
  *v1 = MultiwayViewController.insulatingView.getter();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.insulatingView.modify(id *a1, char a2)
{
  MultiwayViewController.effectsViewController.modify(a1, a2);
}

void MultiwayViewController.hasInitializedMomentsViews.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.hasInitializedMomentsViews.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.hasInitializedMomentsViews.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.localLivePhotoAlertView.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v1, (uint64_t)&v5);
  OUTLINED_FUNCTION_5_131((uint64_t)&v5, (uint64_t)v6);
  OUTLINED_FUNCTION_83_26(v6);
  if (!v2)
  {
    v3 = *(void **)(v1 + 128);
    if (v3)
      v4 = v3;
  }
  OUTLINED_FUNCTION_173_6();
  OUTLINED_FUNCTION_69_24();
}

uint64_t MultiwayViewController.cachedMediaPipSafeAreaFrame.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t result;
  double *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  CGRect v20;

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v16 = (double *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
    v20.origin.x = a1;
    v20.origin.y = a2;
    v20.size.width = a3;
    v20.size.height = a4;
    result = CGRectEqualToRect(*(CGRect *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame), v20);
    if ((result & 1) == 0)
    {
      v17 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      result = MEMORY[0x1C3B752C0](v17);
      if (result)
      {
        v18 = (void *)result;
        if ((objc_msgSend((id)result, sel_respondsToSelector_, sel_viewController_mediaPipSafeAreaFrameChanged_) & 1) != 0)objc_msgSend(v18, sel_viewController_mediaPipSafeAreaFrameChanged_, v5, *v16, v16[1], v16[2], v16[3]);
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;

  v5 = (double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
  v6 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame);
  v7 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 8);
  v8 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 16);
  v9 = *(double *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame + 24);
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return MultiwayViewController.cachedMediaPipSafeAreaFrame.didset(v6, v7, v8, v9);
}

double MultiwayViewController.mediaPipFrameInWindowScene.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene;
  OUTLINED_FUNCTION_1();
  return *(double *)v1;
}

void MultiwayViewController.mediaPipFrameInWindowScene.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;

  OUTLINED_FUNCTION_17_7();
  v5 = (double *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  v9 = v5[3];
  *(_QWORD *)v5 = v4;
  *((_QWORD *)v5 + 1) = v3;
  *((_QWORD *)v5 + 2) = v2;
  *((_QWORD *)v5 + 3) = v1;
  MultiwayViewController.mediaPipFrameInWindowScene.didset(v6, v7, v8, v9);
  OUTLINED_FUNCTION_289_0();
}

__n128 key path getter for MultiwayViewController.mediaPipFrameInWindowScene : MultiwayViewController@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene;
  swift_beginAccess();
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

void key path setter for MultiwayViewController.mediaPipFrameInWindowScene : MultiwayViewController()
{
  MultiwayViewController.mediaPipFrameInWindowScene.setter();
}

uint64_t MultiwayViewController.mediaPipFrameInWindowScene.didset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t result;
  CGRect *v16;
  char IsEmpty;
  uint64_t v18;
  CGRect v19;
  CGRect v20;

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v16 = (CGRect *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
    swift_beginAccess();
    v20.origin.x = a1;
    v20.origin.y = a2;
    v20.size.width = a3;
    v20.size.height = a4;
    result = CGRectEqualToRect(*v16, v20);
    if ((result & 1) == 0)
    {
      MultiwayViewController.updateMediaPipInfo()();
      if (CGRectIsEmpty(*v16))
      {
        IsEmpty = 1;
      }
      else
      {
        v19.origin.x = a1;
        v19.origin.y = a2;
        v19.size.width = a3;
        v19.size.height = a4;
        IsEmpty = CGRectIsEmpty(v19);
      }
      return (uint64_t)MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(IsEmpty);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.updateMediaPipInfo()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  char *v18;
  char *v19;
  double v20;
  double v21;
  uint64_t v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    MultiwayViewController.mediaPipFrame.getter();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = objc_msgSend(v1, sel_viewIfLoaded);
    if (v16)
    {
      v17 = v16;
      v23.origin.x = v9;
      v23.origin.y = v11;
      v23.size.width = v13;
      v23.size.height = v15;
      if (!CGRectIsEmpty(v23))
      {
        v18 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations];
        swift_beginAccess();
        if (*(_QWORD *)v18 == 2
          && (v19 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation],
              swift_beginAccess(),
              LODWORD(v19) = (*(_QWORD *)v19 & 0xFFFFFFFFFFFFFFFDLL) == 1,
              objc_msgSend(v17, sel_bounds),
              (_DWORD)v19 == v20 >= v21))
        {
          v28.origin.x = v9;
          v28.origin.y = v11;
          v28.size.width = v13;
          v28.size.height = v15;
          CGRectGetHeight(v28);
          v29.origin.x = v9;
          v29.origin.y = v11;
          v29.size.width = v13;
          v29.size.height = v15;
          CGRectGetWidth(v29);
          swift_beginAccess();
        }
        else
        {
          swift_beginAccess();
          MultiwayViewController.mediaPipInfo.setter();
          v24.origin.x = v9;
          v24.origin.y = v11;
          v24.size.width = v13;
          v24.size.height = v15;
          CGRectGetMidX(v24);
          v25.origin.x = MultiwayViewController.mediaPipSafeAreaFrame.getter();
          CGRectGetMidX(v25);
          v26.origin.x = v9;
          v26.origin.y = v11;
          v26.size.width = v13;
          v26.size.height = v15;
          CGRectGetMidY(v26);
          v27.origin.x = MultiwayViewController.mediaPipSafeAreaFrame.getter();
          CGRectGetMidY(v27);
        }
        MultiwayViewController.mediaPipInfo.setter();

        return MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(0);
      }

    }
    swift_beginAccess();
    MultiwayViewController.mediaPipInfo.setter();
    return MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(0);
  }
  __break(1u);
  return result;
}

_QWORD *MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *result;
  uint64_t v10;
  _BYTE *v11;
  Swift::OpaquePointer_optional v12;
  uint64_t active;
  void *v14;
  void *v15;
  _BYTE v17[264];
  _BYTE v18[216];
  uint64_t v19[27];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v10 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v10, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v18, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v19);
    if ((_DWORD)result != 1)
    {
      v11 = (_BYTE *)(v19[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      result = (_QWORD *)swift_beginAccess();
      if ((*v11 & 0xFE) != 0x80)
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v18, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v17);
        if ((a1 & 1) != 0)
        {
          active = MultiwayViewController.mostActiveParticipants.getter();
          MultiwayViewController.activeRemoteParticipants(in:)(active);
          v15 = v14;
          swift_bridgeObjectRelease();
        }
        else
        {
          v15 = 0;
        }
        v12.value._rawValue = v15;
        ParticipantGridViewController.dodgeMediaPip(with:)(v12);
        swift_bridgeObjectRelease();
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v18);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MultiwayViewController.mediaPipFrameInWindowScene.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _OWORD *v3;
  __int128 v4;

  v2 = OUTLINED_FUNCTION_46_17();
  *v0 = v2;
  v2[7] = v1;
  v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene);
  OUTLINED_FUNCTION_1();
  v4 = v3[1];
  *(_OWORD *)v2 = *v3;
  *((_OWORD *)v2 + 1) = v4;
  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.mediaPipFrameInWindowScene.modify(void **a1)
{
  void *v1;

  v1 = *a1;
  MultiwayViewController.mediaPipFrameInWindowScene.setter();
  OUTLINED_FUNCTION_11(v1);
}

void MultiwayViewController.isScreenSharingFullScreen.getter()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isScreenSharingFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen);
  OUTLINED_FUNCTION_2_0();
  *v3 = a1;
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.isScreenSharingFullScreen.modify()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.mediaPipInfo.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo);
  OUTLINED_FUNCTION_1();
  return *v1;
}

__n128 key path getter for MultiwayViewController.mediaPipInfo : MultiwayViewController@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;

  v3 = *a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
  swift_beginAccess();
  *(_BYTE *)a2 = *(_BYTE *)v3;
  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void key path setter for MultiwayViewController.mediaPipInfo : MultiwayViewController()
{
  MultiwayViewController.mediaPipInfo.setter();
}

void MultiwayViewController.mediaPipInfo.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  double v6;
  double v7;
  char v8;

  OUTLINED_FUNCTION_42_51();
  v4 = v3;
  v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
  OUTLINED_FUNCTION_2_0();
  v6 = *(double *)(v5 + 8);
  v7 = *(double *)(v5 + 16);
  v8 = *(_BYTE *)v5;
  *(_BYTE *)v5 = v4;
  *(_QWORD *)(v5 + 8) = v2;
  *(_QWORD *)(v5 + 16) = v1;
  MultiwayViewController.mediaPipInfo.didset(v8, v6, v7);
  OUTLINED_FUNCTION_289_0();
}

void MultiwayViewController.mediaPipInfo.didset(char a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  char *v13;
  id v14;
  uint64_t v15;

  v4 = v3;
  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v13 = &v4[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
    swift_beginAccess();
    if (!static ParticipantGridView.MediaPipInfo.== infix(_:_:)(*v13, a1, *((double *)v13 + 1), *((double *)v13 + 2), a2, a3))
    {
      v14 = objc_msgSend(v4, sel_viewIfLoaded);
      objc_msgSend(v14, sel_setNeedsLayout);

    }
  }
  else
  {
    __break(1u);
  }
}

char *MultiwayViewController.__allocating_init(activeCall:)(uint64_t a1)
{
  id v2;
  char *v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for BannerPresentationManager());
  OUTLINED_FUNCTION_407();
  v3 = BannerPresentationManager.init(delegate:)();
  return MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(a1, v3);
}

char *MultiwayViewController.__allocating_init(activeCall:bannerPresentationManager:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  id v5;
  id v6;
  void *v7;
  id v8;
  char *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  id v21;
  void *v22;
  char *v23;
  void *v24;
  _BYTE v26[8];
  _QWORD v27[5];
  _BYTE v28[16];
  _BYTE v29[8];
  _OWORD v30[2];
  uint64_t v31;

  v3 = v2;
  objc_opt_self();
  v5 = OUTLINED_FUNCTION_12_13();
  v6 = OUTLINED_FUNCTION_2_11((uint64_t)v5, sel_sharedInstance);
  if (one-time initialization token for shared != -1)
    swift_once();
  v7 = (void *)static PlaceholderCallCenter.shared;
  v8 = objc_allocWithZone((Class)type metadata accessor for CallCenter());
  v9 = CallCenter.init(callCenter:placeholderCallCenter:shouldRegisterForMediaControllerChanges:shouldRegisterForReactionsControllerChanges:)(v6, v7, 1, 1);
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  OUTLINED_FUNCTION_54();
  outlined init with take of DefaultParticipantMediaProviderCreator((uint64_t)v27, (uint64_t)v29);
  v27[1] = 0;
  OUTLINED_FUNCTION_54();
  outlined init with take of DefaultParticipantCaptionsProviderCreator((uint64_t)v27, (uint64_t)v28);
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  type metadata accessor for IDSCapabilitiesChecker();
  v11 = (_QWORD *)OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_472(0, (unint64_t *)&lazy cache variable for type metadata for TUIDSLookupManager);
  v27[3] = v12;
  v27[4] = &protocol witness table for TUIDSLookupManager;
  v27[0] = v10;
  OUTLINED_FUNCTION_33_0();
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  v13 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_202_0();
  v11[2] = Dictionary.init(dictionaryLiteral:)();
  v11[3] = Dictionary.init(dictionaryLiteral:)();
  v11[5] = 0;
  OUTLINED_FUNCTION_54();
  v11[6] = v13;
  outlined init with copy of RadarReporting((uint64_t)v27, (uint64_t)(v11 + 7));
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v11, sel_handleLookupManagerDidChangeNotification_, *MEMORY[0x1E0DBD648], v27[0]);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if (one-time initialization token for shared != -1)
    swift_once();
  v15 = static Defaults.shared;
  outlined init with copy of DefaultParticipantMediaProviderCreator((uint64_t)v29, (uint64_t)v26);
  outlined init with copy of DefaultParticipantCaptionsProviderCreator((uint64_t)v28, (uint64_t)v27);
  swift_retain();
  v16 = v9;
  specialized ConversationController.__allocating_init(activeCall:callCenter:participantMediaProviderCreator:participantCaptionsProviderCreator:includeLocalParticipantInVisibleParticipants:screenSharingSession:mode:idsCapabilitiesChecker:defaults:)((uint64_t)v5, (uint64_t)v16, (uint64_t)v26, (uint64_t)v27, 0, (uint64_t)v30, 1, (uint64_t)v11, v15);
  outlined destroy of DefaultParticipantCaptionsProviderCreator((uint64_t)v28);
  outlined destroy of DefaultParticipantMediaProviderCreator((uint64_t)v29);

  v17 = static Defaults.shared;
  v18 = one-time initialization token for shared;
  OUTLINED_FUNCTION_15_22();
  if (v18 != -1)
    swift_once();
  v19 = static Features.shared;
  v20 = objc_allocWithZone(v3);
  v21 = v19;
  v22 = (void *)OUTLINED_FUNCTION_134_1();
  return specialized MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(v22, v23, a2, v17, v24, v20);
}

char *MultiwayViewController.__allocating_init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  objc_class *v0;
  void *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_1_118();
  objc_allocWithZone(v0);
  OUTLINED_FUNCTION_650();
  v1 = (void *)OUTLINED_FUNCTION_143_7();
  return OUTLINED_FUNCTION_130_7(v1, v2, v3, v4, v5, v6, v7, v8);
}

char *MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  void *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_1_118();
  swift_getObjectType();
  v0 = (void *)OUTLINED_FUNCTION_143_7();
  return OUTLINED_FUNCTION_130_7(v0, v1, v2, v3, v4, v5, v6, v7);
}

_QWORD *MultiwayViewController.conversationControllerDidAddParticipant(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  __int16 v4;

  MultiwayViewController.scheduleUpdate(for:)(a1);
  v1 = MultiwayViewController.captionsViewController.getter();
  if (v1)
  {
    v2 = v1;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();

  }
  v4 = 514;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v4);
}

void closure #4 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v10)
    {
      v11 = (void *)v10;
      HIWORD(v12) = 514;
      MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(a1, (unsigned __int8 *)&v12 + 6);

    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t active;
  void *v42;
  void *v43;
  uint64_t v44;
  Swift::OpaquePointer v45;
  Swift::OpaquePointer v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char v75;
  char v76;
  uint64_t v77;
  void *v78;
  void *v79;
  char v80;
  char v81;
  _BYTE *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  _QWORD v99[3];
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[240];
  _BYTE v103[80];
  _BYTE v104[80];
  _QWORD v105[10];
  _QWORD v106[10];
  _BYTE v107[216];
  _BYTE v108[216];
  uint64_t v109[28];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v84 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v86 = (uint64_t)&v83 - v9;
  MEMORY[0x1E0C80A78](v10);
  v90 = (uint64_t)&v83 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v83 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v83 - v16;
  v89 = type metadata accessor for Participant(0);
  v95 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v88 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v87 = (uint64_t)&v83 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v83 - v22;
  v24 = type metadata accessor for DispatchPredicate();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v85) = *a2;
  LODWORD(v91) = a2[1];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v27 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x1E0DEF740], v24);
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v25 + 8))(v27, v24);
  if ((a2 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v28 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v28, (uint64_t)v108, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v108, (uint64_t)v109, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v109) != 1)
  {
    v29 = v3;
    memcpy(v107, v109, sizeof(v107));
    v30 = v89;
    v31 = *(int *)(v89 + 28);
    if (*(_QWORD *)(a1 + v31))
    {
      v94 = 0;
      v93 = 0;
      v92 = 0x7FFFFFCFELL;
    }
    else
    {
      v32 = *(_QWORD *)(v29 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
          + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
      swift_beginAccess();
      v92 = *(_QWORD *)v32;
      v94 = *(_QWORD *)(v32 + 8);
      v93 = *(unsigned __int8 *)(v32 + 16);
    }
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v108, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v102);
    Participant.isActive.getter();
    if ((v33 & 1) == 0)
      specialized MostActiveParticipantsController.markParticipantAsOffline(_:)(a1 + *(int *)(v30 + 20));
    v83 = v109[12];
    v34 = v109[12] + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v34, (uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v30);
    v96 = v29;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of Participant((uint64_t)v17, (uint64_t)v23);
      Participant.videoInfo.getter();
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v103, (uint64_t)v106, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      if (v106[0])
      {
        v36 = v106[3];
        outlined release of LinearGradient((uint64_t)v103);
        outlined init with copy of FeatureEligibility?(v34, (uint64_t)v14, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v30) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, &demangling cache variable for type metadata for Participant?);
        }
        else
        {
          Participant.videoInfo.getter();
          outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
          outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v104, (uint64_t)v105, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
          if (v105[0])
          {
            v37 = v105[3];
            outlined release of LinearGradient((uint64_t)v104);
            v38 = static UUID.== infix(_:_:)();
            v39 = v91;
            if ((v38 & 1) != 0 && v36 != v37)
            {
              MultiwayViewController.isPipped.getter();
              v40 = v85;
              if ((v80 & 1) != 0)
              {
                v81 = ConversationController.isOneToOneModeEnabled.getter();
                outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for Participant);
                if ((v81 & 1) != 0)
                {
                  v82 = (_BYTE *)(v83
                                + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates);
                  swift_beginAccess();
                  *v82 = 1;
                  v29 = v96;
                }
              }
              else
              {
                outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for Participant);
              }
            }
            else
            {
              outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for Participant);
              v40 = v85;
            }
            goto LABEL_19;
          }
        }
      }
      outlined destroy of AccountUpdateNotice((uint64_t)v23, type metadata accessor for Participant);
    }
    v40 = v85;
    v39 = v91;
LABEL_19:
    if (*(_QWORD *)(a1 + v31))
      MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(2, 1);
    active = MultiwayViewController.mostActiveParticipants.getter();
    MultiwayViewController.activeRemoteParticipants(in:)(active);
    v43 = v42;
    swift_bridgeObjectRelease();
    v44 = v109[1];
    LOBYTE(v99[0]) = v40;
    BYTE1(v99[0]) = v39;
    v45._rawValue = v43;
    ParticipantGridViewController.update(with:updateReason:)(v45, (char *)v99);
    v46._rawValue = v43;
    MostActiveParticipantViewController.update(with:updateReason:)(v46);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    Array<A>.participants(notIn:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ParticipantListViewController.update(with:updateReason:)();
    swift_bridgeObjectRelease();
    ParticipantListViewController.participantCount.getter();
    MultiwayViewController.setParticipantListState(_:animated:)(v47 > 0, 1);
    v48 = (void *)v109[4];
    if (v109[4])
    {
      v49 = v109[5];
      swift_getObjectType();
      v50 = v48;
      ParticipantListViewController.participantCount.getter();
      (*(void (**)(void))(v49 + 72))();

    }
    v51 = v44 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v51, v90, &demangling cache variable for type metadata for Participant?);
    MultiwayViewController.ViewContent.participantsViewControllers.getter();
    v53 = *(_QWORD *)(v52 + 16);
    if (v53)
    {
      v85 = v51;
      v54 = (_QWORD *)(v29 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
      v83 = v52;
      v55 = v52 + 32;
      swift_beginAccess();
      v91 = xmmword_1BD6441D0;
      do
      {
        outlined init with copy of RadarReporting(v55, (uint64_t)v99);
        v57 = v100;
        v56 = v101;
        __swift_project_boxed_opaque_existential_1(v99, v100);
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 48))(a1, v92, v94, v93, v57, v56);
        outlined init with copy of RadarReporting((uint64_t)v99, (uint64_t)&v98);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ParticipantsViewController);
        type metadata accessor for MostActiveParticipantViewController();
        if (!swift_dynamicCast()
          || (v97, MultiwayViewController.isPipped.getter(), (v58 & 1) == 0))
        {
          v59 = v100;
          v60 = v101;
          __swift_project_boxed_opaque_existential_1(v99, v100);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(a1, *v54, v59, v60);
        }
        v61 = v100;
        v62 = v101;
        __swift_project_boxed_opaque_existential_1(v99, v100);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Participant>);
        v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = v91;
        _s15ConversationKit11ParticipantVWOcTm_4();
        v64 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 96))(v63, v64 & 1, v61, v62);
        swift_bridgeObjectRelease();
        v65 = v100;
        v66 = v101;
        __swift_project_boxed_opaque_existential_1(v99, v100);
        Participant.isKickingAvailable.getter();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 64))(a1, v67 & 1, v65, v66);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
        v55 += 40;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      v30 = v89;
      v51 = v85;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v68 = v51;
    v69 = v86;
    outlined init with copy of FeatureEligibility?(v68, v86, &demangling cache variable for type metadata for Participant?);
    v70 = __swift_getEnumTagSinglePayload(v69, 1, v30);
    v72 = v87;
    v71 = (uint64_t)v88;
    if (v70 == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v69, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of Participant(v69, v87);
      if ((static UUID.== infix(_:_:)() & 1) != 0)
      {
        v73 = (uint64_t)v84;
        _s15ConversationKit11ParticipantVWOcTm_4();
        __swift_storeEnumTagSinglePayload(v73, 0, 1, v30);
        MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v90, v73);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v73, &demangling cache variable for type metadata for Participant?);
      }
      outlined destroy of AccountUpdateNotice(v72, type metadata accessor for Participant);
    }
    MultiwayViewController.updateLocalParticipantState()();
    v74 = *(unsigned __int8 *)(a1 + *(int *)(v30 + 24));
    _s15ConversationKit11ParticipantVWOcTm_4();
    if (v74 == 1)
    {
      Participant.hasReducedQualityVideo.getter();
      v76 = v75 ^ 1;
    }
    else
    {
      v76 = 0;
    }
    v77 = a1 + *(int *)(v30 + 20);
    outlined destroy of AccountUpdateNotice(v71, type metadata accessor for Participant);
    MultiwayViewController.updateOneToOneShutterButtonTapability(for:isMomentsAvailable:)(v77, v76 & 1);
    MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
    MultiwayViewController.updateHasParticipantVideo()();
    MultiwayViewController.scheduleUpdate(for:)(a1);
    specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(2);
    v78 = MultiwayViewController.captionsViewController.getter();
    if (v78)
    {
      v79 = v78;
      ConversationController.conversationDisplayName.getter();
      CaptionsViewController.callName.setter();

      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v108);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v90, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v90, &demangling cache variable for type metadata for Participant?);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v108);
    }
  }
}

uint64_t closure #2 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_36_6(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  result = OUTLINED_FUNCTION_28_44();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_185_0();
  }
  __break(1u);
  return result;
}

_QWORD *MultiwayViewController.conversationControllerDidRemoveRemoteParticipant(_:)()
{
  void *v0;
  void *v1;
  __int16 v3;

  v0 = MultiwayViewController.captionsViewController.getter();
  if (v0)
  {
    v1 = v0;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();

  }
  v3 = 513;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v3);
}

void closure #6 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
    {
      swift_beginAccess();
      v10 = MEMORY[0x1C3B752C0](a3 + 16);
      if (v10)
      {
        v11 = (void *)v10;
        HIWORD(v12) = 513;
        MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)(a1, (unsigned __int8 *)&v12 + 6);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #7 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  char v24;
  char v25;
  char v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];
  uint64_t v38[4];
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43[33];
  _BYTE v44[216];
  uint64_t v45[27];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ParticipantViewModel(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchPredicate();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    return;
  }
  swift_beginAccess();
  v20 = MEMORY[0x1C3B752C0](a5 + 16);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = v20 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v22, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v44, (uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v45) == 1)
    {

      return;
    }
    v23 = *(id *)(v22 + 56);
    ConversationController.supportsCameraBlur.getter();
    if ((v24 & 1) != 0)
      MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    LocalParticipantView.supportsCameraBlur.setter();
    MultiwayViewController.updateCameraFlipButtonAvailability()();
    ConversationController.supportsReactionGestures.getter();
    LocalParticipantView.supportsReactionGestures.setter();
    ConversationController.supportsStudioLight.getter();
    LocalParticipantView.supportsStudioLight.setter();
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_4();
    v25 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
    LOWORD(v35) = 257;
    LOBYTE(v34) = 1;
    ParticipantViewModel.init(participant:videoProviderType:isInGrid:isMostActive:isPipped:isPreviewingReaction:hasOtherInvitedParticipants:isLocalMemberAuthorizedToChangeGroupMembership:prefersSnapshotFadeAnimation:snapshotImage:allowsVideoCroppedByAspectRatio:shouldRegisterVideoLayers:)((uint64_t)v11, 2, 0, 0, 0, 0, 0, v25 & 1, v34, 0, v35, v36, v37[0], v37[1], v37[2], v37[3], v38[0], v38[1], v38[2],
      v38[3],
      v39,
      v40,
      v41,
      v42);
    MultiwayViewController.isPipped.getter();
    if ((v26 & 1) != 0)
    {
      outlined init with take of MultiwayViewController.ViewContent?(v22, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v38, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v43) != 1)
      {
        v27 = *(void **)(v22 + 96);
        v28 = (uint64_t)v27 + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
        swift_beginAccess();
        outlined init with copy of FeatureEligibility?(v28, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
        {
          v29 = v27;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);

        }
        else
        {
          v30 = *(_QWORD *)&v8[*(int *)(v9 + 28)];
          v31 = v27;
          outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
          if (v30)
          {

          }
          else
          {
            MostActiveParticipantViewController.localParticipantView.getter();
            v33 = v32;
            ParticipantView.registerVideoLayers(with:)((uint64_t)v14);

          }
        }
        goto LABEL_13;
      }
    }
    else
    {
      ParticipantView.registerVideoLayers(with:)((uint64_t)v14);
    }

LABEL_13:
    outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for ParticipantViewModel);
  }
}

void MultiwayViewController.updateCameraFlipButtonAvailability()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _BYTE v8[216];
  uint64_t v9[27];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 624))(ObjectType, v2) & 1) != 0)
  {
    v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) != 1)
    {
      v5 = *(void **)(v4 + 56);
      v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
         + OBJC_IVAR____TtC15ConversationKit22ConversationController_isUsingIPadExternalCamera;
      swift_beginAccess();
      LOBYTE(v6) = *(_BYTE *)v6;
      v7 = v5;
      LocalParticipantView.cameraFlipButtonIsAvailable.setter((v6 & 1) == 0);

    }
  }
}

void closure #8 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  char v21;
  _BYTE v22[14];
  __int16 v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    swift_beginAccess();
    v15 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v15)
    {
      v16 = (_BYTE *)v15;
      if ((a1 & 1) == 0)
      {
        v17 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
        v18 = *(id *)(v15 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
        v19 = ConversationController.isOneToOneModeEnabled.getter();

        if ((v19 & 1) != 0)
        {
          v20 = *(_QWORD *)&v16[v17] + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
          swift_beginAccess();
          if (*(_QWORD *)(*(_QWORD *)v20 + 16) == 1)
          {
            ConversationController.remoteOneToOneParticipant.getter();
            if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) != 1)
            {
              outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
              Participant.isReceivingVideoFrames.getter();
              v16[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = v21 & 1;
              v23 = 513;
              MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)((uint64_t)v9, (unsigned __int8 *)&v23);

              outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
              return;
            }
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
          }
        }
        MultiwayViewController.updateLocalParticipantState()();
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #9 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t ObjectType;
  int v16;
  _BYTE v17[24];

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)&v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v10)
    {
      v11 = (char *)v10;
      MultiwayViewController.updateLocalParticipantState()();
      v12 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
      swift_beginAccess();
      v13 = (void *)MEMORY[0x1C3B752C0](v12);
      if (v13)
      {
        v14 = v13;
        if ((objc_msgSend(v13, sel_respondsToSelector_, sel_updateCallParticipantLabelsViewForViewController_) & 1) != 0)objc_msgSend(v14, sel_updateCallParticipantLabelsViewForViewController_, v11);
        swift_unknownObjectRelease();
      }
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();
      ObjectType = swift_getObjectType();
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(ObjectType, a2);
      MultiwayViewController.testing_callStatusDidChange(_:)(v16);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #10 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    swift_beginAccess();
    v15 = MEMORY[0x1C3B752C0](a5 + 16);
    if (v15)
    {
      v16 = (void *)v15;
      MultiwayViewController.conversationControllerDidUpdateLocalParticipant(_:broadcastingState:)(a1, a2, a3, a4);

    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.conversationControllerDidUpdateLocalParticipant(_:broadcastingState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[240];
  _BYTE v28[216];
  _BYTE v29[216];
  uint64_t v30[28];

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v16 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v16, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v29, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v30);
    if ((_DWORD)result != 1)
    {
      memcpy(v28, v30, sizeof(v28));
      if ((a2 & 1) == 0)
        *(_BYTE *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller) = 0;
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v29, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v27);
      MultiwayViewController.updateMutedTalkerUI(mutedTalker:)(a2 & 1);
      MultiwayViewController.ViewContent.participantsViewControllers.getter();
      v18 = *(_QWORD *)(v17 + 16);
      if (v18)
      {
        v23[1] = v17;
        v23[2] = v5;
        v19 = v17 + 32;
        do
        {
          outlined init with copy of RadarReporting(v19, (uint64_t)v24);
          v21 = v25;
          v20 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 48))(a1, a2, a3, a4, v21, v20);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
          v19 += 40;
          --v18;
        }
        while (v18);
      }
      swift_bridgeObjectRelease();
      Participant.isActiveWithVideo.getter();
      specialized EffectsHandler.updateEffectsViews(localVideoEnabled:)(v22 & 1);
      MultiwayViewController.updateFloatingLocalParticpantView()();
      MultiwayViewController.updateLocalParticipantAspectRatio()();
      MultiwayViewController.updateHasParticipantVideo()();
      MultiwayViewController.updateLocalParticipantState()();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v29);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #11 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;
  uint64_t *v15;
  _BYTE v17[216];
  uint64_t v18[27];

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)(v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v9)
    {
      v10 = (char *)v9;
      v11 = v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v18) != 1)
      {
        v12 = *(void **)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
        v13 = v12;
        v14 = ConversationController.isOneToOneModeEnabled.getter();

        if ((v14 & 1) != 0)
        {
          v15 = (uint64_t *)&v10[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
          swift_beginAccess();
          ParticipantVideoView.updateVideoLayers(with:localDeviceOrientation:isLocal:animated:)(a1, *v15, 1, 1);
        }
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #12 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  _BYTE v18[240];
  _BYTE v19[216];
  uint64_t v20[27];

  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    swift_beginAccess();
    v12 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v14, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) != 1)
      {
        ObjectType = swift_getObjectType();
        v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 312);
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v18);
        if ((v16(ObjectType, a4) & 1) != 0)
          LocalParticipantView.configureWithRecordingLocalVideo(_:)(a1 & 1);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.conversationControllerDidUpdateLocalParticipantScreenSharing(_:)(void *a1)
{
  char v1;

  v1 = (char)a1;
  MultiwayViewController.updateScreenSharingSnapshotView(_:)(a1);
  specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)((v1 & 1) == 0);
  MultiwayViewController.updateVideoState()();
}

void closure #14 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int8 v26[24];
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v9 = a3 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](v9);
  if (v10)
  {
    v11 = (void *)v10;
    *(_WORD *)v26 = 514;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v26);

  }
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](v9);
  if (!v12)
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    goto LABEL_11;
  }
  v13 = (void *)v12;
  v14 = *(id *)(v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.lookupActiveConversation()();
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_11:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v23, &demangling cache variable for type metadata for Conversation?);
    return;
  }
  outlined init with take of Notice(&v23, (uint64_t)v26);
  v15 = v27;
  v16 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v16);
  v18 = specialized Set.count.getter(v17);
  swift_bridgeObjectRelease();
  if (v18 != 1)
  {
    swift_beginAccess();
    v19 = MEMORY[0x1C3B752C0](v9);
    if (v19)
    {
      v20 = (void *)v19;
      v21 = *(id *)(v19 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0xD0))();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

void closure #15 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v16;
  char v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void (*v21)(void);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DispatchPredicate();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)&v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v12 = a2 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x1C3B752C0](v12);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = *(id *)(v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    ConversationController.shouldPlayToneForAVModeChange(for:)(a1);
    LOBYTE(v14) = v16;

    if ((v14 & 1) == 0)
    {
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_11:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1BD6441D0;
        _s15ConversationKit11ParticipantVWOcTm_4();
        v25 = type metadata accessor for Participant(0);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v25);
        specialized >> prefix<A>(_:)((uint64_t)v6);
        v27 = v26;
        v29 = v28;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v24 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v24 + 32) = v27;
        *(_QWORD *)(v24 + 40) = v29;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_14:
      swift_once();
      goto LABEL_11;
    }
  }
  Participant.isActiveWithAV.getter();
  if ((v17 & 1) != 0)
  {
    swift_beginAccess();
    v18 = MEMORY[0x1C3B752C0](v12);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = *(id *)(v18 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      v21 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0xD0);
LABEL_9:
      v21();

    }
  }
  else
  {
    swift_beginAccess();
    v22 = MEMORY[0x1C3B752C0](v12);
    if (v22)
    {
      v23 = (void *)v22;
      v20 = *(id *)(v22 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      v21 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0xD8);
      goto LABEL_9;
    }
  }
}

void closure #16 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int8 v26[24];
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v9 = a3 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](v9);
  if (v10)
  {
    v11 = (void *)v10;
    *(_WORD *)v26 = 514;
    MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)(v26);

  }
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](v9);
  if (!v12)
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    goto LABEL_11;
  }
  v13 = (void *)v12;
  v14 = *(id *)(v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.lookupActiveConversation()();
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_11:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v23, &demangling cache variable for type metadata for Conversation?);
    return;
  }
  outlined init with take of Notice(&v23, (uint64_t)v26);
  v15 = v27;
  v16 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v16);
  v18 = specialized Set.count.getter(v17);
  swift_bridgeObjectRelease();
  if (v18 != 1)
  {
    swift_beginAccess();
    v19 = MEMORY[0x1C3B752C0](v9);
    if (v19)
    {
      v20 = (void *)v19;
      v21 = *(id *)(v19 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);

      (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v21) + 0xD8))();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

_QWORD *MultiwayViewController.conversationControllerDidUpdateRemoteParticipantKickableStatus(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  _QWORD *result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  double v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  _BOOL8 v34;
  double v35;
  double v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[240];
  _BYTE v58[216];
  _BYTE v59[216];
  uint64_t v60[28];

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v52);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)v42 - v12;
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v19, (uint64_t)v59, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v59, (uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v60);
    if ((_DWORD)result != 1)
    {
      memcpy(v58, v60, sizeof(v58));
      MultiwayViewController.ViewContent.participantsViewControllers.getter();
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v46 = v4;
        v42[1] = v20;
        v22 = v20 + 32;
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v59, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v57);
        v44 = a1 + 3;
        v45 = v6;
        v48 = a1;
        v43 = v8;
        while (1)
        {
          outlined init with copy of RadarReporting(v22, (uint64_t)v54);
          v24 = v55;
          v23 = v56;
          v53 = __swift_project_boxed_opaque_existential_1(v54, v55);
          _s15ConversationKit11ParticipantVWOcTm_4();
          if (swift_getEnumCaseMultiPayload() != 4)
            break;
          v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v26 = (uint64_t)&v8[*(int *)(v25 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v8[*(int *)(v25 + 64)], *(_QWORD *)&v8[*(int *)(v25 + 64) + 8]);
          v28 = v49;
          v27 = v50;
          v29 = v51;
          (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v8, v51);
          outlined destroy of Participant.MediaInfo(v26);
          Date.timeIntervalSinceNow.getter();
          v31 = v30;
          v32 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
          v33 = v47;
          v32(v47, v28, v29);
          if (v31 <= 0.0)
          {
            Date.timeIntervalSinceNow.getter();
            v36 = v35;
            if (one-time initialization token for shared != -1)
              swift_once();
            v34 = -v36 <= (double)(*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 696))();
          }
          else
          {
            v34 = 0;
          }
          v37 = v51;
          v38 = *(void (**)(char *, uint64_t))(v50 + 8);
          v38(v33, v51);
          v38(v49, v37);
          v40 = (uint64_t)v45;
          v39 = v46;
          LODWORD(v38) = *(unsigned __int8 *)(v44 + *(int *)(v46 + 24));
          _s15ConversationKit11ParticipantVWOcTm_4();
          if ((_DWORD)v38 != 1)
          {
            outlined destroy of AccountUpdateNotice(v40, type metadata accessor for Participant);
            a1 = v48;
            v8 = v43;
            goto LABEL_16;
          }
          v41 = *(_QWORD *)(v40 + *(int *)(v39 + 28));
          outlined destroy of AccountUpdateNotice(v40, type metadata accessor for Participant);
          a1 = v48;
          v8 = v43;
          if (!v41)
            goto LABEL_16;
LABEL_17:
          (*(void (**)(uint64_t, _BOOL8, uint64_t, uint64_t))(v23 + 64))(a1, v34, v24, v23);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
          v22 += 40;
          if (!--v21)
            goto LABEL_20;
        }
        outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant.State);
LABEL_16:
        v34 = 0;
        goto LABEL_17;
      }
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v59, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v57);
LABEL_20:
      swift_bridgeObjectRelease();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v59);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #18 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    swift_beginAccess();
    v10 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v10)
    {
      v11 = (void *)v10;
      MultiwayViewController.conversationControllerConversationStateDidChange(_:)(a2);

    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.conversationControllerConversationStateDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int Enum;
  _QWORD *v10;
  char *v11;
  uint64_t (*v12)(void);
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(_QWORD);
  _QWORD *v17;
  _BYTE *v18;
  _QWORD *v19;
  void (*v20)(void);
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  _BYTE v36[216];
  uint64_t v37[30];
  _BYTE v38[216];
  uint64_t v39[28];

  v2 = v1;
  v4 = type metadata accessor for Participant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (a1 == 2)
  {
    v22 = 1;
LABEL_11:
    specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(v22);
    goto LABEL_17;
  }
  if (a1 != 3)
  {
    if (a1 != 4)
      goto LABEL_17;
    MultiwayViewController.removeAllEffectsObjects()();
    v8 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v38, (uint64_t)v39, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    Enum = getEnumTag for TapInteraction.EventType(v39);
    v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if (Enum != 1)
    {
      v11 = *(char **)(v8 + 56);
      v12 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v11[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                + 0x228);
      v13 = v11;
      v14 = v12();
      LocalParticipantView.configureWithEffectsAvailable(_:effectsSelected:)(v14 & 0x10000, 0);

    }
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v36, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v37) != 1)
    {
      v15 = *(_QWORD **)(v8 + 72);
      if (v15)
      {
        v16 = *(void (**)(_QWORD))((*v10 & *v15) + 0xB0);
        v17 = v15;
        v16(0);

      }
    }
    v18 = (_BYTE *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
    swift_beginAccess();
    *v18 = 0;
    MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
    v19 = *(_QWORD **)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
    v20 = *(void (**)(void))((*v10 & *v19) + 0xE0);
    v21 = v19;
    v20();

    v22 = 0;
    goto LABEL_11;
  }
  specialized MomentsBackedViewControllerProtocol.setupMomentsViewsIfNecessary()();
  specialized MomentsBackedViewControllerProtocol.setupFlashViewsIfNecessary()();
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v24 = (uint64_t *)(v23 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
  swift_beginAccess();
  v25 = *v24;
  v26 = *(_QWORD *)(*v24 + 16);
  if (v26)
  {
    v35 = v23;
    v27 = v25 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v28 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_4();
      MultiwayViewController.scheduleUpdate(for:)((uint64_t)v7);
      outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v23 = v35;
  }
  MultiwayViewController.call.getter();
  v30 = v29;
  v31 = v23 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v31, (uint64_t)v39);
  v32 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation);
  swift_beginAccess();
  specialized BroadcastingState.init(call:callCenter:deviceOrientation:shouldMaintainCameraPosition:)(v30, v39, *v32, 1);
  ConversationController.broadcastingState.setter();
  MultiwayViewController.scheduleLinkEducationFirstTimeAlert()();
  MultiwayViewController.resetDidExpandIncomingCallBanner()();
LABEL_17:
  MultiwayViewController.updateLocalParticipantState()();
  MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  MultiwayViewController.updateShouldShowReactionPickerTipView()();
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
  v33 = MultiwayViewController.captionsViewController.getter();
  if (v33)
  {
    v34 = v33;
    ConversationController.conversationDisplayName.getter();
    CaptionsViewController.callName.setter();

  }
  if (a1 == 1)
  {
    LOBYTE(v39[0]) = 1;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)v39, 0xFCu, 1);
  }
}

void MultiwayViewController.participantsMediaPrioritiesDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  float v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[2];
  uint64_t v63;
  _BYTE v64[264];
  _OWORD v65[5];
  uint64_t v66;
  _BYTE v67[216];
  uint64_t v68[28];

  v2 = v1;
  v59 = a1;
  v54 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v54);
  v56 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - v8;
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v15 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v15, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v67, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v68) != 1)
  {
    v16 = v68[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_sashedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v16, (uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v54) != 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      return;
    }
    v55 = v6;
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v67, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v64);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    HIDWORD(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 288))(ObjectType, v17);
    LODWORD(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 296))(ObjectType, v17);
    v19 = *(_QWORD *)(v59 + 16);
    if (v19)
    {
      v53 = v2;
      *(_QWORD *)&v65[0] = MEMORY[0x1E0DEE9D8];
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v19, 0);
      v20 = 0;
      v21 = *(_QWORD *)&v65[0];
      v22 = *(_QWORD *)(*(_QWORD *)&v65[0] + 16);
      v57 = 48 * v22;
      do
      {
        v23 = v22;
        v24 = *(void **)(v59 + v20 + 32);
        v61 = *(_QWORD *)(v59 + v20 + 40);
        HIDWORD(v60) = *(unsigned __int8 *)(v59 + v20 + 48);
        v26 = *(_QWORD *)(v59 + v20 + 56);
        v25 = *(_QWORD *)(v59 + v20 + 64);
        if ((v58 & 0x100000000) != 0)
          v27 = *(float *)(v59 + v20 + 72);
        else
          v27 = 0.0;
        if ((v58 & 1) != 0)
          v28 = *(float *)(v59 + v20 + 76);
        else
          v28 = 0.0;
        *(_QWORD *)&v65[0] = v21;
        v29 = *(_QWORD *)(v21 + 24);
        ++v22;
        v30 = v21;
        v31 = v24;
        swift_bridgeObjectRetain();
        v21 = v30;
        if (v23 >= v29 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v22, 1);
          v21 = *(_QWORD *)&v65[0];
        }
        *(_QWORD *)(v21 + 16) = v22;
        v32 = v21 + v57 + v20;
        v33 = v61;
        *(_QWORD *)(v32 + 32) = v31;
        *(_QWORD *)(v32 + 40) = v33;
        *(_BYTE *)(v32 + 48) = BYTE4(v60);
        *(_QWORD *)(v32 + 56) = v26;
        *(_QWORD *)(v32 + 64) = v25;
        v20 += 48;
        *(float *)(v32 + 72) = v27;
        *(float *)(v32 + 76) = v28;
        --v19;
      }
      while (v19);
    }
    else
    {
      v21 = MEMORY[0x1E0DEE9D8];
      v22 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (!v22)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v67);
        return;
      }
    }
    v34 = 32;
    v36 = v54;
    v35 = (uint64_t)v55;
    do
    {
      v37 = v21;
      v38 = *(_OWORD *)(v21 + v34);
      v39 = *(_OWORD *)(v21 + v34 + 32);
      v65[1] = *(_OWORD *)(v21 + v34 + 16);
      v65[2] = v39;
      v65[0] = v38;
      v40 = *(_OWORD *)(v21 + v34);
      v41 = *(_OWORD *)(v21 + v34 + 16);
      v66 = *(_QWORD *)(v21 + v34 + 32);
      v65[3] = v40;
      v65[4] = v41;
      v62[0] = v40;
      v62[1] = v41;
      v63 = v66;
      outlined retain of ParticipantMediaPriorities((void **)v65);
      ConversationController.participant(with:)((uint64_t)v62, v42, v43, v44, v45, v46, v47, v48, v52, v53, v54, (uint64_t)v55, v56, v57, v58, v59, v60, v61, *(uint64_t *)&v62[0],
        *((uint64_t *)&v62[0] + 1));
      if (__swift_getEnumTagSinglePayload(v35, 1, v36) == 1)
      {
        outlined release of ParticipantMediaPriorities((id *)v65);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v35, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v49 = v35;
        v50 = v56;
        outlined init with take of Participant(v49, v56);
        specialized MostActiveParticipantsController.update(_:mediaPriorities:)(v50 + *(int *)(v36 + 20), (uint64_t)v65);
        v51 = v50;
        v35 = (uint64_t)v55;
        outlined destroy of AccountUpdateNotice(v51, type metadata accessor for Participant);
        outlined release of ParticipantMediaPriorities((id *)v65);
      }
      v34 += 48;
      --v22;
      v21 = v37;
    }
    while (v22);
    goto LABEL_23;
  }
}

void closure #20 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v8 = type metadata accessor for DispatchPredicate();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    swift_beginAccess();
    v13 = MEMORY[0x1C3B752C0](a4 + 16);
    if (v13)
    {
      v14 = (void *)v13;
      MultiwayViewController.participant(_:didReact:)(a1, a2, a3);

    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.participant(_:didReact:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v45 - v15;
  if (*(_QWORD *)(a1 + *(int *)(v17 + 28)))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)&static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_4();
    swift_bridgeObjectRetain_n();
    v19 = Logger.logObject.getter();
    v20 = static os_log_type_t.default.getter();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc();
      LODWORD(v47) = v21;
      v23 = v22;
      v46 = swift_slowAlloc();
      v51 = v46;
      *(_DWORD *)v23 = 136315394;
      v45[1] = v23 + 4;
      _s15ConversationKit11ParticipantVWOcTm_4();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
      specialized >> prefix<A>(_:)((uint64_t)v10);
      v48 = v4;
      v25 = v24;
      v26 = a2;
      v27 = a3;
      v29 = v28;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
      *(_WORD *)(v23 + 12) = 2080;
      v49 = v26;
      v50 = v27;
      swift_bridgeObjectRetain();
      v30 = String.init<A>(reflecting:)();
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v19, (os_log_type_t)v47, "Remote Participant %s didReact with %s", (uint8_t *)v23, 0x16u);
      v32 = v46;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v32, -1, -1);
      MEMORY[0x1C3B751B8](v23, -1, -1);
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
    }

    specialized MostActiveParticipantsController.markParticipantAsReacting(_:)(a1 + *(int *)(v11 + 20));
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)&static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_4();
    swift_bridgeObjectRetain_n();
    v34 = Logger.logObject.getter();
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v48 = v4;
      v51 = v47;
      *(_DWORD *)v36 = 136315394;
      _s15ConversationKit11ParticipantVWOcTm_4();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
      specialized >> prefix<A>(_:)((uint64_t)v10);
      v38 = v37;
      v39 = a2;
      v41 = v40;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v41, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
      *(_WORD *)(v36 + 12) = 2080;
      v49 = v39;
      v50 = a3;
      swift_bridgeObjectRetain();
      v42 = String.init<A>(reflecting:)();
      v49 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BD004000, v34, v35, "Local Participant %s didReact with %s", (uint8_t *)v36, 0x16u);
      v44 = v47;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v44, -1, -1);
      MEMORY[0x1C3B751B8](v36, -1, -1);
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
      swift_bridgeObjectRelease_n();
    }

    MultiwayViewController.isLocalReactionActive.setter(1);
  }
}

uint64_t closure #3 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_36_6(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  result = OUTLINED_FUNCTION_28_44();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_185_0();
  }
  __break(1u);
  return result;
}

void MultiwayViewController.participantDidStopReacting(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + *(int *)(v10 + 28)))
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)&static Logger.conversationKit);
    _s15ConversationKit11ParticipantVWOcTm_4();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v20[1] = v2;
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 136315138;
      _s15ConversationKit11ParticipantVWOcTm_4();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
      specialized >> prefix<A>(_:)((uint64_t)v6);
      v17 = v16;
      v19 = v18;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      v20[2] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
      _os_log_impl(&dword_1BD004000, v12, v13, "Local Participant %s didStopReacting", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v15, -1, -1);
      MEMORY[0x1C3B751B8](v14, -1, -1);
    }
    else
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
    }

    MultiwayViewController.isLocalReactionActive.setter(0);
  }
}

uint64_t closure #13 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_36_6(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  result = OUTLINED_FUNCTION_28_44();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_185_0();
  }
  __break(1u);
  return result;
}

void closure #23 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  void *v12;
  id *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  _BYTE v21[216];
  uint64_t v22[27];

  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)(v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = (id *)(v11 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      v14 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v13) + 0x1C0);
      v15 = *v13;
      v16 = v14(a1, a2);

      MultiwayViewController.updateCameraFlipButtonAvailability()();
      v17 = (uint64_t)v12 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v17, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v21, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v22) != 1)
      {
        v18 = *(id *)(v17 + 56);
        ConversationController.supportsCameraBlur.getter();
        if ((v19 & 1) != 0)
          MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
        LocalParticipantView.supportsCameraBlur.setter();

      }
      if ((v16 & 1) != 0)
        MultiwayViewController.updateZoomControls(for:)(0xFCu);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #24 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _BYTE v13[216];
  uint64_t v14[27];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    MultiwayViewController.inCallControlsViewController.getter();
    v7 = v6;

    if (v7)
    {
      v8 = &v7[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsAvailable];
      swift_beginAccess();
      *v8 = a1 & 1;
      InCallControlsViewController.cinematicFramingIsAvailable.didset();

    }
  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v3);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v14) == 1)
    {

    }
    else
    {
      v12 = *(id *)(v11 + 56);

      LocalParticipantView.cinematicFramingIsAvailable.setter(a1 & 1);
    }
  }
}

void closure #25 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  _BYTE v13[216];
  uint64_t v14[27];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    MultiwayViewController.inCallControlsViewController.getter();
    v7 = v6;

    if (v7)
    {
      v8 = &v7[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled];
      swift_beginAccess();
      *v8 = a1 & 1;
      InCallControlsViewController.cinematicFramingIsEnabled.didset();

    }
  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v3);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v14) == 1)
    {

    }
    else
    {
      v12 = (char *)*(id *)(v11 + 56);

      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v12[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2A8))(a1 & 1);

    }
  }
}

void closure #26 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _BYTE v8[216];
  uint64_t v9[27];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v6, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) == 1)
    {

    }
    else
    {
      v7 = (char *)*(id *)(v6 + 56);

      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2C0))(a1 & 1);

    }
  }
}

void closure #27 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _BYTE v8[216];
  uint64_t v9[27];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v6, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v8, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v9) == 1)
    {

    }
    else
    {
      v7 = (char *)*(id *)(v6 + 56);

      (*(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)&v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView])
                                     + 0x2D8))(a1 & 1);

    }
  }
}

uint64_t closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a2 + 16);
  if (result)
  {
    v13 = (void *)result;
    if ((a1 & 1) != 0)
      v14 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    else
      v14 = 0;
    v25 = v8;
    v26 = v5;
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BD6441D0;
    v16 = v14 & 1;
    LOBYTE(aBlock[0]) = v14 & 1;
    v17 = String.init<A>(reflecting:)();
    v19 = v18;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v15 + 32) = v17;
    *(_QWORD *)(v15 + 40) = v19;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v20 = (void *)static OS_dispatch_queue.main.getter();
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    *(_BYTE *)(v22 + 24) = v16;
    aBlock[4] = partial apply for closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_467;
    v23 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B7361C](0, v11, v7, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  return result;
}

void closure #1 in closure #28 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  _BYTE v10[216];
  uint64_t v11[27];

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v6, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v11) == 1)
    {

    }
    else
    {
      v7 = *(char **)(v6 + 56);
      v8 = &v7[OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_blurEnabled];
      swift_beginAccess();
      *v8 = a2 & 1;
      v9 = v7;
      LocalParticipantView.blurEnabled.didset();

    }
  }
}

void closure #29 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    MultiwayViewController.updateCameraFlipButtonAvailability()();

  }
}

void closure #30 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2, Swift::Float a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[216];
  uint64_t v35[30];
  _BYTE v36[216];

  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)&v31[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v15 = a2 + 16;
    swift_beginAccess();
    v16 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = v16 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v18, (uint64_t)v34, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);

      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v34, (uint64_t)v35, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v35) != 1)
      {
        memcpy(v36, v35, sizeof(v36));
        swift_beginAccess();
        v19 = MEMORY[0x1C3B752C0](v15);
        if (v19)
        {
          v20 = (void *)v19;
          v21 = (char *)objc_retain(*(id *)(v19
                                          + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

          v22 = type metadata accessor for Participant(0);
          v23 = &v21[OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant];
          swift_beginAccess();
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v23[*(int *)(v22 + 20)], v6);
          LOBYTE(v22) = static UUID.== infix(_:_:)();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          if ((v22 & 1) != 0)
          {
            v24 = *(id *)(v35[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
            ParticipantMonogramView.updateAudioVisualization(with:)(a3);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);

          }
          else
          {
            MultiwayViewController.ViewContent.participantsViewControllers.getter();
            v26 = *(_QWORD *)(v25 + 16);
            if (v26)
            {
              v27 = v25 + 32;
              do
              {
                outlined init with copy of RadarReporting(v27, (uint64_t)v31);
                v28 = v32;
                v29 = v33;
                __swift_project_boxed_opaque_existential_1(v31, v32);
                (*(void (**)(uint64_t, uint64_t, uint64_t, Swift::Float))(v29 + 80))(a1, v28, v29, a3);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
                v27 += 40;
                --v26;
              }
              while (v26);
            }
            swift_bridgeObjectRelease();
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);

          }
        }
        else
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v34);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #31 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      swift_beginAccess();
      v9 = MEMORY[0x1C3B752C0](a2 + 16);
      if (v9)
      {
        v10 = (void *)v9;
        MultiwayViewController.showMutedTalkerBanner()();

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.showMutedTalkerBanner()()
{
  void *v0;
  char v1;
  _BOOL4 v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  __objc2_class_ro **p_info;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __objc2_class_ro *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(void);
  _QWORD *v26;
  _QWORD *v27;
  void (*v28)(void);
  _QWORD *v29;
  uint64_t v30;
  _BYTE v31[216];
  uint64_t v32[28];

  MultiwayViewController.isPipped.getter();
  if ((v1 & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = (uint64_t)v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v32) == 1)
    {
      v2 = 1;
    }
    else
    {
      v4 = (_BYTE *)(*(_QWORD *)(v3 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      v2 = *v4 != 0;
    }
  }
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
  v6 = v0;
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtC15ConversationKit22InCallControlsBaseCell + 32);
  if (os_log_type_enabled(v7, v8))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v30 = v11;
    *(_DWORD *)v10 = 136315650;
    MultiwayViewController.isPipped.getter();
    LOBYTE(v32[0]) = v12 & 1;
    v13 = String.init<A>(reflecting:)();
    v32[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 12) = 2080;
    v15 = (uint64_t)&v6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v15, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v32) == 1)
    {
      v16 = 0xE300000000000000;
      v17 = 7104878;
    }
    else
    {
      swift_beginAccess();
      v17 = String.init<A>(reflecting:)();
      v16 = v18;
    }
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    v19 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v20, &v30);
    p_info = &OBJC_METACLASS____TtC15ConversationKit22InCallControlsBaseCell.info;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BD004000, v7, v8, "MutedTalker: isPipped:%s, inCallConversationBannerState:%s, didNotifyMutedCaller:%s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v11, -1, -1);
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }
  else
  {

  }
  v21 = p_info[437];
  if (((*((unsigned __int8 *)&v21->flags + (_QWORD)v6) | v2) & 1) == 0)
  {
    v22 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    v23 = *(_QWORD **)&v6[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController];
    v24 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v25 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v23) + 0x170);
    v26 = v23;
    v25();

    *((_BYTE *)&v21->flags + (_QWORD)v6) = 1;
    v27 = *(_QWORD **)&v6[v22];
    v28 = *(void (**)(void))((*v24 & *v27) + 0x168);
    v29 = v27;
    v28();

  }
}

void MultiwayViewController.updateAudioRouteButton(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  id v8;
  _BYTE v10[216];
  uint64_t v11[27];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)(v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v7, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v11) != 1)
    {
      v8 = *(id *)(v7 + 16);
      InCallControlsViewController.updateAudioRouteButton(for:)();

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #33 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  double v18;
  id v23;
  _BYTE v24[216];
  uint64_t v25[30];
  _BYTE v26[216];
  uint64_t v27[27];

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)&v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  swift_beginAccess();
  v7 = MEMORY[0x1C3B752C0](a1 + 16);
  if (!v7)
    return;
  v8 = (char *)v7;
  if (static Platform.current.getter() == 3)
  {
    v9 = (uint64_t)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v27) != 1)
    {
      v10 = objc_msgSend(*(id *)(v9 + 8), sel_view);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, sel_bounds);
        v13 = v12;
        v15 = v14;

        v16 = (double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
        v18 = *(double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
        v17 = *(double *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize + 8];
        if (v18 == v13 && v17 == v15)
          goto LABEL_29;
        if (v18 < v17 || v13 >= v15)
        {
          if (v17 >= v18)
          {
            if ((v17 != 0.0 || v18 != 0.0) && v15 >= v13)
              goto LABEL_28;
          }
          else if (v18 != 0.0 || v17 != 0.0)
          {
            goto LABEL_28;
          }
        }
        outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v25) != 1)
        {
          v23 = *(id *)(v9 + 48);
          MultiwayViewConstraintsController.updateLocalPreviewConstraintWhenExpanded()();

        }
LABEL_28:
        *v16 = v13;
        v16[1] = v15;
        goto LABEL_29;
      }
LABEL_32:
      __break(1u);
      return;
    }
  }
LABEL_29:
  MultiwayViewController.updatePresentationSize()();
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);

}

id MultiwayViewController.updatePresentationSize()()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  char *v11;
  uint64_t *v12;
  double v13;
  double v14;
  double *v15;
  void *v16;
  void *v17;

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_bounds);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations];
    swift_beginAccess();
    if (!*(_QWORD *)v11)
    {
      v12 = (uint64_t *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deviceOrientation];
      swift_beginAccess();
      MultiwayViewController.rotate(portraitRect:for:)(*v12, v4, v6, v8, v10);
      v8 = v13;
      v10 = v14;
    }
    v15 = (double *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
    *v15 = v8;
    v15[1] = v10;
    MultiwayViewController.call.getter();
    v17 = v16;
    objc_msgSend(v16, sel_setRemoteVideoPresentationSize_, v8, v10);

    return (id)MultiwayViewController.updateMediaPipInfo()();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #34 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = (void *)v8;
      MultiwayViewController.updateVideoState()();

    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.updateVideoState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[216];
  uint64_t v49[2];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v48);
  OUTLINED_FUNCTION_6_110((uint64_t)v48, (uint64_t)v49);
  v2 = OUTLINED_FUNCTION_12_109(v49);
  if (!v9)
  {
    OUTLINED_FUNCTION_200_3(v2, v3, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?, v4, v5, v6, v7, v8, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48[0]);
    OUTLINED_FUNCTION_412_1(v10, v11, v12, v13);
    ConversationController.isCarPlayConnected.getter();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_26();
  }
  OUTLINED_FUNCTION_29_60();
}

void closure #35 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v11)
    {
      v12 = (void *)v11;
      MultiwayViewController.conversationControllerOneToOneModeDidChange(_:_:)(a1 & 1, a2 & 1);

    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.conversationControllerOneToOneModeDidChange(_:_:)(char a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  _QWORD *result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  char *v19;
  _BYTE v21[240];
  _BYTE v22[216];
  uint64_t v23[27];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)(v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v11 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v22, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v23);
  if ((_DWORD)result == 1)
    return result;
  a2 &= 1u;
  if ((a1 & 1) == 0 || a2)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v22, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v21);
    goto LABEL_9;
  }
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v22, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v21);
  if ((MultiwayViewController.isOnScreen.getter() & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_7:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      MultiwayViewController.pauseUserInterface()();
      goto LABEL_9;
    }
LABEL_20:
    swift_once();
    goto LABEL_7;
  }
LABEL_9:
  if (a2)
    v13 = 1;
  else
    v13 = 2;
  MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(a2, v13);
  if (static Platform.current.getter() == 3)
  {
    v14 = v23[7];
    ConversationController.isOneToOneModeEnabled.getter();
    LocalParticipantView.supportsRotation.setter();
    if (((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v14
                                                                     + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_controlsView))
                               + 0x228))() & 0x100000000) != 0)
    {
      v15 = v14 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
      swift_beginAccess();
      *(_QWORD *)(v15 + 8) = &protocol witness table for MultiwayViewController;
      swift_unknownObjectWeakAssign();
    }
  }
  v16 = MultiwayViewController.captionsViewController.getter();
  if (v16)
  {
    v17 = v16;
    v18 = ConversationController.isOneToOneModeEnabled.getter();
    CaptionsViewController.isGroupCall.setter((v18 & 1) == 0);

  }
  MultiwayViewController.updateFloatingLocalParticpantView()();
  MultiwayViewController.updateLocalParticipantAspectRatio()();
  MultiwayViewController.updateLocalParticipantState()();
  v19 = (char *)(v23[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  MultiwayViewController.updateViewVisibility(localParticipantState:)(*v19);
  MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
  MultiwayViewController.updateDeskViewButtonVisibility()();
  MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
  MultiwayViewController.resetCaptionsViewDragState()();
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v22);
}

void MultiwayViewController.conversationControllerIsTrackingActiveConversationDidChange(_:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      ConversationController.lookupActiveConversation()();
      v7 = v14;
      if (v14)
      {
        v8 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v7, v8);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        if (v9 == 1)
        {
          MultiwayViewController.conversationControlsManager.getter();
          if (v10)
          {
            v11 = v10;
            ConversationControlsManager.showInCallHUD()();

          }
        }
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Conversation?);
      }
      MultiwayViewController.playOutgoingGFTRingtoneIfNeeded()();
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
    }
    else
    {
      MultiwayViewController.updateLocalParticipantState()();
      MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
      MultiwayViewController.testing_transitionedToInactiveState()();
    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.conversationControllerDidUpdateHasRingingCalls(_:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  _QWORD *result;
  uint64_t v8;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
    {
      if ((a1 & 1) != 0)
        MultiwayViewController.pauseUserInterface()();
      else
        MultiwayViewController.resumeUserInterface()();
    }
    MultiwayViewController.updateLocalParticipantState()();
    return MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.conversationControllerDidUpdateWantsHoldMusic(_:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  result = ConversationController.isOneToOneModeEnabled.getter();
  if ((result & 1) == 0)
    return result;
  if ((a1 & 1) == 0)
  {
    if (one-time initialization token for conversationKit == -1)
    {
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
      v11 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
      swift_beginAccess();
      v12 = *(_BYTE *)(v11 + 16);
      v16 = *(_OWORD *)v11;
      v17 = v12;
      v13 = String.init<A>(reflecting:)();
      v15 = v14;
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v10 + 32) = v13;
      *(_QWORD *)(v10 + 40) = v15;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      ConversationController.startLocalVideo(allowVideoUpgrade:)(1);
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
LABEL_6:
  MultiwayViewController.updateLocalParticipantState()();
  return (uint64_t)MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
}

void closure #39 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    v7 = MEMORY[0x1C3B752C0](a1 + 16);
    if (v7)
    {
      v8 = (void *)v7;
      MultiwayViewController.conversationControllerDidRemoveAllVisibleParticipants()();

    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.conversationControllerDidRemoveAllVisibleParticipants()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[216];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[216];
  _BYTE v19[216];
  uint64_t v20[27];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v8 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v20);
    if ((_DWORD)result != 1)
    {
      memcpy(v18, v20, sizeof(v18));
      MultiwayViewController.ViewContent.participantsViewControllers.getter();
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = v9 + 32;
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v14);
        do
        {
          outlined init with copy of RadarReporting(v11, (uint64_t)v15);
          v12 = v16;
          v13 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          (*(void (**)(uint64_t, uint64_t))(v13 + 104))(v12, v13);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
          v11 += 40;
          --v10;
        }
        while (v10);
      }
      else
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v14);
      }
      swift_bridgeObjectRelease();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v19);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t (*v13)(void);
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  char v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char isEscapingClosureAtFileLocation;
  id v30;
  void *v31;
  id v32;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](a1 + 16);
  if (!result)
    return result;
  v8 = (char *)result;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  v10 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController;
  v11 = *(_QWORD **)(*(_QWORD *)&v8[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
                   + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v13 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v11) + 0xF0);
  v14 = v8;
  v15 = v11;
  LOBYTE(v13) = v13();

  if (VideoMessageController.State.rawValue.getter(v13) == 0x7964616552746F6ELL
    && v16 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_15;
    MultiwayViewController.cancelVideoRecording(completion:)();
    v19 = *(_QWORD **)(*(_QWORD *)&v8[v10]
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v20 = *(uint64_t (**)(void))((*v12 & *v19) + 0xF0);
    v21 = v19;
    LOBYTE(v20) = v20();

    if (VideoMessageController.State.rawValue.getter(v20) == 0x6F4364726F636572
      && v22 == 0xEE006574656C706DLL)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_15;
    }
    v30 = objc_msgSend(v14, sel_navigationController);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, sel_popViewControllerAnimated_, 1);

    }
  }
LABEL_15:
  v25 = (void *)objc_opt_self();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = partial apply for closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:);
  *(_QWORD *)(v26 + 24) = v9;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_460;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_performWithoutAnimation_, v28);
  swift_release();

  _Block_release(v28);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_21:
    __break(1u);
  return result;
}

_QWORD *closure #1 in closure #40 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  __int16 v1;

  v1 = 513;
  return MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v1);
}

void MultiwayViewController.cancelVideoRecording(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  char v5;
  _QWORD *v6;
  void (*v7)(_QWORD);
  _QWORD *v8;
  _BYTE *v9;
  _BYTE v10[216];
  uint64_t v11[27];
  _BYTE v12[216];
  uint64_t v13[27];

  v1 = v0;
  OUTLINED_FUNCTION_6_6();
  v2 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v2, (uint64_t)v12);
  OUTLINED_FUNCTION_5_131((uint64_t)v12, (uint64_t)v13);
  OUTLINED_FUNCTION_12_109(v13);
  if (!v3)
  {
    v4 = *(id *)(v2 + 56);
    LocalParticipantView.endCountdown()();

  }
  MultiwayViewController.isPresentingEffectsBrowser.getter();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_131(v2, (uint64_t)v10);
    OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v11);
    OUTLINED_FUNCTION_12_109(v11);
    if (!v3)
    {
      v6 = *(_QWORD **)(v2 + 72);
      if (v6)
      {
        v7 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v6) + 0xB0);
        v8 = v6;
        v7(0);

      }
    }
    v9 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
    OUTLINED_FUNCTION_2_0();
    *v9 = 0;
    MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
  }
  ConversationController.resetRecordingVideoMessage(completion:)();
  OUTLINED_FUNCTION_91();
}

void closure #41 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    swift_beginAccess();
    v11 = MEMORY[0x1C3B752C0](a3 + 16);
    if (v11)
    {
      v12 = (void *)v11;
      MultiwayViewController.conversationControllerDidUpdateParticipantCameraPosition(_:cameraPosition:)(a1, a2);

    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.conversationControllerDidUpdateParticipantCameraPosition(_:cameraPosition:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  _QWORD *result;
  uint64_t v12;
  void *v13;
  void *v14;
  _BYTE v15[240];
  _BYTE v16[216];
  uint64_t v17[27];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v12, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v17);
    if ((_DWORD)result != 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v15);
      if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
      {
        ParticipantGridViewController.gridView.getter();
        if (v13)
        {
          v14 = v13;
          ParticipantGridView.updateVisibleCameraPosition(for:visibleCameraPosition:animated:)(a1, a2, 0);

        }
        MostActiveParticipantViewController.update(participant:visibleCameraPosition:)();
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v16);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #42 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  char ShouldPauseOnFirstLocalVideo;
  uint64_t v11;

  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1C3B752C0](a1 + 16);
    if (v8)
    {
      v9 = (void *)v8;
      ShouldPauseOnFirstLocalVideo = MultiwayViewController.conversationControllerShouldPauseOnFirstLocalVideoFrame()();

    }
    else
    {
      ShouldPauseOnFirstLocalVideo = 0;
    }
    return ShouldPauseOnFirstLocalVideo & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MultiwayViewController.conversationControllerShouldPauseOnFirstLocalVideoFrame()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  unsigned int v15;
  void *v16;
  void *v17;
  unsigned int v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (one-time initialization token for conversationKit == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)&static Logger.conversationKit);
  v8 = v1;
  v9 = Logger.logObject.getter();
  v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v22 = v12;
    *(_DWORD *)v11 = 136315906;
    v21 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0xD000000000000039, 0x80000001BD691F80, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 1024;
    MultiwayViewController.call.getter();
    v14 = v13;
    v15 = objc_msgSend(v13, sel_isConversation);

    LODWORD(v21) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v11 + 18) = 1024;
    LOBYTE(v14) = MultiwayViewController.isVisibleForStartingCamera.getter();

    LODWORD(v21) = (v14 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v11 + 24) = 1024;
    LOBYTE(v14) = MultiwayViewController.isFrontmostMultiway.getter();

    LODWORD(v21) = v14 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl(&dword_1BD004000, v9, v10, "%s,\ncall.isConversation : %{BOOL}d,\n!isVisibleForStartingCamera: %{BOOL}d,\nisFrontmostMultiway: %{BOOL}d", (uint8_t *)v11, 0x1Eu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v12, -1, -1);
    MEMORY[0x1C3B751B8](v11, -1, -1);
  }
  else
  {

  }
  MultiwayViewController.call.getter();
  v17 = v16;
  v18 = objc_msgSend(v16, sel_isConversation);

  if (v18 && (MultiwayViewController.isVisibleForStartingCamera.getter() & 1) == 0)
    v19 = MultiwayViewController.isFrontmostMultiway.getter();
  else
    v19 = 0;
  return v19 & 1;
}

uint64_t MultiwayViewController.conversationControllerLetMeInRequestStateDidChange(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    v9 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
    swift_beginAccess();
    v10 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType();
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 112);
    swift_unknownObjectRetain();
    LOBYTE(v10) = v12(ObjectType, v10);
    result = swift_unknownObjectRelease();
    if ((v10 & 1) != 0)
    {
      v13 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
      swift_beginAccess();
      outlined init with copy of RadarReporting(v13, (uint64_t)v29);
      v14 = v30;
      v15 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      v16 = *(_QWORD *)(v9 + 8);
      v17 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 104);
      v18 = swift_unknownObjectRetain();
      v17(&v27, v18, v16, v14, v15);
      swift_unknownObjectRelease();
      if (v28)
      {
        outlined init with take of Notice(&v27, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        v19 = v33;
        v20 = v34;
        __swift_project_boxed_opaque_existential_1(v32, v33);
        v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 216))(v19, v20);

        if (v21)
        {
          v22 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
          swift_beginAccess();
          v23 = (void *)MEMORY[0x1C3B752C0](v22);
          if (v23)
          {
            v24 = v23;
            if ((objc_msgSend(v23, sel_respondsToSelector_, sel_updateCallParticipantLabelsViewForViewController_) & 1) != 0)objc_msgSend(v24, sel_updateCallParticipantLabelsViewForViewController_, v1);
            swift_unknownObjectRelease();
          }
          MultiwayViewController.updateViewConstraints()();
          MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(10);
        }
        v25 = v32;
      }
      else
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v27, &demangling cache variable for type metadata for Conversation?);
        v25 = v29;
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #44 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = type metadata accessor for DispatchPredicate();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v8)
    {
      v9 = (void *)v8;
      HIWORD(v10) = 514;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v10 + 6);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #45 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v9 = a1[3];
    v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 216))(v9, v10);

    if (v11)
    {
      swift_beginAccess();
      v12 = MEMORY[0x1C3B752C0](a2 + 16);
      if (v12)
      {
        v13 = (void *)v12;
        MultiwayViewController.scheduleLinkEducationFirstTimeAlert()();

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.scheduleLinkEducationFirstTimeAlert()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 aBlock;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void (*v49)();
  uint64_t v50;
  __int128 v51[2];
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v1 = type metadata accessor for DispatchWorkItemFlags();
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - v12;
  v45 = v0;
  v14 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults);
  v16 = *(_QWORD *)(v14 + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 424))(ObjectType, v16) & 1) != 0)
  {
    v34[0] = ObjectType;
    v34[1] = v15;
    v35 = v16;
    v36 = v10;
    v37 = v8;
    v38 = v13;
    v39 = v6;
    v40 = v4;
    v41 = v3;
    ConversationController.lookupActiveConversation()();
    if (v48)
    {
      outlined init with take of Notice(&aBlock, (uint64_t)v52);
      v19 = v53;
      v18 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 216))(v19, v18);

      if (v20)
      {
        v21 = v53;
        v22 = v54;
        __swift_project_boxed_opaque_existential_1(v52, v53);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 56))(v21, v22) == 3)
        {
          (*(void (**)(_QWORD, _QWORD))(v35 + 432))(0, v34[0]);
          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          v23 = (void *)static OS_dispatch_queue.main.getter();
          v24 = v36;
          static DispatchTime.now()();
          v25 = v38;
          MEMORY[0x1C3B72C50](v24, 1.0);
          v26 = *(void (**)(char *, uint64_t))(v37 + 8);
          v27 = v7;
          v26(v24, v7);
          v28 = swift_allocObject();
          swift_unknownObjectWeakInit();
          outlined init with copy of RadarReporting((uint64_t)v52, (uint64_t)v51);
          v29 = swift_allocObject();
          *(_QWORD *)(v29 + 16) = v28;
          outlined init with take of Notice(v51, v29 + 24);
          v49 = partial apply for closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert();
          v50 = v29;
          *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v47 = thunk for @escaping @callee_guaranteed () -> ();
          v48 = &block_descriptor_447_0;
          v30 = _Block_copy(&aBlock);
          swift_release();
          v31 = v39;
          static DispatchQoS.unspecified.getter();
          *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
          lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
          v32 = v42;
          v33 = v44;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          MEMORY[0x1C3B735B0](v25, v31, v32, v30);
          _Block_release(v30);

          (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
          v26(v25, v27);
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&aBlock, &demangling cache variable for type metadata for Conversation?);
    }
  }
}

void closure #46 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  _BYTE v19[216];
  uint64_t v20[27];

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
    swift_beginAccess();
    v5 = *v4;

    if (v5 == 2)
    {
      swift_beginAccess();
      v6 = MEMORY[0x1C3B752C0](v1);
      if (!v6)
        return;
      v7 = (void *)v6;
      v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) == 1)
      {

        return;
      }
      v18 = *(id *)(v8 + 96);

      specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
      goto LABEL_14;
    }
  }
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v1);
  if (!v9
    || (v10 = (void *)v9,
        v11 = (uint64_t *)(v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState),
        swift_beginAccess(),
        v12 = *v11,
        v10,
        v12))
  {
    swift_beginAccess();
    v13 = MEMORY[0x1C3B752C0](v1);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = v13 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v15, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v19, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v20) == 1)
      {

      }
      else
      {
        v16 = *(id *)(v15 + 96);

        specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
      }
    }
  }
  swift_beginAccess();
  v17 = MEMORY[0x1C3B752C0](v1);
  if (v17)
  {
    v18 = (id)v17;
    specialized MomentsBackedViewControllerProtocol.remoteDidTakePhoto()();
LABEL_14:

  }
}

void closure #47 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = MultiwayViewController.captionsViewController.getter();
      if (v11)
      {
        v12 = v11;
        CaptionsViewController.updateCaptions(for:)(a1);

        v10 = v12;
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #48 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v11 = a4 + 16;
    swift_beginAccess();
    v12 = MEMORY[0x1C3B752C0](v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = MultiwayViewController.captionsViewController.getter();

      if (v14)
      {
        swift_beginAccess();
        v15 = MEMORY[0x1C3B752C0](v11);
        v16 = (void *)v15;
        if (v15)
        {
          v17 = objc_retain(*(id *)(v15
                                  + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

          ConversationController.conversationDisplayName.getter();
        }
        CaptionsViewController.callName.setter();

      }
    }
    swift_beginAccess();
    v18 = MEMORY[0x1C3B752C0](v11);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = MultiwayViewController.captionsViewController.getter();

      if (v20)
      {
        v21 = a1[3];
        v22 = a1[4];
        __swift_project_boxed_opaque_existential_1(a1, v21);
        v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
        CaptionsViewController.groupImage.setter(v23);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #49 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    MultiwayViewController.conversationControllerDidUpdateVideoMessagingAvailable()();

  }
}

void MultiwayViewController.conversationControllerDidUpdateVideoMessagingAvailable()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 600))(ObjectType, v1) & 1) != 0)
    MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
}

void closure #50 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13[3];

  v3 = a2 + 16;
  if (one-time initialization token for videoMessaging != -1)
    swift_once();
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)&static Logger.videoMessaging);
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v5, v6, "Encountered an error performing a video message action: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v8, -1, -1);
    MEMORY[0x1C3B751B8](v7, -1, -1);
  }

  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](v3);
  if (v11)
  {
    v12 = (void *)v11;
    MultiwayViewController.showUnrecoverableAlertFromError(_:)(a1);

  }
}

void MultiwayViewController.showUnrecoverableAlertFromError(_:)(char a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;

  v2 = v1;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_conversationKit);
  v19._object = (void *)0xE000000000000000;
  v6._object = (void *)0x80000001BD691E80;
  v6._countAndFlagsBits = 0xD00000000000002FLL;
  v7.value._countAndFlagsBits = 0x61737265766E6F43;
  v7.value._object = (void *)0xEF74694B6E6F6974;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v19);

  v18 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v9._countAndFlagsBits, (uint64_t)v9._object, 0, 0xE000000000000000, 1);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v10 = objc_msgSend(v4, sel_conversationKit);
  v11._countAndFlagsBits = 0xD000000000000030;
  v20._object = (void *)0xE000000000000000;
  v11._object = (void *)0x80000001BD691EB0;
  v12.value._countAndFlagsBits = 0x61737265766E6F43;
  v12.value._object = (void *)0xEF74694B6E6F6974;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v20);

  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = v15;
  v17 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v14._countAndFlagsBits, (uint64_t)v14._object, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showUnrecoverableAlertFromError(_:));
  objc_msgSend(v18, sel_addAction_, v17);

  objc_msgSend(v2, sel_presentViewController_animated_completion_, v18, 1, 0);
}

void closure #51 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = type metadata accessor for DispatchPredicate();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    v9 = MEMORY[0x1C3B752C0](a2 + 16);
    if (v9)
    {
      v10 = (void *)v9;
      HIWORD(v11) = a1 & 1;
      MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v11 + 6);

    }
  }
  else
  {
    __break(1u);
  }
}

void closure #52 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)(float a1, float a2, float a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t ObjectType;
  uint64_t v26;
  id v27;
  _QWORD v28[2];
  uint64_t v29;
  _BYTE v30[216];
  uint64_t v31[27];

  v28[1] = a6;
  v29 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchPredicate();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (_QWORD *)((char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v20 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DEF740], v17);
  v21 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    swift_beginAccess();
    v22 = MEMORY[0x1C3B752C0](a5 + 16);
    if (v22)
    {
      v23 = (void *)v22;
      v24 = *(id *)(v22 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
      ConversationController.participant(with:)();

      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant((uint64_t)v13, (uint64_t)v16);
        ObjectType = swift_getObjectType();
        if (((*(uint64_t (**)(uint64_t))(v29 + 128))(ObjectType) & 1) != 0)
        {
          v26 = (uint64_t)v23 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
          swift_beginAccess();
          outlined init with take of MultiwayViewController.ViewContent?(v26, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
          outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
          if (getEnumTag for TapInteraction.EventType(v31) != 1)
          {
            v27 = *(id *)(v26 + 8);
            ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:)((uint64_t)v16, a1, a2, a3);

          }
          outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for Participant);

        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #53 in MultiwayViewController.init(activeCall:conversationController:bannerPresentationManager:defaults:features:)()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_185_0();
}

void sub_1BD4FF338(void *a1)
{
  char v1;

  if (a1)
  {
    specialized EffectsHandler.automation_setEffectsMode(enabled:)(v1 & 1);

  }
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.__allocating_init(coder:)()
{
  objc_class *v0;

  OUTLINED_FUNCTION_65(objc_allocWithZone(v0), sel_initWithCoder_);
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.init(coder:)()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _OWORD *v26;
  _OWORD *v27;
  char *v28;
  uint64_t v29;
  id v30;
  _BYTE v31[216];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<Bool>);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  v3 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime];
  v4 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_77_0(v3, v5, v6, v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_remoteControlAccessoryEventsAgent] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isInCallEndedBlockAndReportFlow] = 0;
  v7 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags;
  *(_QWORD *)&v1[v7] = OUTLINED_FUNCTION_20_60(objc_allocWithZone(MEMORY[0x1E0DBD2F0]));
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_bannerPresentationManagerBox] = 0;
  v8 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captioningStateManager;
  if (one-time initialization token for shared != -1)
    swift_once();
  v9 = static ConversationCapabilities.shared;
  type metadata accessor for CaptioningStateManager();
  swift_allocObject();
  *(_QWORD *)&v1[v8] = CaptioningStateManager.init(capabilities:)(v9);
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isSplitViewActive] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyleBeforeReactionsVisible] = 2;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipDisplayStateObservationTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tipStatusObservationTask] = 0;
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionPickerTip];
  v11 = OUTLINED_FUNCTION_140_9();
  OUTLINED_FUNCTION_77_0(v10, v12, v13, v11);
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsTips] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects] = 0;
  v14 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *((_QWORD *)v14 + 8) = 0;
  v15 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator];
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didExpandIncomingCallBanner] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController__cachedDidExpandActiveVideoCallFromBanner] = 2;
  v16 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOi0_(v31);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsLayoutController] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_shouldShowZoomControls] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller] = 0;
  v17 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedPresentationSize];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedGridViewSize];
  *v18 = 0;
  v18[1] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsConnectionAnimation] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsPausedState] = 4;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_frontBoardInterfaceOrientation] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations] = 2;
  Published.init(initialValue:)();
  v19 = OUTLINED_FUNCTION_178();
  v20(v19);
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner] = 0;
  v21 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_deskViewTapHandler];
  *v21 = 0;
  v21[1] = 0;
  v22 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen] = 2;
  v23 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
  *v23 = 0;
  v23[1] = 0;
  v24 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
  *v24 = 0;
  v24[1] = 0;
  v25 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler];
  *v25 = 0;
  v25[1] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isFullScreen] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isAmbient] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isPipStashed] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState] = 0;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_54();
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled] = 0;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_needsUpdatePresentationContexts] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___flashView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController____lazy_storage___insulatingView] = 1;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasInitializedMomentsViews] = 0;
  v26 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
  *v26 = 0u;
  v26[1] = 0u;
  v27 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
  *v27 = 0u;
  v27[1] = 0u;
  v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isScreenSharingFullScreen] = 0;
  v28 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  *v28 = 4;
  *((_QWORD *)v28 + 1) = 0;
  *((_QWORD *)v28 + 2) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill] = MEMORY[0x1E0DEE9D8];
  v29 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer;
  v30 = objc_allocWithZone((Class)type metadata accessor for TonePlayer());
  *(_QWORD *)&v1[v29] = OUTLINED_FUNCTION_20_60(v30);
  *(_QWORD *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_subscriptions] = MEMORY[0x1E0DEE9E8];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MultiwayViewController.__deallocating_deinit()
{
  char *v0;
  char *v1;
  objc_class *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  void (*v7)(void);
  void (*v8)(void);
  _QWORD *v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  char *v17;

  v1 = v0;
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer];
  if (v3)
    OUTLINED_FUNCTION_489_0(v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_showReactionPickerTimer];
  if (v4)
    OUTLINED_FUNCTION_489_0(v4);
  v5 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer];
  if (v5)
    OUTLINED_FUNCTION_489_0(v5);
  v6 = *(_QWORD **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer];
  v7 = (void (*)(void))MEMORY[0x1E0DEEDD8];
  v8 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0xE0);
  v9 = v6;
  v8();

  v10 = OUTLINED_FUNCTION_422_0(*(void **)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController]);
  v7();

  MultiwayViewController.deregisterForSystemEventsIfNecessary()();
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v11 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v11 + 16) = xmmword_1BD6441D0;
  v17 = v1;
  v12 = v1;
  v13 = String.init<A>(reflecting:)();
  v15 = v14;
  *(_QWORD *)(v11 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_132_3();
  os_log(_:dso:log:type:_:)();
  OUTLINED_FUNCTION_53();
  v16.receiver = v12;
  v16.super_class = v2;
  objc_msgSendSuper2(&v16, sel_dealloc);
  OUTLINED_FUNCTION_289_0();
}

Swift::Void __swiftcall MultiwayViewController.viewDidLoad()()
{
  void *v0;
  char **v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint8_t *v46;
  _QWORD *v47;
  char *v48;
  id v49;
  void *v50;
  char *v51;
  id v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  id v68;
  id *v69;
  id v70;
  uint64_t *v71;
  _UNKNOWN **v72;
  id v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  id v87;
  uint64_t (**v88)(uint64_t, uint64_t);
  _BYTE *v89;
  char *v90;
  id v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char v98;
  char v99;
  id v100;
  uint64_t v101;
  unsigned int v102;
  _QWORD *v103;
  id v104;
  uint64_t v105;
  int IsEffectSupportedForBundleID;
  uint64_t v107;
  id v108;
  void (*v109)(_QWORD);
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  char v121;
  uint64_t (**v122)(uint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t (**v124)(uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  id v126;
  _QWORD *v127;
  _QWORD *v128;
  id v129;
  char *v130;
  char *v131;
  uint64_t v132;
  _BYTE *v133;
  char *v134;
  char *v135;
  void *v136;
  uint64_t v137;
  char *v138;
  void *v139;
  char *v140;
  uint64_t v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  id v147;
  void *v148;
  uint64_t v149;
  id v150;
  id v151;
  void *v152;
  void *v153;
  uint64_t v154;
  id v155;
  char v156;
  char *v157;
  BOOL *v158;
  BOOL v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t (**v166)(uint64_t, uint64_t, uint64_t);
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t (**v171)(uint64_t, uint64_t);
  _BYTE *v172;
  _BOOL4 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  id v189;
  UIView *v190;
  uint64_t (**v191)(uint64_t, uint64_t);
  uint64_t v192;
  char v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  char v197;
  char *v198;
  id v199;
  id v200;
  void *v201;
  void *v202;
  void *v203;
  _BYTE *v204;
  void *v205;
  uint64_t v206[37];
  _BOOL4 v207;
  id v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t (**v214)(uint64_t, uint64_t);
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t (**v219)(uint64_t, uint64_t, uint64_t);
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  id v225;
  id v226;
  uint64_t v227;
  char *v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  char *v234;
  unsigned __int8 v235[824];
  _BYTE v236[216];
  uint64_t v237[27];
  char v238[50];
  objc_super v239;
  uint64_t v240[3];
  void *v241;
  uint64_t (**v242)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_51_29();
  v2 = (objc_class *)OUTLINED_FUNCTION_15_6();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<URL?>.Publisher);
  v206[15] = *(_QWORD *)(v3 - 8);
  v206[16] = v3;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41();
  v206[14] = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<URL?>.Publisher>);
  v206[18] = *(_QWORD *)(v6 - 8);
  v206[19] = v6;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v7);
  v206[17] = (uint64_t)v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_41();
  v206[11] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<VideoMessageController.State>.Publisher);
  v206[2] = *(_QWORD *)(v11 - 8);
  v206[3] = v11;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_41();
  v206[1] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>);
  v206[5] = *(_QWORD *)(v14 - 8);
  v206[6] = v14;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_298_2(v16, v206[0]);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)>);
  v206[8] = *(_QWORD *)(v17 - 8);
  v206[9] = v17;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_41();
  v206[7] = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Publishers.Map<Publishers.RemoveDuplicates<Published<VideoMessageController.State>.Publisher>, (VideoMessageController.State, VideoMessageController.State)>, NSRunLoop>);
  v206[12] = *(_QWORD *)(v20 - 8);
  v206[13] = v20;
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_41();
  v206[10] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_101_0();
  v229 = (_QWORD *)type metadata accessor for VideoReactionPickerTip();
  v219 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))*(v229 - 1);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_41();
  v208 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_5_27();
  v224 = v27;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v28);
  v223 = (char *)v206 - v29;
  v220 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_5_27();
  v212 = v31;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v32);
  v213 = (char *)v206 - v33;
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1E0C80A78](v34);
  v234 = (char *)v206 - v35;
  OUTLINED_FUNCTION_8_4();
  *(_QWORD *)&v37 = MEMORY[0x1E0C80A78](v36).n128_u64[0];
  v39 = (char *)v206 - v38;
  v239.receiver = v0;
  v206[33] = (uint64_t)v2;
  v239.super_class = v2;
  objc_msgSendSuper2(&v239, sel_viewDidLoad, v37);
  MultiwayViewController.updateAdditionalSafeAreaInsets()();
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_63;
  while (1)
  {
    v40 = OUTLINED_FUNCTION_17_2();
    v41 = __swift_project_value_buffer(v40, (uint64_t)&static Logger.conversationKit);
    v42 = v0;
    v43 = v41;
    Logger.logObject.getter();
    v44 = OUTLINED_FUNCTION_12_0();
    v45 = OUTLINED_FUNCTION_4_14(v44);
    v218 = v39;
    if (v45)
    {
      v46 = (uint8_t *)OUTLINED_FUNCTION_105();
      v47 = (_QWORD *)OUTLINED_FUNCTION_105();
      *(_DWORD *)v46 = 138412290;
      v240[0] = (uint64_t)v42;
      v48 = v42;
      OUTLINED_FUNCTION_450();
      *v47 = v42;

      OUTLINED_FUNCTION_48(&dword_1BD004000, v43, (os_log_type_t)v1, "%@ viewDidLoad", v46);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_60();
    }

    v49 = objc_msgSend(v42, sel_view);
    if (!v49)
      goto LABEL_68;
    v50 = v49;
    v51 = &v42[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner];
    OUTLINED_FUNCTION_1();
    if (*v51 == 1)
    {
      v52 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    }
    else
    {
      if (one-time initialization token for background != -1)
        swift_once();
      v52 = (id)static Colors.MultiwayViewController.background;
    }
    v53 = v52;
    OUTLINED_FUNCTION_59_2((uint64_t)v52, sel_setBackgroundColor_);

    v54 = OUTLINED_FUNCTION_15();
    swift_unknownObjectWeakInit();
    MultiwayViewController.mostActiveParticipants.getter();
    v55 = &v42[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_layoutStyle];
    OUTLINED_FUNCTION_1();
    v238[1] = *v55;
    MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
    MultiwayViewController.captionsLayoutState.getter(v238);
    v56 = v238[0];
    if (v238[0] == 3)
      v56 = 0;
    LOBYTE(v240[0]) = v56;
    v57 = objc_allocWithZone((Class)OUTLINED_FUNCTION_514_0());
    ParticipantGridViewController.init(participants:layoutStyle:isLocalMemberAuthorizedToChangeGroupMembership:captionsLayoutState:)();
    v59 = v58;
    v60 = *(_QWORD *)&v42[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    v61 = v60 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    OUTLINED_FUNCTION_1();
    v227 = v61;
    OUTLINED_FUNCTION_498();
    v231 = v60;
    v62 = (uint64_t *)(v60 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants);
    OUTLINED_FUNCTION_1();
    v221 = v62;
    v232 = v59;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_8_8();
    Array<A>.participants(notIn:)();
    v64 = v63;
    OUTLINED_FUNCTION_2_1();
    OUTLINED_FUNCTION_27();
    v65 = objc_allocWithZone((Class)OUTLINED_FUNCTION_519_0());
    swift_retain();
    v210 = v54;
    v228 = ParticipantListViewController.init(localParticipant:remoteParticipants:participantIsShownInGrid:)((uint64_t)v39, v64, (uint64_t)partial apply for closure #1 in MultiwayViewController.viewDidLoad(), v54);
    v66 = v42;
    v67 = (uint64_t)&v42[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_131(v67, (uint64_t)v236);
    OUTLINED_FUNCTION_5_131((uint64_t)v236, (uint64_t)v237);
    v68 = 0;
    if (getEnumTag for TapInteraction.EventType(v237) != 1)
    {
      v69 = (id *)(*(_QWORD *)(v67 + 24)
                 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
      OUTLINED_FUNCTION_1();
      v68 = *v69;
      v70 = *v69;
    }
    v211 = v67;
    _s15ConversationKit11ParticipantVWOcTm_4();
    v71 = v221;
    OUTLINED_FUNCTION_8_8();
    LODWORD(v233) = MultiwayViewController.controlsMode.getter();
    LOBYTE(v240[0]) = *v55;
    MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
    ConversationController.isLinkSharingSupported.getter();
    v72 = v68 ? &protocol witness table for ConversationHUDViewController : 0;
    v73 = objc_allocWithZone((Class)type metadata accessor for InCallControlsViewController());
    v209 = v68;
    v205 = v68;
    v74 = v71;
    v75 = OUTLINED_FUNCTION_354_1();
    v226 = InCallControlsViewController.init(localParticipant:remoteParticipants:mode:gridLayoutStyle:representedLegacyCallIdentifier:isLocalMemberAuthorizedToChangeGroupMembership:isLinkSharingSupported:menuHostViewController:)(v75, v76, (char)v233, v77, 0, 0, v78, v79, v205, (uint64_t)v72);
    v80 = *v71;
    v81 = (uint64_t)v218;
    _s15ConversationKit11ParticipantVWOcTm_4();
    v83 = *(_QWORD *)&v66[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults];
    v82 = *(_QWORD *)&v66[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
    OUTLINED_FUNCTION_8_8();
    swift_unknownObjectRetain();
    MultiwayViewController.shouldShowActionTypePhotoCapture.getter();
    v85 = v84;
    v86 = MultiwayViewController.isLocalMemberAuthorizedToChangeGroupMembership.getter();
    v87 = objc_allocWithZone((Class)ObjC metadata update function for MostActiveParticipantViewController());
    v216 = v83;
    v217 = v82;
    v88 = (uint64_t (**)(uint64_t, uint64_t))MostActiveParticipantViewController.init(remoteParticipants:localParticipant:defaults:shouldShowActionTypePhotoCapture:isLocalMemberAuthorizedToChangeGroupMembership:)(v80, v81, v83, v82, v85 & 1, v86 & 1);
    v89 = objc_allocWithZone((Class)type metadata accessor for EffectsControlsViewController());
    v90 = v66;
    v215 = specialized EffectsControlsViewController.init(delegate:)(v90, v89);
    v91 = objc_msgSend(v215, sel_view);
    if (!v91)
      break;
    v92 = v91;
    objc_msgSend(v91, sel_setAlpha_, 0.0);

    v93 = *v74;
    OUTLINED_FUNCTION_35_0();
    v94 = ConversationController.conversationDisplayName.getter();
    v96 = v95;
    ConversationController.lookupActiveConversation()();
    v97 = v241;
    v214 = v88;
    if (v241)
    {
      OUTLINED_FUNCTION_160_2();
      v97 = (void *)OUTLINED_FUNCTION_23_11(v88[6]);
      OUTLINED_FUNCTION_477();
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v240, &demangling cache variable for type metadata for Conversation?);
    }
    v98 = ConversationController.isOneToOneModeEnabled.getter();
    v99 = static Platform.current.getter() != 3;
    OUTLINED_FUNCTION_478();
    v235[0] = v240[0];
    v100 = objc_allocWithZone((Class)OUTLINED_FUNCTION_516_0());
    v101 = v216;
    swift_unknownObjectRetain();
    v225 = CaptionsViewController.init(participants:callName:groupImage:isGroupCall:allowsMinimization:layoutIdiom:defaults:)(v93, v94, v96, v97, (v98 & 1) == 0, v99, v235, v101, v217);
    v102 = objc_msgSend(*(id *)&v90[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags], sel_reactionsEnabled);
    v230 = 0;
    v103 = 0;
    if (v102)
    {
      v104 = (id)TUPreferredFaceTimeBundleIdentifier();
      if (!v104)
      {
        v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v104 = (id)MEMORY[0x1C3B72E00](v105);
        OUTLINED_FUNCTION_53();
      }
      OUTLINED_FUNCTION_64();
      IsEffectSupportedForBundleID = AVControlCenterVideoEffectsModuleIsEffectSupportedForBundleID();

      if (IsEffectSupportedForBundleID)
      {
        v107 = OUTLINED_FUNCTION_15();
        OUTLINED_FUNCTION_123_11();
        v108 = objc_allocWithZone((Class)type metadata accessor for VideoReactionPickerViewController(0));
        v103 = VideoReactionPickerViewController.init(onReaction:)((uint64_t)partial apply for closure #2 in MultiwayViewController.viewDidLoad(), v107);
        v109 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v103) + 0x80);
        v110 = v103;
        v109(0);

        v111 = (uint64_t)v223;
        VideoReactionPickerTip.init()();
        v112 = (uint64_t)v229;
        __swift_storeEnumTagSinglePayload(v111, 0, 1, (uint64_t)v229);
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_327();
        outlined assign with take of Date?(v113, v114, v115);
        swift_endAccess();
        v116 = (uint64_t)v224;
        OUTLINED_FUNCTION_327();
        outlined init with copy of FeatureEligibility?(v117, v118, v119);
        v120 = OUTLINED_FUNCTION_69_0(v116, 1, v112);
        if (v121)
        {
          OUTLINED_FUNCTION_225_3(v120, (uint64_t *)&demangling cache variable for type metadata for VideoReactionPickerTip?);
          v230 = 0;
        }
        else
        {
          v122 = v219;
          v123 = (uint64_t)v208;
          OUTLINED_FUNCTION_93_4((uint64_t)v208, v116, v219[4]);
          v241 = (void *)v112;
          lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type VideoReactionPickerTip and conformance VideoReactionPickerTip);
          v242 = v124;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v240);
          OUTLINED_FUNCTION_93_4((uint64_t)boxed_opaque_existential_1, v123, v122[2]);
          v126 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
          v230 = TipUIView.init(_:arrowEdge:actionHandler:)();
          OUTLINED_FUNCTION_6_9(v123, (uint64_t (*)(uint64_t, uint64_t))v122[1]);
        }
      }
      else
      {
        v230 = 0;
        v103 = 0;
      }
    }
    MultiwayViewController.conversationControlsManager.getter();
    if (!v127)
      goto LABEL_70;
    v128 = v127;
    v229 = v103;
    v129 = objc_allocWithZone((Class)OUTLINED_FUNCTION_518_0());
    v130 = (char *)InCallBannerHostViewController.init(controlsManager:)(v128);
    v131 = v90;
    MultiwayViewController.conversationControlsManager.getter();
    if (!v132)
      goto LABEL_71;
    OUTLINED_FUNCTION_407();
    v133 = objc_allocWithZone((Class)type metadata accessor for CallDetailsCoordinator());
    v134 = v90;
    v135 = specialized CallDetailsCoordinator.init(hostViewController:controlsManager:deferredPresentationManager:)(v134, v131, v134, v133);
    v136 = *(void **)&v134[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
    *(_QWORD *)&v134[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator] = v135;

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIViewController?>);
    v137 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v137 + 16) = xmmword_1BD64C380;
    v138 = v228;
    v39 = v232;
    *(_QWORD *)(v137 + 32) = v228;
    *(_QWORD *)(v137 + 40) = v39;
    v139 = v226;
    v140 = v215;
    *(_QWORD *)(v137 + 48) = v226;
    *(_QWORD *)(v137 + 56) = v140;
    MultiwayViewController.effectsViewController.getter();
    *(_QWORD *)(v137 + 64) = v141;
    *(_QWORD *)(v137 + 72) = v130;
    v223 = v130;
    v142 = v225;
    *(_QWORD *)(v137 + 80) = 0;
    *(_QWORD *)(v137 + 88) = v142;
    v143 = v229;
    *(_QWORD *)(v137 + 96) = v229;
    v240[0] = v137;
    specialized Array._endMutation()();
    v0 = v142;
    v144 = v240[0];
    v208 = v143;
    v234 = v138;
    v233 = v39;
    v219 = v139;
    v224 = v140;
    v232 = v223;
    v228 = v0;
    v145 = 4;
    v1 = &selRef_associatedAppBundleIdentifier;
    while ((unint64_t)(v145 - 4) < *(_QWORD *)(v144 + 16))
    {
      v146 = *(void **)(v144 + 8 * v145);
      if (v146)
      {
        v39 = v146;
        v147 = OUTLINED_FUNCTION_20_4((uint64_t)objc_msgSend(v134, sel_addChildViewController_, v39), sel_view);
        if (!v147)
        {
          OUTLINED_FUNCTION_29_73();
          __break(1u);
LABEL_65:
          OUTLINED_FUNCTION_29_73();
          __break(1u);
LABEL_66:
          OUTLINED_FUNCTION_29_73();
          __break(1u);
LABEL_67:
          OUTLINED_FUNCTION_29_73();
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        v148 = v147;
        OUTLINED_FUNCTION_18_4(v147, sel_setTranslatesAutoresizingMaskIntoConstraints_);

        v150 = OUTLINED_FUNCTION_39(v149, sel_view);
        if (!v150)
          goto LABEL_65;
        v0 = v150;
        v151 = OUTLINED_FUNCTION_20_4((uint64_t)v150, sel_view);
        if (!v151)
          goto LABEL_66;
        v152 = v151;
        OUTLINED_FUNCTION_59_2((uint64_t)v151, sel_addSubview_);

        objc_msgSend(v39, sel_didMoveToParentViewController_, v134);
        if ((OUTLINED_FUNCTION_337_2() & 1) == 0)
        {
          OUTLINED_FUNCTION_472(0, (unint64_t *)&lazy cache variable for type metadata for UIViewController);
          v0 = v153;
          if ((static NSObject.== infix(_:_:)() & 1) == 0 && (static NSObject.== infix(_:_:)() & 1) == 0)
          {
            v154 = static NSObject.== infix(_:_:)();
            if ((v154 & 1) == 0)
            {
              v155 = OUTLINED_FUNCTION_20_4(v154, sel_view);
              if (!v155)
                goto LABEL_67;
              v0 = v155;
              objc_msgSend(v155, sel_setHidden_, 1);

            }
          }
        }

      }
      if (++v145 == 13)
      {
        swift_bridgeObjectRelease();
        v156 = OUTLINED_FUNCTION_337_2();
        v157 = v232;
        v158 = (BOOL *)&v232[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_requiresControlsHidden];
        v159 = (v156 & 1) == 0;
        OUTLINED_FUNCTION_2_0();
        *v158 = v159;
        InCallBannerHostViewController.hideOrShowRootView()();
        v160 = v234;
        v161 = &v234[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantsViewControllerDelegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v161 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v162 = &v160[OBJC_IVAR____TtC15ConversationKit29ParticipantListViewController_participantListViewControllerDelegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v162 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v163 = v233;
        v164 = &v233[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantsViewControllerDelegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v164 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v165 = &v163[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participantGridViewControllerDelegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v165 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v166 = v219;
        v167 = (char *)v219 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_delegate;
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v167 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v168 = (char *)v166 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_participantDelegate;
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v168 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v169 = &v157[OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_inCallBannerDelegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v169 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v170 = &v228[direct field offset for CaptionsViewController.delegate];
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v170 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        OUTLINED_FUNCTION_263_4();
        v171 = v242;
        __swift_project_boxed_opaque_existential_1(v240, (uint64_t)v241);
        LOBYTE(v170) = OUTLINED_FUNCTION_23_11(v171[15]);
        v172 = (char *)v166 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled;
        OUTLINED_FUNCTION_2_0();
        *v172 = v170 & 1;
        InCallControlsViewController.cinematicFramingIsEnabled.didset();
        OUTLINED_FUNCTION_477();
        v173 = MultiwayViewController.participantGridState.getter();
        v174 = v222;
        ConversationController.remoteOneToOneParticipant.getter();
        v175 = OUTLINED_FUNCTION_99_5();
        v177 = OUTLINED_FUNCTION_69_0(v175, v176, v220);
        v207 = v173;
        if (v121)
        {
          OUTLINED_FUNCTION_30_7(v177, &demangling cache variable for type metadata for Participant?);
          v178 = (uint64_t)v229;
        }
        else
        {
          v179 = OUTLINED_FUNCTION_343_3(v174);
          v178 = (uint64_t)v229;
          if (!v173)
            ParticipantGridViewController.fullScreenFocus(on:)();
          OUTLINED_FUNCTION_22_29(v179, type metadata accessor for Participant);
        }
        v180 = static Platform.current.getter();
        ParticipantListViewController.participantCount.getter();
        v182 = v181;
        ConversationController.supportsCameraBlur.getter();
        if ((v183 & 1) != 0)
          v184 = MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
        else
          v184 = 0;
        ConversationController.supportsReactionGestures.getter();
        v186 = v185;
        ConversationController.supportsStudioLight.getter();
        v188 = v187;
        v189 = objc_allocWithZone((Class)type metadata accessor for LocalParticipantView());
        v190 = LocalParticipantView.init(isInRoster:supportsRotation:supportsCameraBlur:supportsReactions:supportsReactionGestures:supportsStudioLight:supportsCameraFlip:)(v182 > 0, 0, v184 & 1, v178 != 0, v186 & 1, v188 & 1, v180 < 2u);
        MultiwayViewController.updateVideoMessagingAvailableForCurrentState()();
        MultiwayViewController.localVideoProvider.getter();
        v191 = v242;
        __swift_project_boxed_opaque_existential_1(v240, (uint64_t)v241);
        OUTLINED_FUNCTION_23_11(v191[15]);
        OUTLINED_FUNCTION_136_1();
        OUTLINED_FUNCTION_419_1(v193, *(uint64_t (**)(_QWORD))(v192 + 680));
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
        OUTLINED_FUNCTION_263_4();
        OUTLINED_FUNCTION_160_2();
        OUTLINED_FUNCTION_23_11(v191[19]);
        OUTLINED_FUNCTION_136_1();
        OUTLINED_FUNCTION_419_1(v195, *(uint64_t (**)(_QWORD))(v194 + 704));
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v240);
        OUTLINED_FUNCTION_263_4();
        OUTLINED_FUNCTION_160_2();
        OUTLINED_FUNCTION_23_11(v191[21]);
        OUTLINED_FUNCTION_136_1();
        OUTLINED_FUNCTION_419_1(v197, *(uint64_t (**)(_QWORD))(v196 + 728));
        OUTLINED_FUNCTION_477();
        v198 = (char *)v190 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_delegate;
        OUTLINED_FUNCTION_2_0();
        *((_QWORD *)v198 + 1) = &protocol witness table for MultiwayViewController;
        OUTLINED_FUNCTION_89_23();
        v199 = objc_msgSend(v224, sel_view);
        v200 = OUTLINED_FUNCTION_39((uint64_t)v199, sel_view);
        v201 = v200;
        if (v199)
        {
          v202 = v199;
          v203 = v200;
          if (!v200)
          {
            OUTLINED_FUNCTION_29_73();
            __break(1u);
            goto LABEL_57;
          }
LABEL_59:
          objc_msgSend(v201, sel_insertSubview_belowSubview_, v190, v199);

          if ((OUTLINED_FUNCTION_337_2() & 1) == 0)
          {
            v204 = (char *)v190 + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresControlsHidden;
            OUTLINED_FUNCTION_2_0();
            *v204 = 1;
            LocalParticipantView.requiresControlsHidden.didset();
          }
          v206[36] = (uint64_t)v190;
          OUTLINED_FUNCTION_1();
          OUTLINED_FUNCTION_473_0();
        }
LABEL_57:
        if (v201)
        {
          v199 = objc_msgSend(v219, sel_view);
          v202 = v201;
          v203 = v199;
          if (v199)
            goto LABEL_59;
        }
        else
        {
          OUTLINED_FUNCTION_29_73();
          __break(1u);
        }
        OUTLINED_FUNCTION_29_73();
        __break(1u);
        JUMPOUT(0x1BD5025F4);
      }
    }
    __break(1u);
LABEL_63:
    swift_once();
  }
LABEL_69:
  __break(1u);
LABEL_70:
  OUTLINED_FUNCTION_29_73();
  __break(1u);
LABEL_71:
  OUTLINED_FUNCTION_29_73();
  __break(1u);
  JUMPOUT(0x1BD5024D4);
}

void MultiwayViewController.updateAdditionalSafeAreaInsets()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v1 = v0;
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    swift_once();
  v2 = static Defaults.shared;
  (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
  v3 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 488))(v3);
  v4 = SBUIIsSystemApertureEnabled();
  v5 = objc_msgSend(v1, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  v6 = v5;
  if (v4)
    v7 = 0.0;
  else
    v7 = 10.0;
  objc_msgSend(v5, sel_safeAreaInsets);
  v9 = v8;

  v10 = static Layout.MediaPip.padding.getter();
  v11 = static Defaults.shared;
  (*(void (**)(double))(*(_QWORD *)static Defaults.shared + 384))(v10);
  v12 = static Platform.current.getter();
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 488))(v12);
  v13 = objc_msgSend(v1, sel_view);
  if (!v13)
    goto LABEL_12;
  v14 = v13;
  v15 = v7 - v9;
  objc_msgSend(v13, sel_safeAreaInsets);
  v17 = v16;

  v18 = 16.0 - v17;
  if (v15 > 0.0 || v18 > 0.0)
  {
    objc_msgSend(v1, sel_additionalSafeAreaInsets);
    objc_msgSend(v1, sel_setAdditionalSafeAreaInsets_, v15 + v19);
  }
}

uint64_t closure #1 in MultiwayViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = MultiwayViewController.participantIsShownInGrid(_:)();

  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t MultiwayViewController.participantIsShownInGrid(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];
  _BYTE v10[216];
  uint64_t v11[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v11) == 1)
  {
    v2 = 0;
  }
  else
  {
    v3 = *(id *)(v1 + 8);
    ParticipantGridViewController.participantIdentifiers.getter();
    v5 = v4;
    v6 = type metadata accessor for Participant(0);
    MEMORY[0x1E0C80A78](v6);
    v9[2] = v7;
    v2 = specialized Sequence.contains(where:)((uint64_t (*)(char *))closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)v9, v5);

    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

void MultiwayViewController.captionsLayoutState.getter(char *a1@<X8>)
{
  uint64_t v2;
  char v3;

  MultiwayViewController.constraintController.getter();
  if (v2)
  {
    v3 = v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_434_0();
  }
  else
  {
    v3 = 3;
  }
  *a1 = v3;
  OUTLINED_FUNCTION_9_0();
}

void MultiwayViewController.shouldShowActionTypePhotoCapture.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  MultiwayViewController.call.getter();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_65(objc_allocWithZone(MEMORY[0x1E0DBD338]), sel_initWithCall_);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v5 = objc_msgSend(ConversationController.momentsController.getter(), sel_capabilitiesForProvider_, v3);
  OUTLINED_FUNCTION_49_5();
  objc_msgSend(v4, sel_availability);
  OUTLINED_FUNCTION_37_0();

  OUTLINED_FUNCTION_18();
}

void closure #2 in MultiwayViewController.viewDidLoad()(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    MultiwayViewController.react(_:)(a1);

  }
}

void MultiwayViewController.react(_:)(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BD6441D0;
  v3 = String.init<A>(reflecting:)();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = objc_msgSend(v6, sel_videoDeviceController);

  v8 = objc_msgSend(v7, sel_currentInputDevice);
  if (v8)
  {
    v9 = VideoReaction.rawValue.getter(a1);
    v10 = (id)TUPreferredFaceTimeBundleIdentifier();
    if (!v10)
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v10 = (id)MEMORY[0x1C3B72E00](v11);
      swift_bridgeObjectRelease();
    }
    AVControlCenterVideoEffectsModulePerformReactionEffect();

  }
}

uint64_t MultiwayViewController.wantsStandardControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_iOSDelegate;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C3B752C0](v1);
  if (!v2)
    return 1;
  v3 = objc_msgSend(v2, sel_wantsStandardControls);
  swift_unknownObjectRelease();
  return (uint64_t)v3;
}

uint64_t MultiwayViewController.localVideoProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_callCenter;
  swift_beginAccess();
  outlined init with copy of RadarReporting(v1, (uint64_t)v5);
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

BOOL MultiwayViewController.participantGridState.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  _BOOL8 result;
  _BYTE v4[216];
  uint64_t v5[27];

  result = 1;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    if (static Platform.current.getter() == 3)
      return 0;
    v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v5) == 1)
      return 0;
    v2 = (_BYTE *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
    swift_beginAccess();
    if (*v2 != 2)
      return 0;
  }
  return result;
}

void MultiwayViewController.updateVideoMessagingAvailableForCurrentState()()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  void (*v3)(_QWORD);
  _QWORD *v4;

  v1 = MultiwayViewController.shouldEnableVideoMessagingForCurrentState()();
  v2 = *(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                  + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  v3 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v2) + 0x1A8);
  v4 = v2;
  v3(v1 & 1);

}

uint64_t MultiwayViewController.localParticipantState(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  char v26;
  char v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t);
  void *v54;
  void *v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t);
  char v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unsigned __int8 *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  const char *v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint32_t v127;
  uint64_t v128;
  os_log_type_t v129;
  __int128 v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144[4];
  uint64_t v145[27];
  _OWORD v146[2];
  int v147;
  _BYTE v148[216];
  uint64_t v149[30];
  __int128 v150;
  __int128 v151;
  int v152;

  v136 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v136);
  v137 = (char *)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v140 = (uint64_t)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for Participant(0);
  v6 = MEMORY[0x1E0C80A78](v139);
  v138 = (uint64_t)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v135 - v8;
  v141 = MultiwayViewController.localParticipantCornerToUse.getter();
  v10 = *(_BYTE *)(a1 + 16);
  v143 = v1;
  v142 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v11 = v142 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 8);
  ObjectType = swift_getObjectType();
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 184);
  swift_unknownObjectRetain();
  LODWORD(v12) = v14(ObjectType, v12);
  swift_unknownObjectRelease();
  if ((_DWORD)v12 == 5
    || (v15 = *(_QWORD *)(v11 + 8),
        v16 = swift_getObjectType(),
        v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184),
        swift_unknownObjectRetain(),
        LODWORD(v15) = v17(v16, v15),
        swift_unknownObjectRelease(),
        (_DWORD)v15 == 6))
  {
    v18 = *(_QWORD *)(v11 + 8);
    v19 = swift_getObjectType();
    v20 = a1;
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 520);
    swift_unknownObjectRetain();
    v22 = v21(v19, v18);
    a1 = v20;
    v23 = v22;
    swift_unknownObjectRelease();
    if ((v10 & 1) != 0 || (((*(_BYTE *)(v20 + 34) & 1) == 0) & v23) == 0)
      goto LABEL_15;
  }
  else if ((v10 & 1) != 0 || (*(_BYTE *)(a1 + 34) & 1) != 0)
  {
LABEL_15:
    if (one-time initialization token for logger != -1)
      swift_once();
    v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)logger);
    outlined retain of String(a1);
    outlined retain of String(a1);
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v149[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v41 = *(_OWORD *)(a1 + 16);
      v150 = *(_OWORD *)a1;
      v151 = v41;
      v152 = *(_DWORD *)(a1 + 32);
      outlined retain of String(a1);
      v42 = String.init<A>(reflecting:)();
      *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v43, v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of String(a1);
      outlined release of String(a1);
      v44 = "localParticipantState for %s is .fullScreen for disconnecting or disconnected not answered calls, ringing or hold music";
LABEL_19:
      _os_log_impl(&dword_1BD004000, v37, v38, v44, v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v40, -1, -1);
      MEMORY[0x1C3B751B8](v39, -1, -1);
LABEL_74:

      return 129;
    }
    goto LABEL_72;
  }
  v24 = v143 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v24, (uint64_t)v148, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v148, (uint64_t)v149, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v149) != 1)
  {
    v25 = (unsigned __int8 *)(v149[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    if (*v25 == 128)
    {
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_4();
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v148, (uint64_t)&v150, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)&v150);
      Participant.isActiveWithVideo.getter();
      v27 = v26;
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
      if ((v27 & 1) != 0)
      {
        if (one-time initialization token for logger != -1)
          swift_once();
        v28 = type metadata accessor for Logger();
        __swift_project_value_buffer(v28, (uint64_t)logger);
        outlined retain of String(a1);
        outlined retain of String(a1);
        v29 = Logger.logObject.getter();
        v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          v32 = swift_slowAlloc();
          v145[0] = v32;
          *(_DWORD *)v31 = 136315138;
          v33 = *(_OWORD *)(a1 + 16);
          v146[0] = *(_OWORD *)a1;
          v146[1] = v33;
          v147 = *(_DWORD *)(a1 + 32);
          outlined retain of String(a1);
          v34 = String.init<A>(reflecting:)();
          *(_QWORD *)&v146[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(a1);
          outlined release of String(a1);
          _os_log_impl(&dword_1BD004000, v29, v30, "localParticipantState for %s is .expanded", v31, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v32, -1, -1);
          MEMORY[0x1C3B751B8](v31, -1, -1);

          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v148);
        }
        else
        {
          outlined release of String(a1);
          outlined release of String(a1);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v148);

        }
        return 128;
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v148);
    }
  }
  v45 = *(_BYTE *)a1;
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v46 = *(_QWORD *)(a1 + 8);
    if (*(_QWORD *)(v46 + 16) == 1)
    {
      v47 = v140;
      specialized Collection.first.getter(v46, v140);
      if (__swift_getEnumTagSinglePayload(v47, 1, v139) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v47, &demangling cache variable for type metadata for Participant?);
        goto LABEL_68;
      }
      v88 = v138;
      outlined init with take of Participant(v47, v138);
      v89 = v137;
      _s15ConversationKit11ParticipantVWOcTm_4();
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        outlined destroy of AccountUpdateNotice(v88, type metadata accessor for Participant);
        v93 = type metadata accessor for Participant.State;
        v94 = (uint64_t)v89;
        goto LABEL_67;
      }
      v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
      v91 = (uint64_t)&v89[*(int *)(v90 + 48)];
      outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v89[*(int *)(v90 + 64)], *(_QWORD *)&v89[*(int *)(v90 + 64) + 8]);
      outlined destroy of Participant.MediaInfo(v91);
      v92 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v89, v92);
      if ((*(_BYTE *)(a1 + 17) & 1) == 0)
      {
        v93 = type metadata accessor for Participant;
        v94 = v88;
LABEL_67:
        outlined destroy of AccountUpdateNotice(v94, v93);
LABEL_68:
        if (one-time initialization token for logger != -1)
          swift_once();
        v96 = type metadata accessor for Logger();
        __swift_project_value_buffer(v96, (uint64_t)logger);
        outlined retain of String(a1);
        outlined retain of String(a1);
        v37 = Logger.logObject.getter();
        v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc();
          v40 = swift_slowAlloc();
          *(_QWORD *)&v146[0] = v40;
          *(_DWORD *)v39 = 136315138;
          v97 = *(_OWORD *)(a1 + 16);
          v150 = *(_OWORD *)a1;
          v151 = v97;
          v152 = *(_DWORD *)(a1 + 32);
          outlined retain of String(a1);
          v98 = String.init<A>(reflecting:)();
          *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v98, v99, (uint64_t *)v146);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(a1);
          outlined release of String(a1);
          v44 = "localParticipantState for %s is .fullScreen for oneToOne without isTrackingActiveConversation";
          goto LABEL_19;
        }
LABEL_72:
        outlined release of String(a1);
        v100 = a1;
        goto LABEL_73;
      }
      if (objc_msgSend(*(id *)(v143 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled)&& (*(_BYTE *)(a1 + 1) & 1) != 0)
      {
        if (one-time initialization token for logger != -1)
          swift_once();
        v128 = type metadata accessor for Logger();
        __swift_project_value_buffer(v128, (uint64_t)logger);
        outlined retain of String(a1);
        outlined retain of String(a1);
        v113 = Logger.logObject.getter();
        v129 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v113, v129))
        {
          v115 = swift_slowAlloc();
          v116 = swift_slowAlloc();
          *(_QWORD *)&v146[0] = v116;
          *(_DWORD *)v115 = 136315650;
          v130 = *(_OWORD *)(a1 + 16);
          v150 = *(_OWORD *)a1;
          v151 = v130;
          v152 = *(_DWORD *)(a1 + 32);
          outlined retain of String(a1);
          v131 = String.init<A>(reflecting:)();
          *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v131, v132, (uint64_t *)v146);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(a1);
          outlined release of String(a1);
          *(_WORD *)(v115 + 12) = 2080;
          v120 = v141;
          LOBYTE(v150) = v141;
          v133 = String.init<A>(reflecting:)();
          *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v133, v134, (uint64_t *)v146);
          v88 = v138;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v115 + 22) = 1024;
          LODWORD(v150) = 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v123 = "localParticipantState for %s is localParticipantCornerSize for cornerToUse %s in oneToOne with shouldIg"
                 "noreWaitingOnFirstFrame: %{BOOL}d";
          v124 = v113;
          v125 = v129;
          v126 = (uint8_t *)v115;
          v127 = 28;
          goto LABEL_97;
        }
LABEL_98:
        outlined release of String(a1);
        outlined release of String(a1);

        v120 = v141;
        goto LABEL_99;
      }
      outlined init with take of MultiwayViewController.ViewContent?(v24, (uint64_t)v145, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v145, (uint64_t)v146, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType((uint64_t *)v146) == 1)
      {
        if ((*(_BYTE *)(a1 + 32) & 1) == 0)
          goto LABEL_89;
      }
      else
      {
        v102 = (unsigned __int8 *)(*(_QWORD *)(v24 + 48)
                                 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if ((*(_BYTE *)(a1 + 32) & 1) == 0 || *v102 != 129)
        {
LABEL_89:
          if (one-time initialization token for logger != -1)
            swift_once();
          v112 = type metadata accessor for Logger();
          __swift_project_value_buffer(v112, (uint64_t)logger);
          outlined retain of String(a1);
          outlined retain of String(a1);
          v113 = Logger.logObject.getter();
          v114 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v113, v114))
          {
            v115 = swift_slowAlloc();
            v116 = swift_slowAlloc();
            v144[0] = v116;
            *(_DWORD *)v115 = 136315394;
            v117 = *(_OWORD *)(a1 + 16);
            v150 = *(_OWORD *)a1;
            v151 = v117;
            v152 = *(_DWORD *)(a1 + 32);
            outlined retain of String(a1);
            v118 = String.init<A>(reflecting:)();
            *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v118, v119, v144);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined release of String(a1);
            outlined release of String(a1);
            *(_WORD *)(v115 + 12) = 2080;
            v120 = v141;
            LOBYTE(v150) = v141;
            v121 = String.init<A>(reflecting:)();
            *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v121, v122, v144);
            v88 = v138;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v123 = "localParticipantState for %s is localParticipantCornerSize for cornerToUse %s in oneToOne";
            v124 = v113;
            v125 = v114;
            v126 = (uint8_t *)v115;
            v127 = 22;
LABEL_97:
            _os_log_impl(&dword_1BD004000, v124, v125, v123, v126, v127);
            swift_arrayDestroy();
            MEMORY[0x1C3B751B8](v116, -1, -1);
            MEMORY[0x1C3B751B8](v115, -1, -1);

LABEL_99:
            outlined init with take of MultiwayViewController.ViewContent?(v24, (uint64_t)&v150, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v150);
            v95 = MultiwayViewController.localParticipantCornerSize(for:viewContent:)(v120, (uint64_t)&v150);
            _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v150);
            outlined destroy of AccountUpdateNotice(v88, type metadata accessor for Participant);
            return v95;
          }
          goto LABEL_98;
        }
      }
      if (one-time initialization token for logger != -1)
        swift_once();
      v103 = type metadata accessor for Logger();
      __swift_project_value_buffer(v103, (uint64_t)logger);
      outlined retain of String(a1);
      outlined retain of String(a1);
      v104 = Logger.logObject.getter();
      v105 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v104, v105))
      {
        v106 = (uint8_t *)swift_slowAlloc();
        v107 = swift_slowAlloc();
        v144[0] = v107;
        *(_DWORD *)v106 = 136315138;
        v108 = *(_OWORD *)(a1 + 16);
        v150 = *(_OWORD *)a1;
        v151 = v108;
        v152 = *(_DWORD *)(a1 + 32);
        outlined retain of String(a1);
        v109 = String.init<A>(reflecting:)();
        *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v109, v110, v144);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        outlined release of String(a1);
        outlined release of String(a1);
        _os_log_impl(&dword_1BD004000, v104, v105, "localParticipantState for %s is .fullScreen for oneToOne waitingOnFirstRemoteFrame and isCurrentlyFullScreen", v106, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v107, -1, -1);
        MEMORY[0x1C3B751B8](v106, -1, -1);

        v111 = v138;
      }
      else
      {

        outlined release of String(a1);
        outlined release of String(a1);
        v111 = v88;
      }
      outlined destroy of AccountUpdateNotice(v111, type metadata accessor for Participant);
      return 129;
    }
  }
  v140 = v24;
  v48 = *(_BYTE *)(a1 + 32);
  v49 = a1;
  if ((v48 & 1) != 0)
  {
    v50 = *(_QWORD *)(a1 + 24);
    if (v50 != 3)
    {
      v51 = *(_QWORD *)(v11 + 8);
      v52 = swift_getObjectType();
      v53 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 184);
      swift_unknownObjectRetain();
      LODWORD(v51) = v53(v52, v51);
      swift_unknownObjectRelease();
      if ((_DWORD)v51 != 3)
        goto LABEL_36;
      MultiwayViewController.call.getter();
      v55 = v54;
      v56 = objc_msgSend(v54, sel_isIncoming);

      if ((v56 & 1) == 0 && (v50 | 2) != 2)
        goto LABEL_36;
      v57 = *(_QWORD *)(v11 + 8);
      v58 = swift_getObjectType();
      v59 = *(uint64_t (**)(uint64_t, uint64_t))(v57 + 184);
      swift_unknownObjectRetain();
      LODWORD(v57) = v59(v58, v57);
      swift_unknownObjectRelease();
      if ((_DWORD)v57 == 3 && (v50 | 2) == 2)
      {
        ConversationController.conversationHasActiveRemoteParticipants.getter();
        if ((v61 & 1) != 0)
        {
LABEL_36:
          if (one-time initialization token for logger != -1)
            swift_once();
          v62 = type metadata accessor for Logger();
          __swift_project_value_buffer(v62, (uint64_t)logger);
          outlined retain of String(v49);
          outlined retain of String(v49);
          v37 = Logger.logObject.getter();
          v38 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = (uint8_t *)swift_slowAlloc();
            v40 = swift_slowAlloc();
            *(_QWORD *)&v146[0] = v40;
            *(_DWORD *)v39 = 136315138;
            v63 = *(_OWORD *)(v49 + 16);
            v150 = *(_OWORD *)v49;
            v151 = v63;
            v152 = *(_DWORD *)(v49 + 32);
            outlined retain of String(v49);
            v64 = String.init<A>(reflecting:)();
            *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v64, v65, (uint64_t *)v146);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            outlined release of String(v49);
            outlined release of String(v49);
            v44 = "localParticipantState for %s is .fullScreen for unjoined isWaitingOnFirstRemoteFrame with conversation"
                  "HasActiveRemoteParticipants";
            goto LABEL_19;
          }
          outlined release of String(v49);
          v100 = v49;
LABEL_73:
          outlined release of String(v100);
          goto LABEL_74;
        }
      }
    }
  }
  v66 = *(_QWORD *)(v49 + 24);
  a1 = v49;
  switch(v66)
  {
    case 2:
      goto LABEL_43;
    case 1:
      goto LABEL_44;
    case 0:
LABEL_43:
      if ((*(_BYTE *)(v49 + 33) & 1) == 0)
      {
LABEL_44:
        if (one-time initialization token for logger != -1)
          swift_once();
        v67 = type metadata accessor for Logger();
        __swift_project_value_buffer(v67, (uint64_t)logger);
        outlined retain of String(v49);
        outlined retain of String(v49);
        v37 = Logger.logObject.getter();
        v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc();
          v40 = swift_slowAlloc();
          *(_QWORD *)&v146[0] = v40;
          *(_DWORD *)v39 = 136315138;
          v68 = *(_OWORD *)(v49 + 16);
          v150 = *(_OWORD *)v49;
          v151 = v68;
          v152 = *(_DWORD *)(v49 + 32);
          outlined retain of String(v49);
          v69 = String.init<A>(reflecting:)();
          *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v69, v70, (uint64_t *)v146);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined release of String(v49);
          outlined release of String(v49);
          v44 = "localParticipantState for %s is .fullscreen since we are in staging";
          goto LABEL_19;
        }
        goto LABEL_72;
      }
      break;
  }
  if (objc_msgSend(*(id *)(v143 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_uPlusOneFullBleedHandoffEnabled)&& (v45 & 1 & v48) != 0&& v66 == 3)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v71 = type metadata accessor for Logger();
    __swift_project_value_buffer(v71, (uint64_t)logger);
    outlined retain of String(v49);
    outlined retain of String(v49);
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)&v146[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v72 = *(_OWORD *)(v49 + 16);
      v150 = *(_OWORD *)v49;
      v151 = v72;
      v152 = *(_DWORD *)(v49 + 32);
      outlined retain of String(v49);
      v73 = String.init<A>(reflecting:)();
      *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, (uint64_t *)v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined release of String(v49);
      outlined release of String(v49);
      v44 = "localParticipantState for %s is .fullscreen while waiting for remote frame";
      goto LABEL_19;
    }
    goto LABEL_72;
  }
  if (one-time initialization token for logger != -1)
    swift_once();
  v75 = type metadata accessor for Logger();
  __swift_project_value_buffer(v75, (uint64_t)logger);
  outlined retain of String(v49);
  outlined retain of String(v49);
  v76 = Logger.logObject.getter();
  v77 = static os_log_type_t.default.getter();
  v78 = os_log_type_enabled(v76, v77);
  v79 = v140;
  if (v78)
  {
    v80 = swift_slowAlloc();
    v81 = swift_slowAlloc();
    *(_QWORD *)&v146[0] = v81;
    *(_DWORD *)v80 = 136315394;
    v82 = *(_OWORD *)(a1 + 16);
    v150 = *(_OWORD *)a1;
    v151 = v82;
    v152 = *(_DWORD *)(a1 + 32);
    outlined retain of String(a1);
    v83 = String.init<A>(reflecting:)();
    *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v84, (uint64_t *)v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined release of String(a1);
    outlined release of String(a1);
    *(_WORD *)(v80 + 12) = 2080;
    v85 = v141;
    LOBYTE(v150) = v141;
    v86 = String.init<A>(reflecting:)();
    *(_QWORD *)&v150 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v86, v87, (uint64_t *)v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v76, v77, "localParticipantState for %s is localParticipantCornerSize for cornerToUse: %s", (uint8_t *)v80, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v81, -1, -1);
    MEMORY[0x1C3B751B8](v80, -1, -1);

  }
  else
  {
    outlined release of String(a1);
    outlined release of String(a1);

    v85 = v141;
  }
  outlined init with take of MultiwayViewController.ViewContent?(v79, (uint64_t)&v150, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v150);
  v95 = MultiwayViewController.localParticipantCornerSize(for:viewContent:)(v85, (uint64_t)&v150);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)&v150);
  return v95;
}

void specialized closure #3 in MultiwayViewController.viewDidLoad()(char a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11[27];
  uint64_t v12[27];

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    v9 = getEnumTag for TapInteraction.EventType(v11) == 0;
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v12) == 1)
      v10 = a3;
    else
      v10 = 0;
    MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(a1 & 1, v9, v10);

  }
}

void MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(char a1, char a2, void *a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  id v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  _BYTE v30[216];
  uint64_t aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void (*v35)();
  uint64_t v36;

  v7 = a3;
  if (!a3)
  {
    v8 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)&aBlock, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    v7 = 0;
    if (getEnumTag for TapInteraction.EventType(&aBlock) != 1)
    {
      v7 = *(void **)(v8 + 120);
      v9 = v7;
    }
  }
  v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = a1 & 1;
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = a1 & 1;
  if ((a2 & 1) != 0)
  {
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    v29 = v13;
    v16 = v11;
    v17 = v7;
    v18 = a1;
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 320);
    v20 = a3;
    swift_retain();
    swift_retain();
    v21 = v19(ObjectType, v14);
    a1 = v18;
    v7 = v17;
    if ((v21 & 1) == 0)
    {
      swift_release();
      swift_release();
      v22 = (void *)objc_opt_self();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = partial apply for closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      *(_QWORD *)(v23 + 24) = v16;
      v35 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
      v36 = v23;
      v24 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v32 = 1107296256;
      v33 = thunk for @escaping @callee_guaranteed () -> ();
      v34 = &block_descriptor_202_0;
      v25 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = partial apply for closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:);
      *(_QWORD *)(v26 + 24) = v29;
      v35 = partial apply for thunk for @escaping @callee_guaranteed () -> (@owned String);
      v36 = v26;
      aBlock = v24;
      v32 = 1107296256;
      v33 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v34 = &block_descriptor_208_0;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_animateWithDuration_delay_options_animations_completion_, 6, v25, v27, 0.25, 0.0);

      swift_release();
      swift_release();
      _Block_release(v27);
      _Block_release(v25);
      return;
    }
  }
  else
  {
    v28 = a3;
    swift_retain();
    swift_retain();
  }
  closure #1 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v10, a1 & 1);
  swift_release();
  closure #2 in MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v12, a1 & 1);

  swift_release();
  swift_release();
  swift_release();
}

uint64_t MultiwayViewController.registerCaptioningStateObservers()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<AnyPublisher<CaptioningStateManager.CaptioningState, Never>, OS_dispatch_queue>);
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v6 = CaptioningStateManager.captioningStatePublisher.getter();
  swift_release();
  v11 = v6;
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v12 = (id)static OS_dispatch_queue.main.getter();
  v7 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyPublisher<CaptioningStateManager.CaptioningState, Never>);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type AnyPublisher<CaptioningStateManager.CaptioningState, Never> and conformance AnyPublisher<A, B>);
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue);
  Publisher.receive<A>(on:options:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type Publishers.ReceiveOn<AnyPublisher<CaptioningStateManager.CaptioningState, Never>, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void MultiwayViewController.playOutgoingGFTRingtoneIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  _QWORD *v7;
  void (*v8)(_BYTE *);
  _QWORD *v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v12[40];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    ConversationController.lookupActiveConversation()();
    if (v11)
    {
      outlined init with take of Notice(&v10, (uint64_t)v12);
      v7 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_tonePlayer);
      v8 = *(void (**)(_BYTE *))((*MEMORY[0x1E0DEEDD8] & *v7) + 0xC0);
      v9 = v7;
      v8(v12);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)&v10, &demangling cache variable for type metadata for Conversation?);
    }
  }
  else
  {
    __break(1u);
  }
}

void closure #4 in MultiwayViewController.viewDidLoad()(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  _QWORD *v9;
  char v10;

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (char *)objc_retain(*(id *)(v6
                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController));

    v9 = *(id *)&v8[OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController];
    v10 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v9) + 0xF0))();

  }
  else
  {
    v10 = 1;
  }
  *a3 = v10;
  a3[1] = v4;
}

void closure #5 in MultiwayViewController.viewDidLoad()(unsigned __int8 a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  _BYTE v12[216];
  uint64_t v13[7];

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = v6 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v8, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v13) != 1)
    {
      v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
      ObjectType = swift_getObjectType();
      v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 600);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
      swift_unknownObjectRetain();
      LOBYTE(v9) = v11(ObjectType, v9);
      swift_unknownObjectRelease();
      if ((v9 & 1) != 0)
      {
        MultiwayViewController.updateDelegateUsingState(oldVideoMessageState:newVideoMessageState:)(a1, a2);
        MultiwayViewController.updateParticipantLabelsAndControlsViews(videoMessageState:)(a2);
        LocalParticipantView.videoMessagingState.setter();
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
    }

  }
}

void MultiwayViewController.updateDelegateUsingState(oldVideoMessageState:newVideoMessageState:)(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v3 = v2;
  if (one-time initialization token for conversationControls != -1)
    swift_once();
  v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)&static Logger.conversationControls);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v32 = v3;
    v10 = swift_slowAlloc();
    v33[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v13 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v7, v8, "Updating delegate message flow using oldVideoMessageState %s to newVideoMessageState %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    v15 = v10;
    v3 = v32;
    MEMORY[0x1C3B751B8](v15, -1, -1);
    MEMORY[0x1C3B751B8](v9, -1, -1);
  }

  if (a2 == 2)
  {
    if (VideoMessageController.State.rawValue.getter(a1) == 0x7964616552746F6ELL && v16 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        goto LABEL_27;
    }
  }
  if (a1 == 2)
  {
    if (VideoMessageController.State.rawValue.getter(a2) == 0x7964616552746F6ELL && v19 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        v22 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
        swift_beginAccess();
        v23 = MEMORY[0x1C3B752C0](v22);
        if (!v23)
          return;
        v24 = (void *)v23;
        v25 = &selRef_didEnterVideoMessagingFlow;
        goto LABEL_31;
      }
    }
  }
  switch(a2)
  {
    case 1u:
LABEL_27:
      v28 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      v29 = MEMORY[0x1C3B752C0](v28);
      if (!v29)
        return;
      v24 = (void *)v29;
      v25 = &selRef_didExitVideoMessagingFlow;
      break;
    case 7u:
      v30 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      v31 = MEMORY[0x1C3B752C0](v30);
      if (!v31)
        return;
      v24 = (void *)v31;
      v25 = &selRef_endedRecordingVideoMessage;
      break;
    case 5u:
      v26 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      v27 = MEMORY[0x1C3B752C0](v26);
      if (!v27)
        return;
      v24 = (void *)v27;
      v25 = &selRef_beganRecordingVideoMessage;
      break;
    default:
      return;
  }
LABEL_31:
  if ((objc_msgSend(v24, sel_respondsToSelector_, *v25) & 1) != 0)
    objc_msgSend(v24, *v25);
  swift_unknownObjectRelease();
}

void closure #6 in MultiwayViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v11)
  {
    v12 = (char *)v11;
    outlined init with copy of FeatureEligibility?(a1, (uint64_t)v6, &demangling cache variable for type metadata for URL?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {

      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for URL?);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v13 = *(void **)(*(_QWORD *)&v12[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController]
                     + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
      v14 = (void *)objc_opt_self();
      v15 = v13;
      if (objc_msgSend(v14, sel_isCommunicationSafetyEnabled)
        && ((*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v15) + 0x168))() & 1) != 0)
      {
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for SCUIInterventionViewController);
        @nonobjc SCUIInterventionViewController.__allocating_init(workflow:contextDictionary:)(1, 0);
        v17 = v16;
        objc_msgSend(v16, sel_setInterventionDelegate_, v12);
        objc_msgSend(v17, sel_setModalInPresentation_, 1);
        objc_msgSend(v12, sel_presentModalViewController_withTransition_, v17, 8);

        v15 = v17;
      }
      else
      {
        MultiwayViewController.showLocalVideoMessagePreview(usingURL:)();
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

void MultiwayViewController.showLocalVideoMessagePreview(usingURL:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  _QWORD *v9;
  void (*v10)(id);
  id v11;
  _QWORD *v12;
  id v13;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  v3 = OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController;
  v13 = *(id *)(v2 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
  MultiwayViewController.videoMessagePlayerViewModelFor(_:and:)();
  v5 = v4;
  v6 = objc_allocWithZone((Class)type metadata accessor for VideoMessagePlayerViewController());
  v7 = v5;
  v8 = VideoMessagePlayerViewController.init(viewModel:)(v7);
  objc_msgSend(v1, sel_showViewController_sender_, v8, 0);

  v9 = *(_QWORD **)(v2 + v3);
  v10 = *(void (**)(id))((*MEMORY[0x1E0DEEDD8] & *v9) + 0x158);
  v11 = v7;
  v12 = v9;
  v10(v7);

}

Swift::Void __swiftcall MultiwayViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  char v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1);
  MultiwayViewController.updateShouldShowReactionPickerTipView()();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_320_2();
  if (v3)
  {
    MultiwayViewController.startTipStateObserver()();
    MultiwayViewController.tipKitStartObservation()();
  }
  OUTLINED_FUNCTION_8_15();
}

Swift::Void __swiftcall MultiwayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_392_0((int)v15.super_class, sel_viewDidAppear_, v3, v4, v5, v6, v7, v8, v13, v14, v15);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v9 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
  v10 = lazy protocol witness table accessor for type String and conformance String();
  v11 = 0x6D696E6120746F6ELL;
  if (a1)
    v11 = 0x646574616D696E61;
  v12 = 0xEC00000064657461;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = v10;
  if (a1)
    v12 = 0xE800000000000000;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v12;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_196_3();
  OUTLINED_FUNCTION_53();
  MultiwayViewController.updateStatusBarHidden()();
  MultiwayViewController.resumeUserInterface()();
  MultiwayViewController.updateViewConstraints()();
  HIWORD(v14) = 513;
  MultiwayViewController.updateChildParticipantsViewControllers(withUpdateReason:)((unsigned __int8 *)&v14 + 6);
  MultiwayViewController.updateHasParticipantVideo()();
  OUTLINED_FUNCTION_9_0();
}

void *MultiwayViewController.updateStatusBarHidden()()
{
  uint64_t v0;
  uint64_t v1;
  void *result;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  swift_beginAccess();
  result = (void *)MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    objc_msgSend(result, sel_viewController_setStatusBarHidden_, v0, MultiwayViewController.shouldHideStatusBar.getter());
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void MultiwayViewController.updateHasParticipantVideo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[42];

  v1 = v0;
  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v13 = (_QWORD *)(v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if ((*v13 & 0xFFFFFFFFFFFFFFFELL) != 2)
    goto LABEL_21;
  v14 = v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v14 + 16))
    goto LABEL_21;
  v33 = v6;
  v34 = v1;
  v15 = v12 + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + 8);
  swift_unknownObjectRetain();
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0
    || (ObjectType = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 128))(ObjectType, v16) & 1) == 0))
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 184);
  if (v32(ObjectType, v16) == 1)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    v31 = v32(ObjectType, v16);
    swift_unknownObjectRelease();
    if (v31 != 3)
      goto LABEL_8;
  }
  if ((MultiwayViewController.stoppedSendingVideoDueToOffscreen.getter() & 1) != 0)
    goto LABEL_9;
LABEL_8:
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_4();
  Participant.isActiveWithVideo.getter();
  v19 = v18;
  outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
  if ((v19 & 1) == 0)
  {
    v21 = ConversationController.visibleParticipants.getter();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = *(unsigned __int8 *)(v33 + 80);
      v32 = (uint64_t (*)(uint64_t, uint64_t))v21;
      v24 = v21 + ((v23 + 32) & ~v23);
      v25 = *(_QWORD *)(v33 + 72);
      while (1)
      {
        _s15ConversationKit11ParticipantVWOcTm_4();
        _s15ConversationKit11ParticipantVWOcTm_4();
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
          v27 = &v4[*(int *)(v26 + 48)];
          outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v4[*(int *)(v26 + 64)], *(_QWORD *)&v4[*(int *)(v26 + 64) + 8]);
          memcpy(v35, v27, sizeof(v35));
          v28 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v4, v28);
          v29 = v35[2];
          v30 = v35[3];
          swift_bridgeObjectRetain();
          outlined destroy of Participant.MediaInfo((uint64_t)v35);
          if (v29)
          {
            swift_bridgeObjectRelease();
            outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
            if ((v30 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v20 = 1;
              goto LABEL_22;
            }
            goto LABEL_18;
          }
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for Participant.State);
        }
        outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
LABEL_18:
        v24 += v25;
        if (!--v22)
        {
          swift_bridgeObjectRelease();
          v20 = 0;
          goto LABEL_22;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_21:
    v20 = 0;
    goto LABEL_22;
  }
LABEL_9:
  v20 = 1;
LABEL_22:
  SharedContentViewController.isPipped.setter(v20, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hasParticipantVideo, (void (*)(uint64_t))MultiwayViewController.hasParticipantVideo.didset);
}

Swift::Void __swiftcall MultiwayViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  os_log_type_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v19.receiver = v1;
  v19.super_class = (Class)OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_392_0((int)v19.super_class, sel_viewDidDisappear_, v3, v4, v5, v6, v7, v8, v17, v18, v19);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_17_2();
  v10 = __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationKit);
  v11 = v1;
  v12 = v10;
  Logger.logObject.getter();
  v13 = OUTLINED_FUNCTION_12_0();
  if (OUTLINED_FUNCTION_51_3(v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_105();
    v15 = (_QWORD *)OUTLINED_FUNCTION_105();
    *(_DWORD *)v14 = 138412290;
    v16 = v11;
    OUTLINED_FUNCTION_450();
    *v15 = v11;

    OUTLINED_FUNCTION_48(&dword_1BD004000, v12, v2, "%@ viewDidDisappear", v14);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_60();
  }

  MultiwayViewController.pauseUserInterface()();
  MultiwayViewController.stopTipStateObserver()();
  MultiwayViewController.tipKitStopObservation()();
}

Swift::Void __swiftcall MultiwayViewController.viewSafeAreaInsetsDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v1, sel_viewSafeAreaInsetsDidChange);
  MultiwayViewController.updateAdditionalSafeAreaInsets()();
  OUTLINED_FUNCTION_3_1();
}

Swift::Void __swiftcall MultiwayViewController.viewDidLayoutSubviews()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  double v23;
  id v24;
  SEL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[216];
  uint64_t v31[27];
  _BYTE v32[216];
  uint64_t v33[27];
  objc_super v34;
  _QWORD v35[4];
  char v36;

  v34.receiver = v0;
  v34.super_class = (Class)OUTLINED_FUNCTION_15_6();
  objc_msgSendSuper2(&v34, sel_viewDidLayoutSubviews);
  v3 = &v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  v4 = *(void **)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsCaptureInfo];
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_QWORD *)v3 + 8) = 0;
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;

  MultiwayViewController.flashView.getter();
  v6 = (void *)v5;
  v7 = OUTLINED_FUNCTION_25_1(v5, sel_view);
  if (!v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v7, sel_bounds);
  OUTLINED_FUNCTION_152_5();
  OUTLINED_FUNCTION_144_4();

  v8 = MultiwayViewController.insulatingView.getter();
  if (v8)
  {
    v9 = v8;
    v10 = OUTLINED_FUNCTION_25_1((uint64_t)v8, sel_view);
    if (v10)
    {
      objc_msgSend(v10, sel_bounds);
      OUTLINED_FUNCTION_152_5();
      OUTLINED_FUNCTION_144_4();

      goto LABEL_5;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_5:
  v11 = MultiwayViewController.mediaPipSafeAreaFrame.getter();
  MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(v11, v12, v13, v14);
  v15 = (uint64_t)&v0[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  OUTLINED_FUNCTION_1();
  outlined init with take of MultiwayViewController.ViewContent?(v15, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v32, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  OUTLINED_FUNCTION_12_109(v33);
  if (!v16)
  {
    v17 = *(void **)(v15 + 176);
    if (v17)
    {
      type metadata accessor for ButtonGradientBackgroundView();
      if (swift_dynamicCastClass())
      {
        OUTLINED_FUNCTION_54_41(v15, (uint64_t)v30);
        OUTLINED_FUNCTION_54_41((uint64_t)v30, (uint64_t)v31);
        OUTLINED_FUNCTION_12_109(v31);
        if (!v16)
        {
          v18 = *(void **)(v15 + 168);
          if (v18)
          {
            v19 = v17;
            v20 = v18;
            objc_msgSend(v20, sel_frame);
            OUTLINED_FUNCTION_89();
            v22 = OUTLINED_FUNCTION_25_1(v21, sel_view);
            v23 = OUTLINED_FUNCTION_66();
            objc_msgSend(v24, v25, v22, v23);
            v27 = v26;
            v29 = v28;
            OUTLINED_FUNCTION_237_5();
            v35[0] = v27;
            v35[1] = v29;
            v35[2] = v1;
            v35[3] = v2;
            v36 = 0;
            ButtonGradientBackgroundView.buttonFrame.setter((uint64_t)v35);

          }
        }
      }
    }
  }
}

double MultiwayViewController.mediaPipSafeAreaFrame.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double *v19;
  char *v20;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  double MinY;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  unsigned __int8 *v64;
  unsigned int v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double Height;
  id v73;
  double v74;
  uint64_t v75;
  double v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  _BYTE v90[240];
  _BYTE v91[216];
  uint64_t v92[6];
  uint64_t v93;
  id v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v7 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v7, (uint64_t)v91, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v91, (uint64_t)v92, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v8 = 0.0;
  if (getEnumTag for TapInteraction.EventType(v92) == 1)
    return v8;
  v9 = v93;
  v10 = *(void **)(v93 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerDodgingLayoutGuide);
  if (!v10)
    return v8;
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v91, (uint64_t)v90, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v90);
  objc_msgSend(v10, sel_layoutFrame);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = (double *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo];
  swift_beginAccess();
  if (v19[1] == 0.0 && v19[2] == 0.0
    || (v20 = &v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isDisplayedInBanner],
        swift_beginAccess(),
        (*v20 & 1) != 0))
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v91);
    return v8;
  }
  v22 = objc_msgSend(v1, sel_view);
  if (!v22)
    goto LABEL_28;
  v23 = v22;
  v88 = v18;
  v89 = v16;
  v86 = v14;
  v87 = v12;
  objc_msgSend(v22, sel_bounds);
  v82 = v25;
  v83 = v24;
  v80 = v27;
  v81 = v26;

  v28 = objc_msgSend((id)v92[1], sel_view);
  if (!v28)
  {
LABEL_29:
    __break(1u);
    JUMPOUT(0x1BD50675CLL);
  }
  v29 = v28;
  objc_msgSend(v28, sel_frame);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;

  MultiwayViewController.gridViewOverlappingInsets.getter();
  v40 = UIEdgeInsetsInsetRect(v31, v33, v35, v37, v38, v39);
  v78 = v41;
  v79 = v40;
  v42 = v41;
  v44 = v43;
  v77 = v43;
  v85 = v45;
  v95.origin.y = v86;
  v95.origin.x = v87;
  v95.size.height = v88;
  v95.size.width = v89;
  MinY = CGRectGetMinY(v95);
  v47 = v82;
  v48 = v83;
  v96.origin.x = v83;
  v96.origin.y = v82;
  v49 = v80;
  v50 = v81;
  v96.size.width = v81;
  v96.size.height = v80;
  v51 = MinY - CGRectGetMinY(v96);
  if (v51 <= 0.0)
    v51 = 0.0;
  v84 = v51;
  v97.origin.x = v40;
  v97.origin.y = v42;
  v97.size.width = v44;
  v97.size.height = v85;
  v52 = CGRectGetMinY(v97);
  v98.origin.x = v48;
  v98.origin.y = v47;
  v98.size.width = v50;
  v98.size.height = v49;
  v53 = v52 - CGRectGetMinY(v98);
  v54 = v53 - static Layout.MediaPip.padding.getter();
  if (v54 <= 0.0)
    v54 = 0.0;
  if (v84 > v54)
    v54 = v84;
  v76 = v54;
  v99.origin.x = v48;
  v99.origin.y = v47;
  v99.size.width = v50;
  v99.size.height = v49;
  CGRectGetMaxY(v99);
  v55 = v86;
  v56 = v87;
  v100.origin.x = v87;
  v100.origin.y = v86;
  v100.size.height = v88;
  v100.size.width = v89;
  CGRectGetMaxY(v100);
  v101.origin.x = v48;
  v101.origin.y = v47;
  v101.size.width = v50;
  v101.size.height = v49;
  CGRectGetMaxY(v101);
  v102.origin.y = v78;
  v102.origin.x = v79;
  v102.size.width = v77;
  v102.size.height = v85;
  CGRectGetMaxY(v102);
  static Layout.MediaPip.padding.getter();
  v57 = UIEdgeInsetsInsetRect(v56, v55, v89, v88, v76 - v84, 0.0);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  objc_msgSend(v94, sel_frame);
  CGRectGetHeight(v103);
  static Layout.MediaPip.padding.getter();
  v64 = (unsigned __int8 *)(v9 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v65 = *v64;
  if (v65 >> 6)
  {
    if (v65 >> 6 != 1)
    {
      if (v65 == 128)
      {
        v57 = UIEdgeInsetsInsetRect(v57, v59, v61, v63, 0.0, 0.0);
        v59 = v66;
        v61 = v67;
        v63 = v68;
      }
      goto LABEL_24;
    }
    v65 &= 0x3Fu;
  }
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
    __asm { BR              X11 }
LABEL_24:
  v69 = v19[2];
  v70 = static Layout.MediaPip.padding.getter();
  v71 = v69 + v70 + v70 + 1.0;
  v104.origin.x = v57;
  v104.origin.y = v59;
  v104.size.width = v61;
  v104.size.height = v63;
  Height = CGRectGetHeight(v104);
  if (Height < v71)
  {
    v105.origin.x = v57;
    v105.origin.y = v59;
    v105.size.width = v61;
    v105.size.height = v63;
    CGRectGetHeight(v105);
    v106.origin.x = v57;
    v106.origin.y = v59;
    v106.size.width = v61;
    v106.size.height = v63;
    CGRectGetMaxY(v106);
    v107.origin.x = v56;
    v107.origin.y = v55;
    v107.size.height = v88;
    v107.size.width = v89;
    CGRectGetMaxY(v107);
    Height = UIEdgeInsetsInsetRect(v57, v59, v61, v63, 0.0, 0.0);
  }
  v73 = objc_msgSend(v1, sel_view, Height);
  UIRectRoundToViewScale();
  v8 = v74;
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v91);

  return v8;
}

Swift::Void __swiftcall MultiwayViewController.willMove(toParent:)(UIViewController_optional *toParent)
{
  void *v1;
  void *v3;
  UIViewController_optional *v4;
  id v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)OUTLINED_FUNCTION_15_6();
  -[UIViewController_optional willMoveToParentViewController:](&v6, sel_willMoveToParentViewController_, toParent);
  if (toParent)
  {
    v3 = (void *)objc_opt_self();
    v4 = toParent;
    v5 = objc_msgSend(v3, sel_traitCollectionWithUserInterfaceStyle_, 2);
    -[UIViewController_optional setOverrideTraitCollection:forChildViewController:](v4, sel_setOverrideTraitCollection_forChildViewController_, v5, v1);

  }
  OUTLINED_FUNCTION_43_1();
}

uint64_t MultiwayViewController.scheduleUpdate(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  char v18;
  double v19;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchTime();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  result = MultiwayViewController.nextScheduledUpdateInterval(for:)(a1);
  if ((v18 & 1) == 0)
  {
    v19 = *(double *)&result;
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v30 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    MEMORY[0x1C3B72C50](v13, v19);
    v20 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v31 = v10;
    v32 = v20;
    v20(v13, v10);
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _s15ConversationKit11ParticipantVWOcTm_4();
    v22 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v21;
    outlined init with take of Participant((uint64_t)v9, v23 + v22);
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.scheduleUpdate(for:);
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_492;
    v24 = _Block_copy(aBlock);
    swift_release();
    v25 = v33;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    v26 = v36;
    v27 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v28 = (void *)v30;
    MEMORY[0x1C3B735B0](v16, v25, v26, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
    return v32(v16, v31);
  }
  return result;
}

void MultiwayViewController.updateFullScreenFocus(changeSource:defocusAnimationStyle:)(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t ObjectType;
  char v42;
  uint64_t active;
  void *v44;
  Swift::OpaquePointer v45;
  char v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  int EnumTagSinglePayload;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  NSObject *v61;
  int v62;
  _BOOL4 v63;
  void (*v64)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  void (*v74)(_BYTE *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _BYTE *v86;
  _BYTE v87[4];
  int v88;
  uint64_t v89;
  int v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  void (*v104)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[6];
  _BYTE v108[240];
  _BYTE v109[216];
  uint64_t v110;
  uint64_t v111;

  v3 = v2;
  LODWORD(v102) = a2;
  LODWORD(v104) = a1;
  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  v101 = v5;
  MEMORY[0x1E0C80A78](v4);
  v91 = &v87[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v7);
  v99 = &v87[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v10 = MEMORY[0x1E0C80A78](v9);
  v94 = &v87[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x1E0C80A78](v10);
  v93 = &v87[-v13];
  v14 = MEMORY[0x1E0C80A78](v12);
  v96 = &v87[-v15];
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = &v87[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v87[-v19];
  v105 = type metadata accessor for Participant(0);
  v21 = MEMORY[0x1E0C80A78](v105);
  v98 = &v87[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v21);
  v103 = &v87[-v23];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v25 = MEMORY[0x1E0C80A78](v24);
  v92 = &v87[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = MEMORY[0x1E0C80A78](v25);
  v97 = &v87[-v28];
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = &v87[-v30];
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = &v87[-v33];
  MEMORY[0x1E0C80A78](v32);
  v36 = &v87[-v35];
  v37 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v37, (uint64_t)v109, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v109, (uint64_t)&v110, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(&v110) != 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v109, (uint64_t)v108, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    v89 = v111;
    v38 = v111 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v38, (uint64_t)v36, &demangling cache variable for type metadata for Participant?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v108);
    v39 = MultiwayViewController.participantGridState.getter();
    v90 = v39;
    MultiwayViewConstraintsController.participantGridState.setter(v39);
    v95 = v3;
    v40 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 320))(ObjectType, v40);
    MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v42 & 1, 0, 0, 0, 0);
    if (v39)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v105) == 1)
      {
LABEL_33:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v109);
        goto LABEL_34;
      }
      active = MultiwayViewController.mostActiveParticipants.getter();
      MultiwayViewController.activeRemoteParticipants(in:)(active);
      v45._rawValue = v44;
      swift_bridgeObjectRelease();
      ParticipantGridViewController.fullScreenDefocus(to:animationStyle:)(v45, (ConversationKit::ParticipantGridView::AnimationStyle)v102);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ParticipantListViewController.update(with:updateReason:)();
      swift_bridgeObjectRelease();
LABEL_32:
      MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(v90, 1, 0);
      goto LABEL_33;
    }
    v102 = v36;
    MultiwayViewController.isPipped.getter();
    if ((v46 & 1) != 0 && v104 != 2 && (v104 & 1) != 0)
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v109);
LABEL_11:
      v36 = v102;
LABEL_34:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v36, &demangling cache variable for type metadata for Participant?);
      return;
    }
    ConversationController.remoteOneToOneParticipant.getter();
    v47 = v105;
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v105) == 1)
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v109);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v34, &demangling cache variable for type metadata for Participant?);
      goto LABEL_11;
    }
    v48 = v103;
    outlined init with take of Participant((uint64_t)v34, (uint64_t)v103);
    v49 = v100;
    v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v101 + 16);
    v50(v20, &v48[*(int *)(v47 + 20)], v100);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v49);
    v36 = v102;
    outlined init with copy of FeatureEligibility?((uint64_t)v102, (uint64_t)v31, &demangling cache variable for type metadata for Participant?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v47);
    v104 = v50;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v31, &demangling cache variable for type metadata for Participant?);
      v52 = 1;
    }
    else
    {
      v50(v18, &v31[*(int *)(v47 + 20)], v49);
      outlined destroy of AccountUpdateNotice((uint64_t)v31, type metadata accessor for Participant);
      v52 = 0;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v18, v52, 1, v49);
    v53 = *(int *)(v7 + 48);
    v54 = v99;
    v55 = (uint64_t)&v99[v53];
    outlined init with copy of FeatureEligibility?((uint64_t)v20, (uint64_t)v99, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?((uint64_t)v18, v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v49) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v55, 1, v49) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v54, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_28:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v109);
        outlined destroy of AccountUpdateNotice((uint64_t)v103, type metadata accessor for Participant);
        goto LABEL_34;
      }
    }
    else
    {
      v56 = v96;
      outlined init with copy of FeatureEligibility?((uint64_t)v54, (uint64_t)v96, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v55, 1, v49) != 1)
      {
        v72 = v91;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v101 + 32))(v91, v55, v49);
        lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        v88 = dispatch thunk of static Equatable.== infix(_:_:)();
        v73 = (uint64_t)v54;
        v74 = *(void (**)(_BYTE *, uint64_t))(v101 + 8);
        v74(v72, v49);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v74(v56, v49);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v73, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if ((v88 & 1) != 0)
          goto LABEL_28;
LABEL_21:
        v57 = v103;
        if (one-time initialization token for default != -1)
          swift_once();
        v58 = type metadata accessor for Logger();
        __swift_project_value_buffer(v58, (uint64_t)&static Log.default);
        v59 = v97;
        outlined init with copy of FeatureEligibility?((uint64_t)v36, (uint64_t)v97, &demangling cache variable for type metadata for Participant?);
        v60 = (uint64_t)v98;
        _s15ConversationKit11ParticipantVWOcTm_4();
        v61 = Logger.logObject.getter();
        v62 = static os_log_type_t.default.getter();
        v63 = os_log_type_enabled(v61, (os_log_type_t)v62);
        v64 = v104;
        if (v63)
        {
          v65 = swift_slowAlloc();
          v99 = (_BYTE *)swift_slowAlloc();
          v107[0] = (uint64_t)v99;
          *(_DWORD *)v65 = 136315394;
          v66 = v92;
          outlined init with copy of FeatureEligibility?((uint64_t)v59, (uint64_t)v92, &demangling cache variable for type metadata for Participant?);
          v67 = v105;
          v68 = __swift_getEnumTagSinglePayload((uint64_t)v66, 1, v105);
          LODWORD(v101) = v62;
          if (v68 == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v66, &demangling cache variable for type metadata for Participant?);
            v69 = 1;
            v70 = v100;
            v71 = (uint64_t)v93;
          }
          else
          {
            v71 = (uint64_t)v93;
            v70 = v100;
            v64(v93, &v66[*(int *)(v67 + 20)], v100);
            outlined destroy of AccountUpdateNotice((uint64_t)v66, type metadata accessor for Participant);
            v69 = 0;
          }
          __swift_storeEnumTagSinglePayload(v71, v69, 1, v70);
          specialized >> prefix<A>(_:)(v71);
          v76 = v75;
          v78 = v77;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v106 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v76, v78, v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v97, &demangling cache variable for type metadata for Participant?);
          *(_WORD *)(v65 + 12) = 2080;
          v79 = *(int *)(v67 + 20);
          v80 = (uint64_t)v98;
          v81 = (uint64_t)v94;
          v64(v94, &v98[v79], v70);
          __swift_storeEnumTagSinglePayload(v81, 0, 1, v70);
          specialized >> prefix<A>(_:)(v81);
          v83 = v82;
          v85 = v84;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v81, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v106 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v83, v85, v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          outlined destroy of AccountUpdateNotice(v80, type metadata accessor for Participant);
          _os_log_impl(&dword_1BD004000, v61, (os_log_type_t)v101, "Grid fullscreen focused on %s, should be %s", (uint8_t *)v65, 0x16u);
          v86 = v99;
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v86, -1, -1);
          MEMORY[0x1C3B751B8](v65, -1, -1);

          v36 = v102;
          v57 = v103;
        }
        else
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v59, &demangling cache variable for type metadata for Participant?);
          outlined destroy of AccountUpdateNotice(v60, type metadata accessor for Participant);

        }
        ParticipantGridViewController.fullScreenFocus(on:)();
        outlined destroy of AccountUpdateNotice((uint64_t)v57, type metadata accessor for Participant);
        goto LABEL_32;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(_BYTE *, uint64_t))(v101 + 8))(v56, v49);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v54, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_21;
  }
}

_QWORD *MultiwayViewController.setParticipantListState(_:animated:)(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  _QWORD *result;
  uint64_t v12;
  int v13;
  unsigned __int8 *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[6];
  _BYTE v19[264];
  _BYTE v20[216];
  _BYTE v21[216];
  uint64_t v22[27];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v10 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v12, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v21, (uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v22);
    if ((_DWORD)result != 1)
    {
      v13 = a1 & 1;
      memcpy(v20, v22, sizeof(v20));
      v14 = (unsigned __int8 *)(v22[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState);
      result = (_QWORD *)swift_beginAccess();
      if ((((v13 == 0) ^ *v14) & 1) == 0)
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v21, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v19);
        MultiwayViewConstraintsController.participantListState.setter(v13);
        if ((a2 & 1) != 0)
        {
          v15 = (void *)objc_opt_self();
          v16 = swift_allocObject();
          memcpy((void *)(v16 + 16), v20, 0xD8uLL);
          v18[4] = partial apply for closure #1 in MultiwayViewController.setParticipantListState(_:animated:);
          v18[5] = v16;
          v18[0] = MEMORY[0x1E0C809B0];
          v18[1] = 1107296256;
          v18[2] = thunk for @escaping @callee_guaranteed () -> ();
          v18[3] = &block_descriptor_241;
          v17 = _Block_copy(v18);
          outlined retain of MultiwayViewController.ViewContent((uint64_t)v19);
          swift_release();
          objc_msgSend(v15, sel_animateWithDuration_delay_options_animations_completion_, 0, v17, 0, 0.3, 0.0);
          _Block_release(v17);
        }
        MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v21);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  BOOL v53;
  int v54;
  char v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _BYTE v72[80];
  _BYTE v73[80];
  _BYTE v74[80];
  _BYTE v75[80];
  _BYTE v76[80];
  _BYTE v77[80];
  _BYTE v78[80];
  _BYTE v79[80];
  _QWORD v80[10];
  _QWORD v81[10];
  _BYTE v82[80];
  _QWORD v83[10];
  _QWORD v84[10];
  _QWORD v85[9];
  char v86;
  _QWORD v87[9];
  char v88;
  _QWORD v89[10];
  _QWORD v90[10];
  _BYTE v91[40];
  _QWORD v92[4];
  char v93;
  _QWORD v94[4];
  char v95;
  _QWORD v96[4];
  char v97;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v63 - v9;
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v63 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v63 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - v17;
  v19 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a1;
  if (__swift_getEnumTagSinglePayload(a1, 1, v19) != 1
    && __swift_getEnumTagSinglePayload(a2, 1, v19) == 1)
  {
    v22 = v7;
    v23 = v10;
    v24 = v19;
    v25 = v22;
    v26 = ConversationController.isOneToOneModeEnabled.getter();
    v27 = v25;
    v19 = v24;
    v10 = v23;
    v7 = v27;
    if ((v26 & 1) == 0)
    {
      notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v2, 1.0, 1.0);
      return;
    }
  }
  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v18, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, &demangling cache variable for type metadata for Participant?);
    return;
  }
  v69 = v2;
  outlined init with take of Participant((uint64_t)v18, (uint64_t)v21);
  Participant.videoInfo.getter();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v72, (uint64_t)v90, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (!v90[0])
    goto LABEL_58;
  v28 = v90[3];
  outlined release of LinearGradient((uint64_t)v72);
  outlined init with copy of FeatureEligibility?(v71, (uint64_t)v15, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v19) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, &demangling cache variable for type metadata for Participant?);
    v29 = (uint64_t)v70;
  }
  else
  {
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice((uint64_t)v15, type metadata accessor for Participant);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v73, (uint64_t)v89, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    v29 = (uint64_t)v70;
    if (v89[0])
    {
      v30 = v89[3];
      outlined release of LinearGradient((uint64_t)v73);
      if (v30 == v28)
        goto LABEL_13;
    }
  }
  v31 = v69 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  swift_beginAccess();
  v32 = (void *)MEMORY[0x1C3B752C0](v31);
  if (v32)
  {
    objc_msgSend(v32, sel_viewController_fullScreenFocusedParticipantOrientationChanged_, v69, v28);
    swift_unknownObjectRelease();
  }
LABEL_13:
  Participant.isReceivingVideoFrames.getter();
  v68 = v33;
  outlined init with copy of FeatureEligibility?(v71, v29, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v29, 1, v19) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v29, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice(v29, type metadata accessor for Participant);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v74, (uint64_t)v87, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v87[0])
    {
      v34 = v87[5];
      v35 = v87[6];
      v36 = v87[7];
      v37 = v87[8];
      v38 = v88;
      outlined release of LinearGradient((uint64_t)v74);
      LODWORD(v70) = 0;
      v67 = v38 & 1;
      goto LABEL_18;
    }
  }
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v67 = 0;
  LODWORD(v70) = 1;
LABEL_18:
  Participant.videoInfo.getter();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v75, (uint64_t)v85, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v85[0])
  {
    v63 = v37;
    v64 = v36;
    v65 = v35;
    v66 = v10;
    v39 = v34;
    v40 = v85[5];
    v41 = v85[6];
    v42 = v85[7];
    v43 = v85[8];
    v44 = v86;
    outlined release of LinearGradient((uint64_t)v75);
    if ((v70 & 1) != 0)
    {
      LODWORD(v70) = 0;
    }
    else
    {
      v94[0] = v40;
      v94[1] = v41;
      v94[2] = v42;
      v94[3] = v43;
      v95 = v44 & 1;
      v92[0] = v39;
      v92[1] = v65;
      v92[2] = v64;
      v92[3] = v63;
      v93 = v67;
      LODWORD(v70) = static AspectRatio.== infix(_:_:)((uint64_t)v92, (uint64_t)v94);
    }
    v10 = v66;
  }
  outlined init with copy of FeatureEligibility?(v71, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v19) == 1)
  {
    v45 = (uint64_t)v10;
    v46 = (uint64_t)v7;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    v47 = (uint64_t)v10;
    v46 = (uint64_t)v7;
    Participant.videoInfo.getter();
    outlined destroy of AccountUpdateNotice(v47, type metadata accessor for Participant);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v76, (uint64_t)v84, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v84[0])
    {
      v48 = v84[3];
      outlined release of LinearGradient((uint64_t)v76);
      v49 = 0;
      goto LABEL_29;
    }
  }
  v48 = 0;
  v49 = 1;
LABEL_29:
  Participant.videoInfo.getter();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v77, (uint64_t)v83, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  v50 = v83[0];
  v51 = v83[0] == 0;
  if (v83[0])
  {
    v52 = v83[3];
    outlined release of LinearGradient((uint64_t)v77);
    if ((v49 & 1) == 0)
    {
LABEL_31:
      if (v50)
        v53 = v48 == v52;
      else
        v53 = 0;
      v51 = v53;
    }
  }
  else
  {
    v52 = 0;
    if ((v49 & 1) == 0)
      goto LABEL_31;
  }
  outlined init with copy of FeatureEligibility?(v71, v46, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload(v46, 1, v19) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v46, &demangling cache variable for type metadata for Participant?);
    v54 = 2;
  }
  else
  {
    Participant.isReceivingVideoFrames.getter();
    v56 = v55;
    outlined destroy of AccountUpdateNotice(v46, type metadata accessor for Participant);
    v54 = v56 & 1;
  }
  Participant.isReceivingVideoFrames.getter();
  if (v54 == 2 || (v70 & v51 & 1) == 0)
    v58 = 1;
  else
    v58 = v57 ^ (v54 != 0);
  Participant.videoInfo.getter();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v78, (uint64_t)v81, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
  if (v81[0]
    && (memcpy(v82, v81, 0x4AuLL),
        outlined release of LinearGradient((uint64_t)v78),
        outlined init with take of AspectRatio((uint64_t)&v82[40], (uint64_t)v91),
        (v68 & v58 & 1) != 0))
  {
    Participant.videoInfo.getter();
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v79, (uint64_t)v80, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v80[0] && (v59 = v80[3], outlined release of LinearGradient((uint64_t)v79), (v59 | 2) != 3))
    {
      outlined init with take of AspectRatio((uint64_t)v91, (uint64_t)v96);
      v60 = 1.0;
      v61 = 1.0;
      v62 = v69;
      if ((v97 & 1) == 0)
      {
        v60 = *(double *)&v96[2];
        v61 = *(double *)&v96[3];
      }
    }
    else
    {
      outlined init with take of AspectRatio((uint64_t)v91, (uint64_t)v96);
      v60 = 1.0;
      v61 = 1.0;
      v62 = v69;
      if ((v97 & 1) == 0)
      {
        v60 = *(double *)v96;
        v61 = *(double *)&v96[1];
      }
    }
  }
  else
  {
    if (__swift_getEnumTagSinglePayload(v71, 1, v19) != 1)
      goto LABEL_58;
    Participant.videoInfo.getter();
    outlined release of LinearGradient((uint64_t)v79);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v79, (uint64_t)v80, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
    if (v80[0])
      goto LABEL_58;
    v60 = 1.0;
    v61 = 1.0;
    v62 = v69;
  }
  notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(v62, v60, v61);
LABEL_58:
  outlined destroy of AccountUpdateNotice((uint64_t)v21, type metadata accessor for Participant);
}

void MultiwayViewController.updateOneToOneShutterButtonTapability(for:isMomentsAvailable:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t *v13;
  id v14;
  _BYTE v15[32];
  _BYTE v16[216];
  uint64_t v17[27];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v10, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v17) != 1)
  {
    v11 = *(void **)(v10 + 120);
    if (v11)
    {
      v12 = v11;
      ConversationController.remoteOneToOneParticipant.getter();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
      {

        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
        if ((static UUID.== infix(_:_:)() & 1) != 0)
        {
          if ((a2 & 1) != 0)
          {
            if (one-time initialization token for shutterButtonEnabled != -1)
              swift_once();
            v13 = &static Colors.ParticipantViews.shutterButtonEnabled;
          }
          else
          {
            if (one-time initialization token for shutterButtonDisabled != -1)
              swift_once();
            v13 = &static Colors.ParticipantViews.shutterButtonDisabled;
          }
          v14 = (id)*v13;
          objc_msgSend(v12, sel_setTintColor_, v14);

          outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
        }
        else
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);

        }
      }
    }
  }
}

void MultiwayViewController.notifyLocalParticipantAspectRatioChanged()()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = v0;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    MultiwayViewController.isPipped.getter();
    if ((v2 & 1) != 0)
    {
      v3 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
      swift_beginAccess();
      v4 = (void *)MEMORY[0x1C3B752C0](v3);
      if (v4)
      {
        v5 = v4;
        if ((objc_msgSend(v4, sel_respondsToSelector_, sel_viewController_localParticipantAspectRatioChanged_) & 1) != 0)
        {
          MultiwayViewController.pipContentAspectRatioForOneToOneLocalPreview.getter();
          objc_msgSend(v5, sel_viewController_localParticipantAspectRatioChanged_, v1);
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t notifyDelegates #1 (fullScreenFocusedParticipantAspectRatio:) in MultiwayViewController.notifyFullScreenFocusedParticipantChanged(oldFullScreenFocusedParticipant:newFullScreenFocusedParticipant:)(uint64_t a1, double a2, double a3)
{
  _BOOL4 v6;
  uint64_t v7;
  BOOL *v8;
  uint64_t v9;
  void *v10;
  void (**v11)(uint64_t);
  uint64_t result;
  void (*v13)(uint64_t);
  uint64_t v14;

  v6 = MultiwayViewController.participantGridState.getter();
  v7 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentFullScreenFocusedAspectRatio;
  swift_beginAccess();
  *(double *)v7 = a2;
  *(double *)(v7 + 8) = a3;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = (BOOL *)(a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mostRecentGridIsFullScreen);
  swift_beginAccess();
  *v8 = !v6;
  v9 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate;
  swift_beginAccess();
  v10 = (void *)MEMORY[0x1C3B752C0](v9);
  if (v10)
  {
    objc_msgSend(v10, sel_viewController_fullScreenFocusedParticipantAspectRatioChanged_participantGridIsFullScreen_, a1, !v6, a2, a3);
    swift_unknownObjectRelease();
  }
  v11 = (void (**)(uint64_t))(a1
                                      + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler);
  result = swift_beginAccess();
  v13 = *v11;
  if (*v11)
  {
    v14 = swift_retain();
    v13(v14);
    return outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v13);
  }
  return result;
}

void MultiwayViewController.updateMutedTalkerUI(mutedTalker:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(void);
  _QWORD *v7;
  char v8;
  _QWORD *v9;
  void (*v10)(uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  uint64_t (*v17)(void);
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(void);
  _QWORD *v21;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    v4 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v6 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v4) + 0x128);
    v7 = v4;
    LOBYTE(v6) = v6();

    if ((v6 & 1) != 0)
    {
      MultiwayViewController.isPipped.getter();
      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD **)(v2 + v3);
        v10 = *(void (**)(uint64_t))((*v5 & *v9) + 0x160);
        v11 = v9;
        v12 = 1;
LABEL_8:
        v21 = v11;
        v10(v12);
LABEL_11:

      }
    }
  }
  else
  {
    MultiwayViewController.isPipped.getter();
    v13 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
    v14 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
    v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    if ((v16 & 1) == 0)
    {
      v20 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v14) + 0x178);
      v21 = v14;
      v20();
      goto LABEL_11;
    }
    v17 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v14) + 0x128);
    v18 = v14;
    LOBYTE(v17) = v17();

    if ((v17 & 1) != 0)
    {
      v19 = *(_QWORD **)(v2 + v13);
      v10 = *(void (**)(uint64_t))((*v15 & *v19) + 0x160);
      v11 = v19;
      v12 = 0;
      goto LABEL_8;
    }
  }
}

_QWORD *MultiwayViewController.updateLocalParticipantAspectRatio()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *result;
  uint64_t v11;
  __int128 v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  char v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[240];
  _BYTE v24[80];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;
  char v28;
  _OWORD v29[2];
  char v30;
  _BYTE v31[40];
  _BYTE v32[216];
  uint64_t v33[27];

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v11 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v32, (uint64_t)v33, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    result = (_QWORD *)getEnumTag for TapInteraction.EventType(v33);
    if ((_DWORD)result != 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v32, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      swift_beginAccess();
      _s15ConversationKit11ParticipantVWOcTm_4();
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v23);
      Participant.videoInfo.getter();
      outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for Participant);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v24, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for Participant.VideoInfo?);
      v12 = 0uLL;
      if (v25[0])
      {
        v21 = v26;
        v22 = v27;
        v13 = v28;
        v14 = ConversationController.isOneToOneModeEnabled.getter();
        outlined release of LinearGradient((uint64_t)v24);
        if ((v14 & 1) != 0)
        {
          v15 = v13 & 1;
          v12 = v21;
          v16 = v22;
        }
        else
        {
          v15 = 1;
          v16 = 0uLL;
          v12 = 0uLL;
        }
      }
      else
      {
        v15 = 1;
        v16 = 0uLL;
      }
      v29[0] = v12;
      v29[1] = v16;
      v30 = v15;
      v17 = v33[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio;
      swift_beginAccess();
      outlined init with take of AspectRatio(v17, (uint64_t)v31);
      if (!static AspectRatio.== infix(_:_:)((uint64_t)v29, (uint64_t)v31))
      {
        MultiwayViewConstraintsController.localParticipantAspectRatio.setter((uint64_t)v29);
        v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
        ObjectType = swift_getObjectType();
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 320))(ObjectType, v18);
        MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v20 & 1, 0, 0, 0, 0);
      }
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v32);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *MultiwayViewController.setLocalParticipantState(_:animated:)(unsigned int a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *result;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  _BYTE *v34;
  ConversationKit::MultiwayViewConstraintsController::ShutterButtonState *v35;
  ConversationKit::MultiwayViewConstraintsController::ShutterButtonState v36;
  BOOL v37;
  uint64_t v38;
  BOOL v39;
  unsigned __int8 v40;
  char *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  id v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t active;
  uint64_t v58;
  uint64_t ObjectType;
  char v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  char *v66;
  void *v67;
  char *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  _BYTE v82[288];
  _BYTE v83[216];
  id v84[27];
  uint64_t v85[28];

  v3 = v2;
  v81 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v79 = (uint64_t)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v78 = (uint64_t)&v75 - v8;
  v80 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v80);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (one-time initialization token for logger != -1)
    swift_once();
  v15 = type metadata accessor for Logger();
  __swift_project_value_buffer(v15, (uint64_t)logger);
  v16 = Logger.logObject.getter();
  v17 = static os_log_type_t.default.getter();
  v18 = os_log_type_enabled(v16, v17);
  v77 = v10;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v75 = (char *)v11;
    v20 = v19;
    v21 = swift_slowAlloc();
    v76 = v3;
    v22 = v21;
    v85[0] = v21;
    *(_DWORD *)v20 = 136315394;
    LOBYTE(v84[0]) = v81;
    v23 = String.init<A>(reflecting:)();
    v84[0] = (id)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v84[0]) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v16, v17, "setLocalParticipantState %s animated: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    v25 = v22;
    v3 = v76;
    MEMORY[0x1C3B751B8](v25, -1, -1);
    v26 = v20;
    v11 = (uint64_t)v75;
    MEMORY[0x1C3B751B8](v26, -1, -1);
  }

  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v27 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v29 = (uint64_t)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v29, (uint64_t)v83, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v83, (uint64_t)v84, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType((uint64_t *)v84);
  v30 = v81;
  if ((_DWORD)result != 1)
  {
    memcpy(v85, v84, 0xD8uLL);
    v31 = (uint64_t)v84[6];
    v32 = (unsigned __int8 *)v84[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState;
    swift_beginAccess();
    v33 = *v32;
    if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(*v32, v30) & 1) == 0
      || (v34 = (_BYTE *)(v31
                        + OBJC_IVAR___CNKFaceTimeConstraintsController_shouldForceAllowNextLocalParticipantStateUpdate),
          result = (_QWORD *)swift_beginAccess(),
          *v34 == 1))
    {
      v75 = (char *)v32;
      v35 = (ConversationKit::MultiwayViewConstraintsController::ShutterButtonState *)(v31
                                                                                     + OBJC_IVAR___CNKFaceTimeConstraintsController_shutterButtonState);
      swift_beginAccess();
      v36 = *v35;
      if (v33 < 0x81 || v30 == 129)
      {
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v83, (uint64_t)v82, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v82);
        v37 = 0;
      }
      else
      {
        v37 = v30 < 0x81u;
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v83, (uint64_t)v82, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v82);
        MultiwayViewController.testing_requestingLocalPreviewMinimize()();
      }
      ParticipantListViewController.participantCount.getter();
      v39 = v38 > 0;
      if (MultiwayViewConstraintsController.LocalParticipantState.collides(with:)(v36))
        MultiwayViewConstraintsController.shutterButtonState.setter(v36 ^ 1);
      if ((static MultiwayViewConstraintsController.LocalParticipantState.== infix(_:_:)(v30, v33) & 1) != 0)
      {
LABEL_29:
        v50 = v81;
        if (v33 == 128)
        {
          if (v81 == 128)
            goto LABEL_38;
          v51 = (uint64_t)v84[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
          swift_beginAccess();
          v52 = v78;
          outlined init with copy of FeatureEligibility?(v51, v78, &demangling cache variable for type metadata for Participant?);
          v53 = v80;
          if (__swift_getEnumTagSinglePayload(v52, 1, v80) == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v52, &demangling cache variable for type metadata for Participant?);
          }
          else
          {
            v54 = v52;
            v55 = (uint64_t)v77;
            outlined init with take of Participant(v54, (uint64_t)v77);
            if (*(_QWORD *)(v55 + *(int *)(v53 + 28)))
            {
              v56 = v55;
            }
            else
            {
              active = MultiwayViewController.mostActiveParticipants.getter();
              ParticipantGridViewController.defocus(to:)((Swift::OpaquePointer)active);
              swift_bridgeObjectRelease();
              v56 = (uint64_t)v77;
            }
            outlined destroy of AccountUpdateNotice(v56, type metadata accessor for Participant);
          }
        }
        if ((v50 & 0xC0) == 0x40)
        {
LABEL_39:
          MultiwayViewConstraintsController.localParticipantState.setter(v50);
          LocalParticipantView.configureControls(_:)(v50);
          MultiwayViewController.updateLocalParticipantControls()();
          v58 = *(_QWORD *)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
          ObjectType = swift_getObjectType();
          v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 320))(ObjectType, v58);
          v61 = (_BYTE *)swift_allocObject();
          memcpy(v61 + 16, v85, 0xD8uLL);
          v61[232] = v39;
          v61[233] = v50;
          v62 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v63 = swift_allocObject();
          *(_QWORD *)(v63 + 16) = v62;
          *(_BYTE *)(v63 + 24) = v50;
          *(_BYTE *)(v63 + 25) = v37;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v83);
          swift_retain();
          MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v60 & 1, partial apply for closure #1 in MultiwayViewController.setLocalParticipantState(_:animated:), v61, partial apply for closure #2 in MultiwayViewController.setLocalParticipantState(_:animated:), v63);
          swift_release();
          swift_release();
          swift_release();
          if ((v50 & 0x80) != 0)
          {
            if (v50 != 128)
            {
              v72 = (_QWORD *)(v31 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
              swift_beginAccess();
              if (!*v72)
              {
                MultiwayViewController.effectsBrowserIsOpaque.getter();
                if ((v73 & 1) != 0)
                  v74 = 2;
                else
                  v74 = 1;
                objc_msgSend(v3, sel_setControlsState_animated_, v74, 1);
              }
            }
            v69 = 0;
          }
          else
          {
            v64 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
            v65 = objc_msgSend(v64, sel_userInterfaceIdiom);

            if (v65 == (id)1 && (MultiwayViewController.constraintController.getter(), v66))
            {
              v67 = v66;
              v68 = &v66[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
              swift_beginAccess();
              LODWORD(v68) = *v68;

              v69 = (_DWORD)v68 != 2;
            }
            else
            {
              v69 = 1;
            }
            if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
            {
              v70 = (uint64_t)v84[1]
                  + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
              swift_beginAccess();
              v71 = v79;
              outlined init with copy of FeatureEligibility?(v70, v79, &demangling cache variable for type metadata for Participant?);
              LODWORD(v70) = __swift_getEnumTagSinglePayload(v71, 1, v80);
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v71, &demangling cache variable for type metadata for Participant?);
              if ((_DWORD)v70 == 1)
                v69 = 0;
            }
          }
          ParticipantViewDragController.dragEnabled.setter(v69);
          MultiwayViewController.updateIsCaptionsViewDragEnabled()();
          if (v33 > 0x80 || v50 >= 0x81u)
            MultiwayViewController.updateViewVisibility(localParticipantState:)(*v75);
          MultiwayViewController.updateShouldShowReactionPickerTipView()();
          MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
          return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v83);
        }
LABEL_38:
        v82[0] = 0;
        MultiwayViewController.reactionsState.setter(v82, &OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState, (void (*)(char *))MultiwayViewController.reactionsState.didset);
        goto LABEL_39;
      }
      v40 = v81;
      if ((v33 & 0xC0) == 0x80)
      {
        if (v33 == 129)
        {
          v41 = &v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_windowAspectRatioHandler];
          swift_beginAccess();
          v42 = *(void (**)(uint64_t))v41;
          if (*(_QWORD *)v41)
          {
            v43 = swift_retain();
            v42(v43);
            outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v42);
          }
        }
        else if (v33 != 128)
        {
          goto LABEL_23;
        }
        MultiwayViewController.hideEffectsBrowser()();
      }
LABEL_23:
      MultiwayViewController.hideZoomControlIfNeeded()();
      if (v40 == 128)
      {
        v44 = (char *)v84[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled;
        swift_beginAccess();
        if ((*v44 & 1) == 0)
        {
          if (v84[9])
          {
            v45 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v84[9];
            v76 = v3;
            v46 = *(uint64_t (**)(void))(v45 + 168);
            v47 = v84[9];
            v48 = v46();
            v3 = v76;
            v49 = v48;

          }
          else
          {
            v49 = 0;
          }
          *v44 = v49 & 1;
          InCallControlsViewController.updateEffectsButton()();
        }
      }
      goto LABEL_29;
    }
  }
  return result;
}

double MultiwayViewController.rotate(portraitRect:for:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  double v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;

  v10 = a2;
  switch(a1)
  {
    case 0:
      v11 = objc_msgSend(v5, sel_view);
      if (!v11)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x1BD50956CLL);
      }
      v12 = v11;
      objc_msgSend(v11, sel_bounds);

      v10 = a3;
      break;
    case 1:
      return v10;
    case 2:
      v13 = objc_msgSend(v5, sel_view);
      if (!v13)
        goto LABEL_16;
      v14 = v13;
      objc_msgSend(v13, sel_bounds);
      v16 = v15;

      return v16 - a5 - a3;
    case 3:
      v17 = objc_msgSend(v5, sel_view);
      if (!v17)
        goto LABEL_17;
      v18 = v17;
      objc_msgSend(v17, sel_bounds);
      v20 = v19;

      v21 = objc_msgSend(v5, sel_view);
      if (!v21)
        goto LABEL_18;
      v22 = v21;
      v10 = v20 - a4 - a2;
      objc_msgSend(v21, sel_bounds);

      break;
    default:
      if (one-time initialization token for default != -1)
        swift_once();
      v23 = type metadata accessor for Logger();
      __swift_project_value_buffer(v23, (uint64_t)&static Log.default);
      v24 = Logger.logObject.getter();
      v25 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1BD004000, v24, v25, "Unknown enum case", v26, 2u);
        MEMORY[0x1C3B751B8](v26, -1, -1);
      }

      return 0.0;
  }
  return v10;
}

Swift::Void __swiftcall MultiwayViewController.removeAllEffectsObjects()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void **v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  char *v28;
  uint64_t v29;
  _BYTE v30[216];
  uint64_t v31[27];
  _BYTE v32[216];
  uint64_t v33[27];
  _BYTE v34[216];
  uint64_t v35[27];
  _BYTE v36[216];
  uint64_t v37[33];
  _BYTE v38[216];
  uint64_t v39[28];

  OUTLINED_FUNCTION_93();
  v3 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_301_3(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  specialized EffectsHandler.wipeEffectsState()();
  v8 = (void **)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects);
  OUTLINED_FUNCTION_2_0();
  v9 = *v8;
  *v8 = 0;

  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v38);
  OUTLINED_FUNCTION_5_131((uint64_t)v38, (uint64_t)v39);
  if (getEnumTag for TapInteraction.EventType(v39) != 1)
  {
    v11 = (void *)v10[8];
    if (v11)
    {
      v12 = v11;
      v13 = OUTLINED_FUNCTION_14_9(v12, sel_willMoveToParentViewController_);
      OUTLINED_FUNCTION_25_1((uint64_t)v13, sel_removeFromParentViewController);
      v14 = objc_msgSend(v12, sel_isViewLoaded);
      if (!(_DWORD)v14)
      {
LABEL_7:
        OUTLINED_FUNCTION_14_9(v12, sel_didMoveToParentViewController_);

        goto LABEL_8;
      }
      v15 = OUTLINED_FUNCTION_25_1((uint64_t)v14, (const char *)&selRef_presentHUDForCurrentContext);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, (SEL)0x1F2E876C8);

        goto LABEL_7;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_8:
  OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v36);
  OUTLINED_FUNCTION_5_131((uint64_t)v36, (uint64_t)v37);
  OUTLINED_FUNCTION_12_109(v37);
  if (v17)
    goto LABEL_14;
  v18 = (void *)v10[10];
  if (!v18)
    goto LABEL_14;
  v19 = v18;
  MultiwayViewController.hideEffectsBrowser()();
  OUTLINED_FUNCTION_14_9(v19, sel_willMoveToParentViewController_);
  objc_msgSend(v19, sel_removeFromParentViewController);
  v20 = objc_msgSend(v19, sel_isViewLoaded);
  if ((_DWORD)v20)
  {
    v21 = OUTLINED_FUNCTION_2_11((uint64_t)v20, sel_view);
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, sel_removeFromSuperview);

      goto LABEL_13;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_13:
  OUTLINED_FUNCTION_14_9(v19, sel_didMoveToParentViewController_);

LABEL_14:
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v34);
  OUTLINED_FUNCTION_5_131((uint64_t)v34, (uint64_t)v35);
  OUTLINED_FUNCTION_12_109(v35);
  if (!v17)
  {
    v23 = (void *)v10[8];
    v10[8] = 0;

  }
  OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v32);
  OUTLINED_FUNCTION_5_131((uint64_t)v32, (uint64_t)v33);
  OUTLINED_FUNCTION_12_109(v33);
  if (!v17)
  {
    v24 = (void *)v10[10];
    v10[10] = 0;

  }
  swift_endAccess();
  OUTLINED_FUNCTION_5_131((uint64_t)v10, (uint64_t)v30);
  OUTLINED_FUNCTION_5_131((uint64_t)v30, (uint64_t)v31);
  OUTLINED_FUNCTION_12_109(v31);
  if (!v17)
  {
    v25 = (char *)v10[6];
    v26 = *(_QWORD *)&v25[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 32];
    __swift_project_boxed_opaque_existential_1(&v25[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout], *(_QWORD *)&v25[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24]);
    v27 = *(void (**)(uint64_t))(v26 + 112);
    v28 = v25;
    v29 = OUTLINED_FUNCTION_38_21();
    v27(v29);

  }
  OUTLINED_FUNCTION_52_1();
}

void MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(char a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  int v16;
  uint64_t v17;
  id v18;
  void *v19;
  id *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id *v25;
  _BYTE v26[216];
  uint64_t v27[27];
  _BYTE v28[216];
  uint64_t v29[30];
  _BYTE v30[216];
  uint64_t v31[27];

  v5 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = &v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled];
  swift_beginAccess();
  *v8 = 1;
  if ((a1 & 1) != 0)
    specialized EffectsHandler.setUpEffectsObjectsIfNecessary()();
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v10 = 0;
  if (getEnumTag for TapInteraction.EventType(v31) != 1)
  {
    v11 = *(void **)(v9 + 80);
    if (v11)
    {
      objc_opt_self();
      v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
        v12 = v11;
    }
    else
    {
      v10 = 0;
    }
  }
  outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v28, (uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v29) == 1 || (v13 = *(void **)(v9 + 64)) == 0)
  {
    v14 = 0;
    if ((a2 & 1) == 0)
      goto LABEL_19;
  }
  else
  {
    objc_opt_self();
    v14 = (void *)swift_dynamicCastObjCClass();
    if (v14)
      v15 = v13;
    if ((a2 & 1) == 0)
    {
LABEL_19:
      v16 = 0;
      if ((a1 & 1) != 0)
        goto LABEL_20;
LABEL_18:
      v17 = 1;
      goto LABEL_21;
    }
  }
  outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v26, (uint64_t)v27, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v27) == 1 || !*(_QWORD *)(v9 + 80))
    goto LABEL_19;
  v16 = 1;
  if ((a1 & 1) == 0)
    goto LABEL_18;
LABEL_20:
  v17 = 2;
LABEL_21:
  objc_msgSend(v2, sel_setControlsState_animated_, v17, 1);
  if ((a1 & 1) == 0)
  {
    if (v16)
      MultiwayViewController.unfocusFocusedParticipant()();
    if (v10)
    {
      v23 = objc_msgSend(v10, sel_view);
      if (!v23)
        goto LABEL_46;
      v24 = v23;
      objc_msgSend(v23, sel_setAlpha_, 0.0);

    }
    if (!v14)
    {
LABEL_40:

      return;
    }
    if (!objc_msgSend(v14, sel_effectsState)
      && (v25 = (id *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects],
          swift_beginAccess(),
          *v25)
      && objc_msgSend(*v25, sel_mode)
      && *v25)
    {
      v22 = *v25;
      objc_msgSend(v22, sel_setMode_, 0);

    }
    else
    {
      v22 = v14;
    }
    v14 = v10;
LABEL_39:

    v10 = v14;
    goto LABEL_40;
  }
  if (v16)
  {
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_4();
    MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)((uint64_t)v7, 1);
    outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
  }
  if (!v10)
    goto LABEL_27;
  v18 = objc_msgSend(v10, sel_view);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setAlpha_, 1.0);

LABEL_27:
    v20 = (id *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_avcEffects];
    swift_beginAccess();
    if (*v20)
    {
      v21 = *v20;
      objc_msgSend(v21, sel_setMode_, 1);

    }
    v22 = v10;
    goto LABEL_39;
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

uint64_t MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(unsigned __int8 *a1, unsigned int a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t (*v33)(void);
  id v34;
  unsigned __int8 v35;
  uint64_t v36;
  unsigned __int8 *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  NSObject *v52;
  int v53;
  uint8_t *v54;
  uint8_t *v55;
  unint64_t v56;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t (*v67)(void);
  _QWORD *v68;
  char v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(void);
  _QWORD *v76;
  uint64_t ObjectType;
  uint64_t v78;
  id v79;
  char v80;
  int v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  int v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  char *v112;
  os_log_t v113;
  uint64_t v114;
  uint64_t v115[3];
  uint64_t v116[3];
  uint64_t v117;
  uint64_t v118[6];
  _BYTE v119[240];
  _BYTE v120[216];
  uint64_t v121[27];
  uint64_t v122[28];

  v108 = a3;
  v110 = a2;
  v106 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v106);
  v107 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v104 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v105 = (uint64_t)&v100 - v8;
  v9 = type metadata accessor for Logger();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v113) = *a1;
  if (one-time initialization token for logger != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)logger);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  v19 = os_log_type_enabled(v17, v18);
  v111 = v9;
  v112 = v12;
  if (v19)
  {
    v109 = v10;
    v20 = swift_slowAlloc();
    v103 = swift_slowAlloc();
    v122[0] = v103;
    *(_DWORD *)v20 = 136315394;
    LOBYTE(v121[0]) = (_BYTE)v113;
    v21 = String.init<A>(reflecting:)();
    v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    if (v110 <= 0xFBu)
    {
      LOBYTE(v121[0]) = v110;
      v24 = String.init<A>(reflecting:)();
      v23 = v25;
    }
    else
    {
      v23 = 0xE300000000000000;
      v24 = 7104878;
    }
    v121[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v24, v23, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v17, v18, "setConversationBannerState %s localParticipantState %s", (uint8_t *)v20, 0x16u);
    v26 = v103;
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v26, -1, -1);
    MEMORY[0x1C3B751B8](v20, -1, -1);

    v9 = v111;
    v12 = v112;
    v10 = v109;
  }
  else
  {

  }
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_12;
  }
  v28 = v114 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v28, (uint64_t)v120, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v120, (uint64_t)v121, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = getEnumTag for TapInteraction.EventType(v121);
  if ((_DWORD)result == 1)
    return result;
  memcpy(v122, v121, 0xD8uLL);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v120, (uint64_t)v119, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v119);
  if (one-time initialization token for conversationControls != -1)
    goto LABEL_81;
LABEL_12:
  v30 = __swift_project_value_buffer(v9, (uint64_t)&static Logger.conversationControls);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  v31 = v121[3];
  v32 = (id *)(v121[3] + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
  swift_beginAccess();
  v33 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v32) + 0x840);
  v34 = *v32;
  v35 = v33();

  if ((_DWORD)v113)
  {
LABEL_13:
    v102 = v31;
    v109 = v10;
    v36 = v121[6];
    v37 = (unsigned __int8 *)(v121[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    swift_beginAccess();
    LODWORD(v103) = *v37;
    v38 = (void *)v121[4];
    v39 = v121[5];
    v40 = swift_allocObject();
    *(_BYTE *)(v40 + 16) = (_BYTE)v113;
    v41 = (char *)(v40 + 16);
    v42 = v36 + OBJC_IVAR___CNKFaceTimeConstraintsController_bannerControlsSize;
    swift_beginAccess();
    if (*(_BYTE *)(v42 + 16) == 1 && !v38)
      *v41 = 0;
    if (one-time initialization token for shared != -1)
      swift_once();
    if (((*(uint64_t (**)(void))(*(_QWORD *)static Defaults.shared + 656))() & 1) != 0)
    {
      v43 = 1;
      *v41 = 1;
    }
    else
    {
      v43 = *v41;
    }
    LOBYTE(v116[0]) = v43;
    MultiwayViewConstraintsController.inCallConversationBannerState.setter((uint64_t)v116);
    if ((MultiwayViewController.isOnScreen.getter() & 1) == 0
      || (MultiwayViewController.isPipped.getter(), (v44 & 1) != 0))
    {
LABEL_57:
      if (v38)
      {
        ObjectType = swift_getObjectType();
        v78 = v114;
        v79 = v38;
        v80 = ConversationController.isOneToOneModeEnabled.getter();
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 24))(v80 & 1, ObjectType, v39);

        swift_beginAccess();
        LOBYTE(v115[0]) = *v41;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v115, ObjectType, v39);
      }
      else
      {
        swift_beginAccess();
        InCallBannerHostViewController.beginHUDTransition(isDismissed:)(*v41 == 0);
        v78 = v114;
      }
      v81 = v103;
      v82 = v38 != 0;
      MultiwayViewController.updateChangeLayoutButtonVisibilityIfNeeded()();
      MultiwayViewController.updateDeskViewButtonVisibility()();
      MultiwayViewController.updateTopCornerButtonsStackViewVisibility(animated:)(1);
      v83 = *(_QWORD *)(v78 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
      v84 = swift_getObjectType();
      v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 320))(v84, v83);
      v86 = swift_allocObject();
      *(_BYTE *)(v86 + 16) = v82;
      memcpy((void *)(v86 + 24), v122, 0xD8uLL);
      *(_QWORD *)(v86 + 240) = v40;
      swift_unknownObjectWeakInit();
      v87 = swift_allocObject();
      *(_BYTE *)(v87 + 16) = v82;
      memcpy((void *)(v87 + 24), v122, 0xD8uLL);
      *(_QWORD *)(v87 + 240) = v40;
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v121);
      swift_retain();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v120);
      swift_retain();
      v88 = v108 & 1;
      MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(v108 & 1, v85 & 1, partial apply for closure #1 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:), v86, partial apply for closure #2 in MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:), v87);
      swift_release();
      swift_release();
      swift_unknownObjectWeakDestroy();
      if (v110 <= 0xFBu)
        MultiwayViewController.setLocalParticipantState(_:animated:)(v110, v88);
      v89 = MultiwayViewController.localParticipantState()();
      MultiwayViewController.setLocalParticipantState(_:animated:)(v89, v88);
      if (v81)
      {
        swift_beginAccess();
        if (!*v41)
        {
          MultiwayViewController.hideEffectsBrowser()();
          v90 = v121[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
          swift_beginAccess();
          v91 = v105;
          outlined init with copy of FeatureEligibility?(v90, v105, &demangling cache variable for type metadata for Participant?);
          LODWORD(v90) = __swift_getEnumTagSinglePayload(v91, 1, v106);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v91, &demangling cache variable for type metadata for Participant?);
          if ((_DWORD)v90 == 1)
          {
            v92 = (_BYTE *)(v36 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
            swift_beginAccess();
            if ((*v92 & 0xFE) != 0x80)
            {
              v93 = v104;
              __swift_storeEnumTagSinglePayload(v104, 1, 1, v106);
              ParticipantGridViewController.select(_:forFocusing:)();
              outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v93, &demangling cache variable for type metadata for Participant?);
            }
          }
        }
        swift_beginAccess();
        v94 = *v41;
        if (v81 == 2)
        {
          v95 = v111;
          v96 = v109;
          if (v94 == 2)
            goto LABEL_78;
          if (*v41)
            goto LABEL_77;
        }
        else
        {
          v95 = v111;
          v96 = v109;
          if (*v41)
          {
            if (v94 != 1)
              goto LABEL_77;
            goto LABEL_78;
          }
        }
      }
      else
      {
        swift_beginAccess();
        v95 = v111;
        v96 = v109;
        if (!*v41)
          goto LABEL_78;
      }
      swift_beginAccess();
      v97 = (uint64_t)v107;
      _s15ConversationKit11ParticipantVWOcTm_4();
      Participant.isActiveWithVideo.getter();
      v99 = v98;
      outlined destroy of AccountUpdateNotice(v97, type metadata accessor for Participant);
      if ((v99 & 1) == 0)
LABEL_77:
        MultiwayViewController.dodgeMediaPip(visibilityDidChange:)(0);
LABEL_78:
      MultiwayViewController.updateShouldShowReactionPickerTipView()();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v120);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v112, v95);
      return swift_release();
    }
    if (*v41)
    {
      if (*v41 == 1)
      {
        if ((_DWORD)v103 == 1)
          goto LABEL_48;
      }
      else if ((_DWORD)v103 == 2)
      {
        goto LABEL_48;
      }
    }
    else if (!(_DWORD)v103)
    {
      goto LABEL_48;
    }
    swift_retain_n();
    v52 = Logger.logObject.getter();
    v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, (os_log_type_t)v53))
    {
      v101 = v53;
      v113 = v52;
      v54 = (uint8_t *)swift_slowAlloc();
      v100 = swift_slowAlloc();
      v116[0] = v100;
      v55 = v54;
      *(_DWORD *)v54 = 136315138;
      swift_beginAccess();
      if (*v41)
      {
        if (*v41 == 1)
        {
          v56 = 0xE700000000000000;
          v57 = 0x656C6269736976;
        }
        else
        {
          v56 = 0xEE00756E654D676ELL;
          v57 = 0x69746E6573657270;
        }
      }
      else
      {
        v56 = 0xE600000000000000;
        v57 = 0x6E6564646968;
      }
      v115[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v57, v56, v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      v58 = v113;
      _os_log_impl(&dword_1BD004000, v113, (os_log_type_t)v101, "InCallBannerState:%s", v55, 0xCu);
      v59 = v100;
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v59, -1, -1);
      MEMORY[0x1C3B751B8](v55, -1, -1);

    }
    else
    {

      swift_release_n();
    }
LABEL_48:
    v60 = swift_beginAccess();
    if (*v41 - 1 <= 1)
    {
      v61 = v114;
      if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(v114
                                                                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_features))
                                               + 0x58))(v60) & 1) == 0)
      {
        v62 = MultiwayViewController.bannerPresentationManager.getter();
        if (v62)
        {
          v63 = v62;
          v64 = (void *)MEMORY[0x1C3B72E00](0xD00000000000003ELL, 0x80000001BD6919C0);
          objc_msgSend(v63, sel_dismissPresentedBannerForReason_animated_, v64, 1);

        }
      }
      v65 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController;
      v66 = *(_QWORD **)(v61 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mutedBannerViewController);
      v67 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v66) + 0x128);
      v68 = v66;
      LOBYTE(v67) = v67();

      if ((v67 & 1) != 0)
      {
        MultiwayViewController.isPipped.getter();
        if ((v69 & 1) == 0)
        {
          v70 = Logger.logObject.getter();
          v71 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v72 = 0;
            _os_log_impl(&dword_1BD004000, v70, v71, "MutedTalker: hiding banner for InCall control presentation", v72, 2u);
            MEMORY[0x1C3B751B8](v72, -1, -1);
          }

          v73 = v114;
          *(_BYTE *)(v114 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_didNotifyMutedCaller) = 0;
          v74 = *(_QWORD **)(v73 + v65);
          v75 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v74) + 0x178);
          v76 = v74;
          v75();

        }
      }
    }
    goto LABEL_57;
  }
  switch(v35 >> 5)
  {
    case 1:
    case 2:
      break;
    case 3:
      if ((v35 & 0xFE) != 0x60)
        goto LABEL_13;
      break;
    case 4:
      if (v35 != 128)
        goto LABEL_13;
      break;
    case 5:
      if (v35 != 160)
        goto LABEL_13;
      break;
    default:
      goto LABEL_13;
  }
  v45 = Logger.logObject.getter();
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = v10;
    v49 = swift_slowAlloc();
    v118[0] = v49;
    *(_DWORD *)v47 = 136315138;
    LOBYTE(v117) = v35;
    v50 = String.init<A>(reflecting:)();
    v117 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BD004000, v45, v46, "Ignoring request to hide in-call controls in mode %s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v49, -1, -1);
    MEMORY[0x1C3B751B8](v47, -1, -1);

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v120);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v112, v111);
  }
  else
  {
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v120);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void MultiwayViewController.updateScreenSharingSnapshotView(_:)(id a1)
{
  char *v1;
  id v2;
  char *v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  _BYTE *v19;
  char v20;
  _QWORD *v21;
  void (*v22)(_QWORD);
  _QWORD *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  id v93;
  id v94;
  Class isa;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  void *v100;
  id v101;
  _BYTE v102[216];
  uint64_t v103[27];
  _BYTE v104[216];
  _BYTE __dst[216];
  _BYTE v106[216];
  uint64_t __src[28];

  v3 = v1;
  v5 = (uint64_t)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v106, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v106, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(__src) != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    v6 = (_BYTE *)(__src[2] + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_isScreenSharing);
    swift_beginAccess();
    *v6 = a1 & 1;
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v106, (uint64_t)v104, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v104);
    InCallControlsViewController.updateScreenShareButton()();
    if (one-time initialization token for shared != -1)
      swift_once();
    v7 = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)static ScreenSharingInteractionController.shared)
                              + 0x128))();
    v97 = v7;
    LODWORD(v101) = (_DWORD)a1;
    if ((a1 & 1) != 0
      && v7 != 2
      && (MultiwayViewController.isOnScreen.getter() & 1) != 0
      && (MultiwayViewController.isPipped.getter(), (v8 & 1) == 0))
    {
      v99 = 1;
      v9 = 16;
    }
    else
    {
      v9 = 0;
      v99 = 0;
    }
    v10 = MultiwayViewController.ViewContent.allViews.getter();
    if (v10 >> 62)
    {
      v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11)
        goto LABEL_27;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v11)
        goto LABEL_27;
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_54;
    }
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1C3B73D18](i, v10);
      else
        v13 = *(id *)(v10 + 8 * i + 32);
      v14 = v13;
      v15 = MultiwayViewController.captionsViewController.getter();
      if (!v15)
        goto LABEL_19;
      v16 = v15;
      v17 = v14;
      v18 = objc_msgSend(v16, sel_view);

      if (!v18
        || (v18, v17 != v18)
        || (v19 = MultiwayViewController.captionsViewController.getter()) != 0
        && (v20 = v19[direct field offset for CaptionsViewController.allowsScreenshots],
            v19,
            (v20 & 1) != 0))
      {
LABEL_19:
        v17 = objc_msgSend(v14, sel_layer, v97);
        objc_msgSend(v17, sel_setDisableUpdateMask_, v9);

      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    v21 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
    if (v21)
    {
      v22 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *v21) + 0x98);
      v23 = v21;
      v22(v99);

    }
    if (__src[20])
    {
      v24 = (id)__src[20];
      v25 = objc_msgSend(v24, sel_superview);

      if (!v25)
      {

        if ((v101 & 1) == 0)
          goto LABEL_50;
LABEL_34:
        v27 = objc_msgSend(v3, sel_view, v97);
        if (v27)
        {
          v28 = v27;
          v2 = objc_msgSend(v27, sel_snapshotViewAfterScreenUpdates_, 0);

          if (v2)
          {
            a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
            objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
            v29 = objc_msgSend(v3, sel_view);
            if (v29)
            {
              v30 = v29;
              v9 = (uint64_t)&selRef_associatedAppBundleIdentifier;
              objc_msgSend(v29, sel_addSubview_, a1);

              v31 = objc_msgSend(v3, sel_view);
              if (v31)
              {
                v32 = v31;
                objc_msgSend(v31, sel_sendSubviewToBack_, a1);

                objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                objc_msgSend(a1, sel_addSubview_, v2);
                v33 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 1);
                v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v33);

                objc_msgSend(v34, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                v101 = v34;
                objc_msgSend(a1, sel_addSubview_, v34);
                v10 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_init);
                objc_msgSend((id)v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                if (one-time initialization token for background == -1)
                {
LABEL_39:
                  objc_msgSend((id)v10, sel_setBackgroundColor_, static Colors.MultiwayViewController.background, v97);
                  if (v98 != 2 && (MultiwayViewController.isOnScreen.getter() & 1) != 0)
                  {
                    MultiwayViewController.isPipped.getter();
                    if ((v35 & 1) == 0)
                    {
                      v36 = objc_msgSend((id)v10, sel_layer);
                      objc_msgSend(v36, sel_setDisableUpdateMask_, 16);

                    }
                  }
                  objc_msgSend(a1, *(SEL *)(v9 + 1152), v10);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                  v37 = swift_allocObject();
                  *(_OWORD *)(v37 + 16) = xmmword_1BD6659C0;
                  v38 = objc_msgSend(v2, sel_topAnchor);
                  v39 = objc_msgSend(a1, (SEL)&selRef_setUserInteractionEnabled_ + 4);
                  v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

                  *(_QWORD *)(v37 + 32) = v40;
                  v41 = objc_msgSend(v2, sel_leadingAnchor);
                  v42 = objc_msgSend(a1, (SEL)&selRef_activeCall + 6);
                  v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

                  *(_QWORD *)(v37 + 40) = v43;
                  v44 = objc_msgSend(v2, sel_bottomAnchor);
                  v45 = objc_msgSend(a1, (SEL)&selRef_groupConversations + 5);
                  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

                  *(_QWORD *)(v37 + 48) = v46;
                  v100 = v2;
                  v47 = objc_msgSend(v2, sel_trailingAnchor);
                  v48 = objc_msgSend(a1, sel_trailingAnchor);
                  v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

                  *(_QWORD *)(v37 + 56) = v49;
                  v50 = objc_msgSend(v101, sel_topAnchor);
                  v51 = objc_msgSend(a1, sel_topAnchor);
                  v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

                  *(_QWORD *)(v37 + 64) = v52;
                  v53 = objc_msgSend(v101, sel_leadingAnchor);
                  v54 = objc_msgSend(a1, sel_leadingAnchor);
                  v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

                  *(_QWORD *)(v37 + 72) = v55;
                  v56 = objc_msgSend(v101, sel_bottomAnchor);
                  v57 = objc_msgSend(a1, sel_bottomAnchor);
                  v58 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v57);

                  *(_QWORD *)(v37 + 80) = v58;
                  v59 = objc_msgSend(v101, sel_trailingAnchor);
                  v60 = objc_msgSend(a1, sel_trailingAnchor);
                  v61 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v60);

                  *(_QWORD *)(v37 + 88) = v61;
                  v62 = objc_msgSend((id)v10, sel_topAnchor);
                  v63 = objc_msgSend(a1, sel_topAnchor);
                  v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

                  *(_QWORD *)(v37 + 96) = v64;
                  v65 = objc_msgSend((id)v10, sel_leadingAnchor);
                  v66 = objc_msgSend(a1, sel_leadingAnchor);
                  v67 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v66);

                  *(_QWORD *)(v37 + 104) = v67;
                  v68 = objc_msgSend((id)v10, sel_bottomAnchor);
                  v69 = objc_msgSend(a1, sel_bottomAnchor);
                  v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

                  *(_QWORD *)(v37 + 112) = v70;
                  v71 = objc_msgSend((id)v10, sel_trailingAnchor);
                  v72 = objc_msgSend(a1, sel_trailingAnchor);
                  v73 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v72);

                  *(_QWORD *)(v37 + 120) = v73;
                  v74 = objc_msgSend(a1, sel_topAnchor);
                  v75 = objc_msgSend(v3, sel_view);
                  if (v75)
                  {
                    v76 = v75;
                    v77 = objc_msgSend(v75, (SEL)&selRef_setUserInteractionEnabled_ + 4);

                    v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
                    *(_QWORD *)(v37 + 128) = v78;
                    v79 = objc_msgSend(a1, sel_leadingAnchor);
                    v80 = objc_msgSend(v3, sel_view);
                    if (v80)
                    {
                      v81 = v80;
                      v82 = objc_msgSend(v80, sel_leadingAnchor);

                      v83 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v82);
                      *(_QWORD *)(v37 + 136) = v83;
                      v84 = objc_msgSend(a1, sel_bottomAnchor);
                      v85 = objc_msgSend(v3, sel_view);
                      if (v85)
                      {
                        v86 = v85;
                        v87 = objc_msgSend(v85, sel_bottomAnchor);

                        v88 = objc_msgSend(v84, sel_constraintEqualToAnchor_, v87);
                        *(_QWORD *)(v37 + 144) = v88;
                        v89 = objc_msgSend(a1, sel_trailingAnchor);
                        v90 = objc_msgSend(v3, sel_view);
                        if (v90)
                        {
                          v91 = v90;
                          v92 = (void *)objc_opt_self();
                          v93 = objc_msgSend(v91, sel_trailingAnchor);

                          v94 = objc_msgSend(v89, sel_constraintEqualToAnchor_, v93);
                          *(_QWORD *)(v37 + 152) = v94;
                          specialized Array._endMutation()();
                          type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
                          isa = Array._bridgeToObjectiveC()().super.isa;
                          swift_bridgeObjectRelease();
                          objc_msgSend(v92, sel_activateConstraints_, isa);

                          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
                          outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
                          outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v102, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
                          if (getEnumTag for TapInteraction.EventType(v103) == 1)
                          {

                          }
                          else
                          {
                            v96 = *(void **)(v5 + 160);
                            *(_QWORD *)(v5 + 160) = a1;

                          }
                          return;
                        }
LABEL_60:
                        __break(1u);
                        return;
                      }
LABEL_59:
                      __break(1u);
                      goto LABEL_60;
                    }
LABEL_58:
                    __break(1u);
                    goto LABEL_59;
                  }
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
LABEL_54:
                swift_once();
                goto LABEL_39;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_57;
          }
        }
LABEL_50:
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v106);
        return;
      }
      objc_msgSend(v24, sel_removeFromSuperview);

      outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v102, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v103) != 1)
      {
        v26 = *(void **)(v5 + 160);
        *(_QWORD *)(v5 + 160) = 0;

      }
    }
    if ((v101 & 1) == 0)
      goto LABEL_50;
    goto LABEL_34;
  }
}

Swift::Void __swiftcall MultiwayViewController.showOneToOneLivePhotosAlert(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char aBlock;
  void *v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[216];
  uint64_t v34[16];
  id v35;

  OUTLINED_FUNCTION_51_29();
  v3 = v2;
  v5 = v4;
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_54_41(v6, (uint64_t)v33);
  OUTLINED_FUNCTION_54_41((uint64_t)v33, (uint64_t)v34);
  OUTLINED_FUNCTION_12_109(v34);
  if (!v7 && v35)
  {
    v8 = (char *)v35;
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    OUTLINED_FUNCTION_8_8();
    v10 = MEMORY[0x1E0DEA968];
    v11 = String.init<A>(reflecting:)();
    v13 = v12;
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = lazy protocol witness table accessor for type String and conformance String();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    OUTLINED_FUNCTION_30_4();
    v14 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer;
    v15 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer);
    if (v15)
      objc_msgSend(v15, sel_invalidate);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    OUTLINED_FUNCTION_18_4(v8, sel_setHidden_);
    OUTLINED_FUNCTION_18_4(v8, sel_setUserInteractionEnabled_);
    v16 = *(void **)&v8[OBJC_IVAR____TtC15ConversationKit20ParticipantAlertView_titleLabel];
    OUTLINED_FUNCTION_8_8();
    outlined bridged method (mbgnn) of @objc UILabel.text.setter(v5, v3, v16);
    OUTLINED_FUNCTION_2_1();
    v17 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v17 + 16) = v8;
    v18 = (void *)objc_opt_self();
    v19 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v19 + 16) = partial apply for closure #2 in animateBubble #1 (_:) in MomentsIndicatorView.refreshLayout();
    *(_QWORD *)(v19 + 24) = v17;
    aBlock = MEMORY[0x1E0C809B0];
    v21 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed () -> (), v27, MEMORY[0x1E0C809B0], 1107296256, v29, v31);
    v22 = v8;
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_27_0();
    objc_msgSend(v18, sel_animateWithDuration_animations_completion_, v21, 0, 0.25);
    _Block_release(v21);
    v23 = (void *)objc_opt_self();
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_299();
    v24 = OUTLINED_FUNCTION_117((uint64_t)thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> (), v28, aBlock, 1107296256, v30, v32);
    swift_release();
    v25 = objc_msgSend(v23, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v24, 3.0);
    OUTLINED_FUNCTION_11_0();

    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v33);
    _Block_release(v24);
    v26 = *(void **)(v1 + v14);
    *(_QWORD *)(v1 + v14) = v25;

  }
  OUTLINED_FUNCTION_7_7();
}

void closure #3 in MultiwayViewController.showOneToOneLivePhotosAlert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    MultiwayViewController.hideAlert()();

  }
}

void MultiwayViewController.hideAlert()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t aBlock;
  uint64_t v15;
  void *v16;
  void *v17;
  id (*v18)();
  uint64_t v19;
  _BYTE v20[216];
  uint64_t v21[16];
  void *v22;

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v21) != 1)
  {
    v2 = v22;
    if (v22)
    {
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = v2;
      v4 = (void *)objc_opt_self();
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = partial apply for closure #1 in MultiwayViewController.hideAlert();
      *(_QWORD *)(v5 + 24) = v3;
      v18 = (id (*)())partial apply for closure #1 in DropdownMenuButton.primaryButton(action:text:color:);
      v19 = v5;
      v6 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v15 = 1107296256;
      v16 = thunk for @escaping @callee_guaranteed () -> ();
      v17 = &block_descriptor_337;
      v7 = _Block_copy(&aBlock);
      v8 = v2;
      swift_retain();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);
      swift_release();
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v8;
      v18 = partial apply for closure #3 in MultiwayViewController.hideAlert();
      v19 = v9;
      aBlock = v6;
      v15 = 1107296256;
      v16 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      v17 = &block_descriptor_343;
      v10 = _Block_copy(&aBlock);
      v11 = v8;
      swift_release();
      objc_msgSend(v4, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v7, v10, 0.15, 0.0);
      _Block_release(v10);
      _Block_release(v7);
      v12 = *(void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_hideOneToOneLivePhotoAlertViewTimer);
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v13, sel_invalidate);
        swift_release();

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);
      }
      else
      {
        swift_release();

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v20);
      }
    }
  }
}

void MultiwayViewController.resetCaptionsViewDragState()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  MultiwayViewController.updateIsCaptionsViewDragEnabled()();
  MultiwayViewController.constraintController.getter();
  if (v0)
  {
    v4 = v0;
    v1 = &v0[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout];
    v2 = *((_QWORD *)v1 + 3);
    v3 = *((_QWORD *)v1 + 4);
    __swift_project_boxed_opaque_existential_1(v1, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);

  }
}

void MultiwayViewController.showZoomControl()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  id v3;
  void *v4;
  id *v5;
  void (*v6)(void *, NSObject *);
  id v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[216];
  uint64_t v12[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v12) != 1)
  {
    v2 = *(id *)(v1 + 56);
    v3 = -[NSObject superview](v2, sel_superview);
    if (v3)
    {
      v4 = v3;
      v5 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
      swift_beginAccess();
      v6 = *(void (**)(void *, NSObject *))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v5) + 0x1C8);
      v7 = *v5;
      v6(v4, v2);

      goto LABEL_9;
    }

  }
  if (one-time initialization token for default != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)&static Log.default);
  v2 = Logger.logObject.getter();
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1BD004000, v2, v9, "PipZoomControl: Not able to add because of missing local participant view", v10, 2u);
    MEMORY[0x1C3B751B8](v10, -1, -1);
  }
LABEL_9:

}

void MultiwayViewController.hideZoomControl()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  id *v4;
  void (*v5);
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE v10[216];
  uint64_t v11[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v10, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v11) == 1
    || (v2 = objc_msgSend(*(id *)(v1 + 56), sel_superview)) == 0)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)&static Log.default);
    v3 = Logger.logObject.getter();
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BD004000, v3, v8, "PipZoomControl: Not able to remove because of missing local participant view", v9, 2u);
      MEMORY[0x1C3B751B8](v9, -1, -1);
    }
  }
  else
  {
    v3 = v2;
    v4 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
    swift_beginAccess();
    v5 = *(void (**))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v4) + 0x1D0);
    v6 = *v4;
    v5(v3);

  }
}

void MultiwayViewController.hideZoomControlIfNeeded()()
{
  uint64_t v0;
  id *v1;
  uint64_t (*v2)(void);
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipZoomControl);
  swift_beginAccess();
  v2 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v1) + 0x180);
  v3 = *v1;
  LOBYTE(v2) = v2();

  if ((v2 & 1) != 0)
    MultiwayViewController.hideZoomControl()();
}

uint64_t MultiwayViewController.nextScheduledUpdateInterval(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for Date();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
  {
    _s15ConversationKit11ParticipantVWOcTm_4();
    v6 = (char *)&loc_1BD50C438 + 4 * byte_1BD6652F5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return 0;
}

void closure #1 in MultiwayViewController.scheduleUpdate(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  _BYTE v14[14];
  __int16 v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](v8);
  if (!v9)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
    goto LABEL_7;
  }
  v10 = (void *)v9;
  v11 = *(id *)(v9 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

  ConversationController.participant(with:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
LABEL_7:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    return;
  }
  outlined init with take of Participant((uint64_t)v4, (uint64_t)v7);
  swift_beginAccess();
  v12 = MEMORY[0x1C3B752C0](v8);
  if (v12)
  {
    v13 = (void *)v12;
    v15 = 513;
    MultiwayViewController.conversationControllerDidUpdateRemoteParticipant(_:updateReason:)((uint64_t)v7, (unsigned __int8 *)&v15);

  }
  outlined destroy of AccountUpdateNotice((uint64_t)v7, type metadata accessor for Participant);
}

BOOL MultiwayViewController.inCallConversationBannerHidable()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  _QWORD **v19;
  _QWORD *v20;
  void (*v21)(void);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int8x16_t v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned __int8 *v31;
  uint64_t v32;
  int8x16_t v33;
  int8x16_t v34;
  unsigned __int8 v35;
  _BYTE v36[240];
  _BYTE v37[216];
  uint64_t v38[6];
  uint64_t v39;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v32 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v32 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  v13 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v13, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v37, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v38) == 1)
    return 0;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 304);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v37, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v36);
  if ((v16(ObjectType, v14) & 1) == 0)
  {
    v17 = v38[3];
    InCallBannerHostViewController.menuPresented.getter();
    if ((v18 & 1) == 0)
    {
      v19 = (_QWORD **)(v17
                      + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_conversationControlsViewController);
      swift_beginAccess();
      v20 = *v19;
      if (*v19)
      {
        v21 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x378);
        v22 = v20;
        v21();

      }
      else
      {
        v23 = type metadata accessor for ConversationControlsRecipe();
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v23);
      }
      outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      v24 = type metadata accessor for ConversationControlsRecipe();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v24) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      }
      else
      {
        outlined init with copy of ConversationControlsType((uint64_t)v10, (uint64_t)&v32);
        v25 = v35;
        outlined destroy of ConversationControlsType((uint64_t)&v32);
        outlined destroy of AccountUpdateNotice((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
        outlined init with copy of FeatureEligibility?((uint64_t)v12, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        if (!v25)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
          goto LABEL_29;
        }
      }
      outlined init with copy of FeatureEligibility?((uint64_t)v7, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v24) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        goto LABEL_21;
      }
      outlined init with copy of ConversationControlsType((uint64_t)v4, (uint64_t)&v32);
      if (v35 == 1)
      {
        outlined destroy of ConversationControlsType((uint64_t)&v32);
      }
      else if (v35 != 6
             || (v32 != 5 ? (v26 = v32 == 2) : (v26 = 1),
                 !v26
              || (v27 = vorrq_s8(v33, v34),
                  *(_QWORD *)&vorr_s8(*(int8x8_t *)v27.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL)))))
      {
        outlined destroy of ConversationControlsType((uint64_t)&v32);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
        outlined destroy of AccountUpdateNotice((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_21:
        v28 = v39;
        v29 = (_BYTE *)(v39 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
        swift_beginAccess();
        if ((*v29 & 0xFE) != 0x80)
        {
          v31 = (unsigned __int8 *)(v28 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
          swift_beginAccess();
          LODWORD(v31) = *v31;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
          return (_DWORD)v31 == 1;
        }
        goto LABEL_22;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for ConversationControlsRecipe?);
      outlined destroy of AccountUpdateNotice((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ConversationControlsRecipe);
LABEL_29:
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
      return 1;
    }
  }
LABEL_22:
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v37);
  return 0;
}

void MultiwayViewController.restartAutoHideInCallControlsTimer()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  __int128 v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  __int128 v22[3];
  _BYTE v23[216];
  uint64_t v24[27];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((MultiwayViewController.wantsStandardControls.getter() & 1) != 0)
  {
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    *v5 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
    v6 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    if ((v6 & 1) != 0)
    {
      v7 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer;
      v8 = *(void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_inCallControlsDismissTimer);
      if (v8)
        objc_msgSend(v8, sel_invalidate);
      if (MultiwayViewController.inCallConversationBannerHidable()())
      {
        v9 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
        swift_beginAccess();
        outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v23, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v23, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        if (getEnumTag for TapInteraction.EventType(v24) == 1)
        {
          v10 = 10.0;
        }
        else
        {
          v11 = *(_QWORD *)(v9 + 24) + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
          swift_beginAccess();
          outlined init with copy of ConversationControlsType(v11, (uint64_t)v22);
          outlined init with take of ConversationControlsType(v22, &v17);
          v10 = ConversationControlsType.dismissTimerDuration(inCallControls:)(1);
          outlined destroy of ConversationControlsType((uint64_t)&v17);
        }
        v12 = (void *)objc_opt_self();
        v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v20 = partial apply for closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer();
        v21 = v13;
        *(_QWORD *)&v17 = MEMORY[0x1E0C809B0];
        *((_QWORD *)&v17 + 1) = 1107296256;
        v18 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSTimer) -> ();
        v19 = &block_descriptor_314;
        v14 = _Block_copy(&v17);
        swift_release();
        v15 = objc_msgSend(v12, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v14, v10);
        _Block_release(v14);
        v16 = *(void **)(v1 + v7);
        *(_QWORD *)(v1 + v7) = v15;

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void closure #1 in MultiwayViewController.restartAutoHideInCallControlsTimer()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  unsigned __int8 v19[96];
  _BYTE v20[216];
  uint64_t v21[27];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for UUID();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for Logger();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1C3B752C0](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    if (MultiwayViewController.inCallConversationBannerHidable()())
    {
      v18 = v6;
      v11 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v20, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v20, (uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v21) != 1)
      {
        v12 = *(void **)(v11 + 24);
        v13 = one-time initialization token for conversationControls;
        v14 = v12;
        if (v13 != -1)
          swift_once();
        v15 = __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationControls);
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v8, v15, v5);
        v17[3] = v14;
        v16 = (uint64_t)v14 + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsType;
        swift_beginAccess();
        outlined init with copy of ConversationControlsType(v16, (uint64_t)v19);
        __asm { BR              X10 }
      }
      v19[0] = 0;
      MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v19, 0xFCu, 1);
    }

  }
}

uint64_t closure #1 in MultiwayViewController.activeRemoteParticipants(in:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v2 = type metadata accessor for Participant.State(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for Date();
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for Participant(0) + 28)))
  {
    _s15ConversationKit11ParticipantVWOcTm_4();
    v5 = (char *)&loc_1BD50D744 + 4 * byte_1BD665303[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return 0;
}

BOOL VideoMessageController.State.requiresControlsHidden.getter(unsigned __int8 a1)
{
  return a1 - 2 < 7;
}

void MultiwayViewController.isPresentingEffectsBrowser.getter()
{
  void *v0;
  id v1;
  id v2;

  MultiwayViewController.effectsBrowserViewController.getter();
  v2 = objc_msgSend(v1, sel_parentViewController);
  OUTLINED_FUNCTION_37_0();
  if (v0)

  OUTLINED_FUNCTION_0();
}

uint64_t MultiwayViewController.shouldEnableVideoMessagingForCurrentState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  char v11;
  _BYTE v13[216];
  uint64_t v14[27];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 600))(ObjectType, v2) & 1) == 0)
    goto LABEL_7;
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v13, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v14) == 1)
    goto LABEL_7;
  v5 = (unsigned __int8 *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
  swift_beginAccess();
  v6 = *v5;
  if (v6 >> 6 < 2)
    goto LABEL_7;
  if (v6 == 128)
    goto LABEL_7;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
     + OBJC_IVAR____TtC15ConversationKit22ConversationController_call;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 8);
  v9 = swift_getObjectType();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 496);
  swift_unknownObjectRetain();
  LOBYTE(v7) = v10(v9, v8);
  swift_unknownObjectRelease();
  if ((v7 & 1) == 0)
LABEL_7:
    v11 = 0;
  else
    ConversationController.isRemoteParticipantEligibleForVideoMessaging.getter();
  return v11 & 1;
}

void MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(uint64_t a1, int a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char v33;
  id v34;
  id v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  BOOL *v41;
  _QWORD *v42;
  double v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  double v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  void (*v62)();
  uint64_t v63;
  _BYTE v64[264];
  _BYTE v65[216];
  _BYTE v66[216];
  uint64_t v67[28];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v14, (uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v66, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v67) == 1)
    goto LABEL_4;
  memcpy(v65, v67, sizeof(v65));
  v15 = v67[12] + OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v15, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
LABEL_4:
    v16 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP;
    v17 = *(void **)(v4
                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP);
    v18 = v17;
    MultiwayViewController.resetParticipantViewForPiP(_:)(v17);

    v19 = *(void **)(v4 + v16);
    *(_QWORD *)(v4 + v16) = 0;

    return;
  }
  v56 = a1;
  outlined init with take of Participant((uint64_t)v10, (uint64_t)v13);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v66, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v64);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v20 = swift_allocObject();
  v54 = xmmword_1BD6441D0;
  *(_OWORD *)(v20 + 16) = xmmword_1BD6441D0;
  v58 = a3;
  v21 = String.init<A>(reflecting:)();
  v23 = v22;
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  v53 = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v20 + 64) = v53;
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v24 = *(int *)(v11 + 28);
  v25 = *(_QWORD *)&v13[v24];
  v57 = a2;
  if (v25)
  {
    v26 = ParticipantGridViewController.participantViews.getter();
    MEMORY[0x1E0C80A78](v26);
    *(&v52 - 2) = (uint64_t)v13;
    v27 = specialized Sequence.first(where:)((uint64_t (*)(id *))partial apply for closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:), (uint64_t)(&v52 - 4), v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(void **)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_participantView);
    v28 = v27;
  }
  v29 = OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP;
  v30 = *(void **)(v4
                 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_lastUpdatedMostActiveParticipantViewForPiP);
  if (v30)
  {
    if (v27)
    {
      type metadata accessor for ParticipantView();
      v31 = v27;
      v32 = v30;
      v33 = static NSObject.== infix(_:_:)();

      v30 = *(void **)(v4 + v29);
      if ((v33 & 1) != 0)
        goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v27)
  {
LABEL_15:
    v34 = v30;
    MultiwayViewController.resetParticipantViewForPiP(_:)(v30);

    v30 = *(void **)(v4 + v29);
  }
LABEL_16:
  *(_QWORD *)(v4 + v29) = v27;
  v35 = v27;

  if (v27)
    objc_msgSend(v35, sel_setAlpha_, a3);
  if (*(_QWORD *)&v13[v24])
  {
    v36 = (_BYTE *)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
    swift_beginAccess();
    *v36 = 0;
  }
  else
  {
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = v54;
    LOBYTE(v58) = a3 < 1.0;
    v38 = String.init<A>(reflecting:)();
    v39 = v53;
    *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v37 + 64) = v39;
    *(_QWORD *)(v37 + 32) = v38;
    *(_QWORD *)(v37 + 40) = v40;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    v41 = (BOOL *)(v67[7] + OBJC_IVAR____TtC15ConversationKit20LocalParticipantView_requiresViewHidden);
    swift_beginAccess();
    *v41 = a3 < 1.0;
  }
  LocalParticipantView.updateHiding()();
  v42 = (_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_pipState);
  swift_beginAccess();
  v43 = MEMORY[0x1E0C809B0];
  if (!*v42)
  {
    if (v27)
    {
      v44 = v35;
      ParticipantView.shouldOverrideShadowHidden.setter(1);

    }
    v45 = (void *)objc_opt_self();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v27;
    v62 = partial apply for closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:);
    v63 = v46;
    v58 = v43;
    v59 = 1107296256;
    v60 = thunk for @escaping @callee_guaranteed () -> ();
    v61 = &block_descriptor_642;
    v47 = _Block_copy(&v58);
    v48 = v35;
    swift_release();
    objc_msgSend(v45, sel_animateWithDuration_delay_options_animations_completion_, 0, v47, 0, 0.15, 0.0);
    _Block_release(v47);
  }
  if ((v57 & 1) != 0)
  {

  }
  else
  {
    v49 = (void *)objc_opt_self();
    v50 = swift_allocObject();
    memcpy((void *)(v50 + 16), v65, 0xD8uLL);
    *(_QWORD *)(v50 + 232) = v56;
    v62 = partial apply for closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:);
    v63 = v50;
    v58 = v43;
    v59 = 1107296256;
    v60 = thunk for @escaping @callee_guaranteed () -> ();
    v61 = &block_descriptor_636;
    v51 = _Block_copy(&v58);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v64);
    swift_release();
    objc_msgSend(v49, sel__animateUsingDefaultTimingWithOptions_animations_completion_, 0, v51, 0);

    _Block_release(v51);
  }
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v66);
  outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for Participant);
}

uint64_t closure #1 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v4 = type metadata accessor for UUID();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v10);
  v30 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  v18 = *a1 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v18, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v19 = type metadata accessor for Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, a2 + *(int *)(v19 + 20), v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v4);
  v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  outlined init with copy of FeatureEligibility?((uint64_t)v17, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v14, v20, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v20, 1, v4);
    if (EnumTagSinglePayload == 1)
      v22 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
    else
      v22 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    if (EnumTagSinglePayload == 1)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    v24 = v30;
    outlined init with copy of FeatureEligibility?((uint64_t)v9, v30, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v20, 1, v4) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
      v23 = 0;
      v22 = (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?);
    }
    else
    {
      v25 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v20, v4);
      lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v25, v4);
      v22 = (uint64_t *)&demangling cache variable for type metadata for UUID?;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v26((char *)v24, v4);
    }
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, v22);
  return v23 & 1;
}

void MultiwayViewController.resetParticipantViewForPiP(_:)(void *a1)
{
  char v2;
  double v3;

  if (a1)
  {
    objc_msgSend(a1, sel_setAlpha_, 1.0);
    v2 = ConversationController.isOneToOneModeEnabled.getter();
    v3 = 0.0;
    if ((v2 & 1) == 0)
    {
      if (one-time initialization token for shared != -1)
        swift_once();
      (*(void (**)(void))(*(_QWORD *)static Defaults.shared + 384))();
    }
    objc_msgSend(a1, sel__setCornerRadius_, v3);
    ParticipantView.shouldOverrideShadowHidden.setter(0);
  }
}

void closure #2 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(uint64_t a1)
{
  if (a1)
    ParticipantView.shouldOverrideShadowHidden.setter(0);
}

void closure #3 in MultiwayViewController.updateMostActiveParticipantTileForPiP(with:cornerRadius:)(double a1)
{
  char *v2;
  void *v3;
  double *v4;

  MostActiveParticipantViewController.currentParticipantView.getter();
  v3 = v2;
  v4 = (double *)&v2[OBJC_IVAR____TtC15ConversationKit15ParticipantView_customCornerRadius];
  swift_beginAccess();
  *v4 = a1;
  ParticipantView.customCornerRadius.didset();

}

Swift::Void __swiftcall MultiwayViewController.toggleAudioMute()()
{
  MultiwayViewController.toggleAudioMute()((void (*)(uint64_t))ConversationController.toggleLocalAudio());
}

Swift::Void __swiftcall MultiwayViewController.toggleVideoMute(shouldPauseIfStopped:)(Swift::Bool shouldPauseIfStopped)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v4 = v1;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v2 = v8;
  OUTLINED_FUNCTION_17(v8, *MEMORY[0x1E0DEF740]);
  v9 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v9 & 1) != 0)
  {
    v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    OUTLINED_FUNCTION_1();
    if (*(char *)(v10 + 16) < 0)
      specialized EffectsHandler.wipeEffectsState()();
    ConversationController.toggleLocalVideo(shouldPauseIfStopped:)(shouldPauseIfStopped);
    MultiwayViewController.updateShouldShowReactionPickerTipView()();
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.toggleCameraBlur()()
{
  MultiwayViewController.toggleAudioMute()((void (*)(uint64_t))ConversationController.toggleCameraBlur());
}

void MultiwayViewController.toggleAudioMute()(void (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v5, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v6 = OUTLINED_FUNCTION_7_22();
  *v1 = v6;
  OUTLINED_FUNCTION_17(v6, *MEMORY[0x1E0DEF740]);
  v7 = OUTLINED_FUNCTION_83_12();
  v8 = OUTLINED_FUNCTION_40_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v7 & 1) != 0)
  {
    a1(v8);
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.toggleCinematicFraming()()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char v15;
  char *v16;
  _QWORD v17[4];

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    MultiwayViewController.effectsViewController.getter();
    if (v5)
    {
      v6 = v5;
      type metadata accessor for CameraViewController();
      if (swift_dynamicCastClass())
      {
        OUTLINED_FUNCTION_490();
        __swift_project_boxed_opaque_existential_1(v17, v17[3]);
        v7 = OUTLINED_FUNCTION_311_0();
        v9 = v8(v7);
        v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        if ((v9 & 1) == 0 && OUTLINED_FUNCTION_2_2(v10, sel_effectsState) == (id)2)
          MultiwayViewController.resetEffectsState()();
      }

    }
    ConversationController.toggleCinematicFraming()();
    MultiwayViewController.inCallControlsViewController.getter();
    if (v11)
    {
      v12 = v11;
      OUTLINED_FUNCTION_490();
      OUTLINED_FUNCTION_565(v17);
      v13 = OUTLINED_FUNCTION_13_6();
      v15 = OUTLINED_FUNCTION_6_9(v13, v14);
      v16 = &v12[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_cinematicFramingIsEnabled];
      OUTLINED_FUNCTION_2_0();
      *v16 = v15 & 1;
      InCallControlsViewController.cinematicFramingIsEnabled.didset();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MultiwayViewController.resetEffectsState()()
{
  uint64_t v0;
  int v1;
  char *v2;
  void *v3;
  char *v4;
  void *v5;
  void *v6;

  MultiwayViewController.inCallControlsViewController.getter();
  if (v0)
  {
    v1 = v0 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_434_0();
    if (v1 == 1)
    {
      MultiwayViewController.inCallControlsViewController.getter();
      if (v2)
      {
        v3 = v2;
        v4 = &v2[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled];
        OUTLINED_FUNCTION_2_0();
        *v4 = 0;
        InCallControlsViewController.updateEffectsButton()();

      }
      MultiwayViewController.updateLocalParticipantControls()();
    }
  }
  MultiwayViewController.effectsViewController.getter();
  v6 = v5;

  if (v6)
    MultiwayViewController.removeAllEffectsObjects()();
  OUTLINED_FUNCTION_289_0();
}

Swift::Void __swiftcall MultiwayViewController.muteVideo()()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    specialized EffectsHandler.wipeEffectsState()();
    ConversationController.stopLocalVideoForMiniWindow()();
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

#error "1BD50EAE4: call analysis failed (funcsize=34)"

void MultiwayViewController.viewWillTransition(to:with:)(void *a1)
{
  void *v1;
  double v3;
  objc_super *v4;
  SEL v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char aBlock[8];
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  OUTLINED_FUNCTION_42_51();
  v28 = v1;
  v29 = OUTLINED_FUNCTION_15_6();
  v3 = OUTLINED_FUNCTION_235();
  objc_msgSendSuper2(v4, v5, a1, v3);
  MultiwayViewController.layoutIdiom.getter((BOOL *)aBlock);
  if ((aBlock[0] & 1) == 0)
  {
    v6 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_299();
    v26 = partial apply for closure #1 in MultiwayViewController.viewWillTransition(to:with:);
    v27 = v6;
    v7 = MEMORY[0x1E0C809B0];
    v8 = OUTLINED_FUNCTION_485((uint64_t)&block_descriptor_27_3, v15, v17, v19, v21, MEMORY[0x1E0C809B0], 1107296256, v24, v25);
    swift_release();
    v9 = OUTLINED_FUNCTION_15();
    *(_QWORD *)(v9 + 16) = v1;
    v26 = partial apply for closure #2 in MultiwayViewController.viewWillTransition(to:with:);
    v27 = v9;
    v10 = OUTLINED_FUNCTION_485((uint64_t)&block_descriptor_33_3, v16, v18, v20, v22, v7, 1107296256, v24, v25);
    v11 = v1;
    OUTLINED_FUNCTION_17_22();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, v10);
    OUTLINED_FUNCTION_58_6();
    _Block_release(v8);
    v12 = (uint64_t)v11 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator;
    OUTLINED_FUNCTION_1();
    if (*(_QWORD *)(v12 + 24))
    {
      outlined init with copy of RadarReporting(v12, (uint64_t)aBlock);
      OUTLINED_FUNCTION_565(aBlock);
      v13 = OUTLINED_FUNCTION_65_2();
      v14(v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
  }
}

void closure #1 in MultiwayViewController.viewWillTransition(to:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14[3];

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3B752C0](v2);
  if (v3)
  {
    v4 = (void *)v3;
    swift_beginAccess();

    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)&static Logger.conversationKit);
    v6 = Logger.logObject.getter();
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v14[0] = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v6, v7, "viewWillTransition to device orientation value: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v9, -1, -1);
      MEMORY[0x1C3B751B8](v8, -1, -1);
    }

    swift_beginAccess();
    v12 = MEMORY[0x1C3B752C0](v2);
    if (v12)
    {
      v13 = (void *)v12;
      MultiwayViewController.updateViewConstraints()();

    }
  }
}

uint64_t closure #2 in MultiwayViewController.viewWillTransition(to:with:)()
{
  MultiwayViewController.updatePresentationSize()();
  return MultiwayViewController.updateAllParticipantPresentationContexts(forceUpdate:)(1);
}

void MultiwayViewController.toggleLocalParticipantEffectsButton()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;
  _BYTE *v7;
  void *v8;
  uint64_t (*v9)(void);
  id v10;
  BOOL *v11;
  _BYTE v13[264];
  _BYTE v14[216];
  uint64_t v15[2];
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v15) != 1)
  {
    v5 = (unsigned __int8 *)(v17 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    v6 = *v5 >> 6;
    if (v6)
    {
      if (v6 == 1)
      {
        v7 = (_BYTE *)(v16 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        swift_beginAccess();
        *v7 = 1;
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v13);
        InCallControlsViewController.updateEffectsButton()();
        swift_beginAccess();
        _s15ConversationKit11ParticipantVWOcTm_4();
        MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)((uint64_t)v3, 1);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
        outlined destroy of AccountUpdateNotice((uint64_t)v3, type metadata accessor for Participant);
      }
      else
      {
        v8 = v18;
        if (v18)
        {
          v9 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v18) + 0xA8);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
          v10 = v8;
          LOBYTE(v9) = v9();

          if ((v9 & 1) != 0)
            specialized EffectsHandler.wipeEffectsState()();
        }
        else
        {
          outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
          outlined retain of MultiwayViewController.ViewContent((uint64_t)v13);
        }
        v11 = (BOOL *)(v16 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        swift_beginAccess();
        *v11 = !*v11;
        InCallControlsViewController.updateEffectsButton()();
        MultiwayViewController.updateLocalParticipantControls()();
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
      }
    }
  }
}

_QWORD *MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  _QWORD *result;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  int EnumTagSinglePayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[264];
  _BYTE v64[216];
  uint64_t v65;
  uint64_t v66;
  id v67;

  v3 = v2;
  v56 = a2;
  v61 = a1;
  v4 = type metadata accessor for UUID();
  v62 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v54 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v59);
  v60 = (uint64_t)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v8 = MEMORY[0x1E0C80A78](v7);
  v55 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v52 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v13 = MEMORY[0x1E0C80A78](v12);
  v57 = (uint64_t)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v52 - v18;
  v20 = type metadata accessor for DispatchPredicate();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (_QWORD *)((char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v23 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DEF740], v20);
  v24 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v21 + 8))(v23, v20);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v25 = v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v25, (uint64_t)v64, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v64, (uint64_t)&v65, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(&v65);
  v58 = v3;
  if ((_DWORD)result == 1)
    return result;
  v27 = type metadata accessor for Participant(0);
  v21 = v61;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v28(v19, v61 + *(int *)(v27 + 20), v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v4);
  v52[1] = v66;
  v29 = v66 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v29, (uint64_t)v11, &demangling cache variable for type metadata for Participant?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v27);
  v53 = v27;
  if (EnumTagSinglePayload == 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v64, (uint64_t)v63, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v63);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, &demangling cache variable for type metadata for Participant?);
    v31 = (uint64_t)v17;
    v32 = 1;
  }
  else
  {
    v28(v17, (uint64_t)&v11[*(int *)(v27 + 20)], v4);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v64, (uint64_t)v63, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v63);
    outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for Participant);
    v31 = (uint64_t)v17;
    v32 = 0;
  }
  __swift_storeEnumTagSinglePayload(v31, v32, 1, v4);
  v33 = v60;
  v34 = v60 + *(int *)(v59 + 48);
  outlined init with copy of FeatureEligibility?((uint64_t)v19, v60, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of FeatureEligibility?((uint64_t)v17, v34, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v33, 1, v4) != 1)
  {
    v35 = v57;
    outlined init with copy of FeatureEligibility?(v33, v57, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v34, 1, v4) != 1)
    {
      v36 = v62;
      v37 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v54, v34, v4);
      lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
      v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40 = v37;
      v21 = v61;
      v39(v40, v4);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v39((char *)v35, v4);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if ((v38 & 1) != 0)
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v64);
LABEL_13:
      Participant.isActive.getter();
      if ((v41 & 1) == 0)
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v64);
      MultiwayViewController.unfocusFocusedParticipant()();
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_15:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1BD6441D0;
        v43 = (uint64_t)v55;
        _s15ConversationKit11ParticipantVWOcTm_4();
        v44 = v53;
        __swift_storeEnumTagSinglePayload(v43, 0, 1, v53);
        specialized >> prefix<A>(_:)(v43);
        v46 = v45;
        v48 = v47;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v43, &demangling cache variable for type metadata for Participant?);
        *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v42 + 64) = lazy protocol witness table accessor for type String and conformance String();
        *(_QWORD *)(v42 + 32) = v46;
        *(_QWORD *)(v42 + 40) = v48;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        ParticipantGridViewController.focus(on:)();
        if ((v56 & 1) != 0)
        {
          v49 = v67;
          v50 = v67;
          MultiwayViewController.bringSubviewToFront(_:)(v49);

        }
        v63[0] = 0;
        if (*(_QWORD *)(v21 + *(int *)(v44 + 28)))
          v51 = 4294967292;
        else
          v51 = 4294967168;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v63, v51, 1);
        MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
        MultiwayViewController.needsUpdatePresentationContexts.setter(1);
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v64);
      }
LABEL_24:
      swift_once();
      goto LABEL_15;
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v35, v4);
LABEL_11:
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_13;
  }
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (__swift_getEnumTagSinglePayload(v34, 1, v4) != 1)
    goto LABEL_11;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v33, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v64);
}

_QWORD *MultiwayViewController.updateLocalParticipantControls()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  _QWORD *result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  _QWORD *v25;
  char v26;
  uint64_t (*v27)(void);
  _QWORD *v28;
  char *v29;
  void (*v30)(double);
  _QWORD *v31;
  char v32;
  char *v33;
  uint64_t v34;
  int v35;
  int v36;
  _BYTE v37[240];
  _BYTE v38[216];
  uint64_t v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = v0;
  v2 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchPredicate();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v9 = _dispatchPreconditionTest(_:)();
  result = (_QWORD *)(*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v11 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v38, (uint64_t)v39, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v39);
  if ((_DWORD)result != 1)
  {
    v12 = (char *)(v41 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    v35 = *v12;
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
    v14 = v13 + OBJC_IVAR____TtC15ConversationKit22ConversationController_localParticipant;
    swift_beginAccess();
    _s15ConversationKit11ParticipantVWOcTm_4();
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v38, (uint64_t)v37, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v37);
    Participant.isActiveWithVideo.getter();
    v36 = v15;
    outlined destroy of AccountUpdateNotice((uint64_t)v4, type metadata accessor for Participant);
    v16 = v40;
    v17 = (char *)(v40 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable);
    swift_beginAccess();
    v18 = *v17;
    v19 = *(_QWORD **)(v13 + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v20 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v19) + 0xF0);
    v21 = v19;
    LOBYTE(v20) = v20();

    if (VideoMessageController.State.rawValue.getter(v20) == 0xD000000000000014
      && v22 == 0x80000001BD66C3B0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      v23 = 0;
      if ((v32 & 1) != 0 || (v35 & 0x80000000) == 0)
        goto LABEL_7;
      if (*v17 == 1)
      {
        v33 = (char *)(v16 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
        swift_beginAccess();
        v23 = *v33;
        goto LABEL_7;
      }
    }
    v23 = 0;
LABEL_7:
    v24 = v18 & v36;
    v25 = v42;
    v26 = v23;
    if (v42)
    {
      v27 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v42) + 0xA8);
      v28 = v42;
      LOBYTE(v27) = v27();

      v26 = v27 | v23;
    }
    *(_BYTE *)(v14 + *(int *)(v2 + 40)) = v23;
    LocalParticipantView.configureWithEffectsAvailable(_:effectsSelected:)(v24 & 1, v26 & 1);
    MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(v23, 0);
    v29 = (char *)(v16 + OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreEnabled);
    swift_beginAccess();
    *v29 = v23;
    InCallControlsViewController.updateEffectsButton()();
    if ((v23 & 1) == 0)
    {
      if (v25)
      {
        v30 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *v25) + 0xC8);
        v31 = v25;
        v30(58.0);

      }
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v38);
  }
  return result;
}

void MultiwayViewController.unfocusFocusedParticipant()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t active;
  void *v23;
  id v24;
  unsigned int v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE v28[7];
  _BYTE v29[25];
  _BYTE v30[264];
  _BYTE v31[216];
  uint64_t v32[28];

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v28[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for DispatchPredicate();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *(_QWORD *)v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  v17 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v17, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, (uint64_t)v32, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v32) == 1)
    return;
  v1 = v32;
  v18 = v32[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
  swift_beginAccess();
  outlined init with copy of FeatureEligibility?(v18, (uint64_t)v8, &demangling cache variable for type metadata for Participant?);
  v15 = (_BYTE *)type metadata accessor for Participant(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v15) == 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v30);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    v19 = type metadata accessor for UUID();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v19);
LABEL_6:
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v31);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    return;
  }
  v20 = &v8[*((int *)v15 + 5)];
  v21 = type metadata accessor for UUID();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, v20, v21);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v31, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v30);
  outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v21);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v21) == 1)
    goto LABEL_6;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (one-time initialization token for conversationKit != -1)
    goto LABEL_14;
LABEL_8:
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  active = MultiwayViewController.mostActiveParticipants.getter();
  ParticipantGridViewController.defocus(to:)((Swift::OpaquePointer)active);
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, (uint64_t)v15);
  ParticipantGridViewController.select(_:forFocusing:)();
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
  v23 = (void *)v1[7];
  v24 = v23;
  MultiwayViewController.bringSubviewToFront(_:)(v23);

  v25 = MultiwayViewController.localParticipantCornerToUse.getter();
  v26 = (_BYTE *)(v1[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_floatingControlsState);
  swift_beginAccess();
  if (*v26)
    v27 = v25 | 0x40;
  else
    v27 = v25;
  v29[0] = 0;
  MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v29, v27, 1);
  MultiwayViewController.needsUpdatePresentationContexts.setter(1);
  _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v31);
}

Swift::Void __swiftcall MultiwayViewController.effectsAvailabilityDidChange(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::Bool v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char *v11;
  Swift::Bool *v12;
  char *v13;
  _BYTE v14[216];
  uint64_t v15[27];

  v2 = v1;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v4 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v4 + 16) = xmmword_1BD6441D0;
  v5 = a1;
  LOBYTE(v15[0]) = a1;
  v6 = String.init<A>(reflecting:)();
  v8 = v7;
  *(_QWORD *)(v4 + 64) = OUTLINED_FUNCTION_69_14(MEMORY[0x1E0DEA968]);
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  static os_log_type_t.default.getter();
  OUTLINED_FUNCTION_196_3();
  OUTLINED_FUNCTION_53();
  v9 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v9, (uint64_t)v14);
  OUTLINED_FUNCTION_6_110((uint64_t)v14, (uint64_t)v15);
  OUTLINED_FUNCTION_12_109(v15);
  if (!v10)
  {
    v11 = *(char **)(v9 + 16);
    v12 = (Swift::Bool *)&v11[OBJC_IVAR____TtC15ConversationKit28InCallControlsViewController_effectsAreAvailable];
    OUTLINED_FUNCTION_2_0();
    *v12 = v5;
    v13 = v11;
    InCallControlsViewController.updateEffectsButton()();
    MultiwayViewController.updateLocalParticipantControls()();

  }
  OUTLINED_FUNCTION_70_26();
}

Swift::Void __swiftcall MultiwayViewController.hideEffectsBrowser()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  MultiwayViewController.effectsBrowserViewController.getter();
  if (v0)
  {
    v6 = v0;
    objc_opt_self();
    v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      v2 = (void *)v1;
      MultiwayViewController.effectsViewController.getter();
      if (v3)
      {
        v4 = v3;
        objc_opt_self();
        v5 = (void *)OUTLINED_FUNCTION_443_0();
        if (v5)
          objc_msgSend(v5, sel_resign);

      }
      OUTLINED_FUNCTION_458_0(v2, sel_hideBrowserAnimated_completion_, 0);
    }
    OUTLINED_FUNCTION_7_1(v6);
  }
  else
  {
    OUTLINED_FUNCTION_36();
  }
}

uint64_t MultiwayViewController.localParticipantState()()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  char v18;
  char v19;
  char v20;
  char v21;
  _BYTE v22[8];
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  v21 = ConversationController.isOneToOneModeEnabled.getter();
  ConversationController.activeCallHasPreviouslyReceivedFirstRemoteFrame.getter();
  v20 = v2;
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants];
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  ConversationController.hasRingingCalls.getter();
  v19 = v5;
  ConversationController.isTrackingActiveConversation.getter();
  v18 = v6;
  v7 = (uint64_t *)&v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState];
  swift_beginAccess();
  v8 = *v7;
  ConversationController.isWaitingOnFirstRemoteFrame.getter();
  v10 = v9;
  v11 = ConversationController.isLocallyCreated.getter();
  v12 = &v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_call];
  swift_beginAccess();
  v13 = *((_QWORD *)v12 + 1);
  ObjectType = swift_getObjectType();
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 208);
  swift_unknownObjectRetain();
  LOBYTE(ObjectType) = v15(ObjectType, v13);
  swift_unknownObjectRelease();
  ConversationController.updateShouldShowLastFrameDuringUPlusOneHandoff()();
  LOBYTE(v12) = v1[OBJC_IVAR____TtC15ConversationKit22ConversationController_shouldShowLastFrameDuringUPlusOneHandoff];

  v22[0] = v21 & 1;
  v22[1] = v20 & 1;
  v23 = v4;
  v24 = v19 & 1;
  v25 = v18 & 1;
  v26 = v8;
  v27 = v10 & 1;
  v28 = v11 & 1;
  v29 = ObjectType & 1;
  v30 = (char)v12;
  v16 = MultiwayViewController.localParticipantState(for:)((uint64_t)v22);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t MultiwayViewController.localParticipantCornerToUse.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t ObjectType;
  _BYTE v15[216];
  uint64_t v16[27];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v2);
  v4 = v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 80;
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) == 0)
  {
    v5 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v16) == 1)
    {
      v6 = type metadata accessor for Participant(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v6);
LABEL_5:
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
      goto LABEL_8;
    }
    v7 = *(_QWORD *)(v5 + 8)
       + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_fullScreenFocusedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v7, (uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    v8 = type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
      goto LABEL_5;
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
  }
  if (static Platform.current.getter() == 2)
  {
LABEL_8:
    type metadata accessor for AppUtilities();
    if (static AppUtilities.isRTL.getter())
      return 2;
    else
      return 3;
  }
  v10 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v10, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v16) == 1
    || (v11 = (unsigned __int8 *)(*(_QWORD *)(v10 + 48)
                                + OBJC_IVAR___CNKFaceTimeConstraintsController_mostRecentLocalParticipantCorner),
        swift_beginAccess(),
        result = *v11,
        (_DWORD)result == 4))
  {
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 576))(ObjectType, v12);
  }
  return result;
}

uint64_t MultiwayViewController.localParticipantCornerSize(for:viewContent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  _BYTE *v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[4];
  uint64_t v36[28];

  v3 = v2;
  v6 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_4();
  Participant.isActiveWithVideo.getter();
  v10 = v9;
  outlined destroy of AccountUpdateNotice((uint64_t)v8, type metadata accessor for Participant);
  if ((v10 & 1) == 0)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)logger);
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v13, v14))
      goto LABEL_23;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v36[0] = v16;
    *(_DWORD *)v15 = 136315138;
    LOBYTE(v33) = a1;
    v17 = String.init<A>(reflecting:)();
    v33 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19 = "localParticipantCornerSize: localParticipant is not active with video, using .regular(corner: %s";
    goto LABEL_22;
  }
  if ((MultiwayViewController.wantsStandardControls.getter() & 1) != 0
    && (outlined init with take of MultiwayViewController.ViewContent?(a2, (uint64_t)v36, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v36) != 1))
  {
    v20 = (_BYTE *)(v36[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    swift_beginAccess();
    v11 = (6u >> (*v20 & 7)) & 1;
  }
  else
  {
    v11 = 0;
  }
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) & 1) == 0)
  {
    v21 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_isLocalReactionActive);
    if ((v11 | v21) == 1)
      goto LABEL_13;
    if (one-time initialization token for logger != -1)
      swift_once();
    v29 = type metadata accessor for Logger();
    __swift_project_value_buffer(v29, (uint64_t)logger);
    v13 = Logger.logObject.getter();
    v14 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v13, v14))
    {
LABEL_23:

      return a1;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v35[0] = v16;
    *(_DWORD *)v15 = 136315138;
    LOBYTE(v34) = a1;
    v30 = String.init<A>(reflecting:)();
    v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19 = "localParticipantCornerSize: using .regular(corner: %s) since isShowingControls=false and isPreviewingLocalReaction=false";
LABEL_22:
    _os_log_impl(&dword_1BD004000, v13, v14, v19, v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v16, -1, -1);
    MEMORY[0x1C3B751B8](v15, -1, -1);
    goto LABEL_23;
  }
  v21 = 1;
LABEL_13:
  if (one-time initialization token for logger != -1)
    swift_once();
  v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)logger);
  v23 = Logger.logObject.getter();
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v35[0] = v26;
    *(_DWORD *)v25 = 136315650;
    LOBYTE(v34) = a1;
    v27 = String.init<A>(reflecting:)();
    v34 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 1024;
    LODWORD(v34) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 18) = 1024;
    LODWORD(v34) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v23, v24, "localParticipantCornerSize: using .info(corner: %s) since isShowingControls=%{BOOL}d and isPreviewingLocalReaction=%{BOOL}d", (uint8_t *)v25, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v26, -1, -1);
    MEMORY[0x1C3B751B8](v25, -1, -1);
  }

  return a1 | 0x40;
}

Swift::Void __swiftcall MultiwayViewController.handleUserDidToggleCaptions()()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  char v8;
  char v9;

  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_117_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_59(v3, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v4 = OUTLINED_FUNCTION_7_22();
  *v1 = v4;
  OUTLINED_FUNCTION_4_57(v4, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_16_36();
  OUTLINED_FUNCTION_0_4();
  if ((v0 & 1) != 0)
  {
    v5 = (char *)MultiwayViewController.captionsViewController.getter();
    if (v5)
    {
      v6 = v5;
      v7 = &v5[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
      OUTLINED_FUNCTION_2_0();
      *v7 = 0;

    }
    MultiwayViewController.isCaptioningEnabled.getter();
    v9 = v8;
    swift_retain();
    CaptioningStateManager.setCaptioningEnabled(_:)((v9 & 1) == 0);
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_91();
  }
  else
  {
    __break(1u);
  }
}

void closure #1 in MultiwayViewController.registerCaptioningStateObservers()(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v2;
    v8 = v3;
    MultiwayViewController.onCaptioningStateDidChange(_:)((uint64_t)&v7);

  }
}

void MultiwayViewController.onCaptioningStateDidChange(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  _QWORD *v6;
  void (*v7)(void);
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  id v15;
  _BYTE v16[216];
  uint64_t v17[27];

  v2 = v1;
  v3 = *(_QWORD *)a1;
  v4 = *(unsigned __int8 *)(a1 + 8);
  swift_retain();
  CaptioningStateManager.isCaptioningEnabled.getter();
  swift_release();
  if (v4 == 1)
  {
    if (v3 == 1)
    {
      MultiwayViewController.promptForCaptionsSpeechModelFetch()();
    }
    else
    {
      v6 = *(_QWORD **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator);
      if (v6)
      {
        v7 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v6) + 0x88);
        v8 = v6;
        v7();

      }
      v9 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
      swift_beginAccess();
      outlined init with take of MultiwayViewController.ViewContent?(v9, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v16, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      if (getEnumTag for TapInteraction.EventType(v17) != 1)
      {
        v10 = *(void **)(v9 + 32);
        if (v10)
        {
          v11 = *(_QWORD *)(v9 + 40);
          ObjectType = swift_getObjectType();
          v13 = *(void (**)(uint64_t, uint64_t))(v11 + 88);
          v14 = v10;
          v13(ObjectType, v11);

        }
      }
      specialized CaptionsStateController.updateCaptionsEnablement(pauseTransitionIfAllowed:)(2);
    }
  }
  else
  {
    v5 = MultiwayViewController.captionsViewController.getter();
    if (v5)
    {
      v15 = v5;
      CaptionsViewController.languageModelDownloadingProgress.setter(v3, 0);

    }
  }
}

void MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *, _BYTE *, uint64_t (*)(), uint64_t);
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  char *v30;
  _BYTE v31[24];
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;

  v1 = v0;
  type metadata accessor for PlatformAlert();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_conversationKit);
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  v32._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001BD691D00;
  v5.value._countAndFlagsBits = 0x61737265766E6F43;
  v5.value._object = (void *)0xEF74694B6E6F6974;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v32);

  v8 = objc_msgSend(v2, sel_conversationKit);
  v9._countAndFlagsBits = 0xD000000000000023;
  v33._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001BD691D20;
  v10.value._countAndFlagsBits = 0x61737265766E6F43;
  v10.value._object = (void *)0xEF74694B6E6F6974;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v33);

  v13 = static PlatformAlert.create(with:message:)((void *)v7._countAndFlagsBits, v7._object, v12._countAndFlagsBits, (uint64_t)v12._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = objc_msgSend(v2, sel_conversationKit);
    v34._object = (void *)0xE000000000000000;
    v15._object = (void *)0x80000001BD691D50;
    v15._countAndFlagsBits = 0xD000000000000016;
    v16.value._countAndFlagsBits = 0x61737265766E6F43;
    v16.value._object = (void *)0xEF74694B6E6F6974;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v34);

    v31[0] = 0;
    v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v20 = *(void (**)(uint64_t, void *, _BYTE *, uint64_t (*)(), uint64_t))(*(_QWORD *)v13 + 328);
    swift_retain();
    v20(v18._countAndFlagsBits, v18._object, v31, partial apply for closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch(), v19);
    swift_bridgeObjectRelease();
    swift_release_n();
    v21 = objc_msgSend(v2, sel_conversationKit);
    v35._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = 0x4C45434E4143;
    v22._object = (void *)0xE600000000000000;
    v23.value._countAndFlagsBits = 0x61737265766E6F43;
    v23.value._object = (void *)0xEF74694B6E6F6974;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v35);

    v31[0] = 2;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v1;
    v27 = v1;
    v20(v25._countAndFlagsBits, v25._object, v31, partial apply for closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch(), v26);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(_QWORD))(*(_QWORD *)v13 + 336))(0);
    swift_release();
  }
  else
  {
    swift_retain();
    CaptioningStateManager.setCaptioningEnabled(_:)(0);
    swift_release();
    v28 = (char *)MultiwayViewController.captionsViewController.getter();
    if (v28)
    {
      v29 = v28;
      v30 = &v28[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
      swift_beginAccess();
      *v30 = 0;

    }
  }
}

uint64_t closure #1 in MultiwayViewController.promptForCaptionsSpeechModelFetch()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t result;
  void *v6;

  v1 = a1 + 16;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_beginAccess();
  v2 = MEMORY[0x1C3B752C0](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = MultiwayViewController.captionsViewController.getter();

    if (v4)
    {
      CaptionsViewController.languageModelDownloadingProgress.setter(0, 0);

    }
  }
  swift_beginAccess();
  result = MEMORY[0x1C3B752C0](v1);
  if (result)
  {
    v6 = (void *)result;
    swift_retain();

    CaptioningStateManager.fetchSpeechModel()();
    return swift_release();
  }
  return result;
}

uint64_t closure #2 in MultiwayViewController.promptForCaptionsSpeechModelFetch()()
{
  char *v0;
  void *v1;
  char *v2;

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v0 = (char *)MultiwayViewController.captionsViewController.getter();
  if (v0)
  {
    v1 = v0;
    v2 = &v0[direct field offset for CaptionsViewController.speechModelDownloadPromptBlocked];
    swift_beginAccess();
    *v2 = 0;

  }
  swift_retain();
  CaptioningStateManager.setCaptioningEnabled(_:)(0);
  return swift_release();
}

Swift::Void __swiftcall MultiwayViewController.implementNewCaptionsState(newLayoutState:newRecognizerState:)(ConversationKit::CaptionsLayoutState newLayoutState, Swift::Bool newRecognizerState)
{
  uint64_t v2;
  char v4;
  _BYTE *v5;
  int v6;
  int v7;
  void **v8;
  void *v9;
  id v10;
  uint64_t v11;
  __CFString *v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  _BOOL4 v17;

  v4 = *(_BYTE *)newLayoutState;
  v5 = (_BYTE *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
               + OBJC_IVAR____TtC15ConversationKit22ConversationController__captionsRecognizerShouldBeRunning);
  OUTLINED_FUNCTION_1();
  v6 = *v5;
  ConversationController.captionsRecognizerShouldBeRunning.setter();
  LOBYTE(v17) = v4;
  MultiwayViewController.updateCaptionsLayoutState(_:)((unsigned __int8 *)&v17);
  v7 = *v5;
  if (v6 == v7)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v14 = OUTLINED_FUNCTION_17_2();
    v13 = OUTLINED_FUNCTION_3(v14, (uint64_t)logger);
    v15 = static os_log_type_t.default.getter();
    if (OUTLINED_FUNCTION_13_0(v15))
    {
      v16 = OUTLINED_FUNCTION_105();
      *(_DWORD *)v16 = 67109376;
      v17 = newRecognizerState;
      OUTLINED_FUNCTION_479_0();
      *(_WORD *)(v16 + 8) = 1024;
      v17 = v7;
      OUTLINED_FUNCTION_479_0();
      _os_log_impl(&dword_1BD004000, v13, (os_log_type_t)v2, "[MultiwayViewController] Could not update captions recognizer state to %{BOOL}d. State remains at %{BOOL}d.", (uint8_t *)v16, 0xEu);
      OUTLINED_FUNCTION_60();
    }
  }
  else
  {
    v8 = (void **)MEMORY[0x1E0DBD4C8];
    if (*v5)
      v8 = (void **)MEMORY[0x1E0DBD4C0];
    v9 = *v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    OUTLINED_FUNCTION_45_21();
    v10 = v9;
    v11 = OUTLINED_FUNCTION_64();
    v12 = (__CFString *)MEMORY[0x1C3B72E00](v11);
    OUTLINED_FUNCTION_2_1();
    v13 = CFNotificationCenterGetDarwinNotifyCenter();
    OUTLINED_FUNCTION_353_2((__CFNotificationCenter *)v13, v12);

  }
  OUTLINED_FUNCTION_289_0();
}

void MultiwayViewController.updateCaptionsLayoutState(_:)(unsigned __int8 *a1)
{
  void *v1;
  int v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v2 = *a1;
  MultiwayViewController.constraintController.getter();
  if (!v3
    || (v4 = v3,
        v5 = &v3[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState],
        swift_beginAccess(),
        LODWORD(v5) = *v5,
        v4,
        v2 != (_DWORD)v5))
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)logger);
    v7 = v1;
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v19 = v11;
      *(_DWORD *)v10 = 136315394;
      v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      MultiwayViewController.constraintController.getter();
      if (v14)
      {
        v15 = v14;
        swift_beginAccess();

        v16 = String.init<A>(reflecting:)();
        v18 = v17;
      }
      else
      {
        v18 = 0xE300000000000000;
        v16 = 7104878;
      }
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v18, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BD004000, v8, v9, "updateCaptionsLayoutState to %s from %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v11, -1, -1);
      MEMORY[0x1C3B751B8](v10, -1, -1);
    }
    else
    {

    }
    swift_unknownObjectWeakInit();
    specialized closure #1 in MultiwayViewController.updateCaptionsLayoutState(_:)((uint64_t)&v19, v2);
    swift_unknownObjectWeakDestroy();
  }
}

void specialized closure #1 in MultiwayViewController.updateCaptionsLayoutState(_:)(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  int v12;
  char *v13;
  void *v14;
  char *v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char *v21;
  void *v22;
  char *v23;
  int v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t ObjectType;
  char v29;
  char *v31;
  void *v32;
  void *v33;
  char *v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  char *v42;
  void *v43;
  char *v44;
  char v45;
  void *v46;
  id v47;
  void *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  unsigned int v53;
  _BYTE v54[79];
  unsigned __int8 v55;
  _BYTE v56[216];
  _BYTE v57[216];
  uint64_t v58[30];
  _BYTE v59[216];
  uint64_t v60[27];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v10 = MEMORY[0x1C3B752C0](a1);
  if (!v10)
    return;
  v11 = (char *)v10;
  v12 = a2;
  MultiwayViewController.constraintController.getter();
  if (v13)
  {
    v14 = v13;
    v15 = &v13[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
    swift_beginAccess();
    v16 = *v15;

    if (v16)
    {
      if (v16 == 1)
      {
        if (v12 != 2)
          goto LABEL_15;
        goto LABEL_9;
      }
      if (v12 != 1)
        goto LABEL_15;
    }
    else
    {
      if (!v12)
        goto LABEL_15;
      if (v12 != 1)
      {
LABEL_9:
        v17 = MultiwayViewController.captionsViewController.getter();
        if (v17)
        {
          v18 = v17;
          CaptionsViewController.minimize(_:)(0);

        }
        LOBYTE(v60[0]) = 0;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)((unsigned __int8 *)v60, 0xFCu, 1);
        goto LABEL_15;
      }
    }
    v19 = MultiwayViewController.captionsViewController.getter();
    if (v19)
    {
      v20 = v19;
      CaptionsViewController.minimize(_:)(1);

    }
  }
LABEL_15:
  MultiwayViewController.constraintController.getter();
  if (v21)
  {
    v22 = v21;
    v23 = &v21[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState];
    swift_beginAccess();
    v24 = *v23;

  }
  else
  {
    v24 = 3;
  }
  MultiwayViewController.constraintController.getter();
  if (v25)
  {
    v26 = v25;
    LOBYTE(v60[0]) = v12;
    MultiwayViewConstraintsController.captionsState.setter((uint64_t)v60);

  }
  v27 = *(_QWORD *)&v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8];
  ObjectType = swift_getObjectType();
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 320))(ObjectType, v27);
  MultiwayViewController.layoutNewControlsState(animated:reducedMotion:animation:completion:)(1, v29 & 1, 0, 0, 0, 0);
  if (v24 == 3 || v24 != v12)
  {
    v31 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_delegate];
    swift_beginAccess();
    v32 = (void *)MEMORY[0x1C3B752C0](v31);
    if (v32)
    {
      v33 = v32;
      if ((objc_msgSend(v32, sel_respondsToSelector_, sel_didChangeCaptionsLayout) & 1) != 0)
        objc_msgSend(v33, sel_didChangeCaptionsLayout);
      swift_unknownObjectRelease();
    }
    v34 = &v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_captionsLayoutChangeHandler];
    swift_beginAccess();
    v35 = *(void (**)(uint64_t))v34;
    if (*(_QWORD *)v34)
    {
      v36 = swift_retain();
      v35(v36);
      outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v35);
    }
  }
  MultiwayViewController.isCaptioningEnabled.getter();
  MultiwayViewController.updateCameraBlurState(captionEnabled:)(v37 & 1);
  MultiwayViewController.updateCurrentLayout()();
  MultiwayViewController.oneOnOneParticipant.getter((uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
    return;
  }
  outlined init with take of Participant((uint64_t)v6, (uint64_t)v9);
  v38 = (uint64_t)&v11[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v38, (uint64_t)v59, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v59, (uint64_t)v60, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v60) != 1)
  {
    v39 = *(id *)(v38 + 8);
    ParticipantGridViewController.update(participant:broadcastingState:)();

  }
  v40 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v41 = objc_msgSend(v40, sel_userInterfaceIdiom);

  if (v41 != (id)1)
    goto LABEL_42;
  MultiwayViewController.constraintController.getter();
  if (v42
    && (v43 = v42,
        v44 = &v42[OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState],
        swift_beginAccess(),
        LODWORD(v44) = *v44,
        v43,
        (_DWORD)v44 == 2))
  {
    MultiwayViewController.setLocalParticipantState(_:animated:)(3u, 1);
    outlined init with take of MultiwayViewController.ViewContent?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v58) != 1)
    {
      swift_retain();
      v45 = 0;
LABEL_41:
      ParticipantViewDragController.dragEnabled.setter(v45);
      swift_release();
    }
  }
  else
  {
    outlined init with take of MultiwayViewController.ViewContent?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v58) != 1)
    {
      swift_retain();
      v45 = 1;
      goto LABEL_41;
    }
  }
LABEL_42:
  outlined init with take of MultiwayViewController.ViewContent?(v38, (uint64_t)v57, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v57, (uint64_t)v58, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v58) == 1)
  {
    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
LABEL_47:

    return;
  }
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v57, (uint64_t)v56, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v46 = (void *)v58[17];
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v56);
  v47 = objc_msgSend(v46, sel_view);
  if (v47)
  {
    v48 = v47;
    objc_msgSend(v47, sel_frame);
    v50 = v49;
    v52 = v51;

    v53 = MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(v50, v52);
    if (v53 > 0xFBu)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v57);
      goto LABEL_47;
    }
    v55 = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v55, v53, 1);
    MultiwayViewController.updateIsCaptionsViewDragEnabled()();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v57);

    outlined destroy of AccountUpdateNotice((uint64_t)v9, type metadata accessor for Participant);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *MultiwayViewController.updateCameraBlurState(captionEnabled:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[216];
  _BYTE v14[216];
  uint64_t v15[7];

  v3 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v3, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v15);
  if ((_DWORD)result != 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v14, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v13);
    ConversationController.supportsCameraBlur.getter();
    if ((v5 & 1) != 0)
      MultiwayViewController.cameraBlurAllowedForCurrentCaptionsState.getter();
    LocalParticipantView.supportsCameraBlur.setter();
    if ((a1 & 1) != 0
      && (objc_msgSend((id)objc_opt_self(), sel_allowsPortraitBlurWhenCaptionsEnabled) & 1) == 0)
    {
      MultiwayViewController.localVideoProvider.getter();
      v6 = v11;
      v7 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 96))(0, v6, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      MultiwayViewController.localVideoProvider.getter();
      v8 = v11;
      v9 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(1, v8, v9);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
      return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v14);
    }
  }
  return result;
}

void MultiwayViewController.oneOnOneParticipant.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_2();
  ConversationController.remoteOneToOneParticipant.getter();
  v8 = OUTLINED_FUNCTION_99_5();
  v10 = OUTLINED_FUNCTION_69_0(v8, v9, v6);
  if (v11)
  {
    OUTLINED_FUNCTION_30_7(v10, &demangling cache variable for type metadata for Participant?);
LABEL_7:
    v13 = 1;
    goto LABEL_8;
  }
  outlined init with take of Participant((uint64_t)v5, v1);
  Participant.isActiveWithVideo.getter();
  if ((v12 & 1) == 0)
  {
    OUTLINED_FUNCTION_140_1(v12, type metadata accessor for Participant);
    goto LABEL_7;
  }
  outlined init with take of Participant(v1, a1);
  v13 = 0;
LABEL_8:
  __swift_storeEnumTagSinglePayload(a1, v13, 1, v6);
  OUTLINED_FUNCTION_91();
}

uint64_t MultiwayViewController.nextLocalParticipantState(forNewCaptionsViewPosition:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  unsigned __int8 v21;
  unsigned int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD v41[2];
  uint64_t v42;
  _BYTE v43[216];
  _BYTE v44[216];
  uint64_t v45[27];
  CGRect v46;
  CGRect v47;

  v5 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v5, (uint64_t)v44, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v44, (uint64_t)v45, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v45) == 1)
    goto LABEL_10;
  v6 = v45[18];
  swift_beginAccess();
  if (*(_BYTE *)(v6 + 16) != 1)
    goto LABEL_10;
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v44, (uint64_t)v43, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined retain of MultiwayViewController.ViewContent((uint64_t)v43);
  MultiwayViewController.captionsLayoutState.getter((char *)v41);
  if (LOBYTE(v41[0]) != 1)
  {
LABEL_9:
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
LABEL_10:
    if (one-time initialization token for logger != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)logger);
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1BD004000, v24, v25, "nextLocalParticipantState is nil due to viewContent state", v26, 2u);
      MEMORY[0x1C3B751B8](v26, -1, -1);
    }
    goto LABEL_14;
  }
  result = (uint64_t)objc_msgSend((id)v45[17], sel_view);
  if (result)
  {
    v8 = (void *)result;
    objc_msgSend((id)result, sel_frame);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    objc_msgSend((id)v45[7], sel_frame);
    v47.origin.x = v17;
    v47.origin.y = v18;
    v47.size.width = v19;
    v47.size.height = v20;
    v46.origin.x = v10;
    v46.origin.y = v12;
    v46.size.width = v14;
    v46.size.height = v16;
    if (CGRectIntersectsRect(v46, v47))
    {
      v21 = MultiwayViewController.localParticipantState()();
      if (!(v21 >> 6))
      {
        v22 = 16777986;
        goto LABEL_18;
      }
      if (v21 >> 6 == 1)
      {
        v21 &= 0x3Fu;
        v22 = 1094730562;
LABEL_18:
        v28 = 8 * v21;
        if (one-time initialization token for logger != -1)
          swift_once();
        v27 = v22 >> v28;
        v29 = type metadata accessor for Logger();
        __swift_project_value_buffer(v29, (uint64_t)logger);
        v30 = Logger.logObject.getter();
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = swift_slowAlloc();
          v33 = swift_slowAlloc();
          v42 = v33;
          *(_DWORD *)v32 = 136315394;
          *(double *)v41 = a1;
          *(double *)&v41[1] = a2;
          type metadata accessor for CGPoint(0);
          v34 = String.init<A>(reflecting:)();
          v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 12) = 2080;
          LOBYTE(v41[0]) = v27;
          v36 = String.init<A>(reflecting:)();
          v41[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v37, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BD004000, v30, v31, "nextLocalParticipantState forNewCaptionsViewPosition %s is %s", (uint8_t *)v32, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3B751B8](v33, -1, -1);
          MEMORY[0x1C3B751B8](v32, -1, -1);

          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        }
        else
        {
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);

        }
        return v27;
      }
      if (one-time initialization token for logger != -1)
        swift_once();
      v38 = type metadata accessor for Logger();
      __swift_project_value_buffer(v38, (uint64_t)logger);
      v24 = Logger.logObject.getter();
      v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_1BD004000, v24, v39, "nextLocalParticipantState is nil, unhandled localParticipantState", v40, 2u);
        MEMORY[0x1C3B751B8](v40, -1, -1);

        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
        return 252;
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v44);
LABEL_14:

      return 252;
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

_QWORD *MultiwayViewController.updateIsCaptionsViewDragEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  unsigned int v3;
  char v4;
  char v5;
  _BYTE v6[216];
  _BYTE v7[216];
  uint64_t v8[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, (uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v8);
  if ((_DWORD)result != 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v7, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v6);
    if ((MultiwayViewController.localParticipantState()() & 0x80) != 0)
    {
      v4 = 0;
    }
    else
    {
      v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_featureFlags), sel_captionDraggingEnabled);
      if (v3)
      {
        if (static Platform.current.getter()
          || (MultiwayViewController.captionsLayoutState.getter(&v5), v5 != 1))
        {
          LOBYTE(v3) = 0;
        }
        else
        {
          LOBYTE(v3) = ConversationController.isOneToOneModeEnabled.getter();
        }
      }
      v4 = v3 & 1;
    }
    CaptionsViewDragController.dragEnabled.setter(v4);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  return result;
}

uint64_t MultiwayViewController.handleShareLinkAction(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags();
  v20 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS.QoSClass();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF530], v8);
  v12 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = partial apply for closure #1 in MultiwayViewController.handleShareLinkAction(_:);
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  aBlock[3] = &block_descriptor_248;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = a1;
  static DispatchQoS.unspecified.getter();
  v21 = MEMORY[0x1E0DEE9D8];
  lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x1C3B7361C](0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  swift_release();
  return swift_release();
}

void closure #1 in MultiwayViewController.handleShareLinkAction(_:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;

  v4 = a1 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3B752C0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = *(id *)(v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);

    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    swift_retain();
    v9 = a2;
    ConversationController.shareableLink(completionHandler:)((uint64_t)partial apply for closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:), v8);
    swift_release();

  }
}

uint64_t closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v37 = a3;
  v38 = a4;
  v6 = type metadata accessor for DispatchWorkItemFlags();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v36 = v7;
    v20 = a1;
    v21 = objc_msgSend(v20, sel_URL);
    if (v21)
    {
      v22 = v21;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v13);
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v13) != 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for URL?);
        type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        v23 = (void *)static OS_dispatch_queue.main.getter();
        v24 = (_QWORD *)swift_allocObject();
        v25 = v38;
        v24[2] = v37;
        v24[3] = v20;
        v24[4] = v25;
        aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:);
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
        aBlock[3] = &block_descriptor_257;
        v26 = _Block_copy(aBlock);
        v27 = v20;
        swift_retain();
        v28 = v25;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        MEMORY[0x1C3B7361C](0, v12, v9, v26);
        _Block_release(v26);

        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v6);
        return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v12, v40);
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v13);
    }

    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v19, &demangling cache variable for type metadata for URL?);
  }
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BD6441D0;
  if (a2)
  {
    aBlock[0] = a2;
    v31 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    v32 = String.init<A>(reflecting:)();
    v34 = v33;
  }
  else
  {
    v34 = 0xE300000000000000;
    v32 = 7104878;
  }
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v34;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  return swift_bridgeObjectRelease();
}

void closure #1 in closure #1 in closure #1 in MultiwayViewController.handleShareLinkAction(_:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  id v15;
  char v16;
  objc_class *v17;
  _UNKNOWN **v18;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3B752C0](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v16 = 0;
    v8 = (objc_class *)type metadata accessor for LinkShareCoordinator();
    objc_allocWithZone(v8);
    v9 = a2;
    v10 = v7;
    v11 = a3;
    v17 = v8;
    v18 = &protocol witness table for LinkShareCoordinator;
    v15 = LinkShareCoordinator.init(type:hostViewController:originatingView:)();
    v12 = (uint64_t)v10 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_linkShareCoordinator;
    swift_beginAccess();
    outlined assign with take of Date?((uint64_t)&v15, v12, (uint64_t *)&demangling cache variable for type metadata for LinkShareCoordinatorProtocol?);
    swift_endAccess();
    if (*(_QWORD *)(v12 + 24))
    {
      outlined init with copy of RadarReporting(v12, (uint64_t)&v15);
      v13 = (uint64_t)v17;
      v14 = v18;
      __swift_project_boxed_opaque_existential_1(&v15, (uint64_t)v17);
      ((void (*)(double (*)(_QWORD), _QWORD, uint64_t, _UNKNOWN **))v14[2])(TPNumberPadCharacter.rawValue.getter, 0, v13, v14);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    }
    else
    {

    }
  }
}

void closure #1 in MultiwayViewController.scheduleLinkEducationFirstTimeAlert()(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    MultiwayViewController.showLinkEducationFirstTimeAlert(for:)(a2);

  }
}

uint64_t MultiwayViewController.showLinkEducationFirstTimeAlert(for:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  void *countAndFlagsBits;
  void *object;
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t result;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  char v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  MultiwayViewController.localParticipantHandleFormattedString(for:)(a1);
  if (v2)
  {
    countAndFlagsBits = v1;
    object = v2;
  }
  else
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_conversationKit);
    v6._countAndFlagsBits = 0xD00000000000002DLL;
    v24._object = (void *)0xE000000000000000;
    v6._object = (void *)0x80000001BD691EF0;
    v7.value._countAndFlagsBits = 0x61737265766E6F43;
    v7.value._object = (void *)0xEF74694B6E6F6974;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0;
    v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v24);
    countAndFlagsBits = (void *)v9._countAndFlagsBits;
    object = v9._object;

  }
  type metadata accessor for PlatformAlert();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_conversationKit);
  v25._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001BD691F20;
  v12._countAndFlagsBits = 0xD000000000000023;
  v13.value._countAndFlagsBits = 0x61737265766E6F43;
  v13.value._object = (void *)0xEF74694B6E6F6974;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v25);

  v16 = static PlatformAlert.create(with:message:)(countAndFlagsBits, object, v15._countAndFlagsBits, (uint64_t)v15._object);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v16)
  {
    v18 = objc_msgSend(v10, sel_conversationKit);
    v19._countAndFlagsBits = 0xD000000000000025;
    v26._object = (void *)0xE000000000000000;
    v19._object = (void *)0x80000001BD691F50;
    v20.value._countAndFlagsBits = 0x61737265766E6F43;
    v20.value._object = (void *)0xEF74694B6E6F6974;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v26);

    v23 = 0;
    (*(void (**)(uint64_t, void *, char *, double (*)(_QWORD), _QWORD))(*(_QWORD *)v16 + 328))(v22._countAndFlagsBits, v22._object, &v23, TPNumberPadCharacter.rawValue.getter, 0);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD))(*(_QWORD *)v16 + 336))(0);
    return swift_release();
  }
  return result;
}

void MultiwayViewController.localParticipantHandleFormattedString(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  OUTLINED_FUNCTION_565(a1);
  v1 = OUTLINED_FUNCTION_65_2();
  v3 = (void *)v2(v1);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_association);
    if (v5)
    {
      v6 = v5;
      if (objc_msgSend(v5, sel_type) == (id)2)
      {
        v7 = (uint64_t)objc_msgSend(v6, sel_isPrimary);
        if ((v7 & 1) == 0)
        {
          v9 = OUTLINED_FUNCTION_9(v7, sel_handle);

LABEL_7:
          v10 = TUHandle.formattedPhoneNumber.getter((uint64_t)v8);
          if (v11)
          {

          }
          else
          {
            v12 = OUTLINED_FUNCTION_25_1((uint64_t)v10, sel_value);
            static String._unconditionallyBridgeFromObjectiveC(_:)();

          }
          goto LABEL_11;
        }
      }

    }
    v8 = objc_msgSend(v4, sel_handle);
    v9 = v8;
    goto LABEL_7;
  }
LABEL_11:
  OUTLINED_FUNCTION_38_21();
  OUTLINED_FUNCTION_91();
}

void *MultiwayViewController.accessibilityConstraintController()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[216];
  uint64_t v6[27];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v5, (uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  v2 = 0;
  if (getEnumTag for TapInteraction.EventType(v6) != 1)
  {
    v2 = *(void **)(v1 + 48);
    v3 = v2;
  }
  return v2;
}

Swift::Void __swiftcall MultiwayViewController.embedEffectsBrowserViewController(_:)(UIViewController *a1)
{
  UIViewController *v2;

  OUTLINED_FUNCTION_25_1((uint64_t)a1, sel_loadViewIfNeeded);
  v2 = a1;
  MultiwayViewController.effectsBrowserViewController.setter(a1);
}

void MultiwayViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v6;

  v4 = v3;
  if (a2)
  {
    v6 = MEMORY[0x1C3B72E00]();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);
  OUTLINED_FUNCTION_14_18();

  OUTLINED_FUNCTION_18();
}

void MultiwayViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void (*protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  MultiwayViewController.effectsViewController.getter();
  *a1 = v3;
  return protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController;
}

void protocol witness for EffectsHandler.effectsViewController.modify in conformance MultiwayViewController(id *a1, char a2)
{
  id v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    MultiwayViewController.effectsViewController.setter(v2);
    OUTLINED_FUNCTION_7_1(v3);
  }
  else
  {
    MultiwayViewController.effectsViewController.setter(*a1);
    OUTLINED_FUNCTION_36();
  }
}

void (*protocol witness for EffectsHandler.effectsBrowserViewController.modify in conformance MultiwayViewController(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  MultiwayViewController.effectsBrowserViewController.getter();
  *a1 = v3;
  return MultiwayViewController.effectsBrowserViewController.modify;
}

uint64_t (*protocol witness for EffectsHandler.avcEffects.modify in conformance MultiwayViewController())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

id protocol witness for EffectsHandler.setControlsState(_:animated:) in conformance MultiwayViewController(uint64_t a1, char a2)
{
  void *v2;

  return objc_msgSend(v2, sel_setControlsState_animated_, a1, a2 & 1);
}

Swift::Void __swiftcall MultiwayViewController.didSelectApp(_:)(Swift::String a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  _BYTE v21[264];
  _BYTE v22[216];
  uint64_t v23[6];
  uint64_t v24;

  OUTLINED_FUNCTION_96();
  v3 = v1;
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v6 = v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_42_31();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_59(v8, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v9 = OUTLINED_FUNCTION_7_22();
  *v2 = v9;
  OUTLINED_FUNCTION_36_6(v9, *MEMORY[0x1E0DEF740]);
  OUTLINED_FUNCTION_112_7();
  OUTLINED_FUNCTION_28_44();
  if ((v1 & 1) != 0)
  {
    v10 = (uint64_t)v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_54_41(v10, (uint64_t)v22);
    OUTLINED_FUNCTION_54_41((uint64_t)v22, (uint64_t)v23);
    OUTLINED_FUNCTION_12_109(v23);
    if (!v11)
    {
      v12 = v24;
      v13 = (_QWORD *)(v24 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      v14 = OUTLINED_FUNCTION_1();
      if ((unint64_t)(*v13 - 4) >= 3)
      {
        OUTLINED_FUNCTION_476(v14, v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        outlined retain of MultiwayViewController.ViewContent((uint64_t)v21);
      }
      else
      {
        v16 = objc_opt_self();
        OUTLINED_FUNCTION_476(v16, v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
        v18 = outlined retain of MultiwayViewController.ViewContent((uint64_t)v21);
        objc_msgSend(OUTLINED_FUNCTION_25_1(v18, sel_currentDevice), sel_userInterfaceIdiom);
        OUTLINED_FUNCTION_18_14();
        if (!&demangling cache variable for type metadata for MultiwayViewController.ViewContent?)
          OUTLINED_FUNCTION_18_71(v3, sel_setControlsState_animated_, 2);
      }
      v19 = (unsigned __int8 *)(v12 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      OUTLINED_FUNCTION_1();
      if (*v19 > 0x3Fu)
      {
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v22);
      }
      else
      {
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_157();
        OUTLINED_FUNCTION_420_1();
        MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)((uint64_t)v6, 0);
        _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v22);
        OUTLINED_FUNCTION_40_58((uint64_t)v6);
      }
    }
    OUTLINED_FUNCTION_65_1();
  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.didSelectEffect(_:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  OUTLINED_FUNCTION_399_2();
  if (CFXEffect.isAnimoji()())
  {
    MultiwayViewController.localVideoProvider.getter();
    v0 = v5[4];
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v1 = OUTLINED_FUNCTION_23_11(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 120));
    v2 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    if ((v1 & 1) != 0)
    {
      OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for OS_os_log);
      v4 = v3;
      static OS_os_log.default.getter();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_255();

      MultiwayViewController.toggleCinematicFraming()();
    }
  }
  OUTLINED_FUNCTION_289_0();
}

void protocol witness for CaptionsStateController.captionsPausedState.setter in conformance MultiwayViewController(char *a1)
{
  char v1;

  v1 = *a1;
  MultiwayViewController.captionsPausedState.setter(&v1);
}

uint64_t (*protocol witness for CaptionsStateController.captionsPausedState.modify in conformance MultiwayViewController())()
{
  swift_beginAccess();
  return CaptionsViewController.captionVisibilityDuringCapture.modify;
}

void MultiwayViewController.captionsBubbleModeIsAllowed.getter()
{
  uint64_t v0;
  id v1;

  v0 = static Platform.current.getter();
  if (!(_BYTE)v0)
  {
    v1 = objc_msgSend(OUTLINED_FUNCTION_25_1(v0, sel_traitCollection), sel_preferredContentSizeCategory);
    OUTLINED_FUNCTION_49_5();
    UIContentSizeCategory.isAccessibilityCategory.getter();
    OUTLINED_FUNCTION_37_0();
  }
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.isReadyToShowCallDetails.getter()
{
  if ((MultiwayViewController.isOnScreen.getter() & 1) != 0)
    OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_32();
}

void MultiwayViewController.gridViewOverlappingInsets.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char *v12;
  double *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  void (*v18)(uint64_t);
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  char v27;
  char *v28;
  int v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  char *v34;
  void (*v35)(double);
  char *v36;
  char v37[25];
  _BYTE v38[216];
  uint64_t v39[45];
  _BYTE v40[216];
  uint64_t v41[27];

  v5 = v0;
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_15_56();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v8 = OUTLINED_FUNCTION_7_22();
  *v1 = v8;
  OUTLINED_FUNCTION_301_3(v8, *MEMORY[0x1E0DEF740]);
  v9 = OUTLINED_FUNCTION_83_12();
  OUTLINED_FUNCTION_101((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_11;
  }
  v10 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
  OUTLINED_FUNCTION_1();
  if (*(double *)(v10 + 8) == 0.0 && *(double *)(v10 + 16) == 0.0)
    return;
  MultiwayViewController.layoutIdiom.getter((BOOL *)v41);
  if (LOBYTE(v41[0]) != 1)
    return;
  if ((MultiwayViewController.isModallyPresentingCallDetails.getter() & 1) != 0)
    return;
  v2 = v5 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v2, (uint64_t)v40);
  OUTLINED_FUNCTION_5_131((uint64_t)v40, (uint64_t)v41);
  OUTLINED_FUNCTION_12_109(v41);
  if (v11)
    return;
  v12 = *(char **)(v2 + 48);
  v13 = (double *)&v12[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantAspectRatio];
  OUTLINED_FUNCTION_1();
  if (((_BYTE)v13[4] & 1) == 0 && (*v13 != 1.0 || v13[1] != 1.0 || v13[2] != 1.0 || v13[3] != 1.0))
    return;
  v3 = &v12[OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState];
  OUTLINED_FUNCTION_1();
  if ((*v3 & 0xFE) == 0x80)
    return;
  v14 = &v12[OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState];
  OUTLINED_FUNCTION_1();
  if (*v14 != 1)
    return;
  v4 = v12;
  Layout.LocalParticipantViewCameraControls.init()();
  static Platform.current.getter();
  static Layout.MediaPip.padding.getter();
  if (one-time initialization token for shared != -1)
    goto LABEL_35;
LABEL_11:
  v15 = static Defaults.shared;
  v16 = *(void (**)(void))(*(_QWORD *)static Defaults.shared + 384);
  v16();
  v17 = static Platform.current.getter();
  v18 = *(void (**)(uint64_t))(*(_QWORD *)v15 + 488);
  v18(v17);
  v19 = static Layout.MediaPip.padding.getter();
  v35 = (void (*)(double))v16;
  ((void (*)(double))v16)(v19);
  v20 = static Platform.current.getter();
  v18(v20);
  v36 = v4;
  v21 = &v4[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout];
  v22 = *(_QWORD *)&v4[OBJC_IVAR___CNKFaceTimeConstraintsController_viewControllerLayout + 24];
  v23 = *((_QWORD *)v21 + 4);
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 168))(v22, v23);
  if (*v3 >= 0x40u)
  {
    v24 = static Layout.MediaPip.padding.getter();
    v35(v24);
    v25 = static Platform.current.getter();
    v18(v25);
  }
  v26 = &v36[OBJC_IVAR___CNKFaceTimeConstraintsController_participantListState];
  OUTLINED_FUNCTION_1();
  v27 = *v26;
  v28 = &v36[OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState];
  OUTLINED_FUNCTION_1();
  if ((v27 & 1) == 0)
  {
    v29 = *v28;
    if ((v29 - 1) > 1)
      goto LABEL_24;
    if (one-time initialization token for bottomInsetAfterPadding != -1)
      swift_once();
  }
  v29 = *v28;
LABEL_24:
  if (v29
    || (OUTLINED_FUNCTION_5_131(v2, (uint64_t)v38),
        OUTLINED_FUNCTION_5_131((uint64_t)v38, (uint64_t)v39),
        OUTLINED_FUNCTION_12_109(v39),
        v11))
  {

    return;
  }
  v30 = *(char **)(v2 + 8);
  v31 = &v30[OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_participants];
  OUTLINED_FUNCTION_1();
  if (*(_QWORD *)(*(_QWORD *)v31 + 16) == 1)
  {
    v32 = v30;
  }
  else
  {
    v34 = v30;
    ParticipantGridViewController.effectiveLayoutStyle.getter(v37);
    if (v37[0] == 2 || (v37[0] & 1) == 0)
    {

      return;
    }
  }
  v33 = OUTLINED_FUNCTION_2_2((uint64_t)v32, sel_view);
  if (v33)
  {
    objc_msgSend(v33, sel_safeAreaInsetFrame);
    OUTLINED_FUNCTION_237_5();
    static Layout.MediaPip.padding.getter();
    OUTLINED_FUNCTION_11_6();
    static Platform.current.getter();
    OUTLINED_FUNCTION_12_4();

  }
  else
  {
    __break(1u);
  }
}

void MultiwayViewController.mediaPipFrame.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  double *v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v1, sel_viewIfLoaded);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, sel_window);
      if (v9
        && (v10 = v9, v11 = objc_msgSend(v9, sel_windowScene),
                      v10,
                      v11))
      {
        v12 = (double *)&v1[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipFrameInWindowScene];
        swift_beginAccess();
        objc_msgSend(v8, sel_convertRect_fromCoordinateSpace_, objc_msgSend(v11, sel_coordinateSpace), *v12, v12[1], v12[2], v12[3]);

        swift_unknownObjectRelease();
      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t result;
  char v19;
  double v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  LODWORD(v28) = a1;
  v1 = type metadata accessor for DispatchWorkItemFlags();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTime();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  v13 = type metadata accessor for DispatchPredicate();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = _dispatchPreconditionTest(_:)();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = v28 & 1;
    if ((v28 & 1) != 0)
      v20 = 2.0;
    else
      v20 = 1.0;
    v21 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    MEMORY[0x1C3B72C50](v10, v20);
    v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v10, v6);
    v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 24) = v19;
    aBlock[4] = partial apply for closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:);
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_328;
    v24 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    v25 = v29;
    v26 = v33;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B735B0](v12, v5, v25, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
    return ((uint64_t (*)(char *, uint64_t))v28)(v12, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void closure #1 in MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  CGFloat *v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  id v16;
  CGRect v17;
  CGRect v18;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3B752C0](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = v4 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_mediaPipInfo;
    swift_beginAccess();
    if (*(double *)(v6 + 8) != 0.0 || *(double *)(v6 + 16) != 0.0)
    {
      v7 = (CGFloat *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame];
      if (!CGRectIsEmpty(*(CGRect *)&v5[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_cachedMediaPipSafeAreaFrame]))
      {
        v8 = *v7;
        v9 = v7[1];
        v10 = v7[2];
        v11 = v7[3];
        MultiwayViewController.mediaPipFrame.getter();
        v18.origin.x = v12;
        v18.origin.y = v13;
        v18.size.width = v14;
        v18.size.height = v15;
        v17.origin.x = v8;
        v17.origin.y = v9;
        v17.size.width = v10;
        v17.size.height = v11;
        if (!CGRectContainsRect(v17, v18))
        {
          MultiwayViewController.cachedMediaPipSafeAreaFrame.setter(0.0, 0.0, 0.0, 0.0);
          v16 = objc_msgSend(v5, sel_viewIfLoaded);
          objc_msgSend(v16, sel_setNeedsLayout);

          if ((a2 & 1) == 0)
            MultiwayViewController.verifyMediaPipSafeAreaFrameSoon(isSecondTry:)(1);
        }
      }
    }

  }
}

uint64_t MultiwayViewController.nameForPhotoIndicator.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_93();
  v45 = v2;
  v46 = v3;
  v4 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersonNameComponents();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0_7();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_30_6();
  MultiwayViewController.oneOnOneParticipant.getter(v0);
  v11 = OUTLINED_FUNCTION_69_0(v0, 1, v4);
  if (v12)
  {
    OUTLINED_FUNCTION_96_3(v11, &demangling cache variable for type metadata for Participant?);
    return 0;
  }
  v14 = *(void **)(v0 + *(int *)(v4 + 28));
  if (!v14)
  {
LABEL_12:
    OUTLINED_FUNCTION_420_1();
    partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    ParticipantContactDetailsCache.contactDetails(for:)((uint64_t)v7, v24, v25, v26, v27, v28, v29, v30, v33, v34, v35, (uint64_t)v36, v37, v38, v39, v40, v41, v42, v43,
      v44);
    v13 = v39;
    v31 = v36;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_8_8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_4();

    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_40_58((uint64_t)v7);
    OUTLINED_FUNCTION_40_58(v0);
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_30_4();

    return v13;
  }
  v15 = v14;
  outlined bridged method (pb) of @objc TUHandle.siriDisplayName.getter(v15);
  if (!v17)
  {

    goto LABEL_12;
  }
  v13 = v16;
  if ((objc_msgSend(v15, sel_shouldHideContact) & 1) == 0)
  {

    OUTLINED_FUNCTION_2_1();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_8_8();
  PersonNameComponents.init()();
  specialized ParticipantsViewController.participantsViewControllerDelegate.getter();
  PersonNameComponents.givenName.setter();
  OUTLINED_FUNCTION_50_2();
  if (one-time initialization token for initials != -1)
    swift_once();
  OUTLINED_FUNCTION_1();
  v18 = (id)static NSPersonNameComponentsFormatter.initials;
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v18, sel_stringFromPersonNameComponents_, isa);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23 = v22;

  OUTLINED_FUNCTION_52(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  v34 = v21;
  v35 = v23;
  lazy protocol witness table accessor for type String and conformance String();
  StringProtocol.localizedUppercase.getter();

  OUTLINED_FUNCTION_21_0();
  outlined destroy of AccountUpdateNotice(v0, type metadata accessor for Participant);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_2_1();
  return v13;
}

void MultiwayViewController.screenSharingInteractionController(_:didUpdateRemoteControlStatus:)(uint64_t a1, char a2)
{
  MultiwayViewController.updateScreenSharingBlurIfNeeded()();
  if ((a2 & 1) != 0)
    ConversationController.addScreenSharingType(_:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id *v18;
  void (*v19)(void);
  id v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  char *v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  os_log_t v44;
  int v45;
  id v46;
  char *v47;
  void (*v48)(void);
  int v49;
  uint64_t v50;
  uint64_t v51[7];
  _BYTE v52[216];
  uint64_t v53[28];

  v49 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v43 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  v17 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v17, (uint64_t)v52, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v52, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v53) != 1)
  {
    v47 = v8;
    v18 = (id *)(*(_QWORD *)(v17 + 24)
               + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
    swift_beginAccess();
    v19 = *(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v18) + 0x930);
    v20 = *v18;
    v48 = v19;
    v19();
    _s15ConversationKit11ParticipantVWOcTm_4();
    if (swift_getEnumCaseMultiPayload() - 9 >= 3)
    {
      outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for ConversationControlsAppLaunchButtonType);
      outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for ConversationControlsAppLaunchButtonType);
LABEL_21:

      return;
    }
    outlined destroy of AccountUpdateNotice((uint64_t)v16, type metadata accessor for ConversationControlsAppLaunchButtonType);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationKit);
    v46 = v20;
    v22 = v20;
    v23 = Logger.logObject.getter();
    v24 = static os_log_type_t.default.getter();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v45 = v25;
      v27 = v26;
      v28 = swift_slowAlloc();
      v51[0] = v28;
      *(_DWORD *)v27 = 136315394;
      v43 = v27 + 4;
      v44 = v23;
      ((void (*)(uint64_t))v48)(v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
      specialized >> prefix<A>(_:)((uint64_t)v4);
      v30 = v29;
      v32 = v31;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v27 + 12) = 2080;
      v33 = v49;
      LOBYTE(v50) = v49 & 1;
      v34 = String.init<A>(reflecting:)();
      v50 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v35, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v36 = v44;
      _os_log_impl(&dword_1BD004000, v44, (os_log_type_t)v45, "Hiding Name+Photo banner %s dueToExplicitUserAction: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v28, -1, -1);
      MEMORY[0x1C3B751B8](v27, -1, -1);

    }
    else
    {

      v33 = v49;
    }
    v37 = v47;
    if ((v33 & 1) != 0)
    {
      v48();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 9) >= 2)
      {
        if (EnumCaseMultiPayload != 11)
        {
          outlined destroy of AccountUpdateNotice((uint64_t)v11, type metadata accessor for ConversationControlsAppLaunchButtonType);
          goto LABEL_20;
        }
        if (one-time initialization token for shared != -1)
          swift_once();
        MultiwayViewController.call.getter();
        v41 = v42;
        specialized NameAndPhotoUtilities.denyIncomingName(from:)(v42);
      }
      else
      {
        if (one-time initialization token for shared != -1)
          swift_once();
        v39 = static NameAndPhotoUtilities.shared;
        MultiwayViewController.call.getter();
        v41 = v40;
        specialized NameAndPhotoUtilities.denySendingNameAndPhoto(using:)(v40, v39);
      }

    }
LABEL_20:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v22) + 0x938))(v37);
    v20 = v46;
    goto LABEL_21;
  }
}

void MultiwayViewController.showSNAPHudIfNeeded(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void **v20;
  void *v21;
  uint64_t v22;
  id v23;
  double v24;
  id v25;
  double v26;
  void (*v27)(char *, uint64_t);
  double v28;
  double v29;
  __n128 v30;
  char *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[6];
  __int128 v51[7];
  _BYTE v52[216];
  uint64_t v53[28];

  v2 = v1;
  v41 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTime();
  v7 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)&v40 - v11;
  v12 = type metadata accessor for Date();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  v19 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v19, (uint64_t)v52, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v52, (uint64_t)v53, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v53) == 1)
  {
    MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
  }
  else
  {
    v20 = (void **)(*(_QWORD *)(v19 + 24)
                  + OBJC_IVAR____TtC15ConversationKit30InCallBannerHostViewController_controlsManager);
    swift_beginAccess();
    v21 = *v20;
    v22 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime;
    swift_beginAccess();
    if (__swift_getEnumTagSinglePayload(v22, 1, v12))
    {
      v23 = v21;
      v24 = 0.0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v22, v12);
      v25 = v21;
      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      v24 = v26;
      v27 = *(void (**)(char *, uint64_t))(v13 + 8);
      v27(v15, v12);
      v27(v18, v12);
    }
    if (one-time initialization token for secondsDelayBeforeShowingNameAndPhotoBanner != -1)
      swift_once();
    v28 = *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
    v29 = v24 - *(double *)&static NameAndPhotoUtilities.secondsDelayBeforeShowingNameAndPhotoBanner;
    static DispatchTime.now()();
    v30.n128_f64[0] = vabdd_f64(v24, v28);
    if (v29 > 0.0)
      v30.n128_f64[0] = 0.0;
    v31 = v42;
    MEMORY[0x1C3B72C50](v9, v30);
    v40 = *(void (**)(char *, uint64_t))(v7 + 8);
    v40(v9, v49);
    type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v32 = (void *)static OS_dispatch_queue.main.getter();
    outlined init with copy of ConversationControlsType(v41, (uint64_t)v51);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v21;
    *(_QWORD *)(v33 + 24) = v2;
    outlined init with take of ConversationControlsType(v51, (_OWORD *)(v33 + 32));
    v50[4] = partial apply for closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:);
    v50[5] = v33;
    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 1107296256;
    v50[2] = thunk for @escaping @callee_guaranteed () -> ();
    v50[3] = &block_descriptor_320;
    v34 = _Block_copy(v50);
    v35 = v21;
    v36 = v2;
    swift_release();
    v37 = v43;
    static DispatchQoS.unspecified.getter();
    v50[0] = MEMORY[0x1E0DEE9D8];
    lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>((uint64_t)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
    v38 = v46;
    v39 = v48;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x1C3B735B0](v31, v37, v38, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v45);
    v40(v31, v49);
  }
}

void specialized MultiwayViewController.getSuggestedBannerType(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (**v11)(uint64_t, uint64_t);
  void *v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  void *v16;
  __int128 v17[2];
  unsigned __int8 v18;
  _OWORD v19[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  v7 = type metadata accessor for Date();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v7);
  v8 = a1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_queryForSuggestedBannerStartTime;
  swift_beginAccess();
  outlined assign with take of Date?((uint64_t)v6, v8, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_endAccess();
  if (one-time initialization token for shared != -1)
    swift_once();
  MultiwayViewController.call.getter();
  v10 = v9;
  lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type TUCall and conformance TUCall);
  NameAndPhotoUtilities.suggestedBannerType(for:)((uint64_t)v10, v11, v17);

  if (v18 == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v17, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  else
  {
    outlined init with take of ConversationControlsType(v17, v19);
    MultiwayViewController.call.getter();
    v13 = v12;
    v14 = objc_msgSend(v12, sel_status);

    if (v14 == 1)
    {
      swift_beginAccess();
      v15 = MEMORY[0x1C3B752C0](a2);
      if (v15)
      {
        v16 = (void *)v15;
        MultiwayViewController.showSNAPHudIfNeeded(for:)((uint64_t)v19);

      }
    }
    else
    {
      MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(0);
    }
    outlined destroy of ConversationControlsType((uint64_t)v19);
  }
}

void closure #1 in MultiwayViewController.showSNAPHudIfNeeded(for:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  char *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int8x16_t v56;
  int8x8_t v57;
  _QWORD v58[2];
  uint64_t v59;
  char *v60;
  uint8_t *v61;
  void (*v62)(__n128);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int8x16_t v66;
  int8x16_t v67;
  char v68;
  uint64_t v69;

  v61 = (uint8_t *)a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
  MEMORY[0x1E0C80A78](v5);
  v63 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ConversationControlsAppLaunchButtonType(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v58 - v16;
  v62 = *(void (**)(__n128))((*MEMORY[0x1E0DEEDD8] & *a1) + 0x930);
  v62(v15);
  swift_storeEnumTagMultiPayload();
  static ConversationControlsAppLaunchButtonType.== infix(_:_:)((uint64_t)v17, (uint64_t)v13);
  v19 = v18;
  outlined destroy of AccountUpdateNotice((uint64_t)v13, type metadata accessor for ConversationControlsAppLaunchButtonType);
  outlined destroy of AccountUpdateNotice((uint64_t)v17, type metadata accessor for ConversationControlsAppLaunchButtonType);
  if ((v19 & 1) != 0)
  {
    v59 = v11;
    v60 = v17;
    v20 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callUUIDsThatPresentedSNaPSecondaryPill);
    swift_beginAccess();
    v21 = *v20;
    MultiwayViewController.call.getter();
    v23 = v22;
    swift_bridgeObjectRetain();
    v24 = objc_msgSend(v23, sel_uniqueProxyIdentifierUUID);

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    MEMORY[0x1E0C80A78](v25);
    v58[-2] = v10;
    LOBYTE(v23) = specialized Sequence.contains(where:)((uint64_t (*)(char *))closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)&v58[-4], v21);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      MultiwayViewController.call.getter();
      v27 = v26;
      v28 = objc_msgSend(v26, sel_uniqueProxyIdentifierUUID);

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v29 = *(_QWORD *)(*v20 + 16);
      specialized Array._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
      v30 = *v20;
      *(_QWORD *)(v30 + 16) = v29 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v30+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v29, v10, v7);
      swift_endAccess();
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v31 = type metadata accessor for Logger();
      __swift_project_value_buffer(v31, (uint64_t)&static Logger.conversationKit);
      v32 = a1;
      v33 = Logger.logObject.getter();
      v34 = static os_log_type_t.default.getter();
      v35 = os_log_type_enabled(v33, v34);
      v36 = v60;
      if (v35)
      {
        v37 = (uint8_t *)swift_slowAlloc();
        v38 = swift_slowAlloc();
        v65 = v38;
        *(_DWORD *)v37 = 136315138;
        v58[1] = v37 + 4;
        v39 = (uint64_t)v63;
        ((void (*)(void))v62)();
        __swift_storeEnumTagSinglePayload(v39, 0, 1, v59);
        specialized >> prefix<A>(_:)(v39);
        v41 = v40;
        v43 = v42;
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
        v64 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v43, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BD004000, v33, v34, "Showing Name+Photo banner %s", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3B751B8](v38, -1, -1);
        MEMORY[0x1C3B751B8](v37, -1, -1);

      }
      else
      {

      }
      outlined init with copy of ConversationControlsType((uint64_t)v61, (uint64_t)&v65);
      if (v68 == 6
        && ((v56 = vorrq_s8(v66, v67),
             v57 = vorr_s8(*(int8x8_t *)v56.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v56, v56, 8uLL)),
             v65 == 13)
         && !*(_QWORD *)&v57
         || v65 == 14 && !*(_QWORD *)&v57
         || v65 == 20 && !*(_QWORD *)&v57))
      {
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))((*MEMORY[0x1E0DEEDD8] & *v32) + 0x938))(v36);
      }
      else
      {
        outlined destroy of ConversationControlsType((uint64_t)&v65);
      }
    }
  }
  else
  {
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    v44 = type metadata accessor for Logger();
    __swift_project_value_buffer(v44, (uint64_t)&static Logger.conversationKit);
    v45 = a1;
    v46 = Logger.logObject.getter();
    v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = v11;
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v65 = v50;
      *(_DWORD *)v49 = 136315138;
      v61 = v49 + 4;
      v51 = (uint64_t)v63;
      ((void (*)(void))v62)();
      __swift_storeEnumTagSinglePayload(v51, 0, 1, v48);
      specialized >> prefix<A>(_:)(v51);
      v53 = v52;
      v55 = v54;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v51, &demangling cache variable for type metadata for ConversationControlsAppLaunchButtonType?);
      v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v55, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BD004000, v46, v47, "Not showing Name+Photo banner because showing a different appLaunch button %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v50, -1, -1);
      MEMORY[0x1C3B751B8](v49, -1, -1);

    }
    else
    {

    }
  }
}

void MultiwayViewController.nameAndPhotoUtilitiesDidUpdatePersonalNickname(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    if (a2)
      MultiwayViewController.updateSecondaryPillForSNaPIfNeeded()();
  }
}

void MultiwayViewController.nameAndPhotoUtilitiesNameAndPhotoAvailable(forDestinations:withBannerType:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  __int128 v12[2];
  unsigned __int8 v13;
  _OWORD v14[3];

  outlined init with copy of FeatureEligibility?(a2, (uint64_t)v12, &demangling cache variable for type metadata for ConversationControlsType?);
  if (v13 == 255)
  {
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v12, &demangling cache variable for type metadata for ConversationControlsType?);
  }
  else
  {
    outlined init with take of ConversationControlsType(v12, v14);
    *(_QWORD *)&v12[0] = a1;
    OUTLINED_FUNCTION_124();
    specialized MutableCollection<>.sort(by:)((uint64_t *)v12);
    MultiwayViewController.call.getter();
    v5 = objc_msgSend(v4, sel_remoteParticipantHandles);
    OUTLINED_FUNCTION_18_11();
    OUTLINED_FUNCTION_472(0, (unint64_t *)&lazy cache variable for type metadata for TUHandle);
    lazy protocol witness table accessor for type OS_dispatch_queue and conformance OS_dispatch_queue((uint64_t)&lazy protocol witness table cache variable for type TUHandle and conformance NSObject);
    v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Sequence.compactMap<A>(_:)(v6);
    v8 = v7;
    OUTLINED_FUNCTION_30_4();
    *(_QWORD *)&v12[0] = v8;
    OUTLINED_FUNCTION_25_2();
    specialized MutableCollection<>.sort(by:)((uint64_t *)v12);
    OUTLINED_FUNCTION_53();
    v9 = (_QWORD *)OUTLINED_FUNCTION_65_2();
    specialized static Array<A>.== infix(_:_:)(v9, v10);
    LOBYTE(v8) = v11;
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_11_0();
    if ((v8 & 1) != 0)
      MultiwayViewController.showSNAPHudIfNeeded(for:)((uint64_t)v14);
    outlined destroy of ConversationControlsType((uint64_t)v14);
  }
}

void MultiwayViewController.handleTapInteraction(_:eventType:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  _QWORD v68[33];
  _BYTE v69[216];
  id v70[28];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_298_2(v11, v60);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OUTLINED_FUNCTION_33_0();
  v66 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_10_1();
  MEMORY[0x1E0C80A78](v16);
  v65 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_54_41(v18, (uint64_t)v69);
  OUTLINED_FUNCTION_54_41((uint64_t)v69, (uint64_t)v70);
  OUTLINED_FUNCTION_12_109((uint64_t *)v70);
  if (v31)
    goto LABEL_18;
  v19 = v5 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_view;
  OUTLINED_FUNCTION_1();
  v20 = (void *)MEMORY[0x1C3B752C0](v19);
  if (v3)
  {
    OUTLINED_FUNCTION_334_3();
    v21 = v3;

  }
  else
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v69, (uint64_t)v68, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    v22 = outlined retain of MultiwayViewController.ViewContent((uint64_t)v68);
    v3 = v20;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_reactionsState) == 1)
  {
    MultiwayViewController.toggleReactionsView()();
LABEL_17:

    OUTLINED_FUNCTION_334_3();
LABEL_18:
    OUTLINED_FUNCTION_52_1();
    return;
  }
  if (!v3 || (v23 = type metadata accessor for ParticipantView(), (v22 = swift_dynamicCastClass()) == 0))
  {
    if (OUTLINED_FUNCTION_2_2(v22, sel_numberOfTapsRequired) == (id)1)
    {
      MultiwayViewController.didSingleTapBackground()();
      MultiwayViewController.restartAutoHideInCallControlsTimer()();
    }
    else
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      static os_log_type_t.error.getter();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v25 = OUTLINED_FUNCTION_15();
      *(_OWORD *)(v25 + 16) = xmmword_1BD6441D0;
      v68[0] = OUTLINED_FUNCTION_2_2(v25, sel_numberOfTapsRequired);
      v26 = String.init<A>(reflecting:)();
      v28 = v27;
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 64) = lazy protocol witness table accessor for type String and conformance String();
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 40) = v28;
      OUTLINED_FUNCTION_132_3();
      os_log(_:dso:log:type:_:)();
      OUTLINED_FUNCTION_30_4();
    }
    goto LABEL_17;
  }
  v63 = (void *)v22;
  v24 = v22 + OBJC_IVAR____TtC15ConversationKit15ParticipantView_participantIdentifier;
  OUTLINED_FUNCTION_1();
  outlined init with copy of FeatureEligibility?(v24, (uint64_t)v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_69_0((uint64_t)v14, 1, v15);
  if (v31)
  {
    OUTLINED_FUNCTION_225_3((uint64_t)v3, (uint64_t *)&demangling cache variable for type metadata for UUID?);
LABEL_22:
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v32 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v32 + 16) = xmmword_1BD6441D0;
    v67 = v63;
    v33 = v3;
    v34 = String.init<A>(reflecting:)();
    v36 = v35;
    *(_QWORD *)(v32 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = v36;
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();

    OUTLINED_FUNCTION_334_3();
    goto LABEL_18;
  }
  v62 = v23;
  v30 = v65;
  v29 = v66;
  OUTLINED_FUNCTION_93_4((uint64_t)v65, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 32));
  v61 = v3;
  ConversationController.participant(with:)();
  OUTLINED_FUNCTION_69_0((uint64_t)v8, 1, v9);
  if (v31)
  {
    OUTLINED_FUNCTION_6_9((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v8, &demangling cache variable for type metadata for Participant?);
    goto LABEL_22;
  }
  outlined init with take of Participant((uint64_t)v8, v64);
  if (objc_msgSend(v70[1], sel_view))
  {
    OUTLINED_FUNCTION_331_3();
    OUTLINED_FUNCTION_14_18();
    v30 = v61;
    if ((v3 & 1) != 0)
    {
      v39 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
      v40 = OUTLINED_FUNCTION_20_4(v38, sel_numberOfTapsRequired);
      if (v40 == (id)2)
      {
        v52 = OUTLINED_FUNCTION_330_3();
        MultiwayViewController.didDoubleTapGridParticipantView(_:participant:)(v52, v53);
        MultiwayViewController.restartAutoHideInCallControlsTimer()();
LABEL_48:
        v41 = v66;
        goto LABEL_49;
      }
      v41 = v66;
      if (v40 == (id)1)
      {
        v42 = (void *)OUTLINED_FUNCTION_330_3();
        MultiwayViewController.didSingleTapGridParticipantView(_:participant:)(v42, v43);
LABEL_34:
        MultiwayViewController.restartAutoHideInCallControlsTimer()();
LABEL_49:
        v59 = (uint64_t)v65;
        OUTLINED_FUNCTION_334_3();

        outlined destroy of AccountUpdateNotice(v39, type metadata accessor for Participant);
        OUTLINED_FUNCTION_6_9(v59, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
        goto LABEL_18;
      }
      if (one-time initialization token for conversationKit == -1)
      {
LABEL_47:
        static os_log_type_t.error.getter();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        v54 = OUTLINED_FUNCTION_15();
        *(_OWORD *)(v54 + 16) = xmmword_1BD645380;
        v67 = OUTLINED_FUNCTION_20_4(v54, sel_numberOfTapsRequired);
        OUTLINED_FUNCTION_428_0();
        OUTLINED_FUNCTION_423_0();
        v55 = MEMORY[0x1E0DEA968];
        v56 = OUTLINED_FUNCTION_437_0();
        OUTLINED_FUNCTION_98_16(v56);
        v57 = OUTLINED_FUNCTION_156_6();
        *(_QWORD *)(v54 + 96) = v55;
        *(_QWORD *)(v54 + 104) = v39;
        *(_QWORD *)(v54 + 72) = v57;
        *(_QWORD *)(v54 + 80) = v58;
        OUTLINED_FUNCTION_132_3();
        os_log(_:dso:log:type:_:)();
        OUTLINED_FUNCTION_21_0();
        v39 = v64;
        goto LABEL_48;
      }
LABEL_50:
      swift_once();
      goto LABEL_47;
    }
    if (objc_msgSend(v70[0], sel_view))
    {
      OUTLINED_FUNCTION_331_3();
      OUTLINED_FUNCTION_14_18();
      v41 = v66;
      if ((v3 & 1) != 0)
      {
        v39 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
        if (OUTLINED_FUNCTION_20_4(v44, sel_numberOfTapsRequired) == (id)1)
        {
          v45 = OUTLINED_FUNCTION_330_3();
          MultiwayViewController.didSingleTapRosterParticipantView(_:participant:)(v45, v46);
          goto LABEL_34;
        }
        if (one-time initialization token for conversationKit == -1)
          goto LABEL_47;
      }
      else
      {
        v39 = v64;
        if (*(_QWORD *)(v64 + *(int *)(v9 + 28)))
        {
          if (one-time initialization token for conversationKit != -1)
            swift_once();
          static os_log_type_t.error.getter();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          v47 = OUTLINED_FUNCTION_15();
          *(_OWORD *)(v47 + 16) = xmmword_1BD6441D0;
          v67 = v63;
          v48 = v30;
          v49 = OUTLINED_FUNCTION_156_6();
          v51 = v50;
          *(_QWORD *)(v47 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
          *(_QWORD *)(v47 + 32) = v49;
          *(_QWORD *)(v47 + 40) = v51;
          OUTLINED_FUNCTION_239_1();
          OUTLINED_FUNCTION_133();
          goto LABEL_48;
        }
        v39 = *(_QWORD *)(v5 + OBJC_IVAR____TtC15ConversationKit14TapInteraction_tapGestureRecognizer);
        if (OUTLINED_FUNCTION_20_4(v44, sel_numberOfTapsRequired) == (id)1)
        {
          MultiwayViewController.didTapLocalParticipantView(_:)();
          MultiwayViewController.restartAutoHideInCallControlsTimer()();
          v39 = v64;
          goto LABEL_49;
        }
        if (one-time initialization token for conversationKit == -1)
          goto LABEL_47;
      }
      goto LABEL_50;
    }
  }
  else
  {

    __break(1u);
  }

  __break(1u);
}

_QWORD *MultiwayViewController.didSingleTapGridParticipantView(_:participant:)(void *a1, void (*a2)(_QWORD, _QWORD, _QWORD))
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *result;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  _BYTE *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char v43;
  _BYTE *v44;
  id v45;
  id v46;
  void *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t (*v50)(void);
  _QWORD *v51;
  Swift::OpaquePointer v52;
  _BYTE *v53;
  uint64_t v54;
  void *v55;
  char v56;
  uint64_t v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  id v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  id v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGFloat v80;
  char v81;
  char v82;
  id v83;
  id v84;
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(_QWORD, _QWORD, _QWORD);
  char *v88;
  id v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94[3];
  uint64_t v95[27];
  _BYTE v96[216];
  _BYTE v97[240];
  _BYTE v98[216];
  uint64_t v99[6];
  uint64_t v100;
  id v101;
  id v102;
  CGRect v103;
  CGRect v104;

  v3 = v2;
  v6 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BD6441D0;
  _s15ConversationKit11ParticipantVWOcTm_4();
  v92 = v6;
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
  specialized >> prefix<A>(_:)((uint64_t)v13);
  v16 = v15;
  v18 = v17;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v19, (uint64_t)v98, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v98, (uint64_t)v99, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v99);
  if ((_DWORD)result != 1)
  {
    v90 = v8;
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v98, (uint64_t)v96, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v96);
    if (one-time initialization token for conversationControls != -1)
      swift_once();
    v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)&static Logger.conversationControls);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v98, (uint64_t)v97, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v97);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v96);
    v22 = Logger.logObject.getter();
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v89 = a1;
    if (v24)
    {
      v87 = a2;
      v88 = v3;
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v95[0] = v26;
      *(_DWORD *)v25 = 136315394;
      v27 = v100;
      v28 = (uint64_t *)(v100 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
      swift_beginAccess();
      v94[0] = *v28;
      v29 = String.init<A>(describing:)();
      v94[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v29, v30, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      *(_WORD *)(v25 + 12) = 2080;
      v31 = (_BYTE *)(v27 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v31)
      {
        if (*v31 == 1)
        {
          v32 = 0xE700000000000000;
          v33 = 0x656C6269736976;
        }
        else
        {
          v32 = 0xEE00756E654D676ELL;
          v33 = 0x69746E6573657270;
        }
      }
      else
      {
        v32 = 0xE600000000000000;
        v33 = 0x6E6564646968;
      }
      v3 = v88;
      v94[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v32, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      _os_log_impl(&dword_1BD004000, v22, v23, "didSingleTapGridParticipantView: inCallControlsState:%s inCallConversationBannerState:%s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3B751B8](v26, -1, -1);
      MEMORY[0x1C3B751B8](v25, -1, -1);

      a2 = v87;
    }
    else
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v98, (uint64_t)v95, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined release of MultiwayViewController.ViewContent((uint64_t)v95);
      outlined release of MultiwayViewController.ViewContent((uint64_t)v99);

    }
    v34 = v100;
    v35 = (_BYTE *)(v100 + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
    swift_beginAccess();
    if ((*v35 & 1) == 0)
      MultiwayViewController.didSingleTapBackground()();
    Participant.isActive.getter();
    if ((v36 & 1) == 0)
    {
      MultiwayViewController.didSingleTapBackground()();
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
    }
    v37 = v99[1];
    if ((*v35 & 1) == 0)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v92);
      ParticipantGridViewController.select(_:forFocusing:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
LABEL_24:
      v45 = v101;
      v46 = v101;
      v47 = v45;
LABEL_25:
      MultiwayViewController.bringSubviewToFront(_:)(v47);
      goto LABEL_26;
    }
    v38 = v92;
    v39 = (uint64_t)a2 + *(int *)(v92 + 20);
    v40 = type metadata accessor for UUID();
    v41 = (uint64_t)v91;
    v87 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v40 - 8) + 16);
    v88 = (char *)v39;
    v87(v91, v39, v40);
    __swift_storeEnumTagSinglePayload(v41, 0, 1, v40);
    v42 = (void *)v37;
    v43 = ParticipantGridViewController.isSelected(_:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if ((v43 & 1) != 0)
    {
      v44 = (_BYTE *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v44)
      {
        if (*v44 == 1)
        {
          v93 = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v93, 0xFCu, 1);
          MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
        }
      }
      else
      {
        v93 = 1;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v93, 0xFCu, 1);
      }
      goto LABEL_24;
    }
    MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)((uint64_t)v88);
    v52._rawValue = (void *)MultiwayViewController.mostActiveParticipants.getter();
    LOWORD(v94[0]) = 512;
    ParticipantGridViewController.update(with:updateReason:)(v52, (char *)v94);
    swift_bridgeObjectRelease();
    _s15ConversationKit11ParticipantVWOcTm_4();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v38);
    ParticipantGridViewController.select(_:forFocusing:)();
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v13, &demangling cache variable for type metadata for Participant?);
    v53 = (_BYTE *)(v34 + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
    swift_beginAccess();
    if (*v53)
    {
      v54 = (uint64_t)v91;
      v87(v91, v88, v40);
      __swift_storeEnumTagSinglePayload(v54, 0, 1, v40);
      v55 = v42;
      v56 = ParticipantGridViewController.isSelected(_:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v54, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v57 = (uint64_t)v90;
      if ((v56 & 1) == 0)
      {
        v93 = 0;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v93, 0xFCu, 1);
        MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
      }
    }
    else
    {
      v55 = v42;
      v93 = 1;
      MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v93, 0xFCu, 1);
      v57 = (uint64_t)v90;
    }
    result = objc_msgSend(v3, sel_view);
    if (result)
    {
      v58 = result;
      objc_msgSend(v89, sel_frame);
      v60 = v59;
      v62 = v61;
      v64 = v63;
      v66 = v65;
      v67 = objc_msgSend(v55, sel_view);
      objc_msgSend(v58, sel_convertRect_fromView_, v67, v60, v62, v64, v66);
      v69 = v68;
      v71 = v70;
      v73 = v72;
      v75 = v74;

      v76 = v101;
      objc_msgSend(v101, sel_frame);
      v104.origin.x = v77;
      v104.origin.y = v78;
      v104.size.width = v79;
      v104.size.height = v80;
      v103.origin.x = v69;
      v103.origin.y = v71;
      v103.size.width = v73;
      v103.size.height = v75;
      LODWORD(v58) = CGRectIntersectsRect(v103, v104);
      _s15ConversationKit11ParticipantVWOcTm_4();
      if ((_DWORD)v58)
      {
        Participant.isActiveWithVideo.getter();
        v82 = v81;
        outlined destroy of AccountUpdateNotice(v57, type metadata accessor for Participant);
        if ((v82 & 1) != 0)
        {
          v83 = objc_msgSend(v55, sel_view);
          MultiwayViewController.bringSubviewToFront(_:)(v83);

          if (!v102)
            goto LABEL_27;
          v46 = v102;
          v84 = objc_msgSend(v46, sel_superview);

          if (!v84)
          {
LABEL_26:

LABEL_27:
            v48 = *(_QWORD **)&v3[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_callDetailsCoordinator];
            if (v48)
            {
              v49 = (_QWORD *)MEMORY[0x1E0DEEDD8];
              v50 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v48) + 0x78);
              v51 = v48;
              if ((v50() & 1) != 0)
                (*(void (**)(unint64_t, unint64_t))((*v49 & *v51) + 0xB8))(0xD000000000000026, 0x80000001BD691AF0);

            }
            MultiwayViewController.needsUpdatePresentationContexts.setter(1);
            return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v98);
          }
          result = objc_msgSend(v3, sel_view);
          if (result)
          {
            v85 = result;
            objc_msgSend(result, sel_bringSubviewToFront_, v46);

            v46 = v85;
            goto LABEL_26;
          }
LABEL_49:
          __break(1u);
          return result;
        }
      }
      else
      {
        outlined destroy of AccountUpdateNotice(v57, type metadata accessor for Participant);
      }
      v46 = v76;
      v47 = v76;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_49;
  }
  return result;
}

_QWORD *MultiwayViewController.didDoubleTapGridParticipantView(_:participant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  _BYTE *v15;
  _BYTE v16[264];
  _BYTE v17[216];
  uint64_t v18[28];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  _s15ConversationKit11ParticipantVWOcTm_4();
  v8 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  specialized >> prefix<A>(_:)((uint64_t)v6);
  v10 = v9;
  v12 = v11;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v12;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v13 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v13, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v18);
  if ((_DWORD)result != 1)
  {
    v15 = (_BYTE *)(v18[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_participantGridState);
    result = (_QWORD *)swift_beginAccess();
    if (*v15 == 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v16);
      MultiwayViewController.toggleFocusedParticipant(_:)(a2);
      return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v17);
    }
  }
  return result;
}

_QWORD *MultiwayViewController.didSingleTapRosterParticipantView(_:participant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  int EnumTagSinglePayload;
  Swift::OpaquePointer v20;
  uint64_t active;
  __int16 v23[24];
  _BYTE v24[240];
  _BYTE v25[216];
  uint64_t v26[28];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23[-4] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23[-4] - v8;
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BD6441D0;
  _s15ConversationKit11ParticipantVWOcTm_4();
  v11 = type metadata accessor for Participant(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  specialized >> prefix<A>(_:)((uint64_t)v9);
  v13 = v12;
  v15 = v14;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v15;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  v16 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v16, (uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v25, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v26);
  if ((_DWORD)result != 1)
  {
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v25, (uint64_t)v24, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v24);
    if ((MultiwayViewController.participantIsShownInGrid(_:)() & 1) == 0)
    {
      MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)(a2 + *(int *)(v11 + 20));
      v18 = v26[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
      swift_beginAccess();
      outlined init with copy of FeatureEligibility?(v18, (uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v11);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v6, &demangling cache variable for type metadata for Participant?);
      v20._rawValue = (void *)MultiwayViewController.mostActiveParticipants.getter();
      if (EnumTagSinglePayload == 1)
      {
        v23[0] = 512;
        ParticipantGridViewController.update(with:updateReason:)(v20, (char *)v23);
      }
      else
      {
        ParticipantGridViewController.defocus(to:)(v20);
      }
      swift_bridgeObjectRelease();
      _s15ConversationKit11ParticipantVWOcTm_4();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      ParticipantGridViewController.select(_:forFocusing:)();
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v9, &demangling cache variable for type metadata for Participant?);
      active = MultiwayViewController.mostActiveParticipants.getter();
      MultiwayViewController.activeRemoteParticipants(in:)(active);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      Array<A>.participants(notIn:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ParticipantListViewController.update(with:updateReason:)();
      swift_bridgeObjectRelease();
      MultiwayViewController.needsUpdatePresentationContexts.setter(1);
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v25);
  }
  return result;
}

uint64_t MultiwayViewController.didTapLocalParticipantView(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unsigned __int8 *v3;
  _BYTE v4[216];
  uint64_t v5[27];

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v4, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = getEnumTag for TapInteraction.EventType(v5);
  if ((_DWORD)result != 1)
  {
    v3 = (unsigned __int8 *)(v5[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    result = specialized Sequence<>.contains(_:)(*v3, (uint64_t)&outlined read-only object #0 of MultiwayViewController.didTapLocalParticipantView(_:));
    if ((result & 1) == 0)
    {
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
      MultiwayViewController.focusLocalParticipant()();
      return (uint64_t)_s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v4);
    }
  }
  return result;
}

_QWORD *MultiwayViewController.didSingleTapBackground()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unsigned __int8 v10[25];
  _BYTE v11[264];
  _BYTE v12[216];
  uint64_t v13[27];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v13);
  if ((_DWORD)result != 1)
  {
    v6 = v13[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    outlined init with copy of FeatureEligibility?(v6, (uint64_t)v3, &demangling cache variable for type metadata for Participant?);
    v7 = type metadata accessor for Participant(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v7) == 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v11);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
      v8 = (_BYTE *)(v13[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallConversationBannerState);
      swift_beginAccess();
      if (*v8)
      {
        if (*v8 == 1)
        {
          v10[0] = 0;
          MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, 0xFCu, 1);
          MultiwayViewController.hideSNaPSecondaryPillIfNeeded(dueToExplicitUserAction:)(1);
        }
      }
      else
      {
        v10[0] = 1;
        MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, 0xFCu, 1);
      }
    }
    else
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v12, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v11);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v3, &demangling cache variable for type metadata for Participant?);
      MultiwayViewController.unfocusFocusedParticipant()();
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v12);
  }
  return result;
}

uint64_t MultiwayViewController.markParticipantWithIdentifierAsUserSelected(_:)(uint64_t a1)
{
  ConversationController.resetAssociatedDateForInactiveParticipant(with:)();
  return specialized MostActiveParticipantsController.markParticipantAsUserSelected(_:shouldPostCallback:)(a1, 0);
}

void MultiwayViewController.toggleFocusedParticipant(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int EnumTagSinglePayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  _BYTE v65[264];
  _BYTE v66[216];
  uint64_t v67[28];

  v2 = v1;
  v60 = a1;
  v61 = type metadata accessor for UUID();
  v58 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v54 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v56);
  v57 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v63);
  v62 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v51 - v20;
  v22 = type metadata accessor for DispatchPredicate();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NSObject(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v25 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v26 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v27 = (uint64_t)v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v27, (uint64_t)v66, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v66, (uint64_t)v67, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v67) != 1)
  {
    v28 = v2;
    v29 = v67[1] + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    v53 = v29;
    outlined init with copy of FeatureEligibility?(v29, (uint64_t)v10, &demangling cache variable for type metadata for Participant?);
    v30 = v63;
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v63) == 1)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v66, (uint64_t)v65, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v65);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v10, &demangling cache variable for type metadata for Participant?);
      v31 = v61;
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v61);
      v32 = v60;
      v33 = v62;
    }
    else
    {
      v34 = &v10[*(int *)(v30 + 20)];
      v35 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
      v36 = v61;
      v35(v21, v34, v61);
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v66, (uint64_t)v65, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v65);
      v37 = (uint64_t)v10;
      v31 = v36;
      outlined destroy of AccountUpdateNotice(v37, type metadata accessor for Participant);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v36);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v36);
      v32 = v60;
      v33 = v62;
      if (EnumTagSinglePayload != 1)
      {
        v52 = v28;
        _s15ConversationKit11ParticipantVWOcTm_4();
        outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v35(v15, (char *)(v33 + *(int *)(v63 + 20)), v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v36);
        v40 = v57;
        v41 = v57 + *(int *)(v56 + 48);
        outlined init with copy of FeatureEligibility?((uint64_t)v15, v57, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined init with copy of FeatureEligibility?((uint64_t)v18, v41, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if (__swift_getEnumTagSinglePayload(v40, 1, v31) == 1)
        {
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          v40 = v57;
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
          v42 = __swift_getEnumTagSinglePayload(v41, 1, v31);
          v28 = v52;
          if (v42 == 1)
          {
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            goto LABEL_7;
          }
        }
        else
        {
          v43 = (uint64_t)v55;
          outlined init with copy of FeatureEligibility?(v40, (uint64_t)v55, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          if (__swift_getEnumTagSinglePayload(v41, 1, v31) != 1)
          {
            v49 = v54;
            (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v54, v41, v31);
            lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
            LODWORD(v56) = dispatch thunk of static Equatable.== infix(_:_:)();
            v50 = *(void (**)(char *, uint64_t))(v58 + 8);
            v50(v49, v61);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
            v50(v55, v61);
            v31 = v61;
            outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, (uint64_t *)&demangling cache variable for type metadata for UUID?);
            v39 = (uint64_t)v59;
            v28 = v52;
            if ((v56 & 1) == 0)
              goto LABEL_16;
            goto LABEL_8;
          }
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
          outlined destroy of AccountUpdateNotice(v62, type metadata accessor for Participant);
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v43, v31);
          v28 = v52;
        }
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v40, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
        v39 = (uint64_t)v59;
        goto LABEL_16;
      }
    }
    _s15ConversationKit11ParticipantVWOcTm_4();
    outlined init with copy of FeatureEligibility?((uint64_t)v21, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of AccountUpdateNotice(v33, type metadata accessor for Participant);
LABEL_7:
    v39 = (uint64_t)v59;
LABEL_8:
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v31) != 1)
    {
      MultiwayViewController.unfocusFocusedParticipant()();
LABEL_17:
      outlined init with copy of FeatureEligibility?(v53, v39, &demangling cache variable for type metadata for Participant?);
      v44 = v63;
      if (__swift_getEnumTagSinglePayload(v39, 1, v63) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v39, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v45 = *(_QWORD *)(v39 + *(int *)(v44 + 28));
        outlined destroy of AccountUpdateNotice(v39, type metadata accessor for Participant);
        if (!v45)
        {
          v46 = (_QWORD *)(v67[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_inCallControlsState);
          swift_beginAccess();
          if (!*v46)
          {
            MultiwayViewController.effectsBrowserIsOpaque.getter();
            if ((v47 & 1) != 0)
              v48 = 2;
            else
              v48 = 1;
            objc_msgSend(v28, sel_setControlsState_animated_, v48, 1);
            v64 = 1;
            MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v64, 0xFCu, 1);
          }
        }
      }
      _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v66);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v21, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      return;
    }
LABEL_16:
    MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)(v32, 1);
    goto LABEL_17;
  }
}

void MultiwayViewController.focusLocalParticipant()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for Participant(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for conversationKit != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BD6441D0;
  swift_beginAccess();
  _s15ConversationKit11ParticipantVWOcTm_4();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v0);
  specialized >> prefix<A>(_:)((uint64_t)v5);
  v8 = v7;
  v10 = v9;
  outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  MultiwayViewController.unfocusFocusedParticipant()();
  _s15ConversationKit11ParticipantVWOcTm_4();
  MultiwayViewController.focus(on:shouldBringLocalParticipantViewToFront:)((uint64_t)v2, 1);
  outlined destroy of AccountUpdateNotice((uint64_t)v2, type metadata accessor for Participant);
}

_QWORD *MultiwayViewController.collapseLocalParticipantView()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *result;
  _BYTE *v8;
  unsigned int v9;
  unsigned __int8 v10[216];
  _BYTE v11[216];
  uint64_t v12[27];

  v1 = v0;
  if (one-time initialization token for logger != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)logger);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BD004000, v3, v4, "collapseLocalParticipantView", v5, 2u);
    MEMORY[0x1C3B751B8](v5, -1, -1);
  }

  v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v6, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v12);
  if ((_DWORD)result != 1)
  {
    v8 = (_BYTE *)(v12[6] + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    swift_beginAccess();
    if ((*v8 & 0xFE) == 0x80)
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v10);
      v9 = MultiwayViewController.localParticipantCornerToUse.getter() | 0x40;
    }
    else
    {
      outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v11, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
      outlined retain of MultiwayViewController.ViewContent((uint64_t)v10);
      v9 = 128;
    }
    v10[0] = 0;
    MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(v10, v9, 1);
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v11);
  }
  return result;
}

uint64_t protocol witness for TapInteractionHandler.handleTapInteractionEnabled(_:) in conformance MultiwayViewController()
{
  return MultiwayViewController.handleTapInteractionEnabled(_:)() & 1;
}

void protocol witness for TapInteractionHandler.handleTapInteraction(_:eventType:) in conformance MultiwayViewController()
{
  MultiwayViewController.handleTapInteraction(_:eventType:)();
}

void MultiwayViewController.localParticipantViewDidLongPress(_:localParticipantView:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  id v5;
  char v6;
  _BYTE v7[216];
  uint64_t v8[27];

  OUTLINED_FUNCTION_399_2();
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_40_60(v1, (uint64_t)v7);
  OUTLINED_FUNCTION_40_60((uint64_t)v7, (uint64_t)v8);
  v2 = OUTLINED_FUNCTION_12_109(v8);
  if (!v3)
  {
    OUTLINED_FUNCTION_59(v2, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    v4 = (void *)v8[7];
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
    v5 = v4;
    OUTLINED_FUNCTION_157();
    v6 = static NSObject.== infix(_:_:)();

    if ((v6 & 1) != 0)
      MultiwayViewController.toggleReactionsView()();
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v7);
  }
  OUTLINED_FUNCTION_29_60();
}

void MultiwayViewController.localParticipantViewDidTap(_:localParticipantView:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v25[216];
  uint64_t v26[28];

  OUTLINED_FUNCTION_93();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_54_41(v6, (uint64_t)v25);
  OUTLINED_FUNCTION_54_41((uint64_t)v25, (uint64_t)v26);
  v7 = OUTLINED_FUNCTION_12_109(v26);
  if (!v8)
  {
    OUTLINED_FUNCTION_59(v7, (unint64_t *)&lazy cache variable for type metadata for NSObject);
    v9 = (void *)v26[7];
    OUTLINED_FUNCTION_433(v10, (uint64_t)outlined copy of MultiwayViewController.ViewContent?, v11, v12, v13);
    v14 = v9;
    OUTLINED_FUNCTION_435();
    OUTLINED_FUNCTION_8_20();
    if ((v3 & 1) != 0)
    {
      if (one-time initialization token for conversationKit != -1)
        swift_once();
      v19 = OUTLINED_FUNCTION_17_2();
      OUTLINED_FUNCTION_3(v19, (uint64_t)&static Logger.conversationKit);
      v20 = OUTLINED_FUNCTION_12_0();
      if (OUTLINED_FUNCTION_4_14(v20))
      {
        v21 = (uint8_t *)OUTLINED_FUNCTION_105();
        v24 = OUTLINED_FUNCTION_105();
        *(_DWORD *)v21 = 136315138;
        v22 = String.init<A>(reflecting:)();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v22, v23, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_48(&dword_1BD004000, v3, v14, "localParticipantViewDidTap action: %s", v21);
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_60();
      }

      __asm { BR              X10 }
    }
    OUTLINED_FUNCTION_433(v15, (uint64_t)outlined consume of MultiwayViewController.ViewContent?, v16, v17, v18);
  }
  OUTLINED_FUNCTION_52_1();
}

void MultiwayViewController.toggleRecordingLocalVideo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 312))(ObjectType, v1) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_localVideoRecordingTransactionID;
    swift_beginAccess();
    if (*(_QWORD *)(v3 + 8))
      ConversationController.stopRecordingLocalVideo()();
    else
      ConversationController.startRecordingLocalVideo()();
  }
}

Swift::Void __swiftcall MultiwayViewController.toggleLocalOrientation()()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v3 = *(NSObject **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController);
  if ((ConversationController.isOneToOneModeEnabled.getter() & 1) != 0)
  {
    if (one-time initialization token for logger != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_17_2();
    OUTLINED_FUNCTION_3(v4, (uint64_t)logger);
    v5 = OUTLINED_FUNCTION_12_0();
    if (OUTLINED_FUNCTION_51_3(v5))
    {
      v6 = (_WORD *)OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_220_0(v6);
      OUTLINED_FUNCTION_130(&dword_1BD004000, v3, v1, "toggleLocalOrientation", v2);
      OUTLINED_FUNCTION_60();
    }

    v7 = (Class *)((char *)&v3->isa + OBJC_IVAR____TtC15ConversationKit22ConversationController_deviceOrientation);
    OUTLINED_FUNCTION_1();
    if ((*v7 & 0xFFFFFFFFFFFFFFFDLL) == 1)
      v8 = 2;
    else
      v8 = 1;
    ConversationController.deviceOrientation.setter(v8);
    MultiwayViewController.constraintController.getter();
    if (!v9
      || (v10 = v9 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState,
          OUTLINED_FUNCTION_1(),
          OUTLINED_FUNCTION_434_0(),
          v10 != 128))
    {
      v11 = MultiwayViewController.localParticipantCornerToUse.getter();
      MultiwayViewController.setLocalParticipantState(_:animated:)(v11 | 0x40, 1);
    }
  }
}

_QWORD *MultiwayViewController.pauseVideoMessageRecording()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  _QWORD *v3;
  uint64_t (*v4)(void);
  _QWORD *v5;
  uint64_t v6;
  char v8;
  _BYTE v9[216];
  uint64_t v10[7];

  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v1, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v9, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(v10);
  if ((_DWORD)result != 1)
  {
    v3 = *(_QWORD **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                    + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
    v4 = *(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF0);
    _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
    v5 = v3;
    LOBYTE(v4) = v4();

    if (VideoMessageController.State.rawValue.getter(v4) == 0x676E696D726177
      && v6 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
        return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
    }
    ConversationController.pauseRecordingVideoMessage()();
    LocalParticipantView.endCountdown()();
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v9);
  }
  return result;
}

_QWORD *MultiwayViewController.startRecordingVideoMessage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  void *v10;
  unsigned __int8 v11;
  _QWORD *v12;
  char v13;
  void (*v14)(_QWORD);
  id v15;
  _BYTE *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[216];
  _BYTE __dst[216];
  _BYTE v28[216];
  uint64_t __src[27];

  v1 = v0;
  MultiwayViewController.setShutterButton(hidden:animated:overriddenShutterButton:)(1, 0, 0);
  MultiwayViewController.removeAllEffectsObjects()();
  MultiwayViewController.localVideoProvider.getter();
  v2 = __src[3];
  v3 = __src[4];
  __swift_project_boxed_opaque_existential_1(__src, __src[3]);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 96))(0, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)__src);
  v4 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v4, (uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v28, (uint64_t)__src, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  result = (_QWORD *)getEnumTag for TapInteraction.EventType(__src);
  if ((_DWORD)result != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 656);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v28, (uint64_t)v26, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined retain of MultiwayViewController.ViewContent((uint64_t)v26);
    if ((v8(ObjectType, v6) & 1) != 0
      && (MultiwayViewController.call.getter(),
          v10 = v9,
          v11 = objc_msgSend(v9, sel_isSendingVideo),
          v10,
          (v11 & 1) == 0))
    {
      MultiwayViewController.showCameraAlert()();
    }
    else
    {
      MultiwayViewController.isPresentingEffectsBrowser.getter();
      v12 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      if ((v13 & 1) != 0)
      {
        if (__src[9])
        {
          v14 = *(void (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)__src[9]) + 0xB0);
          v15 = (id)__src[9];
          v14(0);

        }
        v16 = (_BYTE *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_effectsEnabled);
        swift_beginAccess();
        *v16 = 0;
        MultiwayViewController.showEffectsControls(_:shouldUpdateLocalParticipantState:)(0, 0);
      }
      v17 = *(_QWORD **)(*(_QWORD *)(v1
                                   + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
                       + OBJC_IVAR____TtC15ConversationKit22ConversationController_videoMessageController);
      v18 = *(uint64_t (**)(void))((*v12 & *v17) + 0xF0);
      v19 = v17;
      LOBYTE(v18) = v18();

      if (VideoMessageController.State.rawValue.getter(v18) == 0x7964616572
        && v20 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          objc_msgSend((id)__src[7], sel_updateCountdownWith_, 5);
          v23 = swift_allocObject();
          memcpy((void *)(v23 + 16), __dst, 0xD8uLL);
          v24 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v25 = swift_allocObject();
          memcpy((void *)(v25 + 16), __dst, 0xD8uLL);
          *(_QWORD *)(v25 + 232) = v24;
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v28);
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v28);
          swift_retain();
          ConversationController.startCountdownToRecordVideoMessage(withDuration:countdownTicker:countdownStopped:)();
          _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v28);
          swift_release();
          swift_release();
          return (_QWORD *)swift_release();
        }
      }
      ConversationController.startRecordingVideoMessage()();
    }
    return _s15ConversationKit22MultiwayViewControllerC0D7ContentVSgWOrTm_0((uint64_t)v28);
  }
  return result;
}

Swift::Void __swiftcall MultiwayViewController.closeVideoMessageCallBack()()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_26();
}

void sub_1BD51942C(void *a1)
{
  uint64_t v1;
  void (**v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;

  if (a1)
  {
    objc_msgSend(a1, sel_unansweredCallUIDismissed);
    OUTLINED_FUNCTION_19_0();
  }
  v2 = (void (**)(uint64_t))(v1
                                     + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_unansweredCallDismissalHandler);
  OUTLINED_FUNCTION_1();
  v3 = *v2;
  if (*v2)
  {
    v4 = partial apply for closure #2 in SystemSymbol<A>.init(name:color:backgroundColor:scale:font:weight:)();
    v3(v4);
    outlined consume of (@escaping @callee_guaranteed (@unowned CGRect, @unowned Bool) -> ())?((uint64_t)v3);
  }
  OUTLINED_FUNCTION_289_0();
}

void __swiftcall MultiwayViewController.hostingController()(UIViewController_optional *__return_ptr retstr)
{
  void *v1;
  id v2;

  v2 = v1;
}

Swift::Void __swiftcall MultiwayViewController.pipDidRotate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  char *v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _BYTE v16[216];
  uint64_t v17[27];

  OUTLINED_FUNCTION_96();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  v5 = OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_1();
  v7 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_5_131(v7, (uint64_t)v16);
  OUTLINED_FUNCTION_5_131((uint64_t)v16, (uint64_t)v17);
  OUTLINED_FUNCTION_12_109(v17);
  if (!v8)
  {
    v9 = *(char **)(v7 + 96);
    v10 = &v9[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_ignoreFocusedParticipantUpdates];
    OUTLINED_FUNCTION_2_0();
    v11 = *v10;
    *v10 = 0;
    v12 = (uint64_t)&v9[OBJC_IVAR____TtC15ConversationKit35MostActiveParticipantViewController_focusedParticipant];
    OUTLINED_FUNCTION_1();
    outlined init with copy of FeatureEligibility?(v12, (uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    OUTLINED_FUNCTION_69_0((uint64_t)v4, 1, v5);
    if (v8)
    {
      v13 = v9;
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v4, &demangling cache variable for type metadata for Participant?);
    }
    else
    {
      outlined init with take of Participant((uint64_t)v4, v1);
      v14 = v9;
      if (v11)
      {
        MostActiveParticipantViewController.focus(on:)();
        OUTLINED_FUNCTION_424_0();
        MostActiveParticipantViewController.update(participant:broadcastingState:)();
      }
      OUTLINED_FUNCTION_315((uint64_t)v14, type metadata accessor for Participant);
    }
    MostActiveParticipantViewController.handleParticipantVideoRotationForPIP()();

  }
  OUTLINED_FUNCTION_65_1();
}

uint64_t MultiwayViewController.canShowReactionsView()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  _BYTE v30[216];
  uint64_t v31[27];
  uint64_t v32;
  uint64_t v33[4];

  if (one-time initialization token for conversationKit != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)&static Logger.conversationKit);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  v5 = &selRef__backlightLuminance;
  if (os_log_type_enabled(v3, v4))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v33[0] = v7;
    *(_DWORD *)v6 = 136315906;
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
    swift_beginAccess();
    type metadata accessor for TUConversationState(0);
    v9 = String.init<A>(reflecting:)();
    v31[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 12) = 2080;
    v11 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
    swift_beginAccess();
    outlined init with take of MultiwayViewController.ViewContent?(v11, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
    if (getEnumTag for TapInteraction.EventType(v31) == 1)
    {
      v12 = 0xE300000000000000;
      v13 = 7104878;
    }
    else
    {
      v14 = (_BYTE *)(*(_QWORD *)(v11 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
      swift_beginAccess();
      LOBYTE(v32) = *v14;
      v13 = String.init<A>(reflecting:)();
      v12 = v15;
    }
    v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 22) = 2080;
    v16 = v8 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
    swift_beginAccess();
    LOBYTE(v32) = *(_BYTE *)(v16 + 16) >> 7;
    v17 = String.init<A>(reflecting:)();
    v32 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v6 + 32) = 1024;
    v19 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v20 = objc_msgSend(v19, sel_videoDeviceController);

    v5 = &selRef__backlightLuminance;
    LODWORD(v19) = objc_msgSend(v20, sel_currentInputSupportsReactionEffects);

    LODWORD(v32) = (_DWORD)v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_1BD004000, v3, v4, "canShowReactionsView - conversationState: %s, localParticipantState: %s, isVideoEnabled: %s, cameraSupportsReactions:%{BOOL}d", (uint8_t *)v6, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x1C3B751B8](v7, -1, -1);
    MEMORY[0x1C3B751B8](v6, -1, -1);

  }
  else
  {

  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController];
  v22 = (_QWORD *)(v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_conversationState);
  swift_beginAccess();
  if (*v22 != 3)
    return 0;
  v23 = v21 + OBJC_IVAR____TtC15ConversationKit22ConversationController_broadcastingState;
  swift_beginAccess();
  if ((*(char *)(v23 + 16) & 0x80000000) == 0)
    return 0;
  v24 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v25 = objc_msgSend(v24, sel_videoDeviceController);

  LODWORD(v24) = objc_msgSend(v25, v5[253]);
  if (!(_DWORD)v24)
    return 0;
  v26 = (uint64_t)&v2[OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent];
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v26, (uint64_t)v30, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v30, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v31) != 1
    && ((v27 = (unsigned __int8 *)(*(_QWORD *)(v26 + 48)
                                 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState),
         swift_beginAccess(),
         v28 = *v27,
         v28 < 0x40)
     || (v28 & 0xC0) == 0x40))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

void MultiwayViewController.inCallControlsVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[216];
  uint64_t v4[27];

  if ((MultiwayViewController.isModallyPresentingCallDetails.getter() & 1) == 0)
  {
    v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_5_131(v1, (uint64_t)v3);
    OUTLINED_FUNCTION_5_131((uint64_t)v3, (uint64_t)v4);
    OUTLINED_FUNCTION_12_109(v4);
    if (!v2)
      OUTLINED_FUNCTION_1();
  }
  OUTLINED_FUNCTION_69_24();
}

uint64_t MultiwayViewController.isCameraMixedWithScreen.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v16[53];
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_96();
  v17 = v0;
  v18 = v1;
  type metadata accessor for Participant.State(0);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_1();
  _s15ConversationKit11ParticipantVWOcTm_4();
  OUTLINED_FUNCTION_396_1();
  _s15ConversationKit11ParticipantVWOcTm_4();
  OUTLINED_FUNCTION_38_21();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 4)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (date: Date, mediaInfo: Participant.MediaInfo, copresenceInfo: Participant.CopresenceInfo?));
    v8 = &v4[*(int *)(v7 + 48)];
    outlined consume of Participant.CopresenceInfo?(*(_QWORD *)&v4[*(int *)(v7 + 64)], *(_QWORD *)&v4[*(int *)(v7 + 64) + 8]);
    memcpy(v16, v8, 0x150uLL);
    v9 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_75(v9);
    v10 = v16[2];
    v11 = LOWORD(v16[11]);
    OUTLINED_FUNCTION_8_8();
    v12 = outlined destroy of Participant.MediaInfo((uint64_t)v16);
    OUTLINED_FUNCTION_140_1(v12, type metadata accessor for Participant);
    if (v10)
    {
      OUTLINED_FUNCTION_2_1();
      return (v11 >> 8) & 1;
    }
  }
  else
  {
    OUTLINED_FUNCTION_315(EnumCaseMultiPayload, type metadata accessor for Participant.State);
    OUTLINED_FUNCTION_140_1(v14, type metadata accessor for Participant);
  }
  return 0;
}

void MultiwayViewController.captionsViewController(_:didRequestToBeMinimized:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  _BYTE *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  _BYTE v9[216];
  uint64_t v10[28];

  v4 = v2 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_40_60(v4, (uint64_t)v9);
  OUTLINED_FUNCTION_40_60((uint64_t)v9, (uint64_t)v10);
  OUTLINED_FUNCTION_12_109(v10);
  if (v5
    || (v6 = (_BYTE *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState),
        OUTLINED_FUNCTION_1(),
        *v6))
  {
    if ((a2 & 1) != 0)
      v7 = 1;
    else
      v7 = 2;
    v8 = v7;
    MultiwayViewController.updateCaptionsLayoutState(_:)(&v8);
  }
  OUTLINED_FUNCTION_18();
}

Swift::Void __swiftcall MultiwayViewController.dismissControls()()
{
  unsigned __int8 v0;

  v0 = 0;
  MultiwayViewController.setConversationBannerState(_:localParticipantState:animated:)(&v0, 0xFCu, 1);
  OUTLINED_FUNCTION_3_1();
}

uint64_t MultiwayViewController.shouldShowTranscriptDrawer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  char *v5;
  int v6;
  char v7;
  BOOL v8;
  _BYTE v10[216];
  uint64_t v11[27];
  _BYTE v12[216];
  uint64_t v13[27];

  if (static Platform.current.getter() != 3)
    goto LABEL_12;
  v1 = v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v12);
  OUTLINED_FUNCTION_6_110((uint64_t)v12, (uint64_t)v13);
  OUTLINED_FUNCTION_12_109(v13);
  if (v8)
    goto LABEL_12;
  v2 = *(_QWORD *)(v1 + 48);
  v3 = (unsigned __int8 *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_captionsState);
  OUTLINED_FUNCTION_1();
  v4 = *v3;
  OUTLINED_FUNCTION_6_110(v1, (uint64_t)v10);
  OUTLINED_FUNCTION_6_110((uint64_t)v10, (uint64_t)v11);
  OUTLINED_FUNCTION_12_109(v11);
  if (!v8)
  {
    v5 = (char *)(v2 + OBJC_IVAR___CNKFaceTimeConstraintsController_localParticipantState);
    OUTLINED_FUNCTION_1();
    v6 = *v5;
    if (v6 < 0)
    {
      v8 = v6 != -128 || v4 == 0;
      if (!v8)
        goto LABEL_6;
LABEL_12:
      v7 = 0;
      return v7 & 1;
    }
  }
  if (!v4)
    goto LABEL_12;
LABEL_6:
  v7 = ConversationController.isOneToOneModeEnabled.getter();
  return v7 & 1;
}

double MultiwayViewController.captionsTranscriptWidth.getter()
{
  if (one-time initialization token for transcriptSidebarWidth != -1)
    swift_once();
  return *(double *)&static Layout.Captions.transcriptSidebarWidth;
}

void MultiwayViewController.participantsViewController(_:didTapToggleFocus:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_96();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_30_6();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_149_6();
  v7 = OUTLINED_FUNCTION_69_0(v1, 1, v5);
  if (v8)
  {
    OUTLINED_FUNCTION_219(v7, &demangling cache variable for type metadata for Participant?);
    if (one-time initialization token for conversationKit != -1)
      swift_once();
    static os_log_type_t.error.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
    v9 = OUTLINED_FUNCTION_15();
    *(_OWORD *)(v9 + 16) = xmmword_1BD6441D0;
    v10 = OUTLINED_FUNCTION_33_0();
    v11 = OUTLINED_FUNCTION_65_2();
    OUTLINED_FUNCTION_139(v11, v12, v13);
    __swift_storeEnumTagSinglePayload(v0, 0, 1, v10);
    specialized >> prefix<A>(_:)(v0);
    v15 = v14;
    v17 = v16;
    OUTLINED_FUNCTION_96_3(v14, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    *(_QWORD *)(v9 + 64) = OUTLINED_FUNCTION_333_3(MEMORY[0x1E0DEA968]);
    *(_QWORD *)(v9 + 32) = v15;
    *(_QWORD *)(v9 + 40) = v17;
    OUTLINED_FUNCTION_239_1();
    OUTLINED_FUNCTION_133();
  }
  else
  {
    v18 = OUTLINED_FUNCTION_311_0();
    outlined init with take of Participant(v18, v19);
    MultiwayViewController.toggleFocusedParticipant(_:)(v2);
    OUTLINED_FUNCTION_43_19(v20, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_65_1();
}

void MultiwayViewController.participantsViewController(_:didTapShutter:)()
{
  ConversationController.captureMoment(for:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.participantsViewController(_:didTapRing:)()
{
  ConversationController.buzz(_:)();
  OUTLINED_FUNCTION_0();
}

void MultiwayViewController.participantsViewController(_:didTapKickMember:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v1);
  v2 = OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_149_6();
  v4 = OUTLINED_FUNCTION_69_0(v0, 1, v2);
  if (v5)
  {
    OUTLINED_FUNCTION_219(v4, &demangling cache variable for type metadata for Participant?);
  }
  else
  {
    OUTLINED_FUNCTION_343_3(v0);
    v6 = ConversationController.canKick(_:)();
    if ((v6 & 1) != 0)
      OUTLINED_FUNCTION_505_0();
    OUTLINED_FUNCTION_22_29(v6, type metadata accessor for Participant);
  }
  OUTLINED_FUNCTION_91();
}

void MultiwayViewController.showKickParticipantAlert(toKick:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  NSBundle v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  NSBundle v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  objc_class *v35;
  NSBundle v36;
  id v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_93();
  v42 = v0;
  v1 = OUTLINED_FUNCTION_14_2();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v2;
  MEMORY[0x1E0C80A78](v1);
  v39 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_conversationKit);
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_0_3(v6, 0x80000001BD67D530);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
  v7 = OUTLINED_FUNCTION_15();
  *(_OWORD *)(v7 + 16) = xmmword_1BD6441D0;
  Participant.contactDetails.getter();
  v8 = v43;
  v9 = v44;
  v10 = v45;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();

  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = lazy protocol witness table accessor for type String and conformance String();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  OUTLINED_FUNCTION_263();
  v11 = String.init(format:_:)();
  v13 = v12;
  v14 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_59(v14, (unint64_t *)&lazy cache variable for type metadata for UIAlertController);
  v16 = (objc_class *)OUTLINED_FUNCTION_9(v15, (const char *)&selRef_setCornerRadius_ + 6);
  v38 = 0xE000000000000000;
  OUTLINED_FUNCTION_61();
  v17.super.isa = v16;
  v19 = OUTLINED_FUNCTION_49_2(0xD00000000000001ELL, v18, 0x61737265766E6F43, 0xEF74694B6E6F6974, v17);
  v21 = v20;

  v22 = @nonobjc UIAlertController.__allocating_init(title:message:preferredStyle:)(v19, v21, v11, v13, 1);
  OUTLINED_FUNCTION_59((uint64_t)v22, (unint64_t *)&lazy cache variable for type metadata for UIAlertAction);
  v24 = (objc_class *)OUTLINED_FUNCTION_9(v23, (const char *)&selRef_setCornerRadius_ + 6);
  v38 = 0xE000000000000000;
  v25.super.isa = v24;
  v26 = OUTLINED_FUNCTION_49_2(0xD000000000000032, 0x80000001BD67D580, 0x61737265766E6F43, 0xEF74694B6E6F6974, v25);
  v28 = v27;

  v29 = OUTLINED_FUNCTION_15();
  v30 = v42;
  OUTLINED_FUNCTION_112_5();
  v31 = (uint64_t)v39;
  _s15ConversationKit11ParticipantVWOcTm_4();
  v32 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v29;
  outlined init with take of Participant(v31, v33 + v32);
  v34 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)(v26, v28, 0, (uint64_t)partial apply for closure #1 in MultiwayViewController.showKickParticipantAlert(toKick:));
  v35 = (objc_class *)OUTLINED_FUNCTION_9((uint64_t)v34, sel_conversationKit);
  OUTLINED_FUNCTION_18_3();
  v36.super.isa = v35;
  OUTLINED_FUNCTION_49_2(0x4C45434E4143, 0xE600000000000000, 0x61737265766E6F43, 0xEF74694B6E6F6974, v36);
  OUTLINED_FUNCTION_423_0();

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_112_5();
  v37 = @nonobjc UIAlertAction.__allocating_init(title:style:handler:)((uint64_t)v4, v33, 0, (uint64_t)partial apply for closure #2 in MultiwayViewController.showKickParticipantAlert(toKick:));
  OUTLINED_FUNCTION_59_6(v22, sel_addAction_);
  objc_msgSend(v22, sel_addAction_, v37);
  objc_msgSend(v30, sel_presentViewController_animated_completion_, v22, 1, 0);

  OUTLINED_FUNCTION_52_1();
}

uint64_t MultiwayViewController.participantsViewController(_:willDisplay:)()
{
  return MultiwayViewController.needsUpdatePresentationContexts.setter(1);
}

uint64_t MultiwayViewController.videoVisibility(for:)(uint64_t a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[5];
  _BYTE v15[216];
  uint64_t v16[30];
  _BYTE v17[216];
  uint64_t v18[27];

  v3 = (void **)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v3, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v17, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  if (getEnumTag for TapInteraction.EventType(v18) == 1
    || (v4 = v3[1],
        outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v3, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v15, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?), getEnumTag for TapInteraction.EventType(v16) == 1))
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
       + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    return *(_QWORD *)(*(_QWORD *)v5 + 16);
  }
  else
  {
    v8 = *v3;
    v9 = v4;
    v10 = v8;
    ParticipantGridViewController.participantIdentifiers.getter();
    v12 = v11;
    MEMORY[0x1E0C80A78](v11);
    v14[2] = a1;
    v13 = specialized Sequence.contains(where:)((uint64_t (*)(char *))closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)v14, v12);
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {

      return 0;
    }
    else
    {
      v6 = ParticipantListViewController.visibilityIndex(for:)(a1);

    }
  }
  return v6;
}

uint64_t MultiwayViewController.prominenceIndex(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t active;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)&v32 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - v13;
  active = MultiwayViewController.mostActiveParticipants.getter();
  v16 = *(_QWORD *)(active + 16);
  if (v16)
  {
    v33 = a1;
    v34 = v1;
    v17 = *(unsigned __int8 *)(v7 + 80);
    v32 = active;
    v35 = (v17 + 32) & ~v17;
    v18 = active + v35;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = MEMORY[0x1E0DEE9D8];
    v36 = v10;
    do
    {
      _s15ConversationKit11ParticipantVWOcTm_4();
      if (*(_QWORD *)&v14[*(int *)(v6 + 28)])
      {
        _s15ConversationKit11ParticipantVWOcTm_4();
        v21 = 0;
      }
      else
      {
        v21 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v5, v21, 1, v6);
      outlined destroy of AccountUpdateNotice((uint64_t)v14, type metadata accessor for Participant);
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>((uint64_t)v5, &demangling cache variable for type metadata for Participant?);
      }
      else
      {
        v22 = v37;
        outlined init with take of Participant((uint64_t)v5, v37);
        outlined init with take of Participant(v22, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        v23 = *(_QWORD *)(v20 + 16);
        if (v23 >= *(_QWORD *)(v20 + 24) >> 1)
          v20 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
        *(_QWORD *)(v20 + 16) = v23 + 1;
        v24 = v20 + v35 + v23 * v19;
        v10 = v36;
        outlined init with take of Participant((uint64_t)v36, v24);
      }
      v18 += v19;
      --v16;
    }
    while (v16);
    v25 = swift_bridgeObjectRelease();
    a1 = v33;
    v1 = v34;
  }
  else
  {
    v25 = swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v25);
  *(&v32 - 2) = a1;
  specialized Collection.firstIndex(where:)((uint64_t)partial apply for closure #1 in ParticipantGridViewController.updateProminenceEMA(withParticipant:ema:audioPriority:videoPriority:), (uint64_t)(&v32 - 4), v20);
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
    v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_conversationController)
        + OBJC_IVAR____TtC15ConversationKit22ConversationController_remoteParticipants;
    swift_beginAccess();
    return *(_QWORD *)(*(_QWORD *)v30 + 16) - 1;
  }
  return v27;
}

void MultiwayViewController.spatialPosition(for:)()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  char v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  _QWORD v25[11];
  _BYTE v26[56];
  uint64_t v27[30];
  _BYTE v28[216];
  uint64_t v29[27];

  v1 = v0;
  v2 = (void **)(v0 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_110((uint64_t)v2, (uint64_t)v28);
  OUTLINED_FUNCTION_6_110((uint64_t)v28, (uint64_t)v29);
  if (getEnumTag for TapInteraction.EventType(v29) == 1
    || (v3 = v2[1],
        OUTLINED_FUNCTION_6_110((uint64_t)v2, (uint64_t)v26),
        OUTLINED_FUNCTION_6_110((uint64_t)v26, (uint64_t)v27),
        OUTLINED_FUNCTION_12_109(v27),
        v4))
  {
LABEL_13:
    OUTLINED_FUNCTION_328_2();
    OUTLINED_FUNCTION_126_6();
    return;
  }
  v5 = *v2;
  v6 = v3;
  v7 = v5;
  ParticipantGridViewController.participantIdentifiers.getter();
  v9 = v8;
  v10 = OUTLINED_FUNCTION_14_2();
  MEMORY[0x1E0C80A78](v10);
  v25[2] = v11;
  v12 = specialized Sequence.contains(where:)((uint64_t (*)(char *))_sSTsSQ7ElementRpzrlE8containsySbABFSbABXEfU_Say10Foundation4UUIDVG_Tg5TA_0, (uint64_t)v25, v9);
  v13 = OUTLINED_FUNCTION_27();
  v14 = OUTLINED_FUNCTION_2_2(v13, sel_view);
  if ((v12 & 1) != 0)
  {
    if (v14)
    {
      v15 = OUTLINED_FUNCTION_354_1();
      ParticipantGridViewController.spatialPosition(for:relativeTo:)(v15, v16);
LABEL_10:
      OUTLINED_FUNCTION_152_5();
      v19 = (_QWORD *)(v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_supportedDeviceOrientations);
      OUTLINED_FUNCTION_1();
      if (!*v19)
      {
        OUTLINED_FUNCTION_1();
        v20 = OUTLINED_FUNCTION_66();
        MultiwayViewController.rotate(portraitRect:for:)(v21, v20, v22, v23, v24);
        OUTLINED_FUNCTION_89();
      }

      goto LABEL_13;
    }
    __break(1u);
  }
  else if (v14)
  {
    v17 = OUTLINED_FUNCTION_354_1();
    ParticipantListViewController.spatialPosition(for:relativeTo:)(v17, v18);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t MultiwayViewController.presentationContext(for:withVideoVisibility:withProminence:withSpatialPosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t result;
  char v23;

  v18 = type metadata accessor for Participant(0);
  v19 = a1 + *(int *)(v18 + 28);
  v20 = 0.0;
  if (!*(_QWORD *)v19 || (*(_BYTE *)(v19 + 16) & 1) != 0)
  {
    v21 = 0;
    result = 0;
    a2 = 0;
    a4 = 0;
    a7 = 0.0;
    a8 = 0.0;
    v23 = 2;
    a9 = 0.0;
  }
  else
  {
    v21 = *(_QWORD *)(v19 + 8);
    result = MultiwayViewController.videoQuality(for:)(a1 + *(int *)(v18 + 20));
    v23 = a3 & 1;
    v20 = a6;
  }
  *(_QWORD *)a5 = v21;
  *(_QWORD *)(a5 + 8) = result;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = v20;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  *(_BYTE *)(a5 + 64) = v23;
  return result;
}

uint64_t MultiwayViewController.videoQuality(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int Enum;
  uint64_t result;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int EnumTagSinglePayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[216];
  uint64_t v75[28];

  v73 = a1;
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Participant?);
  MEMORY[0x1E0C80A78](v3);
  v72 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v6 = MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v60 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v60 - v11;
  v13 = type metadata accessor for UUID();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v60 - v18;
  v20 = v1;
  v21 = v1 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_viewContent;
  swift_beginAccess();
  outlined init with take of MultiwayViewController.ViewContent?(v21, (uint64_t)v74, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  outlined init with take of MultiwayViewController.ViewContent?((uint64_t)v74, (uint64_t)v75, (uint64_t *)&demangling cache variable for type metadata for MultiwayViewController.ViewContent?);
  Enum = getEnumTag for TapInteraction.EventType(v75);
  result = 0;
  if (Enum != 1)
  {
    v66 = v20;
    v67 = v14;
    v62 = v17;
    v63 = v10;
    v64 = v12;
    v65 = v13;
    v68 = v19;
    v24 = *(id *)(v21 + 8);
    ParticipantGridViewController.participantIdentifiers.getter();
    v26 = v25;
    MEMORY[0x1E0C80A78](v25);
    *(&v60 - 2) = (id)v73;
    v27 = specialized Sequence.contains(where:)((uint64_t (*)(char *))closure #1 in Sequence<>.contains(_:)specialized partial apply, (uint64_t)(&v60 - 4), v26);
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {

      return 0;
    }
    ParticipantGridViewController.participantIdentifiers.getter();
    v61 = *(_QWORD *)(v28 + 16);
    swift_bridgeObjectRelease();
    v29 = *(_QWORD *)(v66 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults);
    v30 = *(_QWORD *)(v66 + OBJC_IVAR____TtC15ConversationKit22MultiwayViewController_defaults + 8);
    ObjectType = swift_getObjectType();
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 272))(ObjectType, v30);
    v33 = v67;
    v34 = v68;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v36 = v65;
    v35(v68, v73, v65);
    if (v32 >= v61)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);

      return 2;
    }
    v73 = ObjectType;
    v61 = v30;
    v66 = v29;
    v37 = (uint64_t)v24 + OBJC_IVAR____TtC15ConversationKit29ParticipantGridViewController_focusedParticipant;
    swift_beginAccess();
    v38 = v72;
    outlined init with copy of FeatureEligibility?(v37, v72, &demangling cache variable for type metadata for Participant?);
    v39 = type metadata accessor for Participant(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v38, 1, v39);
    v60 = v24;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v38, &demangling cache variable for type metadata for Participant?);
      v41 = 1;
      v43 = (uint64_t)v70;
      v42 = (uint64_t)v71;
      v44 = (uint64_t)v64;
    }
    else
    {
      v44 = (uint64_t)v64;
      v35(v64, v38 + *(int *)(v39 + 20), v36);
      outlined destroy of AccountUpdateNotice(v38, type metadata accessor for Participant);
      v41 = 0;
      v43 = (uint64_t)v70;
      v42 = (uint64_t)v71;
    }
    v45 = (uint64_t)v63;
    v47 = v68;
    v46 = v69;
    __swift_storeEnumTagSinglePayload(v44, v41, 1, v36);
    v35((char *)v45, (uint64_t)v47, v36);
    __swift_storeEnumTagSinglePayload(v45, 0, 1, v36);
    v48 = v42 + *(int *)(v46 + 48);
    outlined init with copy of FeatureEligibility?(v44, v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined init with copy of FeatureEligibility?(v45, v48, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (__swift_getEnumTagSinglePayload(v42, 1, v36) == 1)
    {
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v36);
      if (__swift_getEnumTagSinglePayload(v48, 1, v36) == 1)
      {
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v49 = v60;
LABEL_16:

        return 2;
      }
    }
    else
    {
      outlined init with copy of FeatureEligibility?(v42, v43, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if (__swift_getEnumTagSinglePayload(v48, 1, v36) != 1)
      {
        v51 = v67;
        v52 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v62, v48, v36);
        lazy protocol witness table accessor for type ButtonStyleConfiguration.Label and conformance ButtonStyleConfiguration.Label((uint64_t)&lazy protocol witness table cache variable for type UUID and conformance UUID);
        LODWORD(v72) = dispatch thunk of static Equatable.== infix(_:_:)();
        v53 = v44;
        v54 = *(void (**)(char *, uint64_t))(v51 + 8);
        v49 = v60;
        v54(v52, v36);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v53, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        v54(v68, v36);
        v54((char *)v43, v36);
        outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, (uint64_t *)&demangling cache variable for type metadata for UUID?);
        if ((v72 & 1) != 0)
          goto LABEL_16;
        goto LABEL_19;
      }
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v45, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v44, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v50 = *(void (**)(char *, uint64_t))(v67 + 8);
      v50(v47, v36);
      v50((char *)v43, v36);
    }
    outlined destroy of ZStack<ModifiedContent<ConversationStatusView, _PaddingLayout>?>(v42, (uint64_t *)&demangling cache variable for type metadata for (UUID?, UUID?));
    v49 = v60;
LABEL_19:
    ParticipantGridViewController.participantIdentifiers.getter();
    v56 = *(_QWORD *)(v55 + 16);
    swift_bridgeObjectRelease();
    v57 = v61;
    v58 = v73;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v61 + 280))(v73, v61) >= v56)
    {

      return 1;
    }
    else
    {
      v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 248))(v58, v57);

      return v59 & 1;
    }
  }
  return result;
}

