id CalculateLogForCategory()
{
  if (CalculateLogForCategory_loggingToken != -1)
    dispatch_once(&CalculateLogForCategory_loggingToken, &__block_literal_global_78);
  return (id)CalculateLogForCategory_logObjects_0;
}

id scan(_:options:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateScanKey();
  sub_1B885D4B8(&qword_1ED561C50, (uint64_t)&unk_1B8915D64);
  v9 = (void *)sub_1B8912A14();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1B885CF30;
  v13[3] = &block_descriptor;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v7, sel_scan_options_resultHandler_, v8, v9, v10);
  _Block_release(v10);

  return v11;
}

void type metadata accessor for CalculateScanKey()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1ED55FDD0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1ED55FDD0);
  }
}

uint64_t sub_1B885CF30(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1B885D07C();
  v2 = sub_1B8912C9C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t scan(_:options:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateScanKey();
  sub_1B885D4B8(&qword_1ED561C50, (uint64_t)&unk_1B8915D64);
  v2 = (void *)sub_1B8912A14();
  v3 = objc_msgSend(v0, sel_scan_options_, v1, v2);

  sub_1B885D07C();
  v4 = sub_1B8912C9C();

  return v4;
}

unint64_t sub_1B885D07C()
{
  unint64_t result;

  result = qword_1ED561C60;
  if (!qword_1ED561C60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED561C60);
  }
  return result;
}

uint64_t sub_1B885D0B8(uint64_t a1, uint64_t a2)
{
  return sub_1B885D180(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1B885D0C4()
{
  sub_1B8912AD4();
  sub_1B8912B10();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B885D104()
{
  uint64_t v0;

  sub_1B8912AD4();
  sub_1B89130A4();
  sub_1B8912B10();
  v0 = sub_1B89130BC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B885D174(uint64_t a1, uint64_t a2)
{
  return sub_1B885D180(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1B885D180(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1B8912AD4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B885D1BC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1B8912ABC();
  *a2 = 0;
  return result;
}

uint64_t sub_1B885D230(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1B8912AC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B885D2AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1B8912AD4();
  v2 = sub_1B8912AB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B885D2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1B8912AD4();
  v2 = v1;
  if (v0 == sub_1B8912AD4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1B8913050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B885D374@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B8912AB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B885D3B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8912AD4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B885D3E0()
{
  sub_1B885D4B8(&qword_1ED561C50, (uint64_t)&unk_1B8915D64);
  sub_1B885D4B8(&qword_1EF1B5FC8, (uint64_t)&unk_1B8915CB8);
  return sub_1B8913014();
}

uint64_t sub_1B885D44C()
{
  return sub_1B885D4B8(&qword_1EF1B5FB8, (uint64_t)&unk_1B8915C7C);
}

uint64_t sub_1B885D470()
{
  return sub_1B885D4B8(&qword_1EF1B5FC0, (uint64_t)&unk_1B8915C50);
}

uint64_t sub_1B885D494()
{
  return sub_1B885D4B8(&qword_1ED561C58, (uint64_t)&unk_1B8915CEC);
}

uint64_t sub_1B885D4B8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CalculateScanKey();
    result = MEMORY[0x1BCCB4D60](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B885D4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(unint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(__int128 *, _QWORD);
  char v37;
  char v38;
  uint64_t (*v39)(__int128 *, _QWORD);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(__int128 *);
  void (*v44)(__int128 *, _QWORD);
  unint64_t *v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(__int128 *, _QWORD);
  uint64_t v51;
  void (*v52)(__int128 *, _QWORD);
  unint64_t *v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t (*v56)(unint64_t);
  unsigned __int8 v57;
  __int128 v58;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B885DBB0, &v58);
  v3 = v58;
  if (!(_QWORD)v58)
    return 0;
  v4 = *((_QWORD *)&v58 + 1);
  v5 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v58 + 416);
  v6 = swift_retain();
  sub_1B885DBF8(v6);
  v7 = v5(v4);
  if (!v7)
  {
    swift_release();
    sub_1B885DC28(v3);
    sub_1B885DC28(v3);
    return 0;
  }
  v8 = v7;
  v56 = v5;
  v9 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  LOBYTE(v58) = *(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v57 = 1;
  swift_retain();
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v58, &v57))
  {
    v10 = *(void (**)(void))(*(_QWORD *)v8 + 208);
    v10();
    v11 = sub_1B8912B1C();
    v12 = swift_bridgeObjectRelease();
    if (v11 >= 1)
    {
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 384))(v12);
      if ((v13 & 1) != 0)
        v13 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v8 + 240))(0);
      v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(v13);
      if (v14)
      {
        (*(void (**)(void))(*(_QWORD *)v8 + 640))();
        v14 = swift_release();
      }
      ((void (*)(uint64_t))v10)(v14);
      v10();
      v15 = sub_1B8912B1C();
      swift_bridgeObjectRelease();
      result = v15 - 1;
      if (!__OFSUB__(v15, 1))
      {
        v17 = sub_1B885DDE4(result);
        v19 = v18;
        v21 = v20;
        v23 = v22;
        swift_bridgeObjectRelease();
        v24 = MEMORY[0x1BCCB3F20](v17, v19, v21, v23);
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 216);
        v28 = v27(v24, v26);
        v29 = ((uint64_t (*)(uint64_t))v10)(v28);
        v31 = v30;
        v32 = swift_bridgeObjectRelease();
        v33 = HIBYTE(v31) & 0xF;
        if ((v31 & 0x2000000000000000) == 0)
          v33 = v29 & 0xFFFFFFFFFFFFLL;
        if (v33)
          goto LABEL_46;
        if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 368))(v32) == 2)
        {
          result = v27(48, 0xE100000000000000);
          if (!__OFSUB__(v4, 1))
          {
            v34 = v56(v4 - 1);
            if (v34)
            {
              v35 = *(_BYTE *)(v34 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              swift_release();
              LOBYTE(v58) = v35;
              v57 = 4;
              sub_1B885DDA0();
              if ((sub_1B8912AA4() & 1) != 0)
              {
                v36 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v58);
                sub_1B885DC54(v4 - 1);
                swift_release();
                v36(&v58, 0);
              }
            }
            (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
            v32 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
            goto LABEL_46;
          }
LABEL_55:
          __break(1u);
          return result;
        }
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_51;
    }
  }
  v37 = *(_BYTE *)(v8 + v9);
  LOBYTE(v58) = v37;
  if ((CalculateExpression.TokenType.isParenthesis.getter() & 1) != 0
    && ((*(uint64_t (**)(void))(*(_QWORD *)v8 + 232))() & 1) == 0)
  {
    type metadata accessor for CalculateExpression.RichToken();
    v40 = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 208))();
    LOBYTE(v58) = v37;
    v42 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v40, v41, (unsigned __int8 *)&v58, 1);
    v43 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
    swift_retain();
    v44 = (void (*)(__int128 *, _QWORD))v43(&v58);
    v46 = v45;
    v47 = *v45;
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v46 = v47;
    if (!(_DWORD)result || (v47 & 0x8000000000000000) != 0 || (v47 & 0x4000000000000000) != 0)
      sub_1B885DD38(v47);
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4 < *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v42;
        swift_release();
        sub_1B8912CA8();
        v44(&v58, 0);
        v48 = v56(v4 - 1);
        if (v48)
        {
          v49 = *(_BYTE *)(v48 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          LOBYTE(v58) = v49;
          v57 = 10;
          sub_1B885DDA0();
          if ((sub_1B8912AA4() & 1) != 0)
          {
            v50 = (void (*)(__int128 *, _QWORD))v43(&v58);
            sub_1B885DC54(v4 - 1);
            swift_release();
            v50(&v58, 0);
          }
        }
        v32 = swift_release();
        goto LABEL_46;
      }
      goto LABEL_54;
    }
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if ((*(uint64_t (**)(void))(*(_QWORD *)a1 + 368))() == 2)
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))())
    {
      CalculateExpression.effectiveBase.getter((char *)&v58);
      swift_release();
      v38 = v58;
    }
    else
    {
      v38 = 1;
    }
    type metadata accessor for CalculateExpression.RichToken();
    LOBYTE(v58) = v38;
    v51 = sub_1B886210C(48, 0xE100000000000000, (char *)&v58);
    v52 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v58);
    v54 = v53;
    v55 = *v53;
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v54 = v55;
    if (!(_DWORD)result || (v55 & 0x8000000000000000) != 0 || (v55 & 0x4000000000000000) != 0)
      sub_1B885DD38(v55);
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4 < *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v51;
        swift_release();
        sub_1B8912CA8();
        v52(&v58, 0);
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
        v32 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
        goto LABEL_46;
      }
      goto LABEL_52;
    }
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
LABEL_27:
  v39 = (uint64_t (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v58);
  sub_1B885DC54(v4);
  swift_release();
  v32 = v39(&v58, 0);
LABEL_46:
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 560))(v32) & 1) != 0)
  {
    (*(void (**)(void))(*(_QWORD *)v3 + 424))();
    sub_1B885DC28(v3);
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_release_n();
    sub_1B885DC28(v3);
  }
  sub_1B885DC28(v3);
  return 1;
}

uint64_t sub_1B885DBB0(uint64_t *a1)
{
  uint64_t v1;
  char v2;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 560))() & 1) != 0)
    v2 = 0;
  else
    v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() ^ 1;
  return v2 & 1;
}

uint64_t sub_1B885DBF8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B885DC28(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B885DC54(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!(_DWORD)result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
    sub_1B885DD38(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v5 + 8 * a1;
    v9 = *(_QWORD *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * (v6 - 1 - a1));
    *(_QWORD *)(v5 + 16) = v7;
    sub_1B8912CA8();
    return v9;
  }
  return result;
}

uint64_t sub_1B885DCE8()
{
  swift_allocObject();
  return sub_1B8883058();
}

uint64_t CalculateExpression.DeleteOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

void sub_1B885DD38(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1BCCB43A0);
}

unint64_t sub_1B885DDA0()
{
  unint64_t result;

  result = qword_1ED561AF8;
  if (!qword_1ED561AF8)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.TokenType, &type metadata for CalculateExpression.TokenType);
    atomic_store(result, (unint64_t *)&qword_1ED561AF8);
  }
  return result;
}

uint64_t sub_1B885DDE4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B8912B40();
    return sub_1B8912C0C();
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.DeleteOperation()
{
  return objc_opt_self();
}

unint64_t sub_1B885DE8C(uint64_t a1)
{
  unint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *);
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  unint64_t v23;
  void (*v24)(_BYTE *, _QWORD);
  uint64_t v25;
  unint64_t v26;
  void (*v27)(_BYTE *, _QWORD);
  _BYTE v28[32];

  v3 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  if (!v3())
    return 0;
  v4 = CalculateExpression.format.getter();
  v5 = swift_release();
  if (v4 != 2)
    return 0;
  if (!((uint64_t (*)(uint64_t))v3)(v5))
    return 1;
  v6 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_6;
LABEL_26:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1B8912FD8();
  if (!v7)
    goto LABEL_26;
LABEL_6:
  v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
  }
  else
  {
    v1 = v6 & 0xC000000000000001;
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  MEMORY[0x1BCCB4394](v8, v6);
LABEL_11:
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v9 - 2;
    if (v9 >= 2)
      goto LABEL_13;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  result = v12 - 2;
  if (v12 < 2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
LABEL_13:
  if (v1)
  {
    MEMORY[0x1BCCB4394](result, v6);
    goto LABEL_20;
  }
  if (result < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_20:
    swift_bridgeObjectRelease();
    v13 = CalculateExpression.rich.getter();
    v14 = (*(uint64_t (**)(void))(*(_QWORD *)v13 + 392))();
    swift_release();
    if (!(v14 >> 62))
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_22:
      swift_bridgeObjectRelease();
      v16 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 408);
      v17 = (void (*)(_BYTE *, _QWORD))v16(v28);
      sub_1B885E26C(v15);
      v17(v28, 0);
      v18 = CalculateExpression.rich.getter();
      v19 = (*(uint64_t (**)(void))(*(_QWORD *)v18 + 392))();
      swift_release();
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v21 = (void (*)(_BYTE *, _QWORD))v16(v28);
      sub_1B885E26C(v20);
      v21(v28, 0);
      v22 = CalculateExpression.rich.getter();
      v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 392))(v22);
      swift_release();
      v24 = (void (*)(_BYTE *, _QWORD))v16(v28);
      sub_1B885E32C(v23);
      v24(v28, 0);
      v25 = CalculateExpression.rich.getter();
      v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 392))(v25);
      swift_release();
      v27 = (void (*)(_BYTE *, _QWORD))v16(v28);
      sub_1B885E32C(v26);
      v27(v28, 0);
      (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
      v11 = 1;
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 256))(1);
      swift_release();
      swift_release();
      return v11;
    }
LABEL_33:
    swift_bridgeObjectRetain();
    v15 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B885E26C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    v2 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else if (!(*v1 >> 62))
    {
      v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v4 = -v3;
      if (!__OFSUB__(0, v3))
        goto LABEL_5;
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v4 = -v3;
    if (!__OFSUB__(0, v3))
    {
LABEL_5:
      v5 = -v2;
      if (v4 <= 0 && v4 > v5)
        goto LABEL_20;
      result = v3 - v2;
      if (!__OFADD__(v3, v5))
      {
        if (v3 >= result)
          return sub_1B885E87C(result, v3);
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1B885E32C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1BCCB43A0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1B885E524(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1B8912CA8();
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.SwapOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.SwapOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B885E524(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  void (*v10)(_QWORD *);
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13[4])();

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1B885E778();
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B5FD0);
            v10 = sub_1B885E6B8(v13, i, a3);
            v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), _QWORD))v10)(v13, 0);
            *(_QWORD *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for CalculateExpression.RichToken();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_1B885E6B8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1B885E808(v6, a2, a3);
  return sub_1B885E70C;
}

void sub_1B885E70C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCB4D48]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1B885E778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1B5FD8;
  if (!qword_1EF1B5FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B5FD0);
    result = MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1B5FD8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCB4D54](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t (*sub_1B885E808(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCB4394](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1B885E874;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B885E874()
{
  return swift_release();
}

uint64_t sub_1B885E87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_30;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v7 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v12 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_33;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_35;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_36;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x1BCCB43A0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for CalculateExpression.RichToken();
  result = swift_arrayDestroy();
  if (!v5)
    return sub_1B8912CA8();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v17 = v22 - v2;
    if (!__OFSUB__(v22, v2))
      goto LABEL_21;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v16 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v17 = v16 - v2;
  if (__OFSUB__(v16, v2))
    goto LABEL_39;
LABEL_21:
  v18 = (char *)(v13 + 8 * v2);
  if (v4 != v2 || v14 >= &v18[8 * v17])
    result = (uint64_t)memmove(v14, v18, 8 * v17);
  if (*v3 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v23 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v20 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_26;
    goto LABEL_42;
  }
  v19 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v20 = v19 + v5;
  if (!__OFADD__(v19, v5))
  {
LABEL_26:
    *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v20;
    return sub_1B8912CA8();
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B885EB20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  type metadata accessor for CalculateExpression.RichToken();
  v17 = 10;
  v1 = sub_1B885FD04();
  v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(1885957222, 0xE400000000000000, &v17, v1 & 1);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v16 = 1;
  swift_bridgeObjectRetain();
  v5 = sub_1B885FD04();
  v6 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v4, v3, &v16, v5 & 1);
  type metadata accessor for CalculateExpression.RichExpression();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B8915DF0;
  *(_QWORD *)(v7 + 32) = v6;
  v15 = v7;
  sub_1B8912CA8();
  swift_retain();
  v8 = sub_1B88622EC(v15);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 288))(v8);
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 280);
  v11 = v10(v9);
  if (v11)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)v11 + 304))(0);
    v11 = swift_release();
  }
  v12 = v10(v11);
  if (v12)
  {
    v14 = 2;
    (*(void (**)(char *))(*(_QWORD *)v12 + 280))(&v14);
    swift_release();
  }
  swift_release();
  return v2;
}

uint64_t sub_1B885EC84(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1B88B259C(a1, a2, 1);
}

void sub_1B885ECD0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.FlipOperation.__deallocating_deinit()
{
  CalculateExpression.FunctionOperation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.FlipOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.FlipOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B885ED48(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = *a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  return sub_1B8883058();
}

uint64_t sub_1B885ED98@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v5;

  result = *(_QWORD *)(v1 + 24);
  if (result == 49 && *(_QWORD *)(v1 + 32) == 0xE100000000000000)
  {
    v5 = 1;
  }
  else
  {
    result = sub_1B8913050();
    if ((result & 1) != 0)
      v5 = 1;
    else
      v5 = 3;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1B885EDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void (*v17)(__int128 *, _QWORD);
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(__int128 *);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(__int128 *__return_ptr, uint64_t);
  uint64_t v48;
  unint64_t v49;
  void (*v50)(__int128 *, _QWORD);
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void (*v75)(__int128 *, _QWORD);
  unint64_t v76;
  char v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t (*v83)(__int128 *);
  void (*v84)(__int128 *, _QWORD);
  unint64_t *v85;
  unint64_t *v86;
  unint64_t v87;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v89;
  void (*v90)(__int128 *, _QWORD);
  unint64_t *v91;
  unint64_t *v92;
  unint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t (*v98)(__int128 *);
  void (*v99)(__int128 *, _QWORD);
  unint64_t *v100;
  unint64_t *v101;
  unint64_t v102;
  int v103;
  unint64_t *v104;
  unint64_t *v105;
  unint64_t v106;
  int v107;
  unint64_t v108;
  char v109;
  uint64_t *v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t (*v115)(__int128 *);
  void (*v116)(__int128 *, _QWORD);
  unint64_t *v117;
  unint64_t *v118;
  unint64_t v119;
  int v120;
  unint64_t *v121;
  unint64_t *v122;
  unint64_t v123;
  int v124;
  char v125;
  uint64_t v126;
  uint64_t (*v127)(__int128 *);
  void (*v128)(__int128 *, _QWORD);
  unint64_t *v129;
  unint64_t *v130;
  unint64_t v131;
  int v132;
  unint64_t *v133;
  unint64_t *v134;
  unint64_t v135;
  int v136;
  uint64_t v137;
  _BOOL4 v138;
  unint64_t v139;
  uint64_t v140;
  unsigned int v141;
  unint64_t v142;
  unsigned __int8 v143;
  __int128 v144;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(_QWORD *))sub_1B885FD04, &v144);
  v5 = v144;
  if (!(_QWORD)v144)
    return 0;
  v6 = *((_QWORD *)&v144 + 1);
  v7 = *(_QWORD *)(*(_QWORD *)v144 + 416);
  v8 = swift_retain();
  sub_1B885DBF8(v8);
  v9 = ((uint64_t (*)(unint64_t))v7)(v6);
  if (!v9)
  {
    sub_1B885DC28(v5);
    swift_release();
    sub_1B885DC28(v5);
    return 0;
  }
  v10 = v9;
  v11 = *(void (**)(_QWORD))(*(_QWORD *)a1 + 232);
  swift_retain();
  v11(0);
  v12 = (unint64_t)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v13 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v14 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v144) = v14;
  if ((CalculateExpression.TokenType.isOperator.getter() & 1) != 0)
  {
    LOBYTE(v144) = v14;
    v143 = 8;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
    {
      LOBYTE(v144) = v14;
      v143 = 9;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
      {
        swift_release();
        sub_1B885DC28(v5);
        goto LABEL_10;
      }
    }
  }
  v142 = sub_1B885FD0C((uint64_t)&unk_1E6E9D260);
  LOBYTE(v144) = v14;
  v143 = 15;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
    || (LOBYTE(v144) = v14,
        v143 = 18,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
  {
LABEL_9:
    swift_release();
    sub_1B885DC28(v5);
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
    sub_1B885DC28(v5);
    swift_release();
    return 0;
  }
  v16 = *(_QWORD *)(v2 + 24);
  v17 = *(void (**)(__int128 *, _QWORD))(v3 + 32);
  if (!v16 && v17 == (void (*)(__int128 *, _QWORD))0xE000000000000000 || (sub_1B8913050() & 1) != 0)
  {
    swift_release();
    if (!*(_QWORD *)(v142 + 16))
      goto LABEL_176;
    v18 = *(unsigned __int8 *)(v3 + 16);
    v19 = sub_1B8860108(v18);
    if ((v20 & 1) == 0)
      goto LABEL_176;
    v21 = v19;
    type metadata accessor for CalculateExpression.RichToken();
    v22 = (uint64_t *)(*(_QWORD *)(v142 + 56) + 16 * v21);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v144) = v18;
    v25 = sub_1B885FD04();
    v26 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v23, v24, (unsigned __int8 *)&v144, v25 & 1);
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v18 = v26;
      v28 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
      swift_retain();
      v17 = (void (*)(__int128 *, _QWORD))v28(&v144);
      if (!(*v29 >> 62))
      {
        if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFF8) + 0x10) >= v27)
          goto LABEL_21;
        goto LABEL_153;
      }
    }
    swift_bridgeObjectRetain();
    v137 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v137 >= v27)
    {
LABEL_21:
      if ((v27 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(v6 + 1, v6 + 1, v18);
        v17(&v144, 0);
        swift_release();
        sub_1B885DC28(v5);
LABEL_23:
        swift_release();
        swift_release();
        v30 = v5;
LABEL_24:
        sub_1B885DC28(v30);
        return 1;
      }
      goto LABEL_154;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  if ((v16 != 49 || v17 != (void (*)(__int128 *, _QWORD))0xE100000000000000) && (sub_1B8913050() & 1) == 0)
    goto LABEL_9;
  LOBYTE(v144) = *(_BYTE *)(v10 + v13);
  v143 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
    goto LABEL_34;
  if (__OFSUB__(v6, 1))
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  v31 = ((uint64_t (*)(unint64_t))v7)(v6 - 1);
  if (!v31)
  {
LABEL_34:
    swift_release();
    v36 = v142;
    if (!*(_QWORD *)(v142 + 16))
    {
LABEL_84:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_85;
    }
LABEL_35:
    v37 = *(unsigned __int8 *)(v3 + 16);
    v38 = sub_1B8860108(v37);
    if ((v39 & 1) != 0)
    {
      v40 = v38;
      type metadata accessor for CalculateExpression.RichToken();
      v41 = (uint64_t *)(*(_QWORD *)(v36 + 56) + 16 * v40);
      v42 = *v41;
      v43 = v41[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      LOBYTE(v144) = v37;
      v44 = sub_1B885FD04();
      v45 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v42, v43, (unsigned __int8 *)&v144, v44 & 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1B8915E20;
      *(_QWORD *)(v46 + 32) = v45;
      v47 = *(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384);
      v48 = swift_retain();
      v47(&v144, v48);
      *(_QWORD *)(v46 + 40) = sub_1B886210C(49, 0xE100000000000000, (char *)&v144);
      *(_QWORD *)&v144 = v46;
      sub_1B8912CA8();
      if (!__OFADD__(v6, 1))
      {
        v49 = v144;
        v50 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v144);
        sub_1B8860170(v6 + 1, v6 + 1, v49);
        v50(&v144, 0);
        swift_release();
        sub_1B885DC28(v5);
        goto LABEL_23;
      }
      goto LABEL_155;
    }
    goto LABEL_84;
  }
  v32 = v31;
  v33 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 376))();
  if ((v34 & 1) != 0)
  {
    v51 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 208))(v33);
    v53 = v52;
    swift_release();
    v54 = sub_1B885FE18(v51, v53);
    if ((v55 & 1) != 0)
      v35 = 0;
    else
      v35 = v54;
  }
  else
  {
    v35 = v33;
    swift_release();
  }
  LOBYTE(v144) = *(_BYTE *)(v32 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v56 = v144;
  v143 = 32;
  v141 = v144;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
  {
    v57 = 1;
  }
  else
  {
    LOBYTE(v144) = v56;
    v143 = 30;
    v57 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143);
  }
  v12 = *(unsigned __int8 *)(v3 + 16);
  LOBYTE(v144) = *(_BYTE *)(v3 + 16);
  v143 = 29;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
    || (LOBYTE(v144) = v12,
        v143 = 31,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
  {
    if (v57)
    {
      v138 = v35 != 0;
      if (v35)
        v58 = v35 - 1;
      else
        v58 = 1;
    }
    else
    {
      v58 = v35 + 1;
      if (v35 == -1)
      {
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      v138 = 0;
    }
  }
  else if (v57)
  {
    v58 = v35 + 1;
    if (v35 == -1)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    v138 = 1;
  }
  else
  {
    v138 = v35 == 0;
    if (v35)
      v58 = v35 - 1;
    else
      v58 = 1;
  }
  v139 = v32;
  LOBYTE(v144) = v12;
  v143 = 31;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
    || (LOBYTE(v144) = v12,
        v143 = 32,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
  {
    v7 = v6 - 1;
    v58 &= 0x3Fu;
  }
  else
  {
    v7 = v6 - 1;
  }
  type metadata accessor for CalculateExpression.RichToken();
  *(_QWORD *)&v144 = v58;
  v59 = sub_1B8913038();
  LOBYTE(v144) = 1;
  v61 = sub_1B886210C(v59, v60, (char *)&v144);
  (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)a1 + 384))(&v144);
  v140 = v61;
  (*(void (**)(__int128 *))(*(_QWORD *)v61 + 400))(&v144);
  LOBYTE(v144) = v12;
  v143 = 29;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
    || (LOBYTE(v144) = v12,
        v143 = 30,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
  {
    LOBYTE(v144) = v141;
    v143 = 29;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
      || (LOBYTE(v144) = v141,
          v143 = 30,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
    {
      v12 = v142;
      if (!v58)
      {
        swift_bridgeObjectRelease();
        if ((uint64_t)v6 < (uint64_t)v7)
        {
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        v74 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v144);
        if (__OFADD__(v6, 1))
        {
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        goto LABEL_82;
      }
      v62 = *(_QWORD *)(v142 + 16);
      if (v138)
      {
        if (v62 && (v63 = sub_1B8860108(30), (v64 & 1) != 0))
        {
          v65 = (uint64_t *)(*(_QWORD *)(v142 + 56) + 16 * v63);
          v66 = *v65;
          v67 = v65[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          v66 = 0;
          v67 = 0;
        }
        swift_bridgeObjectRelease();
        LOBYTE(v144) = 30;
        v81 = sub_1B885FD04() & 1;
        v82 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v66, v67, (unsigned __int8 *)&v144, v81);
        v83 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
        v84 = (void (*)(__int128 *, _QWORD))v83(&v144);
        v86 = v85;
        v87 = *v85;
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v86 = v87;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v87 & 0x8000000000000000) != 0
          || (v87 & 0x4000000000000000) != 0)
        {
          sub_1B885DD38(v87);
        }
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_160;
        if (v7 >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v82;
        swift_release();
        sub_1B8912CA8();
        v84(&v144, 0);
        v89 = v61;
        swift_retain();
        v90 = (void (*)(__int128 *, _QWORD))v83(&v144);
        v92 = v91;
        v93 = *v91;
        v94 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v92 = v93;
        if (!v94 || (v93 & 0x8000000000000000) != 0 || (v93 & 0x4000000000000000) != 0)
          sub_1B885DD38(v93);
        v7 = v139;
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_162;
        v95 = v93 & 0xFFFFFFFFFFFFFF8;
        if (v6 < *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_149;
        __break(1u);
        goto LABEL_102;
      }
LABEL_85:
      if (v62)
      {
        v76 = sub_1B8860108(29);
        if ((v77 & 1) != 0)
        {
          v78 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v76);
          v79 = *v78;
          v80 = v78[1];
          swift_bridgeObjectRetain();
LABEL_103:
          swift_bridgeObjectRelease();
          LOBYTE(v144) = 29;
          v96 = sub_1B885FD04() & 1;
          v97 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v79, v80, (unsigned __int8 *)&v144, v96);
          v98 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
          v99 = (void (*)(__int128 *, _QWORD))v98(&v144);
          v101 = v100;
          v102 = *v100;
          v103 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v101 = v102;
          if (!v103 || (v102 & 0x8000000000000000) != 0 || (v102 & 0x4000000000000000) != 0)
            sub_1B885DD38(v102);
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_163;
          if (v7 >= *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
            goto LABEL_166;
          }
          *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v97;
          swift_release();
          sub_1B8912CA8();
          v99(&v144, 0);
          v89 = v140;
          swift_retain();
          v90 = (void (*)(__int128 *, _QWORD))v98(&v144);
          v105 = v104;
          v106 = *v104;
          v107 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v105 = v106;
          if (!v107 || (v106 & 0x8000000000000000) != 0 || (v106 & 0x4000000000000000) != 0)
            sub_1B885DD38(v106);
          v7 = v139;
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_165;
          v95 = v106 & 0xFFFFFFFFFFFFFF8;
          if (v6 >= *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_116;
          }
LABEL_149:
          *(_QWORD *)(v95 + 8 * v6 + 32) = v89;
          swift_release();
          sub_1B8912CA8();
          v90(&v144, 0);
          goto LABEL_150;
        }
      }
LABEL_102:
      v79 = 0;
      v80 = 0;
      goto LABEL_103;
    }
  }
  LOBYTE(v144) = v12;
  v143 = 31;
  v36 = v142;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)
    && (LOBYTE(v144) = v12,
        v143 = 32,
        !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
    || (v12 = v141,
        LOBYTE(v144) = v141,
        v143 = 31,
        !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143))
    && (LOBYTE(v144) = v141,
        v143 = 32,
        !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v144, &v143)))
  {
    swift_release();
    swift_release();
    if (!*(_QWORD *)(v142 + 16))
      goto LABEL_84;
    goto LABEL_35;
  }
  if (!v58)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    if ((uint64_t)v6 < (uint64_t)v7)
    {
LABEL_167:
      __break(1u);
      goto LABEL_168;
    }
    v74 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v144);
    if (__OFADD__(v6, 1))
    {
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
      goto LABEL_170;
    }
LABEL_82:
    v75 = (void (*)(__int128 *, _QWORD))v74;
    sub_1B885E87C(v7, v6 + 1);
    v75(&v144, 0);
LABEL_150:
    swift_release();
    sub_1B885DC28(v5);
    swift_release();
    swift_release();
    swift_release();
    v30 = v5;
    goto LABEL_24;
  }
  v68 = *(_QWORD *)(v142 + 16);
  if (v138)
  {
    if (v68 && (v69 = sub_1B8860108(32), (v70 & 1) != 0))
    {
      v71 = (uint64_t *)(*(_QWORD *)(v142 + 56) + 16 * v69);
      v72 = *v71;
      v73 = v71[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      v72 = 0;
      v73 = 0;
    }
    swift_bridgeObjectRelease();
    LOBYTE(v144) = 32;
    v113 = sub_1B885FD04() & 1;
    v114 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v72, v73, (unsigned __int8 *)&v144, v113);
    v115 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
    v116 = (void (*)(__int128 *, _QWORD))v115(&v144);
    v118 = v117;
    v119 = *v117;
    v120 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v118 = v119;
    if (!v120 || (v119 & 0x8000000000000000) != 0 || (v119 & 0x4000000000000000) != 0)
      sub_1B885DD38(v119);
    if ((v7 & 0x8000000000000000) != 0)
      goto LABEL_169;
    if (v7 >= *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
      goto LABEL_173;
    }
    *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v114;
    swift_release();
    sub_1B8912CA8();
    v116(&v144, 0);
    v89 = v140;
    swift_retain();
    v90 = (void (*)(__int128 *, _QWORD))v115(&v144);
    v122 = v121;
    v123 = *v121;
    v124 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v122 = v123;
    if (!v124 || (v123 & 0x8000000000000000) != 0 || (v123 & 0x4000000000000000) != 0)
      sub_1B885DD38(v123);
    v7 = v139;
    if ((v6 & 0x8000000000000000) != 0)
      goto LABEL_171;
    v95 = v123 & 0xFFFFFFFFFFFFFF8;
    if (v6 < *(_QWORD *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_149;
    __break(1u);
    goto LABEL_136;
  }
  if (!v68 || (v108 = sub_1B8860108(31), (v109 & 1) == 0))
  {
LABEL_136:
    v111 = 0;
    v112 = 0;
    goto LABEL_137;
  }
  v110 = (uint64_t *)(*(_QWORD *)(v142 + 56) + 16 * v108);
  v111 = *v110;
  v112 = v110[1];
  swift_bridgeObjectRetain();
LABEL_137:
  swift_bridgeObjectRelease();
  LOBYTE(v144) = 31;
  v125 = sub_1B885FD04() & 1;
  v126 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v111, v112, (unsigned __int8 *)&v144, v125);
  v127 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
  v128 = (void (*)(__int128 *, _QWORD))v127(&v144);
  v130 = v129;
  v131 = *v129;
  v132 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v130 = v131;
  if (!v132 || (v131 & 0x8000000000000000) != 0 || (v131 & 0x4000000000000000) != 0)
    sub_1B885DD38(v131);
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_172;
  if (v7 >= *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
  *(_QWORD *)((v131 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v126;
  swift_release();
  sub_1B8912CA8();
  v128(&v144, 0);
  v89 = v140;
  swift_retain();
  v90 = (void (*)(__int128 *, _QWORD))v127(&v144);
  v134 = v133;
  v135 = *v133;
  v136 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v134 = v135;
  if (!v136 || (v135 & 0x8000000000000000) != 0 || (v135 & 0x4000000000000000) != 0)
    sub_1B885DD38(v135);
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_174;
  v95 = v135 & 0xFFFFFFFFFFFFFF8;
  if (v6 < *(_QWORD *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_149;
LABEL_175:
  __break(1u);
LABEL_176:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1B885FD04()
{
  return 0;
}

unint64_t sub_1B885FD0C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C00);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1B8860108(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B885FE18(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  _QWORD v23[3];

  v4 = HIBYTE(a2) & 0xF;
  v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = (unint64_t)sub_1B8860764(a1, a2, 10);
    v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v7 = (unsigned __int8 *)sub_1B8912F84();
    v8 = (unint64_t)sub_1B8860848(v7, v5, 10);
    v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4)
      goto LABEL_52;
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u)
      goto LABEL_36;
    v8 = (BYTE1(a1) - 48);
    v15 = v4 - 2;
    if (v15)
    {
      v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        v17 = *v16 - 48;
        if (v17 > 9)
          goto LABEL_36;
        if (!is_mul_ok(v8, 0xAuLL))
          goto LABEL_36;
        v14 = __CFADD__(10 * v8, v17);
        v8 = 10 * v8 + v17;
        if (v14)
          goto LABEL_36;
        v10 = 0;
        ++v16;
        if (!--v15)
          goto LABEL_39;
      }
    }
LABEL_38:
    v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u)
      goto LABEL_36;
    v8 = (a1 - 48);
    v18 = v4 - 1;
    if (v18)
    {
      v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        v21 = *v20 - 48;
        if (v21 > 9)
          goto LABEL_36;
        if (!is_mul_ok(v8, 0xAuLL))
          goto LABEL_36;
        v14 = __CFADD__(10 * v8, v21);
        v8 = 10 * v8 + v21;
        if (v14)
          goto LABEL_36;
        v10 = 0;
        ++v20;
        if (!--v18)
          goto LABEL_39;
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      v2 = 0;
      v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        v11 = v4 - 2;
        if (v11)
        {
          v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            v13 = *v12 - 48;
            if (v13 > 9)
              goto LABEL_36;
            if (!is_mul_ok(v8, 0xAuLL))
              goto LABEL_36;
            v14 = 10 * v8 >= v13;
            v8 = 10 * v8 - v13;
            if (!v14)
              goto LABEL_36;
            v10 = 0;
            ++v12;
            if (!--v11)
              goto LABEL_39;
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    v8 = 0;
    v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  v10 = 1;
  v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    return 0;
  else
    return v8;
}

void sub_1B8860074()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B88600A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.ShiftOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ShiftOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1B8860108(uint64_t a1)
{
  uint64_t v2;

  sub_1B88612A8();
  v2 = sub_1B8912A74();
  return sub_1B88610C0(a1, v2);
}

char *sub_1B8860170(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = a3;
    v4 = a2;
    v5 = a1;
    if (!(*v3 >> 62))
    {
      v9 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRetain();
  v9 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v9 < v4)
    goto LABEL_36;
LABEL_4:
  v9 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v7 = v8 >> 62;
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 - v9;
    if (!__OFSUB__(v10, v9))
      goto LABEL_7;
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    v12 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v13 = v12 + v31;
    if (!__OFADD__(v12, v31))
      goto LABEL_9;
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    v16 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  v10 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  v11 = v10 - v9;
  if (__OFSUB__(v10, v9))
    goto LABEL_40;
LABEL_7:
  v6 = *v3;
  v31 = v11;
  if (*v3 >> 62)
    goto LABEL_41;
  v12 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 + v11;
  if (__OFADD__(v12, v11))
    goto LABEL_43;
LABEL_9:
  v6 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v6;
  v29 = v7;
  v30 = v8;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v15 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_19;
    v12 = 1;
  }
  if (v6 >> 62)
    goto LABEL_44;
  v16 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1BCCB43A0](v12, v16, 1, v6);
  swift_bridgeObjectRelease();
  *v3 = v6;
  v15 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  v17 = v15 + 32 + 8 * v5;
  type metadata accessor for CalculateExpression.RichToken();
  result = (char *)swift_arrayDestroy();
  v19 = v31;
  if (v31)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      v19 = v31;
      v21 = v27 - v4;
      if (!__OFSUB__(v27, v4))
        goto LABEL_22;
    }
    else
    {
      v20 = *(_QWORD *)(v15 + 16);
      v21 = v20 - v4;
      if (!__OFSUB__(v20, v4))
      {
LABEL_22:
        result = (char *)(v17 + 8 * v10);
        v22 = (char *)(v15 + 32 + 8 * v4);
        if (result != v22 || result >= &v22[8 * v21])
        {
          result = (char *)memmove(result, v22, 8 * v21);
          v19 = v31;
        }
        if (!(v6 >> 62))
        {
          v23 = *(_QWORD *)(v15 + 16);
          v24 = v23 + v19;
          if (!__OFADD__(v23, v19))
          {
LABEL_27:
            *(_QWORD *)(v15 + 16) = v24;
            goto LABEL_28;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_48:
        swift_bridgeObjectRetain();
        v28 = sub_1B8912FD8();
        result = (char *)swift_bridgeObjectRelease();
        v24 = v28 + v31;
        if (!__OFADD__(v28, v31))
          goto LABEL_27;
        goto LABEL_50;
      }
    }
    __break(1u);
    goto LABEL_48;
  }
LABEL_28:
  if (v10 < 1)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return (char *)sub_1B8912CA8();
  }
  if (v29)
  {
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1B8861184(v25);
    swift_bridgeObjectRelease();
    sub_1B886105C((uint64_t)(v26 + 4), v26[2], v10);
    swift_release();
    goto LABEL_33;
  }
  if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) == v10)
  {
    swift_arrayInitWithCopy();
    goto LABEL_33;
  }
LABEL_51:
  __break(1u);
  return result;
}

char *sub_1B88604E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *result;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  v22 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v22 < v5)
    goto LABEL_30;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v10 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v14 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_33;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_35;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_36;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1BCCB43A0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  type metadata accessor for CalculateExpression.RichToken();
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_27:
    *v15 = v3;
    return (char *)sub_1B8912CA8();
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v17 = v23 - v5;
    if (!__OFSUB__(v23, v5))
      goto LABEL_21;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v16 = *(_QWORD *)(v13 + 16);
  v17 = v16 - v5;
  if (__OFSUB__(v16, v5))
    goto LABEL_39;
LABEL_21:
  result = (char *)(v15 + 1);
  v19 = (char *)(v13 + 32 + 8 * v5);
  if (v15 + 1 != (_QWORD *)v19 || result >= &v19[8 * v17])
    result = (char *)memmove(result, v19, 8 * v17);
  if (v7 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v24 = sub_1B8912FD8();
    result = (char *)swift_bridgeObjectRelease();
    v21 = v24 + v8;
    if (!__OFADD__(v24, v8))
      goto LABEL_26;
    goto LABEL_42;
  }
  v20 = *(_QWORD *)(v13 + 16);
  v21 = v20 + v8;
  if (!__OFADD__(v20, v8))
  {
LABEL_26:
    *(_QWORD *)(v13 + 16) = v21;
    goto LABEL_27;
  }
LABEL_42:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1B8860764(uint64_t a1, uint64_t a2, int64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B8912C00();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B8860AC4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B8912F84();
  }
LABEL_7:
  v11 = sub_1B8860848(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1B8860848(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1B8860AC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1B8912C0C();
  v4 = sub_1B8860B40(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B8860B40(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1B8860C84(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1B8860D70(v9, 0);
      v12 = sub_1B8860DD4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1BCCB3F2C](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1BCCB3F2CLL);
LABEL_9:
      sub_1B8912F84();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BCCB3F2C]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1B8860C84(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1B8860FE4(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1B8860FE4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1B8912BA0();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8860D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B5FE0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1B8860DD4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1B8860FE4(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1B8912BAC();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1B8912F84();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1B8860FE4(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1B8912B88();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1B8860FE4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1B8912BC4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCB3FBC](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1B886105C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 == a3)
  {
    if (result)
    {
      type metadata accessor for CalculateExpression.RichToken();
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1B88610C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_1B885DDA0();
    do
    {
      if ((sub_1B8912AA4() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

_QWORD *sub_1B8861184(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCB4370](v3 + 4, v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t type metadata accessor for CalculateExpression.ShiftOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.ShiftOperation()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1B88612A8()
{
  unint64_t result;

  result = qword_1ED561AF0;
  if (!qword_1ED561AF0)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.TokenType, &type metadata for CalculateExpression.TokenType);
    atomic_store(result, (unint64_t *)&qword_1ED561AF0);
  }
  return result;
}

uint64_t CalculateExpression.RichToken.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  v4 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static CalculateExpression.RichToken.== infix(_:_:)()
{
  return sub_1B8912828();
}

uint64_t sub_1B8861344@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1B8861374(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 216);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1B88613B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B886140C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B8861468())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void CalculateExpression.RichToken.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
}

uint64_t sub_1B88614C0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B88614F4(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 240))(*a1);
}

uint64_t sub_1B8861520()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1B8861564(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B88615AC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B88615F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 256))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8861620(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 264);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1B8861650()
{
  return sub_1B8861718();
}

uint64_t sub_1B886165C(uint64_t a1)
{
  return sub_1B8861768(a1, &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left);
}

uint64_t (*sub_1B8861668())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B88616AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_1B88616DC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 288);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1B886170C()
{
  return sub_1B8861718();
}

uint64_t sub_1B8861718()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1B886175C(uint64_t a1)
{
  return sub_1B8861768(a1, &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
}

uint64_t sub_1B8861768(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_release();
}

uint64_t (*sub_1B88617B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B88617F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 304))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8861828(_QWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 312))(*a1);
}

uint64_t sub_1B8861854()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1B8861898(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1B88618E0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8861924()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (result)
  {
    v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 536))(result);
    result = swift_release();
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_12:
      __break(1u);
      return result;
    }
    v3 = (v2 + 1) & ~((v2 + 1) >> 63);
  }
  else
  {
    v3 = 0;
  }
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 280))(result);
  if (!v4)
    return v3;
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 536))(v4);
  result = swift_release();
  if (__OFADD__(v5, 1))
    goto LABEL_12;
  if (v5 + 1 <= v3)
    return v3;
  else
    return v5 + 1;
}

uint64_t CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3, char a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(a1, a2, a3, a4);
  return v8;
}

uint64_t CalculateExpression.RichToken.init(text:type:isImplicit:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  unint64_t v16;
  _QWORD *v17;

  v5 = v4;
  v9 = *a3;
  sub_1B8912834();
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript) = 0;
  v10 = (_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesGroupingSeparator) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) = 0;
  v11 = (_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  *v11 = 0;
  v11[1] = 0;
  v12 = sub_1B885FD0C((uint64_t)&unk_1E6E9D868);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1B8860108(v9), (v14 & 1) != 0))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v13);
    a1 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (a2)
    {
      v16 = a2;
    }
    else
    {
      a1 = 0;
      v16 = 0xE000000000000000;
    }
  }
  v17 = (_QWORD *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  *v17 = a1;
  v17[1] = v16;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type) = v9;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit) = a4 & 1;
  return v5;
}

unint64_t sub_1B8861BC4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6080);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1B8873F28(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8861CE0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6030);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1B8873F28(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8861E00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C10);
  v2 = sub_1B8913008();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8879FD0(v6, (uint64_t)&v13, &qword_1ED561B70);
    v7 = v13;
    result = sub_1B8873FBC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1B8879E64(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8861F2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6038);
  v2 = sub_1B8913008();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8879FD0(v6, (uint64_t)v15, &qword_1EF1B6040);
    result = sub_1B887403C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1B8879E64(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1B886206C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1B8873F28(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  else
    return 0;
}

uint64_t sub_1B88620B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_1B8873F28(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1B886210C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(char *);
  uint64_t v16;
  unsigned __int8 v18[31];
  char v19;

  v4 = *a3;
  v18[0] = 1;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, _QWORD))(v3 + 336))(a1, a2, v18, 0);
  v18[0] = v4;
  v19 = 1;
  sub_1B8873E88();
  swift_retain();
  if ((sub_1B8912AA4() & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1B8915DF0;
    v18[0] = v4;
    *(_QWORD *)v18 = CalculateExpression.Base.rawValue.getter();
    v7 = sub_1B8913038();
    v9 = v8;
    v18[0] = 1;
    type metadata accessor for CalculateExpression.RichToken();
    v10 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v7, v9, v18, 0);
    *(_QWORD *)(v6 + 32) = v10;
    *(_QWORD *)v18 = v6;
    sub_1B8912CA8();
    v11 = *(_QWORD *)v18;
    type metadata accessor for CalculateExpression.RichExpression();
    v12 = swift_allocObject();
    sub_1B886600C(v11);
    v13 = (uint64_t *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
    swift_beginAccess();
    *v13 = v12;
    swift_release();
    v14 = *v13;
    if (*v13)
    {
      v19 = 2;
      v15 = *(void (**)(char *))(*(_QWORD *)v14 + 280);
      swift_retain();
      v15(&v19);
      swift_release();
      v16 = *v13;
      if (*v13)
      {
        swift_retain();
        swift_release();
        (*(void (**)(_QWORD))(*(_QWORD *)v16 + 304))(0);
      }
    }
  }
  swift_release();
  return v5;
}

uint64_t sub_1B88622EC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1B886600C(a1);
  return v2;
}

uint64_t sub_1B8862328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  _QWORD *v20;
  _BYTE v22[24];

  v3 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 208))();
  v5 = v4;
  v22[0] = *(_BYTE *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v6 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 232))();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *, _QWORD))(v1 + 336))(v3, v5, v22, v6 & 1);
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 304);
  v9 = swift_retain();
  v10 = v8(v9);
  v11 = (uint64_t *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript);
  v12 = swift_beginAccess();
  *v11 = v10;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256))(v12);
  if (v13)
  {
    v14 = (_BYTE *)v13;
    type metadata accessor for CalculateExpression.RichExpression();
    swift_allocObject();
    v15 = sub_1B8878770(v14);
    swift_release();
    v16 = (_QWORD *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left);
    swift_beginAccess();
    *v16 = v15;
    v13 = swift_release();
  }
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 280))(v13);
  if (v17)
  {
    v18 = (_BYTE *)v17;
    type metadata accessor for CalculateExpression.RichExpression();
    swift_allocObject();
    v19 = sub_1B8878770(v18);
    swift_release();
    swift_release();
    v20 = (_QWORD *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
    swift_beginAccess();
    *v20 = v19;
  }
  swift_release();
  swift_release();
  return v7;
}

_BYTE *sub_1B88624F4(_BYTE *a1)
{
  _BYTE *v2;

  swift_allocObject();
  v2 = sub_1B8878770(a1);
  swift_release();
  return v2;
}

uint64_t sub_1B886253C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v5 = 10;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v6, &v5))
    return 0;
  if ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))() == 10127586 && v1 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v3 = sub_1B8913050();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

uint64_t sub_1B88625F0()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v5 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v6, &v5))
    return 0;
  if ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))() == 48 && v1 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v3 = sub_1B8913050();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

BOOL sub_1B8862690()
{
  return sub_1B88626B0(6778732, 0xE300000000000000);
}

BOOL sub_1B88626A0()
{
  return sub_1B88626B0(1885957222, 0xE400000000000000);
}

BOOL sub_1B88626B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  _QWORD v9[2];

  LOBYTE(v9[0]) = *(_BYTE *)(v2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v8[0]) = 10;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v9, (unsigned __int8 *)v8))
    return 0;
  v9[0] = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 208))();
  v9[1] = v5;
  v8[0] = a1;
  v8[1] = a2;
  sub_1B8878944();
  v6 = sub_1B8912E58();
  swift_bridgeObjectRelease();
  return v6 == 0;
}

uint64_t sub_1B8862760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  _QWORD v30[2];
  unsigned __int8 v31[4];

  v1 = v0;
  LOBYTE(v30[0]) = *(_BYTE *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v31[0] = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v30, v31))
    return 0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
  if (!v2)
    return 0;
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 392))();
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_64:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_1B8912FD8())
    goto LABEL_64;
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCB4394](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_69:
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    v4 = *(_QWORD *)(v3 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  LOBYTE(v30[0]) = *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v31[0] = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v30, v31))
  {
    swift_release();
    swift_release();
    return 0;
  }
  (*(void (**)(void))(*(_QWORD *)v1 + 208))();
  result = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 208))();
  v7 = v6;
  v8 = HIBYTE(v6) & 0xF;
  v9 = result & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v10 = v8;
  else
    v10 = result & 0xFFFFFFFFFFFFLL;
  if (!v10)
    goto LABEL_69;
  if ((v7 & 0x1000000000000000) != 0)
  {
    v14 = sub_1B8874420(result, v7, 10);
    swift_bridgeObjectRelease();
    if ((v14 & 0x100000000) == 0)
      goto LABEL_56;
    goto LABEL_55;
  }
  if ((v7 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v11 = (unsigned __int8 *)sub_1B8912F84();
    v12 = sub_1B88745F4(v11, v9, 10);
    v31[0] = BYTE4(v12) & 1;
    v13 = BYTE4(v12) & 1;
    LODWORD(v14) = (_DWORD)v12;
LABEL_54:
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_56:
      v26 = sub_1B8912AEC();
      swift_bridgeObjectRelease();
      v15 = strtoull((const char *)(v26 + 32), 0, v14);
      swift_release();
      swift_release();
      swift_release();
      return v15;
    }
LABEL_55:
    LODWORD(v14) = 10;
    goto LABEL_56;
  }
  v30[0] = result;
  v30[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v8)
      goto LABEL_74;
    if (v8 == 1)
      goto LABEL_41;
    LODWORD(v14) = (BYTE1(result) - 48);
    if (v14 > 9)
      goto LABEL_41;
    if (v8 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_41;
      LODWORD(v14) = 10 * v14 + (BYTE2(result) - 48);
      v17 = v8 - 3;
      if (v17)
      {
        v18 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_41;
          v20 = 10 * (int)v14;
          if (v20 != (int)v20)
            goto LABEL_41;
          LODWORD(v14) = v20 + v19;
          if (__OFADD__((_DWORD)v20, v19))
            goto LABEL_41;
          v13 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_54;
        }
      }
    }
LABEL_53:
    v13 = 0;
    goto LABEL_54;
  }
  if (result != 45)
  {
    if (!v8)
      goto LABEL_41;
    LODWORD(v14) = (result - 48);
    if (v14 > 9)
      goto LABEL_41;
    if (v8 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_41;
      LODWORD(v14) = 10 * v14 + (BYTE1(result) - 48);
      v21 = v8 - 2;
      if (v21)
      {
        v22 = (unsigned __int8 *)v30 + 2;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_41;
          v24 = 10 * (int)v14;
          if (v24 != (int)v24)
            goto LABEL_41;
          LODWORD(v14) = v24 + v23;
          if (__OFADD__((_DWORD)v24, v23))
            goto LABEL_41;
          v13 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_54;
        }
      }
    }
    goto LABEL_53;
  }
  if (v8)
  {
    if (v8 != 1)
    {
      v16 = (BYTE1(result) - 48);
      if (v16 <= 9)
      {
        if (v8 == 2)
        {
          v13 = 0;
          LODWORD(v14) = -v16;
          goto LABEL_54;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          LODWORD(v14) = -10 * v16 - (BYTE2(result) - 48);
          v25 = v8 - 3;
          if (!v25)
            goto LABEL_53;
          v27 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            v28 = *v27 - 48;
            if (v28 > 9)
              break;
            v29 = 10 * (int)v14;
            if (v29 != (int)v29)
              break;
            LODWORD(v14) = v29 - v28;
            if (__OFSUB__((_DWORD)v29, v28))
              break;
            v13 = 0;
            ++v27;
            if (!--v25)
              goto LABEL_54;
          }
        }
      }
    }
LABEL_41:
    LODWORD(v14) = 0;
    v13 = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

BOOL sub_1B8862BA8()
{
  uint64_t v0;
  unsigned __int8 v3;
  unsigned __int8 v4;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))() & 1) != 0)
  {
    v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    v3 = 1;
    return static CalculateExpression.TokenType.== infix(_:_:)(&v4, &v3);
  }
  else
  {
    return 0;
  }
}

_QWORD *sub_1B8862C00@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 392))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1B8862C40(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 400))(&v4);
}

uint64_t sub_1B8862C7C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  Swift::Int v18;
  char v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  char v33;
  _QWORD v34[2];
  unsigned __int8 v35[8];

  LOBYTE(v34[0]) = *(_BYTE *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v35[0] = 1;
  result = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v34, v35);
  if ((result & 1) == 0)
    goto LABEL_78;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 280))();
  if (!result)
    goto LABEL_78;
  v4 = *(_QWORD *)(*(_QWORD *)result + 392);
  v5 = ((uint64_t (*)(void))v4)();
  if (v5 >> 62)
    v6 = sub_1B8912FD8();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = swift_bridgeObjectRelease();
  if (v6 != 1)
    goto LABEL_64;
  v8 = ((uint64_t (*)(uint64_t))v4)(v7);
  if (v8 >> 62)
  {
    if (!sub_1B8912FD8())
      goto LABEL_77;
  }
  else if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_77;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = MEMORY[0x1BCCB4394](0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_76;
    }
    v9 = *(_QWORD *)(v8 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v10 = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v34[0]) = v10;
  v35[0] = 1;
  sub_1B885DDA0();
  if ((sub_1B8912AA4() & 1) == 0)
  {
LABEL_64:
    result = swift_release();
LABEL_78:
    *a1 = 1;
    return result;
  }
  v8 = ((uint64_t (*)(void))v4)();
  if (v8 >> 62)
  {
LABEL_76:
    if (!sub_1B8912FD8())
      goto LABEL_77;
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_77;
LABEL_14:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v11 = MEMORY[0x1BCCB4394](0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_81;
    }
    v11 = *(_QWORD *)(v8 + 32);
    swift_retain();
  }
  v12 = swift_bridgeObjectRelease();
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 208))(v12);
  v8 = v13;
  result = swift_release();
  v14 = HIBYTE(v8) & 0xF;
  v15 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0)
    v16 = HIBYTE(v8) & 0xF;
  else
    v16 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v16)
  {
LABEL_77:
    swift_release();
    result = swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
LABEL_81:
    v18 = sub_1B8874504(v4, v8, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1B8874874);
    LOBYTE(v4) = v33;
    goto LABEL_60;
  }
  if ((v8 & 0x2000000000000000) != 0)
  {
    v34[0] = v4;
    v34[1] = v8 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v14)
        goto LABEL_84;
      if (v14 == 1 || (BYTE1(v4) - 48) > 9u)
        goto LABEL_47;
      v18 = (BYTE1(v4) - 48);
      if (v14 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u)
          goto LABEL_47;
        v18 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        v20 = v14 - 3;
        if (v20)
        {
          v21 = (unsigned __int8 *)v34 + 3;
          while (1)
          {
            v22 = *v21 - 48;
            if (v22 > 9)
              goto LABEL_47;
            v23 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
              goto LABEL_47;
            v18 = v23 + v22;
            if (__OFADD__(v23, v22))
              goto LABEL_47;
            LOBYTE(v4) = 0;
            ++v21;
            if (!--v20)
              goto LABEL_60;
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v14)
        {
          if (v14 != 1 && (BYTE1(v4) - 48) <= 9u)
          {
            if (v14 == 2)
            {
              LOBYTE(v4) = 0;
              v18 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_60;
            }
            if ((BYTE2(v4) - 48) <= 9u)
            {
              v18 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
              v28 = v14 - 3;
              if (!v28)
                goto LABEL_59;
              v30 = (unsigned __int8 *)v34 + 3;
              while (1)
              {
                v31 = *v30 - 48;
                if (v31 > 9)
                  break;
                v32 = 10 * v18;
                if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
                  break;
                v18 = v32 - v31;
                if (__OFSUB__(v32, v31))
                  break;
                LOBYTE(v4) = 0;
                ++v30;
                if (!--v28)
                  goto LABEL_60;
              }
            }
          }
LABEL_47:
          v18 = 0;
          LOBYTE(v4) = 1;
          goto LABEL_60;
        }
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
      if (!v14 || (v4 - 48) > 9u)
        goto LABEL_47;
      v18 = (v4 - 48);
      if (v14 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u)
          goto LABEL_47;
        v18 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        v24 = v14 - 2;
        if (v24)
        {
          v25 = (unsigned __int8 *)v34 + 2;
          while (1)
          {
            v26 = *v25 - 48;
            if (v26 > 9)
              goto LABEL_47;
            v27 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
              goto LABEL_47;
            v18 = v27 + v26;
            if (__OFADD__(v27, v26))
              goto LABEL_47;
            LOBYTE(v4) = 0;
            ++v25;
            if (!--v24)
              goto LABEL_60;
          }
        }
      }
    }
LABEL_59:
    LOBYTE(v4) = 0;
    goto LABEL_60;
  }
  if ((v4 & 0x1000000000000000) != 0)
    v17 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v17 = (unsigned __int8 *)sub_1B8912F84();
  v18 = (Swift::Int)sub_1B8874874(v17, v15, 10);
  LOBYTE(v4) = v19 & 1;
LABEL_60:
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    goto LABEL_64;
  CalculateExpression.Base.init(rawValue:)(v18);
  result = swift_release();
  v29 = v34[0];
  if (LOBYTE(v34[0]) == 3)
    v29 = 1;
  *a1 = v29;
  return result;
}

uint64_t sub_1B8863168(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  unsigned __int8 v20[14];
  char v21;
  unsigned __int8 v22;
  uint64_t v23;

  v2 = v1;
  v3 = *a1;
  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v1 + 392))(&v23);
  v4 = v23;
  v20[0] = v3;
  sub_1B8873E88();
  result = sub_1B8912AA4();
  if ((result & 1) != 0)
    return result;
  LOBYTE(v23) = *(_BYTE *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v20[0] = 1;
  result = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v23, v20);
  if ((result & 1) == 0)
    return result;
  (*(void (**)(void))(*(_QWORD *)v1 + 208))();
  LOBYTE(v23) = v4;
  result = CalculateExpression.Base.rawValue.getter();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  v6 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v7 = sub_1B8912AEC();
  swift_bridgeObjectRelease();
  v8 = strtoull((const char *)(v7 + 32), 0, v6);
  swift_release();
  v23 = v8;
  v20[0] = v3;
  CalculateExpression.Base.rawValue.getter();
  sub_1B8878988();
  v9 = sub_1B8912BE8();
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 216))(v9);
  v22 = v3;
  v21 = 1;
  sub_1B88789CC();
  sub_1B8912C78();
  sub_1B8912C78();
  if (v23 == *(_QWORD *)v20)
    return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v2 + 288))(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B8915DF0;
  LOBYTE(v23) = v3;
  v23 = CalculateExpression.Base.rawValue.getter();
  v11 = sub_1B8913038();
  v13 = v12;
  LOBYTE(v23) = 1;
  type metadata accessor for CalculateExpression.RichToken();
  v14 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v11, v13, (unsigned __int8 *)&v23, 0);
  *(_QWORD *)(v10 + 32) = v14;
  v23 = v10;
  sub_1B8912CA8();
  v15 = v23;
  type metadata accessor for CalculateExpression.RichExpression();
  v16 = swift_allocObject();
  sub_1B886600C(v15);
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 288))(v16);
  v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 280);
  v19 = v18(v17);
  if (v19)
  {
    LOBYTE(v23) = 2;
    (*(void (**)(uint64_t *))(*(_QWORD *)v19 + 280))(&v23);
    v19 = swift_release();
  }
  result = v18(v19);
  if (result)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)result + 304))(0);
    return swift_release();
  }
  return result;
}

uint64_t (*sub_1B8863468(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_1B8862C7C((char *)(a1 + 8));
  return sub_1B886349C;
}

uint64_t sub_1B886349C(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v4;
  char v5;

  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v5;
  }
  return sub_1B8863168(v2);
}

id sub_1B88634E0(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  void (*v7)(void);
  char v8;
  id v9;
  void *v10;
  BOOL v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  __objc2_class_ro **p_info;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  unsigned __int8 v33;
  Swift::String v34;
  Swift::Bool_optional v35;
  Swift::String v36;
  uint64_t *v37;
  void *v38;
  void *v39;
  id v40;
  id result;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  Swift::String v46;
  Swift::Bool_optional v47;
  Swift::String v48;
  void *v49;
  void *v50;
  char v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t significantDigits;
  id significantDigitsa;
  Swift::Bool significantDigits_8;
  uint64_t v65;
  uint64_t v66;
  NSNumberFormatter_optional v67;
  NSNumberFormatter_optional v68;
  Swift::Int_optional v69;
  Swift::Int_optional v70;

  v4 = v3;
  v6 = a3 & 1;
  type metadata accessor for CalculateExpression();
  v7 = *(void (**)(void))(*(_QWORD *)v3 + 208);
  v7();
  v8 = static CalculateExpression.isHighPrecisionLiteral(_:)();
  swift_bridgeObjectRelease();
  v9 = CalculateExpression.effectiveNumberFormatter.getter();
  v10 = v9;
  if ((v8 & 1) == 0
    || (objc_msgSend(v9, sel_usesSignificantDigits) ? (v11 = v6 == 0) : (v11 = 0), v12 = a2, !v11))
  {
    v12 = objc_msgSend(v10, sel_maximumSignificantDigits);
  }
  LODWORD(significantDigits) = v6;
  significantDigits_8 = (char)a2;
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText + 8);
  v16 = swift_bridgeObjectRetain();
  v17 = ((uint64_t (*)(uint64_t))v7)(v16);
  if (v14)
  {
    if (v15 == v17 && v14 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      p_info = &OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation.info;
    }
    else
    {
      v20 = sub_1B8913050();
      swift_bridgeObjectRelease();
      v21 = swift_bridgeObjectRelease();
      p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation + 32);
      if ((v20 & 1) == 0)
        goto LABEL_27;
    }
    v23 = *((_BYTE *)&p_info[428]->flags + v3);
    v21 = (uint64_t)objc_msgSend(v10, sel_usesGroupingSeparator, significantDigits);
    if ((v8 & 1) != 0)
    {
      if (((v23 ^ v21) & 1) == 0)
      {
        v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits);
        v21 = (uint64_t)objc_msgSend(v10, sel_maximumIntegerDigits);
        if (v24 == v21)
        {
          v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits);
          v21 = (uint64_t)objc_msgSend(v10, sel_minimumFractionDigits);
          if (v25 == v21)
          {
            v26 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits);
            v21 = (uint64_t)objc_msgSend(v10, sel_maximumFractionDigits);
            if (v26 == v21)
            {
              v27 = *(unsigned __int8 *)(v4
                                       + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits);
              v21 = (uint64_t)objc_msgSend(v10, sel_usesSignificantDigits);
              if (v27 == (_DWORD)v21
                && *(id *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) == v12)
              {
                v28 = *(unsigned __int8 *)(v4
                                         + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits);
                v21 = CalculateExpression.flexibleFractionDigits.getter();
                v11 = v28 == (v21 & 1);
                p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation
                                             + 32);
                if (v11)
                  goto LABEL_46;
              }
            }
          }
        }
      }
    }
    else if (((v23 ^ v21) & 1) == 0)
    {
      goto LABEL_46;
    }
  }
  else
  {
    v21 = swift_bridgeObjectRelease();
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation + 32);
  }
LABEL_27:
  *v13 = ((uint64_t (*)(uint64_t))v7)(v21);
  v13[1] = v29;
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v10, sel_maximumIntegerDigits);
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits) = v30;
  v31 = objc_msgSend(v10, sel_minimumFractionDigits);
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits) = v31;
  v32 = objc_msgSend(v10, sel_maximumFractionDigits);
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits) = v32;
  *((_BYTE *)&p_info[428]->flags + v4) = objc_msgSend(v10, sel_usesGroupingSeparator);
  v33 = objc_msgSend(v10, sel_usesSignificantDigits);
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits) = v33;
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) = v12;
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits) = CalculateExpression.flexibleFractionDigits.getter() & 1;
  v34._countAndFlagsBits = ((uint64_t (*)(void))v7)();
  v67.value.super.super.isa = 0;
  v67.is_nil = significantDigits_8;
  v69.value = significantDigits;
  v69.is_nil = 2;
  v36 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v34, 1, v67, v69, v35);
  swift_bridgeObjectRelease();
  v37 = (uint64_t *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
  *(Swift::String *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText) = v36;
  v21 = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v21 = (uint64_t)objc_msgSend(v10, sel_maximumFractionDigits);
    if (v21 >= 1)
    {
      if (v37[1])
      {
        swift_bridgeObjectRetain();
        v38 = (void *)sub_1B8912AB0();
        swift_bridgeObjectRelease();
        v39 = (void *)sub_1B8912AB0();
        v40 = objc_msgSend(v38, sel_rangeOfString_, v39);

        result = objc_msgSend(v10, sel_decimalSeparator);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v42 = result;
        v43 = objc_msgSend(v38, sel_rangeOfString_, result);

        v44 = sub_1B89127C8();
        v45 = v40;
        if (v40 == (id)v44)
          v45 = objc_msgSend(v38, sel_length);
        if (v43 == (id)sub_1B89127C8())
          goto LABEL_34;
        significantDigitsa = v45;
        v46._countAndFlagsBits = ((uint64_t (*)(void))v7)();
        v68.value.super.super.isa = 0;
        v68.is_nil = 30;
        v70.value = 0;
        v70.is_nil = v40 != (id)v44;
        v48 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v46, 1, v68, v70, v47);
        swift_bridgeObjectRelease();
        v49 = (void *)v37[1];
        if (v49)
        {
          v50 = v38;
          if (v48._countAndFlagsBits == *v37 && v49 == v48._object)
          {
LABEL_45:

            v21 = swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          v51 = sub_1B8913050();
          swift_bridgeObjectRelease();
          if ((v51 & 1) != 0)
          {
LABEL_34:

            goto LABEL_46;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v50 = v38;
        }
        if (v40 == (id)v44)
        {
          v57 = objc_msgSend(v50, sel_description);
          v58 = sub_1B8912AD4();
          v60 = v59;

          v65 = v58;
          v66 = v60;
          sub_1B8912B58();
        }
        else
        {
          v52 = objc_msgSend(v50, sel_substringToIndex_, significantDigitsa);
          v53 = sub_1B8912AD4();
          v55 = v54;

          v65 = v53;
          v66 = v55;
          sub_1B8912B58();
          v56 = objc_msgSend(v50, sel_substringFromIndex_, significantDigitsa);
          sub_1B8912AD4();

          sub_1B8912B58();
          swift_bridgeObjectRelease();
        }
        *v37 = v65;
        v37[1] = v66;
        goto LABEL_45;
      }
    }
  }
LABEL_46:
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText + 8))
  {
    v61 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
    swift_bridgeObjectRetain();
  }
  else
  {
    v61 = ((uint64_t (*)(uint64_t))v7)(v21);
  }

  return (id)v61;
}

void sub_1B8863B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(void);
  char v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  Swift::Bool_optional v16;
  NSNumberFormatter_optional v17;
  Swift::Int_optional v18;
  Swift::String v19;
  Swift::String v20;
  _QWORD v21[2];

  v1 = v0;
  v2 = sub_1B8912870();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CalculateExpression();
  v6 = *(void (**)(void))(*(_QWORD *)v0 + 208);
  v6();
  v7 = static CalculateExpression.isHighPrecisionLiteral(_:)();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = CalculateExpression.effectiveNumberFormatter.getter();
    objc_msgSend(v8, sel_copy);

    sub_1B8912E70();
    swift_unknownObjectRelease();
    sub_1B88796EC(0, &qword_1ED561B98);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = (void *)v21[1];
      sub_1B891284C();
      v10 = (void *)sub_1B8912858();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v9, sel_setLocale_, v10);

      objc_msgSend(v9, sel_setUsesGroupingSeparator_, 0);
      v11 = (id)CalculateExpression.engine.getter();
      if (v11 == (id)1)
      {
        objc_msgSend(v9, sel_setMinimumIntegerDigits_, 1000000);
        objc_msgSend(v9, sel_setMinimumFractionDigits_, 0);
        objc_msgSend(v9, sel_setMaximumFractionDigits_, 0);
        v11 = objc_msgSend(v9, sel_setMaximumSignificantDigits_, 1000000);
      }
      v12 = ((uint64_t (*)(id))v6)(v11);
      v14 = v13;
      v15 = v9;
      if (objc_msgSend(v15, sel_usesSignificantDigits) && CalculateExpression.engine.getter() != 1)
      {
        v18.value = 0;
        *(_QWORD *)&v17.is_nil = *(_QWORD *)(v1
                                           + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits);
      }
      else
      {
        v17.is_nil = 0;
        v18.value = 1;
      }
      v19._countAndFlagsBits = v12;
      v19._object = v14;
      v17.value.super.super.isa = (Class)v15;
      v18.is_nil = 2;
      v20 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v19, 1, v17, v18, v16);
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, void *))(*(_QWORD *)v1 + 216))(v20._countAndFlagsBits, v20._object);
    }
  }
}

uint64_t CalculateExpression.RichToken.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  v2 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.RichToken.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  v2 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8863EE0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  v4 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1B8863F28()
{
  return sub_1B8912828();
}

uint64_t sub_1B8863F44()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1B8878A10((uint64_t)&unk_1E6E9CCF8);
  result = swift_arrayDestroy();
  qword_1EF1B7C38 = v0;
  return result;
}

unint64_t sub_1B8863F8C()
{
  unint64_t result;

  result = sub_1B8861BC4((uint64_t)&unk_1E6E9CE88);
  qword_1EF1B7C40 = result;
  return result;
}

void sub_1B8863FB0()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_functionSet);
  v1 = sub_1B8912D74();

  qword_1EF1B7C48 = v1;
}

uint64_t *sub_1B8864010()
{
  if (qword_1EF1B6720 != -1)
    swift_once();
  return &qword_1EF1B7C48;
}

uint64_t sub_1B8864050()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1B8878A10((uint64_t)&unk_1E6E9D008);
  result = swift_arrayDestroy();
  qword_1EF1B7C50 = v0;
  return result;
}

uint64_t sub_1B8864098()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9D118);
  qword_1EF1B7C58 = result;
  return result;
}

uint64_t CalculateExpression.RichExpression.BaselineOffset.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if ((unint64_t)(result + 1) >= 4)
    v2 = 4;
  else
    v2 = 0x3010002u >> (8 * (result + 1));
  *a2 = v2;
  return result;
}

uint64_t CalculateExpression.RichExpression.BaselineOffset.rawValue.getter()
{
  char *v0;

  return qword_1B8916258[*v0];
}

BOOL sub_1B88640F8(char *a1, char *a2)
{
  return qword_1B8916258[*a1] == qword_1B8916258[*a2];
}

uint64_t sub_1B886411C()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B8864168()
{
  return sub_1B89130B0();
}

uint64_t sub_1B886419C()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B88641E4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return CalculateExpression.RichExpression.BaselineOffset.init(rawValue:)(*a1, a2);
}

void sub_1B88641EC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1B8916258[*v1];
}

BOOL static CalculateExpression.RichExpression.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1B8864210()
{
  return sub_1B89130B0();
}

uint64_t sub_1B8864238@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8864268(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 184);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1B8864298()
{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_1B88642D8()
{
  swift_beginAccess();
  swift_weakAssign();
  return swift_release();
}

void (*sub_1B8864328(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1B8864390;
}

void sub_1B8864390(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1B88643FC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B8864430(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 232))(*a1);
}

uint64_t sub_1B886445C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t result;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20[2];
  unsigned __int8 v21;
  unsigned __int8 v22;

  if (v0[24] != 1)
    goto LABEL_23;
  v1 = (uint64_t)v0;
  if ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))())
  {
    v2 = CalculateExpression.format.getter();
    swift_release();
    if (v2 == 2)
      goto LABEL_11;
  }
  v3 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v4 = v3();
  if (v4 >> 62)
    v5 = sub_1B8912FD8();
  else
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = swift_bridgeObjectRelease();
  v7 = ((uint64_t (*)(uint64_t))v3)(v6);
  if (v5 == 1)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x1BCCB4394](0, v7);
LABEL_10:
      swift_bridgeObjectRelease();
      v9 = *(_BYTE *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      v20[0] = v9;
      v19 = 4;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v20, &v19))
      {
LABEL_11:
        v10 = 1;
        return v10 & 1;
      }
      v1 = v3();
      if ((v1 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          swift_retain();
LABEL_28:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      MEMORY[0x1BCCB4394](0, v1);
      goto LABEL_28;
    }
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(_QWORD *)(v7 + 32);
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_33;
  }
  if (v7 >> 62)
  {
LABEL_33:
    v11 = sub_1B8912FD8();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  v12 = swift_bridgeObjectRelease();
  if (v11 != 2)
    goto LABEL_23;
  v13 = ((uint64_t (*)(uint64_t))v3)(v12);
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = MEMORY[0x1BCCB4394](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }
    v14 = *(_QWORD *)(v13 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v15 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v22 = v15;
  v21 = 4;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v22, &v21))
  {
LABEL_23:
    v10 = 0;
    return v10 & 1;
  }
  result = v3();
  v1 = result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_38:
    v17 = MEMORY[0x1BCCB4394](1, v1);
    goto LABEL_22;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v17 = *(_QWORD *)(result + 40);
    swift_retain();
LABEL_22:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v20[1] = v18;
LABEL_29:
    v10 = CalculateExpression.TokenType.isOperand.getter();
    return v10 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B886472C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

_BYTE *(*sub_1B8864734(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1B886445C() & 1;
  return sub_1B886476C;
}

_BYTE *sub_1B886476C(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 24) = result[8];
  return result;
}

uint64_t sub_1B886477C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 248))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B88647B0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 256))(*a1);
}

uint64_t sub_1B88647DC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_1B886480C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 25) = a1;
  return result;
}

uint64_t (*sub_1B8864848())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *sub_1B8864884@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 272))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1B88648C4(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 280))(&v4);
}

uint64_t sub_1B8864900@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 26);
  return result;
}

uint64_t sub_1B8864940(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 26) = v2;
  return result;
}

uint64_t (*sub_1B886497C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B88649B8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 296))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B88649EC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 304))(*a1);
}

uint64_t sub_1B8864A18()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t sub_1B8864A48(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 27) = a1;
  return result;
}

uint64_t (*sub_1B8864A84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B8864AC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8864AF0(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 352);
  v4 = *a1;
  return v3(v2);
}

void *sub_1B8864B30()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void sub_1B8864B74(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

uint64_t (*sub_1B8864BB8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1B8864BF8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
  if (result)
  {
    v2 = CalculateExpression.format.getter();
    swift_release();
    return v2;
  }
  return result;
}

uint64_t sub_1B8864C38@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  char v5;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 176))();
  if (result)
  {
    CalculateExpression.effectiveBase.getter(&v5);
    result = swift_release();
    v4 = v5;
  }
  else
  {
    v4 = 1;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1B8864C90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8864CC0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 400);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1B8864CF0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8864D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 28) = 1;
  return result;
}

uint64_t (*sub_1B8864D78(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B8864DB8;
}

uint64_t sub_1B8864DB8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(a1 + 24) + 28) = 1;
  return result;
}

uint64_t sub_1B8864DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (a1 < 0)
    return 0;
  v3 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 392);
  v4 = v3();
  v5 = v4 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = swift_bridgeObjectRelease();
  if (v5 <= a1)
    return 0;
  result = ((uint64_t (*)(uint64_t))v3)(v6);
  if ((result & 0xC000000000000001) != 0)
  {
    v8 = MEMORY[0x1BCCB4394](a1, result);
    goto LABEL_8;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v8 = *(_QWORD *)(result + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8864EC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v11;

  v1 = v0;
  v2 = (*(_QWORD *(**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 272))(&v11);
  if ((_BYTE)v11
    || (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v0 + 176))(v2)
    && (v5 = CalculateExpression.format.getter(), swift_release(), v5 == 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1B8915DF0;
    LOBYTE(v11) = 18;
    type metadata accessor for CalculateExpression.RichToken();
    v4 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0xE000000000000000, (unsigned __int8 *)&v11, 0);
    *(_QWORD *)(v3 + 32) = v4;
    v11 = v3;
    sub_1B8912CA8();
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 400))(v11);
  }
  else
  {
    type metadata accessor for CalculateExpression.RichToken();
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 384))(&v11);
    v6 = sub_1B886210C(48, 0xE100000000000000, (char *)&v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v7 + 32) = v6;
    v11 = v7;
    sub_1B8912CA8();
    v8 = v11;
    v9 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 400);
    swift_retain();
    v9(v8);
    swift_release();
  }
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 352))(0);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 232))(1);
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 256))(0);
}

uint64_t sub_1B886507C()
{
  uint64_t v0;

  sub_1B88650C4();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1B8865094()
{
  uint64_t v0;

  sub_1B88650C4();
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_1B88650AC()
{
  uint64_t v0;

  sub_1B88650C4();
  return *(unsigned __int8 *)(v0 + 50);
}

void sub_1B88650C4()
{
  _BYTE *v0;
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  BOOL v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;

  if (v0[28] != 1)
    return;
  v0[28] = 0;
  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v2 = v1();
  if (v2 >> 62)
LABEL_92:
    v3 = sub_1B8912FD8();
  else
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = swift_bridgeObjectRelease();
  if (v3 < 1)
  {
    v6 = 0;
    goto LABEL_10;
  }
  v5 = ((uint64_t (*)(uint64_t))v1)(v4);
  v6 = v5;
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_98;
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(v5 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_100:
  v13 = MEMORY[0x1BCCB4394](v6, v3);
LABEL_16:
  swift_bridgeObjectRelease();
  v14 = *(_BYTE *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v58 = v14;
  v57 = 10;
  v6 += static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
LABEL_17:
  v15 = v1();
  if (v15 >> 62)
    v16 = sub_1B8912FD8();
  else
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  v17 = swift_bridgeObjectRelease();
  if ((uint64_t)v6 >= v16)
    goto LABEL_48;
  v18 = ((uint64_t (*)(uint64_t))v1)(v17);
  v3 = v18;
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_102;
  if (v6 < *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(_QWORD *)(v18 + 8 * v6 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_104:
  v38 = MEMORY[0x1BCCB4394](v6, v16);
LABEL_57:
  swift_bridgeObjectRelease();
  v39 = *(_BYTE *)(v38 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v58 = v39;
  v57 = 8;
  v40 = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
  v6 += v40;
  LOBYTE(v3) = !v40 & v3;
  while (1)
  {
    v41 = v1();
    if (v41 >> 62)
      v42 = sub_1B8912FD8();
    else
      v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    v43 = swift_bridgeObjectRelease();
    if ((uint64_t)v6 >= v42)
      goto LABEL_67;
    v44 = ((uint64_t (*)(uint64_t))v1)(v43);
    v16 = v44;
    if ((v44 & 0xC000000000000001) != 0)
      goto LABEL_107;
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v45 = *(_QWORD *)(v44 + 8 * v6 + 32);
      swift_retain();
      goto LABEL_65;
    }
    __break(1u);
LABEL_110:
    v22 = sub_1B8912FD8();
LABEL_26:
    v23 = swift_bridgeObjectRelease();
    if ((uint64_t)v6 < v22)
      break;
LABEL_49:
    LOBYTE(v3) = 0;
LABEL_50:
    v34 = v1();
    if (v34 >> 62)
      v35 = sub_1B8912FD8();
    else
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    v36 = swift_bridgeObjectRelease();
    if ((uint64_t)v6 < v35)
    {
      v37 = ((uint64_t (*)(uint64_t))v1)(v36);
      v16 = v37;
      if ((v37 & 0xC000000000000001) == 0)
      {
        if ((v6 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v6 < *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v38 = *(_QWORD *)(v37 + 8 * v6 + 32);
          swift_retain();
          goto LABEL_57;
        }
        __break(1u);
LABEL_107:
        v45 = MEMORY[0x1BCCB4394](v6, v16);
LABEL_65:
        swift_bridgeObjectRelease();
        v46 = *(_BYTE *)(v45 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        v58 = v46;
        v57 = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
        {
          LOBYTE(v3) = 0;
          ++v6;
          v47 = 1;
        }
        else
        {
LABEL_67:
          v47 = 0;
        }
        if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))() & 1) != 0
          || ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))() & 1) != 0)
        {
          v48 = 0;
        }
        else
        {
          v49 = v1();
          if (v49 >> 62)
            v50 = sub_1B8912FD8();
          else
            v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          v48 = v6 == v50;
        }
        v0[48] = v48;
        v0[49] = v47;
        v0[50] = v3 & 1;
        return;
      }
      goto LABEL_104;
    }
  }
  v24 = 0;
  while (1)
  {
    v25 = ((uint64_t (*)(uint64_t))v1)(v23);
    if ((v25 & 0xC000000000000001) != 0)
    {
      v26 = MEMORY[0x1BCCB4394](v6, v25);
    }
    else
    {
      if (v6 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_89;
      v26 = *(_QWORD *)(v25 + 8 * v6 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v27 = *(_BYTE *)(v26 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v58 = v27;
    v57 = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    {
      v28 = __OFADD__(v24++, 1);
      if (v28)
        goto LABEL_90;
      goto LABEL_41;
    }
    v29 = v1();
    if ((v29 & 0xC000000000000001) != 0)
    {
      v30 = MEMORY[0x1BCCB4394](v6, v29);
    }
    else
    {
      if (v6 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_91;
      v30 = *(_QWORD *)(v29 + 8 * v6 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v31 = *(_BYTE *)(v30 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v58 = v31;
    v57 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    {
      v28 = __OFSUB__(v24--, 1);
      if (v28)
      {
        __break(1u);
LABEL_98:
        v7 = MEMORY[0x1BCCB4394](0, v6);
LABEL_8:
        swift_bridgeObjectRelease();
        v8 = *(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        v58 = v8;
        v57 = 4;
        v6 = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
LABEL_10:
        v9 = v1();
        if (v9 >> 62)
          v10 = sub_1B8912FD8();
        else
          v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        v11 = swift_bridgeObjectRelease();
        if ((uint64_t)v6 >= v10)
          goto LABEL_17;
        v12 = ((uint64_t (*)(uint64_t))v1)(v11);
        v3 = v12;
        if ((v12 & 0xC000000000000001) == 0)
        {
          if (v6 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v13 = *(_QWORD *)(v12 + 8 * v6 + 32);
            swift_retain();
            goto LABEL_16;
          }
          __break(1u);
LABEL_102:
          v19 = MEMORY[0x1BCCB4394](v6, v3);
LABEL_23:
          swift_bridgeObjectRelease();
          v20 = *(_BYTE *)(v19 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          v58 = v20;
          v57 = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
          {
            v21 = v1();
            if (!(v21 >> 62))
            {
              v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_26;
            }
            goto LABEL_110;
          }
LABEL_48:
          LOBYTE(v3) = 0;
          ++v6;
          goto LABEL_50;
        }
        goto LABEL_100;
      }
      if (v24 <= 0)
        break;
    }
LABEL_41:
    v32 = v1();
    if (v32 >> 62)
      v33 = sub_1B8912FD8();
    else
      v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    ++v6;
    v23 = swift_bridgeObjectRelease();
    if ((uint64_t)v6 >= v33)
      goto LABEL_49;
  }
  v51 = v1();
  if (v51 >> 62)
    v52 = sub_1B8912FD8();
  else
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  v53 = swift_bridgeObjectRelease();
  if (__OFSUB__(v52, 1))
  {
    __break(1u);
    goto LABEL_114;
  }
  if (v52 - 1 != v6)
  {
    LOBYTE(v3) = 0;
    goto LABEL_86;
  }
  v54 = ((uint64_t (*)(uint64_t))v1)(v53);
  v51 = v54;
  if ((v54 & 0xC000000000000001) != 0)
  {
LABEL_114:
    v55 = MEMORY[0x1BCCB4394](v6, v51);
LABEL_84:
    swift_bridgeObjectRelease();
    v56 = *(_BYTE *)(v55 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v58 = v56;
    v57 = 16;
    LOBYTE(v3) = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
LABEL_86:
    v28 = __OFADD__(v6++, 1);
    if (!v28)
      goto LABEL_50;
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v55 = *(_QWORD *)(v54 + 8 * v6 + 32);
    swift_retain();
    goto LABEL_84;
  }
  __break(1u);
}

unint64_t sub_1B8865814()
{
  uint64_t v0;
  unint64_t result;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
  v2 = result;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_12:
    v4 = 0;
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  result = sub_1B8912FD8();
  v3 = result;
  if (!result)
    goto LABEL_12;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCB4394](v5, v2);
      }
      else
      {
        v6 = *(_QWORD *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      ++v5;
      v7 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 328))();
      swift_release();
      if (v7 > v4)
        v4 = v7;
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8865900()
{
  return sub_1B88659D8();
}

uint64_t sub_1B8865908(char a1)
{
  uint64_t v1;
  char v2;

  if ((a1 & 1) != 0 || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 488))() & 1) == 0)
  {
    if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 520))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 456))() & 1) != 0)
    {
      v2 = 0;
    }
    else
    {
      v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 560))() ^ 1;
    }
  }
  else
  {
    v2 = 1;
  }
  return v2 & 1;
}

BOOL sub_1B8865970()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
  if (v1 >> 62)
    v2 = sub_1B8912FD8();
  else
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v2 == 0;
}

uint64_t sub_1B88659D0()
{
  return sub_1B88659D8();
}

uint64_t sub_1B88659D8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  char v7;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v2 = v1();
  if (v2 >> 62)
    v3 = sub_1B8912FD8();
  else
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = swift_bridgeObjectRelease();
  if (v3 != 1)
    goto LABEL_13;
  v5 = ((uint64_t (*)(uint64_t))v1)(v4);
  if (!(v5 >> 62))
  {
    result = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_6;
    goto LABEL_12;
  }
  result = sub_1B8912FD8();
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v7 = 0;
    return v7 & 1;
  }
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCB4394](0, v5);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B885DDA0();
    v7 = sub_1B8912AA4();
    return v7 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8865B14()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v2 = v1();
  if (v2 >> 62)
    v3 = sub_1B8912FD8();
  else
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = swift_bridgeObjectRelease();
  if (v3 != 1)
    return 0;
  v5 = ((uint64_t (*)(uint64_t))v1)(v4);
  if (v5 >> 62)
  {
    result = sub_1B8912FD8();
    if (result)
      goto LABEL_6;
    goto LABEL_12;
  }
  result = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v7 = MEMORY[0x1BCCB4394](0, v5);
    goto LABEL_9;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(v5 + 32);
    swift_retain();
LABEL_9:
    v8 = swift_bridgeObjectRelease();
    v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 352))(v8);
    swift_release();
    return v9 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8865C18()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  uint64_t (*v2)(_BYTE *, _QWORD);
  _QWORD *v3;
  _QWORD *v4;
  _BYTE v6[32];

  v1 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v0 + 408);
  swift_retain();
  v2 = (uint64_t (*)(_BYTE *, _QWORD))v1(v6);
  v4 = v3;
  MEMORY[0x1BCCB40AC]();
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8912CCC();
  sub_1B8912CFC();
  sub_1B8912CA8();
  return v2(v6, 0);
}

BOOL sub_1B8865CAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B8865CC0()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B8865D04()
{
  return sub_1B89130B0();
}

uint64_t sub_1B8865D2C()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B8865D6C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(unsigned __int8 *, _QWORD);
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  unint64_t v9;
  uint64_t (*v10)(unsigned __int8 *);
  uint64_t (*v11)(unsigned __int8 *, _QWORD);
  uint64_t result;
  uint64_t (*v13)(unsigned __int8 *, _QWORD);
  _QWORD *v14;
  _QWORD *v15;
  unsigned __int8 v16[32];

  v3 = v2;
  v4 = a1;
  if (a2 - 1 >= 2)
  {
    if (a2)
      goto LABEL_3;
LABEL_7:
    v8 = 0;
    goto LABEL_8;
  }
  a1 = (*(uint64_t (**)(BOOL))(*(_QWORD *)a1 + 552))(a2 == 1);
  if ((a1 & 1) == 0)
    goto LABEL_7;
LABEL_3:
  v16[0] = 15;
  type metadata accessor for CalculateExpression.RichToken();
  swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v16, 0);
  v5 = (uint64_t (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v2 + 408))(v16);
  v7 = v6;
  MEMORY[0x1BCCB40AC](v5);
  if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8912CCC();
  sub_1B8912CFC();
  sub_1B8912CA8();
  a1 = v5(v16, 0);
  v8 = 1;
LABEL_8:
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 392))(a1);
  v10 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v3 + 408);
  v11 = (uint64_t (*)(unsigned __int8 *, _QWORD))v10(v16);
  sub_1B885E32C(v9);
  result = v11(v16, 0);
  if (v8)
  {
    v16[0] = 16;
    type metadata accessor for CalculateExpression.RichToken();
    swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v16, 0);
    v13 = (uint64_t (*)(unsigned __int8 *, _QWORD))v10(v16);
    v15 = v14;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8912CCC();
    sub_1B8912CFC();
    sub_1B8912CA8();
    return v13(v16, 0);
  }
  return result;
}

uint64_t sub_1B8865F60()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v0 + 24) = 16777473;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 28) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v1;
  *(_WORD *)(v0 + 48) = 0;
  *(_BYTE *)(v0 + 50) = 0;
  return v0;
}

uint64_t sub_1B8865FC4()
{
  uint64_t v0;
  uint64_t v1;

  swift_weakInit();
  *(_DWORD *)(v0 + 24) = 16777473;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 28) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v1;
  *(_WORD *)(v0 + 48) = 0;
  *(_BYTE *)(v0 + 50) = 0;
  return v0;
}

uint64_t sub_1B886600C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_weakInit();
  *(_BYTE *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 25) = 16842753;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = v3;
  *(_WORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 50) = 0;
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 232))(0);
  swift_beginAccess();
  *(_BYTE *)(v1 + 25) = 0;
  return v1;
}

uint64_t sub_1B88660C8(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1B8866104(a1);
  return v2;
}

uint64_t sub_1B8866104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __CFString *v37;
  unint64_t v38;
  char v39;
  int v40;
  __CFString *v41;
  unint64_t v42;
  char v43;
  id v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(__int128 *, _QWORD);
  uint64_t v56;
  uint64_t *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t (*v93)(void);
  unint64_t *v94;
  _BYTE *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  id v99;
  __int128 v100;
  __int128 v101;
  char v102;
  uint64_t v103;

  v4 = swift_weakInit();
  v95 = (_BYTE *)v1;
  *(_QWORD *)(v1 + 40) = MEMORY[0x1E0DEE9D8];
  v5 = v1 + 40;
  *(_DWORD *)(v5 - 16) = 16777473;
  *(_BYTE *)(v5 - 12) = 1;
  *(_QWORD *)(v5 - 8) = 0;
  *(_WORD *)(v5 + 8) = 0;
  v94 = (unint64_t *)v5;
  *(_BYTE *)(v5 + 10) = 0;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 176))(v4);
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
  v93 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 256);
  v7 = ((uint64_t (*)(uint64_t))v93)(v6);
  if (v7 >> 62)
  {
    v8 = sub_1B8912FD8();
    if (!v8)
      goto LABEL_12;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_12;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_147;
  }
  v2 = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x1BCCB4394](v2, v7);
    }
    else
    {
      v10 = *(_QWORD *)(v7 + 8 * v2 + 32);
      swift_retain();
    }
    v11 = *(_QWORD *)((*(uint64_t (**)(void))(*(_QWORD *)v10 + 208))() + 16);
    swift_bridgeObjectRelease();
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 216))(v9);
    ++v2;
    swift_release();
  }
  while (v8 != v2);
LABEL_12:
  swift_bridgeObjectRelease();
  v103 = 0;
  v102 = 0;
  swift_beginAccess();
  *v94 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 280);
  v13 = v12(0);
  if (v13
    && (v14 = *(_BYTE *)(v13 + 48),
        swift_release(),
        LOBYTE(v100) = v14,
        LOBYTE(v99) = 17,
        sub_1B885DDA0(),
        (sub_1B8912AA4() & 1) != 0))
  {
    v15 = 1;
    v103 = 1;
  }
  else
  {
    v15 = 0;
  }
  v16 = v12(v15);
  if (!v16)
    goto LABEL_29;
  v17 = (_BYTE *)v16;
  v18 = *(_BYTE *)(v16 + 48);
  LOBYTE(v100) = v18;
  LOBYTE(v99) = 14;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v99)
    && (LOBYTE(v100) = v18,
        LOBYTE(v99) = 0,
        !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v99))
    || (*(_QWORD *)&v100 = v15, sub_1B8878CF0(a1, (uint64_t *)&v100), v2 = v100, (v19 = v12(v100)) == 0))
  {
LABEL_28:
    swift_release();
    goto LABEL_29;
  }
  v15 = v19;
  LOBYTE(v99) = *(_BYTE *)(v19 + 48);
  LOBYTE(v98) = 35;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v99, (unsigned __int8 *)&v98)
    || (v99 = (id)v2, sub_1B8878CF0(a1, (uint64_t *)&v99), v20 = v12((uint64_t)v99), swift_release(), !v20))
  {
    swift_release();
    goto LABEL_28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = xmmword_1B8915E20;
  v21 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 160);
  v22 = swift_retain();
  v23 = v21(v22);
  if (!v24)
    v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 136))(v23);
  v25 = v23;
  v26 = v24;
  LOBYTE(v98) = v17[48];
  type metadata accessor for CalculateExpression.RichToken();
  v27 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v25, v26, (unsigned __int8 *)&v98, 0);
  swift_release();
  *(_QWORD *)(v96 + 32) = v27;
  v28 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 160);
  v29 = swift_retain();
  v30 = v28(v29);
  if (!v31)
    v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 136))(v30);
  v32 = v30;
  v33 = v31;
  LOBYTE(v98) = *(_BYTE *)(v15 + 48);
  v2 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v32, v33, (unsigned __int8 *)&v98, 0);
  swift_release();
  *(_QWORD *)(v96 + 40) = v2;
  v98 = v96;
  sub_1B8912CA8();
  *v94 = v98;
  swift_bridgeObjectRelease();
  sub_1B8878CF0(a1, (uint64_t *)&v100);
  swift_release();
  swift_release();
  v103 = v100;
LABEL_29:
  v34 = sub_1B886D250(a1, (unint64_t *)&v103, (uint64_t **)&v102);
  (*(void (**)(uint64_t))(*(_QWORD *)v34 + 392))(v34);
  swift_release();
  swift_beginAccess();
  v35 = swift_bridgeObjectRetain();
  sub_1B885E32C(v35);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (swift_weakLoadStrong())
  {
    v36 = sub_1B88992EC();
    swift_release();
  }
  else
  {
    v36 = sub_1B8861E00(MEMORY[0x1E0DEE9D8]);
  }
  if (!*(_QWORD *)(v36 + 16))
  {
    v100 = 0u;
    v101 = 0u;
LABEL_41:
    sub_1B8879F94((uint64_t)&v100, &qword_1ED561C40);
    goto LABEL_42;
  }
  v37 = CFSTR("CalculateKeyAllowEqualSign");
  v38 = sub_1B8873FBC((uint64_t)v37);
  if ((v39 & 1) != 0)
  {
    sub_1B8879724(*(_QWORD *)(v36 + 56) + 32 * v38, (uint64_t)&v100);
  }
  else
  {
    v100 = 0u;
    v101 = 0u;
  }

  if (!*((_QWORD *)&v101 + 1))
    goto LABEL_41;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v40 = v99;
    swift_bridgeObjectRelease();
    if (v40 != 1)
      goto LABEL_56;
    goto LABEL_53;
  }
LABEL_42:
  if (*(_QWORD *)(v36 + 16))
  {
    v41 = CFSTR("CalculateKeyAllowEqualSign");
    v42 = sub_1B8873FBC((uint64_t)v41);
    if ((v43 & 1) != 0)
    {
      sub_1B8879724(*(_QWORD *)(v36 + 56) + 32 * v42, (uint64_t)&v100);
    }
    else
    {
      v100 = 0u;
      v101 = 0u;
    }

  }
  else
  {
    v100 = 0u;
    v101 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v101 + 1))
  {
    sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v44 = v99;
      v45 = objc_msgSend(v99, sel_BOOLValue);

      if ((v45 & 1) == 0)
        goto LABEL_56;
    }
  }
  else
  {
    sub_1B8879F94((uint64_t)&v100, &qword_1ED561C40);
  }
LABEL_53:
  v46 = v103;
  v47 = v12(v103);
  if (!v47)
    goto LABEL_57;
  v48 = *(_BYTE *)(v47 + 48);
  swift_release();
  LOBYTE(v100) = v48;
  LOBYTE(v99) = 35;
  sub_1B885DDA0();
  if ((sub_1B8912AA4() & 1) != 0)
    sub_1B8878CF0(a1, &v103);
LABEL_56:
  v46 = v103;
LABEL_57:
  v49 = v93();
  if (v49 >> 62)
LABEL_142:
    v50 = sub_1B8912FD8();
  else
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (v46 >= v50)
    goto LABEL_77;
  v102 = 1;
  v51 = v12(v46);
  if (!v51)
  {
LABEL_68:
    v54 = ((uint64_t (*)(uint64_t))v93)(v51);
    v55 = (void (*)(__int128 *, _QWORD))v54;
    if ((v54 & 0xC000000000000001) == 0)
    {
      if (v46 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v46 < *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v56 = *(_QWORD *)(v54 + 8 * v46 + 32);
        swift_retain();
        goto LABEL_72;
      }
      __break(1u);
      goto LABEL_151;
    }
    v56 = MEMORY[0x1BCCB4394](v46, v54);
LABEL_72:
    swift_bridgeObjectRelease();
    v46 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    v55 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v56 + 224))(&v100);
    v15 = (uint64_t)v57;
    v2 = *v57;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v15 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_73:
      v60 = *(_QWORD *)(v2 + 16);
      v59 = *(_QWORD *)(v2 + 24);
      if (v60 >= v59 >> 1)
      {
        v2 = (uint64_t)sub_1B8876D2C((_QWORD *)(v59 > 1), v60 + 1, 1, (_QWORD *)v2);
        *(_QWORD *)v15 = v2;
      }
      *(_QWORD *)(v2 + 16) = v60 + 1;
      *(_QWORD *)(v2 + 8 * v60 + 32) = v46;
      v55(&v100, 0);
      goto LABEL_76;
    }
LABEL_151:
    v2 = (uint64_t)sub_1B8876D2C(0, *(_QWORD *)(v2 + 16) + 1, 1, (_QWORD *)v2);
    *(_QWORD *)v15 = v2;
    goto LABEL_73;
  }
  LOBYTE(v100) = *(_BYTE *)(v51 + 48);
  if ((CalculateExpression.TokenType.isClose.getter() & 1) == 0)
  {
    v51 = swift_release();
    goto LABEL_68;
  }
  result = v93();
  if ((result & 0xC000000000000001) != 0)
  {
    v53 = MEMORY[0x1BCCB4394](v46, result);
    goto LABEL_66;
  }
  if (v46 < 0)
  {
    __break(1u);
    goto LABEL_154;
  }
  if ((unint64_t)v46 >= *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_154:
    __break(1u);
    return result;
  }
  v53 = *(_QWORD *)(result + 8 * v46 + 32);
  swift_retain();
LABEL_66:
  swift_bridgeObjectRelease();
  sub_1B8878B14(v53);
  swift_release();
LABEL_76:
  swift_release();
LABEL_77:
  v61 = *v94;
  v99 = (id)v61;
  if (v61 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v62 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v62 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v62 < 1)
    goto LABEL_123;
  v97 = 0;
  v46 = 0;
  do
  {
    while (1)
    {
      v12 = (uint64_t (*)(uint64_t))(v61 & 0xC000000000000001);
      if ((v61 & 0xC000000000000001) != 0)
      {
        v63 = MEMORY[0x1BCCB4394](v46, v61);
      }
      else
      {
        if (v46 < 0)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if ((unint64_t)v46 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_133;
        v63 = swift_retain();
      }
      v64 = *(_BYTE *)(v63 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v100) = v64;
      LOBYTE(v98) = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v98))
      {
        if (v12)
        {
          v2 = MEMORY[0x1BCCB4394](v46, v61);
        }
        else
        {
          if (v46 < 0)
            goto LABEL_140;
          if ((unint64_t)v46 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_141;
          v2 = *(_QWORD *)(v61 + 8 * v46 + 32);
          swift_retain();
        }
        v65 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 208))();
        v67 = v66;
        swift_release();
        v68 = HIBYTE(v67) & 0xF;
        if ((v67 & 0x2000000000000000) == 0)
          v68 = v65 & 0xFFFFFFFFFFFFLL;
        if (!v68)
        {
          swift_bridgeObjectRelease();
          goto LABEL_111;
        }
        v69 = sub_1B8912BF4();
        v2 = v70;
        swift_bridgeObjectRelease();
        if (v69 == 45 && v2 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v72 = sub_1B8913050();
          swift_bridgeObjectRelease();
          if ((v72 & 1) == 0)
            goto LABEL_111;
        }
        LOBYTE(v100) = 4;
        type metadata accessor for CalculateExpression.RichToken();
        v2 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v100, 0);
        if (v61 >> 62)
        {
          swift_bridgeObjectRetain();
          v88 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (v88 < v46)
            goto LABEL_135;
        }
        else if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10) < v46)
        {
          goto LABEL_135;
        }
        if (v46 < 0)
          goto LABEL_136;
        sub_1B88771C0(v46, v46, v2, 0, (void (*)(_QWORD))type metadata accessor for CalculateExpression.RichToken);
        v73 = __OFADD__(v46++, 1);
        if (v73)
          goto LABEL_137;
        v61 = (unint64_t)v99;
        if (((unint64_t)v99 & 0xC000000000000001) != 0)
        {
          v2 = MEMORY[0x1BCCB4394](v46, v99);
          v75 = MEMORY[0x1BCCB4394](v46, v61);
          v74 = v75;
        }
        else
        {
          if (v46 < 0)
            goto LABEL_138;
          if ((unint64_t)v46 >= *(_QWORD *)(((unint64_t)v99 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_139;
          v74 = *((_QWORD *)v99 + v46 + 4);
          v75 = swift_retain_n();
          v2 = v74;
        }
        v76 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v74 + 208))(v75);
        v78 = v77;
        swift_release();
        v97 = 1;
        v79 = sub_1B8878E44(1uLL, v76, v78);
        v81 = v80;
        v83 = v82;
        v12 = v84;
        swift_bridgeObjectRelease();
        v85 = MEMORY[0x1BCCB3F20](v79, v81, v83, v12);
        v15 = v86;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 216))(v85, v15);
        swift_release();
      }
LABEL_111:
      v73 = __OFADD__(v46++, 1);
      if (v73)
        goto LABEL_134;
      if (v61 >> 62)
        break;
      if (v46 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_121;
    }
    swift_bridgeObjectRetain();
    v87 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  while (v46 < v87);
LABEL_121:
  if ((v97 & 1) != 0)
  {
    *v94 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_123:
  sub_1B8872348();
  sub_1B88725BC();
  v89 = sub_1B8871A04();
  if ((v102 & 1) != 0)
    goto LABEL_127;
  v90 = ((uint64_t (*)(uint64_t))v93)(v89);
  if (!(v90 >> 62))
  {
    v91 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_126;
  }
LABEL_147:
  v91 = sub_1B8912FD8();
LABEL_126:
  v89 = swift_bridgeObjectRelease();
  if (!v91)
LABEL_127:
    (*(void (**)(uint64_t))(*(_QWORD *)v95 + 424))(v89);
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1B8912FD8())
    v92 = sub_1B88794C4(MEMORY[0x1E0DEE9D8]);
  else
    v92 = MEMORY[0x1E0DEE9E8];
  sub_1B8871014(v92, 0, 1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)v95 + 232))(1);
  swift_release();
  swift_beginAccess();
  v95[25] = 0;
  swift_bridgeObjectRelease();
  return (uint64_t)v95;
}

uint64_t sub_1B8866EF0(uint64_t a1, unint64_t *a2, uint64_t **a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  void (*v33)(uint64_t *, _QWORD);
  uint64_t *v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void (*v73)(uint64_t *, _QWORD);
  uint64_t *v74;
  uint64_t *v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void (*v99)(uint64_t *, _QWORD);
  uint64_t *v100;
  uint64_t *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t);
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  void (*v150)(_QWORD);
  uint64_t v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  id v174;
  void (*v175)(uint64_t *, _QWORD);
  uint64_t *v176;
  uint64_t *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t (*v183)(uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t result;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  id v223;
  void *v224;
  id v225;
  id v226;
  void (*v227)(uint64_t *, _QWORD);
  uint64_t *v228;
  uint64_t *v229;
  _QWORD *v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(_QWORD);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  BOOL v271;
  unint64_t v272;
  uint64_t v273;
  id v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  void (*v287)(uint64_t);
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  id v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t (*v307)(uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t (*v320)(uint64_t);
  uint64_t v321;
  uint64_t (*v322)(uint64_t);
  uint64_t v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  uint64_t v332;
  id v333;
  void *v334;
  id v335;
  void (*v336)(uint64_t *, _QWORD);
  uint64_t *v337;
  uint64_t *v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(uint64_t *, _QWORD);
  uint64_t *v345;
  uint64_t *v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  char v351;
  uint64_t v352;
  uint64_t (*v353)(uint64_t);
  uint64_t v354;
  uint64_t (*v355)(uint64_t);
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  char v365;
  BOOL v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;
  unint64_t v371;
  uint64_t v372;
  uint64_t v373;
  unint64_t v374;
  uint64_t v375;
  uint64_t v376;
  id v377;
  void *v378;
  id v379;
  unint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  id v388;
  void *v389;
  void (*v390)(uint64_t *, _QWORD);
  uint64_t *v391;
  uint64_t *v392;
  _QWORD *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t inited;
  unint64_t v418;
  uint64_t v419;
  unint64_t v420;
  unint64_t v421;
  unint64_t v422;
  unint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t (*v428)(void);
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t i;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  unint64_t v440;
  uint64_t (*v441)(uint64_t);
  int64_t v442;
  int64_t v443;
  unint64_t v444;
  unint64_t v445;
  unint64_t v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t (*v449)(uint64_t);
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  uint64_t v455;
  uint64_t v456;
  void *v457;
  void *v458;
  unint64_t v459;
  Swift::String v460;
  CalculateResult_optional *v461;
  void *v462;
  void *v463;
  id v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  unint64_t v471;
  char v472;
  unint64_t v473;
  int v474;
  char v475;
  uint64_t v476;
  uint64_t v477;
  id v478;
  uint64_t v479;
  uint64_t (*v480)(uint64_t);
  unint64_t v481;
  uint64_t (*v482)(void);
  uint64_t (*v483)(void);
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  unint64_t v489;
  uint64_t v490;
  unint64_t v491;

  v8 = v4;
  v10 = (uint64_t *)a2;
  v11 = a1;
  v12 = *a2;
  v483 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 256);
  v13 = v483();
  if ((v13 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(_QWORD *)(v13 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_157;
  }
  v7 = MEMORY[0x1BCCB4394](v12, v13);
LABEL_5:
  swift_bridgeObjectRelease();
  v14 = sub_1B8878CF0(v11, v10);
  if (*(_BYTE *)a4 == 1)
  {
    v5 = *v10;
    v15 = ((uint64_t (*)(uint64_t))v483)(v14);
    if (v15 >> 62)
      v16 = sub_1B8912FD8();
    else
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v17 = swift_bridgeObjectRelease();
    if ((uint64_t)v5 >= v16)
      goto LABEL_14;
    v18 = ((uint64_t (*)(uint64_t))v483)(v17);
    v19 = v18;
    if ((v18 & 0xC000000000000001) == 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v5 < *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v20 = *(_QWORD *)(v18 + 8 * v5 + 32);
        swift_retain();
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_383;
    }
    v20 = MEMORY[0x1BCCB4394](v5, v18);
LABEL_13:
    swift_bridgeObjectRelease();
    v21 = *(_BYTE *)(v20 + 48);
    swift_release();
    LOBYTE(v486) = v21;
    LOBYTE(v490) = 22;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
    {
LABEL_14:
      v14 = sub_1B8878CF0(v11, v10);
      *(_BYTE *)a4 = 0;
      goto LABEL_20;
    }
    *(_BYTE *)a3 = 1;
    v22 = v11;
    v23 = v483();
    if ((v23 & 0xC000000000000001) == 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v5 < v24)
        {
          v25 = *(_QWORD *)(v23 + 8 * v5 + 32);
          swift_retain();
LABEL_19:
          swift_bridgeObjectRelease();
          sub_1B8878B14(v25);
          v14 = swift_release();
          goto LABEL_20;
        }
      }
      __break(1u);
      goto LABEL_426;
    }
    v25 = MEMORY[0x1BCCB4394](v5, v23);
    goto LABEL_19;
  }
LABEL_20:
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 176))(v14)
    && (v26 = CalculateExpression.format.getter(), swift_release(), v26 == 1))
  {
    LOBYTE(v486) = *(_BYTE *)(v7 + 48);
    LOBYTE(v490) = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v486, (unsigned __int8 *)&v490))
    {
      if (qword_1EF1B6728 != -1)
        swift_once();
      v27 = qword_1EF1B7C50;
      (*(void (**)(void))(*(_QWORD *)v7 + 136))();
      v28 = sub_1B8912AE0();
      v30 = v29;
      swift_bridgeObjectRelease();
      LOBYTE(v27) = sub_1B886B058(v28, v30, v27);
      swift_bridgeObjectRelease();
      v31 = 1;
      if ((v27 & 1) != 0)
      {
        *(_BYTE *)a3 = 1;
        v32 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1008, 0);
        v33 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v7 + 224))(&v486);
        v35 = v34;
        sub_1B8876CA4();
        v36 = *(_QWORD **)(*v35 + 16);
        sub_1B8876CEC(v36);
        v37 = *v35;
        *(_QWORD *)(v37 + 16) = (char *)v36 + 1;
        *(_QWORD *)(v37 + 8 * (_QWORD)v36 + 32) = v32;
        v33(&v486, 0);
      }
    }
    else
    {
      v31 = 1;
    }
  }
  else
  {
    v31 = 0;
  }
  v480 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 280);
  v38 = v480(*v10);
  v472 = v31;
  if (v38
    && (v39 = *(_BYTE *)(v38 + 48),
        swift_release(),
        LOBYTE(v486) = v39,
        LOBYTE(v490) = 7,
        sub_1B885DDA0(),
        (sub_1B8912AA4() & 1) != 0))
  {
    sub_1B8878CF0(v11, v10);
    v40 = sub_1B886C4C4(v11, v10, a3, 1);
  }
  else
  {
    v40 = 0;
  }
  v41 = *(uint64_t (**)(void))(*(_QWORD *)v7 + 136);
  v486 = v41();
  v487 = v42;
  v490 = 6778732;
  v491 = 0xE300000000000000;
  v5 = sub_1B8878944();
  v43 = sub_1B8912E58();
  v44 = swift_bridgeObjectRelease();
  v481 = v40;
  v482 = v41;
  v473 = v12;
  if (v43)
  {
    v486 = ((uint64_t (*)(uint64_t))v41)(v44);
    v487 = v45;
    v490 = 1885957222;
    v491 = 0xE400000000000000;
    v46 = sub_1B8912E58();
    v44 = swift_bridgeObjectRelease();
    if (!(v46 | v40))
      goto LABEL_34;
  }
  else if (!v40)
  {
LABEL_34:
    v489 = *v10;
    v12 = v489;
    a4 = (uint64_t (*)(uint64_t))v483;
    v47 = ((uint64_t (*)(uint64_t))v483)(v44);
    v48 = sub_1B8873E2C(v47);
    v49 = swift_bridgeObjectRelease();
    if ((uint64_t)v12 >= v48)
    {
      LODWORD(v479) = 0;
      v6 = (uint64_t)v480;
      goto LABEL_73;
    }
    v50 = ((uint64_t (*)(uint64_t))v483)(v49);
    v19 = v50;
    v6 = (uint64_t)v480;
    if ((v50 & 0xC000000000000001) == 0)
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_385;
      }
      if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
      {
        __break(1u);
        goto LABEL_387;
      }
      v51 = *(_QWORD *)(v50 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_39;
    }
LABEL_383:
    v51 = MEMORY[0x1BCCB4394](v12, v19);
LABEL_39:
    swift_bridgeObjectRelease();
    v52 = *(_BYTE *)(v51 + 48);
    swift_release();
    LOBYTE(v486) = v52;
    LOBYTE(v490) = 4;
    v49 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v486, (unsigned __int8 *)&v490);
    if ((v49 & 1) != 0)
    {
      v49 = sub_1B8878CF0(v11, (uint64_t *)&v489);
      LODWORD(v479) = 1;
      v12 = v489;
    }
    else
    {
      LODWORD(v479) = 0;
    }
LABEL_73:
    v78 = a4(v49);
    v79 = sub_1B8873E2C(v78);
    v80 = swift_bridgeObjectRelease();
    if ((uint64_t)v12 >= v79)
      goto LABEL_93;
    v81 = a4(v80);
    v19 = v81;
    if ((v81 & 0xC000000000000001) == 0)
    {
      if ((v12 & 0x8000000000000000) == 0)
      {
        if (*(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10) > v12)
        {
          v82 = *(_QWORD *)(v81 + 8 * v12 + 32);
          swift_retain();
          goto LABEL_78;
        }
LABEL_388:
        __break(1u);
        goto LABEL_389;
      }
LABEL_387:
      __break(1u);
      goto LABEL_388;
    }
LABEL_385:
    v82 = MEMORY[0x1BCCB4394](v12, v19);
LABEL_78:
    swift_bridgeObjectRelease();
    v83 = *(_BYTE *)(v82 + 48);
    swift_release();
    LOBYTE(v486) = v83;
    LOBYTE(v490) = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v486, (unsigned __int8 *)&v490))
    {
      v488 = v12;
      v84 = sub_1B8878CF0(v11, &v488);
      v85 = v488;
      v86 = a4(v84);
      v6 = (uint64_t)a4;
      v87 = sub_1B8873E2C(v86);
      v88 = swift_bridgeObjectRelease();
      if (v85 >= v87)
        goto LABEL_94;
      v89 = ((uint64_t (*)(uint64_t))v6)(v88);
      v90 = v89;
      v91 = v6;
      if ((v89 & 0xC000000000000001) != 0)
        goto LABEL_473;
      if (v85 < 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)v85)
      {
        v92 = *(_QWORD *)(v89 + 8 * v85 + 32);
        swift_retain();
        goto LABEL_84;
      }
      __break(1u);
      goto LABEL_476;
    }
LABEL_93:
    v477 = 0;
    a4 = 0;
    goto LABEL_134;
  }
  if (((uint64_t (*)(uint64_t))v41)(v44) == 1735355484 && v53 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_54:
    v490 = *v10;
    v12 = v490;
    v6 = (uint64_t)v480;
    v60 = v480(v490);
    if (v60)
    {
      v61 = (*(uint64_t (**)(void))(*(_QWORD *)v60 + 136))();
      v63 = v62;
      swift_release();
      if (v61 == 95 && v63 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_61:
        v471 = v7;
        sub_1B8878CF0(v11, &v490);
        v7 = v490;
        v65 = v480(v490);
        if (v65)
        {
          v66 = *(_BYTE *)(v65 + 48);
          swift_release();
          LOBYTE(v486) = v66;
          LOBYTE(v489) = 21;
          sub_1B885DDA0();
          if ((sub_1B8912AA4() & 1) != 0)
          {
            sub_1B8878CF0(v11, &v490);
            v479 = sub_1B886D250(v11, &v490, a3);
            v67 = v490;
            v68 = v480(v490);
            if (!v68
              || (v69 = *(_BYTE *)(v68 + 48),
                  swift_release(),
                  LOBYTE(v486) = v69,
                  LOBYTE(v489) = 22,
                  (sub_1B8912AA4() & 1) == 0))
            {
              *(_BYTE *)a3 = 1;
              v110 = v483();
              v85 = v110;
              if ((v110 & 0xC000000000000001) == 0)
              {
                if ((v7 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFF8) + 0x10) > v7)
                {
                  v111 = *(_QWORD *)(v110 + 8 * v7 + 32);
                  swift_retain();
LABEL_106:
                  swift_bridgeObjectRelease();
                  sub_1B8878B14(v111);
                  swift_release();
                  goto LABEL_107;
                }
                __break(1u);
                goto LABEL_479;
              }
LABEL_476:
              v111 = MEMORY[0x1BCCB4394](v7, v85);
              goto LABEL_106;
            }
            *v10 = v67;
            sub_1B8878CF0(v11, v10);
LABEL_107:
            v7 = v471;
            v476 = 0;
            goto LABEL_115;
          }
        }
        v70 = v483();
        if ((v70 & 0xC000000000000001) == 0)
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10) > v12)
          {
            v71 = *(_QWORD *)(v70 + 8 * v12 + 32);
            swift_retain();
LABEL_71:
            swift_bridgeObjectRelease();
            v72 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
            v73 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v71 + 224))(&v486);
            v75 = v74;
            sub_1B8876CA4();
            v76 = *(_QWORD **)(*v75 + 16);
            sub_1B8876CEC(v76);
            v77 = *v75;
            *(_QWORD *)(v77 + 16) = (char *)v76 + 1;
            *(_QWORD *)(v77 + 8 * (_QWORD)v76 + 32) = v72;
            v73(&v486, 0);
            swift_release();
            v479 = 0;
            goto LABEL_107;
          }
          __break(1u);
          goto LABEL_411;
        }
        v71 = MEMORY[0x1BCCB4394](v12, v70);
        goto LABEL_71;
      }
      v64 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v64 & 1) != 0)
        goto LABEL_61;
    }
    v479 = 0;
    v476 = 0;
LABEL_115:
    v477 = 0;
    a4 = 0;
    goto LABEL_135;
  }
  v55 = sub_1B8913050();
  v56 = swift_bridgeObjectRelease();
  if ((v55 & 1) != 0)
    goto LABEL_54;
  if (((uint64_t (*)(uint64_t))v41)(v56) == 0x747271735CLL && v57 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v6 = (uint64_t)v480;
  }
  else
  {
    v59 = sub_1B8913050();
    swift_bridgeObjectRelease();
    v6 = (uint64_t)v480;
    if ((v59 & 1) == 0)
    {
      v476 = 0;
LABEL_114:
      v479 = 0;
      goto LABEL_115;
    }
  }
  v12 = v7;
  v104 = *v10;
  v486 = v104;
  v105 = ((uint64_t (*)(unint64_t))v6)(v104);
  if (!v105
    || (v106 = *(_BYTE *)(v105 + 48),
        swift_release(),
        LOBYTE(v490) = v106,
        LOBYTE(v489) = 23,
        sub_1B885DDA0(),
        (sub_1B8912AA4() & 1) == 0))
  {
    v476 = 0;
    goto LABEL_113;
  }
  sub_1B8878CF0(v11, &v486);
  v476 = sub_1B886D250(v11, &v486, a3);
  v107 = v486;
  v108 = ((uint64_t (*)(uint64_t))v6)(v486);
  if (v108)
  {
    v109 = *(_BYTE *)(v108 + 48);
    swift_release();
    LOBYTE(v490) = v109;
    LOBYTE(v489) = 24;
    if ((sub_1B8912AA4() & 1) != 0)
    {
      *v10 = v107;
      sub_1B8878CF0(v11, v10);
LABEL_113:
      v7 = v12;
      goto LABEL_114;
    }
  }
  *(_BYTE *)a3 = 1;
  v112 = v483();
  v96 = v112;
  if ((v112 & 0xC000000000000001) != 0)
  {
    v113 = MEMORY[0x1BCCB4394](v104, v112);
    goto LABEL_112;
  }
  if ((v104 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10) > v104)
  {
    v113 = *(_QWORD *)(v112 + 8 * v104 + 32);
    swift_retain();
LABEL_112:
    swift_bridgeObjectRelease();
    sub_1B8878B14(v113);
    swift_release();
    goto LABEL_113;
  }
  __break(1u);
LABEL_496:
  v97 = MEMORY[0x1BCCB4394](v12, v96);
LABEL_90:
  swift_bridgeObjectRelease();
  v98 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1005, 0);
  v99 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v97 + 224))(&v486);
  v101 = v100;
  sub_1B8876CA4();
  v102 = *(_QWORD **)(*v101 + 16);
  sub_1B8876CEC(v102);
  v103 = *v101;
  *(_QWORD *)(v103 + 16) = (char *)v102 + 1;
  *(_QWORD *)(v103 + 8 * (_QWORD)v102 + 32) = v98;
  v99(&v486, 0);
LABEL_91:
  swift_release();
LABEL_92:
  v91 = (uint64_t)v483;
LABEL_117:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v477 = swift_allocObject();
  *(_OWORD *)(v477 + 16) = xmmword_1B8915DF0;
  v117 = ((uint64_t (*)(void))v91)();
  v85 = v117;
  if ((v117 & 0xC000000000000001) != 0)
  {
LABEL_479:
    v118 = (_BYTE *)MEMORY[0x1BCCB4394](v12, v85);
  }
  else
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_481:
      __break(1u);
      goto LABEL_482;
    }
    if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
      goto LABEL_481;
    v118 = *(_BYTE **)(v117 + 8 * v12 + 32);
    swift_retain();
  }
  v119 = swift_bridgeObjectRelease();
  v120 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v118 + 160))(v119);
  if (v121)
  {
    v122 = v121;
    v123 = v120;
  }
  else
  {
    v123 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v118 + 136))(v120);
    v122 = v124;
  }
  LOBYTE(v486) = v118[48];
  type metadata accessor for CalculateExpression.RichToken();
  v125 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v123, v122, (unsigned __int8 *)&v486, 0);
  swift_release();
  *(_QWORD *)(v477 + 32) = v125;
  v486 = v477;
  sub_1B8912CA8();
  v126 = v486;
  v485 = v486;
  if ((_DWORD)v479)
  {
    LOBYTE(v486) = 4;
    v127 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
    sub_1B8877038(0, v126);
    sub_1B88771C0(0, 0, v127, 0, (void (*)(_QWORD))type metadata accessor for CalculateExpression.RichToken);
    v126 = v485;
  }
  v7 = v471;
  type metadata accessor for CalculateExpression.RichExpression();
  v128 = swift_allocObject();
  v129 = sub_1B886600C(v126);
  v486 = ((uint64_t (*)(uint64_t))v482)(v129);
  v487 = v130;
  v490 = 1885957222;
  v491 = 0xE400000000000000;
  v131 = sub_1B8912E58();
  swift_bridgeObjectRelease();
  if (v131)
    v132 = 0;
  else
    v132 = v128;
  v477 = v132;
  if (v131)
    a4 = (uint64_t (*)(uint64_t))v128;
  else
    a4 = 0;
  *v10 = v12;
  swift_retain();
  sub_1B8878CF0(v11, v10);
  swift_release();
  while (1)
  {
    v6 = (uint64_t)v480;
LABEL_134:
    v476 = 0;
    v479 = 0;
LABEL_135:
    v133 = sub_1B886B968(v11, v10, a3);
    v12 = v133;
    v488 = v134;
    v489 = v133;
    if (v133 >> 62)
    {
LABEL_157:
      swift_bridgeObjectRetain();
      if (sub_1B8912FD8() != 1)
      {
LABEL_158:
        swift_bridgeObjectRelease();
        goto LABEL_159;
      }
    }
    else
    {
      v135 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v135 != 1)
        goto LABEL_158;
    }
    if ((v12 & 0xC000000000000001) != 0)
    {
      v136 = MEMORY[0x1BCCB4394](0, v12);
    }
    else
    {
      if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_367;
      }
      v136 = *(_QWORD *)(v12 + 32);
      swift_retain();
    }
    v137 = swift_bridgeObjectRelease();
    v138 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v136 + 392))(v137);
    swift_release();
    v139 = sub_1B8873E2C(v138);
    swift_bridgeObjectRelease();
    if (!v139)
    {
      swift_bridgeObjectRelease();
      v12 = MEMORY[0x1E0DEE9D8];
      v489 = MEMORY[0x1E0DEE9D8];
    }
LABEL_159:
    if (a4)
    {
      swift_retain();
      sub_1B8877038(0, v12);
      sub_1B88771C0(0, 0, (uint64_t)a4, v150, (void (*)(_QWORD))type metadata accessor for CalculateExpression.RichExpression);
      sub_1B88770B4(0, 0, -1);
    }
    v12 = v481;
    if (v481 && (v151 = ((uint64_t (*)(uint64_t))v6)(*v10)) != 0)
    {
      v152 = *(_BYTE *)(v151 + 48);
      swift_release();
      LOBYTE(v486) = v152;
      LOBYTE(v490) = 7;
      sub_1B885DDA0();
      v153 = sub_1B8912AA4();
    }
    else
    {
      v153 = 0;
    }
    type metadata accessor for CalculateExpression.RichExpression();
    v8 = swift_allocObject();
    v154 = swift_weakInit();
    v474 = 16777473;
    *(_DWORD *)(v8 + 24) = 16777473;
    *(_BYTE *)(v8 + 28) = 1;
    *(_QWORD *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 40) = MEMORY[0x1E0DEE9D8];
    *(_WORD *)(v8 + 48) = 0;
    *(_BYTE *)(v8 + 50) = 0;
    v475 = v153;
    if ((v153 & 1) != 0)
    {
      LOBYTE(v486) = 15;
      type metadata accessor for CalculateExpression.RichToken();
      v155 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v155);
      v154 = swift_release();
    }
    v480 = a4;
    v6 = 10127586;
    if (((uint64_t (*)(uint64_t))v482)(v154) == 10127586 && v156 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_175:
      swift_bridgeObjectRelease();
      v5 = v489;
      v163 = swift_bridgeObjectRetain();
      v164 = sub_1B8873E2C(v163);
      v165 = swift_bridgeObjectRelease();
      if (v164 == 1)
      {
        LOBYTE(v486) = 10;
        type metadata accessor for CalculateExpression.RichToken();
        v6 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v486, 0);
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v6);
        v10 = (uint64_t *)v479;
        if ((v5 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_178:
            v166 = *(_QWORD *)(v5 + 32);
            swift_retain();
            goto LABEL_179;
          }
          __break(1u);
LABEL_370:
          __break(1u);
LABEL_371:
          __break(1u);
LABEL_372:
          __break(1u);
          goto LABEL_373;
        }
LABEL_367:
        v166 = MEMORY[0x1BCCB4394](0, v5);
        goto LABEL_179;
      }
      *(_BYTE *)a3 = 1;
      v168 = ((uint64_t (*)(uint64_t))v483)(v165);
      v10 = (uint64_t *)v479;
      if ((v168 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCB4394](v473, v168);
      }
      else
      {
        if ((v473 & 0x8000000000000000) != 0)
          goto LABEL_370;
        if (*(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10) <= v473)
          goto LABEL_372;
        v6 = *(_QWORD *)(v168 + 8 * v473 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v169 = swift_bridgeObjectRetain();
      v170 = sub_1B8873E2C(v169);
      v171 = swift_bridgeObjectRelease();
      if (v170 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_371;
      if (v170 <= 0x7FFFFFFF)
      {
        ((void (*)(uint64_t))v482)(v171);
        v172 = objc_allocWithZone((Class)CalculateError);
        v173 = (void *)sub_1B8912AB0();
        swift_bridgeObjectRelease();
        v174 = objc_msgSend(v172, sel_initIncorrectArguments_correctArguments_inFunction_, v170, 1, v173);

        v175 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v6 + 224))(&v486);
        v177 = v176;
        sub_1B8876CA4();
        v178 = *(_QWORD **)(*v177 + 16);
        sub_1B8876CEC(v178);
        v179 = *v177;
        *(_QWORD *)(v179 + 16) = (char *)v178 + 1;
        v12 = v481;
        *(_QWORD *)(v179 + 8 * (_QWORD)v178 + 32) = v174;
        v175(&v486, 0);
        swift_release();
        goto LABEL_191;
      }
LABEL_373:
      __break(1u);
LABEL_374:
      v351 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v351 & 1) != 0)
        goto LABEL_375;
LABEL_389:
      if (qword_1EF1B6718 == -1)
        goto LABEL_390;
      goto LABEL_569;
    }
    v157 = sub_1B8913050();
    v158 = swift_bridgeObjectRelease();
    if ((v157 & 1) != 0)
      goto LABEL_175;
    v91 = 1953653347;
    v486 = ((uint64_t (*)(uint64_t))v482)(v158);
    v487 = v159;
    v490 = 1953657203;
    v491 = 0xE400000000000000;
    v160 = sub_1B8912E58();
    v161 = swift_bridgeObjectRelease();
    if (!v160)
      goto LABEL_175;
    if (((uint64_t (*)(uint64_t))v482)(v161) == 10193122 && v162 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_210;
    }
    v187 = sub_1B8913050();
    v188 = swift_bridgeObjectRelease();
    if ((v187 & 1) == 0)
    {
      v486 = ((uint64_t (*)(uint64_t))v482)(v188);
      v487 = v189;
      v490 = 1953653347;
      v91 = 0xE400000000000000;
      v491 = 0xE400000000000000;
      v190 = sub_1B8912E58();
      v191 = swift_bridgeObjectRelease();
      if (v190)
        break;
    }
LABEL_210:
    swift_bridgeObjectRelease();
    v5 = v489;
    v211 = swift_bridgeObjectRetain();
    v212 = sub_1B8873E2C(v211);
    v213 = swift_bridgeObjectRelease();
    if (v212 == 1)
    {
      v12 = v7;
      LOBYTE(v486) = 10;
      type metadata accessor for CalculateExpression.RichToken();
      v214 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v486, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
      v215 = swift_allocObject();
      *(_OWORD *)(v215 + 16) = xmmword_1B8915DF0;
      v7 = 1;
      LOBYTE(v486) = 1;
      v216 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(51, 0xE100000000000000, (unsigned __int8 *)&v486, 0);
      *(_QWORD *)(v215 + 32) = v216;
      v486 = v215;
      sub_1B8912CA8();
      v85 = v486;
      v217 = swift_allocObject();
      sub_1B886600C(v85);
      v218 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v214 + 264))(v217);
      v219 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v214 + 256))(v218);
      v10 = (uint64_t *)v479;
      if (v219)
      {
        LOBYTE(v486) = 1;
        (*(void (**)(uint64_t *))(*(_QWORD *)v219 + 280))(&v486);
        swift_release();
      }
      v90 = v8;
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v214);
      v11 = v477;
      v91 = (uint64_t)v480;
      if ((v5 & 0xC000000000000001) != 0)
      {
        v166 = MEMORY[0x1BCCB4394](0, v5);
        v12 = v481;
        goto LABEL_179;
      }
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v166 = *(_QWORD *)(v5 + 32);
        swift_retain();
        v12 = v481;
        goto LABEL_179;
      }
      __break(1u);
LABEL_469:
      __break(1u);
LABEL_470:
      __break(1u);
LABEL_471:
      __break(1u);
      goto LABEL_472;
    }
    *(_BYTE *)a3 = 1;
    v90 = v11;
    v220 = ((uint64_t (*)(uint64_t))v483)(v213);
    v85 = v220;
    v10 = (uint64_t *)v479;
    if ((v220 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1BCCB4394](v473, v220);
      v11 = v477;
    }
    else
    {
      v11 = v477;
      if ((v473 & 0x8000000000000000) != 0)
        goto LABEL_469;
      if (*(_QWORD *)((v220 & 0xFFFFFFFFFFFFF8) + 0x10) <= v473)
        goto LABEL_470;
      v6 = *(_QWORD *)(v220 + 8 * v473 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v221 = swift_bridgeObjectRetain();
    v91 = sub_1B8873E2C(v221);
    v222 = swift_bridgeObjectRelease();
    if (v91 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_471;
    if (v91 <= 0x7FFFFFFF)
      goto LABEL_222;
LABEL_472:
    __break(1u);
LABEL_473:
    v92 = MEMORY[0x1BCCB4394](v85, v90);
LABEL_84:
    swift_bridgeObjectRelease();
    v93 = *(_BYTE *)(v92 + 48);
    swift_release();
    LOBYTE(v486) = v93;
    LOBYTE(v490) = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v486, (unsigned __int8 *)&v490))
    {
      v94 = 1885957222;
      v471 = v7;
      if ((_DWORD)v479)
      {
        v95 = ((uint64_t (*)(void))v91)();
        v96 = v95;
        if ((v95 & 0xC000000000000001) == 0)
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (*(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10) > v12)
          {
            v97 = *(_QWORD *)(v95 + 8 * v12 + 32);
            swift_retain();
            goto LABEL_90;
          }
          __break(1u);
LABEL_499:
          swift_unknownObjectRelease();
          v455 = MEMORY[0x1E0DEE9D8];
LABEL_500:
          swift_bridgeObjectRelease();
          v486 = v455;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B38);
          sub_1B887A014(&qword_1ED561B40, &qword_1ED561B38, MEMORY[0x1E0DEAF20]);
          v456 = sub_1B8912A98();
          v458 = v457;
          swift_bridgeObjectRelease();
          v459 = sub_1B88B0038();
          v460._countAndFlagsBits = v456;
          v460._object = v458;
          evaluate(_:options:)(v461, v460, (Swift::OpaquePointer)v459);
          v463 = v462;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v463)
          {
            type metadata accessor for CalculateExpression.CustomOperandOperation();
            v464 = v463;
            CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v464);
            v466 = v465;
            v467 = (*(uint64_t (**)(void))(*(_QWORD *)v465 + 128))();
            if ((v467 & 1) != 0)
            {
              LOBYTE(v486) = 4;
              type metadata accessor for CalculateExpression.RichToken();
              v468 = swift_allocObject();
              CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
              (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v468);
              v467 = swift_release();
            }
            (*(void (**)(uint64_t))(*(_QWORD *)v466 + 120))(v467);
            (*(void (**)(void))(*(_QWORD *)v8 + 584))();
            swift_release();
            swift_release();

          }
          else
          {
            *(_BYTE *)a3 = 1;
          }
          goto LABEL_465;
        }
        goto LABEL_496;
      }
      v486 = v482();
      v487 = v114;
      v490 = 1885957222;
      v491 = 0xE400000000000000;
      v115 = sub_1B8912E58();
      v116 = swift_bridgeObjectRelease();
      if (v115)
        goto LABEL_117;
      v140 = ((uint64_t (*)(uint64_t))v91)(v116);
      if ((v140 & 0xC000000000000001) != 0)
      {
        v141 = MEMORY[0x1BCCB4394](v12, v140);
      }
      else
      {
        if ((v12 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_508:
          __break(1u);
          goto LABEL_509;
        }
        if (*(_QWORD *)((v140 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
          goto LABEL_508;
        v141 = *(_QWORD *)(v140 + 8 * v12 + 32);
        swift_retain();
      }
      v142 = swift_bridgeObjectRelease();
      v143 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v141 + 136);
      if (v143(v142) == 56 && v144 == 0xE100000000000000)
        goto LABEL_148;
      v145 = sub_1B8913050();
      v146 = swift_bridgeObjectRelease();
      if ((v145 & 1) != 0)
        goto LABEL_91;
      if (v143(v146) == 13873 && v147 == 0xE200000000000000)
      {
LABEL_148:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
      v148 = sub_1B8913050();
      v149 = swift_bridgeObjectRelease();
      v91 = (uint64_t)v483;
      if ((v148 & 1) != 0)
      {
        swift_release();
        goto LABEL_117;
      }
      *(_BYTE *)a3 = 1;
      v342 = ((uint64_t (*)(uint64_t))v483)(v149);
      v287 = (void (*)(uint64_t))v342;
      if ((v342 & 0xC000000000000001) != 0)
        goto LABEL_558;
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_560:
        __break(1u);
LABEL_561:
        v310 = MEMORY[0x1BCCB4394](0, v5);
        goto LABEL_318;
      }
      if (*(_QWORD *)((v342 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
        goto LABEL_560;
      v343 = *(_QWORD *)(v342 + 8 * v12 + 32);
      swift_retain();
LABEL_354:
      swift_bridgeObjectRelease();
      v478 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1005, 0);
      v344 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v343 + 224))(&v486);
      v346 = v345;
      sub_1B8876CA4();
      v347 = *(_QWORD **)(*v346 + 16);
      sub_1B8876CEC(v347);
      v348 = *v346;
      *(_QWORD *)(v348 + 16) = (char *)v347 + 1;
      *(_QWORD *)(v348 + 8 * (_QWORD)v347 + 32) = v478;
      v344(&v486, 0);
      swift_release();
      goto LABEL_91;
    }
LABEL_94:
    v477 = 0;
    a4 = 0;
  }
  v6 = (uint64_t)v482;
  v486 = ((uint64_t (*)(uint64_t))v482)(v191);
  v487 = v192;
  v490 = 1953460082;
  v491 = 0xE400000000000000;
  v193 = sub_1B8912E58();
  v194 = swift_bridgeObjectRelease();
  if (!v193)
  {
    swift_bridgeObjectRelease();
    v5 = v489;
    v232 = swift_bridgeObjectRetain();
    v233 = sub_1B8873E2C(v232);
    swift_bridgeObjectRelease();
    if (v233 != 1)
    {
      v234 = swift_bridgeObjectRetain();
      v235 = sub_1B8873E2C(v234);
      v236 = swift_bridgeObjectRelease();
      if (v235 != 2)
      {
        *(_BYTE *)a3 = 1;
        v242 = v11;
        v275 = ((uint64_t (*)(uint64_t))v483)(v236);
        v260 = v275;
        if ((v275 & 0xC000000000000001) != 0)
          goto LABEL_520;
        if ((v473 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v275 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
        {
          v6 = *(_QWORD *)(v275 + 8 * v473 + 32);
          swift_retain();
          goto LABEL_278;
        }
        __break(1u);
        goto LABEL_523;
      }
    }
    LOBYTE(v486) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    v6 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v486, 0);
    v237 = swift_bridgeObjectRetain();
    v238 = sub_1B8873E2C(v237);
    swift_bridgeObjectRelease();
    if (v238 != 2)
      goto LABEL_234;
    v239 = swift_allocObject();
    sub_1B8865FC4();
    v240 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 264))(v239);
    v91 = *(_QWORD *)(*(_QWORD *)v6 + 256);
    v241 = ((uint64_t (*)(uint64_t))v91)(v240);
    if (!v241)
      goto LABEL_232;
    v242 = v241;
    if ((v5 & 0xC000000000000001) != 0)
      goto LABEL_524;
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
    {
      v243 = *(_QWORD *)(v5 + 40);
      swift_retain();
      goto LABEL_231;
    }
    __break(1u);
LABEL_526:
    v253 = MEMORY[0x1BCCB4394](1, v5);
LABEL_245:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v242 + 592))(v253, 1);
    swift_release();
    v252 = swift_release();
LABEL_246:
    v254 = ((uint64_t (*)(uint64_t))v7)(v252);
    if (v254)
    {
      LOBYTE(v486) = 1;
      (*(void (**)(uint64_t *))(*(_QWORD *)v254 + 280))(&v486);
      goto LABEL_248;
    }
    goto LABEL_301;
  }
  v486 = ((uint64_t (*)(uint64_t))v482)(v194);
  v487 = v195;
  v490 = 7827312;
  v491 = 0xE300000000000000;
  v196 = sub_1B8912E58();
  v197 = swift_bridgeObjectRelease();
  if (!v196)
    goto LABEL_237;
  v486 = ((uint64_t (*)(uint64_t))v482)(v197);
  v487 = v198;
  v490 = 6778732;
  v491 = 0xE300000000000000;
  v199 = sub_1B8912E58();
  v200 = swift_bridgeObjectRelease();
  if (!v199)
  {
    v5 = v489;
    v255 = swift_bridgeObjectRetain();
    v256 = sub_1B8873E2C(v255);
    swift_bridgeObjectRelease();
    if (v256 != 1)
    {
      v257 = swift_bridgeObjectRetain();
      v258 = sub_1B8873E2C(v257);
      swift_bridgeObjectRelease();
      if (v258 != 2)
      {
        v297 = swift_bridgeObjectRelease();
        *(_BYTE *)a3 = 1;
        v298 = ((uint64_t (*)(uint64_t))v483)(v297);
        v279 = v298;
        if ((v298 & 0xC000000000000001) == 0)
        {
          if ((v473 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (*(_QWORD *)((v298 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
          {
            v6 = *(_QWORD *)(v298 + 8 * v473 + 32);
            swift_retain();
            goto LABEL_306;
          }
          __break(1u);
          goto LABEL_539;
        }
LABEL_536:
        v6 = MEMORY[0x1BCCB4394](v473, v279);
LABEL_306:
        swift_bridgeObjectRelease();
        v299 = swift_bridgeObjectRetain();
        v91 = sub_1B8873E2C(v299);
        v277 = swift_bridgeObjectRelease();
        if (v91 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v91 <= 0x7FFFFFFF)
            goto LABEL_308;
LABEL_540:
          __break(1u);
          goto LABEL_541;
        }
LABEL_539:
        __break(1u);
        goto LABEL_540;
      }
    }
    LOBYTE(v486) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    v94 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(6778732, 0xE300000000000000, (unsigned __int8 *)&v486, 0);
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v94);
    v259 = swift_bridgeObjectRetain();
    v260 = sub_1B8873E2C(v259);
    swift_bridgeObjectRelease();
    if (v260 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
      v261 = swift_allocObject();
      *(_OWORD *)(v261 + 16) = xmmword_1B8915DF0;
      LOBYTE(v486) = 1;
      v262 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(12337, 0xE200000000000000, (unsigned __int8 *)&v486, 0);
      *(_QWORD *)(v261 + 32) = v262;
      v486 = v261;
      sub_1B8912CA8();
      v260 = v486;
      v263 = swift_allocObject();
      sub_1B886600C(v260);
      sub_1B8877038(0, v5);
      sub_1B88771C0(0, 0, v263, v264, (void (*)(_QWORD))type metadata accessor for CalculateExpression.RichExpression);
    }
    v265 = swift_allocObject();
    sub_1B8865FC4();
    v266 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v94 + 288))(v265);
    v91 = *(_QWORD *)(*(_QWORD *)v94 + 280);
    v267 = ((uint64_t (*)(uint64_t))v91)(v266);
    v12 = v481;
    if (!v267)
      goto LABEL_258;
    v242 = v267;
    if ((v489 & 0xC000000000000001) != 0)
      goto LABEL_528;
    if (*(_QWORD *)((v489 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v260 = *(_QWORD *)(v489 + 32);
      swift_retain();
      while (1)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v242 + 592))(v260, 1);
        swift_release();
        v267 = swift_release();
LABEL_258:
        v242 = v94;
        v268 = ((uint64_t (*)(uint64_t))v91)(v267);
        if (v268)
        {
          v242 = v268;
          LOBYTE(v486) = 2;
          (*(void (**)(uint64_t *))(*(_QWORD *)v268 + 280))(&v486);
          swift_release();
        }
        v5 = v489;
        v269 = swift_bridgeObjectRetain();
        v270 = sub_1B8873E2C(v269);
        if (!v270)
        {
LABEL_590:
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          result = swift_release();
          __break(1u);
          return result;
        }
        v271 = __OFSUB__(v270, 1);
        v248 = v270 - 1;
        if (v271)
          goto LABEL_516;
        if ((v5 & 0xC000000000000001) != 0)
          goto LABEL_517;
        if ((v248 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > v248)
        {
          v166 = *(_QWORD *)(v5 + 8 * v248 + 32);
          swift_retain();
          goto LABEL_266;
        }
        __break(1u);
LABEL_520:
        v6 = MEMORY[0x1BCCB4394](v473, v260);
LABEL_278:
        swift_bridgeObjectRelease();
        v276 = swift_bridgeObjectRetain();
        v91 = sub_1B8873E2C(v276);
        v277 = swift_bridgeObjectRelease();
        if (v91 >= (uint64_t)0xFFFFFFFF80000000)
          break;
LABEL_523:
        __break(1u);
LABEL_524:
        v243 = MEMORY[0x1BCCB4394](1, v5);
LABEL_231:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v242 + 592))(v243, 1);
        swift_release();
        v241 = swift_release();
LABEL_232:
        v244 = ((uint64_t (*)(uint64_t))v91)(v241);
        if (v244)
        {
          LOBYTE(v486) = 1;
          (*(void (**)(uint64_t *))(*(_QWORD *)v244 + 280))(&v486);
          swift_release();
        }
LABEL_234:
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v6);
        if ((v5 & 0xC000000000000001) != 0)
          goto LABEL_367;
        if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_178;
        __break(1u);
LABEL_237:
        swift_bridgeObjectRelease();
        v5 = v489;
        v245 = swift_bridgeObjectRetain();
        v246 = sub_1B8873E2C(v245);
        v247 = swift_bridgeObjectRelease();
        if (v246 != 2)
        {
          *(_BYTE *)a3 = 1;
          v248 = ((uint64_t (*)(uint64_t))v483)(v247);
          if ((v248 & 0xC000000000000001) == 0)
          {
            if ((v473 & 0x8000000000000000) == 0)
            {
              if (*(_QWORD *)((v248 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
              {
                v6 = *(_QWORD *)(v248 + 8 * v473 + 32);
                swift_retain();
                goto LABEL_271;
              }
LABEL_513:
              __break(1u);
LABEL_514:
              __break(1u);
              goto LABEL_515;
            }
LABEL_512:
            __break(1u);
            goto LABEL_513;
          }
          v6 = MEMORY[0x1BCCB4394](v473, v248);
LABEL_271:
          swift_bridgeObjectRelease();
          v272 = swift_bridgeObjectRetain();
          v273 = sub_1B8873E2C(v272);
          v248 = swift_bridgeObjectRelease();
          if (v273 < (uint64_t)0xFFFFFFFF80000000)
            goto LABEL_514;
          if (v273 <= 0x7FFFFFFF)
          {
LABEL_273:
            ((void (*)(unint64_t))v482)(v248);
            v274 = objc_allocWithZone((Class)CalculateError);
            v224 = (void *)sub_1B8912AB0();
            swift_bridgeObjectRelease();
            v225 = objc_msgSend(v274, sel_initIncorrectArguments_correctArguments_inFunction_, v273, 2, v224);
            goto LABEL_223;
          }
LABEL_515:
          __break(1u);
LABEL_516:
          __break(1u);
LABEL_517:
          v166 = MEMORY[0x1BCCB4394](v248, v5);
LABEL_266:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_179:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v166, 3);
LABEL_180:
          swift_release();
LABEL_181:
          swift_release();
          if (v12)
            goto LABEL_192;
LABEL_182:
          if ((v475 & 1) == 0)
            goto LABEL_197;
LABEL_183:
          LOBYTE(v486) = 16;
          type metadata accessor for CalculateExpression.RichToken();
          v167 = swift_allocObject();
          CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
          (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v167);
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_198;
        }
        LOBYTE(v486) = 7;
        type metadata accessor for CalculateExpression.RichToken();
        v94 = swift_allocObject();
        v248 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
        v91 = v5 & 0xC000000000000001;
        if ((v5 & 0xC000000000000001) != 0)
        {
LABEL_509:
          v12 = v7;
          v249 = MEMORY[0x1BCCB4394](0, v5);
        }
        else
        {
          if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_512;
          }
          v12 = v7;
          v249 = *(_QWORD *)(v5 + 32);
          swift_retain();
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v249, 1);
        swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v94);
        v250 = swift_allocObject();
        sub_1B8865FC4();
        v251 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v94 + 288))(v250);
        v7 = *(_QWORD *)(*(_QWORD *)v94 + 280);
        v252 = ((uint64_t (*)(uint64_t))v7)(v251);
        if (!v252)
          goto LABEL_246;
        v242 = v252;
        if (v91)
          goto LABEL_526;
        if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > 1uLL)
        {
          v253 = *(_QWORD *)(v5 + 40);
          swift_retain();
          goto LABEL_245;
        }
        __break(1u);
LABEL_528:
        v260 = MEMORY[0x1BCCB4394](0);
      }
      if (v91 <= 0x7FFFFFFF)
      {
LABEL_308:
        ((void (*)(uint64_t))v482)(v277);
        v300 = objc_allocWithZone((Class)CalculateError);
        v224 = (void *)sub_1B8912AB0();
        swift_bridgeObjectRelease();
        v225 = objc_msgSend(v300, sel_initIncorrectArguments_minArguments_maxArguments_inFunction_, v91, 1, 2, v224);
        goto LABEL_223;
      }
      __break(1u);
LABEL_281:
      swift_bridgeObjectRelease();
      v5 = v489;
      v278 = swift_bridgeObjectRetain();
      v279 = sub_1B8873E2C(v278);
      v280 = swift_bridgeObjectRelease();
      if (v279 != 1)
      {
        *(_BYTE *)a3 = 1;
        v295 = ((uint64_t (*)(uint64_t))v483)(v280);
        v279 = v295;
        if ((v295 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x1BCCB4394](v473, v295);
        }
        else
        {
          if ((v473 & 0x8000000000000000) != 0)
          {
LABEL_533:
            __break(1u);
            goto LABEL_534;
          }
          if (*(_QWORD *)((v295 & 0xFFFFFFFFFFFFF8) + 0x10) <= v473)
          {
LABEL_534:
            __break(1u);
LABEL_535:
            __break(1u);
            goto LABEL_536;
          }
          v6 = *(_QWORD *)(v295 + 8 * v473 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v296 = swift_bridgeObjectRetain();
        v91 = sub_1B8873E2C(v296);
        v222 = swift_bridgeObjectRelease();
        if (v91 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v91 > 0x7FFFFFFF)
          {
            __break(1u);
            goto LABEL_301;
          }
          goto LABEL_222;
        }
        goto LABEL_535;
      }
      LOBYTE(v486) = 8;
      type metadata accessor for CalculateExpression.RichToken();
      v94 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
      if ((v5 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v281 = *(_QWORD *)(v5 + 32);
          swift_retain();
LABEL_285:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v281, 1);
          swift_release();
          (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v94);
          goto LABEL_181;
        }
        __break(1u);
        goto LABEL_533;
      }
    }
    else
    {
      __break(1u);
    }
    v281 = MEMORY[0x1BCCB4394](0, v5);
    goto LABEL_285;
  }
  v486 = ((uint64_t (*)(uint64_t))v482)(v200);
  v487 = v201;
  v490 = 1952670054;
  v491 = 0xE400000000000000;
  v202 = sub_1B8912E58();
  v203 = swift_bridgeObjectRelease();
  if (!v202)
    goto LABEL_281;
  v486 = ((uint64_t (*)(uint64_t))v482)(v203);
  v487 = v204;
  v490 = 7370853;
  v491 = 0xE300000000000000;
  v205 = sub_1B8912E58();
  v206 = swift_bridgeObjectRelease();
  if (!v205)
  {
    swift_bridgeObjectRelease();
    v5 = v489;
    v282 = swift_bridgeObjectRetain();
    v283 = sub_1B8873E2C(v282);
    v284 = swift_bridgeObjectRelease();
    if (v283 == 1)
    {
      v12 = v7;
      LOBYTE(v486) = 13;
      type metadata accessor for CalculateExpression.RichToken();
      v285 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
      LOBYTE(v486) = 7;
      v286 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
      v287 = *(void (**)(uint64_t))(*(_QWORD *)v8 + 584);
      v287(v285);
      v287(v286);
      v288 = swift_allocObject();
      sub_1B8865FC4();
      v289 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v286 + 288))(v288);
      v290 = *(_QWORD *)(*(_QWORD *)v286 + 280);
      v291 = ((uint64_t (*)(uint64_t))v290)(v289);
      v11 = v477;
      v10 = (uint64_t *)v479;
      if (!v291)
        goto LABEL_292;
      v292 = v291;
      if ((v5 & 0xC000000000000001) != 0)
        goto LABEL_556;
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v293 = *(_QWORD *)(v5 + 32);
        swift_retain();
        goto LABEL_291;
      }
      __break(1u);
LABEL_558:
      v343 = MEMORY[0x1BCCB4394](v12, v287);
      goto LABEL_354;
    }
    *(_BYTE *)a3 = 1;
    v314 = ((uint64_t (*)(uint64_t))v483)(v284);
    v279 = v314;
    if ((v314 & 0xC000000000000001) == 0)
    {
      if ((v473 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v11 = v477;
        if (*(_QWORD *)((v314 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
        {
          v6 = *(_QWORD *)(v314 + 8 * v473 + 32);
          swift_retain();
          goto LABEL_326;
        }
      }
      __break(1u);
      goto LABEL_544;
    }
LABEL_541:
    v6 = MEMORY[0x1BCCB4394](v473, v279);
    v11 = v477;
LABEL_326:
    swift_bridgeObjectRelease();
    v315 = swift_bridgeObjectRetain();
    v91 = sub_1B8873E2C(v315);
    v222 = swift_bridgeObjectRelease();
    if (v91 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v91 > 0x7FFFFFFF)
      {
        __break(1u);
        goto LABEL_329;
      }
LABEL_222:
      ((void (*)(uint64_t))v482)(v222);
      v223 = objc_allocWithZone((Class)CalculateError);
      v224 = (void *)sub_1B8912AB0();
      swift_bridgeObjectRelease();
      v225 = objc_msgSend(v223, sel_initIncorrectArguments_correctArguments_inFunction_, v91, 1, v224);
LABEL_223:
      v226 = v225;

      v227 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v6 + 224))(&v486);
      v229 = v228;
      sub_1B8876CA4();
      v230 = *(_QWORD **)(*v229 + 16);
      sub_1B8876CEC(v230);
      v231 = *v229;
      *(_QWORD *)(v231 + 16) = (char *)v230 + 1;
      *(_QWORD *)(v231 + 8 * (_QWORD)v230 + 32) = v226;
      v227(&v486, 0);
      swift_release();
      v12 = v481;
      goto LABEL_191;
    }
LABEL_544:
    __break(1u);
    goto LABEL_545;
  }
  v486 = ((uint64_t (*)(uint64_t))v482)(v206);
  v487 = v207;
  v490 = 1885957222;
  v491 = 0xE400000000000000;
  v208 = sub_1B8912E58();
  v209 = swift_bridgeObjectRelease();
  if (!v208)
  {
    v301 = swift_bridgeObjectRelease();
    v10 = (uint64_t *)v479;
    if (v477)
    {
      v5 = v489;
      swift_retain();
      v302 = swift_bridgeObjectRetain();
      v303 = sub_1B8873E2C(v302);
      swift_bridgeObjectRelease();
      if (v303 == 1)
      {
        LOBYTE(v486) = 10;
        type metadata accessor for CalculateExpression.RichToken();
        v304 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(1885957222, 0xE400000000000000, (unsigned __int8 *)&v486, 0);
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v304);
        v305 = swift_allocObject();
        sub_1B8865FC4();
        v306 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v304 + 288))(v305);
        v307 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v304 + 280);
        v308 = v307(v306);
        if (v308)
        {
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v308 + 592))(v477, 1);
          v308 = swift_release();
        }
        v309 = v307(v308);
        if (v309)
        {
          LOBYTE(v486) = 2;
          (*(void (**)(uint64_t *))(*(_QWORD *)v309 + 280))(&v486);
          swift_release();
        }
        if ((v5 & 0xC000000000000001) != 0)
          goto LABEL_561;
        if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_563;
        }
        v310 = *(_QWORD *)(v5 + 32);
        swift_retain();
LABEL_318:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v310, 3);
        swift_release();
        goto LABEL_180;
      }
      v301 = swift_release();
    }
    *(_BYTE *)a3 = 1;
    v292 = v11;
    v349 = ((uint64_t (*)(uint64_t))v483)(v301);
    v330 = v349;
    if ((v349 & 0xC000000000000001) == 0)
    {
      if ((v473 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v349 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
      {
        v6 = *(_QWORD *)(v349 + 8 * v473 + 32);
        swift_retain();
        goto LABEL_360;
      }
      __break(1u);
      goto LABEL_549;
    }
    v6 = MEMORY[0x1BCCB4394](v473, v349);
LABEL_360:
    swift_bridgeObjectRelease();
    v5 = v489;
    v350 = swift_bridgeObjectRetain();
    v273 = sub_1B8873E2C(v350);
    v248 = swift_bridgeObjectRelease();
    if (v273 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v273 <= 0x7FFFFFFF)
        goto LABEL_273;
      __break(1u);
      goto LABEL_248;
    }
LABEL_549:
    __break(1u);
    goto LABEL_550;
  }
  if (((uint64_t (*)(uint64_t))v482)(v209) == 1735355484 && v210 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_320;
  }
  v311 = sub_1B8913050();
  v312 = swift_bridgeObjectRelease();
  if ((v311 & 1) != 0)
  {
LABEL_320:
    swift_bridgeObjectRelease();
    LOBYTE(v486) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    v12 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(6778732, 0xE300000000000000, (unsigned __int8 *)&v486, 0);
    (*(void (**)(unint64_t))(*(_QWORD *)v8 + 584))(v12);
    v313 = v479;
    if (v479)
    {
LABEL_330:
      v319 = swift_allocObject();
      sub_1B8865FC4();
      v320 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 288);
      swift_retain();
      v321 = v320(v319);
      v322 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 280);
      v323 = v322(v321);
      if (v323)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v323 + 592))(v313, 1);
        v323 = swift_release();
      }
      v292 = v12;
      v324 = v322(v323);
      v290 = (uint64_t)v480;
      if (v324)
      {
        v292 = v324;
        LOBYTE(v486) = 2;
        (*(void (**)(uint64_t *))(*(_QWORD *)v324 + 280))(&v486);
        swift_release();
      }
      swift_release();
      v5 = v489;
      v325 = swift_bridgeObjectRetain();
      v326 = sub_1B8873E2C(v325);
      v327 = swift_bridgeObjectRelease();
      if (v326 == 1)
      {
        if ((v5 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_337;
          __break(1u);
LABEL_552:
          __break(1u);
          goto LABEL_553;
        }
LABEL_545:
        v328 = MEMORY[0x1BCCB4394](0, v5);
LABEL_338:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v328, 3);
        swift_release();
        swift_release();
        v12 = v481;
        if (v481)
          goto LABEL_192;
        goto LABEL_182;
      }
      *(_BYTE *)a3 = 1;
      v292 = v11;
      v329 = ((uint64_t (*)(uint64_t))v483)(v327);
      v330 = v329;
      if ((v329 & 0xC000000000000001) == 0)
      {
        if ((v473 & 0x8000000000000000) != 0)
          goto LABEL_552;
        if (*(_QWORD *)((v329 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
        {
          v6 = *(_QWORD *)(v329 + 8 * v473 + 32);
          swift_retain();
          goto LABEL_344;
        }
LABEL_553:
        __break(1u);
LABEL_554:
        __break(1u);
        goto LABEL_555;
      }
LABEL_550:
      v6 = MEMORY[0x1BCCB4394](v473, v330);
LABEL_344:
      swift_bridgeObjectRelease();
      v331 = swift_bridgeObjectRetain();
      v290 = sub_1B8873E2C(v331);
      v332 = swift_bridgeObjectRelease();
      if (v290 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_554;
      if (v290 <= 0x7FFFFFFF)
      {
LABEL_346:
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 208))(v332);
        v333 = objc_allocWithZone((Class)CalculateError);
        v334 = (void *)sub_1B8912AB0();
        swift_bridgeObjectRelease();
        v335 = objc_msgSend(v333, sel_initIncorrectArguments_correctArguments_inFunction_, v290, 1, v334);

        v336 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v6 + 224))(&v486);
        v338 = v337;
        sub_1B8876CA4();
        v339 = *(_QWORD **)(*v338 + 16);
        sub_1B8876CEC(v339);
        v340 = *v338;
        *(_QWORD *)(v340 + 16) = (char *)v339 + 1;
        *(_QWORD *)(v340 + 8 * (_QWORD)v339 + 32) = v335;
        v336(&v486, 0);
        swift_release();
        swift_release();
        v12 = v481;
        goto LABEL_191;
      }
LABEL_555:
      __break(1u);
LABEL_556:
      v293 = MEMORY[0x1BCCB4394](0, v5);
LABEL_291:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v292 + 592))(v293, 1);
      swift_release();
      v291 = swift_release();
LABEL_292:
      v294 = ((uint64_t (*)(uint64_t))v290)(v291);
      if (v294)
      {
        LOBYTE(v486) = 1;
        (*(void (**)(uint64_t *))(*(_QWORD *)v294 + 280))(&v486);
        swift_release();
      }
LABEL_248:
      swift_release();
LABEL_301:
      swift_release();
      v12 = v481;
      goto LABEL_191;
    }
LABEL_329:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v316 = swift_allocObject();
    *(_OWORD *)(v316 + 16) = xmmword_1B8915DF0;
    LOBYTE(v486) = 1;
    v317 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(12337, 0xE200000000000000, (unsigned __int8 *)&v486, 0);
    *(_QWORD *)(v316 + 32) = v317;
    v486 = v316;
    sub_1B8912CA8();
    v318 = v486;
    v313 = swift_allocObject();
    sub_1B886600C(v318);
    swift_retain();
    goto LABEL_330;
  }
  if (((uint64_t (*)(uint64_t))v482)(v312) != 0x747271735CLL || v341 != 0xE500000000000000)
    goto LABEL_374;
  swift_bridgeObjectRelease();
LABEL_375:
  swift_bridgeObjectRelease();
  LOBYTE(v486) = 10;
  type metadata accessor for CalculateExpression.RichToken();
  v12 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v486, 0);
  v10 = (uint64_t *)v479;
  if (v476)
  {
    v352 = swift_allocObject();
    sub_1B8865FC4();
    v353 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 264);
    swift_retain();
    v354 = v353(v352);
    v355 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 256);
    v356 = v355(v354);
    if (v356)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v356 + 592))(v476, 1);
      v356 = swift_release();
    }
    v357 = v355(v356);
    if (v357)
    {
      LOBYTE(v486) = 1;
      (*(void (**)(uint64_t *))(*(_QWORD *)v357 + 280))(&v486);
      swift_release();
    }
LABEL_411:
    swift_release();
  }
  v5 = v489;
  v380 = swift_bridgeObjectRetain();
  v381 = sub_1B8873E2C(v380);
  v382 = swift_bridgeObjectRelease();
  if (v381 == 1)
  {
    v382 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v8 + 584))(v12);
    if ((v5 & 0xC000000000000001) != 0)
      goto LABEL_545;
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_337:
      v328 = *(_QWORD *)(v5 + 32);
      swift_retain();
      goto LABEL_338;
    }
    __break(1u);
  }
  *(_BYTE *)a3 = 1;
  v383 = ((uint64_t (*)(uint64_t))v483)(v382);
  v307 = (uint64_t (*)(uint64_t))v383;
  if ((v383 & 0xC000000000000001) != 0)
    goto LABEL_564;
  if ((v473 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_566;
  }
  if (*(_QWORD *)((v383 & 0xFFFFFFFFFFFFF8) + 0x10) <= v473)
  {
LABEL_566:
    __break(1u);
    goto LABEL_567;
  }
  v6 = *(_QWORD *)(v383 + 8 * v473 + 32);
  swift_retain();
LABEL_420:
  swift_bridgeObjectRelease();
  v384 = swift_bridgeObjectRetain();
  v290 = sub_1B8873E2C(v384);
  v332 = swift_bridgeObjectRelease();
  if (v290 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_567:
    __break(1u);
  }
  else if (v290 <= 0x7FFFFFFF)
  {
    goto LABEL_346;
  }
  __break(1u);
LABEL_569:
  swift_once();
LABEL_390:
  v358 = qword_1EF1B7C40;
  v471 = v7;
  ((void (*)(void))v6)();
  v359 = sub_1B8912AE0();
  v361 = v360;
  swift_bridgeObjectRelease();
  v362 = sub_1B886206C(v359, v361, v358);
  v364 = v363;
  LOBYTE(v359) = v365;
  swift_bridgeObjectRelease();
  v366 = (v359 & 1) == 0;
  if ((v359 & 1) != 0)
    v367 = 1;
  else
    v367 = v364;
  if (v366)
    v12 = v362;
  else
    v12 = 1;
  v368 = swift_bridgeObjectRetain();
  v369 = sub_1B8873E2C(v368);
  v370 = swift_bridgeObjectRelease();
  if (v369 < (uint64_t)v12
    || (v371 = swift_bridgeObjectRetain(), v372 = sub_1B8873E2C(v371), v370 = swift_bridgeObjectRelease(), v367 < v372))
  {
    v373 = ((uint64_t (*)(uint64_t))v483)(v370);
    v22 = v373;
    v24 = v373 & 0xC000000000000001;
    v470 = v367;
    if (v12 == v367)
    {
      if (v24)
        goto LABEL_572;
      if ((v473 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((v373 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
      {
        v12 = *(_QWORD *)(v373 + 8 * v473 + 32);
        swift_retain();
        goto LABEL_403;
      }
      __break(1u);
LABEL_575:
      __break(1u);
LABEL_576:
      __break(1u);
LABEL_577:
      __break(1u);
    }
    else
    {
LABEL_426:
      if (!v24)
      {
        if ((v473 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) > v473)
        {
          v469 = *(_QWORD *)(v22 + 8 * v473 + 32);
          swift_retain();
          goto LABEL_430;
        }
        __break(1u);
        goto LABEL_581;
      }
    }
    v469 = MEMORY[0x1BCCB4394](v473, v22);
LABEL_430:
    swift_bridgeObjectRelease();
    v385 = swift_bridgeObjectRetain();
    v386 = sub_1B8873E2C(v385);
    v387 = swift_bridgeObjectRelease();
    if (v386 <= 0x7FFFFFFF)
    {
      if ((uint64_t)v12 <= 0x7FFFFFFF)
      {
        if (v470 >= (uint64_t)0xFFFFFFFF80000000
          && (uint64_t)v12 >= (uint64_t)0xFFFFFFFF80000000
          && v386 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v470 <= 0x7FFFFFFF)
          {
            v6 = (uint64_t)v482;
            ((void (*)(uint64_t))v482)(v387);
            v388 = objc_allocWithZone((Class)CalculateError);
            v389 = (void *)sub_1B8912AB0();
            swift_bridgeObjectRelease();
            v379 = objc_msgSend(v388, sel_initIncorrectArguments_minArguments_maxArguments_inFunction_, v386, v12, v470, v389);

            v12 = v469;
            goto LABEL_437;
          }
          goto LABEL_584;
        }
LABEL_583:
        __break(1u);
LABEL_584:
        __break(1u);
LABEL_585:
        __break(1u);
LABEL_586:
        swift_once();
        goto LABEL_443;
      }
LABEL_582:
      __break(1u);
      goto LABEL_583;
    }
LABEL_581:
    __break(1u);
    goto LABEL_582;
  }
  while (1)
  {
    if ((v472 & 1) == 0)
    {
      if (qword_1EF1B6720 != -1)
        swift_once();
      v395 = qword_1EF1B7C48;
      v6 = (uint64_t)v482;
      v482();
      v396 = sub_1B8912AE0();
      v398 = v397;
      swift_bridgeObjectRelease();
      LOBYTE(v395) = sub_1B886B058(v396, v398, v395);
      swift_bridgeObjectRelease();
      if ((v395 & 1) != 0)
      {
        if (qword_1EF1B6710 != -1)
          goto LABEL_586;
LABEL_443:
        v399 = qword_1EF1B7C38;
        v6 = (uint64_t)v482;
        v482();
        v400 = sub_1B8912AE0();
        v402 = v401;
        swift_bridgeObjectRelease();
        LOBYTE(v399) = sub_1B886B058(v400, v402, v399);
        v117 = swift_bridgeObjectRelease();
        if ((v399 & 1) == 0)
        {
LABEL_482:
          v439 = *v10;
          if (*v10 < (uint64_t)v473)
          {
            __break(1u);
LABEL_588:
            __break(1u);
LABEL_589:
            __break(1u);
            goto LABEL_590;
          }
          v440 = ((uint64_t (*)(uint64_t))v483)(v117);
          sub_1B8877038(v473, v440);
          sub_1B8877038(v439, v440);
          sub_1B8877464(v473, v439, v440);
          v307 = v441;
          v443 = v442;
          v445 = v444;
          swift_bridgeObjectRelease();
          v12 = v445 >> 1;
          v271 = __OFSUB__(v445 >> 1, v443);
          v7 = (v445 >> 1) - v443;
          if (v271)
            goto LABEL_588;
          if (!v7)
            goto LABEL_499;
          v486 = MEMORY[0x1E0DEE9D8];
          sub_1B8873DC8(v7);
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_589;
          if (v443 <= (uint64_t)v12)
            v446 = v12;
          else
            v446 = v443;
          v10 = (uint64_t *)(v446 - v443);
          v447 = (uint64_t *)((char *)v307 + 8 * v443);
          while (v10)
          {
            v448 = *v447++;
            v449 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v448 + 136);
            v450 = swift_retain();
            v307 = (uint64_t (*)(uint64_t))v449(v450);
            v452 = v451;
            swift_release();
            sub_1B8877560();
            v12 = *(_QWORD *)(v486 + 16);
            sub_1B88775A8((char *)v12);
            v453 = v486;
            *(_QWORD *)(v486 + 16) = v12 + 1;
            v454 = v453 + 16 * v12;
            *(_QWORD *)(v454 + 32) = v307;
            *(_QWORD *)(v454 + 40) = v452;
            v10 = (uint64_t *)((char *)v10 - 1);
            if (!--v7)
            {
              swift_unknownObjectRelease();
              v455 = v486;
              goto LABEL_500;
            }
          }
LABEL_563:
          __break(1u);
LABEL_564:
          v6 = MEMORY[0x1BCCB4394](v473, v307);
          goto LABEL_420;
        }
      }
    }
    v403 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v6)(v403);
    v404 = sub_1B8912AE0();
    v406 = v405;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((sub_1B8912BD0() & 1) != 0)
    {
      v407 = sub_1B8912B1C();
      v408 = sub_1B8878E44(v407, v404, v406);
      v410 = v409;
      v412 = v411;
      v414 = v413;
      swift_bridgeObjectRelease();
      v404 = MEMORY[0x1BCCB3F20](v408, v410, v412, v414);
      v416 = v415;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v406 = v416;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6028);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8915E60;
    *(_QWORD *)(inited + 32) = 26476;
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    *(_QWORD *)(inited + 48) = 6778732;
    *(_QWORD *)(inited + 56) = 0xE300000000000000;
    *(_QWORD *)(inited + 64) = 0x736F63637261;
    *(_QWORD *)(inited + 72) = 0xE600000000000000;
    *(_QWORD *)(inited + 80) = 1936679777;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    *(_QWORD *)(inited + 96) = 0x6E6973637261;
    *(_QWORD *)(inited + 104) = 0xE600000000000000;
    *(_QWORD *)(inited + 112) = 1852404577;
    *(_QWORD *)(inited + 120) = 0xE400000000000000;
    *(_QWORD *)(inited + 128) = 0x6E6174637261;
    *(_QWORD *)(inited + 136) = 0xE600000000000000;
    *(_QWORD *)(inited + 144) = 1851880545;
    *(_QWORD *)(inited + 152) = 0xE400000000000000;
    v418 = sub_1B8861CE0(inited);
    swift_bridgeObjectRetain();
    v419 = sub_1B88620B8(v404, v406, v418);
    v421 = v420;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v421)
    {
      swift_bridgeObjectRelease();
      v404 = v419;
      v406 = v421;
    }
    v422 = v489;
    swift_bridgeObjectRetain();
    v423 = swift_bridgeObjectRetain();
    v424 = sub_1B8873E2C(v423);
    swift_bridgeObjectRelease();
    if (v424 != 1)
      break;
    LOBYTE(v486) = *(_BYTE *)(v471 + 48);
    type metadata accessor for CalculateExpression.RichToken();
    v425 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v404, v406, (unsigned __int8 *)&v486, 0);
    v22 = v8;
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v425);
    swift_release();
    if ((v422 & 0xC000000000000001) != 0)
    {
      v426 = MEMORY[0x1BCCB4394](0, v422);
      goto LABEL_453;
    }
    if (*(_QWORD *)((v422 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v426 = *(_QWORD *)(v422 + 32);
      swift_retain();
LABEL_453:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 592))(v426, 3);
      swift_release();
      goto LABEL_464;
    }
    __break(1u);
LABEL_572:
    v12 = MEMORY[0x1BCCB4394](v473, v22);
LABEL_403:
    swift_bridgeObjectRelease();
    v374 = swift_bridgeObjectRetain();
    v375 = sub_1B8873E2C(v374);
    v376 = swift_bridgeObjectRelease();
    if (v375 > 0x7FFFFFFF)
      goto LABEL_575;
    if (v470 < (uint64_t)0xFFFFFFFF80000000 || v375 < (uint64_t)0xFFFFFFFF80000000)
      goto LABEL_576;
    if (v470 > 0x7FFFFFFF)
      goto LABEL_577;
    v6 = (uint64_t)v482;
    ((void (*)(uint64_t))v482)(v376);
    v377 = objc_allocWithZone((Class)CalculateError);
    v378 = (void *)sub_1B8912AB0();
    swift_bridgeObjectRelease();
    v379 = objc_msgSend(v377, sel_initIncorrectArguments_correctArguments_inFunction_, v375, v470, v378);

LABEL_437:
    v390 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v12 + 224))(&v486);
    v392 = v391;
    sub_1B8876CA4();
    v393 = *(_QWORD **)(*v392 + 16);
    sub_1B8876CEC(v393);
    v394 = *v392;
    *(_QWORD *)(v394 + 16) = (char *)v393 + 1;
    *(_QWORD *)(v394 + 8 * (_QWORD)v393 + 32) = v379;
    v390(&v486, 0);
    swift_release();
    *(_BYTE *)a3 = 1;
  }
  LOBYTE(v486) = *(_BYTE *)(v471 + 48);
  type metadata accessor for CalculateExpression.RichToken();
  v427 = swift_allocObject();
  v482 = (uint64_t (*)(void))v406;
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v404, v406, (unsigned __int8 *)&v486, 0);
  v428 = *(uint64_t (**)(void))(*(_QWORD *)v8 + 584);
  ((void (*)(uint64_t))v428)(v427);
  swift_release();
  LOBYTE(v486) = 15;
  v429 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
  v483 = v428;
  ((void (*)(uint64_t))v428)(v429);
  swift_release();
  v430 = swift_bridgeObjectRetain();
  v431 = sub_1B8873E2C(v430);
  if (!v431)
    goto LABEL_463;
  v432 = v431;
  a3 = *(uint64_t ***)(*(_QWORD *)v8 + 592);
  v433 = sub_1B8873E2C(v422);
  if (v432 < 1)
    goto LABEL_585;
  v434 = v433;
  for (i = 0; i != v432; ++i)
  {
    if ((v422 & 0xC000000000000001) != 0)
    {
      v436 = MEMORY[0x1BCCB4394](i, v422);
    }
    else
    {
      v436 = *(_QWORD *)(v422 + 8 * i + 32);
      swift_retain();
    }
    ((void (*)(uint64_t, _QWORD))a3)(v436, 0);
    if (i < v434)
    {
      LOBYTE(v486) = 11;
      v437 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
      ((void (*)(uint64_t))v483)(v437);
      swift_release();
    }
    swift_release();
  }
LABEL_463:
  swift_bridgeObjectRelease();
  LOBYTE(v486) = 16;
  v438 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
  ((void (*)(uint64_t))v483)(v438);
  swift_release();
LABEL_464:
  swift_bridgeObjectRelease();
LABEL_465:
  v12 = v481;
LABEL_191:
  if (!v12)
    goto LABEL_182;
LABEL_192:
  LOBYTE(v486) = 7;
  type metadata accessor for CalculateExpression.RichToken();
  v180 = swift_allocObject();
  swift_retain();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v486, 0);
  (*(void (**)(uint64_t))(*(_QWORD *)v8 + 584))(v180);
  v181 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v181 + 24) = v474;
  *(_BYTE *)(v181 + 28) = 1;
  *(_QWORD *)(v181 + 32) = 0;
  *(_QWORD *)(v181 + 40) = MEMORY[0x1E0DEE9D8];
  *(_WORD *)(v181 + 48) = 0;
  *(_BYTE *)(v181 + 50) = 0;
  v182 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v180 + 288))(v181);
  v183 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v180 + 280);
  v184 = v183(v182);
  if (v184)
  {
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)v184 + 592))(v12, 1);
    v184 = swift_release();
  }
  v185 = v183(v184);
  if (v185)
  {
    LOBYTE(v486) = 1;
    (*(void (**)(uint64_t *))(*(_QWORD *)v185 + 280))(&v486);
    swift_release();
  }
  swift_release();
  swift_release();
  if ((v475 & 1) != 0)
    goto LABEL_183;
LABEL_197:
  swift_bridgeObjectRelease();
LABEL_198:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1B886B058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1B89130A4();
    sub_1B8912B10();
    v6 = sub_1B89130BC();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1B8913050() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1B8913050() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1B886B18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a2 + 16)
    && (sub_1B88612A8(),
        v3 = sub_1B8912A74(),
        v4 = -1 << *(_BYTE *)(a2 + 32),
        v5 = v3 & ~v4,
        ((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    v6 = ~v4;
    sub_1B885DDA0();
    do
    {
      v7 = sub_1B8912AA4();
      if ((v7 & 1) != 0)
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

BOOL sub_1B886B274(uint64_t a1, uint64_t a2)
{
  char v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[72];

  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    v4 = sub_1B8912ED0();
    swift_release();
    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1B89130A4();
  (*(void (**)(_BYTE *))(*(_QWORD *)a1 + 168))(v14);
  v6 = sub_1B89130BC();
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = v6 & ~v7;
  v9 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v10 + 8 * v8) == a1)
    return 1;
  v11 = ~v7;
  v12 = (v8 + 1) & v11;
  if (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  do
  {
    v13 = *(_QWORD *)(v10 + 8 * v12);
    result = v13 == a1;
    if (v13 == a1)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_1B886B3A0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;

  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    v3 = sub_1B8912ED0();
    swift_release();
    return v3 & 1;
  }
  else
  {
    if (*(_QWORD *)(a2 + 16)
      && (type metadata accessor for CalculateExpression.Operation(),
          sub_1B8879EE4(&qword_1ED561AE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation), v5 = sub_1B8912A74(), v6 = -1 << *(_BYTE *)(a2 + 32), v7 = v5 & ~v6, ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
    {
      v8 = ~v6;
      sub_1B8879EE4((unint64_t *)&qword_1ED561AE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
      do
      {
        v9 = sub_1B8912AA4();
        if ((v9 & 1) != 0)
          break;
        v7 = (v7 + 1) & v8;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    else
    {
      v9 = 0;
    }
    return v9 & 1;
  }
}

uint64_t sub_1B886B504(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1B8912B34();
  return sub_1B8912BF4();
}

uint64_t sub_1B886B57C(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD **v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(unsigned __int8 *, _QWORD);
  uint64_t v18;
  uint64_t **v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  void (*v28)(unsigned __int8 *, _QWORD);
  id v29;
  uint64_t v30;
  unsigned __int8 v31[32];

  v4 = a2;
  v6 = *a2;
  sub_1B8878CF0(a1, a2);
  v7 = sub_1B886C4C4(a1, v4, a3, 1);
  if (((*(uint64_t (**)(void))(*(_QWORD *)v7 + 560))() & 1) == 0)
    goto LABEL_10;
  v8 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 256))();
  v9 = (_QWORD *)v8;
  v30 = v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v10 = *(_QWORD *)(v8 + 8 * v6 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_23;
  }
  v10 = MEMORY[0x1BCCB4394](v6, v8);
LABEL_6:
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
  v28 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v10 + 224))(v31);
  v7 = (uint64_t)v11;
  v9 = *v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v7 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_23:
    v9 = sub_1B8876D2C(0, v9[2] + 1, 1, v9);
    *(_QWORD *)v7 = v9;
  }
  v14 = v9[2];
  v13 = v9[3];
  if (v14 >= v13 >> 1)
  {
    v9 = sub_1B8876D2C((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
    *(_QWORD *)v7 = v9;
  }
  v7 = v30;
  v9[2] = v14 + 1;
  v9[v14 + 4] = v29;
  v28(v31, 0);
  swift_release();
LABEL_10:
  v15 = sub_1B886C4C4(a1, v4, a3, 1);
  if (((*(uint64_t (**)(void))(*(_QWORD *)v15 + 560))() & 1) == 0)
    goto LABEL_19;
  v16 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 256))();
  v17 = (void (*)(unsigned __int8 *, _QWORD))v16;
  if ((v16 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v18 = *(_QWORD *)(v16 + 8 * v6 + 32);
      swift_retain();
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_27;
  }
  v18 = MEMORY[0x1BCCB4394](v6, v16);
LABEL_15:
  swift_bridgeObjectRelease();
  v6 = (unint64_t)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
  v17 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v18 + 224))(v31);
  a3 = v19;
  v4 = *v19;
  v20 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v4;
  if ((v20 & 1) == 0)
  {
LABEL_27:
    v4 = sub_1B8876D2C(0, v4[2] + 1, 1, v4);
    *a3 = v4;
  }
  v22 = v4[2];
  v21 = v4[3];
  if (v22 >= v21 >> 1)
  {
    v4 = sub_1B8876D2C((_QWORD *)(v21 > 1), v22 + 1, 1, v4);
    *a3 = v4;
  }
  v4[2] = v22 + 1;
  v4[v22 + 4] = v6;
  v17(v31, 0);
  swift_release();
LABEL_19:
  type metadata accessor for CalculateExpression.RichExpression();
  v23 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v23 + 24) = 16777473;
  *(_BYTE *)(v23 + 28) = 1;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v23 + 32) = 0;
  *(_QWORD *)(v23 + 40) = v24;
  *(_WORD *)(v23 + 48) = 0;
  *(_BYTE *)(v23 + 50) = 0;
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v23 + 592);
  v25(v7, 1);
  v31[0] = 6;
  type metadata accessor for CalculateExpression.RichToken();
  v26 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v31, 0);
  (*(void (**)(uint64_t))(*(_QWORD *)v23 + 584))(v26);
  swift_release();
  v25(v15, 1);
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1B886B968(uint64_t a1, uint64_t *a2, uint64_t **a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t (*v11)(void);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD **v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD **v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  void (*v61)(char *, _QWORD);
  void (*v62)(char *, _QWORD);
  id v63;
  char v64;
  uint64_t (*v65)(void);
  _BYTE *v66;
  char v67[38];
  char v68;
  char v69;

  v6 = v3;
  v10 = *a2;
  v11 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 256);
  v12 = v11();
  if (v12 >> 62)
    v13 = sub_1B8912FD8();
  else
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = swift_bridgeObjectRelease();
  if ((uint64_t)v10 >= v13)
  {
LABEL_11:
    v19 = sub_1B886C4C4(a1, a2, a3, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v20 + 32) = v19;
    *(_QWORD *)v67 = v20;
    sub_1B8912CA8();
    return *(_QWORD *)v67;
  }
  v15 = ((uint64_t (*)(uint64_t))v11)(v14);
  v16 = v15;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(_QWORD *)(v15 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_60;
  }
  v17 = MEMORY[0x1BCCB4394](v10, v15);
LABEL_8:
  swift_bridgeObjectRelease();
  v18 = *(_BYTE *)(v17 + 48);
  swift_release();
  v67[0] = v18;
  if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
    goto LABEL_11;
  v65 = *(uint64_t (**)(void))(*(_QWORD *)v6 + 176);
  if (v65())
  {
    v17 = CalculateExpression.format.getter();
    swift_release();
    v4 = v17 == 1;
  }
  else
  {
    v4 = 0;
  }
  v22 = v11();
  v16 = v22;
  if ((v22 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(_QWORD *)(v22 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_63;
  }
LABEL_60:
  v23 = MEMORY[0x1BCCB4394](v10, v16);
LABEL_18:
  swift_bridgeObjectRelease();
  v24 = *(_BYTE *)(v23 + 48);
  swift_release();
  v67[0] = v24;
  v66 = a3;
  v64 = v4;
  if (v4 & 1 | ((CalculateExpression.TokenType.isLaTeX.getter() & 1) == 0))
    goto LABEL_27;
  *(_BYTE *)a3 = 1;
  v25 = v11();
  if ((v25 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v26 = *(_QWORD *)(v25 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_68;
  }
  v26 = MEMORY[0x1BCCB4394](v10, v25);
LABEL_23:
  swift_bridgeObjectRelease();
  v63 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0);
  v62 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v26 + 224))(v67);
  v4 = (unint64_t)v27;
  v5 = *v27;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v4 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_68:
    v5 = sub_1B8876D2C(0, v5[2] + 1, 1, v5);
    *(_QWORD *)v4 = v5;
  }
  v30 = v5[2];
  v29 = v5[3];
  if (v30 >= v29 >> 1)
  {
    v5 = sub_1B8876D2C((_QWORD *)(v29 > 1), v30 + 1, 1, v5);
    *(_QWORD *)v4 = v5;
  }
  v5[2] = v30 + 1;
  v5[v30 + 4] = v63;
  v62(v67, 0);
  swift_release();
  a3 = (uint64_t **)v66;
LABEL_27:
  sub_1B8878CF0(a1, a2);
  v17 = sub_1B886C1E4(a1, a2, (uint64_t)a3);
  v4 = *a2;
  v31 = v11();
  if (!(v31 >> 62))
  {
    v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_29;
  }
LABEL_63:
  v32 = sub_1B8912FD8();
LABEL_29:
  v33 = swift_bridgeObjectRelease();
  if ((uint64_t)v4 >= v32)
    goto LABEL_43;
  v34 = ((uint64_t (*)(uint64_t))v11)(v33);
  v35 = (_QWORD *)v34;
  if ((v34 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v36 = *(_QWORD *)(v34 + 8 * v4 + 32);
      swift_retain();
      goto LABEL_34;
    }
    __break(1u);
    goto LABEL_72;
  }
  v36 = MEMORY[0x1BCCB4394](v4, v34);
LABEL_34:
  swift_bridgeObjectRelease();
  v37 = *(_BYTE *)(v36 + 48);
  swift_release();
  v67[0] = v37;
  v33 = CalculateExpression.TokenType.isLaTeX.getter();
  if (v64 & 1 | ((v33 & 1) == 0))
    goto LABEL_43;
  *v66 = 1;
  v38 = v11();
  v35 = (_QWORD *)v38;
  v63 = (id)v17;
  if ((v38 & 0xC000000000000001) != 0)
    goto LABEL_93;
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_95;
  }
  if (v4 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v39 = *(_QWORD *)(v38 + 8 * v4 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    v62 = (void (*)(char *, _QWORD))objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0);
    v61 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v39 + 224))(v67);
    v41 = v40;
    v35 = *v40;
    v42 = swift_isUniquelyReferenced_nonNull_native();
    v60 = v41;
    *v41 = v35;
    if ((v42 & 1) == 0)
    {
LABEL_96:
      v35 = sub_1B8876D2C(0, v35[2] + 1, 1, v35);
      *v60 = v35;
    }
    v17 = (uint64_t)v63;
    v44 = v35[2];
    v43 = v35[3];
    v45 = v44 + 1;
    if (v44 >= v43 >> 1)
    {
      v59 = sub_1B8876D2C((_QWORD *)(v43 > 1), v44 + 1, 1, v35);
      v45 = v44 + 1;
      v35 = v59;
      *v60 = v59;
    }
    v35[2] = v45;
    v35[v44 + 4] = v62;
    v61(v67, 0);
    v33 = swift_release();
LABEL_43:
    v46 = ((uint64_t (*)(uint64_t))v11)(v33);
    if (v46 >> 62)
      v47 = sub_1B8912FD8();
    else
      v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v48 = swift_bridgeObjectRelease();
    if ((uint64_t)v4 >= v47)
      goto LABEL_76;
    v49 = ((uint64_t (*)(uint64_t))v11)(v48);
    v35 = (_QWORD *)v49;
    if ((v49 & 0xC000000000000001) != 0)
    {
LABEL_72:
      v4 = MEMORY[0x1BCCB4394](v4, v35);
      goto LABEL_50;
    }
    if ((v4 & 0x8000000000000000) != 0)
      break;
    if (v4 >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_74;
    v4 = *(_QWORD *)(v49 + 8 * v4 + 32);
    swift_retain();
LABEL_50:
    swift_bridgeObjectRelease();
    v50 = *(_BYTE *)(v4 + 48);
    swift_release();
    v69 = v50;
    CalculateExpression.TokenType.match.getter(v67);
    LODWORD(v47) = v67[0];
    v51 = v11();
    v35 = (_QWORD *)v51;
    if ((v51 & 0xC000000000000001) != 0)
      goto LABEL_75;
    if ((v10 & 0x8000000000000000) != 0)
      goto LABEL_91;
    if (v10 < *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v4 = *(_QWORD *)(v51 + 8 * v10 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      v52 = *(_BYTE *)(v4 + 48);
      swift_release();
      if ((_DWORD)v47 == 51)
        goto LABEL_76;
      goto LABEL_54;
    }
LABEL_92:
    __break(1u);
LABEL_93:
    v39 = MEMORY[0x1BCCB4394](v4, v35);
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  v4 = MEMORY[0x1BCCB4394](v10, v35);
  swift_bridgeObjectRelease();
  v52 = *(_BYTE *)(v4 + 48);
  swift_unknownObjectRelease();
  if ((_DWORD)v47 != 51)
  {
LABEL_54:
    v69 = v47;
    v68 = v52;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
    {
      sub_1B8878CF0(a1, a2);
      return v17;
    }
  }
LABEL_76:
  if (!v65())
    goto LABEL_83;
  v53 = CalculateExpression.allowPartialExpressions.getter();
  v54 = swift_release();
  if ((v53 & 1) == 0)
    goto LABEL_83;
  result = ((uint64_t (*)(uint64_t))v11)(v54);
  if ((result & 0xC000000000000001) != 0)
  {
    v55 = MEMORY[0x1BCCB4394](v10, result);
    goto LABEL_82;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (v10 >= *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_99;
    v55 = *(_QWORD *)(result + 8 * v10 + 32);
    swift_retain();
LABEL_82:
    swift_bridgeObjectRelease();
    v56 = *(_BYTE *)(v55 + 48);
    swift_release();
    v67[0] = v56;
    v69 = 15;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
      return v17;
LABEL_83:
    *v66 = 1;
    v57 = v11();
    v35 = (_QWORD *)v57;
    if ((v57 & 0xC000000000000001) != 0)
    {
      v58 = MEMORY[0x1BCCB4394](v10, v57);
      goto LABEL_87;
    }
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v58 = *(_QWORD *)(v57 + 8 * v10 + 32);
      swift_retain();
LABEL_87:
      swift_bridgeObjectRelease();
      sub_1B8878B14(v58);
      swift_release();
      return v17;
    }
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  __break(1u);
LABEL_99:
  __break(1u);
  return result;
}

uint64_t sub_1B886C1E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;

  v26 = MEMORY[0x1E0DEE9D8];
  ((void (*)(void))sub_1B886D250)();
  v6 = swift_retain();
  MEMORY[0x1BCCB40AC](v6);
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_26;
  while (1)
  {
    v7 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256);
    sub_1B8912CFC();
    v8 = sub_1B8912CA8();
    v9 = *a2;
    v10 = v7(v8);
    v11 = v10 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = swift_bridgeObjectRelease();
    if (v9 >= v11)
      break;
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v14 = v7(v12);
      if ((v14 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x1BCCB4394](v9, v14);
        goto LABEL_10;
      }
      if (v9 < 0)
        break;
      if ((unint64_t)v9 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_25;
      v15 = *(_QWORD *)(v14 + 8 * v9 + 32);
      swift_retain();
LABEL_10:
      swift_bridgeObjectRelease();
      v16 = *(_BYTE *)(v15 + 48);
      swift_release();
      v25 = v16;
      v24 = 11;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v25, &v24))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1B8876E4C(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v18 = *((_QWORD *)v13 + 2);
        v17 = *((_QWORD *)v13 + 3);
        if (v18 >= v17 >> 1)
          v13 = sub_1B8876E4C((char *)(v17 > 1), v18 + 1, 1, v13);
        *((_QWORD *)v13 + 2) = v18 + 1;
        *(_QWORD *)&v13[8 * v18 + 32] = v9;
        sub_1B8878CF0(a1, a2);
        swift_release();
        sub_1B886D250(a1, a2, a3);
        v19 = swift_retain();
        MEMORY[0x1BCCB40AC](v19);
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B8912CCC();
        sub_1B8912CFC();
        v20 = sub_1B8912CA8();
        v9 = *a2;
        v21 = v7(v20);
        v22 = v21 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        v12 = swift_bridgeObjectRelease();
        if (v9 < v22)
          continue;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1B8912CCC();
  }
LABEL_23:
  swift_release();
  return v26;
}

uint64_t sub_1B886C4C4(uint64_t a1, uint64_t *a2, uint64_t **a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  unsigned __int8 v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  _QWORD **v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD **v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  void (*v98)(unsigned __int8 *, _QWORD);
  id v99;
  uint64_t *v100;
  _BYTE *v101;
  unsigned __int8 v103[39];
  unsigned __int8 v104;

  v5 = v4;
  type metadata accessor for CalculateExpression.RichExpression();
  v9 = swift_allocObject();
  v10 = swift_weakInit();
  *(_DWORD *)(v9 + 24) = 16777473;
  *(_BYTE *)(v9 + 28) = 1;
  v11 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = v11;
  *(_WORD *)(v9 + 48) = 0;
  *(_BYTE *)(v9 + 50) = 0;
  v12 = *a2;
  v13 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 256);
  v14 = ((uint64_t (*)(uint64_t))v13)(v10);
  if (v14 >> 62)
    v15 = sub_1B8912FD8();
  else
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  v16 = swift_bridgeObjectRelease();
  if ((uint64_t)v12 >= v15)
    return v9;
  v17 = ((uint64_t (*)(uint64_t))v13)(v16);
  v18 = v17;
  if ((v17 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v19 = *(_QWORD *)(v17 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_100;
  }
  v19 = MEMORY[0x1BCCB4394](v12, v17);
LABEL_8:
  swift_bridgeObjectRelease();
  v20 = *(_BYTE *)(v19 + 48);
  swift_release();
  v103[0] = v20;
  v104 = 4;
  v101 = a3;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104))
    goto LABEL_18;
  v21 = v13();
  v18 = v21;
  if ((v21 & 0xC000000000000001) != 0)
    goto LABEL_103;
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_105;
  }
  if (v12 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  v22 = a2;
  v23 = *(_BYTE **)(v21 + 8 * v12 + 32);
  swift_retain();
  while (1)
  {
    v24 = swift_bridgeObjectRelease();
    v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 160))(v24);
    if (!v26)
      v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 136))(v25);
    v27 = v25;
    v28 = v26;
    v103[0] = v23[48];
    type metadata accessor for CalculateExpression.RichToken();
    v29 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v27, v28, v103, 0);
    swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 584))(v29);
    swift_release();
    a2 = v22;
    v30 = sub_1B8878CF0(a1, v22);
    v12 = *v22;
    v31 = ((uint64_t (*)(uint64_t))v13)(v30);
    if (v31 >> 62)
LABEL_106:
      v32 = sub_1B8912FD8();
    else
      v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    a3 = (uint64_t **)v101;
    swift_bridgeObjectRelease();
    if ((uint64_t)v12 >= v32)
      return v9;
LABEL_18:
    v33 = v13();
    v18 = v33;
    if ((v33 & 0xC000000000000001) != 0)
      break;
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v34 = *(_BYTE **)(v33 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_22;
    }
    __break(1u);
LABEL_103:
    v22 = a2;
    v23 = (_BYTE *)MEMORY[0x1BCCB4394](v12, v18);
  }
LABEL_100:
  v34 = (_BYTE *)MEMORY[0x1BCCB4394](v12, v18);
LABEL_22:
  swift_bridgeObjectRelease();
  v35 = v34[48];
  v103[0] = v35;
  if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
  {
    v103[0] = v35;
    v104 = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104))
    {
      v103[0] = 0;
      v50 = sub_1B8866EF0(a1, a2, a3, v103);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v9 + 592))(v50, 0);
      goto LABEL_48;
    }
    v103[0] = v35;
    v104 = 50;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104))
    {
      v52 = sub_1B886B57C(a1, a2, a3);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 592))(v52, 1);
LABEL_48:
      v51 = swift_release();
      if ((a4 & 1) != 0)
        goto LABEL_71;
      goto LABEL_114;
    }
    v103[0] = v35;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0)
    {
      v12 = (unint64_t)v34;
      v53 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 160);
      v54 = swift_retain();
      v55 = v53(v54);
      if (!v56)
        v55 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 136))(v55);
      v57 = v55;
      v58 = v56;
      v103[0] = v35;
      type metadata accessor for CalculateExpression.RichToken();
      v59 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(v57, v58, v103, 0);
      swift_release();
      v5 = *(_QWORD *)(*(_QWORD *)v9 + 584);
      ((void (*)(uint64_t))v5)(v59);
      swift_release();
      sub_1B8878CF0(a1, a2);
      v103[0] = *(_BYTE *)(v12 + 48);
      v104 = 1;
      v51 = static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104);
      if ((v51 & 1) != 0)
      {
        if ((a4 & 1) != 0)
          goto LABEL_71;
        v60 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 280))(*a2);
        if (v60)
        {
          v61 = v60;
          v62 = *(_BYTE *)(v60 + 48);
          v103[0] = v62;
          if ((CalculateExpression.TokenType.isConstant.getter() & 1) != 0
            || (v103[0] = v62, v104 = 14, static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104)))
          {
            v63 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 160);
            v64 = swift_retain();
            v65 = v63(v64);
            if (!v66)
              v65 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 136))(v65);
            v67 = v65;
            v68 = v66;
            v103[0] = v62;
            v69 = swift_allocObject();
            CalculateExpression.RichToken.init(text:type:isImplicit:)(v67, v68, v103, 0);
            swift_release();
            ((void (*)(uint64_t))v5)(v69);
            swift_release();
            sub_1B8878CF0(a1, a2);
          }
LABEL_95:
          swift_release();
        }
        goto LABEL_114;
      }
LABEL_70:
      if ((a4 & 1) != 0)
        goto LABEL_71;
      goto LABEL_114;
    }
    *(_BYTE *)a3 = 1;
    v70 = v13();
    v71 = (_QWORD *)v70;
    if ((v70 & 0xC000000000000001) == 0)
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v72 = *(_QWORD *)(v70 + 8 * v12 + 32);
        swift_retain();
        goto LABEL_66;
      }
      __break(1u);
      goto LABEL_134;
    }
    v72 = MEMORY[0x1BCCB4394](v12, v70);
LABEL_66:
    swift_bridgeObjectRelease();
    v99 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    v5 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v72 + 224))(v103);
    v12 = (unint64_t)v73;
    v71 = *v73;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v12 = v71;
    a3 = (uint64_t **)a2;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_67:
      v76 = v71[2];
      v75 = v71[3];
      if (v76 >= v75 >> 1)
      {
        v71 = sub_1B8876D2C((_QWORD *)(v75 > 1), v76 + 1, 1, v71);
        *(_QWORD *)v12 = v71;
      }
      v71[2] = v76 + 1;
      v71[v76 + 4] = v99;
      ((void (*)(unsigned __int8 *, _QWORD))v5)(v103, 0);
      v51 = swift_release();
      a2 = (uint64_t *)a3;
      goto LABEL_70;
    }
LABEL_134:
    v71 = sub_1B8876D2C(0, v71[2] + 1, 1, v71);
    *(_QWORD *)v12 = v71;
    goto LABEL_67;
  }
  v12 = sub_1B886B968(a1, a2, a3);
  v37 = v36;
  v38 = v12 >> 62;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v96 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v96 == 1)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      if (v38)
        goto LABEL_109;
      goto LABEL_35;
    }
  }
  else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    goto LABEL_108;
  }
  *v101 = 1;
  if (!v37[2])
    goto LABEL_108;
  v5 = v37[4];
  v39 = swift_bridgeObjectRelease();
  if (v5 < 0)
    goto LABEL_34;
  v37 = (_QWORD *)a1;
  v40 = ((uint64_t (*)(uint64_t))v13)(v39);
  v41 = (_QWORD *)v40;
  if ((v40 & 0xC000000000000001) != 0)
    goto LABEL_128;
  if ((unint64_t)v5 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_130;
  }
  v37 = *(_QWORD **)(v40 + 8 * v5 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    v98 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*v37 + 224))(v103);
    v5 = (uint64_t)v43;
    v41 = *v43;
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v5 = v41;
    v99 = v42;
    v100 = a2;
    if ((v44 & 1) == 0)
    {
LABEL_130:
      v41 = sub_1B8876D2C(0, v41[2] + 1, 1, v41);
      *(_QWORD *)v5 = v41;
    }
    v46 = v41[2];
    v45 = v41[3];
    if (v46 >= v45 >> 1)
    {
      v41 = sub_1B8876D2C((_QWORD *)(v45 > 1), v46 + 1, 1, v41);
      *(_QWORD *)v5 = v41;
    }
    v41[2] = v46 + 1;
    v41[v46 + 4] = v99;
    v98(v103, 0);
    swift_release();
    a2 = v100;
LABEL_34:
    if (v38)
    {
LABEL_109:
      if ((v12 & 0x8000000000000000) != 0)
        v37 = (_QWORD *)v12;
      else
        v37 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      v5 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (!v5)
      {
LABEL_113:
        v51 = swift_bridgeObjectRelease();
        if ((a4 & 1) == 0)
          goto LABEL_114;
        goto LABEL_71;
      }
    }
    else
    {
LABEL_35:
      v5 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v5)
        goto LABEL_113;
    }
    if (v5 < 1)
    {
      __break(1u);
LABEL_119:
      v41 = (_QWORD *)MEMORY[0x1BCCB4394](v38, v37);
      goto LABEL_78;
    }
    v47 = 0;
    v48 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)v9 + 592);
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v49 = MEMORY[0x1BCCB4394](v47, v12);
      }
      else
      {
        v49 = *(_QWORD *)(v12 + 8 * v47 + 32);
        swift_retain();
      }
      ++v47;
      v48(v49, 0);
      swift_release();
    }
    while (v5 != v47);
    v51 = swift_bridgeObjectRelease();
    if ((a4 & 1) == 0)
      goto LABEL_114;
LABEL_71:
    v38 = *a2;
    v77 = ((uint64_t (*)(uint64_t))v13)(v51);
    if (v77 >> 62)
      v78 = sub_1B8912FD8();
    else
      v78 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
    v79 = swift_bridgeObjectRelease();
    if ((uint64_t)v38 >= v78)
      goto LABEL_86;
    v80 = ((uint64_t (*)(uint64_t))v13)(v79);
    v37 = (_QWORD *)v80;
    if ((v80 & 0xC000000000000001) != 0)
      goto LABEL_119;
    if ((v38 & 0x8000000000000000) != 0)
      break;
    if (v38 >= *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_121;
    v41 = *(_QWORD **)(v80 + 8 * v38 + 32);
    swift_retain();
LABEL_78:
    swift_bridgeObjectRelease();
    v81 = *((_BYTE *)v41 + 48);
    swift_release();
    v103[0] = v81;
    v104 = 8;
    v79 = static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104);
    if ((v79 & 1) == 0)
      goto LABEL_86;
    v82 = v13();
    v37 = (_QWORD *)v82;
    if ((v82 & 0xC000000000000001) != 0)
      goto LABEL_125;
    if ((v38 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v38 < *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v83 = *(_BYTE **)(v82 + 8 * v38 + 32);
      swift_retain();
      while (1)
      {
        v84 = swift_bridgeObjectRelease();
        v85 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v83 + 160))(v84);
        if (!v86)
          v85 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v83 + 136))(v85);
        v87 = v85;
        v88 = v86;
        v103[0] = v83[48];
        type metadata accessor for CalculateExpression.RichToken();
        v89 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(v87, v88, v103, 0);
        swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v9 + 584))(v89);
        swift_release();
        v79 = sub_1B8878CF0(a1, a2);
LABEL_86:
        v38 = *a2;
        v90 = ((uint64_t (*)(uint64_t))v13)(v79);
        v91 = v90 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
        v92 = swift_bridgeObjectRelease();
        if ((uint64_t)v38 >= v91)
          goto LABEL_114;
        v93 = ((uint64_t (*)(uint64_t))v13)(v92);
        v37 = (_QWORD *)v93;
        if ((v93 & 0xC000000000000001) != 0)
          goto LABEL_122;
        if ((v38 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v38 < *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v94 = *(_QWORD *)(v93 + 8 * v38 + 32);
          swift_retain();
          goto LABEL_93;
        }
        __break(1u);
LABEL_125:
        v83 = (_BYTE *)MEMORY[0x1BCCB4394](v38, v37);
      }
    }
    __break(1u);
LABEL_128:
    v37 = (_QWORD *)MEMORY[0x1BCCB4394](v5, v41);
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  v94 = MEMORY[0x1BCCB4394](v38, v37);
LABEL_93:
  swift_bridgeObjectRelease();
  v95 = *(_BYTE *)(v94 + 48);
  swift_release();
  v103[0] = v95;
  v104 = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v103, &v104))
  {
    sub_1B886D0F0(a1, a2, (uint64_t)v101);
    (*(void (**)(void))(*(_QWORD *)v9 + 584))();
    goto LABEL_95;
  }
LABEL_114:
  swift_release();
  return v9;
}

uint64_t sub_1B886D0F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v15;
  unsigned __int8 v16;

  sub_1B8878CF0(a1, a2);
  v6 = sub_1B886C4C4(a1, a2, a3, 1);
  v16 = 7;
  type metadata accessor for CalculateExpression.RichToken();
  v7 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, &v16, 0);
  type metadata accessor for CalculateExpression.RichExpression();
  v8 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v8 + 24) = 16777473;
  *(_BYTE *)(v8 + 28) = 1;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = v9;
  *(_WORD *)(v8 + 48) = 0;
  *(_BYTE *)(v8 + 50) = 0;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 288))(v8);
  v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 280);
  v12 = v11(v10);
  if (v12)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 592))(v6, 1);
    v12 = swift_release();
  }
  v13 = v11(v12);
  if (v13)
  {
    v15 = 1;
    (*(void (**)(char *))(*(_QWORD *)v13 + 280))(&v15);
    swift_release();
  }
  swift_release();
  return v7;
}

uint64_t sub_1B886D250(uint64_t a1, unint64_t *a2, uint64_t **a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void (*v32)(char *, _QWORD);
  _QWORD **v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void (*v42)(char *, _QWORD);
  _QWORD **v43;
  _QWORD *v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void (*v55)(char *, _QWORD);
  uint64_t *v56;
  uint64_t *v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  id v65;
  void (*v66)(char *, _QWORD);
  _QWORD **v67;
  _QWORD *v68;
  _QWORD *v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void (*v78)(char *, _QWORD);
  uint64_t *v79;
  uint64_t *v80;
  _QWORD *v81;
  uint64_t v82;
  id v83;
  void (*v84)(char *, _QWORD);
  uint64_t *v85;
  uint64_t *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  id v94;
  void (*v95)(char *, _QWORD);
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  uint64_t v104;
  int v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  BOOL v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  void *v138;
  unint64_t v139;
  Swift::String v140;
  CalculateResult_optional *v141;
  void *v142;
  void *v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(void);
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  uint64_t (*v158)(unint64_t);
  uint64_t v159;
  char v160;
  uint64_t v161;
  char v162;
  uint64_t result;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  void (*v169)(char *, _QWORD);
  uint64_t *v170;
  uint64_t *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  id v181;
  void (*v182)(char *, _QWORD);
  uint64_t *v183;
  uint64_t *v184;
  _QWORD *v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  char v191;
  uint64_t (*v192)(uint64_t);
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  void *v203;
  id v204;
  void (*v205)(char *, _QWORD);
  uint64_t *v206;
  uint64_t *v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t *__return_ptr);
  uint64_t (*v212)(uint64_t);
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  char v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  uint64_t inited;
  char v233;
  id v234;
  uint64_t (*v235)(char *, _QWORD);
  uint64_t *v236;
  uint64_t *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  id v242;
  uint64_t (*v243)(char *, _QWORD);
  uint64_t *v244;
  uint64_t *v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  void (*v251)(char *, _QWORD);
  uint64_t *v252;
  uint64_t *v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t **v262;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t (*v267)(unint64_t);
  uint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  id v272;
  void (*v273)(char *, _QWORD);
  _QWORD **v274;
  _QWORD *v275;
  _QWORD *v276;
  char v277;
  unint64_t v278;
  unint64_t v279;
  __int128 v280;
  BOOL v281;
  uint64_t v282;
  uint64_t (*v283)(uint64_t);
  uint64_t v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t (*v288)(uint64_t);
  uint64_t *v289;
  _BYTE *v290;
  _BOOL4 v292;
  int v293;
  uint64_t v294;
  int v295;
  char v296[38];
  uint64_t v297;

  type metadata accessor for CalculateExpression.RichExpression();
  v6 = swift_allocObject();
  v7 = swift_weakInit();
  *(_DWORD *)(v6 + 24) = 16777473;
  *(_BYTE *)(v6 + 28) = 1;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  *(_WORD *)(v6 + 48) = 0;
  v286 = v3;
  v287 = v6;
  *(_BYTE *)(v6 + 50) = 0;
  BYTE1(v297) = 0;
  v283 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 176);
  v9 = v283(v7);
  if (v9)
  {
    v10 = CalculateExpression.format.getter();
    v9 = swift_release();
    v292 = v10 == 1;
  }
  else
  {
    v292 = 0;
  }
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 256);
  v12 = *a2;
  v13 = ((uint64_t (*)(uint64_t))v11)(v9);
  if (v13 >> 62)
LABEL_334:
    v14 = sub_1B8912FD8();
  else
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  v15 = swift_bridgeObjectRelease();
  v288 = (uint64_t (*)(uint64_t))v11;
  if ((uint64_t)v12 >= v14)
  {
    v16 = -1;
    LOBYTE(v293) = 15;
    v294 = MEMORY[0x1E0DEE9D8];
LABEL_281:
    if (v283(v15))
    {
      v18 = CalculateExpression.allowPartialExpressions.getter();
      swift_release();
    }
    else
    {
      v18 = 0;
    }
    v257 = *(char **)(v294 + 16);
    if (!v257)
    {
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        return v287;
LABEL_297:
      v296[0] = v293;
      if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0)
        return v287;
      v296[0] = v293;
      if ((CalculateExpression.TokenType.isPostfixOperator.getter() & 1) != 0)
        return v287;
      v296[0] = v293;
      LOBYTE(v297) = 7;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) != 0)
        return v287;
      v260 = ((uint64_t (*)(void))v11)();
      v18 = v260;
      if ((v260 & 0xC000000000000001) == 0)
      {
        if (v16 < 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v16 < *(_QWORD *)((v260 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v261 = *(_QWORD *)(v260 + 8 * v16 + 32);
          swift_retain();
          goto LABEL_304;
        }
        __break(1u);
        goto LABEL_350;
      }
LABEL_347:
      v261 = MEMORY[0x1BCCB4394](v16, v18);
LABEL_304:
      swift_bridgeObjectRelease();
      v18 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1004, 0);
      v257 = (char *)(*(uint64_t (**)(char *))(*(_QWORD *)v261 + 224))(v296);
      v11 = (unint64_t)v262;
      a2 = *v262;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v11 = a2;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
LABEL_305:
        v265 = a2[2];
        v264 = a2[3];
        if (v265 >= v264 >> 1)
        {
          a2 = sub_1B8876D2C((_QWORD *)(v264 > 1), v265 + 1, 1, a2);
          *(_QWORD *)v11 = a2;
        }
        a2[2] = v265 + 1;
        a2[v265 + 4] = v18;
        ((void (*)(char *, _QWORD))v257)(v296, 0);
        goto LABEL_319;
      }
LABEL_350:
      a2 = sub_1B8876D2C(0, a2[2] + 1, 1, a2);
      *(_QWORD *)v11 = a2;
      goto LABEL_305;
    }
    v12 = v16;
    a2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    v16 = 15;
    while (1)
    {
      v11 = *(a2 - 1);
      if ((v18 & 1) == 0)
        break;
      v296[0] = *(_BYTE *)a2;
      LOBYTE(v297) = 15;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) == 0)
        break;
      a2 += 2;
      if (!--v257)
      {
        swift_bridgeObjectRelease_n();
        return v287;
      }
    }
    v258 = swift_bridgeObjectRelease_n();
    *(_BYTE *)a3 = 1;
    v259 = v288(v258);
    v21 = v259;
    if ((v259 & 0xC000000000000001) == 0)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v11 < *(_QWORD *)((v259 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v16 = v12;
        v257 = *(char **)(v259 + 8 * v11 + 32);
        swift_retain();
        goto LABEL_294;
      }
      __break(1u);
LABEL_346:
      __break(1u);
      goto LABEL_347;
    }
LABEL_343:
    v257 = (char *)MEMORY[0x1BCCB4394](v11, v21);
    v16 = v12;
LABEL_294:
    swift_bridgeObjectRelease();
    sub_1B8878B14((uint64_t)v257);
    swift_release();
    v11 = (unint64_t)v288;
    if ((v18 & 1) != 0)
      return v287;
    goto LABEL_297;
  }
  v295 = 0;
  v281 = 0;
  v285 = 0;
  v16 = -1;
  v280 = xmmword_1B8915E70;
  v293 = 15;
  v294 = MEMORY[0x1E0DEE9D8];
  v284 = a1;
  v289 = (uint64_t *)a2;
  while (1)
  {
    v17 = ((uint64_t (*)(uint64_t))v11)(v15);
    LOBYTE(v18) = v17;
    if ((v17 & 0xC000000000000001) != 0)
    {
      v19 = (_BYTE *)MEMORY[0x1BCCB4394](v12, v17);
    }
    else
    {
      if ((v12 & 0x8000000000000000) != 0)
        goto LABEL_322;
      if (v12 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_323;
      v19 = *(_BYTE **)(v17 + 8 * v12 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v20 = v19[48];
    v296[0] = v20;
    if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
      break;
    if ((v295 & 1) != 0)
    {
      v296[0] = v20;
      LOBYTE(v297) = 21;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        if (BYTE1(v297) != 1)
        {
          BYTE1(v297) = 1;
          goto LABEL_77;
        }
        *(_BYTE *)a3 = 1;
        v21 = a1;
        v22 = ((uint64_t (*)(void))v11)();
        LOBYTE(v18) = v22;
        if ((v22 & 0xC000000000000001) != 0)
        {
          v23 = MEMORY[0x1BCCB4394](v12, v22);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_339;
          if (v12 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_340;
          v23 = *(_QWORD *)(v22 + 8 * v12 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v24 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0, v280);
        goto LABEL_50;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v25 = (char *)v294;
    else
      v25 = sub_1B8876F44(0, *(_QWORD *)(v294 + 16) + 1, 1, (char *)v294);
    v27 = *((_QWORD *)v25 + 2);
    v26 = *((_QWORD *)v25 + 3);
    if (v27 >= v26 >> 1)
      v25 = sub_1B8876F44((char *)(v26 > 1), v27 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27 + 1;
    v294 = (uint64_t)v25;
    v28 = &v25[16 * v27];
    *((_QWORD *)v28 + 4) = v12;
    v28[40] = v20;
    if (v292)
    {
      v296[0] = v20;
      LOBYTE(v297) = 23;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)
        || (v296[0] = v20,
            LOBYTE(v297) = 21,
            static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)))
      {
        *(_BYTE *)a3 = 1;
        v29 = ((uint64_t (*)(void))v11)();
        if ((v29 & 0xC000000000000001) != 0)
        {
          v30 = MEMORY[0x1BCCB4394](v12, v29);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_326;
          if (v12 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_327;
          v30 = *(_QWORD *)(v29 + 8 * v12 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v31 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0);
        v32 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v30 + 224))(v296);
        v34 = v33;
        v35 = *v33;
        v36 = swift_isUniquelyReferenced_nonNull_native();
        *v34 = v35;
        v37 = v16;
        if ((v36 & 1) == 0)
        {
          v35 = sub_1B8876D2C(0, v35[2] + 1, 1, v35);
          *v34 = v35;
        }
        v39 = v35[2];
        v38 = v35[3];
        if (v39 >= v38 >> 1)
        {
          v35 = sub_1B8876D2C((_QWORD *)(v38 > 1), v39 + 1, 1, v35);
          *v34 = v35;
        }
        a1 = v284;
        v35[2] = v39 + 1;
        v35[v39 + 4] = v31;
        v32(v296, 0);
        swift_release();
        v11 = (unint64_t)v288;
        a2 = (unint64_t *)v289;
        goto LABEL_84;
      }
    }
    if ((v285 & 1) != 0)
    {
      v40 = ((uint64_t (*)(void))v11)();
      if ((v40 & 0xC000000000000001) != 0)
      {
        v23 = MEMORY[0x1BCCB4394](v12, v40);
      }
      else
      {
        if ((v12 & 0x8000000000000000) != 0)
          goto LABEL_332;
        if (v12 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_333;
        v23 = *(_QWORD *)(v40 + 8 * v12 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v24 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0, v280);
LABEL_50:
      v41 = v24;
      v42 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v23 + 224))(v296);
      v44 = v43;
      v45 = *v43;
      v46 = swift_isUniquelyReferenced_nonNull_native();
      *v44 = v45;
      v47 = v16;
      if ((v46 & 1) == 0)
      {
        v45 = sub_1B8876D2C(0, v45[2] + 1, 1, v45);
        *v44 = v45;
      }
      v49 = v45[2];
      v48 = v45[3];
      if (v49 >= v48 >> 1)
      {
        v45 = sub_1B8876D2C((_QWORD *)(v48 > 1), v49 + 1, 1, v45);
        *v44 = v45;
      }
      a1 = v284;
      v45[2] = v49 + 1;
      v45[v49 + 4] = v41;
      v42(v296, 0);
      swift_release();
      v11 = (unint64_t)v288;
      a2 = (unint64_t *)v289;
      v16 = v47;
    }
LABEL_77:
    if (!v292)
    {
      v296[0] = v19[48];
      if ((CalculateExpression.TokenType.isLaTeX.getter() & 1) != 0)
      {
        *(_BYTE *)a3 = 1;
        v65 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0);
        v66 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
        v68 = v67;
        v69 = *v67;
        v70 = swift_isUniquelyReferenced_nonNull_native();
        *v68 = v69;
        v37 = v16;
        if ((v70 & 1) == 0)
        {
          v69 = sub_1B8876D2C(0, v69[2] + 1, 1, v69);
          *v68 = v69;
        }
        v72 = v69[2];
        v71 = v69[3];
        if (v72 >= v71 >> 1)
        {
          v69 = sub_1B8876D2C((_QWORD *)(v71 > 1), v72 + 1, 1, v69);
          *v68 = v69;
        }
        a2 = (unint64_t *)v289;
        v69[2] = v72 + 1;
        v69[v72 + 4] = v65;
        v66(v296, 0);
        v11 = (unint64_t)v288;
LABEL_84:
        v16 = v37;
      }
    }
    v296[0] = v19[48];
    v73 = v296[0];
    LOBYTE(v297) = 17;
    sub_1B885DDA0();
    v295 &= sub_1B8912AA4();
    v296[0] = v73;
    LOBYTE(v297) = 17;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      goto LABEL_86;
    v296[0] = v73;
    LOBYTE(v297) = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
    {
      if ((v285 & 1) != 0)
      {
        v74 = ((uint64_t (*)(void))v11)();
        if ((v74 & 0xC000000000000001) != 0)
        {
          v75 = v16;
          v76 = MEMORY[0x1BCCB4394](v12, v74);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_328;
          if (v12 >= *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_329;
          v75 = v16;
          v76 = *(_QWORD *)(v74 + 8 * v12 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v77 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
        v78 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v76 + 224))(v296);
        v80 = v79;
        sub_1B8876CA4();
        v81 = *(_QWORD **)(*v80 + 16);
        sub_1B8876CEC(v81);
        v82 = *v80;
        *(_QWORD *)(v82 + 16) = (char *)v81 + 1;
        *(_QWORD *)(v82 + 8 * (_QWORD)v81 + 32) = v77;
        v78(v296, 0);
        swift_release();
        v16 = v75;
        a2 = (unint64_t *)v289;
      }
      sub_1B8866EF0(a1, a2, a3, (uint64_t (*)(uint64_t))((char *)&v297 + 1));
      goto LABEL_95;
    }
    v296[0] = v73;
    LOBYTE(v297) = 7;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
    {
      if ((v285 & 1) != 0)
      {
        v296[0] = v293;
        LOBYTE(v297) = 19;
        if ((sub_1B8912AA4() & 1) == 0)
        {
          v83 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
          v84 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
          v86 = v85;
          sub_1B8876CA4();
          v87 = *(_QWORD **)(*v86 + 16);
          sub_1B8876CEC(v87);
          v88 = *v86;
          *(_QWORD *)(v88 + 16) = (char *)v87 + 1;
          v89 = v88 + 8 * (_QWORD)v87;
          a2 = (unint64_t *)v289;
          *(_QWORD *)(v89 + 32) = v83;
          v84(v296, 0);
        }
      }
      v90 = sub_1B886D0F0(a1, (uint64_t *)a2, (uint64_t)a3);
      v91 = (*(uint64_t (**)(void))(*(_QWORD *)v287 + 584))();
      v92 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v90 + 280))(v91);
      if (!v92
        || (v93 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v92 + 560))(v92), swift_release(), (v93 & 1) != 0))
      {
        *(_BYTE *)a3 = 1;
        v94 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1004, 0);
        v95 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
        v97 = v96;
        sub_1B8876CA4();
        v98 = v16;
        v99 = *(_QWORD **)(*v97 + 16);
        sub_1B8876CEC(v99);
        v100 = *v97;
        *(_QWORD *)(v100 + 16) = (char *)v99 + 1;
        v101 = v100 + 8 * (_QWORD)v99;
        v16 = v98;
        *(_QWORD *)(v101 + 32) = v94;
        v95(v296, 0);
        a2 = (unint64_t *)v289;
      }
      goto LABEL_103;
    }
    v296[0] = v73;
    LOBYTE(v297) = 36;
    v290 = v19;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      goto LABEL_116;
    v296[0] = v73;
    LOBYTE(v297) = 38;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)
      || (v296[0] = v73,
          LOBYTE(v297) = 44,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      || (v296[0] = v73,
          LOBYTE(v297) = 46,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      || (v296[0] = v73,
          LOBYTE(v297) = 48,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)))
    {
LABEL_116:
      v18 = sub_1B886C4C4(a1, (uint64_t *)a2, a3, 1);
      if (!*(_QWORD *)(v294 + 16))
        goto LABEL_330;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v108 = (char *)v294;
        v109 = *(_QWORD *)(v294 + 16);
        if (!v109)
          goto LABEL_331;
      }
      else
      {
        v108 = sub_1B8878374(v294);
        v109 = *((_QWORD *)v108 + 2);
        if (!v109)
          goto LABEL_331;
      }
      v294 = (uint64_t)v108;
      *((_QWORD *)v108 + 2) = v109 - 1;
      v296[0] = v73;
      LOBYTE(v297) = 36;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)
        || (v296[0] = v73,
            LOBYTE(v297) = 44,
            static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)))
      {
        v110 = 0xE400000000000000;
        v21 = 1818846563;
      }
      else
      {
        v21 = 0x726F6F6C66;
        v296[0] = v73;
        LOBYTE(v297) = 38;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
        {
          v110 = 0xE500000000000000;
        }
        else
        {
          v296[0] = v73;
          LOBYTE(v297) = 46;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
          {
            v110 = 0xE500000000000000;
          }
          else
          {
            v21 = 7561825;
            v110 = 0xE300000000000000;
          }
        }
      }
      if (v292)
      {
        v296[0] = 10;
        type metadata accessor for CalculateExpression.RichToken();
        v111 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(v21, v110, (unsigned __int8 *)v296, 0);
        v112 = v18;
        v113 = *(void (**)(uint64_t))(*(_QWORD *)v287 + 584);
        v113(v111);
        swift_release();
        v296[0] = 15;
        v114 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v296, 0);
        v113(v114);
        swift_release();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v287 + 592))(v112, 0);
        v296[0] = 16;
        a2 = (unint64_t *)v289;
        v115 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v296, 0);
        v11 = (unint64_t)v288;
        v113(v115);
        swift_release();
        swift_release();
        a1 = v284;
      }
      else
      {
        v116 = swift_bridgeObjectRelease();
        v117 = *a2;
        if ((uint64_t)*a2 < (uint64_t)v12)
          goto LABEL_341;
        v282 = v16;
        v21 = ((uint64_t (*)(uint64_t))v11)(v116);
        sub_1B8877038(v12, v21);
        sub_1B8877038(v117, v21);
        a2 = (unint64_t *)sub_1B8877464(v12, v117, v21);
        v119 = v118;
        v16 = v120;
        v122 = v121;
        swift_bridgeObjectRelease();
        v18 = v122 >> 1;
        v123 = __OFSUB__(v122 >> 1, v16);
        a1 = (v122 >> 1) - v16;
        if (v123)
          goto LABEL_342;
        if (a1)
        {
          *(_QWORD *)v296 = MEMORY[0x1E0DEE9D8];
          sub_1B8873DC8(a1);
          if (a1 < 0)
            goto LABEL_346;
          if (v16 <= v18)
            v124 = v18;
          else
            v124 = v16;
          v125 = v124 - v16;
          v11 = v119 + 8 * v16;
          while (v125)
          {
            v126 = *(uint64_t (**)(uint64_t))(**(_QWORD **)v11 + 136);
            v127 = swift_retain();
            v128 = v126(v127);
            v130 = v129;
            swift_release();
            sub_1B8877560();
            v131 = *(_QWORD *)v296;
            v133 = *(_QWORD *)(*(_QWORD *)v296 + 16);
            v132 = *(_QWORD *)(*(_QWORD *)v296 + 24);
            if (v133 >= v132 >> 1)
            {
              sub_1B88775D0((char *)(v132 > 1), v133 + 1, 1);
              v131 = *(_QWORD *)v296;
            }
            *(_QWORD *)(v131 + 16) = v133 + 1;
            v134 = v131 + 16 * v133;
            *(_QWORD *)(v134 + 32) = v128;
            *(_QWORD *)(v134 + 40) = v130;
            --v125;
            v11 += 8;
            --a1;
            v19 = v290;
            if (!a1)
            {
              swift_unknownObjectRelease();
              v135 = *(_QWORD *)v296;
              v11 = (unint64_t)v288;
              goto LABEL_140;
            }
          }
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
          goto LABEL_334;
        }
        swift_unknownObjectRelease();
        v135 = MEMORY[0x1E0DEE9D8];
LABEL_140:
        v16 = v282;
        *(_QWORD *)v296 = v135;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B38);
        sub_1B887A014(&qword_1ED561B40, &qword_1ED561B38, MEMORY[0x1E0DEAF20]);
        v136 = sub_1B8912A98();
        v138 = v137;
        swift_bridgeObjectRelease();
        v139 = sub_1B88B0038();
        v140._countAndFlagsBits = v136;
        v140._object = v138;
        evaluate(_:options:)(v141, v140, (Swift::OpaquePointer)v139);
        v143 = v142;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v143)
        {
          type metadata accessor for CalculateExpression.CustomOperandOperation();
          v144 = v143;
          CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v144);
          v146 = v145;
          v147 = (*(uint64_t (**)(void))(*(_QWORD *)v145 + 128))();
          if ((v147 & 1) != 0)
          {
            v296[0] = 4;
            type metadata accessor for CalculateExpression.RichToken();
            v148 = swift_allocObject();
            CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v296, 0);
            (*(void (**)(uint64_t))(*(_QWORD *)v287 + 584))(v148);
            v147 = swift_release();
          }
          (*(void (**)(uint64_t))(*(_QWORD *)v146 + 120))(v147);
          (*(void (**)(void))(*(_QWORD *)v287 + 584))();
          swift_release();
          swift_release();
          swift_release();

        }
        else
        {
          swift_release();
          *(_BYTE *)a3 = 1;
        }
        a1 = v284;
        a2 = (unint64_t *)v289;
      }
    }
    else
    {
      v296[0] = v73;
      LOBYTE(v297) = 20;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        v149 = *(uint64_t (**)(void))(*(_QWORD *)v19 + 136);
        if (v149() == 0x6D726874616D5CLL && v150 == 0xE700000000000000)
          goto LABEL_152;
        v151 = sub_1B8913050();
        v152 = swift_bridgeObjectRelease();
        if ((v151 & 1) != 0)
          goto LABEL_174;
        if (((uint64_t (*)(uint64_t))v149)(v152) == 0x747865745CLL && v153 == 0xE500000000000000)
        {
LABEL_152:
          swift_bridgeObjectRelease();
          goto LABEL_174;
        }
        v154 = sub_1B8913050();
        swift_bridgeObjectRelease();
        if ((v154 & 1) != 0)
          goto LABEL_174;
      }
      v296[0] = v19[48];
      LOBYTE(v297) = 20;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        if ((*(uint64_t (**)(void))(*(_QWORD *)v19 + 136))() == 0x726F6C6F635CLL && v155 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_165:
          sub_1B8878CF0(a1, (uint64_t *)a2);
          v157 = *a2;
          v158 = *(uint64_t (**)(unint64_t))(*(_QWORD *)a1 + 280);
          v159 = v158(*a2);
          if (v159)
          {
            v160 = *(_BYTE *)(v159 + 48);
            swift_release();
            v296[0] = v160;
            LOBYTE(v297) = 21;
            if ((sub_1B8912AA4() & 1) != 0)
            {
              sub_1B8878CF0(a1, (uint64_t *)a2);
              sub_1B8878CF0(a1, (uint64_t *)a2);
              v161 = v158(*a2);
              if (!v161
                || (v162 = *(_BYTE *)(v161 + 48),
                    swift_release(),
                    v296[0] = v162,
                    LOBYTE(v297) = 22,
                    (sub_1B8912AA4() & 1) == 0))
              {
                *(_BYTE *)a3 = 1;
                result = ((uint64_t (*)(void))v11)();
                if ((result & 0xC000000000000001) != 0)
                {
                  v164 = MEMORY[0x1BCCB4394](v157, result);
                }
                else
                {
                  if ((v157 & 0x8000000000000000) != 0)
                    goto LABEL_355;
                  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v157)
                    goto LABEL_356;
                  v164 = *(_QWORD *)(result + 8 * v157 + 32);
                  swift_retain();
                }
                swift_bridgeObjectRelease();
                sub_1B8878B14(v164);
                swift_release();
              }
LABEL_174:
              sub_1B8878CF0(a1, (uint64_t *)a2);
            }
          }
          v295 = 1;
          goto LABEL_104;
        }
        v156 = sub_1B8913050();
        swift_bridgeObjectRelease();
        if ((v156 & 1) != 0)
          goto LABEL_165;
      }
      v165 = v19[48];
      v296[0] = v165;
      LOBYTE(v297) = 50;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        if ((v285 & 1) != 0)
        {
          result = ((uint64_t (*)(void))v11)();
          if ((result & 0xC000000000000001) != 0)
          {
            v166 = v16;
            v167 = MEMORY[0x1BCCB4394](v12, result);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_352:
              __break(1u);
LABEL_353:
              __break(1u);
LABEL_354:
              __break(1u);
LABEL_355:
              __break(1u);
LABEL_356:
              __break(1u);
LABEL_357:
              __break(1u);
LABEL_358:
              __break(1u);
LABEL_359:
              __break(1u);
LABEL_360:
              __break(1u);
LABEL_361:
              __break(1u);
LABEL_362:
              __break(1u);
LABEL_363:
              __break(1u);
              return result;
            }
            if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
              goto LABEL_352;
            v166 = v16;
            v167 = *(_QWORD *)(result + 8 * v12 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          v168 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
          v169 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v167 + 224))(v296);
          v171 = v170;
          sub_1B8876CA4();
          v172 = *(_QWORD **)(*v171 + 16);
          sub_1B8876CEC(v172);
          v173 = *v171;
          *(_QWORD *)(v173 + 16) = (char *)v172 + 1;
          *(_QWORD *)(v173 + 8 * (_QWORD)v172 + 32) = v168;
          v169(v296, 0);
          swift_release();
          v16 = v166;
          a2 = (unint64_t *)v289;
        }
        sub_1B886B57C(a1, (uint64_t *)a2, a3);
LABEL_95:
        (*(void (**)(void))(*(_QWORD *)v287 + 592))();
LABEL_103:
        swift_release();
        goto LABEL_104;
      }
      v296[0] = v165;
      LOBYTE(v297) = 40;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        if (v12)
        {
          *(_BYTE *)a3 = 1;
          result = ((uint64_t (*)(void))v11)();
          v174 = result;
          if ((result & 0xC000000000000001) == 0)
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_353;
            if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
              goto LABEL_354;
            goto LABEL_206;
          }
LABEL_276:
          v178 = v16;
          v179 = MEMORY[0x1BCCB4394](v12, v174);
          goto LABEL_207;
        }
        v285 = 1;
LABEL_86:
        sub_1B8878CF0(a1, (uint64_t *)a2);
        goto LABEL_104;
      }
      v296[0] = v165;
      LOBYTE(v297) = 41;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        v175 = ((uint64_t (*)(void))v11)();
        v176 = sub_1B8873E2C(v175);
        result = swift_bridgeObjectRelease();
        if (__OFSUB__(v176, 1))
          goto LABEL_357;
        if (v12 == v176 - 1)
        {
          v285 = 0;
          goto LABEL_86;
        }
        *(_BYTE *)a3 = 1;
        result = ((uint64_t (*)(uint64_t))v11)(result);
        v174 = result;
        if ((result & 0xC000000000000001) != 0)
          goto LABEL_276;
        if ((v12 & 0x8000000000000000) != 0)
          goto LABEL_358;
        if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
          goto LABEL_359;
LABEL_206:
        v178 = v16;
        v179 = *(_QWORD *)(v174 + 8 * v12 + 32);
        swift_retain();
LABEL_207:
        swift_bridgeObjectRelease();
        v180 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0, v280);
LABEL_208:
        v181 = v180;
        v182 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v179 + 224))(v296);
        v184 = v183;
        sub_1B8876CA4();
        v185 = *(_QWORD **)(*v184 + 16);
        sub_1B8876CEC(v185);
        v186 = *v184;
        *(_QWORD *)(v186 + 16) = (char *)v185 + 1;
        *(_QWORD *)(v186 + 8 * (_QWORD)v185 + 32) = v181;
        v182(v296, 0);
        swift_release();
        v16 = v178;
        a2 = (unint64_t *)v289;
        goto LABEL_86;
      }
      if (v292)
      {
        v296[0] = v165;
        LOBYTE(v297) = 25;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
        {
          if ((*(uint64_t (**)(void))(*(_QWORD *)v19 + 136))() == 38 && v177 == 0xE100000000000000)
          {
LABEL_221:
            v188 = swift_bridgeObjectRelease();
LABEL_222:
            if ((v285 & 1) != 0)
            {
              v296[0] = v19[48];
              LOBYTE(v297) = 25;
              v281 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297);
              goto LABEL_86;
            }
            *(_BYTE *)a3 = 1;
            result = ((uint64_t (*)(uint64_t))v11)(v188);
            if ((result & 0xC000000000000001) != 0)
            {
              v178 = v16;
              v179 = MEMORY[0x1BCCB4394](v12, result);
            }
            else
            {
              if ((v12 & 0x8000000000000000) != 0)
                goto LABEL_362;
              if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
                goto LABEL_363;
              v178 = v16;
              v179 = *(_QWORD *)(result + 8 * v12 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            v180 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0, v280);
            goto LABEL_208;
          }
          v187 = sub_1B8913050();
          v188 = swift_bridgeObjectRelease();
          if ((v187 & 1) != 0)
            goto LABEL_222;
        }
        v296[0] = v19[48];
        LOBYTE(v297) = 20;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
        {
          if ((*(uint64_t (**)(void))(*(_QWORD *)v19 + 136))() == 23644 && v189 == 0xE200000000000000)
            goto LABEL_221;
          v190 = sub_1B8913050();
          v188 = swift_bridgeObjectRelease();
          if ((v190 & 1) != 0)
            goto LABEL_222;
        }
      }
      v191 = v19[48];
      v296[0] = v191;
      LOBYTE(v297) = 0;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        v210 = v16;
        v296[0] = v191;
        LOBYTE(v297) = 1;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)
          && (v211 = *(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v286 + 384),
              v211((uint64_t *)v296),
              LOBYTE(v297) = v296[0],
              sub_1B8873E88(),
              (sub_1B8912AA4() & 1) == 0))
        {
          v219 = (*(uint64_t (**)(void))(*(_QWORD *)v19 + 136))();
          v221 = sub_1B885FE18(v219, v220);
          if ((v222 & 1) != 0)
            v223 = 0;
          else
            v223 = v221;
          type metadata accessor for CalculateExpression.RichToken();
          *(_QWORD *)v296 = v223;
          v211(&v297);
          CalculateExpression.Base.rawValue.getter();
          sub_1B8878988();
          v224 = sub_1B8912BE8();
          v226 = v225;
          v211((uint64_t *)v296);
          v227 = v226;
          a2 = (unint64_t *)v289;
          v218 = sub_1B886210C(v224, v227, v296);
          v16 = v210;
        }
        else
        {
          v212 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 160);
          v213 = swift_retain();
          v214 = v212(v213);
          if (!v215)
            v214 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 136))(v214);
          v216 = v214;
          v217 = v215;
          v16 = v210;
          v296[0] = v191;
          type metadata accessor for CalculateExpression.RichToken();
          v218 = swift_allocObject();
          CalculateExpression.RichToken.init(text:type:isImplicit:)(v216, v217, (unsigned __int8 *)v296, 0);
          swift_release();
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v287 + 584))(v218);
        swift_release();
        v228 = sub_1B8878CF0(a1, (uint64_t *)a2);
        if ((v285 & 1) == 0)
          goto LABEL_269;
        if (qword_1EF1B6730 != -1)
          swift_once();
        v229 = v19[48];
        v228 = sub_1B886B18C(v229, qword_1EF1B7C58);
        if ((v228 & 1) != 0)
          goto LABEL_269;
        v296[0] = v229;
        if ((CalculateExpression.TokenType.isPrefixOperator.getter() & 1) != 0
          && (v296[0] = v229, LOBYTE(v297) = 4, v228 = sub_1B8912AA4(), (v228 & 1) == 0))
        {
          if (!v281)
            goto LABEL_269;
        }
        else
        {
          v296[0] = v229;
          if ((CalculateExpression.TokenType.isPostfixOperator.getter() & 1) != 0)
          {
            if (!v281)
            {
              v234 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
              v235 = (uint64_t (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
              v237 = v236;
              sub_1B8876CA4();
              v238 = *(_QWORD **)(*v237 + 16);
              sub_1B8876CEC(v238);
              v239 = *v237;
              *(_QWORD *)(v239 + 16) = (char *)v238 + 1;
              *(_QWORD *)(v239 + 8 * (_QWORD)v238 + 32) = v234;
              v228 = v235(v296, 0);
              a1 = v284;
              v11 = (unint64_t)v288;
              a2 = (unint64_t *)v289;
              v16 = v210;
              goto LABEL_269;
            }
            v296[0] = v229;
            LOBYTE(v297) = 9;
            a1 = v284;
            v11 = (unint64_t)v288;
            a2 = (unint64_t *)v289;
            v16 = v210;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
            {
              v230 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v284 + 280))(*v289);
              if (v230)
              {
                v231 = *(_BYTE *)(v230 + 48);
                swift_release();
                v296[0] = v231;
                LOBYTE(v297) = 20;
                v228 = sub_1B8912AA4();
                if ((v228 & 1) != 0)
                {
LABEL_269:
                  if (v283(v228))
                  {
                    v249 = CalculateExpression.format.getter();
                    swift_release();
                    if (v249 == 1)
                    {
                      if (qword_1EF1B6730 != -1)
                        swift_once();
                      if ((sub_1B886B18C(v19[48], qword_1EF1B7C58) & 1) != 0)
                      {
                        v250 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1008, 0);
                        v251 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
                        v253 = v252;
                        sub_1B8876CA4();
                        v254 = *(_QWORD **)(*v253 + 16);
                        sub_1B8876CEC(v254);
                        v255 = *v253;
                        *(_QWORD *)(v255 + 16) = (char *)v254 + 1;
                        v256 = v255 + 8 * (_QWORD)v254;
                        a2 = (unint64_t *)v289;
                        *(_QWORD *)(v256 + 32) = v250;
                        v251(v296, 0);
                        *(_BYTE *)a3 = 1;
                      }
                    }
                  }
                  goto LABEL_104;
                }
              }
            }
          }
          else
          {
            v296[0] = v229;
            v228 = CalculateExpression.TokenType.isBinaryOperator.getter();
            if ((v228 & 1) == 0)
              goto LABEL_269;
            if (v281)
            {
              v296[0] = v293;
              LOBYTE(v297) = 19;
              a1 = v284;
              v11 = (unint64_t)v288;
              a2 = (unint64_t *)v289;
              v16 = v210;
              if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6060);
                inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = v280;
                *(_WORD *)(inited + 32) = 1543;
                *(_BYTE *)(inited + 34) = 5;
                v233 = sub_1B886F8A4(v229, inited);
                v228 = swift_bridgeObjectRelease();
                if ((v233 & 1) != 0)
                  goto LABEL_269;
              }
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6060);
              v240 = swift_initStackObject();
              *(_OWORD *)(v240 + 16) = xmmword_1B8915E60;
              *(_DWORD *)(v240 + 32) = 100992003;
              v241 = sub_1B886F8A4(v229, v240);
              v228 = swift_bridgeObjectRelease();
              a1 = v284;
              v11 = (unint64_t)v288;
              a2 = (unint64_t *)v289;
              v16 = v210;
              if ((v241 & 1) != 0)
                goto LABEL_269;
            }
          }
        }
        v242 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
        v243 = (uint64_t (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v19 + 224))(v296);
        v245 = v244;
        sub_1B8876CA4();
        v246 = *(_QWORD **)(*v245 + 16);
        sub_1B8876CEC(v246);
        v247 = *v245;
        *(_QWORD *)(v247 + 16) = (char *)v246 + 1;
        v248 = v247 + 8 * (_QWORD)v246;
        a2 = (unint64_t *)v289;
        *(_QWORD *)(v248 + 32) = v242;
        v228 = v243(v296, 0);
        goto LABEL_269;
      }
      *(_BYTE *)a3 = 1;
      v192 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 160);
      v193 = swift_retain();
      v194 = v192(v193);
      if (!v195)
        v194 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 136))(v194);
      v196 = v194;
      v197 = v195;
      v296[0] = v191;
      type metadata accessor for CalculateExpression.RichToken();
      v198 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(v196, v197, (unsigned __int8 *)v296, 0);
      swift_release();
      (*(void (**)(uint64_t))(*(_QWORD *)v287 + 584))(v198);
      v199 = swift_release();
      result = ((uint64_t (*)(uint64_t))v11)(v199);
      if ((result & 0xC000000000000001) != 0)
      {
        v200 = v16;
        v201 = MEMORY[0x1BCCB4394](v12, result);
      }
      else
      {
        if ((v12 & 0x8000000000000000) != 0)
          goto LABEL_360;
        if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
          goto LABEL_361;
        v200 = v16;
        v201 = *(_QWORD *)(result + 8 * v12 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v202 = objc_allocWithZone((Class)CalculateError);
      v203 = (void *)sub_1B8912C90();
      swift_bridgeObjectRelease();
      v204 = objc_msgSend(v202, sel_initUndefinedSymbol_, v203);

      v205 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v201 + 224))(v296);
      v207 = v206;
      sub_1B8876CA4();
      v208 = *(_QWORD **)(*v207 + 16);
      sub_1B8876CEC(v208);
      v209 = *v207;
      *(_QWORD *)(v209 + 16) = (char *)v208 + 1;
      *(_QWORD *)(v209 + 8 * (_QWORD)v208 + 32) = v204;
      v205(v296, 0);
      swift_release();
      a2 = (unint64_t *)v289;
      sub_1B8878CF0(a1, v289);
      v16 = v200;
    }
LABEL_104:
    v102 = v19[48];
    v296[0] = v19[48];
    LOBYTE(v297) = 17;
    v103 = sub_1B8912AA4();
    v104 = swift_release();
    if ((v103 & 1) != 0)
    {
      v105 = v293;
    }
    else
    {
      v16 = v12;
      v105 = v102;
    }
    v293 = v105;
    v12 = *a2;
    v106 = ((uint64_t (*)(uint64_t))v11)(v104);
    if (v106 >> 62)
      v107 = sub_1B8912FD8();
    else
      v107 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = swift_bridgeObjectRelease();
    if ((uint64_t)v12 >= v107)
      goto LABEL_281;
  }
  v296[0] = v20;
  if ((CalculateExpression.TokenType.isClose.getter() & 1) != 0)
  {
    if (BYTE1(v297) == 1)
    {
      v296[0] = v20;
      LOBYTE(v297) = 22;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      {
        BYTE1(v297) = 0;
        goto LABEL_77;
      }
    }
    v50 = v294;
    v51 = *(_QWORD *)(v294 + 16);
    if (!v51)
    {
      v15 = swift_release();
      goto LABEL_281;
    }
    if (!v292)
      goto LABEL_66;
    v296[0] = v20;
    LOBYTE(v297) = 24;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)
      || (v296[0] = v20,
          LOBYTE(v297) = 22,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297)))
    {
      *(_BYTE *)a3 = 1;
      v52 = ((uint64_t (*)(void))v11)();
      v21 = v52;
      if ((v52 & 0xC000000000000001) != 0)
      {
        v53 = MEMORY[0x1BCCB4394](v12, v52);
      }
      else
      {
        if ((v12 & 0x8000000000000000) != 0)
          goto LABEL_337;
        if (v12 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_338;
        v53 = *(_QWORD *)(v52 + 8 * v12 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v54 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1003, 0);
      v55 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v53 + 224))(v296);
      v57 = v56;
      sub_1B8876CA4();
      v58 = *(_QWORD **)(*v57 + 16);
      sub_1B8876CEC(v58);
      v59 = *v57;
      *(_QWORD *)(v59 + 16) = (char *)v58 + 1;
      *(_QWORD *)(v59 + 8 * (_QWORD)v58 + 32) = v54;
      v55(v296, 0);
      swift_release();
      v11 = (unint64_t)v288;
      a2 = (unint64_t *)v289;
      goto LABEL_73;
    }
    v50 = v294;
    v51 = *(_QWORD *)(v294 + 16);
    if (v51)
    {
LABEL_66:
      LOBYTE(v297) = *(_BYTE *)(v50 + 16 * v51 + 24);
      CalculateExpression.TokenType.match.getter(v296);
      v60 = v296[0];
      v296[0] = v20;
      if (v60 != 51)
      {
        LOBYTE(v297) = v60;
        sub_1B885DDA0();
        if ((sub_1B8912AA4() & 1) != 0)
        {
LABEL_73:
          if (!*(_QWORD *)(v294 + 16))
            goto LABEL_324;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v63 = (char *)v294;
            v64 = *(_QWORD *)(v294 + 16);
            if (!v64)
              goto LABEL_325;
          }
          else
          {
            v63 = sub_1B8878374(v294);
            v64 = *((_QWORD *)v63 + 2);
            if (!v64)
              goto LABEL_325;
          }
          v294 = (uint64_t)v63;
          *((_QWORD *)v63 + 2) = v64 - 1;
          goto LABEL_77;
        }
      }
    }
    *(_BYTE *)a3 = 1;
    v21 = a1;
    v61 = ((uint64_t (*)(void))v11)();
    LOBYTE(v18) = v61;
    if ((v61 & 0xC000000000000001) != 0)
    {
      v62 = MEMORY[0x1BCCB4394](v12, v61);
    }
    else
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_336:
        __break(1u);
LABEL_337:
        __break(1u);
LABEL_338:
        __break(1u);
LABEL_339:
        __break(1u);
LABEL_340:
        __break(1u);
LABEL_341:
        __break(1u);
LABEL_342:
        __break(1u);
        goto LABEL_343;
      }
      if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10) <= v12)
        goto LABEL_336;
      v62 = *(_QWORD *)(v61 + 8 * v12 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    sub_1B8878B14(v62);
    swift_release();
    goto LABEL_73;
  }
  v296[0] = v20;
  LOBYTE(v297) = 11;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
  {
    v296[0] = v20;
    LOBYTE(v297) = 35;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v296, (unsigned __int8 *)&v297))
      goto LABEL_77;
  }
  swift_bridgeObjectRelease();
  if ((v285 & 1) != 0)
  {
    sub_1B8878CF0(a1, (uint64_t *)a2);
    v266 = *a2;
    v267 = *(uint64_t (**)(unint64_t))(*(_QWORD *)a1 + 280);
    v268 = v267(*a2);
    if (v268
      && (v269 = *(_BYTE *)(v268 + 48),
          swift_release(),
          v296[0] = v269,
          LOBYTE(v297) = 41,
          sub_1B885DDA0(),
          (sub_1B8912AA4() & 1) != 0))
    {
      sub_1B8878CF0(a1, (uint64_t *)a2);
    }
    else
    {
      *(_BYTE *)a3 = 1;
      v270 = v267(v266);
      if (v270)
      {
        v271 = v270;
        v272 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
        v273 = (void (*)(char *, _QWORD))(*(uint64_t (**)(char *))(*(_QWORD *)v271 + 224))(v296);
        v275 = v274;
        v276 = *v274;
        v277 = swift_isUniquelyReferenced_nonNull_native();
        *v275 = v276;
        if ((v277 & 1) == 0)
        {
          v276 = sub_1B8876D2C(0, v276[2] + 1, 1, v276);
          *v275 = v276;
        }
        v279 = v276[2];
        v278 = v276[3];
        if (v279 >= v278 >> 1)
        {
          v276 = sub_1B8876D2C((_QWORD *)(v278 > 1), v279 + 1, 1, v276);
          *v275 = v276;
        }
        v276[2] = v279 + 1;
        v276[v279 + 4] = v272;
        v273(v296, 0);
        swift_release();
      }
    }
  }
LABEL_319:
  swift_release();
  return v287;
}

uint64_t sub_1B886F8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    sub_1B885DDA0();
    swift_bridgeObjectRetain();
    v3 = 0;
    do
    {
      v4 = sub_1B8912AA4();
      if ((v4 & 1) != 0)
        break;
    }
    while (v2 - 1 != v3++);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1B886F95C(uint64_t a1, uint64_t a2)
{
  void *v2;
  _BOOL8 v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *__return_ptr);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  void (*v49)(__int128 *__return_ptr, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  void (*v79)(_QWORD);
  uint64_t v80;
  void (*v81)(__int128 *, _QWORD);
  BOOL v82;
  uint64_t v83;
  _BOOL4 v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t inited;
  unint64_t v99;
  id v100;
  __CFString *v101;
  id v102;
  unint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t (*v106)(void);
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(__int128 *);
  uint64_t (*v130)(__int128 *, _QWORD);
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  void (*v140)(__int128 *, _QWORD);
  void *v141;
  id v142;
  void *v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  void (*v152)(__int128 *, _QWORD);
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  void *v158;
  void (*v159)(__int128 *, _QWORD);
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  void (*v163)(__int128 *__return_ptr, uint64_t);
  __int128 v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int8 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  v4 = v2;
  v159 = (void (*)(__int128 *, _QWORD))a1;
  v6 = sub_1B8912840();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 176);
  v11 = v10(v7);
  if (v11)
  {
    v12 = CalculateExpression.allowedOperations.getter();
    v13 = (uint64_t)v159;
    v14 = sub_1B886B3A0((uint64_t)v159, v12);
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0
      || (type metadata accessor for CalculateExpression.CustomOperandOperation(), swift_dynamicCastClass()))
    {
      v11 = swift_release();
    }
    else
    {
      *(_QWORD *)&v168 = v13;
      *(_QWORD *)&v164 = *sub_1B8882D58();
      type metadata accessor for CalculateExpression.Operation();
      sub_1B8879EE4((unint64_t *)&qword_1ED561AE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
      swift_retain();
      v38 = sub_1B8912AA4();
      swift_release();
      v11 = swift_release();
      if ((v38 & 1) == 0)
        goto LABEL_26;
    }
  }
  v15 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 344))(v11);

  if (!v15)
    goto LABEL_8;
  if (((*(uint64_t (**)(void))(*(_QWORD *)v159 + 88))() & 1) == 0)
  {
LABEL_26:
    v39 = 0;
    return v39 & 1;
  }
  (*(void (**)(_QWORD))(*(_QWORD *)v4 + 256))(0);
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 232))(1);
LABEL_8:
  v17 = v10(v16);
  v158 = v4;
  v18 = (uint64_t)v159;
  if (v17)
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 368))() != 2)
      goto LABEL_34;
    v19 = *(void (**)(__int128 *__return_ptr))(*(_QWORD *)v18 + 80);
    v19(&v168);
    LOBYTE(v164) = v168;
    LOBYTE(v171) = 0;
    v20 = sub_1B8879760();
    if ((sub_1B8912AA4() & 1) != 0)
      goto LABEL_34;
    v21 = type metadata accessor for CalculateExpression.Operation();
    v22 = *sub_1B8880648();
    swift_retain();
    v23 = static CalculateExpression.Operation.== infix(_:_:)(v18, v22);
    v24 = swift_release();
    if (!v23)
    {
      v25 = *sub_1B88805B4();
      swift_retain();
      v26 = static CalculateExpression.Operation.== infix(_:_:)(v18, v25);
      v24 = swift_release();
      if (!v26)
        goto LABEL_33;
    }
    v27 = (unint64_t)v158;
    v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v158 + 392))(v24);
    if (v28 >> 62)
    {
      v29 = sub_1B8912FD8();
      if (v29)
      {
LABEL_15:
        v30 = __OFSUB__(v29, 1);
        v31 = v29 - 1;
        if (v30)
        {
          __break(1u);
        }
        else if ((v28 & 0xC000000000000001) == 0)
        {
          if ((v31 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v31 < *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v32 = *(_QWORD *)(v28 + 8 * v31 + 32);
            swift_retain();
LABEL_20:
            swift_bridgeObjectRelease();
            LOBYTE(v168) = *(_BYTE *)(v32 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            LOBYTE(v164) = 1;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164)
              && (v162 = (_BYTE *)v20,
                  v33 = (*(uint64_t (**)(void))(*(_QWORD *)v32 + 208))(),
                  v35 = sub_1B886B504(v33, v34),
                  v37 = v36,
                  swift_bridgeObjectRelease(),
                  v37))
            {
              if (v35 == 101 && v37 == 0xE100000000000000)
              {
                swift_release();
                swift_bridgeObjectRelease();
LABEL_34:
                swift_release();
                v4 = v158;
                goto LABEL_35;
              }
              v40 = sub_1B8913050();
              swift_bridgeObjectRelease();
              swift_release();
              if ((v40 & 1) != 0)
                goto LABEL_34;
            }
            else
            {
              swift_release();
            }
LABEL_33:
            v41 = *sub_1B8881004();
            swift_retain();
            v3 = static CalculateExpression.Operation.== infix(_:_:)(v18, v41);
            v42 = swift_release();
            if (v3)
              goto LABEL_34;
            ((void (*)(__int128 *__return_ptr, uint64_t))v19)(&v168, v42);
            LOBYTE(v164) = 1;
            if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164)|| ((v71 = CalculateExpression.postfixStack.getter(), v71 >> 62)? (v72 = sub_1B8912FD8()): (v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10)), swift_bridgeObjectRelease(), v72 <= 0))
            {
              if ((v19(&v168),
                    LOBYTE(v164) = 2,
                    !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))&& (v19(&v168), LOBYTE(v164) = 3, !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))|| ((v73 = CalculateExpression.postfixStack.getter(), v73 >> 62)? (v74 = sub_1B8912FD8()): (v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10)), swift_bridgeObjectRelease(), v74 < 2))
              {
                swift_release();
                v39 = 0;
                return v39 & 1;
              }
            }
            v27 = CalculateExpression.postfixStack.getter();
            if (!(v27 >> 62))
            {
              v75 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v75)
                goto LABEL_91;
              goto LABEL_178;
            }
LABEL_177:
            v75 = sub_1B8912FD8();
            if (v75)
            {
LABEL_91:
              v30 = __OFSUB__(v75, 1);
              v76 = v75 - 1;
              if (!v30)
              {
                v163 = (void (*)(__int128 *__return_ptr, uint64_t))v19;
                if ((v27 & 0xC000000000000001) == 0)
                {
                  if ((v76 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v76 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    swift_retain();
                    goto LABEL_96;
                  }
                  __break(1u);
                  goto LABEL_183;
                }
LABEL_180:
                MEMORY[0x1BCCB4394](v76, v27);
LABEL_96:
                swift_bridgeObjectRelease();
                v77 = (_BYTE *)CalculateExpression.rich.getter();
                swift_release();
                type metadata accessor for CalculateExpression.RichExpression();
                swift_allocObject();
                v78 = sub_1B8878770(v77);
                swift_release();
                v79 = *(void (**)(_QWORD))(*(_QWORD *)v78 + 232);
                swift_retain();
                v79(0);
                (*(void (**)(_QWORD))(*(_QWORD *)v78 + 256))(0);
                swift_release();
                v80 = *sub_1B8880804();
                swift_retain();
                v81 = v159;
                v82 = static CalculateExpression.Operation.== infix(_:_:)((uint64_t)v159, v80);
                v83 = swift_release();
                v84 = 0;
                v21 = (uint64_t)v158;
                if (v82)
                {
                  v85 = CalculateExpression.postfixStack.getter();
                  if (v85 >> 62)
                    v86 = sub_1B8912FD8();
                  else
                    v86 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
                  v83 = swift_bridgeObjectRelease();
                  v84 = v86 > 1;
                }
                v163(&v168, v83);
                LOBYTE(v164) = v168;
                LOBYTE(v171) = 1;
                v87 = sub_1B8912AA4();
                v157 = v84;
                if ((v87 & 1) != 0 && !v84)
                {
                  v88 = v78;
                  v78 = 0;
                  goto LABEL_115;
                }
                v89 = CalculateExpression.postfixStack.getter();
                v90 = CalculateExpression.postfixStack.getter();
                if (v90 >> 62)
                  v91 = sub_1B8912FD8();
                else
                  v91 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRelease();
                v92 = v91 - 2;
                if (__OFSUB__(v91, 2))
                {
                  __break(1u);
                }
                else if ((v89 & 0xC000000000000001) == 0)
                {
                  if ((v92 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v92 < *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    swift_retain();
                    goto LABEL_110;
                  }
                  __break(1u);
                  goto LABEL_211;
                }
                MEMORY[0x1BCCB4394](v92, v89);
LABEL_110:
                swift_bridgeObjectRelease();
                v93 = (_BYTE *)CalculateExpression.rich.getter();
                swift_release();
                swift_allocObject();
                v94 = sub_1B8878770(v93);
                swift_release();
                v95 = swift_retain();
                v163(&v168, v95);
                LOBYTE(v164) = 2;
                v96 = static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164);
                swift_release();
                if (v96)
                  v88 = v94;
                else
                  v88 = v78;
                if (!v96)
                  v78 = v94;
LABEL_115:
                v97 = sub_1B88992EC();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
                inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_1B8915E80;
                *(_QWORD *)(inited + 32) = CFSTR("CalculateKeyFormat");
                v99 = 0x1E0CB37E8uLL;
                v100 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
                v101 = CFSTR("CalculateKeyFormat");
                v102 = objc_msgSend(v100, sel_initWithUnsignedInteger_, 0);
                *(_QWORD *)(inited + 64) = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
                *(_QWORD *)(inited + 40) = v102;
                v103 = sub_1B8861E00(inited);
                v104 = sub_1B8870F28(v103, v97);
                type metadata accessor for CalculateExpression();
                sub_1B887D7C0(&v168);
                sub_1B889C5E0();
                CalculateExpression.__allocating_init(_:options:base:id:)(0, 0xE000000000000000, v104, (char *)&v168, (uint64_t)v9);
                (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v21 + 384))(&v168);
                v105 = v168;
                CalculateExpression.base.setter();
                swift_retain();
                sub_1B88A6C34();
                v162 = v78;
                v161 = (uint64_t)v88;
                LODWORD(v160) = v105;
                if (!v78)
                {
                  v118 = 1;
                  goto LABEL_133;
                }
                v106 = *(uint64_t (**)(void))(*(_QWORD *)v78 + 392);
                v107 = swift_retain();
                v108 = ((uint64_t (*)(uint64_t))v106)(v107);
                if (v108 >> 62)
                {
                  v109 = sub_1B8912FD8();
                  if (v109)
                  {
LABEL_118:
                    v30 = __OFSUB__(v109, 1);
                    v110 = v109 - 1;
                    if (!v30)
                    {
                      if ((v108 & 0xC000000000000001) == 0)
                      {
                        if ((v110 & 0x8000000000000000) != 0)
                        {
                          __break(1u);
                        }
                        else if (v110 < *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10))
                        {
                          v111 = *(_QWORD *)(v108 + 8 * v110 + 32);
                          swift_retain();
                          goto LABEL_123;
                        }
                        __break(1u);
                        goto LABEL_204;
                      }
LABEL_201:
                      v111 = MEMORY[0x1BCCB4394](v110, v108);
LABEL_123:
                      swift_bridgeObjectRelease();
                      type metadata accessor for CalculateExpression.RichToken();
                      v99 = sub_1B8862328(v111);
                      v112 = v106();
                      if (!(v112 >> 62))
                      {
                        v113 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_125:
                        swift_bridgeObjectRelease();
                        if (v113 >= 2
                          && (v114 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v78 + 416))(0)) != 0)
                        {
                          v115 = *(_BYTE *)(v114 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                          swift_release();
                          LOBYTE(v168) = v115;
                          LOBYTE(v164) = 4;
                          sub_1B885DDA0();
                          v116 = sub_1B8912AA4();
                        }
                        else
                        {
                          v116 = 0;
                        }
                        type metadata accessor for CalculateExpression.CustomOperandOperation();
                        v117 = CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)(v99, v116 & 1);
                        swift_release();
                        v118 = v117 == 0;
                        if (v157 && v117)
                        {
                          swift_retain();
                          sub_1B88806DC();
                          v119 = swift_retain();
                          CalculateExpression.update(_:)(v119);
                          swift_release();
                          CalculateExpression.update(_:)(v117);
                          CalculateExpression.update(_:)((uint64_t)v159);
                          swift_release();
                          v3 = (_BOOL8)v163;
                          goto LABEL_138;
                        }
LABEL_133:
                        v120 = CalculateExpression.update(_:)((uint64_t)v159);
                        v3 = (_BOOL8)v163;
                        v163(&v168, v120);
                        LOBYTE(v164) = 2;
                        if (static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))
                        {
                          if (v118)
                          {
LABEL_138:
                            v122 = CalculateExpression.error.getter();
                            (*(void (**)(void *))(*(_QWORD *)v21 + 352))(v122);
                            v27 = CalculateExpression.postfixStack.getter();
                            if (!(v27 >> 62))
                            {
                              v123 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
                              if (v123)
                                goto LABEL_140;
                              goto LABEL_184;
                            }
LABEL_183:
                            v123 = sub_1B8912FD8();
                            if (v123)
                            {
LABEL_140:
                              v30 = __OFSUB__(v123, 1);
                              v124 = v123 - 1;
                              if (!v30)
                              {
                                if ((v27 & 0xC000000000000001) == 0)
                                {
                                  if ((v124 & 0x8000000000000000) != 0)
                                  {
                                    __break(1u);
                                  }
                                  else if (v124 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
                                  {
                                    swift_retain();
                                    goto LABEL_145;
                                  }
                                  __break(1u);
                                  goto LABEL_189;
                                }
LABEL_186:
                                MEMORY[0x1BCCB4394](v124, v27);
LABEL_145:
                                swift_bridgeObjectRelease();
                                v125 = CalculateExpression.rich.getter();
                                v126 = swift_release();
                                v127 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v125 + 392))(v126);
                                swift_release();
                                if (!(v127 >> 62))
                                {
                                  v128 = *(_QWORD *)((v127 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_147:
                                  swift_bridgeObjectRelease();
                                  v129 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v21 + 408);
                                  v130 = (uint64_t (*)(__int128 *, _QWORD))v129(&v168);
                                  sub_1B885E26C(v128);
                                  v131 = v130(&v168, 0);
                                  ((void (*)(__int128 *__return_ptr, uint64_t))v3)(&v168, v131);
                                  LOBYTE(v164) = 2;
                                  if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))
                                  {
                                    ((void (*)(__int128 *__return_ptr))v3)(&v168);
                                    LOBYTE(v164) = 3;
                                    if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))
                                    {
LABEL_159:
                                      v141 = v158;
                                      (*(void (**)(_QWORD))(*(_QWORD *)v158 + 232))(0);
                                      (*(void (**)(uint64_t))(*(_QWORD *)v141 + 256))(1);
                                      v142 = CalculateExpression.result.getter();
                                      if (v142)
                                      {
                                        v143 = v142;
                                        type metadata accessor for CalculateExpression.CustomOperandOperation();
                                        v144 = v143;
                                        CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v144);
                                        v146 = v145;
                                        *(_QWORD *)&v164 = MEMORY[0x1E0DEE9D8];
                                        v147 = (*(uint64_t (**)(void))(*(_QWORD *)v145 + 128))();
                                        if ((v147 & 1) != 0)
                                        {
                                          LOBYTE(v168) = 4;
                                          type metadata accessor for CalculateExpression.RichToken();
                                          swift_allocObject();
                                          v148 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v168, 0);
                                          MEMORY[0x1BCCB40AC](v148);
                                          if (*(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                                            sub_1B8912CCC();
                                          sub_1B8912CFC();
                                          v147 = sub_1B8912CA8();
                                        }
                                        v149 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v146 + 120))(v147);
                                        LOBYTE(v168) = v160;
                                        (*(void (**)(__int128 *))(*(_QWORD *)v149 + 400))(&v168);
                                        v150 = swift_retain();
                                        MEMORY[0x1BCCB40AC](v150);
                                        if (*(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                                          sub_1B8912CCC();
                                        sub_1B8912CFC();
                                        sub_1B8912CA8();
                                        v151 = v164;
                                        v152 = (void (*)(__int128 *, _QWORD))v129(&v168);
                                        sub_1B885E32C(v151);
                                        v152(&v168, 0);
                                        swift_release();
                                        swift_release();
                                        swift_release();

                                        goto LABEL_169;
                                      }
                                      type metadata accessor for CalculateExpression.RichToken();
                                      LOBYTE(v168) = v160;
                                      sub_1B886210C(48, 0xE100000000000000, (char *)&v168);
                                      v81 = (void (*)(__int128 *, _QWORD))v129(&v168);
                                      v154 = v153;
                                      MEMORY[0x1BCCB40AC]();
                                      if (*(_QWORD *)((*v154 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v154 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                                      {
LABEL_168:
                                        sub_1B8912CFC();
                                        sub_1B8912CA8();
                                        v81(&v168, 0);
                                        swift_release();
LABEL_169:
                                        swift_release();
                                        swift_release();
                                        swift_release();
                                        swift_release();
                                        v39 = 1;
                                        return v39 & 1;
                                      }
LABEL_211:
                                      sub_1B8912CCC();
                                      goto LABEL_168;
                                    }
                                  }
                                  v132 = CalculateExpression.postfixStack.getter();
                                  v133 = CalculateExpression.postfixStack.getter();
                                  if (v133 >> 62)
                                    v134 = sub_1B8912FD8();
                                  else
                                    v134 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10);
                                  swift_bridgeObjectRelease();
                                  v135 = v134 - 2;
                                  if (__OFSUB__(v134, 2))
                                  {
                                    __break(1u);
                                  }
                                  else if ((v132 & 0xC000000000000001) == 0)
                                  {
                                    if ((v135 & 0x8000000000000000) != 0)
                                    {
                                      __break(1u);
                                    }
                                    else if (v135 < *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10))
                                    {
                                      swift_retain();
                                      goto LABEL_156;
                                    }
                                    __break(1u);
                                    goto LABEL_197;
                                  }
                                  MEMORY[0x1BCCB4394](v135, v132);
LABEL_156:
                                  swift_bridgeObjectRelease();
                                  v136 = CalculateExpression.rich.getter();
                                  v137 = swift_release();
                                  v138 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v136 + 392))(v137);
                                  swift_release();
                                  if (!(v138 >> 62))
                                  {
                                    v139 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_158:
                                    swift_bridgeObjectRelease();
                                    v140 = (void (*)(__int128 *, _QWORD))v129(&v168);
                                    sub_1B885E26C(v139);
                                    v140(&v168, 0);
                                    goto LABEL_159;
                                  }
LABEL_197:
                                  swift_bridgeObjectRetain();
                                  v139 = sub_1B8912FD8();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_158;
                                }
LABEL_189:
                                swift_bridgeObjectRetain();
                                v128 = sub_1B8912FD8();
                                swift_bridgeObjectRelease();
                                goto LABEL_147;
                              }
LABEL_185:
                              __break(1u);
                              goto LABEL_186;
                            }
LABEL_184:
                            swift_bridgeObjectRelease();
                            swift_release();
                            v124 = swift_release();
                            __break(1u);
                            goto LABEL_185;
                          }
                        }
                        else
                        {
                          ((void (*)(__int128 *__return_ptr))v3)(&v168);
                          LOBYTE(v164) = 3;
                          if (v118 | !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v168, (unsigned __int8 *)&v164))goto LABEL_138;
                        }
                        v121 = swift_retain();
                        CalculateExpression.update(_:)(v121);
                        swift_release();
                        goto LABEL_138;
                      }
LABEL_204:
                      v113 = sub_1B8912FD8();
                      goto LABEL_125;
                    }
LABEL_200:
                    __break(1u);
                    goto LABEL_201;
                  }
                }
                else
                {
                  v109 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v109)
                    goto LABEL_118;
                }
                swift_release();
                v110 = swift_bridgeObjectRelease();
                __break(1u);
                goto LABEL_200;
              }
LABEL_179:
              __break(1u);
              goto LABEL_180;
            }
LABEL_178:
            v76 = swift_bridgeObjectRelease();
            __break(1u);
            goto LABEL_179;
          }
          __break(1u);
          goto LABEL_177;
        }
        v32 = MEMORY[0x1BCCB4394](v31, v28);
        goto LABEL_20;
      }
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v29)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_35:
  v157 = (*(uint64_t (**)(void *, uint64_t))(*(_QWORD *)v18 + 104))(v4, a2);
  if ((v157 & 1) != 0)
    (*(void (**)(_QWORD))(*(_QWORD *)v4 + 352))(0);
  sub_1B88725BC();
  v171 = MEMORY[0x1E0DEE9E8];
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(_QWORD *))sub_1B8870FA4, &v168);
  v43 = v168;
  if ((_QWORD)v168)
  {
    v164 = v168;
    v165 = v169;
    v166 = v170;
    v44 = CalculateExpression.RichExpression.EditingToken.token.getter();
    v4 = v158;
    sub_1B885DC28(v43);
  }
  else
  {
    v44 = 0;
  }
  v45 = CalculateExpression.RichExpression.editingTokens()();
  v46 = v45;
  v162 = *(_BYTE **)(v45 + 16);
  if (v162)
  {
    v156 = v44;
    v47 = 0;
    v161 = v45 + 32;
    v4 = &unk_1ED564000;
    v160 = v45;
    while (1)
    {
      if (v47 >= *(_QWORD *)(v46 + 16))
      {
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        v68 = sub_1B8912FD8();
        goto LABEL_75;
      }
      v48 = (uint64_t *)(v161 + 32 * v47);
      v49 = (void (*)(__int128 *__return_ptr, uint64_t))v48[3];
      v51 = *v48;
      v50 = v48[1];
      swift_retain();
      swift_retain_n();
      sub_1B8874DF8((uint64_t *)&v168, v51);
      swift_release();
      *(_QWORD *)&v168 = v50;
      swift_retain();
      sub_1B88834C4((uint64_t *)&v168);
      v52 = v168;
      v53 = v168 - 1;
      if (__OFSUB__((_QWORD)v168, 1))
        goto LABEL_171;
      v163 = v49;
      v54 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v51 + 416);
      v55 = v54(v168 - 1);
      if (!v55)
      {
LABEL_42:
        swift_release();
        swift_release_n();
        goto LABEL_43;
      }
      v56 = v55;
      while (1)
      {
        LOBYTE(v164) = *(_BYTE *)(v56 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        v167 = 10;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v164, &v167))
        {
          v57 = (*(uint64_t (**)(void))(*(_QWORD *)v56 + 256))();
          if (v57)
          {
            v58 = v57;
            if (((*(uint64_t (**)(void))(*(_QWORD *)v57 + 568))() & 1) != 0)
              goto LABEL_66;
            v57 = swift_release();
          }
          v59 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 280))(v57);
          if (v59)
            break;
        }
LABEL_55:
        if (v52 >= 1)
        {
          v60 = v52 + 1;
          while (1)
          {
            v52 = v60 - 2;
            v61 = v54(v60 - 2);
            if (v61)
            {
              v62 = *(_BYTE *)(v61 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              swift_release();
              LOBYTE(v164) = v62;
              v167 = 15;
              sub_1B885DDA0();
              if ((sub_1B8912AA4() & 1) != 0)
                break;
            }
            if ((unint64_t)--v60 <= 1)
            {
              v52 = 0;
              break;
            }
          }
          swift_release();
          v53 = v52 - 1;
        }
        else
        {
          swift_release();
        }
        v56 = v54(v53);
        if (!v56)
          goto LABEL_42;
      }
      v58 = v59;
      if (((*(uint64_t (**)(void))(*(_QWORD *)v59 + 568))() & 1) == 0)
        break;
LABEL_66:
      swift_retain();
      sub_1B8874DF8((uint64_t *)&v164, v58);
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
LABEL_43:
      v46 = v160;
      if ((_BYTE *)++v47 == v162)
      {
        swift_bridgeObjectRelease();
        v4 = v158;
        v44 = v156;
        goto LABEL_69;
      }
    }
    swift_release();
    goto LABEL_55;
  }
  swift_bridgeObjectRelease();
LABEL_69:
  v63 = sub_1B8881004();
  v64 = (uint64_t)v159;
  if ((void (*)(__int128 *, _QWORD))*v63 == v159 || *sub_1B8880F78() == v64)
    v65 = 0;
  else
    v65 = 2;
  sub_1B8871014(v171, v44, v65);
  swift_bridgeObjectRelease();
  v66 = sub_1B8871A04();
  v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 392))(v66);
  if (v67 >> 62)
    goto LABEL_172;
  v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_75:
  v69 = swift_bridgeObjectRelease();
  if (!v68)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 424))(v69);
  swift_release();
  v39 = v157;
  return v39 & 1;
}

uint64_t sub_1B8870F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1B8877728(a1, (uint64_t)sub_1B88776EC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B8870FA4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__int128 *);
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *sub_1B8880B5C();
  v7 = v6;
  v8 = v1;
  v9 = v2;
  v4 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 136);
  swift_retain();
  LOBYTE(v4) = v4(&v7);
  swift_release();
  return v4 & 1;
}

uint64_t sub_1B8871014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v8)(void);
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t (*v20)(void);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t (*v30)(_QWORD *);
  uint64_t (*v31)(_QWORD *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *, _QWORD);
  unint64_t v36;
  unint64_t v37;
  void (*v38)(_QWORD *, _QWORD);
  uint64_t v39;
  uint64_t (*v40)(void);
  BOOL v41;
  uint64_t (*v42)(void);
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  _BOOL4 v52;
  char v53;
  uint64_t v54;
  char v55;
  BOOL v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD);
  uint64_t v62;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  _QWORD v69[2];
  _QWORD v70[4];

  v4 = v3;
  v8 = *(uint64_t (**)(void))(*(_QWORD *)v3 + 392);
  v9 = v8();
  if (v9 >> 62)
LABEL_125:
    v10 = sub_1B8912FD8();
  else
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  if (v10 < 1)
    return result;
  v12 = 0;
  v66 = a3;
  v67 = a1;
  v68 = v8;
  while (1)
  {
    v13 = ((uint64_t (*)(uint64_t))v8)(result);
    if ((v13 & 0xC000000000000001) != 0)
    {
      v8 = (uint64_t (*)(void))MEMORY[0x1BCCB4394](v12, v13);
    }
    else
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
        goto LABEL_125;
      }
      if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_123;
      v8 = *(uint64_t (**)(void))(v13 + 8 * v12 + 32);
      swift_retain();
    }
    v14 = swift_bridgeObjectRelease();
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 384))(v14);
    if ((v15 & 1) != 0)
    {
      if (!a2
        || (swift_retain(), swift_retain(),
                            v16 = sub_1B8912828(),
                            swift_release(),
                            v15 = swift_release(),
                            (v16 & 1) == 0))
      {
        v15 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v8 + 240))(0);
      }
    }
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 256))(v15);
    if (v17)
      break;
LABEL_53:
    v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 280))(v17);
    if (!v39)
      goto LABEL_113;
    v40 = (uint64_t (*)(void))v39;
    v41 = sub_1B886B274(v39, a1);
    if (v41)
    {
      if (((*(uint64_t (**)(void))(*(_QWORD *)v40 + 568))() & 1) != 0)
        goto LABEL_107;
      goto LABEL_106;
    }
    if (a3 == 1)
    {
      if (((*(uint64_t (**)(void))(*(_QWORD *)v40 + 296))() & 1) == 0)
        goto LABEL_105;
LABEL_62:
      v42 = *(uint64_t (**)(void))(*(_QWORD *)v40 + 392);
      v43 = v42();
      if (v43 >> 62)
        v44 = sub_1B8912FD8();
      else
        v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
      v45 = swift_bridgeObjectRelease();
      if (v44 != 1)
        goto LABEL_81;
      v46 = ((uint64_t (*)(uint64_t))v42)(v45);
      if (v46 >> 62)
      {
        result = sub_1B8912FD8();
        if (!result)
          goto LABEL_80;
LABEL_67:
        if ((v46 & 0xC000000000000001) != 0)
        {
          v47 = MEMORY[0x1BCCB4394](0, v46);
        }
        else
        {
          if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_127;
          v47 = *(_QWORD *)(v46 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        LOBYTE(v70[0]) = *(_BYTE *)(v47 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v69[0]) = 1;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
        {
          v45 = swift_release();
          goto LABEL_81;
        }
        v48 = (*(uint64_t (**)(void))(*(_QWORD *)v47 + 208))();
        v50 = v49;
        v45 = swift_release();
      }
      else
      {
        result = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (result)
          goto LABEL_67;
LABEL_80:
        v45 = swift_bridgeObjectRelease();
LABEL_81:
        v48 = 0;
        v50 = 0xE000000000000000;
      }
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 360))(v45) & 1) != 0)
      {
        if (v48 != 50 || v50 != 0xE100000000000000)
        {
          v51 = sub_1B8913050();
          LOBYTE(v52) = 0;
          if ((v51 & 1) != 0)
            goto LABEL_104;
          if (v48 != 12337 || v50 != 0xE200000000000000)
          {
            v53 = sub_1B8913050();
            LOBYTE(v52) = 0;
            if ((v53 & 1) == 0)
              goto LABEL_89;
LABEL_104:
            (*(void (**)(_BOOL4))(*(_QWORD *)v40 + 304))(v52);
            swift_bridgeObjectRelease();
            a3 = v66;
            a1 = v67;
            goto LABEL_105;
          }
        }
      }
      else
      {
LABEL_89:
        v54 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
        LOBYTE(v70[0]) = *((_BYTE *)v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v69[0]) = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
        {
          if (v48 == 50 && v50 == 0xE100000000000000)
            goto LABEL_103;
          v55 = sub_1B8913050();
          LOBYTE(v52) = 0;
          v57 = v48 == 51 && v50 == 0xE100000000000000;
          if ((v55 & 1) != 0)
            goto LABEL_104;
          if (v57)
            goto LABEL_104;
          v58 = sub_1B8913050();
          LOBYTE(v52) = 0;
          if ((v58 & 1) != 0)
            goto LABEL_104;
        }
        v70[0] = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 208))();
        v70[1] = v59;
        v69[0] = 1885957222;
        v69[1] = 0xE400000000000000;
        sub_1B8878944();
        v60 = sub_1B8912E58();
        swift_bridgeObjectRelease();
        if (v60)
        {
          LOBYTE(v70[0]) = *((_BYTE *)v8 + v54);
          LOBYTE(v69[0]) = 1;
          v52 = !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69);
          goto LABEL_104;
        }
      }
LABEL_103:
      LOBYTE(v52) = 0;
      goto LABEL_104;
    }
    if (a3 == 2 && ((*(uint64_t (**)(void))(*(_QWORD *)v40 + 296))() & 1) == 0)
      goto LABEL_62;
LABEL_105:
    if (((*(uint64_t (**)(void))(*(_QWORD *)v40 + 568))() & 1) != 0)
      goto LABEL_108;
LABEL_106:
    if (!(v41 | (((*(uint64_t (**)(void))(*(_QWORD *)v40 + 560))() & 1) == 0)))
    {
LABEL_108:
      LOBYTE(v70[0]) = *((_BYTE *)v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v69[0]) = 7;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
      {
        v61 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v4 + 408))(v70);
        sub_1B885DC54(v12);
        swift_release();
        v61(v70, 0);
        goto LABEL_110;
      }
      (*(void (**)(_QWORD))(*(_QWORD *)v8 + 288))(0);
      goto LABEL_112;
    }
LABEL_107:
    sub_1B8871014(a1, a2, a3);
LABEL_112:
    swift_release();
    v8 = v40;
LABEL_113:
    v62 = swift_release();
    if (__OFADD__(v12++, 1))
      goto LABEL_124;
LABEL_114:
    v8 = v68;
    v64 = ((uint64_t (*)(uint64_t))v68)(v62);
    if (v64 >> 62)
      v65 = sub_1B8912FD8();
    else
      v65 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRelease();
    if ((uint64_t)v12 >= v65)
      return result;
  }
  v18 = v17;
  v19 = sub_1B886B274(v17, a1);
  if (v19)
  {
LABEL_40:
    if (((*(uint64_t (**)(void))(*(_QWORD *)v18 + 568))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v18 + 560))() & 1) != 0)
    {
      if (!v19)
      {
        LOBYTE(v70[0]) = *((_BYTE *)v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v69[0]) = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
        {
          v30 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v4 + 408);
          v31 = (uint64_t (*)(_QWORD *, _QWORD))v30(v70);
          sub_1B885DC54(v12);
          swift_release();
          v32 = v31(v70, 0);
          v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 280))(v32);
          if (v33)
          {
            v34 = (*(uint64_t (**)(void))(*(_QWORD *)v33 + 392))();
            v35 = (void (*)(_QWORD *, _QWORD))v30(v70);
            v36 = v34;
            a1 = v67;
            sub_1B8860170(v12, v12, v36);
            v35(v70, 0);
            swift_release();
          }
          a3 = v66;
          goto LABEL_110;
        }
        (*(void (**)(_QWORD))(*(_QWORD *)v8 + 264))(0);
        goto LABEL_52;
      }
    }
    else if (!v19)
    {
      LOBYTE(v70[0]) = *((_BYTE *)v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v69[0]) = 7;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
      {
        v37 = (*(uint64_t (**)(void))(*(_QWORD *)v18 + 392))();
        v38 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v4 + 408))(v70);
        sub_1B8860170(v12, v12, v37);
        v38(v70, 0);
        a1 = v67;
        (*(void (**)(_QWORD))(*(_QWORD *)v8 + 264))(0);
LABEL_110:
        swift_release();
        v62 = swift_release();
        goto LABEL_114;
      }
    }
    sub_1B8871014(a1, a2, a3);
LABEL_52:
    v17 = swift_release();
    goto LABEL_53;
  }
  if (a3 == 1)
  {
    if (((*(uint64_t (**)(void))(*(_QWORD *)v18 + 296))() & 1) == 0)
      goto LABEL_40;
  }
  else if (a3 != 2 || ((*(uint64_t (**)(void))(*(_QWORD *)v18 + 296))() & 1) != 0)
  {
    goto LABEL_40;
  }
  v20 = *(uint64_t (**)(void))(*(_QWORD *)v18 + 392);
  v21 = v20();
  if (v21 >> 62)
    v22 = sub_1B8912FD8();
  else
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  v23 = swift_bridgeObjectRelease();
  if (v22 != 1)
    goto LABEL_31;
  v24 = ((uint64_t (*)(uint64_t))v20)(v23);
  if (!(v24 >> 62))
  {
    result = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    a1 = v67;
    if (result)
      goto LABEL_25;
LABEL_78:
    v23 = swift_bridgeObjectRelease();
    v26 = 0;
    v28 = 0xE000000000000000;
    goto LABEL_33;
  }
  result = sub_1B8912FD8();
  a1 = v67;
  if (!result)
    goto LABEL_78;
LABEL_25:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v25 = MEMORY[0x1BCCB4394](0, v24);
    goto LABEL_28;
  }
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v25 = *(_QWORD *)(v24 + 32);
    swift_retain();
LABEL_28:
    swift_bridgeObjectRelease();
    LOBYTE(v70[0]) = *(_BYTE *)(v25 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v69[0]) = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v70, (unsigned __int8 *)v69))
    {
      v26 = (*(uint64_t (**)(void))(*(_QWORD *)v25 + 208))();
      v28 = v27;
      v23 = swift_release();
LABEL_32:
      a1 = v67;
LABEL_33:
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 344))(v23) & 1) != 0)
      {
        if (v26 == 51 && v28 == 0xE100000000000000)
          v29 = 1;
        else
          v29 = sub_1B8913050();
      }
      else
      {
        v29 = 0;
      }
      (*(void (**)(BOOL))(*(_QWORD *)v18 + 304))((v29 & 1) == 0);
      swift_bridgeObjectRelease();
      a3 = v66;
      goto LABEL_40;
    }
    v23 = swift_release();
LABEL_31:
    v26 = 0;
    v28 = 0xE000000000000000;
    goto LABEL_32;
  }
  __break(1u);
LABEL_127:
  __break(1u);
  return result;
}

uint64_t sub_1B8871A04()
{
  uint64_t v0;
  uint64_t j;
  uint64_t v2;
  uint64_t (*v3)(void);
  unint64_t v4;
  uint64_t i;
  uint64_t isUniquelyReferenced_nonNull_native;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *(*v19)(uint64_t *__return_ptr);
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *(*v24)(uint64_t *__return_ptr);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  unsigned __int8 v76;

  v3 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v4 = v3();
  if (v4 >> 62)
    goto LABEL_149;
  for (i = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_1B8912FD8())
  {
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    if (i < 1)
      break;
    v71 = 0;
    v7 = (char *)MEMORY[0x1E0DEE9D8];
    v8 = 4;
    while (1)
    {
      v9 = *((_QWORD *)v7 + 2);
      v10 = v9 ? *(_QWORD *)&v7[8 * v9 + 24] : 0;
      v11 = v8 - 4;
      v12 = ((uint64_t (*)(uint64_t))v3)(isUniquelyReferenced_nonNull_native);
      v13 = v12;
      if ((v12 & 0xC000000000000001) == 0)
        break;
      j = MEMORY[0x1BCCB4394](v8 - 4, v12);
LABEL_11:
      swift_bridgeObjectRelease();
      v14 = *(_BYTE *)(j + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      HIBYTE(v72) = v14;
      BYTE6(v72) = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v72 + 7, (unsigned __int8 *)&v72 + 6))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1B8876E4C(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v16 = *((_QWORD *)v7 + 2);
        v15 = *((_QWORD *)v7 + 3);
        if (v16 >= v15 >> 1)
          v7 = sub_1B8876E4C((char *)(v15 > 1), v16 + 1, 1, v7);
        v10 = 0;
        *((_QWORD *)v7 + 2) = v16 + 1;
        *(_QWORD *)&v7[8 * v16 + 32] = 0;
      }
      else
      {
        BYTE5(v72) = v14;
        BYTE4(v72) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v72 + 5, (unsigned __int8 *)&v72 + 4)&& *((_QWORD *)v7 + 2))
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v17 = *((_QWORD *)v7 + 2);
            if (!v17)
              goto LABEL_66;
          }
          else
          {
            isUniquelyReferenced_nonNull_native = (uint64_t)sub_1B8878388((uint64_t)v7);
            v7 = (char *)isUniquelyReferenced_nonNull_native;
            v17 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
            if (!v17)
            {
LABEL_66:
              __break(1u);
              goto LABEL_67;
            }
          }
          *((_QWORD *)v7 + 2) = v17 - 1;
        }
      }
      v18 = (*(uint64_t (**)(void))(*(_QWORD *)j + 256))();
      if (v18)
      {
        v13 = v18;
        v19 = *(_QWORD *(**)(uint64_t *__return_ptr))(*(_QWORD *)v18 + 272);
        v20 = v19((uint64_t *)((char *)&v72 + 1));
        if (BYTE1(v72) == 1)
        {
          v2 = sub_1B8871A04(v20);
          swift_release();
          if (__OFADD__(v2, 1))
            goto LABEL_76;
          if (v2 + 1 > v10)
            v10 = v2 + 1;
        }
        else
        {
          v21 = ((_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))v19)(&v72, v20);
          if (v72 >= 3u)
          {
            v22 = sub_1B8871A04(v21);
            swift_release();
            if (v22 > v10)
              v10 = v22;
          }
          else
          {
            swift_release();
          }
        }
      }
      v23 = (*(uint64_t (**)(void))(*(_QWORD *)j + 280))();
      if (v23)
      {
        v13 = v23;
        v24 = *(_QWORD *(**)(uint64_t *__return_ptr))(*(_QWORD *)v23 + 272);
        v25 = v24((uint64_t *)((char *)&v72 + 3));
        if (BYTE3(v72) == 1)
        {
          v2 = sub_1B8871A04(v25);
          v23 = swift_release();
          if (__OFADD__(v2, 1))
            goto LABEL_77;
          if (v2 + 1 > v10)
            v10 = v2 + 1;
          v2 = *((_QWORD *)v7 + 2);
          if (!v2)
            goto LABEL_49;
          goto LABEL_42;
        }
        v26 = ((_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))v24)((uint64_t *)((char *)&v72 + 2), v25);
        if (BYTE2(v72) >= 3u)
        {
          v34 = sub_1B8871A04(v26);
          v23 = swift_release();
          if (v34 > v10)
            v10 = v34;
          v2 = *((_QWORD *)v7 + 2);
          if (!v2)
            goto LABEL_49;
          goto LABEL_42;
        }
        v23 = swift_release();
      }
      v2 = *((_QWORD *)v7 + 2);
      if (!v2)
        goto LABEL_49;
LABEL_42:
      v13 = v2 - 1;
      if (v10 <= *(_QWORD *)&v7[8 * v2 + 24])
        v27 = *(_QWORD *)&v7[8 * v2 + 24];
      else
        v27 = v10;
      v23 = swift_isUniquelyReferenced_nonNull_native();
      if ((v23 & 1) == 0)
      {
        v23 = (uint64_t)sub_1B8878388((uint64_t)v7);
        v7 = (char *)v23;
      }
      if ((unint64_t)v2 > *((_QWORD *)v7 + 2))
        goto LABEL_75;
      *(_QWORD *)&v7[8 * v13 + 32] = v27;
LABEL_49:
      v28 = ((uint64_t (*)(uint64_t))v3)(v23);
      v13 = v28;
      if ((v28 & 0xC000000000000001) != 0)
      {
        v29 = MEMORY[0x1BCCB4394](v8 - 4, v28);
      }
      else
      {
        if ((unint64_t)v11 >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_74;
        v29 = *(_QWORD *)(v28 + 8 * v8);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 312))(v10);
      swift_release();
      v30 = swift_release();
      v31 = v71;
      if (v10 > v71)
        v31 = v10;
      v71 = v31;
      v32 = ((uint64_t (*)(uint64_t))v3)(v30);
      if (v32 >> 62)
        j = sub_1B8912FD8();
      else
        j = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      v33 = v8 - 3;
      ++v8;
      if (v33 >= j)
        goto LABEL_68;
    }
    if ((unint64_t)v11 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      j = *(_QWORD *)(v12 + 8 * v8);
      swift_retain();
      goto LABEL_11;
    }
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    while (2)
    {
      v37 = MEMORY[0x1BCCB4394](j, v13);
LABEL_79:
      v38 = swift_bridgeObjectRelease();
      v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 304))(v38);
      swift_release();
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 312))(v39);
      swift_release();
      while (2)
      {
        while (2)
        {
          v36 = swift_release();
          j = v11;
          if (v11 <= 0)
            goto LABEL_139;
LABEL_81:
          v40 = *((_QWORD *)v7 + 2);
          if (v40)
            v2 = *(_QWORD *)&v7[8 * v40 + 24];
          else
            v2 = 0;
          v11 = j - 1;
          v41 = ((uint64_t (*)(uint64_t))v3)(v36);
          if ((v41 & 0xC000000000000001) != 0)
          {
            v42 = MEMORY[0x1BCCB4394](j - 1, v41);
          }
          else
          {
            if (v11 >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            v42 = *(_QWORD *)(v41 + 8 * j + 24);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          v43 = *(_BYTE *)(v42 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          v76 = v43;
          v75 = 16;
          if (static CalculateExpression.TokenType.== infix(_:_:)(&v76, &v75))
          {
            v2 = (*(uint64_t (**)(void))(*(_QWORD *)v42 + 304))();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v7 = sub_1B8876E4C(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
            v45 = *((_QWORD *)v7 + 2);
            v44 = *((_QWORD *)v7 + 3);
            v46 = v45 + 1;
            if (v45 >= v44 >> 1)
              v7 = sub_1B8876E4C((char *)(v44 > 1), v45 + 1, 1, v7);
            *((_QWORD *)v7 + 2) = v46;
            *(_QWORD *)&v7[8 * v45 + 32] = v2;
LABEL_99:
            if (v2 <= *(_QWORD *)&v7[8 * v46 + 24])
              v49 = *(_QWORD *)&v7[8 * v46 + 24];
            else
              v49 = v2;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v7 = sub_1B8878388((uint64_t)v7);
            if (v46 > *((_QWORD *)v7 + 2))
              goto LABEL_145;
            *(_QWORD *)&v7[8 * v46 + 24] = v49;
          }
          else
          {
            v74 = v43;
            v73 = 15;
            v47 = static CalculateExpression.TokenType.== infix(_:_:)(&v74, &v73);
            v46 = *((_QWORD *)v7 + 2);
            if (v47)
            {
              if (!v46)
                goto LABEL_106;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              {
                v48 = *((_QWORD *)v7 + 2);
                if (!v48)
                  goto LABEL_138;
              }
              else
              {
                v7 = sub_1B8878388((uint64_t)v7);
                v48 = *((_QWORD *)v7 + 2);
                if (!v48)
                {
LABEL_138:
                  __break(1u);
LABEL_139:
                  swift_bridgeObjectRelease();
                  return v71;
                }
              }
              v46 = v48 - 1;
              *((_QWORD *)v7 + 2) = v48 - 1;
            }
            if (v46)
              goto LABEL_99;
          }
LABEL_106:
          v50 = v3();
          if ((v50 & 0xC000000000000001) != 0)
          {
            v51 = MEMORY[0x1BCCB4394](j - 1, v50);
          }
          else
          {
            if (v11 >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_142;
            v51 = *(_QWORD *)(v50 + 8 * j + 24);
            swift_retain();
          }
          v52 = swift_bridgeObjectRelease();
          v53 = ((uint64_t (*)(uint64_t))v3)(v52);
          if ((v53 & 0xC000000000000001) != 0)
          {
            v54 = MEMORY[0x1BCCB4394](j - 1, v53);
          }
          else
          {
            if (v11 >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_143;
            v54 = *(_QWORD *)(v53 + 8 * j + 24);
            swift_retain();
          }
          v55 = swift_bridgeObjectRelease();
          v56 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v54 + 304))(v55);
          swift_release();
          if (v2 <= v56)
            v57 = v56;
          else
            v57 = v2;
          (*(void (**)(uint64_t))(*(_QWORD *)v51 + 312))(v57);
          v58 = swift_release();
          v59 = ((uint64_t (*)(uint64_t))v3)(v58);
          if ((v59 & 0xC000000000000001) != 0)
          {
            v60 = MEMORY[0x1BCCB4394](j - 1, v59);
          }
          else
          {
            if (v11 >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_144;
            v60 = *(_QWORD *)(v59 + 8 * j + 24);
            swift_retain();
          }
          v61 = swift_bridgeObjectRelease();
          v62 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 304))(v61);
          v63 = swift_release();
          v64 = v71;
          if (v62 > v71)
            v64 = v62;
          v71 = v64;
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 344))(v63) & 1) == 0)
            continue;
          break;
        }
        v65 = v3();
        if (v65 >> 62)
          v2 = sub_1B8912FD8();
        else
          v2 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
        v66 = swift_bridgeObjectRelease();
        if (__OFSUB__(v2, 2))
          goto LABEL_146;
        if (v11 >= v2 - 2)
          continue;
        break;
      }
      v67 = ((uint64_t (*)(uint64_t))v3)(v66);
      if ((v67 & 0xC000000000000001) == 0)
      {
        if (v11 < *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v2 = *(_QWORD *)(v67 + 8 * j + 24);
          swift_retain();
          goto LABEL_128;
        }
LABEL_147:
        __break(1u);
        goto LABEL_148;
      }
      v2 = MEMORY[0x1BCCB4394](j - 1, v67);
LABEL_128:
      v68 = swift_bridgeObjectRelease();
      v69 = ((uint64_t (*)(uint64_t))v3)(v68);
      v13 = v69;
      if ((v69 & 0xC000000000000001) != 0)
        continue;
      break;
    }
    if ((unint64_t)j < *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v37 = *(_QWORD *)(v69 + 8 * j + 32);
      swift_retain();
      goto LABEL_79;
    }
LABEL_148:
    __break(1u);
LABEL_149:
    ;
  }
LABEL_67:
  v71 = 0;
LABEL_68:
  v35 = ((uint64_t (*)(uint64_t))v3)(isUniquelyReferenced_nonNull_native);
  if (v35 >> 62)
    goto LABEL_151;
  for (j = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10); ; j = sub_1B8912FD8())
  {
    swift_bridgeObjectRelease();
    v36 = swift_bridgeObjectRelease();
    if (!__OFSUB__(j, 1))
      break;
    __break(1u);
LABEL_151:
    ;
  }
  if (((j - 1) & 0x8000000000000000) == 0)
  {
    v7 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_81;
  }
  return v71;
}

unint64_t sub_1B8872348()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unsigned __int8 v8;
  BOOL v9;
  uint64_t v10;
  uint64_t (*v11)(unsigned __int8 *);
  uint64_t v12;
  uint64_t (*v13)(unsigned __int8 *, _QWORD);
  _QWORD *v14;
  _QWORD *v15;
  unsigned __int8 v16[39];
  unsigned __int8 v17;

  v1 = v0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
  v3 = result;
  if (!(result >> 62))
  {
    v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  result = sub_1B8912FD8();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = 0;
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCB4394](i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain();
      }
      v8 = *(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v16[0] = v8;
      v17 = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v16, &v17))
      {
        v9 = __OFADD__(v5++, 1);
        if (v9)
        {
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
      }
      else
      {
        v16[0] = v8;
        v17 = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)(v16, &v17))
        {
          v9 = __OFSUB__(v5--, 1);
          if (v9)
            goto LABEL_25;
        }
      }
      v10 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 256))();
      if (v10)
      {
        sub_1B8872348();
        v10 = swift_release();
      }
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 280))(v10))
      {
        sub_1B8872348();
        swift_release();
      }
      swift_release();
    }
    result = swift_bridgeObjectRelease();
    if (v5 >= 1)
    {
      v11 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v1 + 408);
      type metadata accessor for CalculateExpression.RichToken();
      v12 = v5 + 1;
      do
      {
        v16[0] = 16;
        swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v16, 1);
        v13 = (uint64_t (*)(unsigned __int8 *, _QWORD))v11(v16);
        v15 = v14;
        MEMORY[0x1BCCB40AC]();
        if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B8912CCC();
        sub_1B8912CFC();
        sub_1B8912CA8();
        result = v13(v16, 0);
        --v12;
      }
      while (v12 > 1);
    }
  }
  return result;
}

uint64_t sub_1B88725BC()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t (*v83)(void);
  _QWORD *v84;
  unsigned __int8 v85;
  unint64_t v86;
  char v87;
  uint64_t v88;

  v1 = v0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
  if (result == 2)
    return result;
  v88 = MEMORY[0x1E0DEE9D8];
  v87 = 0;
  v83 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 392);
  v3 = v83();
  if (v3 >> 62)
  {
    v4 = sub_1B8912FD8();
    v80 = v0;
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v80 = v0;
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
        goto LABEL_124;
      v5 = 0;
      v6 = 0;
      for (i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1BCCB4394](i, v3);
        }
        else
        {
          v8 = *(_QWORD *)(v3 + 8 * i + 32);
          swift_retain();
        }
        if ((*(uint64_t (**)(void))(*(_QWORD *)v8 + 256))())
        {
          sub_1B88725BC();
          swift_release();
        }
        if (v6)
        {
          v9 = *(_BYTE *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v86) = v9;
          swift_retain();
          if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
            || (LOBYTE(v86) = v9,
                LOBYTE(v84) = 16,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84))
            || (LOBYTE(v86) = v9,
                LOBYTE(v84) = 7,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84))
            || (LOBYTE(v86) = v9,
                LOBYTE(v84) = 8,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84)))
          {
            v10 = *(_BYTE *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            LOBYTE(v86) = v10;
            if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
              || (LOBYTE(v86) = v10,
                  LOBYTE(v84) = 15,
                  static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84))
              || (LOBYTE(v86) = v10,
                  LOBYTE(v84) = 10,
                  static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84)))
            {
              LOBYTE(v86) = v9;
              LOBYTE(v84) = 1;
              if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, (unsigned __int8 *)&v84)|| (LOBYTE(v86) = v10, (CalculateExpression.TokenType.isConstant.getter() & 1) == 0))
              {
                LOBYTE(v86) = 5;
                type metadata accessor for CalculateExpression.RichToken();
                swift_allocObject();
                v11 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v86, 1);
                MEMORY[0x1BCCB40AC](v11);
                if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1B8912CCC();
                sub_1B8912CFC();
                sub_1B8912CA8();
                v5 = 1;
              }
            }
          }
          swift_release();
        }
        v12 = swift_retain();
        MEMORY[0x1BCCB40AC](v12);
        if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B8912CCC();
        sub_1B8912CFC();
        sub_1B8912CA8();
        swift_release();
        v13 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 280);
        v14 = swift_retain();
        if (v13(v14))
        {
          sub_1B88725BC();
          swift_release();
        }
        swift_release();
        v6 = v8;
      }
      v87 = v5;
      v1 = v80;
    }
  }
  swift_bridgeObjectRelease();
  v86 = sub_1B887869C(MEMORY[0x1E0DEE9D8]);
  v15 = v83();
  if (v15 >> 62)
    goto LABEL_91;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16)
  {
LABEL_34:
    v17 = 0;
    v82 = v15 & 0xC000000000000001;
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v19 = 4;
    v79 = v15;
    v81 = v16;
    while (1)
    {
      v21 = v19 - 4;
      if (v82)
      {
        v22 = MEMORY[0x1BCCB4394](v19 - 4, v15);
        v23 = v19 - 3;
        if (__OFADD__(v21, 1))
          goto LABEL_85;
      }
      else
      {
        v22 = *(_QWORD *)(v15 + 8 * v19);
        swift_retain();
        v23 = v19 - 3;
        if (__OFADD__(v21, 1))
        {
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          swift_bridgeObjectRetain();
          v16 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (!v16)
            break;
          goto LABEL_34;
        }
      }
      v24 = *(_BYTE *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v84) = v24;
      v85 = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v84, &v85))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1B8876E4C(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
        v26 = *((_QWORD *)v18 + 2);
        v25 = *((_QWORD *)v18 + 3);
        if (v26 >= v25 >> 1)
          v18 = sub_1B8876E4C((char *)(v25 > 1), v26 + 1, 1, v18);
        *((_QWORD *)v18 + 2) = v26 + 1;
        *(_QWORD *)&v18[8 * v26 + 32] = v21;
        swift_release();
        v17 = v22;
        v15 = v79;
      }
      else
      {
        LOBYTE(v84) = v24;
        v85 = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v84, &v85))
        {
          v77 = (uint64_t)v18;
          if (((*(uint64_t (**)(void))(*(_QWORD *)v22 + 232))() & 1) != 0)
          {
            v27 = *((_QWORD *)v18 + 2);
            if (v27)
            {
              v28 = v18;
              v29 = v17;
              v30 = *(_QWORD *)&v28[8 * v27 + 24];
              v15 = v1;
              v31 = v83();
              if ((v31 & 0xC000000000000001) != 0)
              {
                v32 = MEMORY[0x1BCCB4394](v30, v31);
              }
              else
              {
                if ((v30 & 0x8000000000000000) != 0)
                  goto LABEL_89;
                if (v30 >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_90;
                v32 = *(_QWORD *)(v31 + 8 * v30 + 32);
                swift_retain();
              }
              v33 = swift_bridgeObjectRelease();
              v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v32 + 232))(v33);
              swift_release();
              v78 = 1;
              v17 = v29;
              if ((v34 & 1) == 0 || !v29)
                goto LABEL_63;
LABEL_60:
              LOBYTE(v84) = *(_BYTE *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              v85 = 15;
              sub_1B885DDA0();
              v35 = sub_1B8912AA4() ^ 1;
LABEL_62:
              v78 = v35;
LABEL_63:
              v15 = v86;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v84 = (_QWORD *)v15;
              v1 = sub_1B8873F8C(v19 - 4);
              v38 = *(_QWORD *)(v15 + 16);
              v39 = (v37 & 1) == 0;
              v40 = v38 + v39;
              if (__OFADD__(v38, v39))
                goto LABEL_86;
              v41 = v37;
              if (*(_QWORD *)(v15 + 24) >= v40)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  sub_1B8878024();
              }
              else
              {
                sub_1B8877A50(v40, isUniquelyReferenced_nonNull_native);
                v42 = sub_1B8873F8C(v19 - 4);
                if ((v41 & 1) != (v43 & 1))
                  goto LABEL_125;
                v1 = v42;
              }
              v15 = (unint64_t)v84;
              v18 = (char *)v77;
              if ((v41 & 1) != 0)
              {
                v44 = v78;
                *(_BYTE *)(v84[7] + v1) = v78 & 1;
              }
              else
              {
                v84[(v1 >> 6) + 8] |= 1 << v1;
                *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v1) = v21;
                v44 = v78;
                *(_BYTE *)(*(_QWORD *)(v15 + 56) + v1) = v78 & 1;
                v45 = *(_QWORD *)(v15 + 16);
                v46 = __OFADD__(v45, 1);
                v47 = v45 + 1;
                if (v46)
                  goto LABEL_87;
                *(_QWORD *)(v15 + 16) = v47;
              }
              v86 = v15;
              swift_bridgeObjectRelease();
              v48 = *(_QWORD *)(v77 + 16);
              v1 = v80;
              if (v48
                && (v49 = *(_QWORD *)(v77 + 8 * v48 + 24),
                    v50 = swift_isUniquelyReferenced_nonNull_native(),
                    v84 = (_QWORD *)v15,
                    sub_1B887839C(v44 & 1, v49, v50),
                    v86 = (unint64_t)v84,
                    swift_bridgeObjectRelease(),
                    *(_QWORD *)(v77 + 16)))
              {
                v15 = v79;
                v20 = v81;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                {
                  v51 = *(_QWORD *)(v77 + 16);
                  if (!v51)
                    goto LABEL_88;
                }
                else
                {
                  v18 = sub_1B8878388(v77);
                  v51 = *((_QWORD *)v18 + 2);
                  if (!v51)
                    goto LABEL_88;
                }
                *((_QWORD *)v18 + 2) = v51 - 1;
              }
              else
              {
                v15 = v79;
                v20 = v81;
              }
              swift_release();
              v17 = v22;
              goto LABEL_37;
            }
            if (v17)
              goto LABEL_60;
          }
          LOBYTE(v35) = 1;
          goto LABEL_62;
        }
        swift_release();
      }
      v20 = v81;
LABEL_37:
      ++v19;
      if (v23 == v20)
      {
        swift_bridgeObjectRelease();
        v52 = *((_QWORD *)v18 + 2);
        if (!v52)
          goto LABEL_115;
        goto LABEL_93;
      }
    }
  }
  swift_bridgeObjectRelease();
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v52 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v52)
  {
LABEL_115:
    v84 = 0;
    v72 = swift_bridgeObjectRetain();
    v73 = sub_1B8878EE0(v72, &v88, (uint64_t *)&v84, (uint64_t *)&v86, &v87);
    swift_bridgeObjectRelease();
    v88 = v73;
    swift_bridgeObjectRelease();
    v84 = 0;
    v74 = swift_bridgeObjectRetain();
    v88 = sub_1B887911C(v74, &v84, &v88, sub_1B8873038, 0, &v87);
    swift_bridgeObjectRelease();
    if (v87 == 1)
    {
      v75 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 400);
      v76 = swift_bridgeObjectRetain();
      v75(v76);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_93:
  v53 = swift_bridgeObjectRetain();
  v54 = 0;
  v55 = (_QWORD *)v86;
  while (1)
  {
    v56 = *(_QWORD *)&v18[8 * v54 + 32];
    v57 = ((uint64_t (*)(uint64_t))v83)(v53);
    if ((v57 & 0xC000000000000001) != 0)
    {
      v58 = MEMORY[0x1BCCB4394](v56, v57);
      goto LABEL_101;
    }
    if ((v56 & 0x8000000000000000) != 0)
      break;
    if (v56 >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_121;
    v58 = *(_QWORD *)(v57 + 8 * v56 + 32);
    swift_retain();
LABEL_101:
    v59 = swift_bridgeObjectRelease();
    v60 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 232))(v59);
    v53 = swift_release();
    if ((v60 & 1) == 0)
      goto LABEL_96;
    v61 = swift_isUniquelyReferenced_nonNull_native();
    v84 = v55;
    v86 = 0x8000000000000000;
    v63 = sub_1B8873F8C(v56);
    v64 = v55[2];
    v65 = (v62 & 1) == 0;
    v66 = v64 + v65;
    if (__OFADD__(v64, v65))
      goto LABEL_122;
    v67 = v62;
    if (v55[3] >= v66)
    {
      if ((v61 & 1) != 0)
      {
        v55 = v84;
        if ((v62 & 1) == 0)
          goto LABEL_109;
      }
      else
      {
        sub_1B8878024();
        v55 = v84;
        if ((v67 & 1) == 0)
          goto LABEL_109;
      }
    }
    else
    {
      sub_1B8877A50(v66, v61);
      v68 = sub_1B8873F8C(v56);
      if ((v67 & 1) != (v69 & 1))
        goto LABEL_125;
      v63 = v68;
      v55 = v84;
      if ((v67 & 1) == 0)
      {
LABEL_109:
        v55[(v63 >> 6) + 8] |= 1 << v63;
        *(_QWORD *)(v55[6] + 8 * v63) = v56;
        *(_BYTE *)(v55[7] + v63) = 0;
        v70 = v55[2];
        v46 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        if (v46)
          goto LABEL_123;
        v55[2] = v71;
        goto LABEL_95;
      }
    }
    *(_BYTE *)(v55[7] + v63) = 0;
LABEL_95:
    v86 = (unint64_t)v55;
    v53 = swift_bridgeObjectRelease();
    v1 = v80;
LABEL_96:
    if (v52 == ++v54)
    {
      swift_bridgeObjectRelease();
      goto LABEL_115;
    }
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B8873038(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  unsigned __int8 v4;
  char v5;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14[2];
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18[2];

  v3 = *(_BYTE *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v14[1] = v3;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
  {
    v14[0] = v3;
    v13 = 16;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(v14, &v13))
    {
      v12 = v3;
      v11 = 7;
      if (!static CalculateExpression.TokenType.== infix(_:_:)(&v12, &v11))
      {
        v10 = v3;
        v9 = 8;
        if (!static CalculateExpression.TokenType.== infix(_:_:)(&v10, &v9))
          goto LABEL_10;
      }
    }
  }
  v4 = *(_BYTE *)(a2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v18[1] = v4;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
    || (v18[0] = v4, v17 = 15, static CalculateExpression.TokenType.== infix(_:_:)(v18, &v17))
    || (v16 = v4, v15 = 10, static CalculateExpression.TokenType.== infix(_:_:)(&v16, &v15)))
  {
    v8 = v3;
    v5 = 1;
    v7 = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v8, &v7))
      v5 = CalculateExpression.TokenType.isConstant.getter() ^ 1;
  }
  else
  {
LABEL_10:
    v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1B887316C()
{
  id v0;
  void *v1;
  unint64_t v2;
  uint64_t i;
  unint64_t v4;
  char **v5;
  uint64_t v6;
  BOOL v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D8BED8]), sel_initWithIsNumberOverride_, 1);
  if (!v0)
    return sub_1B8861F2C(MEMORY[0x1E0DEE9D8]);
  v1 = v0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v70 + 392))();
  if (v2 >> 62)
    goto LABEL_57;
  for (i = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1B8912FD8())
  {
    v4 = 0;
    v73 = v2;
    v74 = v2 & 0xC000000000000001;
    v71 = v2 + 32;
    v72 = v2 & 0xFFFFFFFFFFFFFF8;
    v5 = &selRef_isSimpleVerticalMath;
    while (2)
    {
      if (v74)
      {
        v6 = MEMORY[0x1BCCB4394](v4, v73);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_55;
LABEL_14:
        v8 = *(uint64_t (**)(void))(*(_QWORD *)v6 + 256);
        v9 = v8();
        if (v9)
        {
          v10 = v9;
          if (((*(uint64_t (**)(void))(*(_QWORD *)v6 + 344))() & 1) == 0)
          {
            (*(void (**)(void))(*(_QWORD *)v10 + 752))();
            v11 = (void *)sub_1B8912A14();
            swift_bridgeObjectRelease();
            objc_msgSend(v1, sel_appendMathEquation_, v11);

            v5 = &selRef_isSimpleVerticalMath;
          }
          v9 = swift_release();
        }
        v12 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
        switch(*(_BYTE *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type))
        {
          case 1:
            (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v6 + 392))(&v77, v9);
            sub_1B88789CC();
            sub_1B8912C78();
            v13 = sub_1B8912C78();
            if (v75 == v76)
            {
              v14 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v70 + 176);
              v15 = v14(v13);
              v16 = swift_release();
              if (v15)
              {
                if (!v14(v16))
                  goto LABEL_59;
                v17 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 632))();
                v19 = v18;
                swift_release();
              }
              else
              {
                v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 208))(v16);
                v19 = v35;
              }
              sub_1B8873AB8(101, 0xE100000000000000, v17, v19);
              if ((v36 & 1) != 0)
              {
                v58 = (void *)sub_1B8912AB0();
                v59 = swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addNumber_implicit_, v58, (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 232))(v59) & 1);

                v5 = &selRef_isSimpleVerticalMath;
              }
              else
              {
                swift_bridgeObjectRetain();
                v37 = sub_1B8912C0C();
                v65 = v38;
                v68 = v37;
                v40 = v39;
                v42 = v41;
                swift_bridgeObjectRelease();
                v43 = MEMORY[0x1BCCB3F20](v68, v40, v65, v42);
                v66 = v44;
                v69 = v43;
                swift_bridgeObjectRelease();
                v45 = sub_1B8912B28();
                v46 = sub_1B8873BA4(v45, v17, v19);
                v48 = v47;
                v50 = v49;
                v52 = v51;
                swift_bridgeObjectRelease();
                MEMORY[0x1BCCB3F20](v46, v48, v50, v52);
                swift_bridgeObjectRelease();
                v53 = (void *)sub_1B8912AB0();
                v54 = swift_bridgeObjectRelease();
                v55 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 232);
                objc_msgSend(v1, sel_addNumber_implicit_, v53, v55(v54) & 1);

                v56 = (void *)sub_1B8912AB0();
                objc_msgSend(v1, sel_addIdentifier_, v56);

                v5 = &selRef_isSimpleVerticalMath;
                v22 = (void *)sub_1B8912AB0();
                v57 = swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addNumber_implicit_, v22, v55(v57) & 1, v66, v69);
LABEL_26:

              }
            }
            else
            {
              v75 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 208))(v13);
              sub_1B8912B7C();
              v5 = &selRef_isSimpleVerticalMath;
              if (v30)
              {
                do
                {
                  v31 = (void *)sub_1B8912AB0();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v1, sel_addIdentifier_, v31);

                  sub_1B8912B7C();
                }
                while (v32);
              }
              v33 = swift_bridgeObjectRelease();
              v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 280))(v33);
              if (v34)
              {
                v28 = v34;
LABEL_45:
                (*(void (**)(void))(*(_QWORD *)v28 + 752))();
                v21 = (void *)sub_1B8912A14();
                swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addSubscript_superscript_, v21, 0);
LABEL_46:
                swift_release();

              }
            }
LABEL_27:
            v2 = v6;
            v23 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 280))();
            if (v23)
            {
              v24 = v23;
              v25 = *(_BYTE *)(v6 + v12);
              LOBYTE(v75) = v25;
              LOBYTE(v76) = 1;
              sub_1B885DDA0();
              v2 = (unint64_t)&type metadata for CalculateExpression.TokenType;
              if ((sub_1B8912AA4() & 1) == 0)
              {
                LOBYTE(v75) = v25;
                LOBYTE(v76) = 7;
                v2 = (unint64_t)&type metadata for CalculateExpression.TokenType;
                if ((sub_1B8912AA4() & 1) == 0)
                {
                  v2 = v6;
                  if (((*(uint64_t (**)(void))(*(_QWORD *)v6 + 360))() & 1) == 0)
                  {
                    v2 = (*(uint64_t (**)(void))(*(_QWORD *)v24 + 752))();
                    v26 = (void *)sub_1B8912A14();
                    swift_bridgeObjectRelease();
                    objc_msgSend(v1, sel_appendMathEquation_, v26);

                  }
                }
              }
              swift_release();
              v5 = &selRef_isSimpleVerticalMath;
            }
            swift_release();
            if (v4 != i)
              continue;
            goto LABEL_53;
          case 3:
          case 4:
          case 5:
          case 6:
          case 8:
          case 9:
            v22 = (void *)sub_1B8912AB0();
            objc_msgSend(v1, sel_addOperator_implicit_, v22, (*(uint64_t (**)(void))(*(_QWORD *)v6 + 232))() & 1, v64, v67);
            goto LABEL_26;
          case 7:
            v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 280))(v9);
            if (!v20)
              goto LABEL_27;
            (*(void (**)(uint64_t))(*(_QWORD *)v20 + 752))(v20);
            v21 = (void *)sub_1B8912A14();
            swift_bridgeObjectRelease();
            objc_msgSend(v1, sel_addSubscript_superscript_, 0, v21);
            goto LABEL_46;
          case 0xA:
            if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 344))(v9) & 1) != 0)
            {
              v27 = v8();
              if (v27)
              {
                (*(void (**)(uint64_t))(*(_QWORD *)v27 + 752))(v27);
                v21 = (void *)sub_1B8912A14();
                swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addRadicalWithRootIndex_, v21);
                goto LABEL_46;
              }
            }
            v9 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 360))();
            if ((v9 & 1) != 0)
            {
              v9 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 280))();
              if (v9)
              {
                v28 = v9;
                v29 = (void *)sub_1B8912AB0();
                objc_msgSend(v1, (SEL)v5 + 1761, v29);

                goto LABEL_45;
              }
            }
LABEL_40:
            (*(void (**)(uint64_t))(*(_QWORD *)v6 + 208))(v9);
            v22 = (void *)sub_1B8912AB0();
            swift_bridgeObjectRelease();
            objc_msgSend(v1, v5[423], v22);
            goto LABEL_26;
          case 0xF:
            objc_msgSend(v1, sel_addOpenParenthesis);
            goto LABEL_27;
          case 0x10:
            objc_msgSend(v1, sel_addCloseParenthesis_, (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 232))(v9) & 1);
            goto LABEL_27;
          default:
            goto LABEL_40;
        }
      }
      break;
    }
    if (v4 >= *(_QWORD *)(v72 + 16))
      goto LABEL_56;
    v6 = *(_QWORD *)(v71 + 8 * v4);
    swift_retain();
    v7 = __OFADD__(v4++, 1);
    if (!v7)
      goto LABEL_14;
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    ;
  }
LABEL_53:
  swift_bridgeObjectRelease();
  v61 = objc_msgSend(v1, sel_mathEquation);
  if (!v61)
  {
    __break(1u);
LABEL_59:
    __break(1u);
    JUMPOUT(0x1B8873A78);
  }
  v62 = v61;
  v63 = sub_1B8912A20();

  return v63;
}

unint64_t sub_1B8873AB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1B8912BF4() != a1 || v9 != a2)
  {
    v10 = sub_1B8913050();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_1B8912B28();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1B8873BA4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1B8912C0C();
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RichExpression.deinit()
{
  uint64_t v0;

  swift_weakDestroy();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.RichExpression.__deallocating_deinit()
{
  uint64_t v0;

  swift_weakDestroy();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8873C50()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1B89130A4();
  (*(void (**)(_BYTE *))(*(_QWORD *)v0 + 168))(v2);
  return sub_1B89130BC();
}

uint64_t sub_1B8873C94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 760))();
}

uint64_t sub_1B8873CBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 168))();
}

uint64_t sub_1B8873CE4()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1B89130A4();
  (*(void (**)(_BYTE *))(**(_QWORD **)v0 + 168))(v2);
  return sub_1B89130BC();
}

BOOL sub_1B8873D28(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B8873D3C()
{
  sub_1B8879EE4(&qword_1ED561B60, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B8917790);
  sub_1B8879EE4(&qword_1EF1B6018, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B8916224);
  return sub_1B8913014();
}

char *sub_1B8873DC8(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *result;
  int64_t v5;

  v3 = *v1;
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    return sub_1B88775D0(result, v5, 0);
  }
  return result;
}

uint64_t sub_1B8873E2C(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1B8873E88()
{
  unint64_t result;

  result = qword_1ED561AD0;
  if (!qword_1ED561AD0)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.Base, &type metadata for CalculateExpression.Base);
    atomic_store(result, (unint64_t *)&qword_1ED561AD0);
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.RichToken()
{
  uint64_t result;

  result = qword_1ED562D90;
  if (!qword_1ED562D90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for CalculateExpression.RichExpression()
{
  return objc_opt_self();
}

unint64_t sub_1B8873F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B89130A4();
  sub_1B8912B10();
  v4 = sub_1B89130BC();
  return sub_1B887406C(a1, a2, v4);
}

unint64_t sub_1B8873F8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8913098();
  return sub_1B887414C(a1, v2);
}

unint64_t sub_1B8873FBC(uint64_t a1)
{
  uint64_t v2;

  sub_1B8912AD4();
  sub_1B89130A4();
  sub_1B8912B10();
  v2 = sub_1B89130BC();
  swift_bridgeObjectRelease();
  return sub_1B88741E8(a1, v2);
}

unint64_t sub_1B887403C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8912EDC();
  return sub_1B887435C(a1, v2);
}

unint64_t sub_1B887406C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B8913050() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B8913050() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B887414C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1B88741E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1B8912AD4();
    v8 = v7;
    if (v6 == sub_1B8912AD4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1B8913050();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1B8912AD4();
          v15 = v14;
          if (v13 == sub_1B8912AD4() && v15 == v16)
            break;
          v18 = sub_1B8913050();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1B887435C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1B8879E74(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCB4310](v9, a1);
      sub_1B8879EB0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1B8874420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B8912C00();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B8860AC4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B8912F84();
  }
LABEL_7:
  v11 = sub_1B88745F4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

uint64_t sub_1B8874504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1B8912C00();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1B8860AC4();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1B8912F84();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1B88745F4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1B8874874(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1B8874AF0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1B89130A4();
  swift_bridgeObjectRetain();
  sub_1B8912B10();
  v8 = sub_1B89130BC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1B8913050() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1B8913050() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1B8875B74(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B8874C9C(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unsigned __int8 v10;
  uint64_t result;
  uint64_t v12;

  v4 = *v2;
  sub_1B88612A8();
  swift_bridgeObjectRetain();
  v5 = sub_1B8912A74();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = ~v6;
    sub_1B885DDA0();
    while ((sub_1B8912AA4() & 1) == 0)
    {
      v7 = (v7 + 1) & v8;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    result = 0;
    v10 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = a2;
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_1B8875D0C(a2, v7, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *a1 = v10;
  return result;
}

uint64_t sub_1B8874DF8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(_QWORD *);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[10];

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1B8912EB8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v20[9] = v8;
      type metadata accessor for CalculateExpression.RichExpression();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v20[0];
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1B8912EAC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v18 = sub_1B8875054(v7, result + 1);
    v20[0] = v18;
    if (*(_QWORD *)(v18 + 24) <= *(_QWORD *)(v18 + 16))
    {
      swift_retain();
      sub_1B887580C();
      v19 = v20[0];
    }
    else
    {
      v19 = v18;
      swift_retain();
    }
    sub_1B8875ACC(a2, v19);
    *v3 = v19;
  }
  else
  {
    sub_1B89130A4();
    v10 = *(void (**)(_QWORD *))(*(_QWORD *)a2 + 168);
    swift_bridgeObjectRetain();
    v10(v20);
    v11 = sub_1B89130BC();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v14 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(v14 + 8 * v13) == a2)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      v15 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v15;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        if (*(_QWORD *)(v14 + 8 * v13) == a2)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20[0] = *v2;
    *v2 = 0x8000000000000000;
    v17 = swift_retain();
    sub_1B8875E7C(v17, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v20[0];
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1B8875054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  _QWORD v16[10];
  uint64_t v17;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE0);
    v2 = sub_1B8912F0C();
    v17 = v2;
    sub_1B8912EA0();
    v3 = sub_1B8912EC4();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for CalculateExpression.RichExpression();
      do
      {
        v16[0] = v4;
        swift_dynamicCast();
        v2 = v17;
        if (*(_QWORD *)(v17 + 24) <= *(_QWORD *)(v17 + 16))
        {
          sub_1B887580C();
          v2 = v17;
        }
        v5 = v16[9];
        sub_1B89130A4();
        (*(void (**)(_QWORD *))(*(_QWORD *)v5 + 168))(v16);
        result = sub_1B89130BC();
        v7 = v2 + 56;
        v8 = -1 << *(_BYTE *)(v2 + 32);
        v9 = result & ~v8;
        v10 = v9 >> 6;
        if (((-1 << v9) & ~*(_QWORD *)(v2 + 56 + 8 * (v9 >> 6))) != 0)
        {
          v11 = __clz(__rbit64((-1 << v9) & ~*(_QWORD *)(v2 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v12 = 0;
          v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v14 = v10 == v13;
            if (v10 == v13)
              v10 = 0;
            v12 |= v14;
            v15 = *(_QWORD *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(_QWORD *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11) = v5;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1B8912EC4();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1B887525C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6078);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1B89130A4();
      sub_1B8912B10();
      result = sub_1B89130BC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B8875538()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6070);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v27 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8)
          goto LABEL_33;
        v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_33;
          v16 = v27[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_33;
            v16 = v27[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v16 = v27[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_1B88612A8();
      result = sub_1B8912A74();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B887580C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE0);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1B89130A4();
      (*(void (**)(char *))(*(_QWORD *)v19 + 168))(v28);
      result = sub_1B89130BC();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1B8875ACC(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  _BYTE v5[72];

  sub_1B89130A4();
  (*(void (**)(_BYTE *))(*(_QWORD *)a1 + 168))(v5);
  sub_1B89130BC();
  result = sub_1B8912E94();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1B8875B74(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1B887525C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1B8875FCC();
      goto LABEL_22;
    }
    sub_1B88764B4();
  }
  v11 = *v4;
  sub_1B89130A4();
  sub_1B8912B10();
  result = sub_1B89130BC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1B8913050(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1B8913074();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1B8913050();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1B8875D0C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1B8875538();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1B887617C();
      goto LABEL_12;
    }
    sub_1B8876760();
  }
  v8 = *v3;
  sub_1B88612A8();
  result = sub_1B8912A74();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_1B885DDA0();
    do
    {
      result = sub_1B8912AA4();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v11 + 48) + a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1B8913074();
  __break(1u);
  return result;
}

uint64_t sub_1B8875E7C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _BYTE v15[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_1B887580C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1B887630C();
      goto LABEL_13;
    }
    sub_1B88769FC();
  }
  v8 = *v3;
  sub_1B89130A4();
  (*(void (**)(_BYTE *))(*(_QWORD *)v5 + 168))(v15);
  result = sub_1B89130BC();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = type metadata accessor for CalculateExpression.RichExpression();
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_12:
      result = sub_1B8913074();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v9;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_12;
      }
    }
  }
LABEL_13:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v11 + 16) = v14;
  return result;
}

void *sub_1B8875FCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6078);
  v2 = *v0;
  v3 = sub_1B8912EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B887617C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6070);
  v2 = *v0;
  v3 = sub_1B8912EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B887630C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE0);
  v2 = *v0;
  v3 = sub_1B8912EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B88764B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6078);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1B89130A4();
    swift_bridgeObjectRetain();
    sub_1B8912B10();
    result = sub_1B89130BC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B8876760()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6070);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v26)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v26)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_1B88612A8();
    result = sub_1B8912A74();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v26)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B88769FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  char v28[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE0);
  v3 = sub_1B8912F00();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v27 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v27)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v27)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v27)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1B89130A4();
    v19 = *(void (**)(char *))(*(_QWORD *)v18 + 168);
    swift_retain();
    v19(v28);
    result = sub_1B89130BC();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v9 + 8 * v22);
      }
      while (v26 == -1);
      v12 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v27)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v27)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

_QWORD *sub_1B8876CA4()
{
  _QWORD **v0;
  _QWORD *v1;
  _QWORD *result;

  v1 = *v0;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)result)
  {
    result = sub_1B8876D2C(result, v1[2] + 1, 1, v1);
    *v0 = result;
  }
  return result;
}

_QWORD *sub_1B8876CEC(_QWORD *result)
{
  _QWORD **v1;
  unint64_t v2;

  v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    result = sub_1B8876D2C((_QWORD *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    *v1 = result;
  }
  return result;
}

_QWORD *sub_1B8876D2C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6048);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4])
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6050);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B8876E4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6020);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B8876F44(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6068);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B8877038(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result;
  if (!(a2 >> 62))
  {
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) >= result)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1B8912FD8();
  result = swift_bridgeObjectRelease();
  if (v3 < v2)
    goto LABEL_6;
LABEL_3:
  if (v2 < 0)
LABEL_7:
    __break(1u);
  return result;
}

unint64_t sub_1B88770B4(unint64_t result, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = result;
  v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v12 = v6 + v9;
    else
      v12 = v6;
    result = (unint64_t)sub_1B8876E4C((char *)result, v12, 1, (char *)v5);
    v5 = result;
  }
  v13 = (_QWORD *)(v5 + 32 + 8 * v7);
  if (!v9)
    goto LABEL_19;
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_25;
  result = (unint64_t)(v13 + 1);
  v17 = (_QWORD *)(v5 + 32 + 8 * a2);
  if (v13 + 1 != v17 || result >= (unint64_t)&v17[v16])
    result = (unint64_t)memmove((void *)result, v17, 8 * v16);
  v18 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v18, v9);
  v19 = v18 + v9;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v19;
LABEL_19:
    *v13 = a3;
    *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1B88771C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  void (*v8)(_QWORD);
  void (*v9)(_QWORD);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = a5;
    v9 = a4;
    v12 = a3;
    v7 = a2;
    v10 = a1;
    v11 = *v6;
    if (!(*v6 >> 62))
    {
      if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  v26 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v26 < v7)
    goto LABEL_30;
LABEL_4:
  v13 = v7 - v10;
  if (__OFSUB__(v7, v10))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v14 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v18 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v30 = v9;
  v11 = *v6;
  v9 = v8;
  if (*v6 >> 62)
    goto LABEL_33;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_35;
LABEL_8:
  v11 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v6 = v11;
  v29 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v17 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if (v11 >> 62)
    goto LABEL_36;
  v18 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x1BCCB43A0](v14, v18, 1, v11);
  swift_bridgeObjectRelease();
  *v6 = v11;
  v17 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v10);
  v9(v30);
  swift_arrayDestroy();
  if (!v5)
  {
LABEL_27:
    *v19 = v29;
    return (char *)sub_1B8912CA8();
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v21 = v27 - v7;
    if (!__OFSUB__(v27, v7))
      goto LABEL_21;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v20 = *(_QWORD *)(v17 + 16);
  v21 = v20 - v7;
  if (__OFSUB__(v20, v7))
    goto LABEL_39;
LABEL_21:
  result = (char *)(v19 + 1);
  v23 = (char *)(v17 + 32 + 8 * v7);
  if (v19 + 1 != (_QWORD *)v23 || result >= &v23[8 * v21])
    result = (char *)memmove(result, v23, 8 * v21);
  if (v11 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v28 = sub_1B8912FD8();
    result = (char *)swift_bridgeObjectRelease();
    v25 = v28 + v5;
    if (!__OFADD__(v28, v5))
      goto LABEL_26;
    goto LABEL_42;
  }
  v24 = *(_QWORD *)(v17 + 16);
  v25 = v24 + v5;
  if (!__OFADD__(v24, v5))
  {
LABEL_26:
    *(_QWORD *)(v17 + 16) = v25;
    goto LABEL_27;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B8877464(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = result;
  if ((a3 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (a2 < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result == a2)
  {
LABEL_7:
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1B8912FE4();
      swift_bridgeObjectRelease();
      return v7;
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      return v7;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (result < a2)
  {
    type metadata accessor for CalculateExpression.Token();
    result = v5;
    do
    {
      v6 = result + 1;
      sub_1B8912F54();
      result = v6;
    }
    while (a2 != v6);
    goto LABEL_7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1B8877560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
    return (uint64_t)sub_1B88775D0(0, *(_QWORD *)(v1 + 16) + 1, 1);
  return result;
}

char *sub_1B88775A8(char *result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
    return sub_1B88775D0((char *)(v2 > 1), (int64_t)(result + 1), 1);
  return result;
}

char *sub_1B88775D0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1B88775EC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1B88775EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

id sub_1B88776EC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = *a1;
  sub_1B8879724((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_1B8877728(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B88784CC((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_1B8879E64(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_1B8873FBC((uint64_t)v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1B88781B0();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_1B8879E64(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1B88784CC((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_1B8879E64(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_1B8873FBC((uint64_t)i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1B8877CEC(v34, 1);
        v36 = sub_1B8873FBC((uint64_t)i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_1B8879724((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1B8879E64(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_1B8879E64(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_1B88784CC((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B8879F24();
    return swift_release();
  }
  sub_1B8877CEC(v18, a4 & 1);
  v20 = sub_1B8873FBC((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1B8879724((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1B8879E64(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CalculateKey();
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B8877A50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6058);
  result = sub_1B8912FFC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      result = sub_1B8913098();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1B8877CEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C10);
  v35 = a2;
  v6 = sub_1B8912FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1B8879E64(v22, v36);
    }
    else
    {
      sub_1B8879724((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1B8912AD4();
    sub_1B89130A4();
    sub_1B8912B10();
    v24 = sub_1B89130BC();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1B8879E64(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1B8878024()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6058);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B88781B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C10);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1B8879724(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1B8879E64(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1B8878374(uint64_t a1)
{
  return sub_1B8876F44(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1B8878388(uint64_t a1)
{
  return sub_1B8876E4C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B887839C(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B8873F8C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1B8878024();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1 & 1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1B8877A50(result, a3 & 1);
  result = sub_1B8873F8C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B88784CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_1B8879724(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_1B8879F4C((uint64_t)v24, (uint64_t)v22);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_1B8879F94((uint64_t)v20, &qword_1ED561B50);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1B887869C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6058);
    v3 = (_QWORD *)sub_1B8913008();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_1B8873F8C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

_BYTE *sub_1B8878770(_BYTE *a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];

  v2 = (_BYTE *)v1;
  v4 = swift_weakInit();
  *(_DWORD *)(v1 + 24) = 16777473;
  *(_BYTE *)(v1 + 28) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = MEMORY[0x1E0DEE9D8];
  v5 = (uint64_t *)(v1 + 40);
  *(_WORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 50) = 0;
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 392))(v4);
  swift_beginAccess();
  *v5 = v6;
  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 176))(v7);
  swift_beginAccess();
  swift_weakAssign();
  v8 = swift_release();
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(v8);
  v10 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v2 + 232))(v9 & 1);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 248))(v10);
  v11 = swift_beginAccess();
  v2[25] = v6 & 1;
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)a1 + 272))(v14, v11);
  LOBYTE(v6) = v14[0];
  v12 = swift_beginAccess();
  v2[26] = v6;
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 296))(v12);
  swift_beginAccess();
  v2[27] = v6 & 1;
  v2[28] = a1[28];
  v2[48] = a1[48];
  v2[49] = a1[49];
  v2[50] = a1[50];
  return v2;
}

unint64_t sub_1B8878944()
{
  unint64_t result;

  result = qword_1ED561B20;
  if (!qword_1ED561B20)
  {
    result = MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED561B20);
  }
  return result;
}

unint64_t sub_1B8878988()
{
  unint64_t result;

  result = qword_1EF1B5FE8;
  if (!qword_1EF1B5FE8)
  {
    result = MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EF1B5FE8);
  }
  return result;
}

unint64_t sub_1B88789CC()
{
  unint64_t result;

  result = qword_1ED561AD8;
  if (!qword_1ED561AD8)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.Base, &type metadata for CalculateExpression.Base);
    atomic_store(result, (unint64_t *)&qword_1ED561AD8);
  }
  return result;
}

uint64_t sub_1B8878A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1B8912D80();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1B8874AF0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1B8878AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1B88612A8();
  result = sub_1B8912D80();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1B8874C9C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_1B8878B14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void (*v13)(_BYTE *, _QWORD);
  _QWORD **v14;
  _QWORD *v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _BYTE v20[32];

  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 208))(a1);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = *(void **)(v2 + 8 * v4 + 32);
      v6 = v5;
      v7 = (void *)sub_1B89127E0();
      v8 = objc_msgSend(v7, sel_code);

      if (v8 == (id)-1003)
        break;
      ++v4;

      if (v3 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();

  }
  else
  {
LABEL_6:
    v9 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 136))(v9);
    v10 = objc_allocWithZone((Class)CalculateError);
    v11 = (void *)sub_1B8912AB0();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initUnbalancedSymbol_, v11);

    v13 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 224))(v20);
    v15 = v14;
    v16 = *v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v15 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_1B8876D2C(0, v16[2] + 1, 1, v16);
      *v15 = v16;
    }
    v19 = v16[2];
    v18 = v16[3];
    if (v19 >= v18 >> 1)
    {
      v16 = sub_1B8876D2C((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
      *v15 = v16;
    }
    v16[2] = v19 + 1;
    v16[v19 + 4] = v12;
    v13(v20, 0);
  }
}

uint64_t sub_1B8878CF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v3 = *a2;
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 256);
  v5 = v4(a1);
  if (v5 >> 62)
    v6 = sub_1B8912FD8();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = swift_bridgeObjectRelease();
  if (v3 < v6)
    *a2 = ++v3;
  v8 = v4(v7);
  if (v8 >> 62)
    v9 = sub_1B8912FD8();
  else
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  if (v3 < v9)
  {
    result = v4(result);
    if ((result & 0xC000000000000001) == 0)
    {
      if (v3 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v3 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v11 = *(_QWORD *)(result + 8 * v3 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      return result;
    }
    v11 = MEMORY[0x1BCCB4394](v3, result);
LABEL_12:
    swift_bridgeObjectRelease();
    v12 = *(_BYTE *)(v11 + 48);
    swift_release();
    v14 = v12;
    v13 = 17;
    result = static CalculateExpression.TokenType.== infix(_:_:)(&v14, &v13);
    if ((result & 1) != 0)
      *a2 = v3 + 1;
  }
  return result;
}

unint64_t sub_1B8878E44(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1B8912B40();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1B8912C0C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8878EE0(unint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, _BYTE *a5)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v19;
  uint64_t v20;

  v20 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_31;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v9 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1BCCB4394](v9, a1);
        v10 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_30;
LABEL_9:
        v11 = *a3;
        v19 = v10;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1BCCB4394](v11);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_27;
          if (v11 >= *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_28;
          swift_retain();
        }
        swift_release();
        if ((CalculateExpression.TokenType.isParenthesis.getter() & 1) != 0
          && (v12 = *a4, *(_QWORD *)(*a4 + 16))
          && (v13 = sub_1B8873F8C(*a3), (v14 & 1) != 0))
        {
          v15 = *(_BYTE *)(*(_QWORD *)(v12 + 56) + v13);
        }
        else
        {
          v15 = 1;
        }
        if (__OFADD__(*a3, 1))
          goto LABEL_29;
        ++*a3;
        if ((v15 & 1) != 0)
        {
          sub_1B8912F90();
          sub_1B8912FB4();
          sub_1B8912FC0();
          sub_1B8912F9C();
        }
        else
        {
          *a5 = 1;
          swift_release();
        }
        ++v9;
        if (v19 == v8)
          return v20;
      }
      if (v9 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      v8 = sub_1B8912FD8();
      if (!v8)
        return MEMORY[0x1E0DEE9D8];
    }
    swift_retain();
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_30;
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B887911C(unint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;

  v7 = v6;
  v29 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_60;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11)
  {
    while (1)
    {
      v12 = 0;
      v25 = v7;
      v26 = a6;
      v28 = v11;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v13 = MEMORY[0x1BCCB4394](v12, a1);
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_52;
LABEL_8:
        v31 = *(_BYTE *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        v30 = 5;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v31, &v30)
          && ((*(uint64_t (**)(void))(*(_QWORD *)v13 + 232))() & 1) != 0)
        {
          v15 = *a2;
          v16 = *a2 - 1;
          if (__OFSUB__(*a2, 1))
            goto LABEL_54;
          if ((v16 & 0x8000000000000000) != 0)
          {
            v18 = 0;
            v7 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_55;
          }
          else
          {
            v17 = *a3;
            if ((*a3 & 0xC000000000000001) != 0)
            {
              v18 = MEMORY[0x1BCCB4394]();
              v7 = *a2 + 1;
              if (__OFADD__(*a2, 1))
                goto LABEL_55;
            }
            else
            {
              if (v16 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v18 = *(_QWORD *)(v17 + 8 * v16 + 32);
              swift_retain();
              v7 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_55;
            }
          }
          if ((unint64_t)*a3 >> 62)
          {
            swift_bridgeObjectRetain();
            a6 = (_BYTE *)sub_1B8912FD8();
            swift_bridgeObjectRelease();
            if (v7 >= (uint64_t)a6)
              goto LABEL_33;
LABEL_21:
            v20 = *a2 + 1;
            v7 = v25;
            if (__OFADD__(*a2, 1))
              goto LABEL_57;
            v21 = *a3;
            if ((*a3 & 0xC000000000000001) != 0)
            {
              v22 = MEMORY[0x1BCCB4394](v20);
              if (!v18)
                goto LABEL_35;
            }
            else
            {
              if ((v20 & 0x8000000000000000) != 0)
                goto LABEL_58;
              if (v20 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_59;
              v22 = *(_QWORD *)(v21 + 8 * v20 + 32);
              swift_retain();
              if (!v18)
                goto LABEL_35;
            }
            if (!v22)
            {
              a6 = v26;
              goto LABEL_34;
            }
            swift_retain();
            swift_retain();
            v19 = a4(v18, v22);
            swift_release_n();
            swift_release_n();
          }
          else
          {
            a6 = *(_BYTE **)((*a3 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v7 < (uint64_t)a6)
              goto LABEL_21;
LABEL_33:
            v7 = v25;
            a6 = v26;
            if (v18)
            {
LABEL_34:
              swift_release();
              v19 = 0;
LABEL_37:
              v11 = v28;
              goto LABEL_38;
            }
LABEL_35:
            swift_release();
            v19 = 0;
          }
          a6 = v26;
          goto LABEL_37;
        }
        v19 = 1;
LABEL_38:
        if (__OFADD__(*a2, 1))
          goto LABEL_53;
        ++*a2;
        if ((v19 & 1) != 0)
        {
          if (v7)
            goto LABEL_49;
          sub_1B8912F90();
          sub_1B8912FB4();
          v11 = v28;
          sub_1B8912FC0();
          sub_1B8912F9C();
        }
        else
        {
          *a6 = 1;
          if (v7)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return v19;
          }
          swift_release();
        }
        ++v12;
        if (v14 == v11)
        {
          v19 = v29;
          goto LABEL_62;
        }
      }
      if (v12 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      v11 = sub_1B8912FD8();
      if (!v11)
        goto LABEL_61;
    }
    v13 = *(_QWORD *)(a1 + 8 * v12 + 32);
    swift_retain();
    v14 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_52;
    goto LABEL_8;
  }
LABEL_61:
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_62:
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_1B88794C4(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[72];

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE0);
      result = sub_1B8912F18();
      v3 = result;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  while ((v1 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCB4394](v6, v1);
    v8 = result;
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_17:
    sub_1B89130A4();
    (*(void (**)(char *))(*(_QWORD *)v8 + 168))(v19);
    result = sub_1B89130BC();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    v15 = *(_QWORD *)(v3 + 48);
    if (((1 << v11) & v13) == 0)
      goto LABEL_23;
    if (*(_QWORD *)(v15 + 8 * v11) == v8)
    {
LABEL_10:
      result = swift_release();
      if (v6 == v4)
        return v3;
    }
    else
    {
      v16 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v16;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
          break;
        if (*(_QWORD *)(v15 + 8 * v11) == v8)
          goto LABEL_10;
      }
LABEL_23:
      *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
      *(_QWORD *)(v15 + 8 * v11) = v8;
      v17 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v17, 1);
      v18 = v17 + 1;
      if (v9)
        goto LABEL_27;
      *(_QWORD *)(v3 + 16) = v18;
      if (v6 == v4)
        return v3;
    }
  }
  if (v6 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  v8 = *(_QWORD *)(v1 + 32 + 8 * v6);
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_17;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B88796EC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B8879724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1B8879760()
{
  unint64_t result;

  result = qword_1EF1B5FF0;
  if (!qword_1EF1B5FF0)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.Operation.Mode, &type metadata for CalculateExpression.Operation.Mode);
    atomic_store(result, (unint64_t *)&qword_1EF1B5FF0);
  }
  return result;
}

uint64_t sub_1B88797A4()
{
  return sub_1B8879EE4(&qword_1EF1B5FF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

unint64_t sub_1B88797D8()
{
  unint64_t result;

  result = qword_1ED561AB8;
  if (!qword_1ED561AB8)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.RichExpression.BaselineOffset, &type metadata for CalculateExpression.RichExpression.BaselineOffset);
    atomic_store(result, (unint64_t *)&qword_1ED561AB8);
  }
  return result;
}

unint64_t sub_1B8879820()
{
  unint64_t result;

  result = qword_1EF1B6000;
  if (!qword_1EF1B6000)
  {
    result = MEMORY[0x1BCCB4D60](&unk_1B8915FBC, &_s14RichExpressionC8WrapModeON);
    atomic_store(result, (unint64_t *)&qword_1EF1B6000);
  }
  return result;
}

uint64_t sub_1B8879864(uint64_t a1, uint64_t a2)
{
  return sub_1B8879EE4(&qword_1ED561AC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.RichExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression.RichExpression);
}

uint64_t sub_1B8879890()
{
  return type metadata accessor for CalculateExpression.RichToken();
}

uint64_t sub_1B8879898()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8912840();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for CalculateExpression.RichToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.maxSuperscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isRoot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isZero.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isLog.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isFlip.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.customBaseValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicitLiteral.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.base.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.base.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.formattedText(parent:significantDigits:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 632))(a1, a2, a3 & 1);
}

uint64_t method lookup function for CalculateExpression.RichExpression()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.activeError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.format.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.effectiveBase.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.needsParentheses(allowExponent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isEmpty.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isPlaceholder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isZero.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.accessibilityMathEquation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1B8879C00(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1B8879C0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.RichExpression.BaselineOffset()
{
  return &type metadata for CalculateExpression.RichExpression.BaselineOffset;
}

uint64_t _s9OperationC4ModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14RichExpressionC14BaselineOffsetOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8879D00 + 4 * byte_1B8915EB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8879D34 + 4 * byte_1B8915EB0[v4]))();
}

uint64_t sub_1B8879D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8879D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8879D44);
  return result;
}

uint64_t sub_1B8879D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8879D58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8879D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8879D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14RichExpressionC8WrapModeOMa()
{
  return &_s14RichExpressionC8WrapModeON;
}

void type metadata accessor for CalculateKey()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1ED562440)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1ED562440);
  }
}

uint64_t sub_1B8879DD4()
{
  return sub_1B8879EE4(&qword_1EF1B6008, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B89174E0);
}

uint64_t sub_1B8879E04()
{
  return sub_1B8879EE4(&qword_1EF1B6010, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B89161EC);
}

uint64_t sub_1B8879E34()
{
  return sub_1B8879EE4(&qword_1ED561B68, 255, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)"a~X.");
}

_OWORD *sub_1B8879E64(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1B8879E74(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1B8879EB0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1B8879EE4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCB4D60](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8879F24()
{
  return swift_release();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1B8879F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8879F94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B8879FD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B887A014(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCB4D60](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B887A064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6088);
  v6 = sub_1B8913008();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1B887D6D4(v12, (uint64_t)v5);
    result = sub_1B887C468((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1B8912840();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1B887A1F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + qword_1ED563B88);
  swift_beginAccess();
  v4 = *v3;
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v5 = sub_1B887C468(a1);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B887A280(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _BYTE v21[24];

  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B8912840();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (uint64_t *)((char *)v1 + qword_1ED563B80);
  swift_beginAccess();
  v12 = *v11;
  v13 = *(_QWORD *)(v3 + 520);
  v14 = *(_QWORD *)(v3 + 536);
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCB3E84](a1, v12, v13, v7, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1B887D11C((uint64_t)v6);
    return 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v16 = (uint64_t *)((char *)v1 + qword_1ED563B88);
    swift_beginAccess();
    v17 = *v16;
    if (*(_QWORD *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      v18 = sub_1B887C468((uint64_t)v10);
      if ((v19 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
        swift_retain();
      }
      else
      {
        v15 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v15;
}

uint64_t sub_1B887A44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 520);
  v7 = sub_1B8912840();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1B8912E28();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v19[-v11];
  v13 = (uint64_t *)((char *)v2 + qword_1ED563B80);
  swift_beginAccess();
  v24 = *v13;
  v14 = *(_QWORD *)(v5 + 528);
  v20 = v6;
  v21 = v14;
  v22 = *(_QWORD *)(v5 + 536);
  v23 = a1;
  v15 = sub_1B8912A50();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEA0D0], v15);
  sub_1B8912C3C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 1, 1, v6);
  }
  else
  {
    v17 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    v18 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v18 + 32))(a2, v12, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v6);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v17, v7);
  }
}

uint64_t sub_1B887A62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1B8912840();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  CalculateExpression.id.getter((uint64_t)v3);
  v4 = sub_1B8912828();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1B887A6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B887AAB0(a1);
  sub_1B887AD1C();
  swift_release();
  sub_1B887A8AC(a1, a2);
  swift_retain();
  sub_1B889BF70();
  return sub_1B887A7E0(v2, a2);
}

uint64_t sub_1B887A750()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1B887AD1C();
  if (result)
  {
    (*(void (**)(void))(*(_QWORD *)v0 + 624))();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B887A7A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1B887AD1C();
  sub_1B887A7E0(v1, a1);
  return v3;
}

uint64_t sub_1B887A7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 520);
  v5 = sub_1B8912E28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v4);
  (*(void (**)(char *))(*(_QWORD *)a1 + 776))(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1B887A8AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *v2;
  v21 = a2;
  v22 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 520);
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8912840();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v15);
  v16 = (uint64_t *)((char *)v2 + qword_1ED563B88);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v16;
  *v16 = 0x8000000000000000;
  sub_1B887CCF8(a1, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
  *v16 = v23;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v11, v21, v9);
  CalculateExpression.id.getter((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  swift_beginAccess();
  sub_1B8912A50();
  sub_1B8912A68();
  return swift_endAccess();
}

uint64_t sub_1B887AAB0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v2 = v1;
  v4 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  MEMORY[0x1E0C80A78](v5);
  v26 = v4;
  v27 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v4 + 520);
  v8 = sub_1B8912E28();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B8912840();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v18);
  swift_beginAccess();
  sub_1B887C604((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_endAccess();
  swift_release();
  v19 = CalculateExpression.document.getter();
  if (v19)
  {
    v20 = v19;
    swift_release();
    if ((_QWORD *)v20 == v2)
      sub_1B889BF70();
  }
  (*(void (**)(uint64_t))(*v2 + 616))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, v7);
  swift_beginAccess();
  sub_1B8912A50();
  v22 = (uint64_t)v27;
  sub_1B8912A2C();
  sub_1B887D11C(v22);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v7);
}

uint64_t sub_1B887AD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8912840();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1B8912A50();
  sub_1B8912A2C();
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    swift_beginAccess();
    v9 = sub_1B887C604((uint64_t)v8);
    swift_endAccess();
    if (v9)
    {
      swift_retain();
      v10 = CalculateExpression.document.getter();
      if (!v10 || (v11 = v10, swift_release(), v11 != v1))
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_release();
        return v9;
      }
      sub_1B889BF70();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v9;
  }
  sub_1B887D11C((uint64_t)v4);
  return 0;
}

uint64_t sub_1B887AEF8()
{
  uint64_t v0;

  swift_beginAccess();
  sub_1B8912840();
  v0 = sub_1B8912A44();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DE9ED0], v0);
  return sub_1B8912DB0();
}

uint64_t sub_1B887AFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(void))(*(_QWORD *)v0 + 696))();
  v1 = sub_1B8912DA4();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v1);
  sub_1B8912C30();
  swift_bridgeObjectRelease();
  v2 = sub_1B8912F3C();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEC320], v2);
  sub_1B8912C6C();
  swift_bridgeObjectRelease();
  v3 = sub_1B8912D20();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF38], v3);
  return sub_1B8912C48();
}

uint64_t sub_1B887B0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(void))(*(_QWORD *)v0 + 696))();
  v1 = sub_1B8912DA4();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v1);
  sub_1B8912C30();
  swift_bridgeObjectRelease();
  v2 = sub_1B8912F3C();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEC320], v2);
  sub_1B8912C6C();
  swift_bridgeObjectRelease();
  v3 = sub_1B8912D20();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF20], v3);
  sub_1B8912A8C();
  v4 = sub_1B8912FCC();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DECD08], v4);
  sub_1B8912DBC();
  v5 = sub_1B891308C();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEDE38], v5);
  return sub_1B8912C54();
}

uint64_t sub_1B887B2A4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1ED563B90);
}

uint64_t sub_1B887B2B4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1ED563B90) = result;
  return result;
}

uint64_t sub_1B887B2C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 568);
  swift_beginAccess();
  v4 = sub_1B8912E28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1B887B334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 568);
  swift_beginAccess();
  v4 = sub_1B8912E28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1B887B3AC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v1;
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 520) - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v8;
  v9 = sub_1B8912E28();
  v10 = MEMORY[0x1E0C80A78](v9);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v22 - v12;
  if ((*(_BYTE *)(v3 + qword_1ED563B90) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v24 = v14;
    v25 = v13;
    v26 = result;
    v27 = v5;
    v23 = v7;
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v16((char *)&v22 - v12, 1, 1, v28);
    v17 = sub_1B887B334((uint64_t)v15);
    *(_BYTE *)(v3 + qword_1ED563B90) = 1;
    result = a1(v17);
    if (!v2)
    {
      *(_BYTE *)(v3 + qword_1ED563B90) = 0;
      v18 = v24;
      sub_1B887B2C4(v24);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v18, 1, v28) == 1)
      {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v18, v26);
      }
      else
      {
        v19 = v27;
        v20 = v23;
        v21 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v23, v18, v28);
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v20, v21);
        v16(v15, 0, 1, v21);
        (*(void (**)(char *))(*(_QWORD *)v3 + 776))(v15);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v26);
        v16(v15, 1, 1, v21);
        sub_1B887B334((uint64_t)v15);
        return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v20, v21);
      }
    }
  }
  return result;
}

uint64_t sub_1B887B5E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v2 = (uint64_t)v1;
  v83 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 520);
  v84 = sub_1B8912E28();
  v5 = *(_QWORD *)(v84 - 8);
  v6 = MEMORY[0x1E0C80A78](v84);
  v81 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v75 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v75 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v75 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v75 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v75 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v75 - v22;
  v24 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  v86 = v24;
  v25 = MEMORY[0x1E0C80A78](v21);
  v78 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v75 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v75 - v31;
  v82 = v3;
  if (((*(uint64_t (**)(uint64_t))(v3 + 360))(v30) & 1) != 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)v2 + 488))();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if ((*(_BYTE *)(v2 + qword_1ED563B90) & 1) == 0)
  {
    v40 = v84;
    v34(v23, v83, v84);
    v42 = v85;
    v41 = v86;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v23, 1, v85) == 1)
    {
      v43 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v23, v40);
      v44 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 696))(v43);
      v45 = v82;
      v46 = *(_QWORD *)(v82 + 536);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v32, v23, v42);
      sub_1B887C41C(v42, v42);
      swift_allocObject();
      v50 = sub_1B8912CB4();
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v51, v32, v42);
      v52 = sub_1B8912D20();
      v53 = MEMORY[0x1BCCB413C](v50, v42);
      v45 = v82;
      if (v53)
        sub_1B887D18C(v50, v42, *(_QWORD *)(v82 + 536));
      swift_bridgeObjectRelease();
      v87 = (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 712))(v32);
      v46 = *(_QWORD *)(v45 + 536);
      MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF38], v52);
      v44 = sub_1B8912D8C();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v32, v42);
    }
    v87 = v44;
    v61 = swift_retain();
    MEMORY[0x1E0C80A78](v61);
    v62 = *(_QWORD *)(v45 + 528);
    *(&v75 - 6) = v42;
    *(&v75 - 5) = v62;
    *(&v75 - 4) = v46;
    *(&v75 - 3) = (uint64_t)sub_1B887D748;
    *(&v75 - 2) = v2;
    v86 = v46;
    v63 = sub_1B8912DA4();
    v64 = type metadata accessor for CalculateExpression();
    MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v63);
    v84 = v64;
    v65 = sub_1B8912C24();
    swift_bridgeObjectRelease();
    swift_release();
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1B8912FD8();
      v66 = result;
      if (!result)
        goto LABEL_30;
    }
    else
    {
      v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v66)
        goto LABEL_30;
    }
    if (v66 < 1)
    {
      __break(1u);
      return result;
    }
    v67 = 0;
    do
    {
      if ((v65 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCB4394](v67, v65);
      else
        swift_retain();
      ++v67;
      v68 = sub_1B885FD04();
      CalculateExpression.setNeedsEvaluation(rebuild:)(v68 & 1);
      swift_release();
    }
    while (v66 != v67);
LABEL_30:
    v69 = swift_bridgeObjectRelease_n();
    v87 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 696))(v69);
    v70 = sub_1B8912C6C();
    swift_bridgeObjectRelease();
    v87 = v70;
    v71 = swift_retain();
    MEMORY[0x1E0C80A78](v71);
    v72 = v86;
    *(&v75 - 6) = v85;
    *(&v75 - 5) = v62;
    *(&v75 - 4) = v72;
    *(&v75 - 3) = (uint64_t)sub_1B887D748;
    *(&v75 - 2) = v2;
    v73 = sub_1B8912D20();
    MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF38], v73);
    v74 = sub_1B8912C24();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 344))(v74);
  }
  v35 = v84;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v34(v17, v83, v84);
  v36 = v85;
  v37 = v86;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  if (v38(v17, 1, v85) == 1)
  {
    v76 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 696))();
    v87 = v76;
    v39 = sub_1B8912DA4();
    MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v39);
    v37 = v86;
    sub_1B8912C60();
    v35 = v84;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v35);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v20, v17, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v20, 0, 1, v36);
  }
  v47 = v36;
  if (v38(v20, 1, v36) == 1)
  {
    v48 = v38;
    v49 = *(void (**)(char *, uint64_t))(v5 + 8);
    v49(v20, v35);
  }
  else
  {
    v54 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v54(v29, v20, v47);
    sub_1B887B2C4((uint64_t)v14);
    if (v38(v14, 1, v47) != 1)
    {
      v58 = v78;
      v54(v78, v14, v47);
      v59 = (uint64_t)v79;
      sub_1B8913068();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v59, 0, 1, v47);
      sub_1B887B334(v59);
      v60 = *(void (**)(char *, uint64_t))(v37 + 8);
      v60(v58, v47);
      return ((uint64_t (*)(char *, uint64_t))v60)(v29, v47);
    }
    v48 = v38;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v47);
    v49 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35 = v84;
    v49(v14, v84);
  }
  v55 = v81;
  v77(v81, v83, v35);
  if (v48(v55, 1, v47) == 1)
  {
    v87 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 696))();
    v56 = sub_1B8912DA4();
    MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v56);
    v57 = (uint64_t)v80;
    sub_1B8912C60();
    swift_bridgeObjectRelease();
    v49(v55, v35);
  }
  else
  {
    v57 = (uint64_t)v80;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v80, v55, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v57, 0, 1, v47);
  }
  return sub_1B887B334(v57);
}

uint64_t sub_1B887BE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(void))(*(_QWORD *)v0 + 696))();
  v1 = sub_1B8912DA4();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEB3D0], v1);
  sub_1B8912C6C();
  swift_bridgeObjectRelease();
  v2 = sub_1B8912D20();
  type metadata accessor for CalculateExpression();
  swift_retain();
  MEMORY[0x1BCCB4D60](MEMORY[0x1E0DEAF38], v2);
  v3 = sub_1B8912C24();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CalculateIndexedDocument.__allocating_init()()
{
  swift_allocObject();
  return CalculateIndexedDocument.init()();
}

uint64_t CalculateIndexedDocument.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = qword_1ED563B88;
  swift_retain();
  *(uint64_t *)((char *)v0 + v2) = sub_1B887A064(MEMORY[0x1E0DEE9D8]);
  v3 = qword_1ED563B80;
  v4 = *(_QWORD *)(v1 + 520);
  sub_1B8912840();
  swift_getTupleTypeMetadata2();
  sub_1B8912CD8();
  *(uint64_t *)((char *)v0 + v3) = sub_1B8912A38();
  *((_BYTE *)v0 + qword_1ED563B90) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 568), 1, 1, v4);
  swift_release();
  return CalculateDocument.init()();
}

uint64_t CalculateIndexedDocument.__allocating_init(expressions:options:)()
{
  swift_allocObject();
  return CalculateIndexedDocument.init(expressions:options:)();
}

uint64_t CalculateIndexedDocument.init(expressions:options:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = qword_1ED563B88;
  swift_retain();
  *(uint64_t *)((char *)v0 + v2) = sub_1B887A064(MEMORY[0x1E0DEE9D8]);
  v3 = qword_1ED563B80;
  v4 = *(_QWORD *)(v1 + 520);
  sub_1B8912840();
  swift_getTupleTypeMetadata2();
  sub_1B8912CD8();
  *(uint64_t *)((char *)v0 + v3) = sub_1B8912A38();
  *((_BYTE *)v0 + qword_1ED563B90) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 568), 1, 1, v4);
  swift_release();
  return CalculateDocument.init(expressions:options:)();
}

uint64_t CalculateIndexedDocument.__allocating_init(expressions:options:synchronous:)()
{
  swift_allocObject();
  return CalculateIndexedDocument.init(expressions:options:synchronous:)();
}

uint64_t CalculateIndexedDocument.init(expressions:options:synchronous:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = qword_1ED563B88;
  swift_retain();
  *(uint64_t *)((char *)v0 + v2) = sub_1B887A064(MEMORY[0x1E0DEE9D8]);
  v3 = qword_1ED563B80;
  v4 = *(_QWORD *)(v1 + 520);
  sub_1B8912840();
  swift_getTupleTypeMetadata2();
  sub_1B8912CD8();
  *(uint64_t *)((char *)v0 + v3) = sub_1B8912A38();
  *((_BYTE *)v0 + qword_1ED563B90) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 568), 1, 1, v4);
  swift_release();
  return CalculateDocument.init(expressions:options:synchronous:)();
}

uint64_t sub_1B887C314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 568);
  v2 = sub_1B8912E28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t CalculateIndexedDocument.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = CalculateDocument.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 568);
  v2 = sub_1B8912E28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CalculateIndexedDocument.__deallocating_deinit()
{
  CalculateIndexedDocument.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B887C41C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  else
    return sub_1B8913044();
}

unint64_t sub_1B887C468(uint64_t a1)
{
  uint64_t v2;

  sub_1B8912840();
  sub_1B887D694(&qword_1EF1B5FF8, MEMORY[0x1E0CB09C8]);
  v2 = sub_1B8912A74();
  return sub_1B887C4CC(a1, v2);
}

unint64_t sub_1B887C4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1B8912840();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1B887D694(qword_1EF1B6090, MEMORY[0x1E0CB09D0]);
      v14 = sub_1B8912AA4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1B887C604(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1B887C468(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B887CEEC();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1B8912840();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1B887CA6C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B887C6DC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_1B8912840();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6088);
  v43 = a2;
  v10 = sub_1B8912FFC();
  v11 = v9;
  v12 = v10;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v41 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v3;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v10 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
      swift_retain();
    }
    sub_1B887D694(&qword_1EF1B5FF8, MEMORY[0x1E0CB09C8]);
    result = sub_1B8912A74();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v11 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

unint64_t sub_1B887CA6C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1B8912840();
  v34 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1B8912E88();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v33 = (result + 1) & v11;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v11;
      do
      {
        v14 = v12;
        v15 = v12 * v10;
        v16 = v13;
        v32(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1B887D694(&qword_1EF1B5FF8, MEMORY[0x1E0CB09C8]);
        v17 = sub_1B8912A74();
        result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v7, v4);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v33)
        {
          if (v18 >= v33 && a1 >= (uint64_t)v18)
          {
LABEL_17:
            v21 = *(_QWORD *)(a2 + 48);
            result = v21 + v14 * a1;
            if (v14 * a1 < v15 || (v12 = v14, result >= v21 + v15 + v14))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_22:
              v13 = v16;
              v12 = v14;
            }
            else if (v14 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_22;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v33 || a1 >= (uint64_t)v18)
        {
          goto LABEL_17;
        }
        v12 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1B887CCF8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1B8912840();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1B887C468(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1B887CEEC();
    goto LABEL_7;
  }
  sub_1B887C6DC(v17, a3 & 1);
  v23 = sub_1B887C468(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_1B8913080();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1B887CE54(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1B887CE54(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1B8912840();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_1B887CEEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1B8912840();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6088);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1B8912FF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B887D11C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B887D15C()
{
  return sub_1B887A62C() & 1;
}

uint64_t sub_1B887D18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1BCCB4130](v12))
  {
    sub_1B8912F24();
    v15 = sub_1B8912F18();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1BCCB413C](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1B8912CF0();
    sub_1B8912CC0();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1B8912F60();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1B8912A74();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1B8912AA4();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1B887D494(uint64_t a1)
{
  return sub_1B887D4D4(a1, MEMORY[0x1E0DEA3C0]) & 1;
}

uint64_t sub_1B887D4B4(uint64_t a1)
{
  return sub_1B887D4D4(a1, MEMORY[0x1E0DEA3B8]) & 1;
}

uint64_t sub_1B887D4D4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 40)) & 1;
}

uint64_t sub_1B887D50C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B887D520(a1);
}

uint64_t sub_1B887D520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 40))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1B887D550()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8912E28();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CalculateIndexedDocument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CalculateIndexedDocument);
}

uint64_t method lookup function for CalculateIndexedDocument()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateIndexedDocument.expression(withId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.expression(at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.index(of:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.insert(_:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.moveExpression(from:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.removeExpression(at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes(before:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes(after:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.perform<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.markResultsNeedUpdate(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t sub_1B887D688()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t sub_1B887D694(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1B8912840();
    result = MEMORY[0x1BCCB4D60](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B887D6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCB4CE8](a1, v6, a5);
}

uint64_t sub_1B887D74C()
{
  return 1;
}

uint64_t sub_1B887D754(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)a1 + 424))();
  return 1;
}

uint64_t CalculateExpression.ClearOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.ClearOperation()
{
  return objc_opt_self();
}

void sub_1B887D7C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B887D7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t (*v19)(unsigned __int8 *);
  uint64_t v20;
  void (*v21)(unsigned __int8 *, _QWORD);
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  char v31;
  int64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  int64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t (*v45)(unsigned __int8 *);
  void (*v46)(unsigned __int8 *, _QWORD);
  uint64_t v47;
  unsigned __int8 v48;
  char v49;
  int64_t *v50;
  uint64_t (*v51)(unsigned __int8 *);
  void (*v52)(unsigned __int8 *, _QWORD);
  char v53;
  int64_t *v54;
  void (*v55)(unsigned __int8 *, _QWORD);
  void (*v56)(unsigned __int8 *, _QWORD);
  uint64_t v57;
  unsigned __int8 v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  void (*v64)(unsigned __int8 *, _QWORD);
  uint64_t (*v65)(unsigned __int8 *);
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(void);
  unsigned __int8 v69[32];
  _BYTE v70[8];
  uint64_t v71;
  unsigned __int8 v72;
  int64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  unsigned __int8 v80;
  void (*v81)(unsigned __int8 *, _QWORD);

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887E34C, &v78);
  v4 = v78;
  if (!(_QWORD)v78)
    return 0;
  v5 = *((_QWORD *)&v78 + 1);
  v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v78 + 560);
  sub_1B885DBF8(v78);
  v7 = swift_retain();
  if ((v6(v7) & 1) == 0 && ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 568))() & 1) == 0)
  {
    sub_1B887E5E4(v4, v5, (uint64_t)v70);
    if ((v70[0] & 1) != 0)
    {
      v8 = v76;
      v9 = v77;
      if (v77 < v76)
      {
        __break(1u);
      }
      else
      {
        v2 = v77 + 1;
        if (!__OFADD__(v77, 1))
        {
          v10 = v74;
          v11 = v75;
          if ((sub_1B887E3C0(v4, v76, v77 + 1) & 1) != 0)
            goto LABEL_9;
          v67 = v10;
          v68 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 416);
          v13 = ((uint64_t (*)(uint64_t))v68)(v8);
          if (v13)
          {
            v14 = *(_BYTE *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            LOBYTE(v78) = v14;
            v69[0] = 15;
            sub_1B885DDA0();
            if ((sub_1B8912AA4() & 1) != 0)
            {
              v15 = ((uint64_t (*)(int64_t))v68)(v9);
              if (v15)
              {
                v16 = *(_BYTE *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                swift_release();
                LOBYTE(v78) = v16;
                v69[0] = 16;
                if ((sub_1B8912AA4() & 1) != 0)
                {
                  if (__OFSUB__(v9, 1))
                  {
LABEL_90:
                    __break(1u);
                    goto LABEL_91;
                  }
                  sub_1B887E5E4(v4, v9 - 1, (uint64_t)&v78);
                  if ((v78 & 1) == 0)
                    goto LABEL_9;
                  if ((BYTE1(v78) & 1) != 0 && v8 >= *((uint64_t *)&v78 + 1))
                  {
                    v63 = v79;
                    v2 = v80;
                    v64 = v81;
                    if ((v79 & 1) != (v80 & 1))
                    {
                      if ((v11 & 1) != 0)
                        goto LABEL_69;
                      v17 = ((uint64_t (*)(uint64_t))v68)(v67);
                      if (v17)
                      {
                        v18 = *(_BYTE *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                        swift_release();
                        v69[0] = v18;
                        if ((sub_1B8912AA4() & 1) != 0)
                        {
                          v19 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
                          v20 = v19(v69);
                          sub_1B885DC54(v9);
                          swift_release();
                          ((void (*)(unsigned __int8 *, _QWORD))v20)(v69, 0);
                          if ((uint64_t)v64 >= v67)
                          {
                            v21 = (void (*)(unsigned __int8 *, _QWORD))v19(v69);
                            sub_1B885E87C(v67, (uint64_t)v64);
                            v21(v69, 0);
                            type metadata accessor for CalculateExpression.RichToken();
                            v69[0] = 4;
                            v22 = sub_1B885FD04();
                            v8 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v22 & 1);
                            result = v19(v69);
                            v20 = result;
                            if (!(*v23 >> 62))
                            {
                              v24 = *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFF8) + 0x10);
                              goto LABEL_27;
                            }
LABEL_107:
                            swift_bridgeObjectRetain();
                            v24 = sub_1B8912FD8();
                            result = swift_bridgeObjectRelease();
LABEL_27:
                            if (v24 < v67)
                            {
                              __break(1u);
                            }
                            else if ((v67 & 0x8000000000000000) == 0)
                            {
                              v25 = v67;
                              v26 = v67;
                              v27 = v8;
LABEL_78:
                              sub_1B88604E0(v25, v26, v27);
                              ((void (*)(unsigned __int8 *, _QWORD))v20)(v69, 0);
                              goto LABEL_47;
                            }
                            __break(1u);
                            return result;
                          }
LABEL_106:
                          __break(1u);
                          goto LABEL_107;
                        }
                      }
                    }
                    v51 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
                    v20 = v51(v69);
                    sub_1B885DC54(v9);
                    swift_release();
                    ((void (*)(unsigned __int8 *, _QWORD))v20)(v69, 0);
                    v9 = (int64_t)v64;
                    if ((uint64_t)v64 >= v8)
                    {
                      v52 = (void (*)(unsigned __int8 *, _QWORD))v51(v69);
                      sub_1B885E87C(v8, (uint64_t)v64);
                      v52(v69, 0);
                      if (((v63 ^ v2) & 1) != 0)
                      {
                        type metadata accessor for CalculateExpression.RichToken();
                        v69[0] = 4;
                        v53 = sub_1B885FD04();
                        v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v53 & 1);
                        v20 = v51(v69);
                        v9 = *v54;
                        if (!((unint64_t)*v54 >> 62))
                        {
                          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= v8)
                          {
LABEL_67:
                            if ((v8 & 0x8000000000000000) == 0)
                            {
LABEL_77:
                              v25 = v8;
                              v26 = v8;
                              v27 = v2;
                              goto LABEL_78;
                            }
                            __break(1u);
LABEL_69:
                            v20 = *(_QWORD *)(*(_QWORD *)v4 + 408);
                            v55 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v20)(v69);
                            sub_1B885DC54(v9);
                            swift_release();
                            v55(v69, 0);
                            v8 = v67 + 1;
                            if (!__OFADD__(v67, 1))
                            {
                              v2 = (uint64_t)v64;
                              if ((uint64_t)v64 >= v8)
                              {
                                v56 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v20)(v69);
                                sub_1B885E87C(v8, (uint64_t)v64);
                                v56(v69, 0);
                                v57 = ((uint64_t (*)(uint64_t))v68)(v67);
                                if (v57)
                                {
                                  v58 = *(_BYTE *)(v57 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                                  swift_release();
                                  v69[0] = v58;
                                  if ((CalculateExpression.TokenType.isBasicOperator.getter() & 1) != 0)
                                    goto LABEL_47;
                                }
                                if (v67 < 0)
                                  goto LABEL_47;
                                type metadata accessor for CalculateExpression.RichToken();
                                v69[0] = 3;
                                v59 = sub_1B885FD04();
                                v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v59 & 1);
                                v20 = ((uint64_t (*)(unsigned __int8 *))v20)(v69);
                                if (!(*v60 >> 62))
                                {
                                  if (*(_QWORD *)((*v60 & 0xFFFFFFFFFFFFF8) + 0x10) >= v8)
                                    goto LABEL_76;
                                  goto LABEL_104;
                                }
LABEL_103:
                                swift_bridgeObjectRetain();
                                v62 = sub_1B8912FD8();
                                swift_bridgeObjectRelease();
                                if (v62 >= v8)
                                {
LABEL_76:
                                  if ((v8 & 0x8000000000000000) == 0)
                                    goto LABEL_77;
LABEL_105:
                                  __break(1u);
                                  goto LABEL_106;
                                }
LABEL_104:
                                __break(1u);
                                goto LABEL_105;
                              }
LABEL_102:
                              __break(1u);
                              goto LABEL_103;
                            }
LABEL_101:
                            __break(1u);
                            goto LABEL_102;
                          }
LABEL_100:
                          __break(1u);
                          goto LABEL_101;
                        }
LABEL_99:
                        swift_bridgeObjectRetain();
                        v61 = sub_1B8912FD8();
                        swift_bridgeObjectRelease();
                        if (v61 >= v8)
                          goto LABEL_67;
                        goto LABEL_100;
                      }
LABEL_47:
                      sub_1B885DC28(v4);
                      swift_release();
                      sub_1B885DC28(v4);
                      return 1;
                    }
LABEL_98:
                    __break(1u);
                    goto LABEL_99;
                  }
                }
              }
            }
          }
          if ((v70[1] & 1) != 0)
          {
            v20 = v72;
            v9 = v73;
            v66 = v71;
            v28 = v68();
            if (!v28
              || (v29 = *(_BYTE *)(v28 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
                  swift_release(),
                  v69[0] = v29,
                  sub_1B885DDA0(),
                  (sub_1B8912AA4() & 1) == 0))
            {
              if ((v11 & 1) == 0)
                goto LABEL_42;
              if ((v20 & 1) != 0)
              {
                v11 = v66 + 1;
                if (!__OFADD__(v66, 1))
                {
                  if (v8 >= v11)
                  {
                    v45 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
                    v46 = (void (*)(unsigned __int8 *, _QWORD))v45(v69);
                    sub_1B885E87C(v11, v8);
                    v46(v69, 0);
                    v47 = ((uint64_t (*)(uint64_t))v68)(v66);
                    if (v47)
                    {
                      v48 = *(_BYTE *)(v47 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                      swift_release();
                      v69[0] = v48;
                      if ((CalculateExpression.TokenType.isBasicOperator.getter() & 1) != 0)
                        goto LABEL_47;
                    }
                    if (v66 < 0)
                      goto LABEL_47;
                    type metadata accessor for CalculateExpression.RichToken();
                    v69[0] = 3;
                    v49 = sub_1B885FD04();
                    v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v49 & 1);
                    v8 = v45(v69);
                    v9 = *v50;
                    if (!((unint64_t)*v50 >> 62))
                    {
                      v20 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
                      if (v20 < v11)
                      {
LABEL_94:
                        __break(1u);
                        goto LABEL_95;
                      }
                      goto LABEL_61;
                    }
LABEL_93:
                    swift_bridgeObjectRetain();
                    v20 = sub_1B8912FD8();
                    swift_bridgeObjectRelease();
                    if (v20 < v11)
                      goto LABEL_94;
LABEL_61:
                    if (v11 < 0)
                    {
LABEL_95:
                      __break(1u);
                      goto LABEL_96;
                    }
                    sub_1B88604E0(v11, v11, v2);
LABEL_46:
                    ((void (*)(unsigned __int8 *, _QWORD))v8)(v69, 0);
                    goto LABEL_47;
                  }
LABEL_92:
                  __break(1u);
                  goto LABEL_93;
                }
LABEL_91:
                __break(1u);
                goto LABEL_92;
              }
              v43 = ((uint64_t (*)(uint64_t))v68)(v66);
              if (v43
                && (v44 = *(_BYTE *)(v43 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
                    swift_release(),
                    v69[0] = v44,
                    sub_1B885DDA0(),
                    (sub_1B8912AA4() & 1) != 0))
              {
                v2 = v67 + 1;
                if (__OFADD__(v67, 1))
                {
LABEL_96:
                  __break(1u);
                  goto LABEL_97;
                }
                v20 = v66;
                if (v2 < v66)
                {
LABEL_97:
                  __break(1u);
                  goto LABEL_98;
                }
                v8 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408))(v69);
                v41 = v66;
                v42 = v67 + 1;
              }
              else
              {
LABEL_42:
                if (__OFADD__(v67, 1))
                {
LABEL_88:
                  __break(1u);
                  goto LABEL_89;
                }
                if (v67 + 1 < v9)
                {
LABEL_89:
                  __break(1u);
                  goto LABEL_90;
                }
                v8 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408))(v69);
                v41 = v9;
                v42 = v67 + 1;
              }
              sub_1B885E87C(v41, v42);
              goto LABEL_46;
            }
          }
          v30 = type metadata accessor for CalculateExpression.RichToken();
          v69[0] = 16;
          v31 = sub_1B885FD04();
          v68 = (uint64_t (*)(void))v30;
          v3 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v31 & 1);
          v65 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
          v64 = (void (*)(unsigned __int8 *, _QWORD))v65(v69);
          v9 = *v32;
          if (!((unint64_t)*v32 >> 62))
          {
            v33 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v33 >= v2)
              goto LABEL_35;
            goto LABEL_82;
          }
LABEL_81:
          swift_bridgeObjectRetain();
          v33 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (v33 >= v2)
          {
LABEL_35:
            if ((v2 & 0x8000000000000000) == 0)
            {
              sub_1B88604E0(v2, v2, v3);
              v64(v69, 0);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
              v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = xmmword_1B8915E20;
              v69[0] = 1;
              v35 = sub_1B885FD04();
              v9 = (int64_t)v68;
              *(_QWORD *)(v34 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(49, 0xE100000000000000, v69, v35 & 1);
              v69[0] = 6;
              v36 = sub_1B885FD04();
              *(_QWORD *)(v34 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v36 & 1);
              *(_QWORD *)v69 = v34;
              sub_1B8912CA8();
              v37 = *(_QWORD *)v69;
              v2 = v65(v69);
              sub_1B8860170(v8, v8, v37);
              ((void (*)(unsigned __int8 *, _QWORD))v2)(v69, 0);
              v69[0] = 15;
              v38 = sub_1B885FD04();
              v39 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v69, v38 & 1);
              v33 = v67 + 1;
              if (!__OFADD__(v67, 1))
              {
                v8 = v39;
                v2 = v65(v69);
                v9 = *v40;
                if (!((unint64_t)*v40 >> 62))
                {
                  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v11 >= v33)
                    goto LABEL_39;
                  goto LABEL_86;
                }
LABEL_85:
                swift_bridgeObjectRetain();
                v11 = sub_1B8912FD8();
                swift_bridgeObjectRelease();
                if (v11 >= v33)
                {
LABEL_39:
                  if ((v33 & 0x8000000000000000) == 0)
                  {
                    sub_1B88604E0(v33, v33, v8);
                    ((void (*)(unsigned __int8 *, _QWORD))v2)(v69, 0);
                    goto LABEL_47;
                  }
                  goto LABEL_87;
                }
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
                goto LABEL_88;
              }
LABEL_84:
              __break(1u);
              goto LABEL_85;
            }
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
LABEL_82:
          __break(1u);
          goto LABEL_83;
        }
      }
      __break(1u);
      goto LABEL_81;
    }
  }
LABEL_9:
  swift_release();
  sub_1B885DC28(v4);
  sub_1B885DC28(v4);
  return 0;
}

uint64_t sub_1B887E34C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 456))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 560))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() & 1;
  }
}

uint64_t CalculateExpression.ReciprocalOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B887E3C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v3 = a3 - 1;
  if (__OFSUB__(a3, 1))
    goto LABEL_28;
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)result + 416);
  do
  {
    if (!v5(a2))
      goto LABEL_11;
    swift_release();
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) == 0)
      goto LABEL_11;
    if (!v5(v3))
      goto LABEL_11;
    swift_release();
    result = sub_1B8912AA4();
    if ((result & 1) == 0)
      goto LABEL_11;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    ++a2;
    v6 = __OFSUB__(v3--, 1);
  }
  while (!v6);
  __break(1u);
LABEL_11:
  if (v5(a2))
  {
    swift_release();
    sub_1B885DDA0();
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v6 = __OFADD__(a2++, 1);
      if (v6)
        goto LABEL_29;
    }
  }
  if (a2 != v3)
    return 0;
  v7 = v5(v3);
  if (!v7)
    return 0;
  v8 = v7;
  v13 = *(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v12 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
  {
    swift_release();
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(_QWORD *)v8 + 208))() != 49 || v9 != 0xE100000000000000)
  {
    v11 = sub_1B8913050();
    swift_release();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1B887E5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  uint64_t v27;
  unsigned __int8 v28;
  char v29;
  unsigned __int8 v30;
  BOOL v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  result = sub_1B88834C4(&v39);
  v35 = v39;
  v7 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 416);
  v9 = v8(v39 - 1);
  if (v9)
  {
    v10 = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v38) = v10;
    v37 = 17;
    sub_1B885DDA0();
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v11 = __OFSUB__(v7--, 1);
      if (v11)
        goto LABEL_43;
    }
  }
  v12 = v8(v7);
  if (!v12)
    goto LABEL_14;
  v13 = *(_BYTE *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v38) = v13;
  v37 = 4;
  sub_1B885DDA0();
  result = sub_1B8912AA4();
  if ((result & 1) == 0)
    goto LABEL_14;
  v11 = __OFSUB__(v7--, 1);
  if (v11)
    goto LABEL_44;
  v14 = v8(v7);
  if (v14)
  {
    v15 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v38) = v15;
    v37 = 17;
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v11 = __OFSUB__(v7--, 1);
      if (v11)
        goto LABEL_49;
    }
  }
  v16 = 1;
  for (i = v7 - 1; __OFSUB__(v7, 1); i = v7 - 1)
  {
    __break(1u);
LABEL_14:
    v16 = 0;
  }
  v33 = v16;
  v34 = i;
  v38 = i;
  result = sub_1B88834C4(&v38);
  v18 = v38;
  v19 = v38 - 1;
  if (__OFSUB__(v38, 1))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v20 = v8(v38 - 1);
  if (v20)
  {
    v21 = *(_BYTE *)(v20 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v37 = v21;
    v36 = 17;
    sub_1B885DDA0();
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v11 = __OFSUB__(v19--, 1);
      if (v11)
        goto LABEL_45;
    }
  }
  v22 = v8(v19);
  v32 = a2;
  if (!v22)
  {
    v26 = 0;
    goto LABEL_28;
  }
  v23 = *(_BYTE *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v37 = v23;
  v36 = 4;
  sub_1B885DDA0();
  result = sub_1B8912AA4();
  if ((result & 1) == 0)
  {
    v26 = 0;
    goto LABEL_28;
  }
  v11 = __OFSUB__(v19--, 1);
  if (v11)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v24 = v8(v19);
  if (v24)
  {
    v25 = *(_BYTE *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v37 = v25;
    v36 = 17;
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v11 = __OFSUB__(v19--, 1);
      if (v11)
        goto LABEL_50;
    }
  }
  v26 = 1;
LABEL_28:
  v27 = v8(v7);
  if (!v27
    || (v28 = *(_BYTE *)(v27 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        v37 = v28,
        v36 = 6,
        sub_1B885DDA0(),
        result = sub_1B8912AA4(),
        (result & 1) == 0))
  {
    v29 = 0;
    goto LABEL_34;
  }
  if (v34 < v18)
    goto LABEL_47;
  if (__OFADD__(v34, 1))
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return result;
  }
  v29 = sub_1B887E3C0(a1, v18, v34 + 1);
LABEL_34:
  result = v8(v35);
  if (result)
  {
    v30 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    v37 = v30;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
      || (v37 = v30, v36 = 15, static CalculateExpression.TokenType.== infix(_:_:)(&v37, &v36)))
    {
      result = swift_release();
      v31 = 1;
    }
    else
    {
      v37 = v30;
      v36 = 10;
      v31 = static CalculateExpression.TokenType.== infix(_:_:)(&v37, &v36);
      result = swift_release();
    }
  }
  else
  {
    v31 = 0;
  }
  *(_BYTE *)a3 = v31;
  *(_BYTE *)(a3 + 1) = v29 & 1;
  *(_QWORD *)(a3 + 8) = v19;
  *(_BYTE *)(a3 + 16) = v26;
  *(_QWORD *)(a3 + 24) = v18;
  *(_QWORD *)(a3 + 32) = v34;
  *(_QWORD *)(a3 + 40) = v7;
  *(_BYTE *)(a3 + 48) = v33;
  *(_QWORD *)(a3 + 56) = v35;
  *(_QWORD *)(a3 + 64) = v32;
  return result;
}

uint64_t type metadata accessor for CalculateExpression.ReciprocalOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.ReciprocalOperation()
{
  return swift_lookUpClassMethod();
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[72])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s19ReciprocalOperationC17ReciprocalPatternVMa()
{
  return &_s19ReciprocalOperationC17ReciprocalPatternVN;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s19ReciprocalOperationC17ReciprocalPatternV4TermVMa()
{
  return &_s19ReciprocalOperationC17ReciprocalPatternV4TermVN;
}

uint64_t sub_1B887EC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  return sub_1B8883058();
}

uint64_t sub_1B887EC50@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  char v5;
  BOOL v6;

  result = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = 3;
  if (result)
    v6 = 0;
  else
    v6 = v4 == 0xE000000000000000;
  if (!v6)
  {
    result = sub_1B8913050();
    if ((result & 1) != 0)
      v5 = 3;
    else
      v5 = 1;
  }
  *a1 = v5;
  return result;
}

unint64_t sub_1B887ECA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t result;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t (*v40)(__int128 *);
  void (*v41)(__int128 *, _QWORD);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(__int128 *, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887F64C, &v59);
  v3 = v59;
  if (!(_QWORD)v59)
    return 0;
  v5 = *((_QWORD *)&v59 + 1);
  v4 = v60;
  v6 = v61;
  v7 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 416);
  v8 = swift_retain();
  sub_1B885DBF8(v8);
  v9 = v7(v5);
  if (!v9)
  {
    sub_1B885DC28(v3);
LABEL_7:
    swift_release();
    v14 = v3;
LABEL_42:
    sub_1B885DC28(v14);
    return 0;
  }
  v10 = v9;
  v56 = v2;
  v11 = (uint64_t)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v12 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v13 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v59) = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v58) = 18;
  sub_1B885DDA0();
  if ((sub_1B8912AA4() & 1) != 0)
  {
    sub_1B885DC28(v3);
    swift_release();
    sub_1B885DC28(v3);
    swift_release();
    return 0;
  }
  v58 = v5;
  LOBYTE(v59) = v13;
  v15 = (unint64_t)&v59;
  v55 = (_OWORD *)v6;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0)
    goto LABEL_9;
  LOBYTE(v59) = v13;
  v57 = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v57))
  {
    if (__OFSUB__(v5, 1))
      goto LABEL_98;
    v18 = v7(v5 - 1);
    if (v18)
    {
      v13 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v59) = v13;
      v15 = (unint64_t)&v59;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0)
      {
LABEL_9:
        v6 = v5;
        while (1)
        {
          v12 = v6;
          v16 = __OFSUB__(v6--, 1);
          if (v16)
            break;
          v15 = v3;
          v17 = v7(v6);
          if (v17)
          {
            v13 = *(unsigned __int8 *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            LOBYTE(v59) = v13;
            v15 = (unint64_t)&v59;
            if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0)
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
    }
  }
  v13 = *(unsigned __int8 *)(v10 + v12);
  LOBYTE(v59) = *(_BYTE *)(v10 + v12);
  v57 = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v57))
  {
    LOBYTE(v59) = v13;
    v57 = 7;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v57))
    {
      LOBYTE(v59) = v13;
      v57 = 8;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v57))
      {
        sub_1B885DC28(v3);
        swift_release();
        goto LABEL_7;
      }
    }
  }
  v15 = v3;
  sub_1B88834C4(&v58);
  v12 = v58;
  if (v58 < 0)
  {
LABEL_41:
    sub_1B885DC28(v3);
    swift_release();
    swift_release();
    v14 = v3;
    goto LABEL_42;
  }
LABEL_22:
  if (v5 < v12)
    goto LABEL_87;
  v13 = 0;
  v6 = v12;
  while (1)
  {
    v15 = v3;
    v19 = v7(v6);
    if (v19)
    {
      v15 = v19;
      v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 328))(v19);
      swift_release();
      if (v11 > v13)
        v13 = v11;
    }
    else if (v13 <= 0)
    {
      v13 = 0;
    }
    if (v5 == v6)
      break;
    v16 = __OFADD__(v6++, 1);
    if (v16)
    {
      __break(1u);
      break;
    }
  }
  v20 = v4 + v13;
  if (__OFADD__(v4, v13))
    goto LABEL_88;
  v13 = v20 + 1;
  v15 = (unint64_t)v55;
  if (__OFADD__(v20, 1))
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (v13 >= *(_QWORD *)sub_1B8896B1C())
    goto LABEL_41;
  v6 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v59) = 7;
  v21 = sub_1B885FD04();
  v54 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v59, v21 & 1);
  v13 = *(_QWORD *)(v56 + 16);
  v7 = *(uint64_t (**)(uint64_t))(v56 + 24);
  if (v13 == 101 && v7 == (uint64_t (*)(uint64_t))0xE100000000000000 || (sub_1B8913050() & 1) != 0)
  {
    LOBYTE(v59) = 13;
    v22 = sub_1B885FD04() & 1;
    v23 = 0;
    v24 = 0;
  }
  else
  {
    if (!v13 && v7 == (uint64_t (*)(uint64_t))0xE000000000000000 || (sub_1B8913050() & 1) != 0)
      v26 = 18;
    else
      v26 = 1;
    LOBYTE(v59) = v26;
    swift_bridgeObjectRetain();
    v22 = sub_1B885FD04() & 1;
    v23 = v13;
    v24 = (unint64_t)v7;
  }
  v56 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v23, v24, (unsigned __int8 *)&v59, v22);
  v15 = v3;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 392))();
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_90;
  v15 = result;
  v53 = v7;
  v7 = (uint64_t (*)(uint64_t))(result >> 62);
  if (!(result >> 62))
  {
    if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) >= v12)
      goto LABEL_54;
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
LABEL_91:
  swift_bridgeObjectRetain();
  v50 = sub_1B8912FD8();
  result = swift_bridgeObjectRelease();
  if (v50 < v12)
    goto LABEL_92;
LABEL_54:
  if (v12 < 0)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)v10 < v11)
    goto LABEL_94;
  v52 = v13;
  if (v11 < 0)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
    if (v11 < (unint64_t)v12)
      goto LABEL_99;
    if (v12 != v11)
    {
      if (v12 >= (unint64_t)v11)
      {
        __break(1u);
        return result;
      }
      v27 = v12;
      do
      {
        v28 = v27 + 1;
        sub_1B8912F54();
        v27 = v28;
      }
      while (v11 != v28);
    }
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1B8912FE4();
    v7 = v30;
    v29 = v31;
    v10 = v32;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = v15 & 0xFFFFFFFFFFFFFF8;
    v7 = (uint64_t (*)(uint64_t))((v15 & 0xFFFFFFFFFFFFFF8) + 32);
    v10 = (2 * v11) | 1;
    v29 = v12;
  }
  if ((v10 & 1) != 0)
  {
    v51 = v4;
    v4 = v29;
    sub_1B891305C();
    swift_unknownObjectRetain_n();
    v35 = swift_dynamicCastClass();
    if (!v35)
    {
      swift_unknownObjectRelease();
      v35 = MEMORY[0x1E0DEE9D8];
    }
    v36 = *(_QWORD *)(v35 + 16);
    swift_release();
    if (!__OFSUB__(v10 >> 1, v4))
    {
      if (v36 == (v10 >> 1) - v4)
      {
        v34 = swift_dynamicCastClass();
        v4 = v51;
        if (!v34)
        {
          swift_unknownObjectRelease();
          v34 = MEMORY[0x1E0DEE9D8];
        }
        goto LABEL_77;
      }
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  while (1)
  {
    sub_1B887F75C(v6, (uint64_t)v7, v29, v10);
    v34 = v33;
LABEL_77:
    swift_unknownObjectRelease();
    type metadata accessor for CalculateExpression.RichExpression();
    v37 = sub_1B88622EC(v34);
    LOBYTE(v59) = 1;
    (*(void (**)(__int128 *))(*(_QWORD *)v37 + 280))(&v59);
    v38 = *(void (**)(uint64_t))(*(_QWORD *)v54 + 288);
    v39 = swift_retain();
    v51 = v37;
    v38(v39);
    v40 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
    v41 = (void (*)(__int128 *, _QWORD))v40(&v59);
    sub_1B885E87C(v12, v11);
    v41(&v59, 0);
    if ((v52 || v53 != (uint64_t (*)(uint64_t))0xE000000000000000) && (sub_1B8913050() & 1) == 0)
      break;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v42 + 32) = v56;
    *(_QWORD *)&v59 = v42;
    sub_1B8912CA8();
    v43 = v59;
    swift_retain();
    v6 = sub_1B88622EC(v43);
    v44 = *(void (**)(uint64_t))(*(_QWORD *)v54 + 264);
    v45 = swift_retain();
    v44(v45);
    LOBYTE(v59) = 3;
    (*(void (**)(__int128 *))(*(_QWORD *)v6 + 280))(&v59);
    swift_retain();
    v13 = v40(&v59);
    v11 = *v46;
    if ((unint64_t)*v46 >> 62)
    {
LABEL_96:
      swift_bridgeObjectRetain();
      v10 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v7 = (uint64_t (*)(uint64_t))v54;
    if ((uint64_t)v10 >= v12)
    {
      sub_1B88604E0(v12, v12, v54);
      ((void (*)(__int128 *, _QWORD))v13)(&v59, 0);
      swift_release();
      sub_1B885DC28(v3);
      swift_release();
      goto LABEL_85;
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    swift_unknownObjectRelease();
    v29 = v4;
    v4 = v51;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1B8915E20;
  *(_QWORD *)(v47 + 32) = v56;
  *(_QWORD *)(v47 + 40) = v54;
  *(_QWORD *)&v59 = v47;
  sub_1B8912CA8();
  v48 = v59;
  swift_retain();
  swift_retain();
  v49 = (void (*)(__int128 *, _QWORD))v40(&v59);
  sub_1B8860170(v12, v12, v48);
  v49(&v59, 0);
  (*(void (**)(_QWORD))(*(_QWORD *)v51 + 304))(0);
  swift_release();
  sub_1B885DC28(v3);
LABEL_85:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B885DC28(v3);
  return 1;
}

uint64_t sub_1B887F64C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 456))() & 1) != 0)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v1 + 272))(&v4);
    sub_1B88797D8();
    v2 = sub_1B8912AA4() ^ 1;
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

void sub_1B887F6C8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B887F6F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.ExponentialOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ExponentialOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1B887F75C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        type metadata accessor for CalculateExpression.RichToken();
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
      v7 = (_QWORD *)swift_allocObject();
      v8 = _swift_stdlib_malloc_size(v7);
      v9 = v8 - 32;
      if (v8 < 32)
        v9 = v8 - 25;
      v7[2] = v5;
      v7[3] = (2 * (v9 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t type metadata accessor for CalculateExpression.ExponentialOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.ExponentialOperation()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1B887F864(uint64_t a1)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *);
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  unint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  _BYTE v17[32];

  v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  if (!v2())
    return 0;
  v3 = CalculateExpression.format.getter();
  v4 = swift_release();
  if (v3 != 2)
    return 0;
  if (!((uint64_t (*)(uint64_t))v2)(v4))
    return 1;
  v5 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_6;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_6:
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_20:
    MEMORY[0x1BCCB4394](result, v5);
LABEL_11:
    swift_bridgeObjectRelease();
    v8 = CalculateExpression.rich.getter();
    v9 = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 392))();
    swift_release();
    if (!(v9 >> 62))
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
      swift_bridgeObjectRelease();
      v11 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 408);
      v12 = (void (*)(_BYTE *, _QWORD))v11(v17);
      sub_1B885E26C(v10);
      v12(v17, 0);
      v13 = CalculateExpression.rich.getter();
      v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 392))(v13);
      swift_release();
      v15 = (void (*)(_BYTE *, _QWORD))v11(v17);
      sub_1B8860170(0, 0, v14);
      v15(v17, 0);
      (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
      v16 = 1;
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 256))(1);
      swift_release();
      return v16;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    v10 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RollInOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.RollInOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B887FB00()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCB4EBC](v0 + 16);
}

uint64_t sub_1B887FB40()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1B887FB90(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCB4EBC](v1 + 16);
  return sub_1B887FBF8;
}

void sub_1B887FBF8(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1B887FC64()
{
  uint64_t v0;

  swift_allocObject();
  v0 = sub_1B887FDAC();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1B887FCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 104))();
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 104))();
  if (!v3)
  {
    if (!v4)
    {
      v5 = 1;
      return v5 & 1;
    }
    goto LABEL_5;
  }
  if (!v4)
  {
LABEL_5:
    swift_unknownObjectRelease();
    v5 = 0;
    return v5 & 1;
  }
  swift_unknownObjectRetain();
  v5 = sub_1B8912AA4();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B887FD7C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1B887FDA0(uint64_t *a1, uint64_t *a2)
{
  return sub_1B887FCAC(*a1, *a2);
}

uint64_t sub_1B887FDAC()
{
  uint64_t v0;

  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_1B887FE08()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WeakRef(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakRef);
}

uint64_t sub_1B887FE54()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(48, 0xE100000000000000);
  qword_1ED562A98 = result;
  return result;
}

uint64_t *sub_1B887FE8C()
{
  if (qword_1ED562AA0 != -1)
    swift_once();
  return &qword_1ED562A98;
}

uint64_t static CalculateExpression.Operation.digit0.getter()
{
  return sub_1B887FF7C(&qword_1ED562AA0);
}

uint64_t sub_1B887FEE8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(49, 0xE100000000000000);
  qword_1ED562AA8 = result;
  return result;
}

uint64_t *sub_1B887FF20()
{
  if (qword_1ED562AB0 != -1)
    swift_once();
  return &qword_1ED562AA8;
}

uint64_t static CalculateExpression.Operation.digit1.getter()
{
  return sub_1B887FF7C(&qword_1ED562AB0);
}

uint64_t sub_1B887FF7C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1B887FFB4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(50, 0xE100000000000000);
  qword_1ED562AB8 = result;
  return result;
}

uint64_t *sub_1B887FFEC()
{
  if (qword_1ED562AC0 != -1)
    swift_once();
  return &qword_1ED562AB8;
}

uint64_t static CalculateExpression.Operation.digit2.getter()
{
  return sub_1B887FF7C(&qword_1ED562AC0);
}

uint64_t sub_1B8880048()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(51, 0xE100000000000000);
  qword_1ED562AC8 = result;
  return result;
}

uint64_t *sub_1B8880080()
{
  if (qword_1ED562AD0 != -1)
    swift_once();
  return &qword_1ED562AC8;
}

uint64_t static CalculateExpression.Operation.digit3.getter()
{
  return sub_1B887FF7C(&qword_1ED562AD0);
}

uint64_t sub_1B88800DC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(52, 0xE100000000000000);
  qword_1ED562AD8 = result;
  return result;
}

uint64_t *sub_1B8880114()
{
  if (qword_1ED562AE0 != -1)
    swift_once();
  return &qword_1ED562AD8;
}

uint64_t static CalculateExpression.Operation.digit4.getter()
{
  return sub_1B887FF7C(&qword_1ED562AE0);
}

uint64_t sub_1B8880170()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(53, 0xE100000000000000);
  qword_1ED562AE8 = result;
  return result;
}

uint64_t *sub_1B88801A8()
{
  if (qword_1ED562AF0 != -1)
    swift_once();
  return &qword_1ED562AE8;
}

uint64_t static CalculateExpression.Operation.digit5.getter()
{
  return sub_1B887FF7C(&qword_1ED562AF0);
}

uint64_t sub_1B8880204()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(54, 0xE100000000000000);
  qword_1ED562AF8 = result;
  return result;
}

uint64_t *sub_1B888023C()
{
  if (qword_1ED562B00 != -1)
    swift_once();
  return &qword_1ED562AF8;
}

uint64_t static CalculateExpression.Operation.digit6.getter()
{
  return sub_1B887FF7C(&qword_1ED562B00);
}

uint64_t sub_1B8880298()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(55, 0xE100000000000000);
  qword_1ED562B08 = result;
  return result;
}

uint64_t *sub_1B88802D0()
{
  if (qword_1ED562B10 != -1)
    swift_once();
  return &qword_1ED562B08;
}

uint64_t static CalculateExpression.Operation.digit7.getter()
{
  return sub_1B887FF7C(&qword_1ED562B10);
}

uint64_t sub_1B888032C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(56, 0xE100000000000000);
  qword_1ED562B18 = result;
  return result;
}

uint64_t *sub_1B8880364()
{
  if (qword_1ED562B20 != -1)
    swift_once();
  return &qword_1ED562B18;
}

uint64_t static CalculateExpression.Operation.digit8.getter()
{
  return sub_1B887FF7C(&qword_1ED562B20);
}

uint64_t sub_1B88803C0()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(57, 0xE100000000000000);
  qword_1ED562B28 = result;
  return result;
}

uint64_t *sub_1B88803F8()
{
  if (qword_1ED562B30 != -1)
    swift_once();
  return &qword_1ED562B28;
}

uint64_t static CalculateExpression.Operation.digit9.getter()
{
  return sub_1B887FF7C(&qword_1ED562B30);
}

uint64_t sub_1B8880454()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(46, 0xE100000000000000);
  qword_1ED562B98 = result;
  return result;
}

uint64_t *sub_1B888048C()
{
  if (qword_1ED562BA0 != -1)
    swift_once();
  return &qword_1ED562B98;
}

uint64_t static CalculateExpression.Operation.decimal.getter()
{
  return sub_1B887FF7C(&qword_1ED562BA0);
}

uint64_t sub_1B88804E8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(101, 0xE100000000000000);
  qword_1ED5629D8 = result;
  return result;
}

uint64_t *sub_1B8880520()
{
  if (qword_1ED5629E0 != -1)
    swift_once();
  return &qword_1ED5629D8;
}

uint64_t static CalculateExpression.Operation.ee.getter()
{
  return sub_1B887FF7C(&qword_1ED5629E0);
}

uint64_t sub_1B888057C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(43, 0xE100000000000000);
  qword_1ED5629F8 = result;
  return result;
}

uint64_t *sub_1B88805B4()
{
  if (qword_1ED562A00 != -1)
    swift_once();
  return &qword_1ED5629F8;
}

uint64_t static CalculateExpression.Operation.add.getter()
{
  return sub_1B887FF7C(&qword_1ED562A00);
}

uint64_t sub_1B8880610()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(45, 0xE100000000000000);
  qword_1ED562BF8 = result;
  return result;
}

uint64_t *sub_1B8880648()
{
  if (qword_1ED562C00 != -1)
    swift_once();
  return &qword_1ED562BF8;
}

uint64_t static CalculateExpression.Operation.subtract.getter()
{
  return sub_1B887FF7C(&qword_1ED562C00);
}

uint64_t sub_1B88806A4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(38851, 0xA200000000000000);
  qword_1ED562BE8 = result;
  return result;
}

uint64_t *sub_1B88806DC()
{
  if (qword_1ED562BF0 != -1)
    swift_once();
  return &qword_1ED562BE8;
}

uint64_t static CalculateExpression.Operation.multiply.getter()
{
  return sub_1B887FF7C(&qword_1ED562BF0);
}

uint64_t sub_1B8880738()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(47043, 0xA200000000000000);
  qword_1ED562B38 = result;
  return result;
}

uint64_t *sub_1B8880770()
{
  if (qword_1ED562B40 != -1)
    swift_once();
  return &qword_1ED562B38;
}

uint64_t static CalculateExpression.Operation.divide.getter()
{
  return sub_1B887FF7C(&qword_1ED562B40);
}

uint64_t sub_1B88807CC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(37, 0xE100000000000000);
  qword_1ED562BA8 = result;
  return result;
}

uint64_t *sub_1B8880804()
{
  if (qword_1ED562BB0 != -1)
    swift_once();
  return &qword_1ED562BA8;
}

uint64_t static CalculateExpression.Operation.percent.getter()
{
  return sub_1B887FF7C(&qword_1ED562BB0);
}

uint64_t sub_1B8880860()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.FactorialOperation();
  result = sub_1B885DCE8();
  qword_1ED562C08 = result;
  return result;
}

uint64_t *sub_1B8880890()
{
  if (qword_1ED562C10 != -1)
    swift_once();
  return &qword_1ED562C08;
}

uint64_t static CalculateExpression.Operation.factorial.getter()
{
  return sub_1B887FF7C(qword_1ED562C10);
}

uint64_t sub_1B88808EC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.OpenParenthesisOperation();
  result = sub_1B885DCE8();
  qword_1ED562908 = result;
  return result;
}

uint64_t *sub_1B888091C()
{
  if (qword_1ED562910 != -1)
    swift_once();
  return &qword_1ED562908;
}

uint64_t static CalculateExpression.Operation.openParenthesis.getter()
{
  return sub_1B887FF7C(&qword_1ED562910);
}

uint64_t sub_1B8880978()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.CloseParenthesisOperation();
  result = sub_1B885DCE8();
  qword_1ED562918 = result;
  return result;
}

uint64_t *sub_1B88809A8()
{
  if (qword_1ED562920 != -1)
    swift_once();
  return &qword_1ED562918;
}

uint64_t static CalculateExpression.Operation.closeParenthesis.getter()
{
  return sub_1B887FF7C(&qword_1ED562920);
}

uint64_t sub_1B8880A04()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ConstantOperation();
  result = sub_1B8896084(32975, 0xA200000000000000);
  qword_1ED5629E8 = result;
  return result;
}

uint64_t *sub_1B8880A3C()
{
  if (qword_1ED5629F0 != -1)
    swift_once();
  return &qword_1ED5629E8;
}

uint64_t static CalculateExpression.Operation.pi.getter()
{
  return sub_1B887FF7C(&qword_1ED5629F0);
}

uint64_t sub_1B8880A98()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ConstantOperation();
  result = sub_1B8896084(101, 0xE100000000000000);
  qword_1ED562898 = result;
  return result;
}

uint64_t *sub_1B8880AD0()
{
  if (qword_1ED5628A0 != -1)
    swift_once();
  return &qword_1ED562898;
}

uint64_t static CalculateExpression.Operation.eulerNumber.getter()
{
  return sub_1B887FF7C(&qword_1ED5628A0);
}

uint64_t sub_1B8880B2C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.RandOperation();
  result = sub_1B88BB6BC();
  qword_1ED562B68 = result;
  return result;
}

uint64_t *sub_1B8880B5C()
{
  if (qword_1ED562B70 != -1)
    swift_once();
  return &qword_1ED562B68;
}

uint64_t static CalculateExpression.Operation.random.getter()
{
  return sub_1B887FF7C(&qword_1ED562B70);
}

uint64_t sub_1B8880BB8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.PowerOperation();
  result = sub_1B887EC0C(50, 0xE100000000000000);
  qword_1ED562B88 = result;
  return result;
}

uint64_t *sub_1B8880BF0()
{
  if (qword_1ED562B90 != -1)
    swift_once();
  return &qword_1ED562B88;
}

uint64_t static CalculateExpression.Operation.square.getter()
{
  return sub_1B887FF7C(&qword_1ED562B90);
}

uint64_t sub_1B8880C4C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.PowerOperation();
  result = sub_1B887EC0C(51, 0xE100000000000000);
  qword_1ED562A08 = result;
  return result;
}

uint64_t *sub_1B8880C84()
{
  if (qword_1ED562A10 != -1)
    swift_once();
  return &qword_1ED562A08;
}

uint64_t static CalculateExpression.Operation.cube.getter()
{
  return sub_1B887FF7C(&qword_1ED562A10);
}

uint64_t sub_1B8880CE0()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.PowerOperation();
  result = sub_1B887EC0C(0, 0xE000000000000000);
  qword_1ED562A68 = result;
  return result;
}

uint64_t *sub_1B8880D18()
{
  if (qword_1ED562A70 != -1)
    swift_once();
  return &qword_1ED562A68;
}

uint64_t static CalculateExpression.Operation.power.getter()
{
  return sub_1B887FF7C(&qword_1ED562A70);
}

uint64_t sub_1B8880D74()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.RootOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(50, 0xE100000000000000, v0 & 1);
  qword_1ED562888 = result;
  return result;
}

uint64_t *sub_1B8880DB4()
{
  if (qword_1ED562890 != -1)
    swift_once();
  return &qword_1ED562888;
}

uint64_t static CalculateExpression.Operation.squareRoot.getter()
{
  return sub_1B887FF7C(&qword_1ED562890);
}

uint64_t sub_1B8880E10()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.RootOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(51, 0xE100000000000000, v0 & 1);
  qword_1ED562BD8 = result;
  return result;
}

uint64_t *sub_1B8880E50()
{
  if (qword_1ED562BE0 != -1)
    swift_once();
  return &qword_1ED562BD8;
}

uint64_t static CalculateExpression.Operation.cubeRoot.getter()
{
  return sub_1B887FF7C(&qword_1ED562BE0);
}

uint64_t sub_1B8880EAC()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.RootOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(0, 0xE000000000000000, v0 & 1);
  qword_1ED562A28 = result;
  return result;
}

uint64_t *sub_1B8880EEC()
{
  if (qword_1ED562A30 != -1)
    swift_once();
  return &qword_1ED562A28;
}

uint64_t static CalculateExpression.Operation.root.getter()
{
  return sub_1B887FF7C(&qword_1ED562A30);
}

uint64_t sub_1B8880F48()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ReciprocalOperation();
  result = sub_1B885DCE8();
  qword_1ED562878 = result;
  return result;
}

uint64_t *sub_1B8880F78()
{
  if (qword_1ED562880 != -1)
    swift_once();
  return &qword_1ED562878;
}

uint64_t static CalculateExpression.Operation.reciprocal.getter()
{
  return sub_1B887FF7C(&qword_1ED562880);
}

uint64_t sub_1B8880FD4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.NegateOperation();
  result = sub_1B885DCE8();
  qword_1ED562B58 = result;
  return result;
}

uint64_t *sub_1B8881004()
{
  if (qword_1ED562B60 != -1)
    swift_once();
  return &qword_1ED562B58;
}

uint64_t static CalculateExpression.Operation.negate.getter()
{
  return sub_1B887FF7C(&qword_1ED562B60);
}

uint64_t sub_1B8881060()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(7235955, 0xE300000000000000, v0 & 1);
  qword_1ED562A38 = result;
  return result;
}

uint64_t *sub_1B88810A4()
{
  if (qword_1ED562A40 != -1)
    swift_once();
  return &qword_1ED562A38;
}

uint64_t static CalculateExpression.Operation.sine.getter()
{
  return sub_1B887FF7C(&qword_1ED562A40);
}

uint64_t sub_1B8881100()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(7565155, 0xE300000000000000, v0 & 1);
  qword_1ED562A78 = result;
  return result;
}

uint64_t *sub_1B8881144()
{
  if (qword_1ED562A80 != -1)
    swift_once();
  return &qword_1ED562A78;
}

uint64_t static CalculateExpression.Operation.cosine.getter()
{
  return sub_1B887FF7C(&qword_1ED562A80);
}

uint64_t sub_1B88811A0()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(7233908, 0xE300000000000000, v0 & 1);
  qword_1ED562BC8 = result;
  return result;
}

uint64_t *sub_1B88811E4()
{
  if (qword_1ED562BD0 != -1)
    swift_once();
  return &qword_1ED562BC8;
}

uint64_t static CalculateExpression.Operation.tangent.getter()
{
  return sub_1B887FF7C(&qword_1ED562BD0);
}

uint64_t sub_1B8881240()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1852404577, 0xE400000000000000, v0 & 1);
  qword_1ED5628A8 = result;
  return result;
}

uint64_t *sub_1B8881284()
{
  if (qword_1ED5628B0 != -1)
    swift_once();
  return &qword_1ED5628A8;
}

uint64_t static CalculateExpression.Operation.inverseSine.getter()
{
  return sub_1B887FF7C(&qword_1ED5628B0);
}

uint64_t sub_1B88812E0()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1936679777, 0xE400000000000000, v0 & 1);
  qword_1ED5628B8 = result;
  return result;
}

uint64_t *sub_1B8881324()
{
  if (qword_1ED5628C0 != -1)
    swift_once();
  return &qword_1ED5628B8;
}

uint64_t static CalculateExpression.Operation.inverseCosine.getter()
{
  return sub_1B887FF7C(&qword_1ED5628C0);
}

uint64_t sub_1B8881380()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1851880545, 0xE400000000000000, v0 & 1);
  qword_1ED5628D8 = result;
  return result;
}

uint64_t *sub_1B88813C4()
{
  if (qword_1ED5628E0 != -1)
    swift_once();
  return &qword_1ED5628D8;
}

uint64_t static CalculateExpression.Operation.inverseTangent.getter()
{
  return sub_1B887FF7C(&qword_1ED5628E0);
}

uint64_t sub_1B8881420()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1752066419, 0xE400000000000000, v0 & 1);
  qword_1ED5628C8 = result;
  return result;
}

uint64_t *sub_1B8881464()
{
  if (qword_1ED5628D0 != -1)
    swift_once();
  return &qword_1ED5628C8;
}

uint64_t static CalculateExpression.Operation.hyperbolicSine.getter()
{
  return sub_1B887FF7C(&qword_1ED5628D0);
}

uint64_t sub_1B88814C0()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1752395619, 0xE400000000000000, v0 & 1);
  qword_1ED562938 = result;
  return result;
}

uint64_t *sub_1B8881504()
{
  if (qword_1ED562940 != -1)
    swift_once();
  return &qword_1ED562938;
}

uint64_t static CalculateExpression.Operation.hyperbolicCosine.getter()
{
  return sub_1B887FF7C(&qword_1ED562940);
}

uint64_t sub_1B8881560()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(1752064372, 0xE400000000000000, v0 & 1);
  qword_1ED562968 = result;
  return result;
}

uint64_t *sub_1B88815A4()
{
  if (qword_1ED562970 != -1)
    swift_once();
  return &qword_1ED562968;
}

uint64_t static CalculateExpression.Operation.hyperbolicTangent.getter()
{
  return sub_1B887FF7C(&qword_1ED562970);
}

uint64_t sub_1B8881600()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(0x686E697361, 0xE500000000000000, v0 & 1);
  qword_1ED5629A8 = result;
  return result;
}

uint64_t *sub_1B8881648()
{
  if (qword_1ED5629B0 != -1)
    swift_once();
  return &qword_1ED5629A8;
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicSine.getter()
{
  return sub_1B887FF7C(&qword_1ED5629B0);
}

uint64_t sub_1B88816A4()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(0x68736F6361, 0xE500000000000000, v0 & 1);
  qword_1ED5629B8 = result;
  return result;
}

uint64_t *sub_1B88816EC()
{
  if (qword_1ED5629C0 != -1)
    swift_once();
  return &qword_1ED5629B8;
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicCosine.getter()
{
  return sub_1B887FF7C(&qword_1ED5629C0);
}

uint64_t sub_1B8881748()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(0x686E617461, 0xE500000000000000, v0 & 1);
  qword_1ED5629C8 = result;
  return result;
}

uint64_t *sub_1B8881790()
{
  if (qword_1ED5629D0 != -1)
    swift_once();
  return &qword_1ED5629C8;
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicTangent.getter()
{
  return sub_1B887FF7C(&qword_1ED5629D0);
}

uint64_t sub_1B88817EC()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.LogOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(12337, 0xE200000000000000, v0 & 1);
  qword_1ED5628F8 = result;
  return result;
}

uint64_t *sub_1B888182C()
{
  if (qword_1ED562900 != -1)
    swift_once();
  return &qword_1ED5628F8;
}

uint64_t static CalculateExpression.Operation.logarithmBase10.getter()
{
  return sub_1B887FF7C(&qword_1ED562900);
}

uint64_t sub_1B8881888()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.LogOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(50, 0xE100000000000000, v0 & 1);
  qword_1ED5628E8 = result;
  return result;
}

uint64_t *sub_1B88818C8()
{
  if (qword_1ED5628F0 != -1)
    swift_once();
  return &qword_1ED5628E8;
}

uint64_t static CalculateExpression.Operation.logarithmBase2.getter()
{
  return sub_1B887FF7C(&qword_1ED5628F0);
}

uint64_t sub_1B8881924()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.LogOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(0, 0xE000000000000000, v0 & 1);
  qword_1ED562978 = result;
  return result;
}

uint64_t *sub_1B8881964()
{
  if (qword_1ED562980 != -1)
    swift_once();
  return &qword_1ED562978;
}

uint64_t static CalculateExpression.Operation.logarithmBaseCustom.getter()
{
  return sub_1B887FF7C(&qword_1ED562980);
}

uint64_t sub_1B88819C0()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.FunctionOperation();
  v0 = sub_1B885FD04();
  result = sub_1B88B2550(28268, 0xE200000000000000, v0 & 1);
  qword_1ED562948 = result;
  return result;
}

uint64_t *sub_1B8881A00()
{
  if (qword_1ED562950 != -1)
    swift_once();
  return &qword_1ED562948;
}

uint64_t static CalculateExpression.Operation.logarithmNatural.getter()
{
  return sub_1B887FF7C(&qword_1ED562950);
}

uint64_t sub_1B8881A5C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ExponentialOperation();
  result = sub_1B887EC0C(12337, 0xE200000000000000);
  qword_1ED562958 = result;
  return result;
}

uint64_t *sub_1B8881A94()
{
  if (qword_1ED562960 != -1)
    swift_once();
  return &qword_1ED562958;
}

uint64_t static CalculateExpression.Operation.exponentialBase10.getter()
{
  return sub_1B887FF7C(&qword_1ED562960);
}

uint64_t sub_1B8881AF0()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ExponentialOperation();
  result = sub_1B887EC0C(50, 0xE100000000000000);
  qword_1ED562928 = result;
  return result;
}

uint64_t *sub_1B8881B28()
{
  if (qword_1ED562930 != -1)
    swift_once();
  return &qword_1ED562928;
}

uint64_t static CalculateExpression.Operation.exponentialBase2.getter()
{
  return sub_1B887FF7C(&qword_1ED562930);
}

uint64_t sub_1B8881B84()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ExponentialOperation();
  result = sub_1B887EC0C(0, 0xE000000000000000);
  qword_1ED562998 = result;
  return result;
}

uint64_t *sub_1B8881BBC()
{
  if (qword_1ED5629A0 != -1)
    swift_once();
  return &qword_1ED562998;
}

uint64_t static CalculateExpression.Operation.exponentialBaseCustom.getter()
{
  return sub_1B887FF7C(&qword_1ED5629A0);
}

uint64_t sub_1B8881C18()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ExponentialOperation();
  result = sub_1B887EC0C(101, 0xE100000000000000);
  qword_1ED562988 = result;
  return result;
}

uint64_t *sub_1B8881C50()
{
  if (qword_1ED562990 != -1)
    swift_once();
  return &qword_1ED562988;
}

uint64_t static CalculateExpression.Operation.exponentialBaseEuler.getter()
{
  return sub_1B887FF7C(&qword_1ED562990);
}

uint64_t sub_1B8881CAC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(65, 0xE100000000000000);
  qword_1EF1B6B48 = result;
  return result;
}

uint64_t *sub_1B8881CE4()
{
  if (qword_1EF1B6B40 != -1)
    swift_once();
  return &qword_1EF1B6B48;
}

uint64_t static CalculateExpression.Operation.digitA.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B40);
}

uint64_t sub_1B8881D40()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(66, 0xE100000000000000);
  qword_1EF1B6B58 = result;
  return result;
}

uint64_t *sub_1B8881D78()
{
  if (qword_1EF1B6B50 != -1)
    swift_once();
  return &qword_1EF1B6B58;
}

uint64_t static CalculateExpression.Operation.digitB.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B50);
}

uint64_t sub_1B8881DD4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(67, 0xE100000000000000);
  qword_1EF1B6B68 = result;
  return result;
}

uint64_t *sub_1B8881E0C()
{
  if (qword_1EF1B6B60 != -1)
    swift_once();
  return &qword_1EF1B6B68;
}

uint64_t static CalculateExpression.Operation.digitC.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B60);
}

uint64_t sub_1B8881E68()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(68, 0xE100000000000000);
  qword_1EF1B6B78 = result;
  return result;
}

uint64_t *sub_1B8881EA0()
{
  if (qword_1EF1B6B70 != -1)
    swift_once();
  return &qword_1EF1B6B78;
}

uint64_t static CalculateExpression.Operation.digitD.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B70);
}

uint64_t sub_1B8881EFC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(69, 0xE100000000000000);
  qword_1EF1B6B88 = result;
  return result;
}

uint64_t *sub_1B8881F34()
{
  if (qword_1EF1B6B80 != -1)
    swift_once();
  return &qword_1EF1B6B88;
}

uint64_t static CalculateExpression.Operation.digitE.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B80);
}

uint64_t sub_1B8881F90()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(70, 0xE100000000000000);
  qword_1EF1B6B98 = result;
  return result;
}

uint64_t *sub_1B8881FC8()
{
  if (qword_1EF1B6B90 != -1)
    swift_once();
  return &qword_1EF1B6B98;
}

uint64_t static CalculateExpression.Operation.digitF.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6B90);
}

uint64_t sub_1B8882024()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(12336, 0xE200000000000000);
  qword_1EF1B6BA8 = result;
  return result;
}

uint64_t *sub_1B888205C()
{
  if (qword_1EF1B6BA0 != -1)
    swift_once();
  return &qword_1EF1B6BA8;
}

uint64_t static CalculateExpression.Operation.digit00.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BA0);
}

uint64_t sub_1B88820B8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.LiteralOperation();
  result = sub_1B887EC0C(17990, 0xE200000000000000);
  qword_1EF1B6BB8 = result;
  return result;
}

uint64_t *sub_1B88820F0()
{
  if (qword_1EF1B6BB0 != -1)
    swift_once();
  return &qword_1EF1B6BB8;
}

uint64_t static CalculateExpression.Operation.digitFF.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BB0);
}

uint64_t sub_1B888214C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(4476481, 0xE300000000000000);
  qword_1EF1B6BC8 = result;
  return result;
}

uint64_t *sub_1B8882188()
{
  if (qword_1EF1B6BC0 != -1)
    swift_once();
  return &qword_1EF1B6BC8;
}

uint64_t static CalculateExpression.Operation.and.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BC0);
}

uint64_t sub_1B88821E4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(21071, 0xE200000000000000);
  qword_1EF1B6BD8 = result;
  return result;
}

uint64_t *sub_1B888221C()
{
  if (qword_1EF1B6BD0 != -1)
    swift_once();
  return &qword_1EF1B6BD8;
}

uint64_t static CalculateExpression.Operation.or.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BD0);
}

uint64_t sub_1B8882278()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(5394254, 0xE300000000000000);
  qword_1EF1B6BE8 = result;
  return result;
}

uint64_t *sub_1B88822B4()
{
  if (qword_1EF1B6BE0 != -1)
    swift_once();
  return &qword_1EF1B6BE8;
}

uint64_t static CalculateExpression.Operation.nor.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BE0);
}

uint64_t sub_1B8882310()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(5394264, 0xE300000000000000);
  qword_1EF1B6BF8 = result;
  return result;
}

uint64_t *sub_1B888234C()
{
  if (qword_1EF1B6BF0 != -1)
    swift_once();
  return &qword_1EF1B6BF8;
}

uint64_t static CalculateExpression.Operation.xor.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6BF0);
}

uint64_t sub_1B88823A8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  result = sub_1B88BDC94(6582125, 0xE300000000000000);
  qword_1EF1B6C08 = result;
  return result;
}

uint64_t *sub_1B88823E4()
{
  if (qword_1EF1B6C00 != -1)
    swift_once();
  return &qword_1EF1B6C08;
}

uint64_t static CalculateExpression.Operation.mod.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C00);
}

uint64_t sub_1B8882440(uint64_t a1)
{
  return sub_1B888269C(a1, 29, 49, 0xE100000000000000, &qword_1EF1B6C18);
}

uint64_t *sub_1B8882458()
{
  if (qword_1EF1B6C10 != -1)
    swift_once();
  return &qword_1EF1B6C18;
}

uint64_t static CalculateExpression.Operation.leftShift.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C10);
}

uint64_t sub_1B88824B4(uint64_t a1)
{
  return sub_1B888269C(a1, 30, 49, 0xE100000000000000, &qword_1EF1B6C28);
}

uint64_t *sub_1B88824CC()
{
  if (qword_1EF1B6C20 != -1)
    swift_once();
  return &qword_1EF1B6C28;
}

uint64_t static CalculateExpression.Operation.rightShift.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C20);
}

uint64_t sub_1B8882528(uint64_t a1)
{
  return sub_1B888269C(a1, 29, 0, 0xE000000000000000, &qword_1EF1B6C38);
}

uint64_t *sub_1B8882540()
{
  if (qword_1EF1B6C30 != -1)
    swift_once();
  return &qword_1EF1B6C38;
}

uint64_t static CalculateExpression.Operation.leftShiftCustom.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C30);
}

uint64_t sub_1B888259C(uint64_t a1)
{
  return sub_1B888269C(a1, 30, 0, 0xE000000000000000, &qword_1EF1B6C48);
}

uint64_t *sub_1B88825B4()
{
  if (qword_1EF1B6C40 != -1)
    swift_once();
  return &qword_1EF1B6C48;
}

uint64_t static CalculateExpression.Operation.rightShiftCustom.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C40);
}

uint64_t sub_1B8882610(uint64_t a1)
{
  return sub_1B888269C(a1, 31, 49, 0xE100000000000000, &qword_1EF1B6C58);
}

uint64_t *sub_1B8882628()
{
  if (qword_1EF1B6C50 != -1)
    swift_once();
  return &qword_1EF1B6C58;
}

uint64_t static CalculateExpression.Operation.leftRotate.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C50);
}

uint64_t sub_1B8882684(uint64_t a1)
{
  return sub_1B888269C(a1, 32, 49, 0xE100000000000000, &qword_1EF1B6C68);
}

uint64_t sub_1B888269C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;
  char v10;

  type metadata accessor for CalculateExpression.ShiftOperation();
  v10 = a2;
  result = sub_1B885ED48(&v10, a3, a4);
  *a5 = result;
  return result;
}

uint64_t *sub_1B88826FC()
{
  if (qword_1EF1B6C60 != -1)
    swift_once();
  return &qword_1EF1B6C68;
}

uint64_t static CalculateExpression.Operation.rightRotate.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C60);
}

uint64_t sub_1B8882758()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.FlipOperation();
  result = sub_1B885EC84(56, 0xE100000000000000);
  qword_1EF1B6C78 = result;
  return result;
}

uint64_t *sub_1B8882790()
{
  if (qword_1EF1B6C70 != -1)
    swift_once();
  return &qword_1EF1B6C78;
}

uint64_t static CalculateExpression.Operation.byteFlip.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C70);
}

uint64_t sub_1B88827EC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.FlipOperation();
  result = sub_1B885EC84(13873, 0xE200000000000000);
  qword_1EF1B6C88 = result;
  return result;
}

uint64_t *sub_1B8882824()
{
  if (qword_1EF1B6C80 != -1)
    swift_once();
  return &qword_1EF1B6C88;
}

uint64_t static CalculateExpression.Operation.wordFlip.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C80);
}

uint64_t sub_1B8882880()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.NotOperation();
  result = sub_1B885DCE8();
  qword_1EF1B6C98 = result;
  return result;
}

uint64_t *sub_1B88828B0()
{
  if (qword_1EF1B6C90 != -1)
    swift_once();
  return &qword_1EF1B6C98;
}

uint64_t static CalculateExpression.Operation.not.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6C90);
}

uint64_t sub_1B888290C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.NegOperation();
  result = sub_1B885DCE8();
  qword_1EF1B6CA8 = result;
  return result;
}

uint64_t *sub_1B888293C()
{
  if (qword_1EF1B6CA0 != -1)
    swift_once();
  return &qword_1EF1B6CA8;
}

uint64_t static CalculateExpression.Operation.neg.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6CA0);
}

uint64_t sub_1B8882998(uint64_t a1)
{
  return sub_1B88829FC(a1, &qword_1EF1B6C90, &qword_1EF1B6C98, &qword_1EF1B6CB8);
}

uint64_t static CalculateExpression.Operation.onesComplement.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6CB0);
}

uint64_t sub_1B88829D8(uint64_t a1)
{
  return sub_1B88829FC(a1, &qword_1EF1B6CA0, &qword_1EF1B6CA8, &qword_1EF1B6CC8);
}

uint64_t sub_1B88829FC(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  if (*a2 != -1)
    swift_once();
  *a4 = *a3;
  return swift_retain();
}

uint64_t static CalculateExpression.Operation.twosComplement.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6CC0);
}

uint64_t sub_1B8882A5C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.DropOperation();
  result = sub_1B885DCE8();
  qword_1ED562A18 = result;
  return result;
}

uint64_t *sub_1B8882A8C()
{
  if (qword_1ED562A20 != -1)
    swift_once();
  return &qword_1ED562A18;
}

uint64_t static CalculateExpression.Operation.drop.getter()
{
  return sub_1B887FF7C(&qword_1ED562A20);
}

uint64_t sub_1B8882AE8()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.SwapOperation();
  result = sub_1B885DCE8();
  qword_1ED562A48 = result;
  return result;
}

uint64_t *sub_1B8882B18()
{
  if (qword_1ED562A50 != -1)
    swift_once();
  return &qword_1ED562A48;
}

uint64_t static CalculateExpression.Operation.swap.getter()
{
  return sub_1B887FF7C(&qword_1ED562A50);
}

uint64_t sub_1B8882B74()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.RollInOperation();
  result = sub_1B885DCE8();
  qword_1ED562B78 = result;
  return result;
}

uint64_t *sub_1B8882BA4()
{
  if (qword_1ED562B80 != -1)
    swift_once();
  return &qword_1ED562B78;
}

uint64_t static CalculateExpression.Operation.rollIn.getter()
{
  return sub_1B887FF7C(&qword_1ED562B80);
}

uint64_t sub_1B8882C00()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.RollOutOperation();
  result = sub_1B885DCE8();
  qword_1ED562BB8 = result;
  return result;
}

uint64_t *sub_1B8882C30()
{
  if (qword_1ED562BC0 != -1)
    swift_once();
  return &qword_1ED562BB8;
}

uint64_t static CalculateExpression.Operation.rollOut.getter()
{
  return sub_1B887FF7C(&qword_1ED562BC0);
}

uint64_t sub_1B8882C8C()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.EnterOperation();
  result = sub_1B885DCE8();
  qword_1EF1B6CD8 = result;
  return result;
}

uint64_t *sub_1B8882CBC()
{
  if (qword_1EF1B6CD0 != -1)
    swift_once();
  return &qword_1EF1B6CD8;
}

uint64_t static CalculateExpression.Operation.enter.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6CD0);
}

uint64_t sub_1B8882D18()
{
  char v0;
  uint64_t result;

  type metadata accessor for CalculateExpression.RootOperation();
  v0 = sub_1B885FD04();
  result = sub_1B8895C60(121, 0xE100000000000000, v0 & 1);
  qword_1EF1B6CE8 = result;
  return result;
}

uint64_t *sub_1B8882D58()
{
  if (qword_1EF1B6CE0 != -1)
    swift_once();
  return &qword_1EF1B6CE8;
}

uint64_t static CalculateExpression.Operation.reverseRoot.getter()
{
  return sub_1B887FF7C(&qword_1EF1B6CE0);
}

uint64_t sub_1B8882DB4()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.DeleteOperation();
  result = sub_1B885DCE8();
  qword_1ED562A88 = result;
  return result;
}

uint64_t *sub_1B8882DE4()
{
  if (qword_1ED562A90 != -1)
    swift_once();
  return &qword_1ED562A88;
}

uint64_t static CalculateExpression.Operation.delete.getter()
{
  return sub_1B887FF7C(&qword_1ED562A90);
}

uint64_t sub_1B8882E40()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.ClearOperation();
  result = sub_1B885DCE8();
  qword_1ED562A58 = result;
  return result;
}

uint64_t *sub_1B8882E70()
{
  if (qword_1ED562A60 != -1)
    swift_once();
  return &qword_1ED562A58;
}

uint64_t static CalculateExpression.Operation.clear.getter()
{
  return sub_1B887FF7C(&qword_1ED562A60);
}

uint64_t sub_1B8882ECC()
{
  uint64_t result;

  type metadata accessor for CalculateExpression.EqualsOperation();
  result = sub_1B885DCE8();
  qword_1ED562B48 = result;
  return result;
}

uint64_t *sub_1B8882EFC()
{
  if (qword_1ED562B50 != -1)
    swift_once();
  return &qword_1ED562B48;
}

uint64_t static CalculateExpression.Operation.equals.getter()
{
  return sub_1B887FF7C(&qword_1ED562B50);
}

BOOL static CalculateExpression.Operation.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CalculateExpression.Operation.Mode.hash(into:)()
{
  return sub_1B89130B0();
}

uint64_t CalculateExpression.Operation.Mode.hashValue.getter()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

void sub_1B8882FD8(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1B8882FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 80))(&var1);
  v1 = var1;
  if (!(_BYTE)var1)
    v1 = 0;
  if (var1 - 2 >= 2)
    return v1;
  else
    return 2;
}

uint64_t CalculateExpression.Operation.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CalculateExpression.Operation.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B8883048()
{
  return swift_allocObject();
}

uint64_t sub_1B8883058()
{
  uint64_t v0;

  return v0;
}

BOOL static CalculateExpression.Operation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t CalculateExpression.Operation.hash(into:)()
{
  return sub_1B89130B0();
}

uint64_t CalculateExpression.Operation.hashValue.getter()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B88830D8()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B888311C()
{
  return sub_1B89130B0();
}

uint64_t sub_1B8883144()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B8883180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CalculateExpression.Operation();
  result = sub_1B8912F30();
  *a1 = result;
  return result;
}

uint64_t sub_1B88831BC(void (*a1)(unsigned __int8 *, _QWORD), uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(unsigned __int8 *, _QWORD);
  uint64_t (*v5)(unsigned __int8 *);
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21[32];
  char *v22;

  v6 = (char *)a2[1];
  v7 = (uint64_t)(v6 - 1);
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  v4 = a1;
  v8 = *a2;
  v22 = v6 - 1;
  v2 = *(_QWORD *)(*(_QWORD *)v8 + 416);
  swift_retain();
  v9 = ((uint64_t (*)(char *))v2)(v6 - 1);
  if (!v9
    || (v10 = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        v21[0] = v10,
        sub_1B885DDA0(),
        result = sub_1B8912AA4(),
        (result & 1) == 0))
  {
LABEL_6:
    sub_1B88834C4((uint64_t *)&v22);
    type metadata accessor for CalculateExpression.RichToken();
    v21[0] = 16;
    v12 = sub_1B885FD04();
    v13 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v21, v12 & 1);
    v3 = (uint64_t)(v6 + 1);
    if (!__OFADD__(v6, 1))
    {
      v2 = v13;
      v7 = (uint64_t)v4;
      v5 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v8 + 408);
      v4 = (void (*)(unsigned __int8 *, _QWORD))v5(v21);
      if (!(*v14 >> 62))
      {
        if (*(_QWORD *)((*v14 & 0xFFFFFFFFFFFFF8) + 0x10) >= v3)
          goto LABEL_9;
        goto LABEL_21;
      }
LABEL_20:
      swift_bridgeObjectRetain();
      v18 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v18 >= v3)
      {
LABEL_9:
        if ((v3 & 0x8000000000000000) == 0)
        {
          sub_1B88604E0(v3, v3, v2);
          v4(v21, 0);
          v2 = (uint64_t)(v6 + 2);
          if (!__OFADD__(v6, 2))
          {
            swift_retain();
            v3 = v5(v21);
            if (!(*v15 >> 62))
            {
              if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFF8) + 0x10) >= v2)
                goto LABEL_13;
              goto LABEL_25;
            }
LABEL_24:
            swift_bridgeObjectRetain();
            v19 = sub_1B8912FD8();
            swift_bridgeObjectRelease();
            if (v19 >= v2)
            {
LABEL_13:
              if ((v2 & 0x8000000000000000) == 0)
              {
                sub_1B88604E0(v2, v2, v7);
                ((void (*)(unsigned __int8 *, _QWORD))v3)(v21, 0);
                v21[0] = 15;
                v16 = sub_1B885FD04();
                v7 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v21, v16 & 1);
                v2 = (uint64_t)v22;
                result = v5(v21);
                v6 = (char *)result;
                if (!(*v17 >> 62))
                {
                  if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10) >= v2)
                    goto LABEL_16;
                  goto LABEL_28;
                }
LABEL_27:
                swift_bridgeObjectRetain();
                v20 = sub_1B8912FD8();
                result = swift_bridgeObjectRelease();
                if (v20 >= v2)
                {
LABEL_16:
                  if ((v2 & 0x8000000000000000) == 0)
                  {
                    sub_1B88604E0(v2, v2, v7);
                    ((void (*)(unsigned __int8 *, _QWORD))v6)(v21, 0);
                    return swift_release();
                  }
                  goto LABEL_29;
                }
LABEL_28:
                __break(1u);
LABEL_29:
                __break(1u);
                goto LABEL_30;
              }
LABEL_26:
              __break(1u);
              goto LABEL_27;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!__OFSUB__(v7, 1))
  {
    v22 = v6 - 2;
    goto LABEL_6;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B88834C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v3 = *a1;
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 416);
  v5 = v4(*a1);
  if (v5)
  {
    v6 = *(_BYTE *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    BYTE4(v23) = v6;
    BYTE3(v23) = 7;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
    {
      v7 = v4(v3);
      if (!v7
        || (v8 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 256))(), v9 = swift_release(), !v8)
        || (v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 568))(v9), swift_release(), (v10 & 1) == 0))
      {
        result = v4(v3);
        if (!result
          || (v12 = (*(uint64_t (**)(void))(*(_QWORD *)result + 256))(), result = swift_release(), !v12)
          || ((*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v12 + 272))(&v23, result),
              swift_release(),
              sub_1B88797D8(),
              result = sub_1B8912AA4(),
              (result & 1) == 0))
        {
          v13 = __OFSUB__(v3--, 1);
          if (v13)
          {
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
          *a1 = v3;
          v14 = v4(v3);
          if (v14)
          {
            v15 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            BYTE2(v23) = v15;
            BYTE1(v23) = 17;
            result = sub_1B8912AA4();
            if ((result & 1) != 0)
            {
              v13 = __OFSUB__(v3--, 1);
              if (v13)
              {
LABEL_32:
                __break(1u);
                return result;
              }
              *a1 = v3;
            }
          }
        }
      }
    }
  }
  v16 = v4(v3);
  if (v16)
  {
    v17 = *(_BYTE *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v24 = v17;
    HIBYTE(v23) = 8;
    sub_1B885DDA0();
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v13 = __OFSUB__(v3--, 1);
      if (v13)
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      *a1 = v3;
      v18 = v4(v3);
      if (v18)
      {
        v19 = *(_BYTE *)(v18 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        BYTE6(v23) = v19;
        BYTE5(v23) = 17;
        result = sub_1B8912AA4();
        if ((result & 1) != 0)
        {
          v13 = __OFSUB__(v3--, 1);
          if (v13)
          {
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          *a1 = v3;
        }
      }
    }
  }
  result = v4(v3);
  if (!result)
    return result;
  v20 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v28 = v20;
  v27 = 16;
  sub_1B885DDA0();
  result = sub_1B8912AA4();
  if ((result & 1) == 0)
    return result;
  result = sub_1B8883858((uint64_t)a1);
  v21 = *a1 - 1;
  if (__OFSUB__(*a1, 1))
    goto LABEL_29;
  result = v4(*a1 - 1);
  if (result)
  {
    v22 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v26 = v22;
    v25 = 10;
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
      *a1 = v21;
  }
  return result;
}

uint64_t CalculateExpression.RichExpression.EditingToken.expression.getter()
{
  return swift_retain();
}

uint64_t CalculateExpression.RichExpression.EditingToken.tokenIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CalculateExpression.RichExpression.EditingToken.depth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CalculateExpression.RichExpression.EditingToken.child.getter()
{
  return swift_retain();
}

uint64_t CalculateExpression.RichExpression.EditingToken.token.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v0 + 416))(v0[1]);
}

uint64_t sub_1B8883858(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t i;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  unsigned __int8 v15;

  if ((*(_QWORD *)result & 0x8000000000000000) != 0)
    return result;
  v2 = (_QWORD *)result;
  v3 = 0;
  v4 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 392);
  for (i = *(_QWORD *)result + 4; ; --i)
  {
    v7 = i - 4;
    result = v4();
    if ((result & 0xC000000000000001) == 0)
      break;
    v8 = MEMORY[0x1BCCB4394](i - 4, result);
LABEL_8:
    swift_bridgeObjectRelease();
    v9 = *(_BYTE *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v15 = v9;
    v14 = 16;
    result = static CalculateExpression.TokenType.== infix(_:_:)(&v15, &v14);
    if ((result & 1) != 0)
    {
      v6 = __OFADD__(v3++, 1);
      if (v6)
        goto LABEL_20;
    }
    else
    {
      result = v4();
      if ((result & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1BCCB4394](i - 4, result);
      }
      else
      {
        if ((unint64_t)v7 >= *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_21;
        v10 = *(_QWORD *)(result + 8 * i);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v11 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      v13 = v11;
      v12 = 15;
      result = static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12);
      if ((result & 1) != 0)
      {
        v6 = __OFSUB__(v3--, 1);
        if (v6)
          goto LABEL_22;
        if (v3 < 1)
          return result;
      }
    }
    *v2 = i - 5;
    if (v7 <= 0)
      return result;
  }
  if ((unint64_t)v7 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(_QWORD *)(result + 8 * i);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

BOOL sub_1B88839EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  BOOL v13;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v3 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 392);
  v4 = v3();
  if (v4 >> 62)
    goto LABEL_23;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v6 = swift_bridgeObjectRelease();
  if (v5 <= a1)
    return 0;
  v7 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    do
    {
      v10 = ((uint64_t (*)(uint64_t))v3)(v6);
      if ((v10 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x1BCCB4394](a1, v10);
      }
      else
      {
        if ((unint64_t)a1 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          v5 = sub_1B8912FD8();
          goto LABEL_3;
        }
        v11 = *(_QWORD *)(v10 + 8 * a1 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v12 = *(_BYTE *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v18 = v12;
      v17 = 16;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v18, &v17))
      {
        v6 = swift_release();
        v8 = __OFSUB__(v7--, 1);
        if (v8)
          goto LABEL_21;
      }
      else
      {
        v16 = v12;
        v15 = 15;
        v13 = static CalculateExpression.TokenType.== infix(_:_:)(&v16, &v15);
        v6 = swift_release();
        if (v13)
        {
          v8 = __OFADD__(v7++, 1);
          if (v8)
            goto LABEL_22;
        }
      }
    }
    while (a1-- > 0);
  }
  return v7 > 0;
}

uint64_t CalculateExpression.RichExpression.editingToken(matching:)@<X0>(uint64_t (*a1)(_QWORD *)@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1B8883D64(0);
  sub_1B8883BCC(v4, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.RichExpression.editingTokens()()
{
  return sub_1B8883D64(0);
}

double sub_1B8883BCC@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD *)@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  BOOL v11;
  double result;
  _QWORD *v13;
  uint64_t v15;
  _QWORD v16[4];
  char v17;
  char v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v13 = a3;
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 32 * v3 + 16);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v8 = v4[1];
      v9 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 296);
      swift_retain();
      v10 = swift_retain_n();
      if ((v9(v10) & 1) != 0)
      {
        v16[0] = v6;
        v16[1] = v5;
        v16[2] = v7;
        v16[3] = v8;
        if ((a2(v16) & 1) != 0
          || ((*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v6 + 272))(&v19),
              v18 = v19,
              v17 = 0,
              sub_1B8884450(),
              sub_1B8912C78(),
              sub_1B8912C78(),
              v16[0] == v15))
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_12:
          *v13 = v6;
          v13[1] = v5;
          v13[2] = v7;
          v13[3] = v8;
          return result;
        }
        v11 = sub_1B88839EC(v5);
        swift_release();
        if (v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      else
      {
        swift_release();
      }
      swift_release();
      --v3;
      v4 -= 4;
      swift_release();
    }
    while (v3);
    swift_bridgeObjectRelease();
    a3 = v13;
  }
  result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_1B8883D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 392))();
  if (v4 >> 62)
    v5 = sub_1B8912FD8();
  else
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  v7 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 416);
      do
      {
        v10 = v8(--v5);
        if (!v10)
        {
          v7 = v5;
          goto LABEL_14;
        }
        v11 = v10;
        v12 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v23) = v12;
        LOBYTE(v22) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v23, (unsigned __int8 *)&v22)
          && ((*(uint64_t (**)(void))(*(_QWORD *)v11 + 232))() & 1) != 0)
        {
          swift_release();
        }
        else
        {
          LOBYTE(v23) = v12;
          LOBYTE(v22) = 17;
          v9 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v23, (unsigned __int8 *)&v22);
          swift_release();
          if (!v9)
            goto LABEL_14;
        }
        --v7;
      }
      while (v5 >= 1);
      v7 = -1;
    }
LABEL_14:
    v23 = v7;
    v13 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 416);
    v14 = v13(v7);
    v15 = v7;
    if (v14)
    {
      v16 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v22) = v16;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) != 0 || (LOBYTE(v22) = v16, (sub_1B8912AA4() & 1) != 0))
      {
        swift_release();
        v15 = v7;
      }
      else
      {
        sub_1B88834C4(&v23);
        swift_release();
        v15 = v23;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C20);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B8915E80;
    swift_retain();
    v18 = v13(v15);
    *(_QWORD *)(v17 + 32) = v2;
    *(_QWORD *)(v17 + 40) = v7;
    *(_QWORD *)(v17 + 48) = a1;
    *(_QWORD *)(v17 + 56) = v18;
    v22 = v17;
    v19 = v13(v15);
    if (!v19)
      return v22;
    v20 = v19;
    if ((*(uint64_t (**)(void))(*(_QWORD *)v19 + 256))())
    {
      result = a1 + 1;
      if (!__OFADD__(a1, 1))
        goto LABEL_26;
      __break(1u);
    }
    if (!(*(uint64_t (**)(void))(*(_QWORD *)v20 + 280))())
      goto LABEL_27;
    result = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
LABEL_26:
      v21 = sub_1B8883D64(result);
      sub_1B8884028(v21);
      swift_release();
LABEL_27:
      swift_release();
      return v22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8884028(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_1B8884494((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_1B8884118()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED561AE8;
  if (!qword_1ED561AE8)
  {
    v1 = type metadata accessor for CalculateExpression.Operation();
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.Operation, v1);
    atomic_store(result, (unint64_t *)&qword_1ED561AE8);
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.Operation()
{
  return objc_opt_self();
}

uint64_t sub_1B888417C()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t method lookup function for CalculateExpression.Operation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.Operation.mode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of CalculateExpression.Operation.operandCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t _s9OperationC4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8884214 + 4 * byte_1B891642D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8884248 + 4 * byte_1B8916428[v4]))();
}

uint64_t sub_1B8884248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8884250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8884258);
  return result;
}

uint64_t sub_1B8884264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B888426CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8884270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8884278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.Operation.Mode()
{
  return &type metadata for CalculateExpression.Operation.Mode;
}

uint64_t _s12EditingTokenVwxx()
{
  swift_release();
  return swift_release();
}

uint64_t _s12EditingTokenVwcp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s12EditingTokenVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12EditingTokenVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s12EditingTokenVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12EditingTokenVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.RichExpression.EditingToken()
{
  return &type metadata for CalculateExpression.RichExpression.EditingToken;
}

unint64_t sub_1B8884450()
{
  unint64_t result;

  result = qword_1ED561AC0;
  if (!qword_1ED561AC0)
  {
    result = MEMORY[0x1BCCB4D60](&protocol conformance descriptor for CalculateExpression.RichExpression.BaselineOffset, &type metadata for CalculateExpression.RichExpression.BaselineOffset);
    atomic_store(result, (unint64_t *)&qword_1ED561AC0);
  }
  return result;
}

char *sub_1B8884494(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1B8884594()
{
  BOOL v0;
  objc_class *v4;
  id result;

  if (MEMORY[0x1E0DAF3A0])
    v0 = MEMORY[0x1E0DAF388] == 0;
  else
    v0 = 1;
  if (v0 || MEMORY[0x1E0DAF3A8] == 0 || MEMORY[0x1E0DAF398] == 0 || MEMORY[0x1E0DAF390] == 0)
    v4 = (objc_class *)type metadata accessor for StocksKitCurrencyCache();
  else
    v4 = (objc_class *)type metadata accessor for StocksKitCurrencyCacheImpl();
  result = objc_msgSend(objc_allocWithZone(v4), sel_init);
  qword_1ED562F68 = (uint64_t)result;
  return result;
}

id StocksKitCurrencyCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t *sub_1B8884628()
{
  if (qword_1ED562F70 != -1)
    swift_once();
  return &qword_1ED562F68;
}

id static StocksKitCurrencyCache.shared.getter()
{
  if (qword_1ED562F70 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1ED562F68;
}

void static StocksKitCurrencyCache.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1ED562F70 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1ED562F68;
  qword_1ED562F68 = a1;

}

uint64_t (*static StocksKitCurrencyCache.shared.modify())()
{
  if (qword_1ED562F70 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL static StocksKitCurrencyCache.isEnabled.getter()
{
  BOOL v0;

  if (MEMORY[0x1E0DAF390])
    v0 = MEMORY[0x1E0DAF398] == 0;
  else
    v0 = 1;
  return !v0 && MEMORY[0x1E0DAF3A8] != 0 && MEMORY[0x1E0DAF388] != 0 && MEMORY[0x1E0DAF3A0] != 0;
}

uint64_t sub_1B888491C()
{
  uint64_t v0;

  return sub_1B8884A90(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_1B8884A48(const void *a1)
{
  uint64_t v1;
  void (**v2)(void *, _QWORD);

  v2 = (void (**)(void *, _QWORD))_Block_copy(a1);
  v2[2](v2, 0);
  _Block_release(v2);
  return sub_1B888A398(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B8884A90(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1B8884BCC(const void *a1)
{
  uint64_t v1;
  void (**v2)(void *, _QWORD);

  v2 = (void (**)(void *, _QWORD))_Block_copy(a1);
  v2[2](v2, 0);
  _Block_release(v2);
  return sub_1B888A398(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B8884C2C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8884C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1B891281C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1B8884CF0()
{
  return sub_1B8884CFC(MEMORY[0x1E0DEE9D8]);
}

unint64_t sub_1B8884CFC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B61D8);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1B8873F28(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StocksKitCurrencyCache.ProviderData.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksKitCurrencyCache.ProviderData.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  return sub_1B8879FD0(v1 + *(int *)(v3 + 20), a1, &qword_1ED561A98);
}

uint64_t type metadata accessor for StocksKitCurrencyCache.ProviderData()
{
  uint64_t result;

  result = qword_1ED562F58;
  if (!qword_1ED562F58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StocksKitCurrencyCache.ProviderData.logo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StocksKitCurrencyCache.ProviderData() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1B8884EFC(v4, v5, v6, v7);
}

uint64_t sub_1B8884EFC(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1B8884F38(result, a2);
    return sub_1B8884F7C(a3, a4);
  }
  return result;
}

uint64_t sub_1B8884F38(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1B8884F7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B8884F38(a1, a2);
  return a1;
}

uint64_t sub_1B8884F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t StocksKitCurrencyCache.ProviderLogo.light.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1B8884F38(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t StocksKitCurrencyCache.ProviderLogo.dark.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1B8884F7C(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

double StocksKitCurrencyCache.ProviderLogo.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1B8885040(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8885058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id StocksKitCurrencyCache.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StocksKitCurrencyCache();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for StocksKitCurrencyCache()
{
  return objc_opt_self();
}

id StocksKitCurrencyCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StocksKitCurrencyCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t StocksKitCurrencyCacheImpl.refresh()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B8885180()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_1B89129E4();
  v0[3] = v1;
  v0[4] = *(_QWORD *)(v1 - 8);
  v0[5] = swift_task_alloc();
  sub_1B8912984();
  v0[6] = sub_1B8912978();
  v2 = sub_1B8912954();
  v0[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[8] = v3;
  v0[9] = swift_task_alloc();
  (*(void (**)(void))(v3 + 104))();
  v4 = (_QWORD *)swift_task_alloc();
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_1B8885284;
  return sub_1B8912960();
}

uint64_t sub_1B8885284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8885320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 + 16);
  sub_1B8879F94(v6, &qword_1ED561B18);
  v9 = sub_1B89129E4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  os_unfair_lock_unlock(v7);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 88) == 0);
}

uint64_t sub_1B8885444()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1B8879F94(v4, &qword_1ED561B18);
  v6 = sub_1B89129E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  os_unfair_lock_unlock(v5);

  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 88) == 0);
}

uint64_t sub_1B888563C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1B888A4D8;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t StocksKitCurrencyCacheImpl.refresh(timeout:)(double a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1B88856D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_1B89129E4();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = swift_task_alloc();
  sub_1B8912984();
  v0[7] = sub_1B8912978();
  sub_1B89130C8();
  v2 = sub_1B8912954();
  v0[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[9] = v3;
  v0[10] = swift_task_alloc();
  (*(void (**)(void))(v3 + 104))();
  v4 = (_QWORD *)swift_task_alloc();
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_1B88857E8;
  return sub_1B8912960();
}

uint64_t sub_1B88857E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8885884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 + 16);
  sub_1B8879F94(v6, &qword_1ED561B18);
  v9 = sub_1B89129E4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  os_unfair_lock_unlock(v7);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 96) == 0);
}

uint64_t sub_1B88859A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1B8879F94(v4, &qword_1ED561B18);
  v6 = sub_1B89129E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  os_unfair_lock_unlock(v5);

  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 96) == 0);
}

uint64_t sub_1B8885BB0(const void *a1, void *a2, double a3)
{
  _QWORD *v3;
  id v6;
  uint64_t v7;

  v3[2] = a2;
  v3[3] = _Block_copy(a1);
  v6 = a2;
  v7 = swift_task_alloc();
  v3[4] = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1B8885C38;
  *(_QWORD *)(v7 + 24) = v6;
  *(double *)(v7 + 16) = a3;
  return swift_task_switch();
}

uint64_t sub_1B8885C38(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

Swift::Bool __swiftcall StocksKitCurrencyCacheImpl.refreshSynchronously(timeout:)(Swift::Double timeout)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  dispatch_semaphore_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B48);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B60D0);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 20) = 0;
  *(_BYTE *)(v6 + 16) = 0;
  v7 = dispatch_semaphore_create(0);
  v8 = sub_1B8912D5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(Swift::Double *)(v9 + 32) = timeout;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v6;
  *(_QWORD *)(v9 + 56) = v7;
  v10 = v1;
  swift_retain();
  v11 = v7;
  sub_1B8886514((uint64_t)v5, (uint64_t)&unk_1EF1B60E0, v9);
  swift_release();
  sub_1B8912E04();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 20));
  LOBYTE(v5) = *(_BYTE *)(v6 + 16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 20));

  swift_release();
  return (char)v5;
}

uint64_t sub_1B8885DF0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 40) = a7;
  *(_QWORD *)(v7 + 24) = a5;
  *(double *)(v7 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1B8885E10()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(double *)(v0 + 16);
  v2 = sub_1B89129E4();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 64) = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = swift_task_alloc();
  sub_1B8912984();
  *(_QWORD *)(v0 + 80) = sub_1B8912978();
  if (v1 == 0.0)
  {
    v3 = sub_1B8912954();
    *(_QWORD *)(v0 + 128) = v3;
    v4 = *(_QWORD *)(v3 - 8);
    *(_QWORD *)(v0 + 136) = v4;
    *(_QWORD *)(v0 + 144) = swift_task_alloc();
    (*(void (**)(void))(v4 + 104))();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_1B88861C4;
  }
  else
  {
    sub_1B89130C8();
    v6 = sub_1B8912954();
    *(_QWORD *)(v0 + 88) = v6;
    v7 = *(_QWORD *)(v6 - 8);
    *(_QWORD *)(v0 + 96) = v7;
    *(_QWORD *)(v0 + 104) = swift_task_alloc();
    (*(void (**)(void))(v7 + 104))();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v8;
    *v8 = v0;
    v8[1] = sub_1B8885FCC;
  }
  return sub_1B8912960();
}

uint64_t sub_1B8885FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8886068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD))(v2 + 32))(v1, *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v1;
  v7 = v5 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v5 + 16);
  v8 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  v9 = *(_QWORD *)(v6 + 16);
  sub_1B8879F94(v7, &qword_1ED561B18);
  v10 = sub_1B89129E4();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v7, v9, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  os_unfair_lock_unlock(v8);
  swift_task_dealloc();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 20));
  *(_BYTE *)(v4 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 20));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v13);
  swift_task_dealloc();
  sub_1B8912E10();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B88861C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8886260()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1B8879F94(v5, &qword_1ED561B18);
  v7 = sub_1B89129E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  os_unfair_lock_unlock(v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  *(_BYTE *)(v2 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));

  sub_1B8912E10();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8886360()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1B8879F94(v5, &qword_1ED561B18);
  v7 = sub_1B89129E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  os_unfair_lock_unlock(v6);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  *(_BYTE *)(v2 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));

  sub_1B8912E10();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8886460()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B888649C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1B888A4E4;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_1B8886514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8912D5C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1B8912D50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1B8879F94(a1, &qword_1ED561B48);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B8912D2C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

Swift::Bool __swiftcall StocksKitCurrencyCacheImpl.refreshSynchronously()()
{
  return StocksKitCurrencyCacheImpl.refreshSynchronously(timeout:)(0.0);
}

uint64_t StocksKitCurrencyCacheImpl.needsRefresh.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561AA8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B891281C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B18);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v15 = v14 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v14 + 16);
  v16 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(_QWORD *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v16);
  sub_1B8879FD0(v15, (uint64_t)v13, &qword_1ED561B18);
  os_unfair_lock_unlock(v16);
  v17 = sub_1B89129E4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) == 1)
  {
    sub_1B8879F94((uint64_t)v13, &qword_1ED561B18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  else
  {
    sub_1B89129CC();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
      sub_1B8912810();
      v19 = sub_1B8912804();
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v8, v4);
      v20(v10, v4);
      return v19 & 1;
    }
  }
  sub_1B8879F94((uint64_t)v3, &qword_1ED561AA8);
  v19 = 1;
  return v19 & 1;
}

uint64_t StocksKitCurrencyCacheImpl.lastRefreshDate.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561AA8);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  v3 = sub_1B891281C();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8886A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B18);
  v2 = swift_task_alloc();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v4 = (_QWORD *)MEMORY[0x1E0DEC528];
  v5 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1B8879FD0(v5, v2, &qword_1ED561B18);
  os_unfair_lock_unlock(v6);
  v7 = sub_1B89129E4();
  *(_QWORD *)(v0 + 80) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 88) = v8;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 40);
  if (v9 == 1)
  {
    sub_1B8879F94(v2, &qword_1ED561B18);
    swift_task_dealloc();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13(v12, 1, 1, v10);
  }
  else
  {
    sub_1B89129D8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v7);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13(v12, 0, 1, v10);
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) != 1)
    {
      v29 = *(_QWORD *)(v0 + 72);
      v30 = *(_QWORD *)(v0 + 48);
      v28 = *(_QWORD *)(v0 + 56);
      v31 = *(_QWORD *)(v0 + 40);
      goto LABEL_8;
    }
  }
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(_QWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 24);
  sub_1B8879F94(*(_QWORD *)(v0 + 40), &qword_1ED561AA8);
  v18 = *(uint64_t **)(v17 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_lastRefreshDateLock);
  *(_QWORD *)(v0 + 96) = v18;
  v19 = *v18;
  v20 = *(_QWORD *)(*v4 + *v18 + 16);
  *(_QWORD *)(v0 + 104) = v20;
  v21 = (uint64_t)v18 + v20;
  v22 = *(unsigned int *)(v19 + 48);
  *(_DWORD *)(v0 + 168) = v22;
  v23 = (os_unfair_lock_s *)((char *)v18 + ((v22 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v23);
  sub_1B8879FD0(v21, v16, &qword_1ED561AA8);
  os_unfair_lock_unlock(v23);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    sub_1B8879F94(*(_QWORD *)(v0 + 32), &qword_1ED561AA8);
    *(_QWORD *)(v0 + 112) = swift_task_alloc();
    sub_1B8912984();
    *(_QWORD *)(v0 + 120) = sub_1B8912978();
    v24 = sub_1B8912954();
    *(_QWORD *)(v0 + 128) = v24;
    v25 = *(_QWORD *)(v24 - 8);
    *(_QWORD *)(v0 + 136) = v25;
    *(_QWORD *)(v0 + 144) = swift_task_alloc();
    (*(void (**)(void))(v25 + 104))();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v26;
    *v26 = v0;
    v26[1] = sub_1B8886D94;
    return sub_1B8912960();
  }
  v28 = *(_QWORD *)(v0 + 56);
  v29 = *(_QWORD *)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 48);
  v31 = *(_QWORD *)(v0 + 32);
LABEL_8:
  v32 = *(_QWORD *)(v0 + 16);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
  v33(v29, v31, v30);
  v33(v32, v29, v30);
  v13(v32, 0, 1, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8886D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_release();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B8886E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(v0 + 168) + 3) & 0x1FFFFFFFCLL));
  v6 = v2 + *(_QWORD *)(v0 + 104);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  os_unfair_lock_lock(v5);
  sub_1B8879F94(v6, &qword_1ED561AA8);
  sub_1B89129D8();
  v7 = sub_1B891281C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  os_unfair_lock_unlock(v5);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(v0 + 168) + 3) & 0x1FFFFFFFCLL));
  v11 = v8 + *(_QWORD *)(v0 + 104);
  swift_task_dealloc();
  os_unfair_lock_lock(v10);
  sub_1B8879FD0(v11, v9, &qword_1ED561AA8);
  os_unfair_lock_unlock(v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8886F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  swift_task_dealloc();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 168) + 3) & 0x1FFFFFFFCLL));
  v4 = v1 + *(_QWORD *)(v0 + 104);
  swift_task_dealloc();
  os_unfair_lock_lock(v3);
  sub_1B8879FD0(v4, v2, &qword_1ED561AA8);
  os_unfair_lock_unlock(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t StocksKitCurrencyCacheImpl.currencyData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  unint64_t result;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  char v40;
  char v41;
  void (*v42)(char *, uint64_t);
  double v43;
  id v44;
  id v45;
  unint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  char isUniquelyReferenced_nonNull_native;
  void *v62;
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  char *v85;
  uint64_t *v86;
  _QWORD *v87;

  v86 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B60F8);
  MEMORY[0x1E0C80A78](v86);
  v85 = (char *)&v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6100);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B89129E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B18);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  v14 = v13 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v13 + 16);
  v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_1B8879FD0(v14, (uint64_t)v12, &qword_1ED561B18);
  os_unfair_lock_unlock(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_1B8879F94((uint64_t)v12, &qword_1ED561B18);
    return sub_1B8884CFC(MEMORY[0x1E0DEE9D8]);
  }
  v70 = v3;
  v68 = v7;
  v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v69 = v6;
  v17(v9, v12, v6);
  v84 = sub_1B8884CFC(MEMORY[0x1E0DEE9D8]);
  v18 = sub_1B89129A8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v81 = v20;
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v9;
  sub_1B89129B4();
  sub_1B8912990();
  v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  v82 = v18;
  v80 = v22;
  v22(v21, v18);
  swift_getOpaqueTypeConformance2();
  sub_1B8912C18();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6108);
  v67 = (uint64_t)&v67;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1B8912E34();
  v26 = sub_1B89129FC();
  v27 = *(_QWORD **)(v26 - 8);
  v78 = (uint64_t (*)(char *, uint64_t, uint64_t))v27[6];
  v28 = v78(v25, 1, v26);
  if ((_DWORD)v28 == 1)
  {
    v29 = v83;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v70 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v29, v69);
    return v84;
  }
  v76 = v27[8];
  v77 = v27;
  v30 = (void (*)(char *, char *, uint64_t))v27[4];
  v74 = v2;
  v75 = v30;
  v72 = v25;
  v73 = v5;
  v71 = v26;
  while (1)
  {
    v86 = &v67;
    v32 = v76;
    MEMORY[0x1E0C80A78](v28);
    v75((char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v26);
    v33 = sub_1B89129F0();
    v35 = v34;
    MEMORY[0x1E0C80A78](v33);
    v37 = (char *)&v67 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    v38 = sub_1B89129B4();
    MEMORY[0x1E0C80A78](v38);
    sub_1B8912A08();
    v85 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    v39 = COERCE_DOUBLE(sub_1B891299C());
    v41 = v40;
    v42 = (void (*)(char *, uint64_t))v77[1];
    v42((char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
    v80(v37, v82);
    v43 = (v41 & 1) != 0 ? 0.0 : v39;
    v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v43);
    if (v44)
      break;
    v57 = v84;
    swift_bridgeObjectRetain();
    v58 = sub_1B8873F28(v33, v35);
    v60 = v59;
    swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v87 = (_QWORD *)v57;
      v5 = v73;
      v2 = v74;
      v26 = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B8888CDC();
        v57 = (uint64_t)v87;
      }
      swift_bridgeObjectRelease();
      v62 = *(void **)(*(_QWORD *)(v57 + 56) + 8 * v58);
      v84 = v57;
      sub_1B8888B08(v58, v57);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v83;
      v25 = v72;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    v5 = v73;
    v2 = v74;
    v29 = v83;
LABEL_9:
    v26 = v71;
    v25 = v72;
LABEL_10:
    v42(v85, v26);
    sub_1B8912E34();
    v28 = v78(v25, 1, v26);
    if ((_DWORD)v28 == 1)
      goto LABEL_5;
  }
  v45 = v44;
  v46 = v84;
  v47 = swift_isUniquelyReferenced_nonNull_native();
  v87 = (_QWORD *)v46;
  v49 = sub_1B8873F28(v33, v35);
  v50 = *(_QWORD *)(v46 + 16);
  v51 = (v48 & 1) == 0;
  v52 = v50 + v51;
  if (!__OFADD__(v50, v51))
  {
    v53 = v48;
    if (*(_QWORD *)(v46 + 24) < v52)
    {
      sub_1B88887FC(v52, v47);
      v54 = sub_1B8873F28(v33, v35);
      v29 = v83;
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_33;
      v49 = v54;
      v56 = v87;
      if ((v53 & 1) == 0)
        goto LABEL_26;
LABEL_7:
      v31 = v56[7];

      *(_QWORD *)(v31 + 8 * v49) = v45;
LABEL_8:
      v84 = (unint64_t)v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v73;
      v2 = v74;
      goto LABEL_9;
    }
    v29 = v83;
    if ((v47 & 1) != 0)
    {
      v56 = v87;
      if ((v48 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      sub_1B8888CDC();
      v56 = v87;
      if ((v53 & 1) != 0)
        goto LABEL_7;
    }
LABEL_26:
    v56[(v49 >> 6) + 8] |= 1 << v49;
    v63 = (uint64_t *)(v56[6] + 16 * v49);
    *v63 = v33;
    v63[1] = v35;
    *(_QWORD *)(v56[7] + 8 * v49) = v45;
    v64 = v56[2];
    v65 = __OFADD__(v64, 1);
    v66 = v64 + 1;
    if (v65)
      goto LABEL_32;
    v56[2] = v66;
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t StocksKitCurrencyCacheImpl.providerData.getter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8887810()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_1B89129E4();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B18);
  v0[7] = swift_task_alloc();
  v0[8] = sub_1B8912984();
  v0[9] = sub_1B8912978();
  v2 = sub_1B8912954();
  v0[10] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v0[11] = v3;
  v0[12] = swift_task_alloc();
  (*(void (**)(void))(v3 + 104))();
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_1B888793C;
  return sub_1B8912960();
}

uint64_t sub_1B888793C()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[11];
  v3 = v2[12];
  v5 = v2[10];
  if (v0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1B88879F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  v5 = sub_1B8912924();
  *(_QWORD *)(v0 + 112) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 120) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v7;
  v8 = sub_1B8912948();
  *(_QWORD *)(v0 + 136) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v9 + 64);
  v10 = swift_task_alloc();
  sub_1B89129C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B10);
  v11 = swift_task_alloc();
  sub_1B8912930();
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 152) = v12;
  v12(v10, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_1B8879F94(v11, &qword_1ED561B10);
    swift_task_dealloc();
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 24);
    v28 = *(_QWORD *)(v0 + 40);
    v29 = *(_QWORD *)(v0 + 32);
    v17 = *(uint64_t **)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = swift_task_alloc();
    sub_1B89129C0();
    v19 = sub_1B891293C();
    v27 = v20;
    v13(v18, v14);
    v21 = swift_task_alloc();
    sub_1B89129C0();
    sub_1B89128E8();
    v13(v21, v14);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v15, v29);
    *v17 = v19;
    v17[1] = v27;
    v22 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
    sub_1B8884F90(v16, (uint64_t)v17 + *(int *)(v22 + 20));
    v23 = (char *)v17 + *(int *)(v22 + 24);
    *(_OWORD *)v23 = xmmword_1B89165A0;
    *((_QWORD *)v23 + 3) = 0;
    *((_QWORD *)v23 + 4) = 0;
    *((_QWORD *)v23 + 2) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v11, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    v25 = sub_1B8912918();
    *(_QWORD *)(v0 + 160) = v25;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v25 - 8);
    *(_QWORD *)(v0 + 176) = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B08);
    *(_QWORD *)(v0 + 184) = swift_task_alloc();
    *(_QWORD *)(v0 + 192) = sub_1B8912978();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v26;
    *v26 = v0;
    v26[1] = sub_1B8887D48;
    return sub_1B891296C();
  }
}

uint64_t sub_1B8887D48()
{
  void *v0;

  swift_task_dealloc();
  swift_release();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_1B8887DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(v1, 1, 1, *(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1B8879F94(v1, &qword_1ED561B08);
  swift_task_dealloc();
  v5 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v18 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 32);
  v9 = *(uint64_t **)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  v10 = swift_task_alloc();
  sub_1B89129C0();
  v11 = sub_1B891293C();
  v17 = v12;
  v5(v10, v6);
  v13 = swift_task_alloc();
  sub_1B89129C0();
  sub_1B89128E8();
  v5(v13, v6);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v7, v19);
  *v9 = v11;
  v9[1] = v17;
  v14 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  sub_1B8884F90(v8, (uint64_t)v9 + *(int *)(v14 + 20));
  v15 = (char *)v9 + *(int *)(v14 + 24);
  *(_OWORD *)v15 = xmmword_1B89165A0;
  *((_QWORD *)v15 + 3) = 0;
  *((_QWORD *)v15 + 4) = 0;
  *((_QWORD *)v15 + 2) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8887F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v4);
  swift_task_dealloc();
  v8 = sub_1B8912900();
  v31 = v9;
  v32 = v8;
  v10 = sub_1B89128F4();
  v29 = v11;
  v30 = v10;
  sub_1B891290C();
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  v15 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 24);
  v27 = *(_QWORD *)(v0 + 40);
  v28 = *(_QWORD *)(v0 + 32);
  v18 = *(uint64_t **)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  v19 = swift_task_alloc();
  sub_1B89129C0();
  v20 = sub_1B891293C();
  v26 = v21;
  v14(v19, v15);
  v22 = swift_task_alloc();
  sub_1B89129C0();
  sub_1B89128E8();
  v14(v22, v15);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v28);
  *v18 = v20;
  v18[1] = v26;
  v23 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  sub_1B8884F90(v17, (uint64_t)v18 + *(int *)(v23 + 20));
  v24 = (uint64_t *)((char *)v18 + *(int *)(v23 + 24));
  *v24 = v32;
  v24[1] = v31;
  v24[2] = v30;
  v24[3] = v29;
  v24[4] = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 0, 1, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8888164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  sub_1B8879F94(v1, &qword_1ED561B18);
  swift_task_dealloc();
  swift_task_dealloc();
  v5 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id StocksKitCurrencyCacheImpl.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561AA8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B89129E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BF8);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v11 = (_QWORD *)MEMORY[0x1E0DEC528];
  sub_1B8879FD0((uint64_t)v8, v10 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v10 + 16), &qword_1ED561B18);
  v12 = v0;
  sub_1B8879F94((uint64_t)v8, &qword_1ED561B18);
  *(_QWORD *)&v0[v5] = v10;
  v13 = OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_lastRefreshDateLock;
  v14 = sub_1B891281C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BF0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + ((*(unsigned int *)(*(_QWORD *)v15 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1B8879FD0((uint64_t)v4, v15 + *(_QWORD *)(*v11 + *(_QWORD *)v15 + 16), &qword_1ED561AA8);
  sub_1B8879F94((uint64_t)v4, &qword_1ED561AA8);
  *(_QWORD *)&v12[v13] = v15;

  v17.receiver = v12;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t sub_1B888845C()
{
  swift_release();
  return swift_release();
}

id StocksKitCurrencyCacheImpl.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B88884F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1B888A4E4;
  return v6();
}

uint64_t sub_1B8888548(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1B888A4E4;
  return v7();
}

uint64_t sub_1B888859C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8912D5C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1B8912D50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1B8879F94(a1, &qword_1ED561B48);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B8912D2C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1B88886E8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B888A4E8;
  return v6(a1);
}

uint64_t sub_1B888874C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B88887B0;
  return v6(a1);
}

uint64_t sub_1B88887B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B88887FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B61D8);
  v38 = a2;
  v6 = sub_1B8912FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1B89130A4();
    sub_1B8912B10();
    result = sub_1B89130BC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1B8888B08(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8912E88();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1B89130A4();
        swift_bridgeObjectRetain();
        sub_1B8912B10();
        v9 = sub_1B89130BC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1B8888CDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B61D8);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t method lookup function for StocksKitCurrencyCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refresh()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B888A4E0;
  return v5();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refresh(timeout:)(double a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(double);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58);
  v7 = (uint64_t (*)(double))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8888F78;
  return v7(a1);
}

uint64_t sub_1B8888F78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refreshSynchronously(timeout:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refreshSynchronously()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.needsRefresh.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.lastRefreshDate.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B888A4E4;
  return v7(a1);
}

uint64_t dispatch thunk of StocksKitCurrencyCache.currencyData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.providerData.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8889128;
  return v7(a1);
}

uint64_t sub_1B8889128()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksKitCurrencyCache.ProviderData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B89127F8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (char *)v4 + v16;
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    if (v19 >> 60 == 15)
    {
      v20 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v20;
    }
    else
    {
      v21 = *v18;
      sub_1B8884F38(*v18, v19);
      *(_QWORD *)v17 = v21;
      *((_QWORD *)v17 + 1) = v19;
      v22 = v18 + 2;
      v23 = v18[3];
      if (v23 >> 60 == 15)
      {
        *((_OWORD *)v17 + 1) = *(_OWORD *)v22;
      }
      else
      {
        v24 = *v22;
        sub_1B8884F38(*v22, v18[3]);
        *((_QWORD *)v17 + 2) = v24;
        *((_QWORD *)v17 + 3) = v23;
      }
    }
    *((_QWORD *)v17 + 4) = v18[4];
  }
  return v4;
}

uint64_t destroy for StocksKitCurrencyCache.ProviderData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B89127F8();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    result = sub_1B88893B4(*v8, v9);
    v10 = v8[3];
    if (v10 >> 60 != 15)
      return sub_1B88893B4(v8[2], v10);
  }
  return result;
}

uint64_t sub_1B88893B4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for StocksKitCurrencyCache.ProviderData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B89127F8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a2 + v14 + 8);
  if (v17 >> 60 == 15)
  {
    v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
  }
  else
  {
    v19 = *v16;
    sub_1B8884F38(*v16, v17);
    *(_QWORD *)v15 = v19;
    *((_QWORD *)v15 + 1) = v17;
    v20 = v16 + 2;
    v21 = v16[3];
    if (v21 >> 60 == 15)
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v20;
    }
    else
    {
      v22 = *v20;
      sub_1B8884F38(*v20, v16[3]);
      *((_QWORD *)v15 + 2) = v22;
      *((_QWORD *)v15 + 3) = v21;
    }
  }
  *((_QWORD *)v15 + 4) = v16[4];
  return a1;
}

_QWORD *assignWithCopy for StocksKitCurrencyCache.ProviderData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B89127F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *(_QWORD *)((char *)a2 + v15 + 8);
  if (*(_QWORD *)((char *)a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 == 15)
    {
      sub_1B8889814(v16);
      v21 = v17[4];
      v22 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v22;
      v16[4] = v21;
      return a1;
    }
    v26 = *v17;
    sub_1B8884F38(*v17, v18);
    v27 = *v16;
    v28 = v16[1];
    *v16 = v26;
    v16[1] = v18;
    sub_1B88893B4(v27, v28);
    v29 = v17 + 2;
    v30 = v17[3];
    if ((unint64_t)v16[3] >> 60 == 15)
    {
      if (v30 >> 60 != 15)
      {
        v31 = *v29;
        sub_1B8884F38(*v29, v17[3]);
        v16[2] = v31;
        v16[3] = v30;
LABEL_24:
        v16[4] = v17[4];
        return a1;
      }
    }
    else
    {
      if (v30 >> 60 != 15)
      {
        v33 = *v29;
        sub_1B8884F38(*v29, v17[3]);
        v34 = v16[2];
        v35 = v16[3];
        v16[2] = v33;
        v16[3] = v30;
        sub_1B88893B4(v34, v35);
        goto LABEL_24;
      }
      sub_1B88897E0((uint64_t)(v16 + 2));
    }
    *((_OWORD *)v16 + 1) = *(_OWORD *)v29;
    goto LABEL_24;
  }
  if (v18 >> 60 == 15)
  {
    v19 = *(_OWORD *)v17;
    v20 = *((_OWORD *)v17 + 1);
    v16[4] = v17[4];
    *(_OWORD *)v16 = v19;
    *((_OWORD *)v16 + 1) = v20;
  }
  else
  {
    v23 = *v17;
    sub_1B8884F38(*v17, v18);
    *v16 = v23;
    v16[1] = v18;
    v24 = v17 + 2;
    v25 = v17[3];
    if (v25 >> 60 == 15)
    {
      *((_OWORD *)v16 + 1) = *(_OWORD *)v24;
    }
    else
    {
      v32 = *v24;
      sub_1B8884F38(*v24, v17[3]);
      v16[2] = v32;
      v16[3] = v25;
    }
    v16[4] = v17[4];
  }
  return a1;
}

uint64_t sub_1B88897E0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t *sub_1B8889814(uint64_t *a1)
{
  destroy for StocksKitCurrencyCache.ProviderLogo(a1);
  return a1;
}

_OWORD *initializeWithTake for StocksKitCurrencyCache.ProviderData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B89127F8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  return a1;
}

_QWORD *assignWithTake for StocksKitCurrencyCache.ProviderData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B89127F8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = *(_QWORD *)((char *)a1 + v16 + 8);
  if (v19 >> 60 != 15)
  {
    v20 = v18[1];
    if (v20 >> 60 == 15)
    {
      sub_1B8889814(v17);
      goto LABEL_10;
    }
    v22 = *v17;
    *v17 = *v18;
    v17[1] = v20;
    sub_1B88893B4(v22, v19);
    v23 = v18 + 2;
    v24 = v17[3];
    if (v24 >> 60 != 15)
    {
      v25 = v18[3];
      if (v25 >> 60 != 15)
      {
        v26 = v17[2];
        v17[2] = *v23;
        v17[3] = v25;
        sub_1B88893B4(v26, v24);
        goto LABEL_17;
      }
      sub_1B88897E0((uint64_t)(v17 + 2));
    }
    *((_OWORD *)v17 + 1) = *(_OWORD *)v23;
LABEL_17:
    v17[4] = v18[4];
    return a1;
  }
LABEL_10:
  v21 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v21;
  v17[4] = v18[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksKitCurrencyCache.ProviderData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8889AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StocksKitCurrencyCache.ProviderData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8889B84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561A98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1B8889BFC()
{
  unint64_t v0;

  sub_1B8889C78();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B8889C78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED561AA0)
  {
    sub_1B89127F8();
    v0 = sub_1B8912E28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED561AA0);
  }
}

uint64_t destroy for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;

  result = sub_1B88893B4(*a1, a1[1]);
  v3 = a1[3];
  if (v3 >> 60 != 15)
    return sub_1B88893B4(a1[2], v3);
  return result;
}

uint64_t initializeWithCopy for StocksKitCurrencyCache.ProviderLogo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_1B8884F38(*a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2 + 2;
  v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1B8884F38(*v6, a2[3]);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v7;
  }
  *(_QWORD *)(a1 + 32) = a2[4];
  return a1;
}

uint64_t *assignWithCopy for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  sub_1B8884F38(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1B88893B4(v6, v7);
  v8 = a2 + 2;
  v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      v11 = *v8;
      sub_1B8884F38(*v8, a2[3]);
      v12 = a1[2];
      v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_1B88893B4(v12, v13);
      goto LABEL_8;
    }
    sub_1B88897E0((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  v10 = *v8;
  sub_1B8884F38(*v8, a2[3]);
  a1[2] = v10;
  a1[3] = v9;
LABEL_8:
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1B88893B4(v4, v5);
  v6 = (uint64_t *)(a2 + 16);
  v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_1B88893B4(v9, v7);
      goto LABEL_6;
    }
    sub_1B88897E0((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
LABEL_6:
  a1[4] = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksKitCurrencyCache.ProviderLogo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StocksKitCurrencyCache.ProviderLogo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksKitCurrencyCache.ProviderLogo()
{
  return &type metadata for StocksKitCurrencyCache.ProviderLogo;
}

uint64_t type metadata accessor for StocksKitCurrencyCacheImpl()
{
  return objc_opt_self();
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1ED561B90)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1ED561B90);
  }
}

unint64_t sub_1B888A040()
{
  unint64_t result;

  result = qword_1ED561BD8;
  if (!qword_1ED561BD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED561BD8);
  }
  return result;
}

uint64_t sub_1B888A080()
{
  double *v0;
  uint64_t v1;
  double v2;
  const void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)*((_QWORD *)v0 + 3);
  v4 = (void *)*((_QWORD *)v0 + 4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1B888A4E4;
  return ((uint64_t (*)(const void *, void *, double))((char *)&dword_1EF1B6138 + dword_1EF1B6138))(v3, v4, v2);
}

uint64_t sub_1B888A0F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1B888A4E4;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF1B6148 + dword_1EF1B6148))(v2, v3, v4);
}

uint64_t sub_1B888A16C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1B888A4E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF1B6158 + dword_1EF1B6158))(a1, v4, v5, v6);
}

uint64_t sub_1B888A1F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B888A214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B888A4E4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF1B6168 + dword_1EF1B6168))(a1, v4);
}

uint64_t sub_1B888A288()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1B888A4E4;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EF1B6178 + dword_1EF1B6178))(v2, v3);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_1B888A324()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B888A4E4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EF1B6198 + dword_1EF1B6198))(v2);
}

uint64_t sub_1B888A398(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t objectdestroy_32Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1B888A3D0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B888A4E4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EF1B61B8 + dword_1EF1B61B8))(v2);
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B888A468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B8889128;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF1B61E0 + dword_1EF1B61E0))(a1, v4);
}

uint64_t sub_1B888A4F4(uint64_t a1)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *);
  uint64_t result;
  _QWORD *v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *);
  _BYTE v21[32];

  v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  if (!v2())
    return 0;
  v3 = CalculateExpression.format.getter();
  v4 = swift_release();
  if (v3 != 2)
    return 0;
  if (!((uint64_t (*)(uint64_t))v2)(v4))
    return 1;
  v5 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1BCCB4394](0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v6 = CalculateExpression.rich.getter();
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 392))();
  swift_release();
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  v8 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  v9 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)a1 + 408);
  result = v9(v21);
  v12 = (void (*)(_BYTE *, _QWORD))result;
  if (!v8)
  {
LABEL_17:
    v12(v21, 0);
    v14 = CalculateExpression.rich.getter();
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 392))(v14);
    swift_release();
    v16 = (void (*)(_BYTE *, _QWORD))v9(v21);
    sub_1B885E32C(v15);
    v16(v21, 0);
    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
    v17 = 1;
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 256))(1);
    swift_release();
    return v17;
  }
  if (v8 < 0)
  {
    __break(1u);
LABEL_27:
    v20 = v9;
    swift_bridgeObjectRetain();
    v19 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v13 = v19;
    v9 = v20;
    if (v13 < 0)
      goto LABEL_16;
    goto LABEL_15;
  }
  if (*v11 >> 62)
    goto LABEL_27;
  v13 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v13 < 0)
  {
LABEL_16:
    sub_1B885E87C(0, v8);
    goto LABEL_17;
  }
LABEL_15:
  if (v13 >= v8)
    goto LABEL_16;
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RollOutOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.RollOutOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B888A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(void);
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t (*v21)(__int128 *);
  void (*v22)(__int128 *, _QWORD);
  uint64_t **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t *v31;
  unint64_t *v32;
  unint64_t v33;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t *v49;
  unint64_t *v50;
  unint64_t v51;
  int v52;
  uint64_t (*v53)(uint64_t);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void (*v69)(char *__return_ptr, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void (*v79)(__int128 *, _QWORD);
  void (*v80)(__int128 *, _QWORD);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B888B474, &v91);
  v5 = v91;
  if (!(_QWORD)v91)
    return 0;
  v7 = *((_QWORD *)&v91 + 1);
  v6 = v92;
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v91 + 416);
  sub_1B885DBF8(v91);
  swift_retain();
  v84 = v8;
  v87 = v8(v7);
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v91) = 16;
  v9 = sub_1B885FD04();
  v10 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v91, v9 & 1);
  v83 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_91;
  if (v7 < 0)
  {
LABEL_18:
    sub_1B885DC28(v5);
    swift_release();
    swift_release();
    swift_release();
    sub_1B885DC28(v5);
    return 0;
  }
  v85 = v10;
  v11 = 0;
  v2 = *(uint64_t (**)(void))(*(_QWORD *)v5 + 392);
  v3 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v6 = 16;
  v86 = v7;
  v12 = v7;
  do
  {
    v16 = v2();
    v17 = v16;
    if ((v16 & 0xC000000000000001) != 0)
    {
      v18 = MEMORY[0x1BCCB4394](v12, v16);
    }
    else
    {
      if ((unint64_t)v12 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_30;
      }
      v18 = *(_QWORD *)(v16 + 8 * v12 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v19 = *(_BYTE *)(v18 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v91) = v19;
    LOBYTE(v88) = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88))
    {
      v13 = swift_release();
      v14 = __OFADD__(v11++, 1);
      if (v14)
      {
        __break(1u);
        goto LABEL_47;
      }
    }
    else
    {
      LOBYTE(v91) = v19;
      LOBYTE(v88) = 15;
      v7 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88);
      v13 = swift_release();
      if ((v7 & 1) != 0)
      {
        v14 = __OFSUB__(v11--, 1);
        if (v14)
        {
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          if (((*(uint64_t (**)(void))(*(_QWORD *)v7 + 232))() & 1) == 0)
            goto LABEL_99;
          v67 = v2();
          if (v67 >> 62)
            goto LABEL_140;
          v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_95;
        }
      }
    }
    v15 = v12-- <= 0;
  }
  while (!v15);
  v17 = v86;
  if ((v11 & 0x8000000000000000) == 0)
    goto LABEL_18;
  if (!v87)
  {
    v21 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
    swift_retain();
    v22 = (void (*)(__int128 *, _QWORD))v21(&v91);
    v3 = *v23;
    if (!((unint64_t)*v23 >> 62)
      || (swift_bridgeObjectRetain(),
          v12 = sub_1B8912FD8(),
          swift_bridgeObjectRelease(),
          (v12 & 0x8000000000000000) == 0))
    {
      sub_1B88604E0(0, 0, v85);
      v22(&v91, 0);
      sub_1B885DC28(v5);
      swift_release();
LABEL_28:
      swift_release();
      sub_1B885DC28(v5);
      return 1;
    }
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(v13) & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 576))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 568))() & 1) != 0)
  {
    goto LABEL_18;
  }
LABEL_30:
  v24 = v84(v17);
  v12 = v17;
  v82 = v17;
  if (v24)
  {
    v25 = v24;
    v12 = v86;
    v81 = ~v86;
    v82 = v86;
    while (1)
    {
      v26 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
      v27 = *(_BYTE *)(v25 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v91) = v27;
      if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
        break;
      LOBYTE(v91) = v27;
      if ((CalculateExpression.TokenType.isPostfixOperator.getter() & 1) != 0)
      {
        LOBYTE(v91) = v27;
        LOBYTE(v88) = 9;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88))
          break;
        if (!(*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))())
          break;
        v28 = v25;
        v29 = CalculateExpression.engine.getter();
        swift_release();
        v30 = v29 == 1;
        v25 = v28;
        if (!v30)
          break;
      }
      LOBYTE(v91) = *(_BYTE *)(v25 + v26);
      LOBYTE(v88) = 7;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) != 0)
        break;
      v80 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v91);
      v32 = v31;
      v33 = *v31;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v32 = v33;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v33 & 0x8000000000000000) != 0
        || (v33 & 0x4000000000000000) != 0)
      {
        sub_1B885DD38(v33);
      }
      v35 = v33 & 0xFFFFFFFFFFFFFF8;
      v36 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = v82;
      if (v82 >= v36)
        goto LABEL_127;
      v38 = v36 - 1;
      memmove((void *)(v35 + 8 * v82 + 32), (const void *)(v35 + 8 * v82 + 40), 8 * (v81 + v36));
      *(_QWORD *)(v35 + 16) = v38;
      sub_1B8912CA8();
      swift_release();
      v80(&v91, 0);
      swift_release();
      --v82;
      v25 = v84(v37 - 1);
      v12 = ++v81;
      if (!v25)
        goto LABEL_48;
    }
LABEL_47:
    swift_release();
  }
LABEL_48:
  v39 = v84(v82);
  if (v39)
  {
    LOBYTE(v91) = *(_BYTE *)(v39 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v88) = 15;
    v40 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88);
    swift_release();
    if (v40)
      goto LABEL_18;
  }
  v41 = v82 + 1;
  if (__OFADD__(v82, 1))
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v42 = v84(v82 + 1);
  if (!v42)
    goto LABEL_62;
  v43 = v42;
  v44 = *(_BYTE *)(v42 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v91) = v44;
  LOBYTE(v88) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88)
    || ((*(uint64_t (**)(void))(*(_QWORD *)v43 + 232))() & 1) == 0)
  {
    swift_release();
LABEL_62:
    v53 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 408);
    swift_retain();
    v84 = v53;
    v12 = v53((uint64_t)&v91);
    if (!(*v54 >> 62))
    {
      v55 = *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_64;
    }
LABEL_132:
    swift_bridgeObjectRetain();
    v55 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
LABEL_64:
    if (v55 < v83)
    {
      __break(1u);
    }
    else if ((v83 & 0x8000000000000000) == 0)
    {
      sub_1B88604E0(v83, v83, v85);
      v56 = ((uint64_t (*)(__int128 *, _QWORD))v12)(&v91, 0);
      v57 = ((uint64_t (*)(uint64_t))v2)(v56);
      if (!(v57 >> 62))
      {
        v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_68;
      }
LABEL_135:
      v58 = sub_1B8912FD8();
LABEL_68:
      v59 = swift_bridgeObjectRelease();
      if (v83 < v58)
      {
        v12 = 0;
        v6 = v86;
        do
        {
          v60 = v6 + 1;
          v61 = ((uint64_t (*)(uint64_t))v2)(v59);
          if ((v61 & 0xC000000000000001) != 0)
          {
            v7 = MEMORY[0x1BCCB4394](v6 + 1, v61);
          }
          else
          {
            if ((v60 & 0x8000000000000000) != 0)
              goto LABEL_123;
            if (v60 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_124;
            v7 = *(_QWORD *)(v61 + 8 * v6 + 40);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          v62 = *(_BYTE *)(v7 + *v3);
          LOBYTE(v91) = v62;
          LOBYTE(v88) = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88))
          {
            v63 = swift_release();
            v14 = __OFADD__(v12++, 1);
            if (v14)
              goto LABEL_128;
          }
          else
          {
            LOBYTE(v91) = v62;
            LOBYTE(v88) = 16;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88))
            {
              if (!v12)
                goto LABEL_92;
              v63 = swift_release();
              v14 = __OFSUB__(v12--, 1);
              if (v14)
                goto LABEL_130;
            }
            else
            {
              v63 = swift_release();
            }
          }
          v64 = v6 + 2;
          if (__OFADD__(v60, 1))
            goto LABEL_125;
          v65 = ((uint64_t (*)(uint64_t))v2)(v63);
          if (v65 >> 62)
            v66 = sub_1B8912FD8();
          else
            v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
          v59 = swift_bridgeObjectRelease();
          ++v6;
        }
        while (v64 < v66);
      }
      goto LABEL_100;
    }
    __break(1u);
    goto LABEL_135;
  }
  v45 = (*(uint64_t (**)(void))(*(_QWORD *)v43 + 208))();
  v47 = v46;
  LOBYTE(v91) = v44;
  v48 = sub_1B885FD04() & 1;
  v3 = (uint64_t *)CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v45, v47, (unsigned __int8 *)&v91, v48);
  v6 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v91);
  v50 = v49;
  v51 = *v49;
  v52 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v50 = v51;
  if (!v52 || (v51 & 0x8000000000000000) != 0 || (v51 & 0x4000000000000000) != 0)
    sub_1B885DD38(v51);
  if ((v41 & 0x8000000000000000) != 0)
    goto LABEL_138;
  if (v41 < *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 8 * v41 + 0x20) = v3;
    swift_release();
    sub_1B8912CA8();
    ((void (*)(__int128 *, _QWORD))v6)(&v91, 0);
    sub_1B885DC28(v5);
    swift_release();
LABEL_118:
    swift_release();
    swift_release();
    goto LABEL_28;
  }
  while (1)
  {
    __break(1u);
LABEL_140:
    v68 = sub_1B8912FD8();
LABEL_95:
    result = swift_bridgeObjectRelease();
    if (__OFSUB__(v68, 1))
      break;
    if (v68 - 2 != v6)
      goto LABEL_119;
    v69 = *(void (**)(char *__return_ptr, uint64_t))(*(_QWORD *)v5 + 272);
    v69(&v90, result);
    v89 = 1;
    sub_1B8884450();
    sub_1B8912C78();
    v70 = sub_1B8912C78();
    if ((_QWORD)v91 != v88)
    {
      v69(&v90, v70);
      v89 = 2;
      sub_1B8912C78();
      sub_1B8912C78();
      if ((_QWORD)v91 != v88)
      {
LABEL_119:
        v79 = (void (*)(__int128 *, _QWORD))v84((uint64_t)&v91);
        sub_1B885DC54(v6 + 1);
        swift_release();
        v79(&v91, 0);
        sub_1B885DC28(v5);
        swift_release();
        goto LABEL_118;
      }
    }
LABEL_99:
    v59 = swift_release();
LABEL_100:
    v12 = v83 - 1;
    if (v83 - 1 >= 0)
    {
      v71 = 0;
      do
      {
        v72 = ((uint64_t (*)(uint64_t))v2)(v59);
        if ((v72 & 0xC000000000000001) != 0)
        {
          v73 = MEMORY[0x1BCCB4394](v12, v72);
        }
        else
        {
          if ((unint64_t)v12 >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_122;
          v73 = *(_QWORD *)(v72 + 8 * v12 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v74 = *(_BYTE *)(v73 + *v3);
        LOBYTE(v91) = v74;
        LOBYTE(v88) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88))
        {
          v59 = swift_release();
          v14 = __OFADD__(v71++, 1);
          if (v14)
            goto LABEL_126;
        }
        else
        {
          LOBYTE(v91) = v74;
          LOBYTE(v88) = 15;
          v75 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v91, (unsigned __int8 *)&v88);
          v59 = swift_release();
          if (v75)
          {
            if (!v71)
              goto LABEL_115;
            v14 = __OFSUB__(v71--, 1);
            if (v14)
              goto LABEL_129;
          }
        }
        v15 = v12-- <= 0;
      }
      while (!v15);
    }
    v12 = -1;
LABEL_115:
    LOBYTE(v91) = 15;
    v76 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v91, 1);
    v77 = v12 + 1;
    v6 = v84((uint64_t)&v91);
    if (*v78 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = (uint64_t *)sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if ((uint64_t)v3 >= v77)
      {
LABEL_117:
        sub_1B88604E0(v77, v77, v76);
        ((void (*)(__int128 *, _QWORD))v6)(&v91, 0);
        sub_1B885DC28(v5);
        goto LABEL_118;
      }
    }
    else
    {
      v3 = *(uint64_t **)((*v78 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((uint64_t)v3 >= v77)
        goto LABEL_117;
    }
    __break(1u);
LABEL_138:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B888B474(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(_QWORD *)v1 + 544))() & 1;
  }
}

uint64_t CalculateExpression.CloseParenthesisOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.CloseParenthesisOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B888B508@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1B888B538(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B888B594()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B888B5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B888B62C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1B888B65C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B888B6B8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B888B700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void CalculateExpression.Token.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t sub_1B888B75C()
{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_1B888B79C()
{
  swift_beginAccess();
  swift_weakAssign();
  return swift_release();
}

void (*sub_1B888B7EC(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1B888B854;
}

void sub_1B888B854(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1B888B8C0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B888B8F4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B888B938())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B888B974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
  if (v1)
  {
    v2 = v1;
    if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 224))() & 1) == 0)
    {
      if (!(*(uint64_t (**)(void))(*(_QWORD *)v2 + 176))() || (v3 = sub_1B889AF58(), swift_release(), (v3 & 1) != 0))
        (*(void (**)(void))(*(_QWORD *)v2 + 248))();
    }
    swift_release();
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1B888BA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12;
  char v13;

  v12 = swift_allocObject();
  v13 = *a5;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = v13;
  *(_QWORD *)(v12 + 64) = a6;
  return v12;
}

uint64_t sub_1B888BACC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::Bool v17;
  Swift::String v18;
  Swift::Bool_optional v19;
  Swift::String v20;
  NSNumberFormatter_optional v22;
  Swift::Int_optional v23;

  v1 = v0;
  v3 = v0[11];
  v2 = v0[12];
  v4 = *(uint64_t (**)(void))(*v0 + 136);
  v5 = swift_bridgeObjectRetain();
  v6 = ((uint64_t (*)(uint64_t))v4)(v5);
  if (!v2)
  {
    v10 = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v3 == v6 && v2 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    if (!v1[10])
      goto LABEL_8;
LABEL_13:
    v11 = v1[9];
    goto LABEL_14;
  }
  v9 = sub_1B8913050();
  swift_bridgeObjectRelease();
  v10 = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_10:
    v0[11] = ((uint64_t (*)(uint64_t))v4)(v10);
    v0[12] = v12;
    v13 = swift_bridgeObjectRelease();
    v14 = ((uint64_t (*)(uint64_t))v4)(v13);
    v16 = v15;
    v17 = sub_1B885FD04() & 1;
    v18._countAndFlagsBits = v14;
    v18._object = v16;
    v22.value.super.super.isa = 0;
    v22.is_nil = 0;
    v23.value = 1;
    v23.is_nil = 2;
    v20 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v18, v17, v22, v23, v19);
    swift_bridgeObjectRelease();
    *(Swift::String *)(v1 + 9) = v20;
    goto LABEL_12;
  }
  if (v0[10])
    goto LABEL_13;
LABEL_8:
  v11 = v4();
LABEL_14:
  swift_bridgeObjectRetain();
  return v11;
}

uint64_t CalculateExpression.Token.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.Token.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B888BCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
  if ((result & 1) == 0)
  {
    result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
    if (result)
    {
      v3 = CalculateExpression.plain.getter();
      swift_release();
      if (v3 == v1)
      {
        type metadata accessor for CalculateExpression.RichExpression();
        v4 = swift_retain();
        sub_1B88660C8(v4);
        sub_1B88A6C34();
        sub_1B88A5BBC();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B888BD44(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 264);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1B888BD74()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B888BDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

uint64_t (*sub_1B888BDFC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B888BE3C;
}

uint64_t sub_1B888BE3C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(a1 + 24) + 24) = 1;
  return result;
}

uint64_t sub_1B888BE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if (a1 < 0)
    return 0;
  v3 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 256);
  v4 = v3();
  v5 = v4 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = swift_bridgeObjectRelease();
  if (v5 <= a1)
    return 0;
  result = ((uint64_t (*)(uint64_t))v3)(v6);
  if ((result & 0xC000000000000001) != 0)
  {
    v8 = MEMORY[0x1BCCB4394](a1, result);
    goto LABEL_8;
  }
  if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    v8 = *(_QWORD *)(result + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

char *sub_1B888BF44()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B38);
    sub_1B887A014(&qword_1ED561B40, &qword_1ED561B38, MEMORY[0x1E0DEAF20]);
    v12 = sub_1B8912A98();
    swift_bridgeObjectRelease();
    return (char *)v12;
  }
  v2 = sub_1B8912FD8();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1B88775D0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1BCCB4394](v4, v1);
      }
      else
      {
        v5 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      v6 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 136))();
      v8 = v7;
      swift_release();
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      if (v10 >= v9 >> 1)
        sub_1B88775D0((char *)(v9 > 1), v10 + 1, 1);
      ++v4;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
    }
    while (v2 != v4);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B888C104()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  swift_retain();
  sub_1B8893668(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B38);
  sub_1B887A014(&qword_1ED561B40, &qword_1ED561B38, MEMORY[0x1E0DEAF20]);
  v2 = sub_1B8912A98();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t CalculateExpression.PlainExpression.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_weakInit();
  *(_WORD *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 40) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = MEMORY[0x1E0DEE9E8];
  *(_DWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 76) = 0;
  return v0;
}

uint64_t CalculateExpression.PlainExpression.init()()
{
  uint64_t v0;

  swift_weakInit();
  *(_WORD *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 40) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = MEMORY[0x1E0DEE9E8];
  *(_DWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 76) = 0;
  return v0;
}

void sub_1B888C288()
{
  _BYTE *v0;
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  _BYTE *v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  if (v0[40] != 1)
    return;
  v1 = v0;
  v0[40] = 0;
  v27 = MEMORY[0x1E0DEE9E8];
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (v2 >> 62)
  {
LABEL_55:
    v3 = sub_1B8912FD8();
    if (v3)
      goto LABEL_4;
LABEL_56:
    swift_bridgeObjectRelease();
    v17 = 0;
    v9 = 0;
    v18 = 0;
    goto LABEL_57;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_56;
LABEL_4:
  v20 = v1;
  v4 = 0;
  v21 = 0;
  v5 = 0;
  v6 = 0;
  v22 = 0;
  v23 = 0;
  v7 = v2 & 0xC000000000000001;
  v8 = 1;
  v24 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = (_BYTE *)MEMORY[0x1BCCB4394](v4, v2);
      v1 = (_BYTE *)(v4 + 1);
      if (__OFADD__(v4, 1))
        goto LABEL_53;
    }
    else
    {
      if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_54;
      v10 = *(_BYTE **)(v2 + 8 * v4 + 32);
      swift_retain();
      v1 = (_BYTE *)(v4 + 1);
      if (__OFADD__(v4, 1))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    v11 = v10[48];
    LOBYTE(v25) = v11;
    v26 = 17;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v25, &v26))
    {
      swift_release();
      if (v1 == (_BYTE *)v3)
        goto LABEL_42;
      goto LABEL_6;
    }
    if ((v5 & 1) != 0)
    {
      LOBYTE(v25) = v11;
      v26 = 35;
      HIDWORD(v24) |= static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v25, &v26);
    }
    else
    {
      LOBYTE(v24) = BYTE4(v24) | v24;
    }
    LOBYTE(v25) = v11;
    v26 = 14;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v25, &v26)
      || (LOBYTE(v25) = v11, v26 = 0, static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v25, &v26)))
    {
      (*(void (**)(void))(*(_QWORD *)v10 + 136))();
      v9 = sub_1B8912AE0();
      v13 = v12;
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        sub_1B8874AF0(&v25, v9, v13);
        swift_bridgeObjectRelease();
        LOBYTE(v25) = v10[48];
        v26 = 14;
        v14 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v25, &v26);
        swift_release();
        v15 = v1 == (_BYTE *)v3;
        if (!v14)
        {
          v7 = v2 & 0xC000000000000001;
          if (v1 == (_BYTE *)v3)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            v9 = v6;
            v1 = v20;
            v18 = v22;
            v10 = v23;
            goto LABEL_44;
          }
          goto LABEL_35;
        }
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_release();
      if (v1 == (_BYTE *)v3)
      {
        swift_bridgeObjectRelease();
        v18 = v13;
        v1 = v20;
LABEL_44:
        v17 = v21;
        if ((v24 & 1) != 0)
          goto LABEL_57;
        goto LABEL_48;
      }
      v8 = 0;
      v5 = 1;
      v22 = v13;
      v23 = v10;
      v7 = v2 & 0xC000000000000001;
      goto LABEL_7;
    }
    if ((v21 & 1) != 0)
      break;
    LOBYTE(v25) = v11;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) != 0)
    {
      swift_release();
      if (v1 == (_BYTE *)v3)
        goto LABEL_41;
      goto LABEL_34;
    }
    LOBYTE(v25) = v11;
    v26 = 35;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) == 0)
    {
      LOBYTE(v25) = v11;
      v26 = 19;
      v16 = sub_1B8912AA4();
      swift_release();
      v15 = v1 == (_BYTE *)v3;
      if ((v16 & 1) != 0)
      {
        v7 = v2 & 0xC000000000000001;
        if (v1 == (_BYTE *)v3)
        {
LABEL_41:
          swift_bridgeObjectRelease();
          v17 = 0;
          goto LABEL_47;
        }
LABEL_34:
        v21 = 0;
LABEL_35:
        v5 = 0;
        v8 = 0;
LABEL_6:
        v9 = v6;
        goto LABEL_7;
      }
LABEL_24:
      v7 = v2 & 0xC000000000000001;
      if (v15)
        goto LABEL_46;
LABEL_29:
      v5 = 0;
      v8 = 0;
      v21 = 1;
      goto LABEL_6;
    }
    swift_release();
    if (v1 == (_BYTE *)v3)
      goto LABEL_41;
    v21 = 0;
    v5 = 0;
    v8 = 0;
    v9 = v6;
    v7 = v2 & 0xC000000000000001;
LABEL_7:
    ++v4;
    v6 = v9;
  }
  swift_release();
  if (v1 != (_BYTE *)v3)
    goto LABEL_29;
LABEL_46:
  swift_bridgeObjectRelease();
  v17 = 1;
LABEL_47:
  v9 = v6;
  v1 = v20;
  v18 = v22;
  v10 = v23;
  if ((v24 & 1) != 0)
    goto LABEL_57;
LABEL_48:
  if (v18)
  {
    sub_1B8874AF0(&v25, v9, v18);
    swift_bridgeObjectRelease();
    if (v10)
    {
      LOBYTE(v25) = v10[48];
      v26 = 14;
      sub_1B885DDA0();
      v19 = sub_1B8912AA4();
      v9 = 0;
      v18 = 0;
      v17 |= v19;
    }
    else
    {
      v9 = 0;
      v18 = 0;
    }
  }
  else
  {
    v9 = 0;
  }
LABEL_57:
  *((_QWORD *)v1 + 6) = v9;
  *((_QWORD *)v1 + 7) = v18;
  swift_bridgeObjectRelease();
  *((_QWORD *)v1 + 8) = v27;
  swift_bridgeObjectRelease();
  v1[73] = v17 & 1;
  swift_release();
}

uint64_t sub_1B888C71C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1B888C74C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_1B888C788())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1B888C7C4()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 40) == 1)
    sub_1B888C288();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B888C800()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) == 1)
    sub_1B888C288();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B888C824()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) == 1)
    sub_1B888C288();
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t CalculateExpression.PlainExpression.__allocating_init(parent:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CalculateExpression.PlainExpression.init(parent:options:)(a1, a2);
  return v4;
}

uint64_t CalculateExpression.PlainExpression.init(parent:options:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  __CFString *v5;
  unint64_t v6;
  char v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  id v11;
  __CFString *v12;
  unint64_t v13;
  char v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  __CFString *v34;
  char v35;
  char v36;
  __CFString *v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  char v43;
  void *v44;
  id v45;
  id v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t result;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  unint64_t v97;
  unsigned __int8 v98;
  unint64_t *v99;
  unint64_t v100;
  id v101;
  __int128 aBlock;
  __int128 v103;
  uint64_t (*v104)();
  uint64_t v105;
  unsigned __int8 v106[24];
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  __int128 v110;
  __int128 v111;

  v3 = v2;
  swift_weakInit();
  *(_DWORD *)(v2 + 72) = 0;
  *(_WORD *)(v2 + 24) = 1;
  *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
  v99 = (unint64_t *)(v2 + 32);
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(v2 + 76) = 0;
  swift_beginAccess();
  swift_weakAssign();
  if (!a2)
    a2 = sub_1B88992EC();
  if (!*(_QWORD *)(a2 + 16))
  {
    aBlock = 0u;
    v103 = 0u;
LABEL_12:
    sub_1B88938A0((uint64_t)&aBlock);
    goto LABEL_13;
  }
  v5 = CFSTR("CalculateKeyAllowUnits");
  v6 = sub_1B8873FBC((uint64_t)v5);
  if ((v7 & 1) != 0)
  {
    sub_1B8879724(*(_QWORD *)(a2 + 56) + 32 * v6, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v103 = 0u;
  }

  if (!*((_QWORD *)&v103 + 1))
    goto LABEL_12;
  sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1B88796EC(0, &qword_1ED561BB0);
    goto LABEL_14;
  }
  v8 = (void *)v110;
  v9 = objc_msgSend((id)v110, sel_BOOLValue);

  sub_1B88796EC(0, &qword_1ED561BB0);
  v10 = 0;
  if ((v9 & 1) != 0)
LABEL_14:
    v10 = objc_msgSend((id)objc_opt_self(), sel_converterUnits);
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUnits_, v10);

  if (*(_QWORD *)(a2 + 16))
  {
    v12 = CFSTR("CalculateKeyFormat");
    v13 = sub_1B8873FBC((uint64_t)v12);
    if ((v14 & 1) != 0)
    {
      sub_1B8879724(*(_QWORD *)(a2 + 56) + 32 * v13, (uint64_t)&v110);
    }
    else
    {
      v110 = 0u;
      v111 = 0u;
    }

  }
  else
  {
    v110 = 0u;
    v111 = 0u;
  }
  sub_1B88938E0((uint64_t)&v110, (uint64_t)&aBlock);
  v100 = v3;
  v101 = v11;
  if (!*((_QWORD *)&v103 + 1))
  {
    sub_1B88938A0((uint64_t)&aBlock);
    goto LABEL_26;
  }
  sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    CalculateExpression.expression.getter();
    v30 = 0;
    goto LABEL_28;
  }
  v15 = (id)v107;
  v16 = objc_msgSend((id)v107, sel_integerValue);

  CalculateExpression.expression.getter();
  if (v16 == (id)1)
  {
    v17 = (void *)sub_1B8912AB0();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1B8912AB0();
    v104 = sub_1B888DA24;
    v105 = 0;
    v19 = MEMORY[0x1E0C809B0];
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v103 = sub_1B888DB70;
    *((_QWORD *)&v103 + 1) = &block_descriptor_0;
    v20 = _Block_copy(&aBlock);
    v21 = objc_msgSend(v17, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlock_, v18, v20);
    _Block_release(v20);

    sub_1B8912AD4();
    v22 = (void *)sub_1B8912AB0();
    swift_bridgeObjectRelease();
    v23 = (void *)sub_1B8912AB0();
    v104 = sub_1B888DC08;
    v105 = 0;
    *(_QWORD *)&aBlock = v19;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v103 = sub_1B888DB04;
    *((_QWORD *)&v103 + 1) = &block_descriptor_3;
    v24 = _Block_copy(&aBlock);
    v25 = objc_msgSend(v22, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlockWithResult_, v23, v24);
    _Block_release(v24);

    sub_1B8912AD4();
    v26 = (void *)sub_1B8912AB0();
    swift_bridgeObjectRelease();
    v27 = (void *)sub_1B8912AB0();
    v104 = sub_1B888DC14;
    v105 = 0;
    *(_QWORD *)&aBlock = v19;
    v3 = v100;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v103 = sub_1B888DB70;
    *((_QWORD *)&v103 + 1) = &block_descriptor_6;
    v28 = _Block_copy(&aBlock);
    v29 = objc_msgSend(v26, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlock_, v27, v28);
    _Block_release(v28);

    sub_1B8912AD4();
    v30 = 1;
  }
  else
  {
    v30 = 0;
  }
LABEL_28:
  if (!*(_QWORD *)(CalculateExpression.locales.getter() + 16))
  {
    swift_bridgeObjectRelease();
    v31 = objc_msgSend((id)objc_opt_self(), sel_systemLocales);
    sub_1B8912870();
    sub_1B8912C9C();

  }
  sub_1B8912870();
  v32 = (void *)sub_1B8912C90();
  swift_bridgeObjectRelease();
  objc_msgSend(v101, sel_setLocales_, v32);

  v33 = (void *)sub_1B8912AB0();
  swift_bridgeObjectRelease();
  objc_msgSend(v101, sel_setString_, v33);

  if (!*(_QWORD *)(a2 + 16)
    || (swift_bridgeObjectRetain(),
        v34 = CFSTR("CalculateKeyVariables"),
        sub_1B8873FBC((uint64_t)v34),
        v36 = v35,
        swift_bridgeObjectRelease(),
        v34,
        (v36 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    v40 = sub_1B889942C();
    sub_1B888DC20(v40);
    swift_bridgeObjectRelease();
    v41 = (void *)sub_1B8912A14();
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x1E0DEE9D8];
    goto LABEL_44;
  }
  if (*(_QWORD *)(a2 + 16))
  {
    v37 = v34;
    v38 = sub_1B8873FBC((uint64_t)v37);
    if ((v39 & 1) != 0)
    {
      sub_1B8879724(*(_QWORD *)(a2 + 56) + 32 * v38, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v103 = 0u;
    }

  }
  else
  {
    aBlock = 0u;
    v103 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v103 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B61F0);
    v43 = swift_dynamicCast();
    v42 = MEMORY[0x1E0DEE9D8];
    if ((v43 & 1) != 0)
    {
      v41 = (void *)sub_1B8912A14();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
  }
  else
  {
    sub_1B88938A0((uint64_t)&aBlock);
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v41 = 0;
LABEL_44:
  objc_msgSend(v101, sel_setVariables_, v41);

  v44 = CalculateExpression.numberFormatter.getter();
  objc_msgSend(v101, sel_setNumberFormatter_, v44);

  objc_msgSend(v101, sel_setNormalizeNumbers_, 1);
  objc_msgSend(v101, sel_setIsLaTeX_, v30);
  v109 = v42;
  swift_beginAccess();
  v45 = objc_msgSend(v101, sel_nextToken);
  if (v45)
  {
    v46 = v45;
    v47 = &selRef_isSimpleVerticalMath;
    do
    {
      if (objc_msgSend(v46, v47[255]) == (id)11)
      {
        type metadata accessor for CalculateExpression.Token();
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 40) = 0;
        *(_QWORD *)(v49 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v49 + 72) = 0u;
        *(_OWORD *)(v49 + 88) = 0u;
        *(_QWORD *)(v49 + 16) = 0;
        *(_QWORD *)(v49 + 24) = 0xE000000000000000;
        swift_beginAccess();
        *(_QWORD *)(v49 + 32) = 0;
        *(_QWORD *)(v49 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v49 + 48) = 7;
        *(_QWORD *)(v49 + 64) = v42;
      }
      else
      {
        v50 = objc_msgSend(v46, v47[255]);
        v51 = objc_msgSend(v46, sel_text);
        v52 = sub_1B8912AD4();
        v54 = v53;

        if (v50 == (id)3)
        {
          v55 = objc_msgSend(v46, sel_normalizedText);
          v56 = sub_1B8912AD4();
          v58 = v57;

          type metadata accessor for CalculateExpression.Token();
          v49 = swift_allocObject();
          *(_QWORD *)(v49 + 40) = 0;
          *(_QWORD *)(v49 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v49 + 88) = 0u;
          *(_OWORD *)(v49 + 72) = 0u;
          *(_QWORD *)(v49 + 16) = v52;
          *(_QWORD *)(v49 + 24) = v54;
          swift_beginAccess();
          *(_QWORD *)(v49 + 32) = v56;
          *(_QWORD *)(v49 + 40) = v58;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v49 + 48) = 1;
        }
        else
        {
          sub_1B88973F4((unint64_t)objc_msgSend(v46, v47[255]), &v107);
          v59 = v107;
          type metadata accessor for CalculateExpression.Token();
          v49 = swift_allocObject();
          *(_QWORD *)(v49 + 40) = 0;
          *(_QWORD *)(v49 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v49 + 88) = 0u;
          *(_OWORD *)(v49 + 72) = 0u;
          *(_QWORD *)(v49 + 16) = v52;
          *(_QWORD *)(v49 + 24) = v54;
          swift_beginAccess();
          *(_QWORD *)(v49 + 32) = 0;
          *(_QWORD *)(v49 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v49 + 48) = v59;
        }
        *(_QWORD *)(v49 + 64) = v42;
      }
      if (v109 >> 62)
      {
        swift_bridgeObjectRetain();
        v88 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        v61 = v88 - 1;
        if (__OFSUB__(v88, 1))
        {
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          swift_bridgeObjectRetain();
          result = sub_1B8912FD8();
          v91 = result;
          if (!result)
            goto LABEL_138;
LABEL_117:
          if (v91 >= 1)
          {
            v93 = 0;
            do
            {
              if ((v42 & 0xC000000000000001) != 0)
              {
                v94 = MEMORY[0x1BCCB4394](v93, v42);
              }
              else
              {
                v94 = *(_QWORD *)(v42 + 8 * v93 + 32);
                swift_retain();
              }
              ++v93;
              v95 = *(void (**)(uint64_t))(*(_QWORD *)v94 + 192);
              v96 = swift_retain();
              v95(v96);
              swift_release();
            }
            while (v91 != v93);
            goto LABEL_138;
          }
          __break(1u);
          return result;
        }
      }
      else
      {
        v60 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
        v61 = v60 - 1;
        if (__OFSUB__(v60, 1))
          goto LABEL_123;
      }
      v62 = v61 - 1;
      if (__OFSUB__(v61, 1))
        goto LABEL_124;
      if ((v62 & 0x8000000000000000) == 0)
      {
        swift_beginAccess();
        if ((v109 & 0xC000000000000001) != 0)
        {
          v63 = MEMORY[0x1BCCB4394](v62);
        }
        else
        {
          if (v62 >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_127;
          v63 = *(_QWORD *)(v109 + 8 * v62 + 32);
          swift_retain();
        }
        swift_endAccess();
        v64 = *(_BYTE *)(v63 + 48);
        swift_release();
        LOBYTE(v107) = v64;
        v106[0] = 17;
        sub_1B885DDA0();
        if ((sub_1B8912AA4() & 1) == 0)
          goto LABEL_67;
      }
      if (__OFSUB__(v62--, 1))
        goto LABEL_126;
      if ((v62 & 0x8000000000000000) != 0)
      {
        v66 = 0;
      }
      else
      {
LABEL_67:
        swift_beginAccess();
        if ((v109 & 0xC000000000000001) != 0)
        {
          v66 = MEMORY[0x1BCCB4394](v62);
        }
        else
        {
          if (v62 >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_125;
          v66 = *(_QWORD *)(v109 + 8 * v62 + 32);
          swift_retain();
        }
        swift_endAccess();
      }
      LOBYTE(v107) = *(_BYTE *)(v49 + 48);
      v106[0] = 1;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v107, v106))
        goto LABEL_47;
      v67 = v109;
      if (v109 >> 62)
      {
        swift_bridgeObjectRetain();
        v68 = sub_1B8912FD8();
        if (!v68)
        {
LABEL_46:
          swift_bridgeObjectRelease();
LABEL_47:
          swift_beginAccess();
          v48 = swift_retain();
          MEMORY[0x1BCCB40AC](v48);
          if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1B8912CCC();
          sub_1B8912CFC();
          sub_1B8912CA8();
          swift_endAccess();
          goto LABEL_50;
        }
      }
      else
      {
        v68 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v68)
          goto LABEL_46;
      }
      v69 = v68 - 1;
      if (__OFSUB__(v68, 1))
        goto LABEL_128;
      if ((v67 & 0xC000000000000001) != 0)
      {
        v70 = MEMORY[0x1BCCB4394](v69, v67);
      }
      else
      {
        if ((v69 & 0x8000000000000000) != 0)
          goto LABEL_129;
        if (v69 >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_130;
        v70 = *(_QWORD *)(v67 + 8 * v69 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      v71 = *(_BYTE *)(v70 + 48);
      swift_release();
      LOBYTE(v107) = v71;
      v106[0] = 4;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) == 0)
        goto LABEL_47;
      if (v66)
      {
        v72 = *(_BYTE *)(v66 + 48);
        LOBYTE(v107) = v72;
        if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0)
        {
          LOBYTE(v107) = v72;
          if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
          {
            LOBYTE(v107) = v72;
            v106[0] = 35;
            if ((sub_1B8912AA4() & 1) == 0)
              goto LABEL_47;
          }
        }
      }
      if (v109 >> 62)
      {
        swift_bridgeObjectRetain();
        v89 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        v3 = v89 - 1;
        if (__OFSUB__(v89, 1))
          goto LABEL_135;
      }
      else
      {
        v73 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
        v3 = v73 - 1;
        if (__OFSUB__(v73, 1))
          goto LABEL_135;
      }
      if (v109 >> 62)
      {
        swift_bridgeObjectRetain();
        v90 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        v75 = v90 - 1;
        if (__OFSUB__(v90, 1))
          goto LABEL_136;
      }
      else
      {
        v74 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
        v75 = v74 - 1;
        if (__OFSUB__(v74, 1))
          goto LABEL_136;
      }
      swift_beginAccess();
      if ((v109 & 0xC000000000000001) != 0)
      {
        v76 = MEMORY[0x1BCCB4394](v75);
      }
      else
      {
        if ((v75 & 0x8000000000000000) != 0)
          goto LABEL_131;
        if (v75 >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_132;
        v76 = *(_QWORD *)(v109 + 8 * v75 + 32);
        swift_retain();
      }
      v77 = swift_endAccess();
      v78 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v76 + 136))(v77);
      v80 = v79;
      swift_release();
      v107 = v78;
      v108 = v80;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1B8912B58();
      swift_bridgeObjectRelease();
      v82 = v107;
      v81 = v108;
      v107 = 45;
      v108 = 0xE100000000000000;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1B8912B58();
      swift_bridgeObjectRelease();
      v83 = v107;
      v84 = v108;
      type metadata accessor for CalculateExpression.Token();
      v85 = swift_allocObject();
      *(_QWORD *)(v85 + 40) = 0;
      *(_QWORD *)(v85 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v85 + 88) = 0u;
      *(_OWORD *)(v85 + 72) = 0u;
      *(_QWORD *)(v85 + 16) = v82;
      *(_QWORD *)(v85 + 24) = v81;
      swift_beginAccess();
      *(_QWORD *)(v85 + 32) = v83;
      *(_QWORD *)(v85 + 40) = v84;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v85 + 48) = 1;
      v42 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v85 + 64) = MEMORY[0x1E0DEE9D8];
      swift_beginAccess();
      v86 = v109;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      v109 = v86;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v86 & 0x8000000000000000) != 0
        || (v86 & 0x4000000000000000) != 0)
      {
        sub_1B885DD38(v86);
      }
      if ((v3 & 0x8000000000000000) != 0)
        goto LABEL_133;
      if (v3 >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_134;
      *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v85;
      swift_release();
      sub_1B8912CA8();
      swift_endAccess();
      v3 = v100;
LABEL_50:

      swift_release();
      swift_release();
      v46 = objc_msgSend(v101, sel_nextToken);
      v47 = &selRef_isSimpleVerticalMath;
    }
    while (v46);
  }
  v42 = v109;
  if (v109 >> 62)
    goto LABEL_137;
  v91 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v91)
    goto LABEL_117;
LABEL_138:
  swift_bridgeObjectRelease();
  v97 = v109;
  swift_beginAccess();
  *v99 = v97;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (objc_msgSend(v101, sel_isGraphable))
    v98 = objc_msgSend(v101, sel_foundGraphableValue);
  else
    v98 = 0;
  swift_release();

  sub_1B88938A0((uint64_t)&v110);
  swift_beginAccess();
  *(_BYTE *)(v3 + 72) = v98;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B888DA24()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v6[6];

  v0 = (void *)sub_1B8912AB0();
  v1 = (void *)sub_1B8912AB0();
  v6[4] = sub_1B888DAF8;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1B888DB04;
  v6[3] = &block_descriptor_9;
  v2 = _Block_copy(v6);
  v3 = objc_msgSend(v0, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlockWithResult_, v1, v2);
  _Block_release(v2);

  v4 = sub_1B8912AD4();
  return v4;
}

uint64_t sub_1B888DAF8()
{
  return 8284;
}

id sub_1B888DB04(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;
  void *v5;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

  v5 = (void *)sub_1B8912AB0();
  swift_bridgeObjectRelease();
  return v5;
}

id sub_1B888DB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v7 = sub_1B8912AD4();
  v9 = v8;
  swift_retain();
  v6(v7, v9, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8912AB0();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B888DC08()
{
  return 0;
}

uint64_t sub_1B888DC14()
{
  return 32;
}

uint64_t sub_1B888DC20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6038);
    v2 = sub_1B8913008();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v38[0] = *v17;
    *((_QWORD *)&v38[0] + 1) = v18;
    v20 = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6210);
    swift_dynamicCast();
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_1B8879E64(&v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_1B8879E64(v37, v38);
    sub_1B8879E64(v38, &v34);
    result = sub_1B8912EDC();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v30;
    *(_OWORD *)(v10 + 16) = v31;
    *(_QWORD *)(v10 + 32) = v32;
    result = (uint64_t)sub_1B8879E64(&v34, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1B8879F24();
    return v2;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.PlainExpression.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CalculateExpression.PlainExpression.init(_:)(a1);
  return v2;
}

uint64_t CalculateExpression.PlainExpression.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t result;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  unint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(void);
  unsigned __int8 v76;
  unsigned __int8 v77[24];
  uint64_t v78[3];
  char v79;
  char v80;
  unint64_t v81;

  v3 = v1;
  v5 = swift_weakInit();
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  v6 = v1 + 32;
  *(_WORD *)(v1 + 24) = 1;
  *(_BYTE *)(v1 + 40) = 1;
  v7 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = v7;
  *(_DWORD *)(v1 + 72) = 0;
  *(_BYTE *)(v1 + 76) = 0;
  v75 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  ((void (*)(uint64_t))v75)(v5);
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  v81 = 0;
  v80 = 0;
  if (swift_weakLoadStrong())
  {
    v8 = CalculateExpression.format.getter();
    v9 = swift_release();
    if (v8 == 2)
    {
      v78[0] = MEMORY[0x1E0DEE9D8];
      v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 392);
      v10 = ((uint64_t (*)(uint64_t))v2)(v9);
      if (v10 >> 62)
        v11 = sub_1B8912FD8();
      else
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (__OFSUB__(v11, 2))
      {
        __break(1u);
        goto LABEL_129;
      }
      v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 416))(v11 - 2);
      if (!v12
        || (v13 = *(_BYTE *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
            swift_release(),
            v79 = v13,
            v77[0] = 4,
            sub_1B885DDA0(),
            v12 = sub_1B8912AA4(),
            (v12 & 1) == 0))
      {
LABEL_17:
        v10 = ((uint64_t (*)(uint64_t))v2)(v12);
        if (!(v10 >> 62))
        {
          v20 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v20)
            goto LABEL_19;
          goto LABEL_130;
        }
LABEL_129:
        v20 = sub_1B8912FD8();
        if (v20)
        {
LABEL_19:
          v17 = __OFSUB__(v20, 1);
          v21 = v20 - 1;
          if (!v17)
          {
            if ((v10 & 0xC000000000000001) == 0)
            {
              if ((v21 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v21 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                swift_retain();
                goto LABEL_24;
              }
              __break(1u);
              goto LABEL_135;
            }
LABEL_132:
            MEMORY[0x1BCCB4394](v21, v10);
LABEL_24:
            v22 = swift_bridgeObjectRelease();
            MEMORY[0x1BCCB40AC](v22);
            if (*(_QWORD *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_25:
              sub_1B8912CFC();
              sub_1B8912CA8();
              type metadata accessor for CalculateExpression.RichExpression();
              v23 = sub_1B88622EC(v78[0]);
              v24 = sub_1B88923AC(v23, &v81, &v80);
              v25 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v24 + 256))(v24);
              swift_release();
              swift_release();
              swift_beginAccess();
              *(_QWORD *)(v3 + 32) = v25;
              Strong = swift_bridgeObjectRelease();
              goto LABEL_56;
            }
LABEL_135:
            sub_1B8912CCC();
            goto LABEL_25;
          }
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
LABEL_130:
        v21 = swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_131;
      }
      v14 = v2();
      if (!(v14 >> 62))
      {
        v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_10;
      }
LABEL_139:
      v15 = sub_1B8912FD8();
LABEL_10:
      v16 = swift_bridgeObjectRelease();
      v17 = __OFSUB__(v15, 2);
      v18 = v15 - 2;
      if (v17)
      {
        __break(1u);
      }
      else
      {
        v14 = ((uint64_t (*)(uint64_t))v2)(v16);
        if ((v14 & 0xC000000000000001) == 0)
        {
          if ((v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v18 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_15;
          }
          __break(1u);
          goto LABEL_144;
        }
      }
      MEMORY[0x1BCCB4394](v18, v14);
LABEL_15:
      v19 = swift_bridgeObjectRelease();
      MEMORY[0x1BCCB40AC](v19);
      if (*(_QWORD *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_16:
        sub_1B8912CFC();
        v12 = sub_1B8912CA8();
        goto LABEL_17;
      }
LABEL_144:
      sub_1B8912CCC();
      goto LABEL_16;
    }
  }
  v27 = sub_1B88923AC(a1, &v81, &v80);
  v28 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v27 + 256))(v27);
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v28;
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_56;
  v29 = CalculateExpression.allowPartialExpressions.getter();
  Strong = swift_release();
  if ((v29 & 1) == 0)
    goto LABEL_56;
  v14 = *(_QWORD *)v6;
  if (!(*(_QWORD *)v6 >> 62))
  {
    v30 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v31 = v30 - 1;
    if (!__OFSUB__(v30, 1))
      goto LABEL_30;
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  swift_bridgeObjectRetain();
  v30 = sub_1B8912FD8();
  Strong = swift_bridgeObjectRelease();
  v31 = v30 - 1;
  if (__OFSUB__(v30, 1))
    goto LABEL_138;
LABEL_30:
  if ((v31 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      v32 = v30 - 1;
      swift_beginAccess();
      v33 = *(_QWORD *)v6;
      if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
      {
        v34 = MEMORY[0x1BCCB4394](v30 - 1);
      }
      else
      {
        if (v32 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          swift_bridgeObjectRetain();
          v69 = sub_1B8912FD8();
          if (v69)
            goto LABEL_106;
          goto LABEL_124;
        }
        v34 = *(_QWORD *)(v33 + 8 * v30 + 24);
        swift_retain();
      }
      swift_endAccess();
      v35 = *(_BYTE *)(v34 + 48);
      swift_release();
      LOBYTE(v78[0]) = v35;
      v77[0] = 16;
      Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v78, v77);
      if ((Strong & 1) == 0)
      {
        swift_beginAccess();
        v36 = *(_QWORD *)v6;
        if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
        {
          v37 = MEMORY[0x1BCCB4394](v30 - 1);
        }
        else
        {
          if (v32 >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_122;
          v37 = *(_QWORD *)(v36 + 8 * v30 + 24);
          swift_retain();
        }
        swift_endAccess();
        v38 = *(_BYTE *)(v37 + 48);
        swift_release();
        LOBYTE(v78[0]) = v38;
        v77[0] = 17;
        Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v78, v77);
        if ((Strong & 1) == 0)
          break;
      }
      --v30;
      if ((uint64_t)v32 < 1)
        goto LABEL_56;
    }
    swift_beginAccess();
    v39 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
    {
      v40 = MEMORY[0x1BCCB4394](v30 - 1);
    }
    else
    {
      if (v32 >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_147;
      }
      v40 = *(_QWORD *)(v39 + 8 * v30 + 24);
      swift_retain();
    }
    swift_endAccess();
    v41 = *(_BYTE *)(v40 + 48);
    swift_release();
    LOBYTE(v78[0]) = v41;
    if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) != 0)
      goto LABEL_52;
    result = swift_beginAccess();
    v43 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
      goto LABEL_151;
    if (v32 >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v44 = *(_QWORD *)(v43 + 8 * v30 + 24);
    swift_retain();
    while (1)
    {
      swift_endAccess();
      v45 = *(_BYTE *)(v44 + 48);
      swift_release();
      LOBYTE(v78[0]) = v45;
      v77[0] = 15;
      Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v78, v77);
      if ((Strong & 1) == 0)
        break;
LABEL_52:
      if (*(_QWORD *)v6 >> 62)
      {
LABEL_147:
        swift_bridgeObjectRetain();
        v74 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        v47 = v74 - v32;
        if (__OFSUB__(v74, v32))
        {
LABEL_149:
          __break(1u);
          goto LABEL_150;
        }
      }
      else
      {
        v46 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        v47 = v46 - v32;
        if (__OFSUB__(v46, v32))
          goto LABEL_149;
      }
      v48 = v47 - 1;
      if (!__OFSUB__(v47, 1))
      {
        swift_beginAccess();
        sub_1B888ED60(v48);
        Strong = swift_endAccess();
        break;
      }
LABEL_150:
      __break(1u);
LABEL_151:
      v44 = MEMORY[0x1BCCB4394](v32);
    }
  }
LABEL_56:
  if ((v80 & 1) != 0)
    goto LABEL_60;
  v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 392))(Strong);
  if (v49 >> 62)
LABEL_126:
    v50 = sub_1B8912FD8();
  else
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!v50)
  {
LABEL_60:
    swift_beginAccess();
    *(_QWORD *)v6 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v51 = 0;
  while (1)
  {
    if (*(_QWORD *)v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v65 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v51 >= v65)
        goto LABEL_104;
    }
    else if (v51 >= *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_104;
    }
    swift_beginAccess();
    v53 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
    {
      v54 = MEMORY[0x1BCCB4394](v51);
    }
    else
    {
      if (v51 < 0)
      {
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      if ((unint64_t)v51 >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_113;
      v54 = *(_QWORD *)(v53 + 8 * v51 + 32);
      swift_retain();
    }
    swift_endAccess();
    v55 = *(_BYTE *)(v54 + 48);
    swift_release();
    v77[0] = v55;
    if ((CalculateExpression.TokenType.isWordBasedBitwiseOperator.getter() & 1) == 0)
      goto LABEL_62;
    swift_beginAccess();
    v56 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
    {
      v57 = MEMORY[0x1BCCB4394](v51);
    }
    else
    {
      if (v51 < 0)
        goto LABEL_115;
      if ((unint64_t)v51 >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_116;
      v57 = *(_QWORD *)(v56 + 8 * v51 + 32);
      swift_retain();
    }
    swift_endAccess();
    v58 = *(_BYTE *)(v57 + 48);
    swift_release();
    v77[0] = v58;
    v76 = 9;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v77, &v76))
    {
      if (!v75() || (v59 = CalculateExpression.engine.getter(), swift_release(), v59 != 1))
      {
LABEL_62:
        v52 = v51;
        goto LABEL_63;
      }
    }
    v52 = v51 + 1;
    if (__OFADD__(v51, 1))
      goto LABEL_117;
    if (*(_QWORD *)v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v66 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v52 >= v66)
        goto LABEL_85;
    }
    else if (v52 >= *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_85;
    }
    type metadata accessor for CalculateExpression.Token();
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 40) = 0;
    *(_QWORD *)(v60 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v60 + 88) = 0u;
    *(_OWORD *)(v60 + 72) = 0u;
    *(_QWORD *)(v60 + 16) = 32;
    *(_QWORD *)(v60 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(_QWORD *)(v60 + 32) = 0;
    *(_QWORD *)(v60 + 40) = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v60 + 48) = 17;
    *(_QWORD *)(v60 + 64) = MEMORY[0x1E0DEE9D8];
    swift_beginAccess();
    if (*(_QWORD *)v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v67 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v67 < v52)
        goto LABEL_119;
    }
    else if (*(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10) < v52)
    {
      goto LABEL_119;
    }
    if (v52 < 0)
      goto LABEL_120;
    sub_1B8892CD8(v51 + 1, v51 + 1, v60, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Token);
    swift_endAccess();
LABEL_85:
    if (v51 >= 1)
    {
      swift_beginAccess();
      v61 = *(_QWORD *)v6;
      if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
      {
        v62 = MEMORY[0x1BCCB4394](v51);
      }
      else
      {
        if ((unint64_t)v51 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_118;
        v62 = *(_QWORD *)(v61 + 8 * v51 + 32);
        swift_retain();
      }
      swift_endAccess();
      v63 = *(_BYTE *)(v62 + 48);
      swift_release();
      v77[0] = v63;
      if ((CalculateExpression.TokenType.isPrefixOperator.getter() & 1) == 0)
        break;
    }
LABEL_63:
    v51 = v52 + 1;
    if (__OFADD__(v52, 1))
      goto LABEL_114;
  }
  type metadata accessor for CalculateExpression.Token();
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 40) = 0;
  *(_QWORD *)(v64 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v64 + 88) = 0u;
  *(_OWORD *)(v64 + 72) = 0u;
  *(_QWORD *)(v64 + 16) = 32;
  *(_QWORD *)(v64 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(_QWORD *)(v64 + 32) = 0;
  *(_QWORD *)(v64 + 40) = 0;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v64 + 48) = 17;
  *(_QWORD *)(v64 + 64) = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  if (!(*(_QWORD *)v6 >> 62))
  {
    if (*(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10) < v51)
      goto LABEL_103;
    goto LABEL_92;
  }
  swift_bridgeObjectRetain();
  v68 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v68 >= v51)
  {
LABEL_92:
    sub_1B8892CD8(v51, v51, v64, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Token);
    swift_endAccess();
    goto LABEL_63;
  }
LABEL_103:
  __break(1u);
LABEL_104:
  v6 = *(_QWORD *)v6;
  if (v6 >> 62)
    goto LABEL_123;
  v69 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v69)
  {
LABEL_106:
    if (v69 < 1)
    {
      __break(1u);
      goto LABEL_126;
    }
    v70 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v71 = MEMORY[0x1BCCB4394](v70, v6);
      }
      else
      {
        v71 = *(_QWORD *)(v6 + 8 * v70 + 32);
        swift_retain();
      }
      ++v70;
      v72 = *(void (**)(uint64_t))(*(_QWORD *)v71 + 192);
      v73 = swift_retain();
      v72(v73);
      swift_release();
    }
    while (v69 != v70);
  }
LABEL_124:
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1B888ED60(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    v2 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else if (!(*v1 >> 62))
    {
      v3 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      v4 = -v3;
      if (!__OFSUB__(0, v3))
        goto LABEL_5;
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v4 = -v3;
    if (!__OFSUB__(0, v3))
    {
LABEL_5:
      v5 = -v2;
      if (v4 <= 0 && v4 > v5)
        goto LABEL_20;
      result = v3 - v2;
      if (!__OFADD__(v3, v5))
      {
        if (v3 >= result)
          return sub_1B8893CCC(result, v3);
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1B888EE20()
{
  uint64_t v0;

  sub_1B888EE68();
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t sub_1B888EE38()
{
  uint64_t v0;

  sub_1B888EE68();
  return *(unsigned __int8 *)(v0 + 75);
}

uint64_t sub_1B888EE50()
{
  uint64_t v0;

  sub_1B888EE68();
  return *(unsigned __int8 *)(v0 + 76);
}

void sub_1B888EE68()
{
  _BYTE *v0;
  char v1;
  uint64_t (*v2)(void);
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;

  if (v0[24] != 1)
    return;
  v0[24] = 0;
  v2 = *(uint64_t (**)(void))(*(_QWORD *)v0 + 256);
  v3 = v2();
  if (v3 >> 62)
LABEL_91:
    v4 = sub_1B8912FD8();
  else
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    v7 = 0;
    goto LABEL_10;
  }
  v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  v7 = v6;
  if ((v6 & 0xC000000000000001) != 0)
    goto LABEL_97;
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_99;
  }
  v8 = *(_QWORD *)(v6 + 32);
  swift_retain();
LABEL_8:
  swift_bridgeObjectRelease();
  v9 = *(_BYTE *)(v8 + 48);
  swift_release();
  v58 = v9;
  v57 = 4;
  v7 = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
LABEL_10:
  v10 = v2();
  if (v10 >> 62)
    v11 = sub_1B8912FD8();
  else
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = swift_bridgeObjectRelease();
  if ((uint64_t)v7 < v11)
  {
    v13 = ((uint64_t (*)(uint64_t))v2)(v12);
    v4 = v13;
    if ((v13 & 0xC000000000000001) != 0)
    {
LABEL_99:
      v14 = MEMORY[0x1BCCB4394](v7, v4);
    }
    else
    {
      if (v7 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_101;
      }
      v14 = *(_QWORD *)(v13 + 8 * v7 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v15 = *(_BYTE *)(v14 + 48);
    swift_release();
    v58 = v15;
    v57 = 10;
    v7 += static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
  }
  v16 = v2();
  if (v16 >> 62)
    v17 = sub_1B8912FD8();
  else
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  v18 = swift_bridgeObjectRelease();
  if ((uint64_t)v7 >= v17)
  {
LABEL_48:
    LOBYTE(v4) = 0;
    ++v7;
    goto LABEL_50;
  }
  v19 = ((uint64_t (*)(uint64_t))v2)(v18);
  v4 = v19;
  if ((v19 & 0xC000000000000001) == 0)
  {
    if (v7 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_103;
    }
    v20 = *(_QWORD *)(v19 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_23;
  }
LABEL_101:
  v20 = MEMORY[0x1BCCB4394](v7, v4);
LABEL_23:
  swift_bridgeObjectRelease();
  v21 = *(_BYTE *)(v20 + 48);
  swift_release();
  v58 = v21;
  v57 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    goto LABEL_48;
  v22 = v2();
  if (v22 >> 62)
    v23 = sub_1B8912FD8();
  else
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  v24 = swift_bridgeObjectRelease();
  if ((uint64_t)v7 >= v23)
  {
LABEL_49:
    LOBYTE(v4) = 0;
LABEL_50:
    v35 = v2();
    if (v35 >> 62)
      v36 = sub_1B8912FD8();
    else
      v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    v37 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 < v36)
    {
      v38 = ((uint64_t (*)(uint64_t))v2)(v37);
      v17 = v38;
      if ((v38 & 0xC000000000000001) == 0)
      {
        if ((v7 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v7 < *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v39 = *(_QWORD *)(v38 + 8 * v7 + 32);
          swift_retain();
          goto LABEL_57;
        }
        __break(1u);
LABEL_106:
        v46 = MEMORY[0x1BCCB4394](v7, v17);
LABEL_65:
        swift_bridgeObjectRelease();
        v47 = *(_BYTE *)(v46 + 48);
        swift_release();
        v58 = v47;
        v57 = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
        {
          LOBYTE(v4) = 0;
          ++v7;
          v1 = 1;
          goto LABEL_68;
        }
LABEL_67:
        v1 = 0;
LABEL_68:
        if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))() & 1) != 0)
        {
          v48 = 0;
LABEL_73:
          v0[74] = v48;
          v0[75] = v1;
          v0[76] = v4 & 1;
          return;
        }
        v49 = v2();
        if (!(v49 >> 62))
        {
          v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_72:
          swift_bridgeObjectRelease();
          v48 = v7 == v50;
          goto LABEL_73;
        }
LABEL_109:
        v50 = sub_1B8912FD8();
        goto LABEL_72;
      }
LABEL_103:
      v39 = MEMORY[0x1BCCB4394](v7, v17);
LABEL_57:
      swift_bridgeObjectRelease();
      v40 = *(_BYTE *)(v39 + 48);
      swift_release();
      v58 = v40;
      v57 = 8;
      v41 = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
      v7 += v41;
      LOBYTE(v4) = !v41 & v4;
    }
    v42 = v2();
    if (v42 >> 62)
      v43 = sub_1B8912FD8();
    else
      v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
    v44 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 >= v43)
      goto LABEL_67;
    v45 = ((uint64_t (*)(uint64_t))v2)(v44);
    v17 = v45;
    if ((v45 & 0xC000000000000001) != 0)
      goto LABEL_106;
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v46 = *(_QWORD *)(v45 + 8 * v7 + 32);
      swift_retain();
      goto LABEL_65;
    }
    __break(1u);
    goto LABEL_109;
  }
  v25 = 0;
  v1 = 15;
  while (1)
  {
    v26 = ((uint64_t (*)(uint64_t))v2)(v24);
    if ((v26 & 0xC000000000000001) != 0)
    {
      v27 = MEMORY[0x1BCCB4394](v7, v26);
    }
    else
    {
      if (v7 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_88;
      v27 = *(_QWORD *)(v26 + 8 * v7 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v28 = *(_BYTE *)(v27 + 48);
    swift_release();
    v58 = v28;
    v57 = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    {
      v29 = __OFADD__(v25++, 1);
      if (v29)
        goto LABEL_89;
      goto LABEL_41;
    }
    v30 = v2();
    if ((v30 & 0xC000000000000001) != 0)
    {
      v31 = MEMORY[0x1BCCB4394](v7, v30);
    }
    else
    {
      if (v7 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_90;
      v31 = *(_QWORD *)(v30 + 8 * v7 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v32 = *(_BYTE *)(v31 + 48);
    swift_release();
    v58 = v32;
    v57 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    {
      v29 = __OFSUB__(v25--, 1);
      if (v29)
      {
        __break(1u);
LABEL_97:
        v8 = MEMORY[0x1BCCB4394](0, v7);
        goto LABEL_8;
      }
      if (v25 <= 0)
        break;
    }
LABEL_41:
    v33 = v2();
    if (v33 >> 62)
      v34 = sub_1B8912FD8();
    else
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    ++v7;
    v24 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 >= v34)
      goto LABEL_49;
  }
  v51 = v2();
  if (v51 >> 62)
    v52 = sub_1B8912FD8();
  else
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  v53 = swift_bridgeObjectRelease();
  if (__OFSUB__(v52, 1))
  {
    __break(1u);
    goto LABEL_113;
  }
  if (v52 - 1 != v7)
  {
    LOBYTE(v4) = 0;
    goto LABEL_85;
  }
  v54 = ((uint64_t (*)(uint64_t))v2)(v53);
  v51 = v54;
  if ((v54 & 0xC000000000000001) != 0)
  {
LABEL_113:
    v55 = MEMORY[0x1BCCB4394](v7, v51);
LABEL_83:
    swift_bridgeObjectRelease();
    v56 = *(_BYTE *)(v55 + 48);
    swift_release();
    v58 = v56;
    v57 = 16;
    LOBYTE(v4) = static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57);
LABEL_85:
    v29 = __OFADD__(v7++, 1);
    if (!v29)
      goto LABEL_50;
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v55 = *(_QWORD *)(v54 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_83;
  }
  __break(1u);
}

uint64_t sub_1B888F57C(char a1)
{
  uint64_t v1;
  char v2;

  if ((a1 & 1) != 0 || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 536))() & 1) == 0)
  {
    if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 504))() & 1) != 0)
    {
      v2 = 0;
    }
    else
    {
      v2 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 592))() ^ 1;
    }
  }
  else
  {
    v2 = 1;
  }
  return v2 & 1;
}

BOOL sub_1B888F5E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
  if (v1 >> 62)
    v2 = sub_1B8912FD8();
  else
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v2 == 0;
}

uint64_t sub_1B888F644()
{
  uint64_t v0;
  uint64_t (*v1)(_BYTE *);
  uint64_t (*v2)(_BYTE *, _QWORD);
  _QWORD *v3;
  _QWORD *v4;
  _BYTE v6[32];

  v1 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v0 + 272);
  swift_retain();
  v2 = (uint64_t (*)(_BYTE *, _QWORD))v1(v6);
  v4 = v3;
  MEMORY[0x1BCCB40AC]();
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8912CCC();
  sub_1B8912CFC();
  sub_1B8912CA8();
  return v2(v6, 0);
}

uint64_t sub_1B888F6D8(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_BYTE *, _QWORD);
  _QWORD *v8;
  _QWORD *v9;
  int v10;
  unint64_t v11;
  uint64_t (*v12)(_BYTE *);
  uint64_t (*v13)(_BYTE *, _QWORD);
  uint64_t result;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, _QWORD);
  _QWORD *v17;
  _QWORD *v18;
  _BYTE v19[32];

  v3 = v2;
  v4 = a1;
  v5 = MEMORY[0x1E0DEE9D8];
  if (a2 - 1 >= 2)
  {
    if (a2)
      goto LABEL_3;
LABEL_7:
    v10 = 0;
    goto LABEL_8;
  }
  a1 = (*(uint64_t (**)(BOOL))(*(_QWORD *)a1 + 584))(a2 == 1);
  if ((a1 & 1) == 0)
    goto LABEL_7;
LABEL_3:
  type metadata accessor for CalculateExpression.Token();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_QWORD *)(v6 + 16) = 40;
  *(_QWORD *)(v6 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v6 + 48) = 15;
  *(_QWORD *)(v6 + 64) = v5;
  v7 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 272))(v19);
  v9 = v8;
  MEMORY[0x1BCCB40AC]();
  if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8912CCC();
  sub_1B8912CFC();
  sub_1B8912CA8();
  a1 = v7(v19, 0);
  v10 = 1;
LABEL_8:
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 256))(a1);
  v12 = *(uint64_t (**)(_BYTE *))(*(_QWORD *)v3 + 272);
  v13 = (uint64_t (*)(_BYTE *, _QWORD))v12(v19);
  sub_1B888F954(v11);
  result = v13(v19, 0);
  if (v10)
  {
    type metadata accessor for CalculateExpression.Token();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 40) = 0;
    *(_QWORD *)(v15 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v15 + 88) = 0u;
    *(_OWORD *)(v15 + 72) = 0u;
    *(_QWORD *)(v15 + 16) = 41;
    *(_QWORD *)(v15 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(_QWORD *)(v15 + 32) = 0;
    *(_QWORD *)(v15 + 40) = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v15 + 48) = 16;
    *(_QWORD *)(v15 + 64) = v5;
    v16 = (uint64_t (*)(_BYTE *, _QWORD))v12(v19);
    v18 = v17;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8912CCC();
    sub_1B8912CFC();
    sub_1B8912CA8();
    return v16(v19, 0);
  }
  return result;
}

uint64_t sub_1B888F954(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1BCCB43A0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1B8892F6C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1B8912CA8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B888FB0C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;

  v13 = 0;
  v14 = 0xE000000000000000;
  v1 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 280);
  v2 = v1(0);
  if (v2)
  {
    v12 = *(_BYTE *)(v2 + 48);
    v11 = 4;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v12, &v11))
    {
      sub_1B8912B58();
      v3 = 1;
    }
    else
    {
      v3 = 0;
    }
    swift_release();
  }
  else
  {
    v3 = 0;
  }
  v4 = v1(v3);
  if (v4)
  {
    v5 = v4;
    v12 = *(_BYTE *)(v4 + 48);
    v11 = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v12, &v11))
    {
      (*(void (**)(void))(*(_QWORD *)v5 + 136))();
      sub_1B8912B58();
      swift_bridgeObjectRelease();
      v6 = swift_release();
      v7 = v3 + 1;
      v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 256))(v6);
      if (v8 >> 62)
        v9 = sub_1B8912FD8();
      else
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v7 == v9)
        return v13;
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B888FC88(uint64_t a1, unint64_t *a2, unint64_t a3)
{
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v7;
  unint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t i;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(void);
  _BYTE *v106;
  void (*v107)(uint64_t, _QWORD);
  _QWORD v108[3];
  _QWORD v109[3];
  unint64_t v110;

  v5 = v3;
  v7 = (uint64_t)a2;
  v9 = *a2;
  v10 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 392);
  v11 = v10();
  v12 = v11;
  if ((v11 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(_QWORD *)(v11 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_134;
  }
  v13 = MEMORY[0x1BCCB4394](v9, v11);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1B8893B6C(a1, (uint64_t *)v7);
  v106 = (_BYTE *)a3;
  a3 = sub_1B88916A8(a1, (uint64_t *)v7, (_BYTE *)a3);
  v110 = a3;
  type metadata accessor for CalculateExpression.PlainExpression();
  v12 = swift_allocObject();
  swift_weakInit();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_WORD *)(v12 + 24) = 1;
  *(_QWORD *)(v12 + 32) = v4;
  *(_BYTE *)(v12 + 40) = 1;
  v14 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = 0;
  *(_QWORD *)(v12 + 64) = v14;
  *(_DWORD *)(v12 + 72) = 0;
  *(_BYTE *)(v12 + 76) = 0;
  v15 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 344);
  v16 = swift_bridgeObjectRetain();
  if ((v15(v16) & 1) == 0)
  {
    if (((*(uint64_t (**)(void))(*(_QWORD *)v13 + 360))() & 1) != 0)
    {
      v20 = swift_bridgeObjectRelease();
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 280))(v20);
      if (v21)
      {
        v22 = v21;
        if (((*(uint64_t (**)(void))(*(_QWORD *)v21 + 560))() & 1) == 0
          && ((*(uint64_t (**)(void))(*(_QWORD *)v22 + 568))() & 1) == 0)
        {
          v109[0] = 0;
          v5 = (void (*)(uint64_t))sub_1B88923AC(v22, v109, v106);
          if (a3 >> 62)
            goto LABEL_181;
          swift_retain();
          goto LABEL_64;
        }
        v21 = swift_release();
      }
      v19 = (void (*)(uint64_t))(a3 >> 62);
      if (a3 >> 62)
        goto LABEL_65;
      goto LABEL_17;
    }
    if (((*(uint64_t (**)(void))(*(_QWORD *)v13 + 368))() & 1) != 0)
    {
      v32 = (*(uint64_t (**)(void))(*(_QWORD *)v13 + 280))();
      if (v32)
      {
        v108[0] = 0;
        v104 = sub_1B88923AC(v32, v108, v106);
        v5 = (void (*)(uint64_t))(a3 >> 62);
        if (!(a3 >> 62))
        {
          if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          {
LABEL_166:
            v100 = swift_bridgeObjectRelease();
            *v106 = 1;
            v101 = ((uint64_t (*)(uint64_t))v10)(v100);
            if (v101 >> 62)
              goto LABEL_184;
            v94 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_168;
          }
LABEL_30:
          v7 = type metadata accessor for CalculateExpression.Token();
          v33 = swift_retain();
          v34 = sub_1B88931C8(v33, 0);
          swift_release();
          v35 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 600);
          v35(v34);
          swift_release();
          v107 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 608);
          v107(v104, 0);
          v36 = swift_allocObject();
          *(_QWORD *)(v36 + 40) = 0;
          *(_QWORD *)(v36 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v36 + 88) = 0u;
          *(_OWORD *)(v36 + 72) = 0u;
          *(_QWORD *)(v36 + 16) = 40;
          *(_QWORD *)(v36 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(_QWORD *)(v36 + 32) = 0;
          *(_QWORD *)(v36 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v36 + 48) = 15;
          *(_QWORD *)(v36 + 64) = v4;
          v35(v36);
          swift_release();
          if (v5)
          {
            swift_bridgeObjectRetain();
            v37 = sub_1B8912FD8();
            swift_bridgeObjectRelease();
          }
          else
          {
            v37 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v37)
          {
            v74 = v37 - 1;
            if (__OFSUB__(v37, 1))
              goto LABEL_183;
            if ((a3 & 0xC000000000000001) != 0)
            {
              v75 = MEMORY[0x1BCCB4394](v74, a3);
              goto LABEL_105;
            }
            if ((v74 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v74 < *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v75 = *(_QWORD *)(a3 + 8 * v74 + 32);
              swift_retain();
LABEL_105:
              swift_bridgeObjectRelease();
              v107(v75, 0);
              swift_release();
              v76 = swift_allocObject();
              *(_QWORD *)(v76 + 40) = 0;
              *(_QWORD *)(v76 + 32) = 0;
              swift_weakInit();
              *(_OWORD *)(v76 + 88) = 0u;
              *(_OWORD *)(v76 + 72) = 0u;
              *(_QWORD *)(v76 + 16) = 41;
              *(_QWORD *)(v76 + 24) = 0xE100000000000000;
              swift_beginAccess();
              *(_QWORD *)(v76 + 32) = 0;
              *(_QWORD *)(v76 + 40) = 0;
              swift_bridgeObjectRelease();
              *(_BYTE *)(v76 + 48) = 16;
              *(_QWORD *)(v76 + 64) = MEMORY[0x1E0DEE9D8];
              v35(v76);
              swift_release();
              swift_release();
              goto LABEL_150;
            }
            __break(1u);
            goto LABEL_188;
          }
LABEL_195:
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
LABEL_165:
        swift_bridgeObjectRetain();
        v99 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        if (v99 != 1)
          goto LABEL_166;
        goto LABEL_30;
      }
    }
    if (!(a3 >> 62))
    {
      v42 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v42 != 1)
      {
LABEL_141:
        v21 = swift_bridgeObjectRelease();
        if (v42)
          goto LABEL_142;
        type metadata accessor for CalculateExpression.Token();
        v95 = swift_retain();
        v96 = sub_1B88931C8(v95, 0);
        swift_release();
        v10 = *(uint64_t (**)(void))(*(_QWORD *)v12 + 600);
        ((void (*)(uint64_t))v10)(v96);
        swift_release();
        v97 = swift_allocObject();
        *(_QWORD *)(v97 + 40) = 0;
        *(_QWORD *)(v97 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v97 + 88) = 0u;
        *(_OWORD *)(v97 + 72) = 0u;
        *(_QWORD *)(v97 + 16) = 40;
        *(_QWORD *)(v97 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(_QWORD *)(v97 + 32) = 0;
        *(_QWORD *)(v97 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v97 + 48) = 15;
        *(_QWORD *)(v97 + 64) = v4;
        ((void (*)(uint64_t))v10)(v97);
        swift_release();
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 40) = 0;
        *(_QWORD *)(v31 + 32) = 0;
        v47 = (_QWORD *)(v31 + 32);
        swift_weakInit();
        *(_OWORD *)(v31 + 88) = 0u;
        *(_OWORD *)(v31 + 72) = 0u;
        *(_QWORD *)(v31 + 16) = 41;
        *(_QWORD *)(v31 + 24) = 0xE100000000000000;
        goto LABEL_148;
      }
LABEL_45:
      v7 = type metadata accessor for CalculateExpression.Token();
      v43 = swift_retain();
      v44 = sub_1B88931C8(v43, 0);
      swift_release();
      v10 = *(uint64_t (**)(void))(*(_QWORD *)v12 + 600);
      ((void (*)(uint64_t))v10)(v44);
      swift_release();
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 40) = 0;
      *(_QWORD *)(v45 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v45 + 88) = 0u;
      *(_OWORD *)(v45 + 72) = 0u;
      *(_QWORD *)(v45 + 16) = 40;
      *(_QWORD *)(v45 + 24) = 0xE100000000000000;
      swift_beginAccess();
      *(_QWORD *)(v45 + 32) = 0;
      *(_QWORD *)(v45 + 40) = 0;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v45 + 48) = 15;
      *(_QWORD *)(v45 + 64) = v4;
      ((void (*)(uint64_t))v10)(v45);
      swift_release();
      if ((a3 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v46 = *(_QWORD *)(a3 + 32);
          swift_retain();
LABEL_48:
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 608))(v46, 0);
          swift_release();
          v31 = swift_allocObject();
          *(_QWORD *)(v31 + 40) = 0;
          *(_QWORD *)(v31 + 32) = 0;
          v47 = (_QWORD *)(v31 + 32);
          swift_weakInit();
          *(_OWORD *)(v31 + 88) = 0u;
          *(_OWORD *)(v31 + 72) = 0u;
          *(_QWORD *)(v31 + 16) = 41;
          *(_QWORD *)(v31 + 24) = 0xE100000000000000;
LABEL_148:
          swift_beginAccess();
          *v47 = 0;
          *(_QWORD *)(v31 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v31 + 48) = 16;
          *(_QWORD *)(v31 + 64) = v4;
LABEL_149:
          ((void (*)(uint64_t))v10)(v31);
          goto LABEL_150;
        }
        __break(1u);
        goto LABEL_165;
      }
LABEL_163:
      v46 = MEMORY[0x1BCCB4394](0, a3);
      goto LABEL_48;
    }
LABEL_140:
    swift_bridgeObjectRetain();
    v42 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v42 != 1)
      goto LABEL_141;
    goto LABEL_45;
  }
  v17 = swift_bridgeObjectRelease();
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 256))(v17);
  v105 = v10;
  if (v18)
  {
    v19 = (void (*)(uint64_t))v18;
    if (((*(uint64_t (**)(void))(*(_QWORD *)v18 + 560))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v19 + 568))() & 1) != 0)
    {
      v10 = (uint64_t (*)(void))v4;
      v18 = swift_release();
      v4 = a3 >> 62;
      if (a3 >> 62)
        goto LABEL_52;
    }
    else
    {
      v109[0] = 0;
      v5 = (void (*)(uint64_t))sub_1B88923AC(v19, v109, v106);
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        v102 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        if (v102 < 0)
        {
          __break(1u);
          goto LABEL_171;
        }
      }
      else
      {
        swift_retain();
      }
      v10 = (uint64_t (*)(void))v4;
      sub_1B8892CD8(0, 0, (uint64_t)v5, (void (*)(uint64_t))type metadata accessor for CalculateExpression.PlainExpression);
      swift_release();
      v18 = swift_release();
      a3 = v110;
      v4 = v110 >> 62;
      if (v110 >> 62)
        goto LABEL_52;
    }
  }
  else
  {
    v10 = (uint64_t (*)(void))v4;
    v4 = a3 >> 62;
    if (a3 >> 62)
    {
LABEL_52:
      swift_bridgeObjectRetain();
      v48 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v48 == 1)
        goto LABEL_34;
      swift_bridgeObjectRetain();
      v38 = sub_1B8912FD8();
      v18 = swift_bridgeObjectRelease();
      goto LABEL_54;
    }
  }
  v38 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v38 == 1)
    goto LABEL_34;
LABEL_54:
  if (v38 != 2)
    goto LABEL_76;
  if ((a3 & 0xC000000000000001) != 0)
    goto LABEL_159;
  if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_161;
  }
  v5 = *(void (**)(uint64_t))(a3 + 32);
  for (i = swift_retain(); ; v5 = (void (*)(uint64_t))i)
  {
    v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 616))(i);
    v52 = v51;
    v18 = swift_release();
    if (v52)
    {
      if (v50 == 50 && v52 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        type metadata accessor for CalculateExpression.Token();
        v7 = swift_allocObject();
        *(_QWORD *)(v7 + 40) = 0;
        *(_QWORD *)(v7 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v7 + 88) = 0u;
        *(_OWORD *)(v7 + 72) = 0u;
        *(_QWORD *)(v7 + 16) = 10127586;
        *(_QWORD *)(v7 + 24) = 0xA300000000000000;
        swift_beginAccess();
        *(_QWORD *)(v7 + 32) = 0;
        *(_QWORD *)(v7 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v7 + 48) = 10;
        *(_QWORD *)(v7 + 64) = v10;
        (*(void (**)(uint64_t))(*(_QWORD *)v12 + 600))(v7);
        swift_release();
        if (!v4)
        {
          v39 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v39)
            goto LABEL_36;
          goto LABEL_135;
        }
LABEL_134:
        swift_bridgeObjectRetain();
        v39 = sub_1B8912FD8();
        if (v39)
        {
LABEL_36:
          v40 = v39 - 1;
          if (!__OFSUB__(v39, 1))
          {
            if ((a3 & 0xC000000000000001) == 0)
            {
              if ((v40 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v40 < *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v41 = *(_QWORD *)(a3 + 8 * v40 + 32);
                swift_retain();
LABEL_41:
                swift_bridgeObjectRelease();
                goto LABEL_42;
              }
              __break(1u);
              goto LABEL_140;
            }
LABEL_137:
            v41 = MEMORY[0x1BCCB4394](v40, a3);
            goto LABEL_41;
          }
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
LABEL_135:
        v40 = swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_136;
      }
      v57 = sub_1B8913050();
      v18 = swift_bridgeObjectRelease();
      if ((v57 & 1) != 0)
        goto LABEL_34;
    }
LABEL_76:
    if (v4)
    {
      swift_bridgeObjectRetain();
      v59 = sub_1B8912FD8();
      v18 = swift_bridgeObjectRelease();
      if (v59 != 2)
      {
LABEL_78:
        *v106 = 1;
        v58 = ((uint64_t (*)(uint64_t))v105)(v18);
LABEL_143:
        if (v58 >> 62)
          v94 = sub_1B8912FD8();
        else
          v94 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        goto LABEL_146;
      }
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) != 2)
    {
      goto LABEL_78;
    }
    v5 = (void (*)(uint64_t))v10;
    v10 = (uint64_t (*)(void))(a3 & 0xC000000000000001);
    if ((a3 & 0xC000000000000001) != 0)
    {
LABEL_161:
      v61 = MEMORY[0x1BCCB4394](0, a3);
      v60 = v61;
    }
    else
    {
      if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_163;
      }
      v60 = *(_QWORD *)(a3 + 32);
      v61 = swift_retain();
    }
    v62 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 616))(v61);
    v64 = v63;
    swift_release();
    if (!v64)
      goto LABEL_91;
    if (v62 == 51 && v64 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v65 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v65 & 1) == 0)
      {
LABEL_91:
        type metadata accessor for CalculateExpression.Token();
        v66 = swift_allocObject();
        *(_QWORD *)(v66 + 40) = 0;
        *(_QWORD *)(v66 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v66 + 88) = 0u;
        *(_OWORD *)(v66 + 72) = 0u;
        *(_QWORD *)(v66 + 16) = 1953460082;
        *(_QWORD *)(v66 + 24) = 0xE400000000000000;
        swift_beginAccess();
        *(_QWORD *)(v66 + 32) = 0;
        *(_QWORD *)(v66 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v66 + 48) = 10;
        *(_QWORD *)(v66 + 64) = v5;
        v19 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 600);
        v19(v66);
        swift_release();
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 40) = 0;
        *(_QWORD *)(v67 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v67 + 88) = 0u;
        *(_OWORD *)(v67 + 72) = 0u;
        *(_QWORD *)(v67 + 16) = 40;
        *(_QWORD *)(v67 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(_QWORD *)(v67 + 32) = 0;
        *(_QWORD *)(v67 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v67 + 48) = 15;
        *(_QWORD *)(v67 + 64) = v5;
        v19(v67);
        swift_release();
        v106 = v10;
        if (v10)
          goto LABEL_173;
        if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
        {
          v68 = *(_QWORD *)(a3 + 40);
          swift_retain();
          goto LABEL_94;
        }
        __break(1u);
        goto LABEL_175;
      }
    }
    type metadata accessor for CalculateExpression.Token();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 40) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v7 + 88) = 0u;
    *(_OWORD *)(v7 + 72) = 0u;
    *(_QWORD *)(v7 + 16) = 10193122;
    *(_QWORD *)(v7 + 24) = 0xA300000000000000;
    swift_beginAccess();
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v7 + 48) = 10;
    *(_QWORD *)(v7 + 64) = v5;
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 600))(v7);
    swift_release();
    if (v10)
      goto LABEL_179;
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v41 = *(_QWORD *)(a3 + 40);
      swift_retain();
      goto LABEL_42;
    }
    __break(1u);
LABEL_181:
    swift_bridgeObjectRetain();
    swift_retain();
    v103 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v103 < 0)
      break;
LABEL_64:
    sub_1B8892CD8(0, 0, (uint64_t)v5, (void (*)(uint64_t))type metadata accessor for CalculateExpression.PlainExpression);
    swift_release();
    v21 = swift_release();
    a3 = v110;
    v19 = (void (*)(uint64_t))(v110 >> 62);
    if (v110 >> 62)
    {
LABEL_65:
      swift_bridgeObjectRetain();
      v5 = (void (*)(uint64_t))sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v5 == (void (*)(uint64_t))1)
        goto LABEL_18;
      swift_bridgeObjectRetain();
      v23 = sub_1B8912FD8();
      v21 = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_17:
      v23 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23 == 1)
        goto LABEL_18;
    }
    if (v23 != 2)
      goto LABEL_107;
    if ((a3 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v53 = *(_QWORD *)(a3 + 32);
        v54 = swift_retain();
        goto LABEL_71;
      }
      __break(1u);
LABEL_173:
      v68 = MEMORY[0x1BCCB4394](1, a3);
LABEL_94:
      v10 = *(uint64_t (**)(void))(*(_QWORD *)v12 + 608);
      ((void (*)(uint64_t, _QWORD))v10)(v68, 0);
      swift_release();
      v69 = swift_allocObject();
      *(_QWORD *)(v69 + 40) = 0;
      *(_QWORD *)(v69 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v69 + 88) = 0u;
      *(_OWORD *)(v69 + 72) = 0u;
      v70 = 0xE100000000000000;
      *(_QWORD *)(v69 + 16) = 44;
      *(_QWORD *)(v69 + 24) = 0xE100000000000000;
      swift_beginAccess();
      *(_QWORD *)(v69 + 32) = 0;
      *(_QWORD *)(v69 + 40) = 0;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v69 + 48) = 11;
      *(_QWORD *)(v69 + 64) = v5;
      v19(v69);
      swift_release();
      v71 = swift_allocObject();
      *(_QWORD *)(v71 + 40) = 0;
      *(_QWORD *)(v71 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v71 + 88) = 0u;
      *(_OWORD *)(v71 + 72) = 0u;
      *(_QWORD *)(v71 + 16) = 32;
      *(_QWORD *)(v71 + 24) = 0xE100000000000000;
      swift_beginAccess();
      *(_QWORD *)(v71 + 32) = 0;
      *(_QWORD *)(v71 + 40) = 0;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v71 + 48) = 17;
      *(_QWORD *)(v71 + 64) = v5;
      v19(v71);
      swift_release();
      if (!v106)
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_177;
        }
        v72 = *(_QWORD *)(a3 + 32);
        swift_retain();
LABEL_97:
        ((void (*)(uint64_t, _QWORD))v10)(v72, 0);
        swift_release();
        v73 = swift_allocObject();
        *(_QWORD *)(v73 + 40) = 0;
        *(_QWORD *)(v73 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v73 + 88) = 0u;
        *(_OWORD *)(v73 + 72) = 0u;
        *(_QWORD *)(v73 + 16) = 41;
        *(_QWORD *)(v73 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(_QWORD *)(v73 + 32) = 0;
        *(_QWORD *)(v73 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v73 + 48) = 16;
        *(_QWORD *)(v73 + 64) = v5;
        v19(v73);
LABEL_150:
        swift_release();
        swift_release();
        goto LABEL_151;
      }
LABEL_175:
      v72 = MEMORY[0x1BCCB4394](0, a3);
      goto LABEL_97;
    }
LABEL_171:
    v54 = MEMORY[0x1BCCB4394](0, a3);
    v53 = v54;
LABEL_71:
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 616))(v54);
    v56 = v55;
    v21 = swift_release();
    if (!v56)
      goto LABEL_107;
    if (v4 == 12337 && v56 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v77 = sub_1B8913050();
    v21 = swift_bridgeObjectRelease();
    if ((v77 & 1) == 0)
    {
LABEL_107:
      if (v19)
      {
        swift_bridgeObjectRetain();
        v78 = sub_1B8912FD8();
        v21 = swift_bridgeObjectRelease();
        if (v78 != 2)
        {
LABEL_142:
          *v106 = 1;
          v58 = ((uint64_t (*)(uint64_t))v10)(v21);
          goto LABEL_143;
        }
      }
      else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) != 2)
      {
        goto LABEL_142;
      }
      v70 = a3 & 0xC000000000000001;
      if ((a3 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_179:
          v41 = MEMORY[0x1BCCB4394](1, a3);
LABEL_42:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 608))(v41, 2);
          goto LABEL_150;
        }
        v79 = *(_QWORD *)(a3 + 32);
        v80 = swift_retain();
LABEL_114:
        v81 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v79 + 616))(v80);
        v83 = v82;
        swift_release();
        swift_bridgeObjectRelease();
        type metadata accessor for CalculateExpression.Token();
        v84 = swift_retain();
        v85 = sub_1B88931C8(v84, 0);
        swift_release();
        v5 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 600);
        v5(v85);
        swift_release();
        if (v83)
        {
          if (v70)
          {
            v86 = MEMORY[0x1BCCB4394](0, a3);
            goto LABEL_126;
          }
          if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_194;
          v86 = *(_QWORD *)(a3 + 32);
          swift_retain();
LABEL_126:
          v35 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 608);
          ((void (*)(uint64_t, _QWORD))v35)(v86, 0);
          swift_release();
          v81 = swift_allocObject();
          *(_QWORD *)(v81 + 40) = 0;
          *(_QWORD *)(v81 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v81 + 88) = 0u;
          *(_OWORD *)(v81 + 72) = 0u;
          *(_QWORD *)(v81 + 16) = 40;
          *(_QWORD *)(v81 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(_QWORD *)(v81 + 32) = 0;
          *(_QWORD *)(v81 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v81 + 48) = 15;
          *(_QWORD *)(v81 + 64) = MEMORY[0x1E0DEE9D8];
          v5(v81);
          swift_release();
          if (v70)
          {
LABEL_188:
            v93 = MEMORY[0x1BCCB4394](1, a3);
            goto LABEL_129;
          }
          if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
          {
            v93 = *(_QWORD *)(a3 + 40);
            swift_retain();
LABEL_129:
            v85 = MEMORY[0x1E0DEE9D8];
            ((void (*)(uint64_t, _QWORD))v35)(v93, 0);
            swift_release();
            v92 = swift_allocObject();
            *(_QWORD *)(v92 + 40) = 0;
            *(_QWORD *)(v92 + 32) = 0;
            swift_weakInit();
            *(_OWORD *)(v92 + 88) = 0u;
            *(_OWORD *)(v92 + 72) = 0u;
            *(_QWORD *)(v92 + 16) = 41;
            *(_QWORD *)(v92 + 24) = 0xE100000000000000;
            swift_beginAccess();
            *(_QWORD *)(v92 + 32) = 0;
            goto LABEL_130;
          }
          __break(1u);
LABEL_190:
          v88 = MEMORY[0x1BCCB4394](0, a3);
LABEL_120:
          v106 = *(_BYTE **)(*(_QWORD *)v12 + 608);
          ((void (*)(uint64_t, _QWORD))v106)(v88, 0);
          swift_release();
          v89 = swift_allocObject();
          *(_QWORD *)(v89 + 32) = v81;
          *(_QWORD *)(v89 + 40) = 0;
          swift_weakInit();
          *(_QWORD *)(v89 + 72) = v81;
          *(_QWORD *)(v89 + 80) = 0;
          *(_QWORD *)(v89 + 88) = v81;
          *(_QWORD *)(v89 + 96) = 0;
          *(_QWORD *)(v89 + 16) = 44;
          *(_QWORD *)(v89 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(_QWORD *)(v89 + 32) = v81;
          *(_QWORD *)(v89 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v89 + 48) = 11;
          v85 = MEMORY[0x1E0DEE9D8];
          *(_QWORD *)(v89 + 64) = MEMORY[0x1E0DEE9D8];
          v5(v89);
          swift_release();
          v90 = swift_allocObject();
          *(_QWORD *)(v90 + 32) = v81;
          *(_QWORD *)(v90 + 40) = 0;
          swift_weakInit();
          *(_QWORD *)(v90 + 72) = v81;
          *(_QWORD *)(v90 + 80) = 0;
          *(_QWORD *)(v90 + 88) = v81;
          *(_QWORD *)(v90 + 96) = 0;
          *(_QWORD *)(v90 + 16) = 32;
          *(_QWORD *)(v90 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(_QWORD *)(v90 + 32) = v81;
          *(_QWORD *)(v90 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v90 + 48) = 17;
          *(_QWORD *)(v90 + 64) = v85;
          v5(v90);
          swift_release();
          if (!v70)
          {
            if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
            {
              v91 = *(_QWORD *)(a3 + 40);
              swift_retain();
LABEL_123:
              ((void (*)(uint64_t, _QWORD))v106)(v91, 0);
              swift_release();
              v92 = swift_allocObject();
              *(_QWORD *)(v92 + 32) = v81;
              *(_QWORD *)(v92 + 40) = 0;
              swift_weakInit();
              *(_QWORD *)(v92 + 72) = v81;
              *(_QWORD *)(v92 + 80) = 0;
              *(_QWORD *)(v92 + 88) = v81;
              *(_QWORD *)(v92 + 96) = 0;
              *(_QWORD *)(v92 + 16) = 41;
              *(_QWORD *)(v92 + 24) = 0xE100000000000000;
              swift_beginAccess();
              *(_QWORD *)(v92 + 32) = v81;
LABEL_130:
              *(_QWORD *)(v92 + 40) = 0;
              swift_bridgeObjectRelease();
              *(_BYTE *)(v92 + 48) = 16;
              *(_QWORD *)(v92 + 64) = v85;
              v5(v92);
              goto LABEL_150;
            }
            __break(1u);
LABEL_194:
            __break(1u);
            goto LABEL_195;
          }
        }
        else
        {
          v87 = swift_allocObject();
          *(_QWORD *)(v87 + 32) = v81;
          *(_QWORD *)(v87 + 40) = 0;
          swift_weakInit();
          *(_QWORD *)(v87 + 72) = v81;
          *(_QWORD *)(v87 + 80) = 0;
          *(_QWORD *)(v87 + 88) = v81;
          *(_QWORD *)(v87 + 96) = 0;
          *(_QWORD *)(v87 + 16) = 40;
          *(_QWORD *)(v87 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(_QWORD *)(v87 + 32) = v81;
          *(_QWORD *)(v87 + 40) = 0;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v87 + 48) = 15;
          *(_QWORD *)(v87 + 64) = MEMORY[0x1E0DEE9D8];
          v5(v87);
          swift_release();
          if (v70)
            goto LABEL_190;
          if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v88 = *(_QWORD *)(a3 + 32);
            swift_retain();
            goto LABEL_120;
          }
          __break(1u);
        }
        v91 = MEMORY[0x1BCCB4394](1, a3);
        goto LABEL_123;
      }
LABEL_177:
      v80 = MEMORY[0x1BCCB4394](0, a3);
      v79 = v80;
      goto LABEL_114;
    }
LABEL_18:
    v7 = type metadata accessor for CalculateExpression.Token();
    v24 = swift_retain();
    v25 = sub_1B88931C8(v24, 0);
    swift_release();
    v10 = *(uint64_t (**)(void))(*(_QWORD *)v12 + 600);
    ((void (*)(uint64_t))v10)(v25);
    swift_release();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 40) = 0;
    *(_QWORD *)(v26 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v26 + 88) = 0u;
    *(_OWORD *)(v26 + 72) = 0u;
    *(_QWORD *)(v26 + 16) = 40;
    *(_QWORD *)(v26 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(_QWORD *)(v26 + 32) = 0;
    *(_QWORD *)(v26 + 40) = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v26 + 48) = 15;
    v27 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 64) = MEMORY[0x1E0DEE9D8];
    ((void (*)(uint64_t))v10)(v26);
    swift_release();
    if (v19)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1B8912FD8();
      if (!v28)
      {
LABEL_154:
        v29 = swift_bridgeObjectRelease();
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        v30 = MEMORY[0x1BCCB4394](v29, a3);
LABEL_25:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 608))(v30, 0);
        swift_release();
        v31 = swift_allocObject();
        *(_QWORD *)(v31 + 40) = 0;
        *(_QWORD *)(v31 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v31 + 88) = 0u;
        *(_OWORD *)(v31 + 72) = 0u;
        *(_QWORD *)(v31 + 16) = 41;
        *(_QWORD *)(v31 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(_QWORD *)(v31 + 32) = 0;
        *(_QWORD *)(v31 + 40) = 0;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v31 + 48) = 16;
        *(_QWORD *)(v31 + 64) = v27;
        goto LABEL_149;
      }
    }
    else
    {
      v28 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v28)
        goto LABEL_154;
    }
    v29 = v28 - 1;
    if (__OFSUB__(v28, 1))
      goto LABEL_155;
    if ((a3 & 0xC000000000000001) != 0)
      goto LABEL_156;
    if ((v29 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v29 < *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v30 = *(_QWORD *)(a3 + 8 * v29 + 32);
      swift_retain();
      goto LABEL_25;
    }
    __break(1u);
LABEL_159:
    i = MEMORY[0x1BCCB4394](0, a3);
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  v94 = sub_1B8912FD8();
LABEL_168:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_146:
  swift_release();
  *(_QWORD *)v7 = v94;
LABEL_151:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B88916A8(uint64_t a1, uint64_t *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t (*v10)(void);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;

  v5 = v3;
  v9 = *a2;
  v10 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 392);
  v11 = v10();
  if (v11 >> 62)
    v12 = sub_1B8912FD8();
  else
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = swift_bridgeObjectRelease();
  if (v9 >= v12)
    goto LABEL_18;
  v14 = ((uint64_t (*)(uint64_t))v10)(v13);
  if ((v14 & 0xC000000000000001) == 0)
  {
    if (v9 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v9 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v15 = *(_QWORD *)(v14 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_25;
  }
  v15 = MEMORY[0x1BCCB4394](v9, v14);
LABEL_8:
  swift_bridgeObjectRelease();
  v4 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v16 = *(_BYTE *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v28 = v16;
  v27 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v28, &v27))
  {
LABEL_18:
    v23 = sub_1B8891CD0(a1, a2, (uint64_t)a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v24 + 32) = v23;
    v29 = v24;
    sub_1B8912CA8();
    return v29;
  }
  sub_1B8893B6C(a1, a2);
  v5 = sub_1B889193C(a1, a2, (uint64_t)a3);
  v9 = *a2;
  v17 = v10();
  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_25:
  v18 = sub_1B8912FD8();
LABEL_11:
  v19 = swift_bridgeObjectRelease();
  if (v9 >= v18)
    goto LABEL_20;
  result = ((uint64_t (*)(uint64_t))v10)(v19);
  if ((result & 0xC000000000000001) != 0)
  {
    v21 = MEMORY[0x1BCCB4394](v9, result);
LABEL_16:
    swift_bridgeObjectRelease();
    v22 = *(_BYTE *)(v21 + *v4);
    swift_release();
    v26 = v22;
    v25 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v26, &v25))
    {
      sub_1B8893B6C(a1, a2);
      return v5;
    }
LABEL_20:
    *a3 = 1;
    return v5;
  }
  if (v9 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(_QWORD *)(result + 8 * v9 + 32);
    swift_retain();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B889193C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  uint64_t v35;

  v35 = MEMORY[0x1E0DEE9D8];
  ((void (*)(void))sub_1B88923AC)();
  v6 = swift_retain();
  MEMORY[0x1BCCB40AC](v6);
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_40;
  while (1)
  {
    v7 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 392);
    sub_1B8912CFC();
    v8 = sub_1B8912CA8();
    v9 = *a2;
    v10 = ((uint64_t (*)(uint64_t))v7)(v8);
    v11 = v10 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = swift_bridgeObjectRelease();
    if (v9 >= v11)
      break;
    while (1)
    {
      v13 = ((uint64_t (*)(uint64_t))v7)(v12);
      if ((v13 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x1BCCB4394](v9, v13);
        goto LABEL_9;
      }
      if (v9 < 0)
        break;
      if ((unint64_t)v9 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_37;
      v14 = *(_QWORD *)(v13 + 8 * v9 + 32);
      swift_retain();
LABEL_9:
      swift_bridgeObjectRelease();
      v15 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      v34 = v15;
      v33 = 11;
      if (!static CalculateExpression.TokenType.== infix(_:_:)(&v34, &v33))
        goto LABEL_35;
      v16 = v7();
      if (v16 >> 62)
        v17 = sub_1B8912FD8();
      else
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      v18 = swift_bridgeObjectRelease();
      if (v9 < v17)
        *a2 = ++v9;
      v19 = ((uint64_t (*)(uint64_t))v7)(v18);
      if (v19 >> 62)
        v20 = sub_1B8912FD8();
      else
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = swift_bridgeObjectRelease();
      if (v9 >= v20)
      {
        swift_release();
      }
      else
      {
        v22 = ((uint64_t (*)(uint64_t))v7)(v21);
        if ((v22 & 0xC000000000000001) != 0)
        {
          v23 = MEMORY[0x1BCCB4394](v9, v22);
        }
        else
        {
          if (v9 < 0)
            goto LABEL_38;
          if ((unint64_t)v9 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_39;
          v23 = *(_QWORD *)(v22 + 8 * v9 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v24 = *(_BYTE *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        v32 = v24;
        v31 = 17;
        v25 = static CalculateExpression.TokenType.== infix(_:_:)(&v32, &v31);
        swift_release();
        if (v25)
          *a2 = v9 + 1;
      }
      sub_1B88923AC(a1, a2, a3);
      v26 = swift_retain();
      MEMORY[0x1BCCB40AC](v26);
      if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B8912CCC();
      sub_1B8912CFC();
      v27 = sub_1B8912CA8();
      v9 = *a2;
      v28 = ((uint64_t (*)(uint64_t))v7)(v27);
      if (v28 >> 62)
        v29 = sub_1B8912FD8();
      else
        v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      v12 = swift_bridgeObjectRelease();
      if (v9 >= v29)
        goto LABEL_35;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    sub_1B8912CCC();
  }
LABEL_35:
  swift_release();
  return v35;
}

uint64_t sub_1B8891CD0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(void);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unsigned __int8 v51;
  unsigned __int8 v52[2];
  unsigned __int8 v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;

  v4 = v3;
  type metadata accessor for CalculateExpression.PlainExpression();
  v8 = swift_allocObject();
  v9 = swift_weakInit();
  *(_WORD *)(v8 + 24) = 1;
  *(_QWORD *)(v8 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v8 + 40) = 1;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = MEMORY[0x1E0DEE9E8];
  *(_DWORD *)(v8 + 72) = 0;
  *(_BYTE *)(v8 + 76) = 0;
  v10 = *a2;
  v11 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 392);
  v12 = ((uint64_t (*)(uint64_t))v11)(v9);
  if (v12 >> 62)
    v13 = sub_1B8912FD8();
  else
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = swift_bridgeObjectRelease();
  if ((uint64_t)v10 >= v13)
    return v8;
  v15 = ((uint64_t (*)(uint64_t))v11)(v14);
  v16 = v15;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(_QWORD *)(v15 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_62;
  }
  v17 = MEMORY[0x1BCCB4394](v10, v15);
LABEL_8:
  swift_bridgeObjectRelease();
  v18 = *(_BYTE *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v58 = v18;
  v57 = 4;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v58, &v57))
    goto LABEL_16;
  v19 = v11();
  if ((v19 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v20 = a2;
      v21 = *(_QWORD *)(v19 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_69;
  }
  v20 = a2;
  v21 = MEMORY[0x1BCCB4394](v10, v19);
LABEL_13:
  swift_bridgeObjectRelease();
  type metadata accessor for CalculateExpression.Token();
  v22 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))();
  v23 = sub_1B88931C8(v21, v22);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)v8 + 600))(v23);
  swift_release();
  a2 = v20;
  v24 = sub_1B8893B6C(a1, v20);
  v10 = *v20;
  v25 = ((uint64_t (*)(uint64_t))v11)(v24);
  if (!(v25 >> 62))
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_69:
  v26 = sub_1B8912FD8();
LABEL_15:
  swift_bridgeObjectRelease();
  if ((uint64_t)v10 >= v26)
    return v8;
LABEL_16:
  v27 = v11();
  v16 = v27;
  if ((v27 & 0xC000000000000001) == 0)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v28 = *(_QWORD *)(v27 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_65;
  }
LABEL_62:
  v28 = MEMORY[0x1BCCB4394](v10, v16);
LABEL_20:
  swift_bridgeObjectRelease();
  v29 = *(_BYTE *)(v28 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v56 = v29;
  v55 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v56, &v55))
  {
    v54 = v29;
    v53 = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v54, &v53))
    {
      sub_1B888FC88(a1, a2, a3);
      (*(void (**)(void))(*(_QWORD *)v8 + 608))();
      v35 = swift_release();
    }
    else
    {
      v52[1] = v29;
      v35 = CalculateExpression.TokenType.isOperand.getter();
      if ((v35 & 1) != 0)
      {
        type metadata accessor for CalculateExpression.Token();
        v36 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 176);
        v37 = swift_retain();
        v38 = v36(v37);
        v39 = sub_1B88931C8(v28, v38);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 600))(v39);
        swift_release();
        v35 = sub_1B8893B6C(a1, a2);
      }
      else
      {
        *(_BYTE *)a3 = 1;
      }
    }
    goto LABEL_43;
  }
  v30 = sub_1B88916A8(a1, a2, a3);
  if (!((unint64_t)v30 >> 62))
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31 == 1)
      goto LABEL_24;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v31 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v31 != 1)
LABEL_23:
    *(_BYTE *)a3 = 1;
LABEL_24:
  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v31 = v30;
    else
      v31 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    a3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (a3)
      goto LABEL_26;
LABEL_39:
    v35 = swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  a3 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!a3)
    goto LABEL_39;
LABEL_26:
  v50 = a2;
  if (a3 < 1)
    goto LABEL_75;
  v32 = 0;
  v33 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)v8 + 608);
  do
  {
    if ((v30 & 0xC000000000000001) != 0)
    {
      v34 = MEMORY[0x1BCCB4394](v32, v30);
    }
    else
    {
      v34 = *(_QWORD *)(v30 + 8 * v32 + 32);
      swift_retain();
    }
    ++v32;
    v33(v34, 0);
    swift_release();
  }
  while (a3 != v32);
  v35 = swift_bridgeObjectRelease();
  a2 = v50;
LABEL_43:
  a3 = *a2;
  v40 = ((uint64_t (*)(uint64_t))v11)(v35);
  if (!(v40 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_45;
  }
LABEL_65:
  v41 = sub_1B8912FD8();
LABEL_45:
  v42 = swift_bridgeObjectRelease();
  if (a3 >= v41)
  {
LABEL_56:
    swift_release();
    return v8;
  }
  v43 = ((uint64_t (*)(uint64_t))v11)(v42);
  v31 = v43;
  if ((v43 & 0xC000000000000001) == 0)
  {
    if (a3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)a3 < *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v44 = *(_QWORD *)(v43 + 8 * a3 + 32);
      swift_retain();
      goto LABEL_50;
    }
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v44 = MEMORY[0x1BCCB4394](a3, v43);
LABEL_50:
  swift_bridgeObjectRelease();
  v45 = *(_BYTE *)(v44 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v52[0] = v45;
  v51 = 8;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(v52, &v51))
    goto LABEL_56;
  result = v11();
  v31 = result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_76:
    v47 = MEMORY[0x1BCCB4394](a3, v31);
    goto LABEL_55;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)a3 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v47 = *(_QWORD *)(result + 8 * a3 + 32);
    swift_retain();
LABEL_55:
    swift_bridgeObjectRelease();
    type metadata accessor for CalculateExpression.Token();
    v48 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))();
    v49 = sub_1B88931C8(v47, v48);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 600))(v49);
    swift_release();
    sub_1B8893B6C(a1, a2);
    goto LABEL_56;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B88923AC(uint64_t a1, unint64_t *a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unsigned __int8 *, _QWORD);
  uint64_t v22;
  uint64_t (*v23)(unsigned __int8 *);
  void (*v24)(unsigned __int8 *, _QWORD);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(unsigned __int8 *, _QWORD);
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t result;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unsigned __int8 v58[32];

  type metadata accessor for CalculateExpression.PlainExpression();
  v6 = swift_allocObject();
  v7 = swift_weakInit();
  *(_WORD *)(v6 + 24) = 1;
  *(_QWORD *)(v6 + 32) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v6 + 40) = 1;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 64) = MEMORY[0x1E0DEE9E8];
  *(_DWORD *)(v6 + 72) = 0;
  *(_BYTE *)(v6 + 76) = 0;
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 392);
  v9 = *a2;
  v10 = v8(v7);
  if (v10 >> 62)
LABEL_68:
    v11 = sub_1B8912FD8();
  else
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = swift_bridgeObjectRelease();
  if (v9 >= v11)
    return v6;
  v13 = 0;
  v53 = v8;
  v54 = (uint64_t *)a2;
  v52 = a3;
  while (1)
  {
    v14 = v8(v12);
    if ((v14 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1BCCB4394](v9, v14);
    }
    else
    {
      if (v9 < 0)
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if ((unint64_t)v9 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_65;
      v9 = *(_QWORD *)(v14 + 8 * v9 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v15 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    v16 = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    v58[0] = v16;
    LOBYTE(v57) = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
    {
      v17 = __OFADD__(v13++, 1);
      if (v17)
        goto LABEL_66;
    }
    else
    {
      v58[0] = v16;
      LOBYTE(v57) = 16;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
      {
        if (!v13)
          goto LABEL_62;
        v17 = __OFSUB__(v13--, 1);
        if (v17)
          goto LABEL_67;
      }
      else if (!v13)
      {
        v58[0] = v16;
        LOBYTE(v57) = 11;
        if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
        {
LABEL_62:
          swift_release();
          return v6;
        }
        v13 = 0;
      }
    }
    v58[0] = v16;
    LOBYTE(v57) = 10;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
      break;
    sub_1B888FC88(a1, a2, (unint64_t)a3);
    (*(void (**)(void))(*(_QWORD *)v6 + 608))();
    swift_release();
LABEL_35:
    v36 = swift_release();
LABEL_38:
    v9 = *a2;
    v37 = v8(v36);
    if (v37 >> 62)
      v38 = sub_1B8912FD8();
    else
      v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = swift_bridgeObjectRelease();
    if (v9 >= v38)
      return v6;
  }
  v58[0] = v16;
  LOBYTE(v57) = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
  {
    v18 = (*(uint64_t (**)(void))(*(_QWORD *)v9 + 256))();
    if (v18)
    {
      v57 = 0;
      v56 = 0;
      v19 = sub_1B88923AC(v18, &v57, &v56);
      v20 = (*(uint64_t (**)(void))(*(_QWORD *)v19 + 256))();
      v21 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v6 + 272))(v58);
      sub_1B888F954(v20);
      v21(v58, 0);
      swift_release();
      swift_release();
    }
    type metadata accessor for CalculateExpression.Token();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 40) = 0;
    *(_QWORD *)(v22 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v22 + 88) = 0u;
    *(_OWORD *)(v22 + 72) = 0u;
    *(_QWORD *)(v22 + 16) = 94;
    *(_QWORD *)(v22 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(_QWORD *)(v22 + 32) = 0;
    *(_QWORD *)(v22 + 40) = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v22 + 48) = 7;
    *(_QWORD *)(v22 + 64) = MEMORY[0x1E0DEE9D8];
    v23 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v6 + 272);
    v24 = (void (*)(unsigned __int8 *, _QWORD))v23(v58);
    v26 = v25;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8912CCC();
    sub_1B8912CFC();
    sub_1B8912CA8();
    v24(v58, 0);
    v27 = sub_1B8893B6C(a1, v54);
    v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 280))(v27);
    if (v28)
    {
      v57 = 0;
      v56 = 0;
      v29 = sub_1B88923AC(v28, &v57, &v56);
      v30 = (*(uint64_t (**)(void))(*(_QWORD *)v29 + 256))();
      v31 = (void (*)(unsigned __int8 *, _QWORD))v23(v58);
      sub_1B888F954(v30);
      v31(v58, 0);
      swift_release();
      swift_release();
    }
    v36 = swift_release();
    a3 = v52;
    goto LABEL_37;
  }
  v58[0] = v16;
  LOBYTE(v57) = 0;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
  {
    *a3 = 1;
LABEL_34:
    sub_1B8893B6C(a1, (uint64_t *)a2);
    goto LABEL_35;
  }
  v58[0] = v16;
  LOBYTE(v57) = 1;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
  {
    type metadata accessor for CalculateExpression.Token();
    v32 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 176);
    v33 = swift_retain();
    v34 = v32(v33);
    v8 = v53;
    v35 = sub_1B88931C8(v9, v34);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 600))(v35);
    swift_release();
    goto LABEL_34;
  }
  v39 = sub_1B8893B6C(a1, (uint64_t *)a2);
  v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 256))(v39);
  if (!(v40 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
      goto LABEL_44;
LABEL_59:
    swift_bridgeObjectRelease();
LABEL_60:
    type metadata accessor for CalculateExpression.Token();
    v48 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176);
    v49 = swift_retain();
    v50 = v48(v49);
    v51 = sub_1B88931C8(v9, v50);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 600))(v51);
    swift_release();
    v36 = swift_release();
LABEL_37:
    v8 = v53;
    a2 = (unint64_t *)v54;
    goto LABEL_38;
  }
  v41 = sub_1B8912FD8();
  if (!v41)
    goto LABEL_59;
LABEL_44:
  v17 = __OFSUB__(v41, 1);
  result = v41 - 1;
  if (!v17)
  {
    if ((v40 & 0xC000000000000001) != 0)
    {
      v43 = MEMORY[0x1BCCB4394](result, v40);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_70;
      if (result >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_71;
      v43 = *(_QWORD *)(v40 + 8 * result + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    v44 = *(_BYTE *)(v43 + 48);
    swift_release();
    v58[0] = v44;
    LOBYTE(v57) = 1;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
    {
      v58[0] = *(_BYTE *)(v9 + v15);
      LOBYTE(v57) = 13;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v58, (unsigned __int8 *)&v57))
      {
        v45 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 416))(*v54);
        if (v45)
        {
          v46 = *(unsigned __int8 *)(v45 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          v58[0] = 3;
          if (v46 != 51)
          {
            LOBYTE(v57) = v46;
            if ((sub_1B8912AA4() & 1) != 0 || (v58[0] = 4, LOBYTE(v57) = v46, (sub_1B8912AA4() & 1) != 0))
            {
              type metadata accessor for CalculateExpression.Token();
              v47 = swift_allocObject();
              *(_QWORD *)(v47 + 40) = 0;
              *(_QWORD *)(v47 + 32) = 0;
              swift_weakInit();
              *(_OWORD *)(v47 + 88) = 0u;
              *(_OWORD *)(v47 + 72) = 0u;
              *(_QWORD *)(v47 + 16) = 38851;
              *(_QWORD *)(v47 + 24) = 0xA200000000000000;
              swift_beginAccess();
              *(_QWORD *)(v47 + 32) = 0;
              *(_QWORD *)(v47 + 40) = 0;
              swift_bridgeObjectRelease();
              *(_BYTE *)(v47 + 48) = 5;
              *(_QWORD *)(v47 + 64) = MEMORY[0x1E0DEE9D8];
              (*(void (**)(uint64_t))(*(_QWORD *)v6 + 600))(v47);
              swift_release();
            }
          }
        }
      }
    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.PlainExpression.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.PlainExpression.__deallocating_deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CalculateExpression.Token._notesFormattedText.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = sub_1B885FD0C((uint64_t)&unk_1E6E9D758);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1B8860108(v1[48]), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 136))(v6);
  }
  return v5;
}

char *sub_1B8892CD8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a4;
    v9 = a3;
    v5 = a2;
    v7 = a1;
    v8 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  v24 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v24 < v5)
    goto LABEL_30;
LABEL_4:
  v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v12 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v13 = v12 + v10;
    if (!__OFADD__(v12, v10))
      goto LABEL_8;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v16 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v8 = *v4;
  if (*v4 >> 62)
    goto LABEL_33;
  v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 + v10;
  if (__OFADD__(v12, v10))
    goto LABEL_35;
LABEL_8:
  v8 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v8;
  v27 = v9;
  v12 = 0;
  if ((_DWORD)isUniquelyReferenced_nonNull_bridgeObject
    && (v8 & 0x8000000000000000) == 0
    && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if (v8 >> 62)
    goto LABEL_36;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCB43A0](v12, v16, 1, v8);
  isUniquelyReferenced_nonNull_bridgeObject = swift_bridgeObjectRelease();
  *v4 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v7);
  v6(isUniquelyReferenced_nonNull_bridgeObject);
  swift_arrayDestroy();
  if (!v10)
  {
LABEL_27:
    *v17 = v27;
    return (char *)sub_1B8912CA8();
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v19 = v25 - v5;
    if (!__OFSUB__(v25, v5))
      goto LABEL_21;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v18 = *(_QWORD *)(v15 + 16);
  v19 = v18 - v5;
  if (__OFSUB__(v18, v5))
    goto LABEL_39;
LABEL_21:
  result = (char *)(v17 + 1);
  v21 = (char *)(v15 + 32 + 8 * v5);
  if (v17 + 1 != (_QWORD *)v21 || result >= &v21[8 * v19])
    result = (char *)memmove(result, v21, 8 * v19);
  if (v8 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v26 = sub_1B8912FD8();
    result = (char *)swift_bridgeObjectRelease();
    v23 = v26 + v10;
    if (!__OFADD__(v26, v10))
      goto LABEL_26;
    goto LABEL_42;
  }
  v22 = *(_QWORD *)(v15 + 16);
  v23 = v22 + v10;
  if (!__OFADD__(v22, v10))
  {
LABEL_26:
    *(_QWORD *)(v15 + 16) = v23;
    goto LABEL_27;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B8892F6C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  void (*v10)(_QWORD *);
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13[4])();

  v5 = result;
  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1B887A014(&qword_1EF1B6208, &qword_1EF1B6200, MEMORY[0x1E0DEAF50]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6200);
            v10 = sub_1B885E6B8(v13, i, a3);
            v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), _QWORD))v10)(v13, 0);
            *(_QWORD *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for CalculateExpression.Token();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8893110(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1B8912B1C();
    if (!__OFSUB__(result, v1))
    {
      sub_1B8912B40();
      return sub_1B8912C0C();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B88931C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t countAndFlagsBits;
  void *v7;
  void *object;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  char v58;
  void *v59;
  void *v60;
  Swift::Bool v61;
  Swift::String v62;
  Swift::Bool_optional v63;
  Swift::String v64;
  unsigned __int8 v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  NSNumberFormatter_optional v71;
  Swift::Int_optional v72;

  v3 = v2;
  countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 208))(a1);
  object = v7;
  v9 = *(_BYTE *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v70 = v9;
  v69 = 1;
  swift_bridgeObjectRetain();
  if (static CalculateExpression.TokenType.== infix(_:_:)(&v70, &v69))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B886B504(countAndFlagsBits, (unint64_t)object);
    v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      if (v10 == 45 && v12 == 0xE100000000000000)
        goto LABEL_20;
      v14 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    v15 = sub_1B886B504(countAndFlagsBits, (unint64_t)object);
    v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v15 != 43 || v17 != 0xE100000000000000)
    {
      v19 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
        goto LABEL_14;
LABEL_21:
      v22 = sub_1B8893110(1);
      v24 = v23;
      v26 = v25;
      v28 = v27;
      swift_bridgeObjectRelease();
      countAndFlagsBits = MEMORY[0x1BCCB3F20](v22, v24, v26, v28);
      v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      object = v30;
LABEL_22:
      swift_bridgeObjectRetain();
      v31 = sub_1B886B504(countAndFlagsBits, (unint64_t)object);
      v33 = v32;
      swift_bridgeObjectRelease();
      if (!v33)
        goto LABEL_28;
      if (v31 == 101 && v33 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v34 = sub_1B8913050();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
          goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      v35 = sub_1B8893110(1);
      v37 = v36;
      v39 = v38;
      v41 = v40;
      swift_bridgeObjectRelease();
      countAndFlagsBits = MEMORY[0x1BCCB3F20](v35, v37, v39, v41);
      v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      object = v43;
LABEL_28:
      swift_bridgeObjectRetain();
      v44 = sub_1B886B504(countAndFlagsBits, (unint64_t)object);
      v46 = v45;
      v47 = swift_bridgeObjectRelease();
      if (!v46)
        goto LABEL_34;
      if (v44 == 46 && v46 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = sub_1B8913050();
        v47 = swift_bridgeObjectRelease();
        if ((v48 & 1) == 0)
          goto LABEL_34;
      }
      swift_bridgeObjectRetain();
      v49 = sub_1B8893110(1);
      v51 = v50;
      v53 = v52;
      v55 = v54;
      swift_bridgeObjectRelease();
      countAndFlagsBits = MEMORY[0x1BCCB3F20](v49, v51, v53, v55);
      v57 = v56;
      swift_bridgeObjectRelease();
      v47 = swift_bridgeObjectRelease();
      object = v57;
LABEL_34:
      (*(void (**)(uint64_t))(*(_QWORD *)a1 + 376))(v47);
      if ((v58 & 1) != 0)
      {
        v20 = countAndFlagsBits;
        if (a2)
          goto LABEL_36;
      }
      else
      {
        v20 = sub_1B8913038();
        v60 = v59;
        swift_bridgeObjectRelease();
        object = v60;
        if (a2)
        {
LABEL_36:
          swift_retain();
          v61 = sub_1B885FD04() & 1;
          v62._countAndFlagsBits = v20;
          v62._object = object;
          v71.value.super.super.isa = 0;
          v71.is_nil = 0;
          v72.value = 1;
          v72.is_nil = 2;
          v64 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v62, v61, v71, v72, v63);
          countAndFlagsBits = v64._countAndFlagsBits;
          swift_release();
          v21 = object;
          object = v64._object;
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRetain();
      v21 = object;
      countAndFlagsBits = v20;
      goto LABEL_40;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  v68 = v9;
  v67 = 9;
  v20 = 0;
  if (static CalculateExpression.TokenType.== infix(_:_:)(&v68, &v67) && a2)
  {
    if (CalculateExpression.engine.getter() == 1)
    {
      swift_bridgeObjectRelease();
      v20 = 0;
      v21 = 0;
      object = (void *)0xE300000000000000;
      countAndFlagsBits = 6582125;
    }
    else
    {
      v20 = 0;
      v21 = 0;
    }
  }
  else
  {
    v21 = 0;
  }
LABEL_40:
  v66 = v9;
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, void *, unsigned __int8 *, _QWORD))(v3 + 240))(countAndFlagsBits, object, v20, v21, &v66, MEMORY[0x1E0DEE9D8]);
}

char *sub_1B8893668(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(void);
  char v9;
  uint64_t v10;
  Swift::String v11;
  Swift::Bool_optional v12;
  Swift::String v13;
  uint64_t countAndFlagsBits;
  void *object;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  NSNumberFormatter_optional v26;
  Swift::Int_optional v27;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = MEMORY[0x1E0DEE9D8];
    if (!v3)
      return (char *)v4;
    v25 = MEMORY[0x1E0DEE9D8];
    result = sub_1B88775D0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v6 = 0;
    v4 = v25;
    v21 = v2 & 0xC000000000000001;
    v22 = v2;
    while (v3 != v6)
    {
      if (v21)
      {
        v7 = (_BYTE *)MEMORY[0x1BCCB4394](v6, v2);
      }
      else
      {
        v7 = *(_BYTE **)(v2 + 8 * v6 + 32);
        swift_retain();
      }
      v24 = v7[48];
      v23 = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v24, &v23)
        && (type metadata accessor for CalculateExpression(),
            v8 = *(uint64_t (**)(void))(*(_QWORD *)v7 + 136),
            v8(),
            v9 = static CalculateExpression.isHighPrecisionLiteral(_:)(),
            v10 = swift_bridgeObjectRelease(),
            (v9 & 1) != 0)
        && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 176))(v10))
      {
        v11._countAndFlagsBits = v8();
        v26.value.super.super.isa = 0;
        v26.is_nil = 0;
        v27.value = 1;
        v27.is_nil = 2;
        v13 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v11, 1, v26, v27, v12);
        countAndFlagsBits = v13._countAndFlagsBits;
        object = v13._object;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        countAndFlagsBits = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 136))();
        object = v16;
      }
      swift_release();
      v25 = v4;
      v18 = *(_QWORD *)(v4 + 16);
      v17 = *(_QWORD *)(v4 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1B88775D0((char *)(v17 > 1), v18 + 1, 1);
        v4 = v25;
      }
      ++v6;
      *(_QWORD *)(v4 + 16) = v18 + 1;
      v19 = v4 + 16 * v18;
      *(_QWORD *)(v19 + 32) = countAndFlagsBits;
      *(_QWORD *)(v19 + 40) = object;
      v2 = v22;
      if (v3 == v6)
        return (char *)v4;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B88938A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B88938E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CalculateExpression.Token()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1B8893964()
{
  unint64_t result;

  result = qword_1EF1B61F8;
  if (!qword_1EF1B61F8)
  {
    result = MEMORY[0x1BCCB4D60](&unk_1B8916724, &_s15PlainExpressionC8WrapModeON);
    atomic_store(result, (unint64_t *)&qword_1EF1B61F8);
  }
  return result;
}

uint64_t method lookup function for CalculateExpression.Token()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.Token.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CalculateExpression.Token.normalizedText.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CalculateExpression.Token.errors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of CalculateExpression.Token.formattedText(parent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t type metadata accessor for CalculateExpression.PlainExpression()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.PlainExpression()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.copyableText.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init(parent:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 472))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.needsParentheses(allowExponent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.isEmpty.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t _s15PlainExpressionC8WrapModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8893AEC + 4 * byte_1B891671D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8893B20 + 4 * byte_1B8916718[v4]))();
}

uint64_t sub_1B8893B20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8893B28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8893B30);
  return result;
}

uint64_t sub_1B8893B3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8893B44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8893B48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8893B50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15PlainExpressionC8WrapModeOMa()
{
  return &_s15PlainExpressionC8WrapModeON;
}

uint64_t sub_1B8893B6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v3 = *a2;
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 392);
  v5 = v4(a1);
  if (v5 >> 62)
    v6 = sub_1B8912FD8();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = swift_bridgeObjectRelease();
  if (v3 < v6)
    *a2 = ++v3;
  v8 = v4(v7);
  if (v8 >> 62)
    v9 = sub_1B8912FD8();
  else
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRelease();
  if (v3 < v9)
  {
    result = v4(result);
    if ((result & 0xC000000000000001) == 0)
    {
      if (v3 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v3 < *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v11 = *(_QWORD *)(result + 8 * v3 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      return result;
    }
    v11 = MEMORY[0x1BCCB4394](v3, result);
LABEL_12:
    swift_bridgeObjectRelease();
    v12 = *(_BYTE *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v14 = v12;
    v13 = 17;
    result = static CalculateExpression.TokenType.== infix(_:_:)(&v14, &v13);
    if ((result & 1) != 0)
      *a2 = v3 + 1;
  }
  return result;
}

uint64_t sub_1B8893CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_30;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v8 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v12 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_33;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_35;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_36;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1BCCB43A0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for CalculateExpression.Token();
  result = swift_arrayDestroy();
  if (!v6)
    return sub_1B8912CA8();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v15 = v20 - v2;
    if (!__OFSUB__(v20, v2))
      goto LABEL_21;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v14 = *(_QWORD *)(v11 + 16);
  v15 = v14 - v2;
  if (__OFSUB__(v14, v2))
    goto LABEL_39;
LABEL_21:
  v16 = (const void *)(v11 + 32 + 8 * v2);
  if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v16 + 8 * v15)
    result = (uint64_t)memmove((void *)(v11 + 32 + 8 * v4), v16, 8 * v15);
  if (v5 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v21 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    v18 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_26;
    goto LABEL_42;
  }
  v17 = *(_QWORD *)(v11 + 16);
  v18 = v17 + v6;
  if (!__OFADD__(v17, v6))
  {
LABEL_26:
    *(_QWORD *)(v11 + 16) = v18;
    return sub_1B8912CA8();
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B8893F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(unint64_t);
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(unsigned __int8 *, _QWORD);
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t (*v14)(__int128 *);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(__int128 *);
  void (*v19)(__int128 *, _QWORD);
  uint64_t *v20;
  uint64_t *v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t (*v23)(__int128 *);
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(__int128 *, _QWORD);
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(_QWORD *))sub_1B88943C8, &v28);
  v2 = v28;
  if (!(_QWORD)v28)
    return 0;
  v4 = *((_QWORD *)&v28 + 1);
  v3 = v29;
  v5 = v30;
  v6 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v28 + 416);
  v7 = swift_retain();
  sub_1B885DBF8(v7);
  v8 = v6(v4);
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v28) = 8;
  v9 = sub_1B885FD04();
  v10 = (void (*)(unsigned __int8 *, _QWORD))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v28, v9 & 1);
  if (!v8)
  {
    swift_release();
    sub_1B885DC28(v2);
    swift_release();
    sub_1B885DC28(v2);
    return 0;
  }
  v11 = *(_BYTE *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v28) = v11;
  swift_retain();
  if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
  {
    LOBYTE(v28) = v11;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v28) = v11;
      v27 = 16;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v28, &v27))
        goto LABEL_28;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      v14 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v2 + 408);
      swift_retain();
      v26 = (void (*)(__int128 *, _QWORD))v14(&v28);
      if (!(*v15 >> 62))
      {
        v16 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v16 >= v13)
          goto LABEL_15;
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRetain();
    v16 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v16 >= v13)
    {
LABEL_15:
      if ((v13 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(v4 + 1, v4 + 1, (uint64_t)v10);
        v26(&v28, 0);
        goto LABEL_28;
      }
      goto LABEL_39;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  LOBYTE(v28) = v11;
  v27 = 8;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v28, &v27))
  {
    LOBYTE(v28) = v11;
    v27 = 9;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v28, &v27))
    {
      LOBYTE(v28) = v11;
      v27 = 7;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v28, &v27))
      {
        v17 = (*(uint64_t (**)(void))(*(_QWORD *)v8 + 280))();
        if (v17)
        {
          if (((*(uint64_t (**)(void))(*(_QWORD *)v17 + 568))() & 1) == 0)
          {
            v16 = v4 + 1;
            if (!__OFADD__(v4, 1))
            {
              v23 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v2 + 408);
              swift_retain();
              result = v23(&v28);
              v26 = (void (*)(__int128 *, _QWORD))result;
              if (!(*v24 >> 62))
              {
                if (*(_QWORD *)((*v24 & 0xFFFFFFFFFFFFF8) + 0x10) < v16)
                {
LABEL_44:
                  __break(1u);
                  goto LABEL_45;
                }
LABEL_34:
                if ((v16 & 0x8000000000000000) == 0)
                {
                  sub_1B88604E0(v16, v16, (uint64_t)v10);
                  v26(&v28, 0);
                  sub_1B885DC28(v2);
                  swift_release();
                  goto LABEL_29;
                }
LABEL_45:
                __break(1u);
                return result;
              }
LABEL_43:
              swift_bridgeObjectRetain();
              v25 = sub_1B8912FD8();
              result = swift_bridgeObjectRelease();
              if (v25 < v16)
                goto LABEL_44;
              goto LABEL_34;
            }
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
          swift_release();
        }
      }
      v18 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v2 + 408);
      swift_retain();
      v19 = (void (*)(__int128 *, _QWORD))v18(&v28);
      v21 = v20;
      v16 = *v20;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v21 = v16;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v16 < 0 || (v16 & 0x4000000000000000) != 0)
        sub_1B885DD38(v16);
      if ((v4 & 0x8000000000000000) == 0)
      {
        if (v4 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v10;
          swift_release();
          sub_1B8912CA8();
          v19(&v28, 0);
          goto LABEL_28;
        }
        goto LABEL_41;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  *(_QWORD *)&v28 = v2;
  *((_QWORD *)&v28 + 1) = v4;
  v29 = v3;
  v30 = v5;
  sub_1B88831BC(v10, (uint64_t *)&v28);
LABEL_28:
  sub_1B885DC28(v2);
LABEL_29:
  swift_release();
  swift_release_n();
  swift_release();
  sub_1B885DC28(v2);
  return 1;
}

uint64_t sub_1B88943C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 456))() & 1;
}

uint64_t CalculateExpression.FactorialOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.FactorialOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B8894434(uint64_t a1)
{
  uint64_t (*v2)(void);
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD);
  unint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD);
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  _BOOL8 v20;
  uint64_t v21;
  _QWORD v22[4];

  v2 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  result = v2();
  if (!result)
    return result;
  v4 = CalculateExpression.format.getter();
  v5 = swift_release();
  if (v4 != 2)
    return 0;
  v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  if (v6)
  {
    v7 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_6:
        v9 = v8 - 1;
        if (__OFSUB__(v8, 1))
        {
          __break(1u);
        }
        else if ((v7 & 0xC000000000000001) == 0)
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_11;
          }
          __break(1u);
          goto LABEL_33;
        }
        MEMORY[0x1BCCB4394](v9, v7);
LABEL_11:
        swift_bridgeObjectRelease();
        v10 = CalculateExpression.rich.getter();
        v11 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 392))();
        swift_release();
        if (!(v11 >> 62))
        {
          v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
          swift_bridgeObjectRelease();
          v13 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a1 + 408))(v22);
          sub_1B885E26C(v12);
          v13(v22, 0);
          v6 = swift_release();
          goto LABEL_17;
        }
LABEL_33:
        swift_bridgeObjectRetain();
        v12 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8)
        goto LABEL_6;
    }
    v6 = swift_bridgeObjectRelease();
  }
LABEL_17:
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 392))(v6);
  if (v14 >> 62)
    v15 = sub_1B8912FD8();
  else
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!v15)
  {
    type metadata accessor for CalculateExpression.RichToken();
    (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 384))(v22);
    sub_1B886210C(48, 0xE100000000000000, (char *)v22);
    v16 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a1 + 408))(v22);
    v18 = v17;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8912CCC();
    sub_1B8912CFC();
    sub_1B8912CA8();
    v16(v22, 0);
  }
  v19 = v15 == 0;
  v20 = v15 != 0;
  v21 = v19;
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(v21);
  (*(void (**)(_BOOL8))(*(_QWORD *)a1 + 256))(v20);
  return 1;
}

uint64_t CalculateExpression.DropOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.DropOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B889476C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, _QWORD);
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(unint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(__int128 *, _QWORD);
  void (*v18)(__int128 *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  _QWORD *v31;
  void (*v32)(__int128 *, _QWORD);
  unint64_t v33;
  uint64_t (*v34)(__int128 *);
  _QWORD *v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(__int128 *);
  void (*v40)(__int128 *, _QWORD);
  unint64_t *v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t (*v51)(uint64_t, _QWORD);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(__int128 *, _QWORD);
  uint64_t v57;
  char v58;
  uint64_t (*v59)(void);
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(void);
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t (*v70)(__int128 *, _QWORD);
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(unint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(_QWORD);
  uint64_t v91;
  unint64_t v92;
  __int128 v93;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  v3 = v2;
  v5 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  if (!v5())
    goto LABEL_10;
  v6 = CalculateExpression.format.getter();
  v7 = swift_release();
  if (v6 != 2
    || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 248))(v7) & 1) == 0
    || *(_QWORD *)(v2 + 16) == 101 && *(_QWORD *)(v2 + 24) == 0xE100000000000000)
  {
    goto LABEL_10;
  }
  if ((sub_1B8913050() & 1) != 0)
    goto LABEL_10;
  type metadata accessor for CalculateExpression.RichToken();
  (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)a1 + 384))(&v93);
  sub_1B886210C(48, 0xE100000000000000, (char *)&v93);
  v8 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)a1 + 408))(&v93);
  v10 = v9;
  MEMORY[0x1BCCB40AC]();
  if (*(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_126;
  while (1)
  {
    sub_1B8912CFC();
    sub_1B8912CA8();
    v8(&v93, 0);
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
LABEL_10:
    CalculateExpression.RichExpression.editingToken(matching:)(sub_1B889576C, &v93);
    v8 = (void (*)(__int128 *, _QWORD))v93;
    if (!(_QWORD)v93)
      return 0;
    v11 = *((_QWORD *)&v93 + 1);
    v12 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v93 + 416);
    v13 = swift_retain();
    sub_1B885DBF8(v13);
    v14 = v11;
    v87 = v12;
    v15 = v12(v11);
    type metadata accessor for CalculateExpression.RichToken();
    v16 = *(_QWORD *)(v3 + 16);
    v17 = *(void (**)(__int128 *, _QWORD))(v3 + 24);
    v18 = *(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384);
    v19 = swift_bridgeObjectRetain();
    v18(&v93, v19);
    v90 = (uint64_t (*)(_QWORD))sub_1B886210C(v16, (uint64_t)v17, (char *)&v93);
    ((void (*)(__int128 *__return_ptr))v18)(&v93);
    v20 = sub_1B886210C(48, 0xE100000000000000, (char *)&v93);
    v21 = (void (*)(__int128 *, _QWORD))v20;
    if (!v15)
    {
      if (v16 == 12336 && v17 == (void (*)(__int128 *, _QWORD))0xE200000000000000
        || (sub_1B8913050() & 1) != 0)
      {
        swift_release();
        swift_retain();
        v17 = v21;
        v28 = (uint64_t (*)(_QWORD))v21;
        v3 = v14;
      }
      else
      {
        v17 = v21;
        v3 = v14;
        v28 = v90;
      }
      v34 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v8 + 408);
      swift_retain();
      v29 = v34(&v93);
      v25 = (uint64_t)v28;
      if (!(*v35 >> 62)
        || (swift_bridgeObjectRetain(),
            v86 = sub_1B8912FD8(),
            swift_bridgeObjectRelease(),
            (v86 & 0x8000000000000000) == 0))
      {
        sub_1B88604E0(0, 0, v25);
        ((void (*)(__int128 *, _QWORD))v29)(&v93, 0);
        (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
        swift_release();
        sub_1B885DC28((uint64_t)v8);
        swift_release();
        goto LABEL_82;
      }
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    v88 = v20;
    v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 384);
    v23 = swift_retain();
    v24 = v22(v23);
    if ((v24 & 1) != 0)
      v24 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v15 + 240))(0);
    v89 = v15;
    v3 = v14;
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 352))(v24) & 1) != 0
      && (v16 != 46 || v17 != (void (*)(__int128 *, _QWORD))0xE100000000000000)
      && (sub_1B8913050() & 1) == 0)
    {
      break;
    }
    if (((*(uint64_t (**)(void))(*(_QWORD *)a1 + 224))() & 1) != 0
      && (v16 != 101 || v17 != (void (*)(__int128 *, _QWORD))0xE100000000000000)
      && (sub_1B8913050() & 1) == 0)
    {
      v36 = v90;
      if (v16 == 12336 && v17 == (void (*)(__int128 *, _QWORD))0xE200000000000000
        || (sub_1B8913050() & 1) != 0)
      {
        swift_release();
        v36 = (uint64_t (*)(_QWORD))v88;
        swift_retain();
      }
      if (v16 == 46 && v17 == (void (*)(__int128 *, _QWORD))0xE100000000000000
        || (v37 = sub_1B8913050(), (v37 & 1) != 0))
      {
        v37 = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v36 + 216))(11824, 0xE200000000000000);
      }
      if (!((uint64_t (*)(uint64_t))v5)(v37)
        || (v38 = CalculateExpression.format.getter(), swift_release(), v38 != 2))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
        v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1B8915DF0;
        *(_QWORD *)(v47 + 32) = v36;
        *(_QWORD *)&v93 = v47;
        sub_1B8912CA8();
        v48 = v93;
        v49 = *(void (**)(uint64_t))(*(_QWORD *)v8 + 400);
        swift_retain();
        v49(v48);
        goto LABEL_78;
      }
      v39 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v8 + 408);
      swift_retain();
      v40 = (void (*)(__int128 *, _QWORD))v39(&v93);
      v42 = v41;
      v43 = *v41;
      result = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v42 = v43;
      if (!(_DWORD)result || (v43 & 0x8000000000000000) != 0 || (v43 & 0x4000000000000000) != 0)
        sub_1B885DD38(v43);
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v3 < *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v36;
        swift_release();
        sub_1B8912CA8();
        v40(&v93, 0);
        v45 = v87(v3 - 1);
        if (!v45)
          goto LABEL_78;
        v46 = *(_BYTE *)(v45 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        LOBYTE(v93) = v46;
        LOBYTE(v91) = 4;
        sub_1B885DDA0();
        if ((sub_1B8912AA4() & 1) == 0)
          goto LABEL_78;
        v32 = (void (*)(__int128 *, _QWORD))v39(&v93);
        v33 = v3 - 1;
        goto LABEL_50;
      }
      __break(1u);
      goto LABEL_129;
    }
    v25 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    v26 = *(_BYTE *)(v89 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v93) = v26;
    v14 = (uint64_t)v90;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
    {
      LOBYTE(v93) = v26;
      LOBYTE(v91) = 15;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v91))
      {
        LOBYTE(v93) = v26;
        if ((CalculateExpression.TokenType.isConstant.getter() & 1) == 0)
        {
          LOBYTE(v93) = v26;
          LOBYTE(v91) = 18;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v91))
          {
            LOBYTE(v93) = v26;
            LOBYTE(v91) = 16;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v91))
            {
              LOBYTE(v93) = v26;
              LOBYTE(v91) = 1;
              if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v91))
              {
                if (v5())
                {
                  (*(void (**)(void))(*(_QWORD *)v89 + 640))();
                  swift_release();
                }
                if ((v16 != 101 || v17 != (void (*)(__int128 *, _QWORD))0xE100000000000000)
                  && (sub_1B8913050() & 1) == 0
                  || (*(_QWORD *)&v93 = (*(uint64_t (**)(void))(*(_QWORD *)v89 + 208))(),
                      *((_QWORD *)&v93 + 1) = v57,
                      v91 = 101,
                      v92 = 0xE100000000000000,
                      sub_1B8878944(),
                      v58 = sub_1B8912E64(),
                      swift_bridgeObjectRelease(),
                      (v58 & 1) == 0))
                {
                  if ((v16 != 46 || v17 != (void (*)(__int128 *, _QWORD))0xE100000000000000)
                    && (sub_1B8913050() & 1) == 0)
                  {
                    goto LABEL_110;
                  }
                  v59 = *(uint64_t (**)(void))(*(_QWORD *)v89 + 208);
                  *(_QWORD *)&v93 = v59();
                  *((_QWORD *)&v93 + 1) = v60;
                  v91 = 46;
                  v92 = 0xE100000000000000;
                  sub_1B8878944();
                  v61 = sub_1B8912E64();
                  v62 = swift_bridgeObjectRelease();
                  if ((v61 & 1) == 0)
                  {
                    *(_QWORD *)&v93 = ((uint64_t (*)(uint64_t))v59)(v62);
                    *((_QWORD *)&v93 + 1) = v63;
                    v91 = 101;
                    v92 = 0xE100000000000000;
                    v64 = sub_1B8912E64();
                    swift_bridgeObjectRelease();
                    if ((v64 & 1) == 0)
                    {
LABEL_110:
                      v65 = *(void (**)(void))(*(_QWORD *)v89 + 208);
                      v65();
                      v66 = sub_1B8912BDC();
                      v67 = swift_bridgeObjectRelease();
                      if ((v66 & 1) != 0
                        || (((void (*)(uint64_t))v65)(v67),
                            v68 = sub_1B8912BDC(),
                            v69 = swift_bridgeObjectRelease(),
                            (v68 & 1) != 0))
                      {
                        v70 = (uint64_t (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v89 + 224))(&v93);
                        sub_1B8895844();
                        swift_bridgeObjectRelease();
                        v69 = v70(&v93, 0);
                      }
                      v71 = ((uint64_t (*)(uint64_t))v65)(v69);
                      sub_1B8873AB8(45, 0xE100000000000000, v71, v72);
                      v74 = v73;
                      v75 = swift_bridgeObjectRelease();
                      if ((v74 & 1) != 0)
                      {
                        v76 = ((uint64_t (*)(uint64_t))v65)(v75);
                        sub_1B8873AB8(43, 0xE100000000000000, v76, v77);
                        v79 = v78;
                        v75 = swift_bridgeObjectRelease();
                        if ((v79 & 1) != 0)
                        {
                          v81 = ((uint64_t (*)(uint64_t))v65)(v75);
                          sub_1B8873AB8(101, 0xE100000000000000, v81, v82);
                          v84 = v83;
                          v75 = swift_bridgeObjectRelease();
                          if ((v84 & 1) != 0)
                            goto LABEL_118;
                        }
                      }
                      ((void (*)(uint64_t))v65)(v75);
                      v65();
                      swift_bridgeObjectRelease();
                      v80 = sub_1B8912BB8();
                      v75 = swift_bridgeObjectRelease();
                      if (v80 < 4)
                      {
LABEL_118:
                        *(_QWORD *)&v93 = ((uint64_t (*)(uint64_t))v65)(v75);
                        *((_QWORD *)&v93 + 1) = v85;
                        swift_bridgeObjectRetain();
                        sub_1B8912B58();
                        swift_bridgeObjectRelease();
                        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v89 + 216))(v93, *((_QWORD *)&v93 + 1));
                        (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
                        (*(void (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
                        swift_release();
                        sub_1B885DC28((uint64_t)v8);
                        swift_release();
                        goto LABEL_81;
                      }
                    }
                  }
                }
LABEL_30:
                swift_release();
                sub_1B885DC28((uint64_t)v8);
                swift_release();
                swift_release_n();
                swift_release();
                v27 = 0;
                goto LABEL_83;
              }
LABEL_79:
              swift_release();
              v50 = (uint64_t)v8;
              goto LABEL_80;
            }
          }
        }
      }
    }
    if (v16 == 101 && v17 == (void (*)(__int128 *, _QWORD))0xE100000000000000
      || (sub_1B8913050() & 1) != 0)
    {
      goto LABEL_30;
    }
    if (v16 == 12336 && v17 == (void (*)(__int128 *, _QWORD))0xE200000000000000
      || (sub_1B8913050() & 1) != 0)
    {
      swift_release();
      v14 = v88;
      swift_retain();
    }
    if (v16 == 46 && v17 == (void (*)(__int128 *, _QWORD))0xE100000000000000 || (sub_1B8913050() & 1) != 0)
      (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v14 + 216))(11824, 0xE200000000000000);
    v29 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_122;
    v30 = *(uint64_t (**)(_QWORD))(*(_QWORD *)v8 + 408);
    swift_retain();
    v90 = v30;
    v17 = (void (*)(__int128 *, _QWORD))v30(&v93);
    if (!(*v31 >> 62))
    {
      v5 = *(uint64_t (**)(void))((*v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      if ((uint64_t)v5 < v29)
        goto LABEL_124;
      goto LABEL_47;
    }
LABEL_123:
    swift_bridgeObjectRetain();
    v5 = (uint64_t (*)(void))sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if ((uint64_t)v5 < v29)
    {
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
LABEL_47:
    if ((v29 & 0x8000000000000000) == 0)
    {
      sub_1B88604E0(v29, v29, v14);
      v17(&v93, 0);
      LOBYTE(v93) = *(_BYTE *)(v89 + v25);
      LOBYTE(v91) = 18;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v91))
      {
LABEL_78:
        (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
        goto LABEL_79;
      }
      v32 = (void (*)(__int128 *, _QWORD))v90(&v93);
      v33 = v3;
LABEL_50:
      sub_1B885DC54(v33);
      swift_release();
      v32(&v93, 0);
      goto LABEL_78;
    }
LABEL_125:
    __break(1u);
LABEL_126:
    sub_1B8912CCC();
  }
  if (v16 == 101 && v17 == (void (*)(__int128 *, _QWORD))0xE100000000000000 || (sub_1B8913050() & 1) != 0)
    goto LABEL_30;
  (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
  if (v16 == 48 && v17 == (void (*)(__int128 *, _QWORD))0xE100000000000000)
    goto LABEL_97;
  if ((sub_1B8913050() & 1) != 0
    || v16 == 12336 && v17 == (void (*)(__int128 *, _QWORD))0xE200000000000000)
  {
    goto LABEL_97;
  }
  if ((sub_1B8913050() & 1) != 0)
    goto LABEL_97;
  v51 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v15 + 216);
  swift_bridgeObjectRetain();
  v52 = v51(v16, v17);
  if (!((uint64_t (*)(uint64_t))v5)(v52))
    goto LABEL_97;
  v53 = CalculateExpression.format.getter();
  result = swift_release();
  if (v53 != 2)
    goto LABEL_97;
  if (!__OFSUB__(v14, 1))
  {
    v54 = v87(v14 - 1);
    if (v54)
    {
      v55 = *(_BYTE *)(v54 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v93) = v55;
      LOBYTE(v91) = 4;
      sub_1B885DDA0();
      if ((sub_1B8912AA4() & 1) != 0)
      {
        v56 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v8 + 408))(&v93);
        sub_1B885DC54(v14 - 1);
        swift_release();
        v56(&v93, 0);
        swift_release();
        v50 = (uint64_t)v8;
LABEL_80:
        sub_1B885DC28(v50);
        swift_release();
LABEL_81:
        swift_release_n();
LABEL_82:
        swift_release();
        v27 = 1;
LABEL_83:
        sub_1B885DC28((uint64_t)v8);
        return v27;
      }
    }
LABEL_97:
    swift_release();
    sub_1B885DC28((uint64_t)v8);
    swift_release();
    swift_release_n();
    goto LABEL_82;
  }
LABEL_129:
  __break(1u);
  return result;
}

uint64_t sub_1B889576C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 544))() & 1) != 0)
  {
    LOBYTE(v2) = 1;
  }
  else if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 456))() & 1) != 0)
  {
    v2 = CalculateExpression.RichExpression.EditingToken.token.getter();
    if (v2)
    {
      swift_release();
      sub_1B885DDA0();
      LOBYTE(v2) = sub_1B8912AA4();
    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

uint64_t sub_1B8895844()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_5:
      sub_1B8912B34();
      return sub_1B8912B70();
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) != 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

void sub_1B8895898()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.LiteralOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.LiteralOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.LiteralOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.LiteralOperation()
{
  return swift_lookUpClassMethod();
}

void sub_1B8895950(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = v4 == 121 && v3 == 0xE100000000000000;
  if (v5 || (sub_1B8913050() & 1) != 0)
  {
    v6 = 2;
  }
  else
  {
    v6 = 3;
    if (v4 || v3 != 0xE000000000000000)
    {
      if ((sub_1B8913050() & 1) != 0)
        v6 = 3;
      else
        v6 = 1;
    }
  }
  *a1 = v6;
}

uint64_t sub_1B88959E4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  char v7;
  char v8;
  BOOL v9;
  char v10;
  char v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  BOOL v26;
  uint64_t v27;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  unsigned __int8 v33;

  type metadata accessor for CalculateExpression.RichToken();
  v33 = 10;
  v1 = sub_1B885FD04();
  v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(10127586, 0xA300000000000000, &v33, v1 & 1);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v3 == 50 && v4 == 0xE100000000000000;
  if (!v5 && (sub_1B8913050() & 1) == 0)
  {
    if (v3)
      v6 = 0;
    else
      v6 = v4 == 0xE000000000000000;
    v7 = v6;
    if (v6
      || ((v8 = sub_1B8913050(), v3 == 121) ? (v9 = v4 == 0xE100000000000000) : (v9 = 0),
          !v9 ? (v10 = 0) : (v10 = 1),
          (v8 & 1) != 0 || (v10 & 1) != 0 || (sub_1B8913050() & 1) != 0))
    {
      v29 = 18;
      v11 = sub_1B885FD04() & 1;
      v12 = &v29;
      v13 = 0;
      v14 = 0;
    }
    else
    {
      v32 = 1;
      swift_bridgeObjectRetain();
      v11 = sub_1B885FD04() & 1;
      v12 = &v32;
      v13 = v3;
      v14 = v4;
    }
    v15 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v13, v14, (unsigned __int8 *)v12, v11);
    type metadata accessor for CalculateExpression.RichExpression();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v16 + 32) = v15;
    v31 = v16;
    sub_1B8912CA8();
    v17 = v31;
    swift_retain();
    v18 = sub_1B88622EC(v17);
    v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 264))(v18);
    v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 256);
    v21 = v20(v19);
    if (v21)
    {
      v22 = v21;
      if ((v7 & 1) != 0)
      {
        v23 = 1;
      }
      else
      {
        v24 = sub_1B8913050();
        v26 = v3 == 121 && v4 == 0xE100000000000000;
        v23 = 1;
        if ((v24 & 1) == 0 && !v26)
          v23 = sub_1B8913050();
      }
      (*(void (**)(_QWORD))(*(_QWORD *)v22 + 304))(v23 & 1);
      v21 = swift_release();
    }
    v27 = v20(v21);
    if (v27)
    {
      v30 = 1;
      (*(void (**)(char *))(*(_QWORD *)v27 + 280))(&v30);
      swift_release();
    }
    swift_release();
  }
  return v2;
}

uint64_t sub_1B8895C60(uint64_t a1, uint64_t a2, char a3)
{
  swift_allocObject();
  return sub_1B88B259C(a1, a2, a3);
}

uint64_t CalculateExpression.RootOperation.__deallocating_deinit()
{
  CalculateExpression.FunctionOperation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.RootOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B8895CF0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(_QWORD *, _QWORD);
  _QWORD v18[4];

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 176);
  if (!((uint64_t (*)(void))v2)())
    return 0;
  v3 = CalculateExpression.format.getter();
  v4 = swift_release();
  if (v3 != 2)
    return 0;
  v5 = ((uint64_t (*)(uint64_t))v2)(v4);
  if (v5)
  {
    v6 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  if (v5 >= *(_QWORD *)sub_1B8896B30())
    return 0;
  if (!((uint64_t (*)(void))v2)())
    return 1;
  v7 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_11;
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_11:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_35;
  }
  MEMORY[0x1BCCB4394](v9, v7);
LABEL_16:
  swift_bridgeObjectRelease();
  v10 = CalculateExpression.rich.getter();
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 392))(v10);
  swift_release();
  if (!(v2 >> 62))
  {
    v11 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_18;
LABEL_36:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
LABEL_37:
    v17 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)a1 + 408))(v18);
    sub_1B885E32C(v16);
    v17(v18, 0);
    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
    v14 = 1;
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
    swift_release();
    return v14;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  v11 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_36;
LABEL_18:
  v18[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1B8912FA8();
  if ((v11 & 0x8000000000000000) == 0)
  {
    type metadata accessor for CalculateExpression.RichToken();
    v13 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v15 = MEMORY[0x1BCCB4394](v13, v2);
      else
        v15 = swift_retain();
      ++v13;
      sub_1B8862328(v15);
      sub_1B8912F90();
      sub_1B8912FB4();
      sub_1B8912FC0();
      sub_1B8912F9C();
    }
    while (v11 != v13);
    v16 = v18[0];
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.EnterOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.EnterOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B8896084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  return sub_1B88BC9A8();
}

uint64_t sub_1B88960C8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  unsigned __int8 v10;

  v1 = sub_1B8896190((uint64_t)&unk_1E6E9D370);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8873F28(v3, v2);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v7) = *(_BYTE *)(*(_QWORD *)(v1 + 56) + v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v7;
      v8 = sub_1B885FD04();
      return CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v3, v2, &v10, v8 & 1);
    }
    swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1B8896190(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C08);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1B8873F28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1B88962A0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.ConstantOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.OperandOperation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ConstantOperation.__deallocating_deinit()
{
  CalculateExpression.OperandOperation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.ConstantOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.ConstantOperation()
{
  return swift_lookUpClassMethod();
}

void sub_1B8896358()
{
  qword_1ED564290 = (uint64_t)&unk_1E6E9E258;
}

id sub_1B8896484(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return sub_1B88964E4(a1, a2, a3, a4, a5);
}

id sub_1B88964E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v7;
  uint64_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  objc_super v19;

  *(_QWORD *)&v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter] = a1;
  v7 = &v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_didChange];
  *(_QWORD *)v7 = a2;
  *((_QWORD *)v7 + 1) = a3;
  v8 = (uint64_t *)&v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_willChange];
  *v8 = a4;
  v8[1] = a5;
  v9 = a1;
  swift_retain();
  sub_1B88969DC(a4);
  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for NumberFormatterObserver();
  v10 = objc_msgSendSuper2(&v19, sel_init);
  v11 = qword_1ED562F80;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  v13 = qword_1ED564290;
  v14 = *(_QWORD *)(qword_1ED564290 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v15 = v13 + 40;
    do
    {
      v16 = v12;
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1B8912AB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_addObserver_forKeyPath_options_context_, v16, v17, 8, 0);

      v15 += 16;
      --v14;
    }
    while (v14);
  }
  else
  {
    swift_bridgeObjectRetain();
  }

  sub_1B8896A0C(a4);
  swift_bridgeObjectRelease();

  swift_release();
  return v12;
}

id sub_1B8896678()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  objc_super v9;

  if (qword_1ED562F80 != -1)
    swift_once();
  v1 = qword_1ED564290;
  v2 = *(_QWORD *)(qword_1ED564290 + 16);
  if (v2)
  {
    v3 = OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter;
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      v5 = *(void **)&v0[v3];
      swift_bridgeObjectRetain();
      v6 = v5;
      v7 = (void *)sub_1B8912AB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_removeObserver_forKeyPath_, v0, v7);

      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for NumberFormatterObserver();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_1B8896820()
{
  sub_1B8896ADC(&qword_1ED561BC0, (uint64_t)&unk_1B8916AE8);
  sub_1B8896ADC(&qword_1EF1B6240, (uint64_t)&unk_1B8916A3C);
  return sub_1B8913014();
}

void sub_1B889688C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  __int128 v15;
  __int128 v16;

  v5 = v4;
  if ((objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter), sel_shouldIgnoreChanges) & 1) == 0)
  {
    if (a4 && *(_QWORD *)(a4 + 16))
    {
      v9 = (id)*MEMORY[0x1E0CB2CC0];
      v10 = sub_1B8873FBC((uint64_t)v9);
      if ((v11 & 1) != 0)
      {
        sub_1B8879724(*(_QWORD *)(a4 + 56) + 32 * v10, (uint64_t)&v15);

        if (*((_QWORD *)&v16 + 1))
        {
          sub_1B888A040();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v12 = objc_msgSend(v14, sel_BOOLValue);

            if (v12)
            {
              v13 = *(void (**)(uint64_t, uint64_t))(v5
                                                            + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_willChange);
              if (v13)
                v13(a1, a2);
              return;
            }
          }
LABEL_13:
          (*(void (**)(uint64_t, uint64_t))(v5 + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_didChange))(a1, a2);
          return;
        }
      }
      else
      {
        v15 = 0u;
        v16 = 0u;

      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    sub_1B88938A0((uint64_t)&v15);
    goto LABEL_13;
  }
}

uint64_t sub_1B88969DC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t type metadata accessor for NumberFormatterObserver()
{
  return objc_opt_self();
}

uint64_t sub_1B8896A0C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void type metadata accessor for NSKeyValueChangeKey()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_1ED561BD0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1ED561BD0);
  }
}

uint64_t sub_1B8896A70()
{
  return sub_1B8896ADC(&qword_1EF1B6230, (uint64_t)&unk_1B8916A00);
}

uint64_t sub_1B8896A94()
{
  return sub_1B8896ADC(&qword_1EF1B6238, (uint64_t)&unk_1B89169D4);
}

uint64_t sub_1B8896AB8()
{
  return sub_1B8896ADC(&qword_1ED561BC8, (uint64_t)&unk_1B8916A70);
}

uint64_t sub_1B8896ADC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSKeyValueChangeKey();
    result = MEMORY[0x1BCCB4D60](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B8896B1C()
{
  return &unk_1B8916BB8;
}

uint64_t static CalculateExpression.maximumDepth.getter()
{
  return 3;
}

void *sub_1B8896B30()
{
  return &unk_1B8916BC0;
}

uint64_t static CalculateExpression.maximumPostfixDepth.getter()
{
  return 64;
}

uint64_t sub_1B8896B44()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DE30);
  qword_1ED562DB8 = result;
  return result;
}

uint64_t sub_1B8896B68()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DEE0);
  qword_1EF1B7178 = result;
  return result;
}

uint64_t sub_1B8896B8C()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DE80);
  qword_1ED562DD8 = result;
  return result;
}

uint64_t sub_1B8896BB0()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DF08);
  qword_1ED562E08 = result;
  return result;
}

uint64_t sub_1B8896BD4()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DF60);
  qword_1EF1B7188 = result;
  return result;
}

uint64_t sub_1B8896BF8()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9F0C8);
  qword_1EF1B7C60 = result;
  return result;
}

uint64_t sub_1B8896C1C()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DF38);
  qword_1EF1B71A0 = result;
  return result;
}

uint64_t sub_1B8896C40()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DF90);
  qword_1EF1B71B0 = result;
  return result;
}

uint64_t sub_1B8896C64()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DE58);
  qword_1ED562DD0 = result;
  return result;
}

uint64_t sub_1B8896C88()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DEB8);
  qword_1ED562DF0 = result;
  return result;
}

uint64_t sub_1B8896CAC()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DFB8);
  qword_1ED562E20 = result;
  return result;
}

uint64_t sub_1B8896CD0()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9DFE8);
  qword_1ED562E30 = result;
  return result;
}

uint64_t sub_1B8896CF4()
{
  uint64_t result;

  result = sub_1B8878AA4((uint64_t)&unk_1E6E9E018);
  qword_1ED562E40 = result;
  return result;
}

uint64_t CalculateExpression.TokenType.isOperand.getter()
{
  return sub_1B8896E84(&qword_1ED562DC0, &qword_1ED562DB8);
}

uint64_t CalculateExpression.TokenType.isBasicOperator.getter()
{
  return sub_1B8896E84(&qword_1EF1B7170, &qword_1EF1B7178);
}

uint64_t CalculateExpression.TokenType.isOperator.getter()
{
  return sub_1B8896E84(qword_1ED562DE0, &qword_1ED562DD8);
}

uint64_t CalculateExpression.TokenType.isBinaryOperator.getter()
{
  return sub_1B8896E84(qword_1ED562E10, &qword_1ED562E08);
}

uint64_t CalculateExpression.TokenType.isBitwiseOperator.getter()
{
  return sub_1B8896E84(&qword_1EF1B7180, &qword_1EF1B7188);
}

uint64_t CalculateExpression.TokenType.isWordBasedBitwiseOperator.getter()
{
  return sub_1B8896E84(&qword_1EF1B7190, &qword_1EF1B7C60);
}

uint64_t CalculateExpression.TokenType.isPrefixOperator.getter()
{
  return sub_1B8896E84(&qword_1EF1B7198, &qword_1EF1B71A0);
}

uint64_t CalculateExpression.TokenType.isPostfixOperator.getter()
{
  return sub_1B8896E84(&qword_1EF1B71A8, &qword_1EF1B71B0);
}

uint64_t CalculateExpression.TokenType.isConstant.getter()
{
  return sub_1B8896E84(&qword_1ED5624B8, &qword_1ED562DD0);
}

uint64_t CalculateExpression.TokenType.isParenthesis.getter()
{
  return sub_1B8896E84(qword_1ED562DF8, &qword_1ED562DF0);
}

uint64_t CalculateExpression.TokenType.isOpen.getter()
{
  return sub_1B8896E84(&qword_1ED562E28, &qword_1ED562E20);
}

uint64_t CalculateExpression.TokenType.isClose.getter()
{
  return sub_1B8896E84(&qword_1ED562E38, &qword_1ED562E30);
}

uint64_t CalculateExpression.TokenType.isLaTeX.getter()
{
  return sub_1B8896E84(qword_1ED562E48, &qword_1ED562E40);
}

uint64_t sub_1B8896E84(_QWORD *a1, uint64_t *a2)
{
  unsigned __int8 *v2;
  uint64_t v4;

  v4 = *v2;
  if (*a1 != -1)
    swift_once();
  return sub_1B886B18C(v4, *a2);
}

unint64_t sub_1B8896EC4()
{
  unint64_t result;

  result = sub_1B88AC8D4((uint64_t)&unk_1E6E9E048);
  qword_1EF1B71C0 = result;
  return result;
}

unint64_t sub_1B8896EE8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6298);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1B8873F28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8896FF8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6278);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1B8873F28(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B889710C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6280);
  v2 = (_QWORD *)sub_1B8913008();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1B8873F28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8897224(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C10);
  v2 = sub_1B8913008();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8879FD0(v6, (uint64_t)&v13, &qword_1ED561B70);
    v7 = v13;
    result = sub_1B88A9AAC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1B8879E64(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void CalculateExpression.TokenType.match.getter(char *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v3 = *v1;
  if (qword_1EF1B71B8 != -1)
    swift_once();
  v4 = qword_1EF1B71C0;
  if (*(_QWORD *)(qword_1EF1B71C0 + 16) && (v5 = sub_1B8860108(v3), (v6 & 1) != 0))
    v7 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + v5);
  else
    v7 = 51;
  *a1 = v7;
}

unint64_t sub_1B88973D0()
{
  unint64_t result;

  result = sub_1B88AC9A8((uint64_t)&unk_1E6E9DAB0);
  qword_1ED562DA0 = result;
  return result;
}

unint64_t sub_1B88973F4@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = result;
  if (qword_1ED562DA8 != -1)
    result = swift_once();
  v4 = qword_1ED562DA0;
  v5 = *(_QWORD *)(qword_1ED562DA0 + 16);
  if (v5)
  {
    result = sub_1B88A99B0(v2);
    if ((v6 & 1) != 0)
      LOBYTE(v5) = *(_BYTE *)(*(_QWORD *)(v4 + 56) + result);
    else
      LOBYTE(v5) = 0;
  }
  *a2 = v5;
  return result;
}

BOOL static CalculateExpression.TokenType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CalculateExpression.TokenType.hash(into:)()
{
  return sub_1B89130B0();
}

uint64_t CalculateExpression.TokenType.hashValue.getter()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B88974F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = *sub_1B8864010();
  swift_bridgeObjectRetain();
  v1 = sub_1B88ACA7C((uint64_t)&unk_1E6E9D4D0, v0);
  result = swift_arrayDestroy();
  qword_1EF1B71D0 = v1;
  return result;
}

uint64_t sub_1B8897550(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = result;
  v19 = a2;
  if ((result & 0xC000000000000001) != 0)
  {
    sub_1B8912EA0();
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    result = sub_1B8912D98();
    v2 = v20;
    v17 = v21;
    v3 = v22;
    v4 = v23;
    v5 = v24;
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(result + 32);
    v17 = result + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(result + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = *(_QWORD *)(v17 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        goto LABEL_32;
      v15 = *(_QWORD *)(v17 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          goto LABEL_32;
        v15 = *(_QWORD *)(v17 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            goto LABEL_32;
          v15 = *(_QWORD *)(v17 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              goto LABEL_32;
            v15 = *(_QWORD *)(v17 + 8 * v12);
            if (!v15)
            {
              v16 = v4 + 6;
              while (v9 != v16)
              {
                v15 = *(_QWORD *)(v17 + 8 * v16++);
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1B8879F24();
              return v19;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    v13 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    swift_retain();
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_1B88A9B38(&v18, v13);
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1B8912EC4())
      {
        type metadata accessor for CalculateExpression.Operation();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18;
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

uint64_t static CalculateExpression.allWordBasedSymbols.getter()
{
  if (qword_1EF1B71C8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

Calculate::CalculateExpression::Base_optional __swiftcall CalculateExpression.Base.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  if (rawValue == 16)
    v2 = 2;
  else
    v2 = 3;
  if (rawValue == 10)
    v3 = 1;
  else
    v3 = v2;
  if (rawValue == 8)
    v3 = 0;
  *v1 = v3;
  return (Calculate::CalculateExpression::Base_optional)rawValue;
}

uint64_t CalculateExpression.Base.rawValue.getter()
{
  char *v0;

  return qword_1B8917778[*v0];
}

BOOL sub_1B8897864(char *a1, char *a2)
{
  return qword_1B8917778[*a1] == qword_1B8917778[*a2];
}

uint64_t sub_1B8897888()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

uint64_t sub_1B88978D4()
{
  return sub_1B89130B0();
}

uint64_t sub_1B8897908()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

Calculate::CalculateExpression::Base_optional sub_1B8897950(Swift::Int *a1)
{
  return CalculateExpression.Base.init(rawValue:)(*a1);
}

void sub_1B8897958(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1B8917778[*v1];
}

uint64_t CalculateExpression.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v4 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1B8897A34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v5 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1B8897AF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = sub_1B8912840();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B8897C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v4 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t CalculateExpression.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1B8912840();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9 = v0;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v1);
  sub_1B88A9A6C(&qword_1EF1B5FF8, v2, MEMORY[0x1E0CB09C8]);
  sub_1B8912A80();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t CalculateExpression.debugDescription.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = 0;
  v1 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 256);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  swift_retain();
  sub_1B88AD450(v3, v0, (uint64_t)&v7, (unint64_t)&v6);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B38);
  sub_1B887A014(&qword_1ED561B40, &qword_1ED561B38, MEMORY[0x1E0DEAF20]);
  v4 = sub_1B8912A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CalculateExpression.plain.getter()
{
  sub_1B88AD174();
  return swift_retain();
}

uint64_t static CalculateExpression.isHighPrecisionLiteral(_:)()
{
  char v0;

  sub_1B8878944();
  if ((sub_1B8912E64() & 1) != 0)
    v0 = 1;
  else
    v0 = sub_1B8912E64();
  return v0 & 1;
}

uint64_t CalculateExpression.document.getter()
{
  return sub_1B889C0A0();
}

uint64_t sub_1B8897F80(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1B8879E64((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_1B88AB5C4(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8879F94(a1, &qword_1ED561C40);
    sub_1B88AAA30((uint64_t)a2, v7);

    return sub_1B8879F94((uint64_t)v7, &qword_1ED561C40);
  }
}

void *sub_1B8898038()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

id sub_1B88980E4@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3;
  void **v4;
  void *v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = (void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  v5 = *v4;
  *a2 = *v4;
  return v5;
}

void sub_1B8898190(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  v2 = v1;
  sub_1B891287C();
  swift_release();

}

void sub_1B8898244(uint64_t a1, void *a2)
{
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a2;
  v5 = a2;

}

uint64_t CalculateExpression.isEvaluating.getter()
{
  return sub_1B88A6F6C((uint64_t)&unk_1B8916C40, &OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating);
}

uint64_t sub_1B88982B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B88A70D8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating, a2);
}

uint64_t sub_1B88982C8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B8898370()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

id CalculateExpression.result.getter()
{
  uint64_t v0;
  id *v1;
  id result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v1 = (id *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  result = *v1;
  if (*v1)
    return objc_msgSend(result, sel_ignoringNaN);
  return result;
}

uint64_t CalculateExpression.needsEvaluation.getter()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916C68, &OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation);
}

void sub_1B8898544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __CFString *v12;
  id v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  __CFString *v16;
  uint64_t v17;
  char v18;
  __CFString *v19;
  char v20;
  char v21;
  __CFString *v22;
  char v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __CFString *v29;
  id v30;
  char v31;
  id *v32;
  _BYTE *v33;
  id v34;
  id v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  uint64_t v39;

  v1 = v0;
  swift_getKeyPath();
  *(_QWORD *)&v38 = v0;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong
    || (v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 216))(Strong), swift_release(), (v3 & 1) != 0))
  {
    swift_getKeyPath();
    *(_QWORD *)&v38 = v0;
    sub_1B8912888();
    swift_release();
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    {
      swift_getKeyPath();
      MEMORY[0x1E0C80A78]();
      sub_1B891287C();
      swift_release();
      v4 = sub_1B8898F00();
      v6 = v5;
      swift_getKeyPath();
      *(_QWORD *)&v38 = v0;
      sub_1B8912888();
      swift_release();
      v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
      swift_beginAccess();
      v8 = *v7;
      swift_getKeyPath();
      *(_QWORD *)&v38 = v1;
      swift_bridgeObjectRetain();
      sub_1B8912888();
      swift_release();
      v9 = swift_weakLoadStrong();
      v36 = v4;
      if (v9)
      {
        v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 168))(v9);
        v8 = sub_1B889AAEC(v8, v10);
        swift_release();
      }
      v11 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      v12 = CFSTR("CalculateKeyForceResult");
      v13 = objc_msgSend(v11, sel_initWithBool_, 1);
      v14 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
      v39 = v14;
      *(_QWORD *)&v38 = v13;
      sub_1B8879E64(&v38, v37);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1B88AB5C4(v37, v12, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
      v16 = CFSTR("CalculateKeyVariables");
      v17 = sub_1B889942C();
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B28);
      *(_QWORD *)&v38 = v17;
      sub_1B8879E64(&v38, v37);
      v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_1B88AB5C4(v37, v16, v18);

      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v8 + 16)
        || (swift_bridgeObjectRetain(),
            v19 = CFSTR("CalculateKeyAllowEqualSign"),
            sub_1B88A9AAC((uint64_t)v19),
            v21 = v20,
            swift_bridgeObjectRelease(),
            v19,
            (v21 & 1) == 0))
      {
        v39 = MEMORY[0x1E0DEAFA0];
        LOBYTE(v38) = 1;
        sub_1B8879E64(&v38, v37);
        v22 = CFSTR("CalculateKeyAllowEqualSign");
        v23 = swift_isUniquelyReferenced_nonNull_native();
        sub_1B88AB5C4(v37, v22, v23);

        swift_bridgeObjectRelease();
      }
      v24 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 416);
      v25 = swift_retain();
      v24(v25);
      v27 = v26;
      swift_release();
      swift_bridgeObjectRelease();
      if (v27)
      {
        v28 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
        v29 = CFSTR("CalculateKeyConvertTrivial");
        v30 = objc_msgSend(v28, sel_initWithBool_, 0);
        v39 = v14;
        *(_QWORD *)&v38 = v30;
        sub_1B8879E64(&v38, v37);
        v31 = swift_isUniquelyReferenced_nonNull_native();
        sub_1B88AB5C4(v37, v29, v31);

        swift_bridgeObjectRelease();
      }
      v32 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest);
      swift_beginAccess();
      if (*v32)
        objc_msgSend(*v32, sel_cancel);
      swift_getKeyPath();
      MEMORY[0x1E0C80A78]();
      *(_QWORD *)&v37[0] = v1;
      sub_1B891287C();
      swift_release();
      v33 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
      swift_beginAccess();
      *v33 = 0;
      swift_retain();
      v34 = evaluate(_:options:resultHandler:)(v36, v6, v8, (uint64_t)sub_1B88ADB0C, v1);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v35 = *v32;
      *v32 = v34;

    }
  }
}

void *sub_1B8898B28()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

id sub_1B8898BD8@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3;
  void **v4;
  void *v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = (void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  v5 = *v4;
  *a2 = *v4;
  return v5;
}

uint64_t sub_1B8898C88(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  v2 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();

  return swift_release();
}

void sub_1B8898D3C(uint64_t a1, void *a2)
{
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a2;
  v5 = a2;

}

void *CalculateExpression.error.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

uint64_t CalculateExpression.activeError.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 344);
  v1 = swift_retain();
  v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t CalculateExpression.rich.getter()
{
  sub_1B88ACBD0();
  return swift_retain();
}

uint64_t sub_1B8898F00()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v0 = sub_1B88ADB3C();
  swift_bridgeObjectRetain();
  v1 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 416);
  v2 = swift_retain();
  v1(v2);
  v4 = v3;
  swift_release();
  swift_bridgeObjectRelease();
  if (!v4)
    return v0;
  sub_1B8878944();
  if ((sub_1B8912E64() & 1) != 0)
  {
    v5 = sub_1B8912E40();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v5 + 16) >= 2uLL)
      goto LABEL_7;
    __break(1u);
  }
  if ((sub_1B8912E64() & 1) == 0)
    return v0;
  v6 = sub_1B8912E40();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) >= 2uLL)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return sub_1B8912C00();
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.expression.getter()
{
  uint64_t v0;

  v0 = sub_1B88ADB3C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t CalculateExpression.declaredSymbol.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 416);
  v1 = swift_retain();
  v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t CalculateExpression.graphNeedsEvaluation.getter()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916CE0, &OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation);
}

uint64_t sub_1B8899154@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation, a2);
}

uint64_t sub_1B8899168()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

void *sub_1B8899210()
{
  return sub_1B88A298C((uint64_t)&unk_1B8917698, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult);
}

id sub_1B8899224@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A2B7C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult, a2);
}

void sub_1B8899238(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  v2 = v1;
  sub_1B891287C();
  swift_release();

}

uint64_t sub_1B88992EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  v2 = *v1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 168))(Strong);
    v2 = sub_1B889AAEC(v2, v4);
    swift_release();
  }
  return v2;
}

uint64_t sub_1B889942C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  _QWORD *v43;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults);
  swift_beginAccess();
  if (*(_QWORD *)(*v1 + 16)
    || (swift_getKeyPath(),
        sub_1B8912888(),
        swift_release(),
        v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables),
        swift_beginAccess(),
        !*(_QWORD *)(*v2 + 16)))
  {
LABEL_43:
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    return swift_bridgeObjectRetain();
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v38 = *v2 + 64;
  v3 = 1 << *(_BYTE *)(*v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(*v2 + 64);
  v39 = (unint64_t)(v3 + 63) >> 6;
  v40 = *v2;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v42)
  {
    if (v5)
    {
      v41 = (v5 - 1) & v5;
      v42 = i;
      v8 = __clz(__rbit64(v5)) | (i << 6);
    }
    else
    {
      v9 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_46;
      if (v9 >= v39)
      {
LABEL_42:
        swift_release();
        goto LABEL_43;
      }
      v10 = *(_QWORD *)(v38 + 8 * v9);
      v11 = i + 1;
      if (!v10)
      {
        v11 = i + 2;
        if (i + 2 >= v39)
          goto LABEL_42;
        v10 = *(_QWORD *)(v38 + 8 * v11);
        if (!v10)
        {
          v11 = i + 3;
          if (i + 3 >= v39)
            goto LABEL_42;
          v10 = *(_QWORD *)(v38 + 8 * v11);
          if (!v10)
          {
            v12 = i + 4;
            if (i + 4 >= v39)
              goto LABEL_42;
            v10 = *(_QWORD *)(v38 + 8 * v12);
            if (!v10)
            {
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                  goto LABEL_47;
                if (v11 >= v39)
                  goto LABEL_42;
                v10 = *(_QWORD *)(v38 + 8 * v11);
                ++v12;
                if (v10)
                  goto LABEL_23;
              }
            }
            v11 = i + 4;
          }
        }
      }
LABEL_23:
      v41 = (v10 - 1) & v10;
      v42 = v11;
      v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    v13 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v8);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v40 + 56) + 8 * v8) + 104);
    swift_bridgeObjectRetain();
    v17 = swift_retain();
    v18 = v16(v17);
    if (v18)
    {
      v19 = v18;
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      if (*(_BYTE *)(v19 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
        sub_1B8898544();
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      v20 = (id *)(v19 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
      swift_beginAccess();
      if (*v20)
      {
        v21 = objc_msgSend(*v20, sel_ignoringNaN);
        swift_release();
      }
      else
      {
        swift_release();
        v21 = 0;
      }
    }
    else
    {
      v21 = 0;
    }
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    swift_getKeyPath();
    sub_1B89128A0();
    swift_release();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v1;
    v43 = (_QWORD *)*v1;
    *v1 = 0x8000000000000000;
    v25 = sub_1B8873F28(v15, v14);
    v26 = *(_QWORD *)(v23 + 16);
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v29 = v24;
    if (*(_QWORD *)(v23 + 24) >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v32 = v43;
        if ((v24 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1B88AB8F4();
        v32 = v43;
        if ((v29 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1B88AAE1C(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1B8873F28(v15, v14);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_48;
      v25 = v30;
      v32 = v43;
      if ((v29 & 1) != 0)
      {
LABEL_6:
        v7 = v32[7];

        *(_QWORD *)(v7 + 8 * v25) = v21;
        goto LABEL_7;
      }
    }
    v32[(v25 >> 6) + 8] |= 1 << v25;
    v33 = (uint64_t *)(v32[6] + 16 * v25);
    *v33 = v15;
    v33[1] = v14;
    *(_QWORD *)(v32[7] + 8 * v25) = v21;
    v34 = v32[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_45;
    v32[2] = v36;
    swift_bridgeObjectRetain();
LABEL_7:
    *v1 = (uint64_t)v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_getKeyPath();
    sub_1B8912894();
    swift_release();
    swift_release();
    v5 = v41;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

double (*CalculateExpression.graphableFunction.getter())()
{
  void *v0;
  id v1;

  if ((CalculateExpression.isGraphable.getter() & 1) == 0)
    return sub_1B8899DF4;
  v0 = (void *)sub_1B88ADFF0();
  if (!v0)
    return sub_1B8899DF4;
  v1 = objc_msgSend(v0, sel_graphableFunction);
  if (!v1)
    return sub_1B8899DF4;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return (double (*)())sub_1B88AE61C;
}

uint64_t CalculateExpression.isGraphable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) == 1)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    sub_1B891287C();
    swift_release();
    v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 392);
    v4 = swift_retain();
    v5 = v3(v4);
    swift_release();
    if ((v5 & 1) != 0)
    {
      v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 256);
      v7 = swift_retain();
      v8 = v6(v7);
      swift_release();
      if (v8 >> 62)
        goto LABEL_22;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v9; v9 = sub_1B8912FD8())
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x1BCCB4394](0, v8);
          v10 = v11;
        }
        else
        {
          v10 = *(_QWORD *)(v8 + 32);
          v11 = swift_retain();
        }
        v12 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 232))(v11) + 16);
        swift_bridgeObjectRelease();
        if (v12)
          break;
        swift_release();
        if (v9 == 1)
          break;
        v20 = v9;
        v15 = 5;
        while (1)
        {
          v16 = v15 - 4;
          if ((v8 & 0xC000000000000001) == 0)
            break;
          v17 = MEMORY[0x1BCCB4394](v15 - 4, v8);
          v18 = v15 - 3;
          if (__OFADD__(v16, 1))
            goto LABEL_21;
LABEL_18:
          v19 = *(_QWORD *)((*(uint64_t (**)(void))(*(_QWORD *)v17 + 232))() + 16);
          swift_bridgeObjectRelease();
          if (!v19)
          {
            swift_release();
            ++v15;
            if (v18 != v20)
              continue;
          }
          goto LABEL_9;
        }
        v17 = *(_QWORD *)(v8 + 8 * v15);
        swift_retain();
        v18 = v15 - 3;
        if (!__OFADD__(v16, 1))
          goto LABEL_18;
LABEL_21:
        __break(1u);
LABEL_22:
        swift_bridgeObjectRetain();
      }
LABEL_9:
      swift_bridgeObjectRelease_n();
      swift_release();
    }
    v13 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v13);
    sub_1B891287C();
    swift_release();
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable);
}

double sub_1B8899DF4()
{
  return NAN;
}

uint64_t sub_1B8899E00()
{
  unint64_t inited;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8916B30;
  *(_QWORD *)(inited + 32) = *sub_1B887FE8C();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B887FF20();
  swift_retain();
  *(_QWORD *)(inited + 48) = *sub_1B887FFEC();
  swift_retain();
  *(_QWORD *)(inited + 56) = *sub_1B8880080();
  swift_retain();
  *(_QWORD *)(inited + 64) = *sub_1B8880114();
  swift_retain();
  *(_QWORD *)(inited + 72) = *sub_1B88801A8();
  swift_retain();
  *(_QWORD *)(inited + 80) = *sub_1B888023C();
  swift_retain();
  *(_QWORD *)(inited + 88) = *sub_1B88802D0();
  swift_retain();
  *(_QWORD *)(inited + 96) = *sub_1B88805B4();
  swift_retain();
  *(_QWORD *)(inited + 104) = *sub_1B8880648();
  swift_retain();
  *(_QWORD *)(inited + 112) = *sub_1B88806DC();
  swift_retain();
  *(_QWORD *)(inited + 120) = *sub_1B8880770();
  swift_retain();
  *(_QWORD *)(inited + 128) = *sub_1B888091C();
  swift_retain();
  *(_QWORD *)(inited + 136) = *sub_1B88809A8();
  swift_retain();
  *(_QWORD *)(inited + 144) = *sub_1B8882DE4();
  swift_retain();
  *(_QWORD *)(inited + 152) = *sub_1B8882E70();
  swift_retain();
  *(_QWORD *)(inited + 160) = *sub_1B8882EFC();
  sub_1B8912CA8();
  if (inited >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x1E0DEE9E8];
    goto LABEL_6;
  }
  v1 = *(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (!v1)
    goto LABEL_5;
LABEL_3:
  v2 = sub_1B88ADD5C(inited);
LABEL_6:
  result = swift_bridgeObjectRelease();
  qword_1ED562760 = v2;
  return result;
}

uint64_t sub_1B8899FE0()
{
  uint64_t v0;
  unint64_t inited;
  unint64_t v2;
  uint64_t result;

  if (qword_1ED562768 != -1)
    swift_once();
  v0 = qword_1ED562760;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8916B40;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = *sub_1B8880364();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B88803F8();
  swift_retain();
  *(_QWORD *)(inited + 48) = *sub_1B888048C();
  swift_retain();
  *(_QWORD *)(inited + 56) = *sub_1B8880520();
  swift_retain();
  *(_QWORD *)(inited + 64) = *sub_1B8880804();
  swift_retain();
  *(_QWORD *)(inited + 72) = *sub_1B8880890();
  swift_retain();
  *(_QWORD *)(inited + 80) = *sub_1B8880A3C();
  swift_retain();
  *(_QWORD *)(inited + 88) = *sub_1B8880AD0();
  swift_retain();
  *(_QWORD *)(inited + 96) = *sub_1B8880B5C();
  swift_retain();
  *(_QWORD *)(inited + 104) = *sub_1B8880BF0();
  swift_retain();
  *(_QWORD *)(inited + 112) = *sub_1B8880C84();
  swift_retain();
  *(_QWORD *)(inited + 120) = *sub_1B8880D18();
  swift_retain();
  *(_QWORD *)(inited + 128) = *sub_1B8880DB4();
  swift_retain();
  *(_QWORD *)(inited + 136) = *sub_1B8880E50();
  swift_retain();
  *(_QWORD *)(inited + 144) = *sub_1B8880EEC();
  swift_retain();
  *(_QWORD *)(inited + 152) = *sub_1B8880F78();
  swift_retain();
  *(_QWORD *)(inited + 160) = *sub_1B8881004();
  swift_retain();
  *(_QWORD *)(inited + 168) = *sub_1B88810A4();
  swift_retain();
  *(_QWORD *)(inited + 176) = *sub_1B8881144();
  swift_retain();
  *(_QWORD *)(inited + 184) = *sub_1B88811E4();
  swift_retain();
  *(_QWORD *)(inited + 192) = *sub_1B8881284();
  swift_retain();
  *(_QWORD *)(inited + 200) = *sub_1B8881324();
  swift_retain();
  *(_QWORD *)(inited + 208) = *sub_1B88813C4();
  swift_retain();
  *(_QWORD *)(inited + 216) = *sub_1B8881464();
  swift_retain();
  *(_QWORD *)(inited + 224) = *sub_1B8881504();
  swift_retain();
  *(_QWORD *)(inited + 232) = *sub_1B88815A4();
  swift_retain();
  *(_QWORD *)(inited + 240) = *sub_1B8881648();
  swift_retain();
  *(_QWORD *)(inited + 248) = *sub_1B88816EC();
  swift_retain();
  *(_QWORD *)(inited + 256) = *sub_1B8881790();
  swift_retain();
  *(_QWORD *)(inited + 264) = *sub_1B888182C();
  swift_retain();
  *(_QWORD *)(inited + 272) = *sub_1B88818C8();
  swift_retain();
  *(_QWORD *)(inited + 280) = *sub_1B8881964();
  swift_retain();
  *(_QWORD *)(inited + 288) = *sub_1B8881A00();
  swift_retain();
  *(_QWORD *)(inited + 296) = *sub_1B8881A94();
  swift_retain();
  *(_QWORD *)(inited + 304) = *sub_1B8881B28();
  swift_retain();
  *(_QWORD *)(inited + 312) = *sub_1B8881BBC();
  swift_retain();
  *(_QWORD *)(inited + 320) = *sub_1B8881C50();
  sub_1B8912CA8();
  swift_retain();
  v2 = sub_1B88ACAF8(inited, v0);
  result = swift_bridgeObjectRelease();
  qword_1ED562750 = v2;
  return result;
}

uint64_t sub_1B889A2E8()
{
  uint64_t v0;
  unint64_t inited;
  unint64_t v2;
  uint64_t result;

  if (qword_1ED562768 != -1)
    swift_once();
  v0 = qword_1ED562760;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8916B50;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = *sub_1B888205C();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B8882188();
  swift_retain();
  *(_QWORD *)(inited + 48) = *sub_1B888221C();
  swift_retain();
  *(_QWORD *)(inited + 56) = *sub_1B88822B4();
  swift_retain();
  *(_QWORD *)(inited + 64) = *sub_1B888234C();
  swift_retain();
  *(_QWORD *)(inited + 72) = *sub_1B88828B0();
  swift_retain();
  *(_QWORD *)(inited + 80) = *sub_1B888293C();
  swift_retain();
  *(_QWORD *)(inited + 88) = *sub_1B88823E4();
  swift_retain();
  *(_QWORD *)(inited + 96) = *sub_1B8882458();
  swift_retain();
  *(_QWORD *)(inited + 104) = *sub_1B88824CC();
  swift_retain();
  *(_QWORD *)(inited + 112) = *sub_1B8882540();
  swift_retain();
  *(_QWORD *)(inited + 120) = *sub_1B88825B4();
  swift_retain();
  *(_QWORD *)(inited + 128) = *sub_1B8882628();
  swift_retain();
  *(_QWORD *)(inited + 136) = *sub_1B88826FC();
  swift_retain();
  *(_QWORD *)(inited + 144) = *sub_1B8882790();
  swift_retain();
  *(_QWORD *)(inited + 152) = *sub_1B8882824();
  sub_1B8912CA8();
  swift_retain();
  v2 = sub_1B88ACAF8(inited, v0);
  result = swift_bridgeObjectRelease();
  qword_1EF1B71E0 = v2;
  return result;
}

uint64_t sub_1B889A4A0()
{
  uint64_t v0;
  unint64_t inited;
  unint64_t v2;
  uint64_t result;

  if (qword_1EF1B71D8 != -1)
    swift_once();
  v0 = qword_1EF1B71E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8915E20;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = *sub_1B8880364();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B88803F8();
  sub_1B8912CA8();
  swift_retain();
  v2 = sub_1B88ACAF8(inited, v0);
  result = swift_bridgeObjectRelease();
  qword_1EF1B71F0 = v2;
  return result;
}

uint64_t sub_1B889A578()
{
  uint64_t v0;
  unint64_t inited;
  unint64_t v2;
  uint64_t result;

  if (qword_1EF1B71E8 != -1)
    swift_once();
  v0 = qword_1EF1B71F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8916B60;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = *sub_1B8881CE4();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B8881D78();
  swift_retain();
  *(_QWORD *)(inited + 48) = *sub_1B8881E0C();
  swift_retain();
  *(_QWORD *)(inited + 56) = *sub_1B8881EA0();
  swift_retain();
  *(_QWORD *)(inited + 64) = *sub_1B8881F34();
  swift_retain();
  *(_QWORD *)(inited + 72) = *sub_1B8881FC8();
  swift_retain();
  *(_QWORD *)(inited + 80) = *sub_1B88820F0();
  sub_1B8912CA8();
  swift_retain();
  v2 = sub_1B88ACAF8(inited, v0);
  result = swift_bridgeObjectRelease();
  qword_1EF1B7200 = v2;
  return result;
}

uint64_t sub_1B889A6A0()
{
  unint64_t inited;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8916B70;
  *(_QWORD *)(inited + 32) = *sub_1B8882A8C();
  swift_retain();
  *(_QWORD *)(inited + 40) = *sub_1B8882BA4();
  swift_retain();
  *(_QWORD *)(inited + 48) = *sub_1B8882C30();
  swift_retain();
  *(_QWORD *)(inited + 56) = *sub_1B8882B18();
  swift_retain();
  *(_QWORD *)(inited + 64) = *sub_1B8882CBC();
  swift_retain();
  *(_QWORD *)(inited + 72) = *sub_1B8882D58();
  sub_1B8912CA8();
  if (inited >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v3 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x1E0DEE9E8];
    goto LABEL_6;
  }
  v1 = *(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (!v1)
    goto LABEL_5;
LABEL_3:
  v2 = sub_1B88ADD5C(inited);
LABEL_6:
  result = swift_bridgeObjectRelease();
  qword_1EF1B7210 = v2;
  return result;
}

uint64_t CalculateExpression.allowedOperations.getter()
{
  return sub_1B88A2084();
}

uint64_t sub_1B889A7E4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A7424(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations, a2);
}

uint64_t sub_1B889A7F8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889A8B0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation, a2);
}

uint64_t sub_1B889A8C4()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

Swift::Void __swiftcall CalculateExpression.setNeedsEvaluation(rebuild:)(Swift::Bool rebuild)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t KeyPath;
  uint64_t v4;

  if (rebuild)
  {
    v2 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    *v2 = 1;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  v4 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v4);
  sub_1B891287C();
  swift_release();
}

uint64_t CalculateExpression.options.getter()
{
  return sub_1B889C7A8();
}

uint64_t sub_1B889AAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1B88ABAA8(a1, (uint64_t)sub_1B88776EC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1B889AB68()
{
  return sub_1B889AC48((uint64_t)&unk_1B8916DD0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t sub_1B889AB7C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B889ACF8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount, a2);
}

uint64_t sub_1B889AB90()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B889AC34()
{
  return sub_1B889AC48((uint64_t)&unk_1B8916DF8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t sub_1B889AC48(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = v2 + *a2;
  swift_beginAccess();
  return *(_QWORD *)v4;
}

uint64_t sub_1B889ACE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B889ACF8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount, a2);
}

uint64_t sub_1B889ACF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_1B889ADA8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.referenceCount.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
  swift_beginAccess();
  v2 = *v1;
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
  swift_beginAccess();
  result = v2 + *v3;
  if (__OFADD__(v2, *v3))
    __break(1u);
  return result;
}

uint64_t sub_1B889AF58()
{
  uint64_t Strong;
  char v1;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 216))(Strong);
    swift_release();
  }
  else
  {
    v1 = 1;
  }
  return v1 & 1;
}

void sub_1B889B02C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t i;
  unint64_t *v7;
  __objc2_class **v8;
  uint64_t v9;
  int64_t v10;
  __objc2_class **v11;
  unint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6278);
    v2 = (_QWORD *)sub_1B8913008();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v33 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v32 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  v7 = (unint64_t *)&unk_1EF1B6270;
  v8 = off_1E6E9C308;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v16 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v16 >= v32)
    goto LABEL_32;
  v17 = *(_QWORD *)(v33 + 8 * v16);
  v18 = i + 1;
  if (!v17)
  {
    v18 = i + 2;
    if (i + 2 >= v32)
      goto LABEL_32;
    v17 = *(_QWORD *)(v33 + 8 * v18);
    if (!v17)
    {
      v18 = i + 3;
      if (i + 3 >= v32)
        goto LABEL_32;
      v17 = *(_QWORD *)(v33 + 8 * v18);
      if (!v17)
      {
        v18 = i + 4;
        if (i + 4 >= v32)
          goto LABEL_32;
        v17 = *(_QWORD *)(v33 + 8 * v18);
        if (!v17)
        {
          v19 = i + 5;
          if (i + 5 < v32)
          {
            v17 = *(_QWORD *)(v33 + 8 * v19);
            if (v17)
            {
              v18 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v18 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_36;
              if (v18 >= v32)
                break;
              v17 = *(_QWORD *)(v33 + 8 * v18);
              ++v19;
              if (v17)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1B8879F24();
          return;
        }
      }
    }
  }
LABEL_26:
  v34 = (v17 - 1) & v17;
  v15 = __clz(__rbit64(v17)) + (v18 << 6);
  for (i = v18; ; v15 = __clz(__rbit64(v5)) | (i << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v15);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v15);
    sub_1B88796EC(0, v7);
    swift_bridgeObjectRetain();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6210);
    swift_dynamicCast();
    v25 = sub_1B8873F28(v22, v21);
    v26 = v25;
    if ((v27 & 1) != 0)
    {
      v9 = v1;
      v10 = i;
      v11 = v8;
      v12 = v7;
      v13 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *v13 = v22;
      v13[1] = v21;
      v14 = v2[7];

      *(_QWORD *)(v14 + 8 * v26) = v35;
      v7 = v12;
      v8 = v11;
      i = v10;
      v1 = v9;
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    v28 = (uint64_t *)(v2[6] + 16 * v25);
    *v28 = v22;
    v28[1] = v21;
    *(_QWORD *)(v2[7] + 8 * v25) = v35;
    v29 = v2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_34;
    v2[2] = v31;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1B889B35C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  unsigned int v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B48);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a2;
  v8[4] = a1;
  v9 = (void *)objc_opt_self();
  v10 = a1;
  v11 = a2;
  swift_retain();
  v12 = objc_msgSend(v9, sel_currentThread);
  v13 = objc_msgSend(v12, sel_isMainThread);

  if (v13)
  {
    swift_getKeyPath();
    v22 = v10;
    MEMORY[0x1E0C80A78]();
    *(&v21 - 2) = a3;
    *(&v21 - 1) = (uint64_t)a2;
    v23 = a3;
    v14 = a2;
    sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    sub_1B891287C();

    swift_release();
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    *(&v21 - 2) = a3;
    *(&v21 - 1) = (uint64_t)a1;
    v23 = a3;
    v15 = v22;
    sub_1B891287C();
    swift_release();

    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    *(&v21 - 2) = a3;
    *((_BYTE *)&v21 - 8) = 0;
    v23 = a3;
    sub_1B891287C();
  }
  else
  {
    v17 = sub_1B8912D5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
    sub_1B8912D44();
    swift_retain();
    v18 = sub_1B8912D38();
    v19 = (_QWORD *)swift_allocObject();
    v20 = MEMORY[0x1E0DF06E8];
    v19[2] = v18;
    v19[3] = v20;
    v19[4] = sub_1B88AF914;
    v19[5] = v8;
    sub_1B8886514((uint64_t)v7, (uint64_t)&unk_1EF1B6290, (uint64_t)v19);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1B889B680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_1B8912D44();
  v5[4] = sub_1B8912D38();
  sub_1B8912D2C();
  return swift_task_switch();
}

uint64_t sub_1B889B6EC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CalculateExpression.foundSymbols.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 424);
  v1 = swift_retain();
  v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t sub_1B889B764()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  id *v5;
  void *v6;
  id *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  v2 = *v1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 168))(Strong);
    sub_1B889AAEC(v2, v4);
    swift_release();
  }
  v5 = (id *)objc_allocWithZone((Class)CalculateKeys);
  type metadata accessor for CalculateKey();
  sub_1B88A9A6C(&qword_1ED561B60, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B8917790);
  v6 = (void *)sub_1B8912A14();
  swift_bridgeObjectRelease();
  v7 = -[CalculateKeys initWithOptions:](v5, v6);

  -[CalculateKeys assumeDegrees]((uint64_t)v7);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  sub_1B891287C();
  swift_release();
  -[CalculateKeys allowPartialExpressions]((uint64_t)v7);
  v9 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v9);
  sub_1B891287C();
  swift_release();
  -[CalculateKeys flexibleFractionDigits]((uint64_t)v7);
  v10 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v10);
  sub_1B891287C();
  swift_release();
  -[CalculateKeys engine]((uint64_t)v7);
  v11 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v11);
  sub_1B891287C();
  swift_release();
  -[CalculateKeys format]((uint64_t)v7);
  v12 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v12);
  sub_1B891287C();
  swift_release();
  v13 = -[CalculateKeys numberFormatter]((uint64_t)v7);
  v14 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v14);
  sub_1B891287C();
  swift_release();

  v15 = -[CalculateKeys variables]((uint64_t)v7);
  if (v15)
  {
    v16 = v15;
    sub_1B88796EC(0, &qword_1EF1B6270);
    v17 = sub_1B8912A20();

    sub_1B889B02C(v17);
    swift_bridgeObjectRelease();
    v18 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v18);
    sub_1B891287C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v19 = -[CalculateKeys locales]((uint64_t)v7);
  if (v19)
  {
    v20 = v19;
    sub_1B8912870();
    sub_1B8912C9C();

  }
  v21 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v21);
  sub_1B891287C();
  swift_release();
  swift_bridgeObjectRelease();
  v22 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v22);
  sub_1B891287C();
  swift_release();
  v23 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v23);
  sub_1B891287C();
  swift_release();
  v24 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v24);
  sub_1B891287C();

  return swift_release();
}

uint64_t sub_1B889BEA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B889C154(a1);
}

uint64_t sub_1B889BEB8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain();
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B889BF70()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B889C01C()
{
  swift_beginAccess();
  swift_weakAssign();
  swift_retain();
  sub_1B889B764();
  return swift_release();
}

uint64_t CalculateExpression.parent.getter()
{
  return sub_1B889C0A0();
}

uint64_t sub_1B889C0A0()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_1B889C140@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B889C154(a1);
}

uint64_t sub_1B889C154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1B889C208()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain();
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t CalculateExpression.parent.setter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  return swift_release();
}

void (*CalculateExpression.parent.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  v4[7] = OBJC_IVAR____TtC9Calculate19CalculateExpression__parent;
  swift_beginAccess();
  v4[3] = swift_weakLoadStrong();
  return sub_1B889C478;
}

void sub_1B889C478(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *a1;
  swift_weakAssign();
  v4 = v3[4];
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  *v3 = v4;
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  free(v3);
}

uint64_t sub_1B889C528()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;

  v0 = sub_1B8912840();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  v7 = 1;
  sub_1B8912834();
  type metadata accessor for CalculateExpression();
  v4 = swift_allocObject();
  result = CalculateExpression.init(_:options:base:id:)(48, 0xE100000000000000, v3, &v7, (uint64_t)v2);
  qword_1ED562F50 = v4;
  return result;
}

uint64_t CalculateExpression.__allocating_init(_:options:base:id:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1B889C650()
{
  return sub_1B889C7A8();
}

uint64_t sub_1B889C664@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B889D414(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults, a2);
}

uint64_t sub_1B889C678()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889C730(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889C794()
{
  return sub_1B889C7A8();
}

uint64_t sub_1B889C7A8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B889C848@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B889D414(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__variables, a2);
}

uint64_t sub_1B889C85C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889C914(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1B8896FF8(MEMORY[0x1E0DEE9D8]);
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1B889B764();
}

uint64_t sub_1B889CA24()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916D58, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable);
}

uint64_t sub_1B889CA38@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable, a2);
}

uint64_t sub_1B889CA4C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B889CAF4()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916D80, &OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable);
}

uint64_t sub_1B889CB08@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable, a2);
}

uint64_t sub_1B889CB1C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.isLikelyMath.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 456);
  v1 = swift_retain();
  LOBYTE(v0) = v0(v1);
  swift_release();
  return v0 & 1;
}

uint64_t sub_1B889CC04()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916E70, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression);
}

uint64_t sub_1B889CC18@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression, a2);
}

uint64_t sub_1B889CC2C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B889CCD4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B889CD74@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression + 8);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B889CE10()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889CECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1B88ADB3C();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B889CEF8()
{
  swift_bridgeObjectRetain();
  return CalculateExpression.expression.setter();
}

uint64_t CalculateExpression.expression.setter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  sub_1B889B764();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v1 = 1;
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.expression.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1B88ADB3C();
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1B889D248;
}

uint64_t sub_1B889D248(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return CalculateExpression.expression.setter();
  swift_bridgeObjectRetain();
  CalculateExpression.expression.setter();
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.copyableExpression.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 296);
  v1 = swift_retain();
  v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t sub_1B889D2F8()
{
  sub_1B88ACBD0();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B889D400@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B889D414(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__options, a2);
}

uint64_t sub_1B889D414@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B889D4C8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889D580(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B889D5E4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

__n128 sub_1B889D68C@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3;
  __n128 *v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = (__n128 *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange);
  swift_beginAccess();
  v5 = v4[1].n128_u8[0];
  result = *v4;
  *a2 = *v4;
  a2[1].n128_u8[0] = v5;
  return result;
}

uint64_t sub_1B889D740()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B889D7F8()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916EE8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
}

uint64_t sub_1B889D80C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees, a2);
}

uint64_t sub_1B889D820()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.assumeDegrees.getter()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916EE8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
}

uint64_t sub_1B889D8DC()
{
  return CalculateExpression.assumeDegrees.setter();
}

uint64_t CalculateExpression.assumeDegrees.setter()
{
  uint64_t v0;
  uint64_t v1;
  __CFString *v2;
  uint64_t result;
  _QWORD v4[5];

  sub_1B889D2F8();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  v1 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  swift_getKeyPath();
  v2 = CFSTR("CalculateKeyAssumeDegrees");
  sub_1B8912888();
  swift_release();
  v4[3] = v1;
  v4[0] = sub_1B8912E1C();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)v4, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.assumeDegrees.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(_QWORD *)a1 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
  return sub_1B889DCA0;
}

uint64_t sub_1B889DCA0()
{
  return CalculateExpression.assumeDegrees.setter();
}

uint64_t sub_1B889DCC4()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916F10, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
}

uint64_t sub_1B889DCD8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions, a2);
}

uint64_t sub_1B889DCEC()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.allowPartialExpressions.getter()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916F10, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
}

uint64_t sub_1B889DDA8()
{
  return CalculateExpression.allowPartialExpressions.setter();
}

uint64_t CalculateExpression.allowPartialExpressions.setter()
{
  uint64_t v0;
  uint64_t v1;
  __CFString *v2;
  _BYTE *v3;
  uint64_t result;
  _QWORD v5[5];

  sub_1B889D2F8();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  v1 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  swift_getKeyPath();
  v2 = CFSTR("CalculateKeyAllowPartialExpressions");
  sub_1B8912888();
  swift_release();
  v5[3] = v1;
  v5[0] = sub_1B8912E1C();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)v5, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v3 = 1;
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.allowPartialExpressions.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(_QWORD *)a1 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
  return sub_1B889E194;
}

uint64_t sub_1B889E194()
{
  return CalculateExpression.allowPartialExpressions.setter();
}

uint64_t sub_1B889E1B8()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916F38, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
}

uint64_t sub_1B889E1CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1B889E250@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B889E264(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits, a2);
}

uint64_t sub_1B889E264@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  result = swift_release();
  *a3 = *(_BYTE *)(v5 + *a2);
  return result;
}

uint64_t sub_1B889E2FC()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.flexibleFractionDigits.getter()
{
  return sub_1B889E1CC((uint64_t)&unk_1B8916F38, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
}

uint64_t sub_1B889E3B8()
{
  return CalculateExpression.flexibleFractionDigits.setter();
}

uint64_t CalculateExpression.flexibleFractionDigits.setter()
{
  uint64_t v0;
  __CFString *v1;
  _QWORD v3[5];

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  v0 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  swift_getKeyPath();
  v1 = CFSTR("CalculateKeyFlexibleFractionDigits");
  sub_1B8912888();
  swift_release();
  v3[3] = v0;
  v3[0] = sub_1B8912E1C();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)v3, v1);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  return sub_1B889E5DC();
}

uint64_t sub_1B889E5DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t inited;
  __CFString *v54;
  uint64_t *v55;
  __CFString *v56;
  id v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  const __CFString *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t (*v91)(void);
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;

  v1 = v0;
  v84 = *v0;
  isUniquelyReferenced_nonNull_native = sub_1B8912840();
  v3 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  v4 = MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  v83 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v91 = (uint64_t (*)(void))((char *)&v76 - v6);
  swift_getKeyPath();
  v7 = (uint64_t)v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  v94 = v1;
  v8 = (uint64_t (*)(void))sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v9 = MEMORY[0x1E0DEE9D8];
  if (*(uint64_t *)((char *)v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) != 2)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v76 - 2) = (uint64_t)v1;
    *(&v76 - 1) = v9;
    v94 = v1;
    sub_1B891287C();
    return swift_release();
  }
  v95 = MEMORY[0x1E0DEE9D8];
  v96 = MEMORY[0x1E0DEE9D8];
  v92 = (_QWORD *)sub_1B887A064(MEMORY[0x1E0DEE9D8]);
  v10 = swift_getKeyPath();
  v94 = v1;
  sub_1B8912888();
  swift_release();
  v11 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
  if ((unint64_t)v11 >> 62)
    goto LABEL_71;
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = swift_bridgeObjectRetain();
LABEL_4:
  v86 = v1;
  v87 = v8;
  v82 = v7;
  if (v12)
  {
    if (v12 >= 1)
    {
      v14 = 0;
      v89 = v11;
      v90 = v11 & 0xC000000000000001;
      v88 = v12;
      while (1)
      {
        if (v90)
        {
          v16 = MEMORY[0x1BCCB4394](v14, v11);
        }
        else
        {
          v16 = *(_QWORD *)(v11 + 8 * v14 + 32);
          swift_retain();
        }
        v8 = *(uint64_t (**)(void))(*(_QWORD *)sub_1B88ACBD0() + 392);
        swift_retain();
        v7 = v8();
        swift_release();
        if ((unint64_t)v7 >> 62)
        {
          swift_bridgeObjectRetain();
          v32 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (!v32)
          {
LABEL_7:
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_7;
        }
        if ((v7 & 0xC000000000000001) != 0)
        {
          v17 = MEMORY[0x1BCCB4394](0, v7);
        }
        else
        {
          if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_68;
          v17 = *(_QWORD *)(v7 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v11 = v3;
        v8 = *(uint64_t (**)(void))(v3 + 16);
        v18 = (uint64_t)v91;
        v1 = (uint64_t *)isUniquelyReferenced_nonNull_native;
        ((void (*)(uint64_t (*)(void), uint64_t, uint64_t))v8)(v91, v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id, isUniquelyReferenced_nonNull_native);
        swift_retain();
        v7 = (uint64_t)v92;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v94 = (_QWORD *)v7;
        v20 = sub_1B887C468(v18);
        v21 = *(_QWORD *)(v7 + 16);
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          if (v11 < 0)
            v10 = v11;
          else
            v10 = v11 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          v12 = sub_1B8912FD8();
          v13 = swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v24 = v19;
        if (*(_QWORD *)(v7 + 24) >= v23)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v7 = (uint64_t)&v94;
            sub_1B887CEEC();
          }
        }
        else
        {
          sub_1B887C6DC(v23, isUniquelyReferenced_nonNull_native);
          v7 = (uint64_t)v94;
          v25 = sub_1B887C468((uint64_t)v91);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_97;
          v20 = v25;
        }
        v92 = v94;
        if ((v24 & 1) != 0)
        {
          v27 = v94[7];
          swift_release();
          *(_QWORD *)(v27 + 8 * v20) = v16;
          isUniquelyReferenced_nonNull_native = (uint64_t)v1;
          v3 = v11;
        }
        else
        {
          v94[(v20 >> 6) + 8] |= 1 << v20;
          v3 = v11;
          isUniquelyReferenced_nonNull_native = (uint64_t)v1;
          ((void (*)(unint64_t, uint64_t (*)(void), uint64_t *))v8)(v92[6] + *(_QWORD *)(v11 + 72) * v20, v91, v1);
          v28 = v92;
          *(_QWORD *)(v92[7] + 8 * v20) = v16;
          v29 = v28[2];
          v30 = __OFADD__(v29, 1);
          v31 = v29 + 1;
          if (v30)
            goto LABEL_70;
          v28[2] = v31;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t (*)(void), uint64_t))(v3 + 8))(v91, isUniquelyReferenced_nonNull_native);
        swift_release();
        v12 = v88;
        v11 = v89;
LABEL_8:
        ++v14;
        v15 = *(void (**)(_QWORD))(*(_QWORD *)sub_1B88ACBD0() + 352);
        swift_retain();
        v15(0);
        swift_release();
        swift_release();
        if (v12 == v14)
          goto LABEL_32;
      }
    }
    __break(1u);
    goto LABEL_92;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  v35 = v86;
  v10 = *(_QWORD *)(*(_QWORD *)sub_1B88ACBD0() + 392);
  v36 = swift_retain();
  v11 = ((uint64_t (*)(uint64_t))v10)(v36);
  v13 = swift_release();
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v10 = v11;
    else
      v10 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v37 = sub_1B8912FD8();
    v13 = swift_bridgeObjectRelease();
    if (v37)
      goto LABEL_34;
  }
  else
  {
    v37 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v37)
    {
LABEL_34:
      if (v37 < 1)
      {
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      v81 = OBJC_IVAR____TtC9Calculate19CalculateExpression___engine;
      v38 = v11 & 0xC000000000000001;
      v80 = (char *)v35 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base;
      swift_beginAccess();
      v3 = 0;
      v8 = 0;
      v79 = CFSTR("CalculateKeyEngine");
      v77 = MEMORY[0x1E0DEE9C0] + 8;
      v78 = xmmword_1B8915E80;
      v88 = v37;
      v89 = v11;
      v85 = v11 & 0xC000000000000001;
      do
      {
        if (v38)
        {
          isUniquelyReferenced_nonNull_native = MEMORY[0x1BCCB4394](v3, v11);
        }
        else
        {
          isUniquelyReferenced_nonNull_native = *(_QWORD *)(v11 + 8 * v3 + 32);
          swift_retain();
        }
        v39 = swift_retain();
        v7 = (uint64_t)&v95;
        MEMORY[0x1BCCB40AC](v39);
        if (*(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1B8912CCC();
        sub_1B8912CFC();
        sub_1B8912CA8();
        v40 = *(unsigned __int8 *)(isUniquelyReferenced_nonNull_native
                                 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        if (qword_1ED562DC0 != -1)
          swift_once();
        if ((sub_1B886B18C(v40, qword_1ED562DB8) & 1) != 0)
        {
          v41 = v95;
          if (v95 >> 62)
          {
            swift_bridgeObjectRetain();
            v7 = sub_1B8912FD8();
            swift_bridgeObjectRelease();
            if (v7 > 0)
            {
              swift_bridgeObjectRetain();
              if (!sub_1B8912FD8())
              {
                v91 = v8;
                swift_bridgeObjectRelease();
LABEL_58:
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
                inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = v78;
                v54 = (__CFString *)v79;
                *(_QWORD *)(inited + 32) = v79;
                swift_getKeyPath();
                v55 = v86;
                v93 = v86;
                v56 = v54;
                sub_1B8912888();
                swift_release();
                v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, *(uint64_t *)((char *)v55 + v81));
                *(_QWORD *)(inited + 64) = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
                *(_QWORD *)(inited + 40) = v57;
                v58 = sub_1B8897224(inited);
                LOBYTE(v93) = 1;
                v59 = v83;
                sub_1B8912834();
                v60 = swift_allocObject();
                CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, v58, &v93, v59);
                swift_getKeyPath();
                v93 = v55;
                sub_1B8912888();
                swift_release();
                LOBYTE(v58) = *v80;
                v61 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v61);
                *(&v76 - 2) = v60;
                *((_BYTE *)&v76 - 8) = v58;
                v90 = v60 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
                v93 = (_QWORD *)v60;
                v8 = v91;
                sub_1B891287C();
                swift_release();
                v62 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 400);
                swift_retain();
                v63 = swift_bridgeObjectRetain();
                v62(v63);
                swift_release();
                v64 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v64);
                *(&v76 - 2) = v60;
                *(&v76 - 1) = (uint64_t)v55;
                v93 = (_QWORD *)v60;
                swift_retain();
                sub_1B891287C();
                swift_release();
                swift_release();
                v65 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v65);
                *(&v76 - 2) = v60;
                *((_BYTE *)&v76 - 8) = 1;
                v93 = (_QWORD *)v60;
                sub_1B891287C();
                swift_release();
                v66 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v66);
                *(&v76 - 2) = v60;
                *((_BYTE *)&v76 - 8) = 0;
                v93 = (_QWORD *)v60;
                sub_1B891287C();
                swift_release();
                v67 = swift_getKeyPath();
                v1 = &v76;
                MEMORY[0x1E0C80A78](v67);
                *(&v76 - 2) = v60;
                *((_BYTE *)&v76 - 8) = 1;
                v93 = (_QWORD *)v60;
                sub_1B891287C();
                swift_release();
                v68 = swift_retain();
                MEMORY[0x1BCCB40AC](v68);
                if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1B8912CCC();
                sub_1B8912CFC();
                sub_1B8912CA8();
                swift_release();
                swift_release();
                goto LABEL_61;
              }
LABEL_49:
              if ((v41 & 0xC000000000000001) != 0)
              {
                v42 = MEMORY[0x1BCCB4394](0, v41);
              }
              else
              {
                if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_69;
                v42 = *(_QWORD *)(v41 + 32);
                swift_retain();
              }
              swift_bridgeObjectRelease();
              v43 = v92;
              if (!v92[2]
                || (v44 = sub_1B887C468(v42 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id),
                    (v45 & 1) == 0))
              {
                v91 = v8;
                swift_release();
                goto LABEL_58;
              }
              v46 = *(_QWORD **)(v43[7] + 8 * v44);
              v47 = swift_retain_n();
              MEMORY[0x1BCCB40AC](v47);
              if (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1B8912CCC();
              sub_1B8912CFC();
              sub_1B8912CA8();
              v48 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v48);
              *(&v76 - 2) = (uint64_t)v46;
              *((_BYTE *)&v76 - 8) = 1;
              v93 = v46;
              v1 = (uint64_t *)v77;
              sub_1B891287C();
              swift_release();
              v49 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v49);
              *(&v76 - 2) = (uint64_t)v46;
              *((_BYTE *)&v76 - 8) = 0;
              v93 = v46;
              sub_1B891287C();
              swift_release();
              v50 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v50);
              *(&v76 - 2) = (uint64_t)v46;
              *((_BYTE *)&v76 - 8) = 1;
              v93 = v46;
              sub_1B891287C();
              swift_release();
              v51 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v51);
              *(&v76 - 2) = (uint64_t)v46;
              *((_BYTE *)&v76 - 8) = 1;
              v93 = v46;
              sub_1B891287C();
              swift_release();
              v52 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v52);
              *(&v76 - 2) = (uint64_t)v46;
              *((_BYTE *)&v76 - 8) = 1;
              v93 = v46;
              sub_1B891287C();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
LABEL_61:
              v69 = MEMORY[0x1E0DEE9D8];
              v37 = v88;
              v11 = v89;
              v38 = v85;
              swift_bridgeObjectRelease();
              v95 = v69;
              goto LABEL_37;
            }
          }
          else if (*(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_bridgeObjectRetain();
            goto LABEL_49;
          }
        }
        swift_release();
LABEL_37:
        ++v3;
      }
      while (v37 != v3);
    }
  }
  swift_bridgeObjectRelease();
  v10 = v96;
  if (v96 >> 62)
  {
    swift_bridgeObjectRetain();
    v70 = sub_1B8912FD8();
  }
  else
  {
    v70 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v1 = v86;
  if (!v70)
  {
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  v13 = v70 - 1;
  if (__OFSUB__(v70, 1))
    goto LABEL_93;
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_94:
    MEMORY[0x1BCCB4394](v13, v10);
    goto LABEL_87;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_87:
    swift_bridgeObjectRelease();
    v71 = sub_1B88ACBD0();
    swift_retain();
    swift_release();
    v72 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 344);
    v73 = swift_retain();
    v74 = v72(v73);
    swift_release();
    (*(void (**)(uint64_t))(*(_QWORD *)v71 + 352))(v74);
    swift_release();
LABEL_89:
    v75 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v75);
    *(&v76 - 2) = (uint64_t)v1;
    *(&v76 - 1) = v10;
    v93 = v1;
    sub_1B891287C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_97:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t (*CalculateExpression.flexibleFractionDigits.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(_QWORD *)a1 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
  return sub_1B889F6DC;
}

uint64_t sub_1B889F6DC()
{
  return CalculateExpression.flexibleFractionDigits.setter();
}

uint64_t sub_1B889F700()
{
  return sub_1B88A11D8((uint64_t)&unk_1B8916F60, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
}

uint64_t sub_1B889F714@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A1270(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine, a2);
}

uint64_t sub_1B889F728()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.engine.getter()
{
  return sub_1B88A11D8((uint64_t)&unk_1B8916F60, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
}

void sub_1B889F7E0(uint64_t *a1)
{
  CalculateExpression.engine.setter(*a1);
}

void CalculateExpression.engine.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __CFString *v14;
  id v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void (*v21)(void *);
  id v22;
  void (*v23)(uint64_t);
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[4];

  v2 = v1;
  swift_getKeyPath();
  v30[0] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == a1)
    return;
  v26 = OBJC_IVAR____TtC9Calculate19CalculateExpression___engine;
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 344);
  v5 = swift_retain();
  v29 = (void *)v4(v5);
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  sub_1B891287C();
  swift_release();
  v7 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v7);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v30[0] = v1;
  sub_1B8912888();
  swift_release();
  v8 = OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  v30[0] = v1;
  sub_1B8912888();
  swift_release();
  v9 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  v27 = v9;
  v28 = v8;
  if (!*v9)
  {
    CalculateExpression.clear()();
    goto LABEL_8;
  }
  v10 = objc_msgSend(*v9, sel_ignoringNaN);
  CalculateExpression.clear()();
  if (!v10)
  {
LABEL_8:
    v25 = 0;
    goto LABEL_9;
  }
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  v11 = v10;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v11);
  CalculateExpression.update(_:)(v12);
  v25 = v11;

  swift_release();
LABEL_9:
  v13 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v13);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v30[0] = v2;
  v14 = CFSTR("CalculateKeyEngine");
  sub_1B8912888();
  swift_release();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, *(_QWORD *)(v2 + v26));
  v30[3] = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
  v30[0] = v15;
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)v30, v14);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  v16 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v16 = 1;
  v17 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v17);
  sub_1B891287C();
  swift_release();
  v18 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v18);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v2 + v28) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  if (*v27)
  {
    v19 = objc_msgSend(*v27, sel_ignoringNaN, v25);
    CalculateExpression.clear()();
    if (v19)
    {
      type metadata accessor for CalculateExpression.CustomOperandOperation();
      v19 = v19;
      CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v19);
      CalculateExpression.update(_:)(v20);

      swift_release();
    }
  }
  else
  {
    CalculateExpression.clear()();
    v19 = 0;
  }
  sub_1B88A0BB0();
  v21 = *(void (**)(void *))(*(_QWORD *)sub_1B88ACBD0() + 352);
  swift_retain();
  v22 = v29;
  v21(v29);
  swift_release();
  v23 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 232);
  swift_retain();
  v23(1);
  swift_release();
  sub_1B889E5DC();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)Strong + 488))(Strong);

    swift_release();
  }
  else
  {

  }
}

Swift::Void __swiftcall CalculateExpression.clear()()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  _BYTE *v3;
  uint64_t Strong;

  v1 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 424);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  sub_1B889E5DC();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v3 = 1;
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)Strong + 488))(Strong);
    swift_release();
  }
}

uint64_t CalculateExpression.update(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;

  v2 = v1;
  swift_getKeyPath();
  v47 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    v47 = v1;
    sub_1B891287C();
    swift_release();
    v5 = CalculateExpression.update(_:)(a1);
    swift_release();
    return v5 & 1;
  }
  v6 = sub_1B88ACBD0();
  swift_getKeyPath();
  swift_retain();
  sub_1B8912888();
  swift_release();
  v47 = v1;
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  v7 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  swift_beginAccess();
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 712))(a1, v7);
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  v8 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v8);
  sub_1B891287C();
  swift_release();
  v9 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v9);
  sub_1B891287C();
  swift_release();
  sub_1B889E5DC();
  v10 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v10);
  v47 = v2;
  sub_1B891287C();
  swift_release();
  sub_1B88ACBD0();
  swift_retain();
  v11 = CalculateExpression.RichExpression.editingTokens()();
  swift_release();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
    goto LABEL_15;
  v45 = v11 + 32;
  v13 = v11 + 32 + 32 * (v12 - 1);
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)v13 + 272);
  v15 = swift_retain();
  v14(&v47, v15);
  swift_release();
  sub_1B88797D8();
  result = sub_1B8912AA4();
  if ((result & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1B8881BBC();
    v17 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v17);
    v47 = v2;
    swift_retain();
    sub_1B891287C();
LABEL_6:
    swift_release();
    swift_release();
LABEL_17:
    v32 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    *v32 = 1;
    v33 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v33);
    sub_1B891287C();
    swift_release();
    v34 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v34);
    sub_1B891287C();
    swift_release();
    v5 = v46;
    return v5 & 1;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v44 = v18 - 2;
  if (v18 < 2)
    goto LABEL_15;
  if (v12 > v18)
  {
    __break(1u);
    goto LABEL_27;
  }
  v19 = v45 + 32 * (v12 - 1);
  v20 = *(_QWORD *)(v19 + 24);
  v47 = *(_QWORD *)v13;
  v48 = *(_OWORD *)(v19 + 8);
  v49 = v20;
  v21 = CalculateExpression.RichExpression.EditingToken.token.getter();
  if (!v21
    || (v22 = *(unsigned __int8 *)(v21 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        result = swift_release(),
        v22 != 18))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v31 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v31);
    v47 = v2;
    sub_1B891287C();
LABEL_16:
    swift_release();
    goto LABEL_17;
  }
  if (v44 < *(_QWORD *)(v11 + 16))
  {
    v23 = (uint64_t *)(v45 + 32 * v44);
    v25 = *v23;
    v24 = v23[1];
    v26 = v23[2];
    v27 = v23[3];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v47 = v25;
    *(_QWORD *)&v48 = v24;
    *((_QWORD *)&v48 + 1) = v26;
    v49 = v27;
    v28 = CalculateExpression.RichExpression.EditingToken.token.getter();
    if (v28)
    {
      v29 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      if (v29 == 7)
      {
        sub_1B8880D18();
        v30 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v30);
        v47 = v2;
        swift_retain();
        sub_1B891287C();
        swift_release();
        swift_release();
        goto LABEL_6;
      }
    }
    if (v27)
    {
      v35 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 360);
      v36 = swift_retain();
      v37 = v35(v36);
      swift_release();
      if ((v37 & 1) != 0)
      {
        sub_1B8881964();
        v38 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v38);
        v47 = v2;
        swift_retain();
LABEL_24:
        sub_1B891287C();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_16;
      }
      v39 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 344);
      v40 = swift_retain();
      v41 = v39(v40);
      swift_release();
      if ((v41 & 1) != 0)
      {
        sub_1B8880EEC();
        v42 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v42);
        v47 = v2;
        swift_retain();
        goto LABEL_24;
      }
    }
    v43 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v43);
    v47 = v2;
    sub_1B891287C();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_17;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B88A0BB0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v5;
  unint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == 1)
  {
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    if (*v2)
    {
      if (*v2 == 1)
      {
        if (qword_1EF1B71E8 == -1)
          goto LABEL_11;
      }
      else if (qword_1EF1B71F8 == -1)
      {
        goto LABEL_11;
      }
LABEL_22:
      swift_once();
      goto LABEL_11;
    }
    if (qword_1EF1B71D8 != -1)
      goto LABEL_22;
  }
  else if (qword_1ED562758 != -1)
  {
    goto LABEL_22;
  }
LABEL_11:
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1B8912888();
  result = swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
  {
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8916B80;
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 32) = *sub_1B888091C();
    swift_retain();
    *(_QWORD *)(inited + 40) = *sub_1B88809A8();
    swift_retain();
    *(_QWORD *)(inited + 48) = *sub_1B8882EFC();
    sub_1B8912CA8();
    if ((v5 & 0xC000000000000001) != 0)
    {
      if (v5 < 0)
        v7 = v5;
      else
        v7 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_retain();
      v8 = sub_1B8912EAC();
      v9 = sub_1B88A9E00(v7, v8);
      swift_bridgeObjectRelease();
      v5 = v9;
    }
    else
    {
      swift_retain();
    }
    v10 = sub_1B88ABDD0(inited, v5);
    swift_bridgeObjectRelease();
    if (qword_1EF1B7208 != -1)
      swift_once();
    v11 = swift_bridgeObjectRetain();
    sub_1B8897550(v11, v10);
    v12 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v12);
    sub_1B891287C();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*CalculateExpression.engine.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
  return sub_1B88A11A0;
}

void sub_1B88A11A0(uint64_t *a1)
{
  CalculateExpression.engine.setter(*a1);
}

uint64_t sub_1B88A11C4()
{
  return sub_1B88A11D8((uint64_t)&unk_1B8916FD8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
}

uint64_t sub_1B88A11D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  return *(_QWORD *)(v2 + *a2);
}

uint64_t sub_1B88A125C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A1270(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format, a2);
}

uint64_t sub_1B88A1270@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  result = swift_release();
  *a3 = *(_QWORD *)(v5 + *a2);
  return result;
}

uint64_t sub_1B88A1308()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.format.getter()
{
  return sub_1B88A11D8((uint64_t)&unk_1B8916FD8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
}

void sub_1B88A13C0(uint64_t *a1)
{
  CalculateExpression.format.setter(*a1);
}

void CalculateExpression.format.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t KeyPath;
  __CFString *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  void (*v25)(void *);
  id v26;
  void (*v27)(uint64_t);
  void (*v28)(BOOL);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Strong;
  char v36;
  uint64_t v37;
  id v38;
  _QWORD v39[5];

  v2 = v1;
  swift_getKeyPath();
  v39[0] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = OBJC_IVAR____TtC9Calculate19CalculateExpression___format;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) != a1)
  {
    v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 224);
    v6 = swift_retain();
    v36 = v5(v6);
    swift_release();
    if (a1 != 2)
    {
      swift_getKeyPath();
      v39[0] = v1;
      sub_1B8912888();
      swift_release();
      if (*(_QWORD *)(v1 + v4) != 2)
        sub_1B889D2F8();
    }
    v7 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 344);
    v8 = swift_retain();
    v9 = v7(v8);
    swift_release();
    if (a1 != 2)
      goto LABEL_10;
    swift_getKeyPath();
    v39[0] = v1;
    sub_1B8912888();
    swift_release();
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
      sub_1B8898544();
    swift_getKeyPath();
    v39[0] = v1;
    sub_1B8912888();
    swift_release();
    v10 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
    swift_beginAccess();
    if (*v10)
      v38 = objc_msgSend(*v10, sel_ignoringNaN);
    else
LABEL_10:
      v38 = 0;
    swift_getKeyPath();
    v39[0] = v2;
    sub_1B8912888();
    swift_release();
    v37 = *(_QWORD *)(v2 + v4);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    sub_1B891287C();
    swift_release();
    swift_getKeyPath();
    v39[0] = v2;
    v12 = CFSTR("CalculateKeyFormat");
    sub_1B8912888();
    swift_release();
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, *(_QWORD *)(v2 + v4));
    v39[3] = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
    v39[0] = v13;
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    swift_getKeyPath();
    sub_1B89128A0();
    swift_release();
    swift_beginAccess();
    sub_1B8897F80((uint64_t)v39, v12);
    swift_endAccess();
    swift_getKeyPath();
    sub_1B8912894();
    swift_release();
    if (a1 == 2 && !v37)
    {
      CalculateExpression.clear()();
      v14 = (void *)v9;
      if (!v38)
        goto LABEL_28;
      type metadata accessor for CalculateExpression.CustomOperandOperation();
      v15 = v38;
      CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v15);
      CalculateExpression.update(_:)(v16);

LABEL_27:
      swift_release();
LABEL_28:
      v25 = *(void (**)(void *))(*(_QWORD *)sub_1B88ACBD0() + 352);
      swift_retain();
      v26 = v14;
      v25(v14);
      swift_release();
      v27 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 232);
      swift_retain();
      v27(1);
      swift_release();
      v28 = *(void (**)(BOOL))(*(_QWORD *)sub_1B88ACBD0() + 256);
      swift_retain();
      v28((v36 & 1) == 0);
      swift_release();
      sub_1B88A0BB0();
      v29 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v29);
      v39[0] = v2;
      sub_1B891287C();
      swift_release();
      v30 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v30);
      v39[0] = v2;
      sub_1B891287C();
      swift_release();
      sub_1B889E5DC();
      v31 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v31);
      v39[0] = v2;
      sub_1B891287C();
      swift_release();
      v32 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
      swift_beginAccess();
      *v32 = 1;
      v33 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v33);
      sub_1B891287C();
      swift_release();
      v34 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v34);
      sub_1B891287C();
      swift_release();
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)Strong + 488))(Strong);

        swift_release();
      }
      else
      {

      }
      return;
    }
    v14 = (void *)v9;
    if (a1 || v37 != 2)
      goto LABEL_28;
    swift_getKeyPath();
    v39[0] = v2;
    sub_1B8912888();
    swift_release();
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1B8912FD8();
      if (v18)
      {
LABEL_19:
        v19 = v18 - 1;
        if (__OFSUB__(v18, 1))
        {
          __break(1u);
        }
        else if ((v17 & 0xC000000000000001) == 0)
        {
          if ((v19 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v19 < *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
LABEL_24:
            swift_bridgeObjectRelease();
            v20 = sub_1B88ACBD0();
            swift_retain();
            v21 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 392);
            v22 = swift_retain();
            v23 = v21(v22);
            swift_release();
            (*(void (**)(uint64_t))(*(_QWORD *)v20 + 400))(v23);
            swift_release();
            goto LABEL_27;
          }
          __break(1u);
          return;
        }
        MEMORY[0x1BCCB4394](v19, v17);
        goto LABEL_24;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    v24 = *(void (**)(_QWORD))(*(_QWORD *)sub_1B88ACBD0() + 400);
    swift_retain();
    v24(MEMORY[0x1E0DEE9D8]);
    goto LABEL_27;
  }
}

uint64_t CalculateExpression.postfixStack.getter()
{
  return sub_1B88A2084();
}

void (*CalculateExpression.format.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
  return sub_1B88A1DD0;
}

void sub_1B88A1DD0(uint64_t *a1)
{
  CalculateExpression.format.setter(*a1);
}

uint64_t CalculateExpression.effectiveLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561AB0);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v12 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = sub_1B8912870();
  v8 = *(_QWORD *)(v7 - 8);
  if (v6)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v4, v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemLocale);
  sub_1B8912864();

  return sub_1B8879F94((uint64_t)v4, &qword_1ED561AB0);
}

uint64_t CalculateExpression.locales.getter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88A2030(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1B8912BF4();
  else
    return 0;
}

uint64_t sub_1B88A2070()
{
  return sub_1B88A2084();
}

uint64_t sub_1B88A2084()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88A210C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A7424(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___locales, a2);
}

uint64_t sub_1B88A2120()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88A21D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88A2270()
{
  swift_bridgeObjectRetain();
  return CalculateExpression.locales.setter();
}

uint64_t CalculateExpression.locales.setter()
{
  uint64_t v0;
  uint64_t v1;
  __CFString *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  _QWORD v6[5];

  v1 = v0;
  sub_1B889D2F8();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v6[0] = v0;
  v2 = CFSTR("CalculateKeyLocales");
  sub_1B8912888();
  swift_release();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B30);
  v6[0] = v3;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)v6, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v4 = 1;
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.locales.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  swift_bridgeObjectRetain();
  return sub_1B88A2668;
}

uint64_t sub_1B88A2668(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return CalculateExpression.locales.setter();
  swift_bridgeObjectRetain();
  CalculateExpression.locales.setter();
  return swift_bridgeObjectRelease();
}

void *sub_1B88A26B0()
{
  return sub_1B88A298C((uint64_t)&unk_1B8917670, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver);
}

id sub_1B88A26C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A2B7C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver, a2);
}

void sub_1B88A26D8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  v2 = v1;
  sub_1B891287C();
  swift_release();

}

void sub_1B88A278C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  if (v1)
  {
    type metadata accessor for NumberFormatterObserver();
    v2 = swift_allocObject();
    swift_weakInit();
    v3 = v1;
    swift_retain();
    v4 = sub_1B8896484(v3, (uint64_t)sub_1B88AF4F8, v2, (uint64_t)sub_1B88AF500, v0);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    sub_1B891287C();

    swift_release();
  }
  else
  {
    v6 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v6);
    sub_1B891287C();
    swift_release();
  }
}

void *sub_1B88A2978()
{
  return sub_1B88A298C((uint64_t)&unk_1B8917050, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
}

void *sub_1B88A298C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = *(void **)(v2 + *a2);
  v5 = v4;
  return v4;
}

uint64_t sub_1B88A2A18()
{
  uint64_t result;
  uint64_t v1;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_getKeyPath();
    sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    sub_1B8912888();
    swift_release();
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
      sub_1B889E5DC();
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    sub_1B891287C();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_1B88A2B68@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A2B7C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter, a2);
}

id sub_1B88A2B7C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  void *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = *(void **)(v5 + *a2);
  *a3 = v6;
  return v6;
}

void sub_1B88A2C14(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  v2 = v1;
  sub_1B891287C();
  swift_release();

}

void sub_1B88A2CC8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter) = a2;
  v3 = a2;

  sub_1B88A278C();
}

void *CalculateExpression.numberFormatter.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  v2 = v1;
  return v1;
}

id sub_1B88A2DA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *a2 = v4;
  return v4;
}

void sub_1B88A2E3C(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  CalculateExpression.numberFormatter.setter(v1);
}

void CalculateExpression.numberFormatter.setter(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  __CFString *v5;
  void *v6;
  id v7;
  _BYTE *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t Strong;
  __int128 v12;
  __int128 v13;

  v2 = v1;
  sub_1B889D2F8();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  v4 = a1;
  sub_1B891287C();
  swift_release();

  swift_getKeyPath();
  v5 = CFSTR("CalculateKeyNumberFormatter");
  sub_1B8912888();
  swift_release();
  v6 = *(void **)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  if (v6)
  {
    *((_QWORD *)&v13 + 1) = sub_1B88796EC(0, &qword_1ED561B98);
    *(_QWORD *)&v12 = v6;
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  swift_getKeyPath();
  v7 = v6;
  sub_1B8912888();
  swift_release();
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  swift_beginAccess();
  sub_1B8897F80((uint64_t)&v12, v5);
  swift_endAccess();
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  v8 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v8 = 1;
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  sub_1B891287C();
  swift_release();
  v10 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v10);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)Strong + 488))(Strong);
    swift_release();
  }

}

void (*CalculateExpression.numberFormatter.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;

  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *a1 = v3;
  v4 = v3;
  return sub_1B88A32A0;
}

void sub_1B88A32A0(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    CalculateExpression.numberFormatter.setter(v2);

  }
  else
  {
    CalculateExpression.numberFormatter.setter(*a1);
  }
}

uint64_t sub_1B88A32F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;

  sub_1B88A0BB0();
  sub_1B88ACBD0();
  v1 = swift_retain();
  sub_1B88A35D4(v1);
  swift_release();
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  v2 = swift_release();
  sub_1B889E5DC(v2);
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v3 = 1;
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 488))(result);
    return swift_release();
  }
  return result;
}

unint64_t sub_1B88A35D4(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 392))();
  v3 = result;
  if (!(result >> 62))
  {
    v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  result = sub_1B8912FD8();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1BCCB4394](i, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain();
      }
      if (*(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type) == 1)
      {
        swift_getKeyPath();
        v11 = v1;
        sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
        sub_1B8912888();
        swift_release();
        LOBYTE(v11) = *v5;
        (*(void (**)(uint64_t *))(*(_QWORD *)v7 + 400))(&v11);
      }
      else
      {
        v8 = (*(uint64_t (**)(void))(*(_QWORD *)v7 + 256))();
        if (v8)
        {
          ((void (*)(void))sub_1B88A35D4)();
          v8 = swift_release();
        }
        v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 280))(v8);
        if (v9)
        {
          v10 = v9;
          if (((*(uint64_t (**)(void))(*(_QWORD *)v7 + 368))() & 1) == 0)
            sub_1B88A35D4(v10);
          swift_release();
        }
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1B88A3800(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B88A3848;
}

uint64_t sub_1B88A3848(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1B88A32F8();
  return result;
}

uint64_t CalculateExpression.base.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_1B88A3924@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = (_BYTE *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_1B88A39D0()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t CalculateExpression.base.setter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

void (*CalculateExpression.base.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_1B89128A0();
  swift_release();
  v4[7] = sub_1B88A3800((uint64_t)v4);
  return sub_1B88A3C08;
}

void sub_1B88A3C08(_QWORD *a1)
{
  sub_1B88A3C14(a1);
}

void sub_1B88A3C14(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_1B8912894();
  swift_release();
  free(v1);
}

uint64_t CalculateExpression.effectiveBase.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t Strong;
  char *v4;
  char v5;
  uint64_t result;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    Strong = v1;
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  if (*(_QWORD *)(Strong + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == 1)
  {
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v4 = (char *)(Strong + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    v5 = *v4;
  }
  else
  {
    v5 = 1;
  }
  result = swift_release();
  *a1 = v5;
  return result;
}

unint64_t CalculateExpression.lastOperand.getter()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  unint64_t v7;
  uint64_t i;
  unint64_t v9;
  unint64_t p_info;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  int v32;
  BOOL v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t inited;
  uint64_t v49;
  __CFString *v50;
  unint64_t v51;
  Swift::String v52;
  CalculateResult_optional *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __CFString *v58;
  unint64_t v59;
  Swift::String v60;
  CalculateResult_optional *v61;
  uint64_t v62;
  uint64_t v63;
  __objc2_class_ro **v64;
  uint64_t v65[9];

  v4 = v0;
  v5 = sub_1B88ACBD0();
  v6 = *(uint64_t (**)(void))(*(_QWORD *)v5 + 392);
  swift_retain();
  v7 = v6();
  if (v7 >> 62)
    goto LABEL_67;
  for (i = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10); ; i = sub_1B8912FD8())
  {
    swift_bridgeObjectRelease();
    v9 = i - 1;
    if (__OFSUB__(i, 1))
    {
      __break(1u);
LABEL_69:
      swift_once();
      goto LABEL_11;
    }
    v3 = *(_QWORD *)(*(_QWORD *)v5 + 416);
    v1 = ((uint64_t (*)(uint64_t))v3)(i - 1);
    if (!v1)
      goto LABEL_63;
    v64 = (__objc2_class_ro **)v6;
    swift_getKeyPath();
    v65[0] = v4;
    sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    swift_retain();
    sub_1B8912888();
    swift_release();
    v2 = (unint64_t *)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    p_info = (unint64_t)&OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation.info;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
    {
      v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      if (qword_1ED562DC0 != -1)
        goto LABEL_77;
      goto LABEL_7;
    }
LABEL_10:
    v4 = *v2;
    v7 = *(unsigned __int8 *)(v1 + *v2);
    if (*(_QWORD *)(p_info + 3520) != -1)
      goto LABEL_69;
LABEL_11:
    result = sub_1B886B18C(v7, qword_1ED562DB8);
    if ((result & 1) == 0)
      break;
    v63 = i;
    v6 = (uint64_t (*)(void))(v9 - 1);
    if (!__OFSUB__(v9, 1))
      goto LABEL_13;
LABEL_66:
    __break(1u);
LABEL_67:
    ;
  }
  v28 = *(unsigned __int8 *)(v1 + v4);
  if (v28 == 7)
  {
    v63 = i;
    v6 = (uint64_t (*)(void))(v9 - 1);
    if (__OFSUB__(v9, 1))
    {
      __break(1u);
      goto LABEL_82;
    }
    v29 = ((uint64_t (*)(unint64_t))v3)(v9 - 1);
    if (v29)
    {
      v30 = *(unsigned __int8 *)(v29 + *v2);
      swift_release();
      if ((sub_1B886B18C(v30, qword_1ED562DB8) & 1) != 0)
      {
LABEL_13:
        v4 = v9;
        while (1)
        {
          v15 = ((uint64_t (*)(uint64_t (*)(void)))v3)(v6);
          if (!v15)
          {
            v12 = swift_release();
            v65[0] = v4;
            p_info = (unint64_t)v64;
            goto LABEL_36;
          }
          v16 = v3;
          v17 = v5;
          v18 = v9;
          v19 = v1;
          v20 = v2;
          v2 = (unint64_t *)*(unsigned __int8 *)(v15 + *v2);
          swift_release();
          v3 = qword_1ED562DB8;
          if (!*(_QWORD *)(qword_1ED562DB8 + 16))
            break;
          sub_1B89130A4();
          sub_1B89130B0();
          v7 = (unint64_t)v65;
          v21 = sub_1B89130BC();
          v22 = -1 << *(_BYTE *)(v3 + 32);
          v23 = v21 & ~v22;
          v24 = v3 + 56;
          if (((*(_QWORD *)(v3 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v25 = *(_QWORD *)(v3 + 48);
          if (*(unsigned __int8 *)(v25 + v23) != (_DWORD)v2)
          {
            v26 = ~v22;
            v27 = (v23 + 1) & v26;
            if (((*(_QWORD *)(v24 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
              break;
            while (*(unsigned __int8 *)(v25 + v27) != (_DWORD)v2)
            {
              v27 = (v27 + 1) & v26;
              if (((*(_QWORD *)(v24 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
              {
                v65[0] = v4;
                v1 = v19;
                v12 = swift_release();
                goto LABEL_35;
              }
            }
          }
          v4 = (unint64_t)v6;
          v14 = __OFSUB__(v6, 1);
          v6 = (uint64_t (*)(void))((char *)v6 - 1);
          v2 = v20;
          v1 = v19;
          v9 = v18;
          v5 = v17;
          v3 = v16;
          if (v14)
            goto LABEL_66;
        }
        v1 = v19;
        v12 = swift_release();
        v65[0] = v4;
LABEL_35:
        p_info = (unint64_t)v64;
        v9 = v18;
        v5 = v17;
LABEL_36:
        i = v63;
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_63;
        goto LABEL_37;
      }
    }
    v28 = *(unsigned __int8 *)(v1 + v4);
  }
  v31 = v28 > 0x10;
  v32 = (1 << v28) & 0x10180;
  v33 = v31 || v32 == 0;
  p_info = (unint64_t)v64;
  if (v33)
  {
    swift_release();
    goto LABEL_63;
  }
  v65[0] = v9;
  sub_1B88834C4(v65);
  v12 = swift_release();
  v4 = v65[0];
  if (v65[0] < 0)
    goto LABEL_63;
LABEL_37:
  while (2)
  {
    if ((uint64_t)v9 < (uint64_t)v4)
    {
      __break(1u);
      goto LABEL_71;
    }
    result = ((uint64_t (*)(uint64_t))p_info)(v12);
    v14 = __OFADD__(v9++, 1);
    if (v14)
    {
LABEL_71:
      __break(1u);
      break;
    }
    p_info = result;
    v2 = (unint64_t *)(result >> 62);
    if (!(result >> 62))
    {
      v11 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= v4)
      {
        if (v11 >= (uint64_t)v9)
          goto LABEL_42;
LABEL_74:
        __break(1u);
      }
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_once();
LABEL_7:
      if ((sub_1B886B18C(v11, qword_1ED562DB8) & 1) == 0)
        goto LABEL_10;
      v12 = swift_release();
      v65[0] = v9;
      v4 = v9;
      p_info = (unint64_t)v64;
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_63;
      continue;
    }
    break;
  }
  result = sub_1B8912FD8();
  if ((uint64_t)result < (uint64_t)v4)
    goto LABEL_84;
  swift_bridgeObjectRetain();
  v11 = sub_1B8912FD8();
  result = swift_bridgeObjectRelease();
  if (v11 < (uint64_t)v9)
    goto LABEL_74;
LABEL_42:
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_76;
  if ((p_info & 0xC000000000000001) == 0)
    goto LABEL_49;
  if (v9 < v4)
  {
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v4 == v9)
    goto LABEL_49;
  if (v4 >= v9)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  type metadata accessor for CalculateExpression.RichToken();
  v34 = v4;
  do
  {
    v35 = v34 + 1;
    sub_1B8912F54();
    v34 = v35;
  }
  while (i != v35);
LABEL_49:
  if (v2)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1B8912FE4();
    i = v36;
    v4 = v37;
    v9 = v38;
    swift_bridgeObjectRelease_n();
    if ((v9 & 1) != 0)
      goto LABEL_54;
    goto LABEL_53;
  }
  v11 = p_info & 0xFFFFFFFFFFFFFF8;
  i = (p_info & 0xFFFFFFFFFFFFFF8) + 32;
  v9 = (2 * v9) | 1;
  if ((v9 & 1) == 0)
  {
LABEL_53:
    sub_1B887F75C(v11, i, v4, v9);
    v40 = v39;
    goto LABEL_60;
  }
LABEL_54:
  sub_1B891305C();
  swift_unknownObjectRetain_n();
  v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_unknownObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
  }
  v42 = *(_QWORD *)(v41 + 16);
  swift_release();
  if (__OFSUB__(v9 >> 1, v4))
    goto LABEL_79;
  if (v42 != (v9 >> 1) - v4)
  {
LABEL_80:
    swift_unknownObjectRelease();
    goto LABEL_53;
  }
  v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_unknownObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
  }
LABEL_60:
  swift_unknownObjectRelease();
  type metadata accessor for CalculateExpression.RichExpression();
  sub_1B88622EC(v40);
  type metadata accessor for CalculateExpression.PlainExpression();
  v43 = swift_retain();
  v44 = CalculateExpression.PlainExpression.__allocating_init(_:)(v43);
  v45 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 288))(v44);
  v47 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8915E80;
  *(_QWORD *)(inited + 32) = CFSTR("CalculateKeyLocales");
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6248);
  sub_1B8912870();
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1B8915E80;
  v50 = CFSTR("CalculateKeyLocales");
  sub_1B891284C();
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B30);
  *(_QWORD *)(inited + 40) = v49;
  v51 = sub_1B8897224(inited);
  v52._countAndFlagsBits = v45;
  v52._object = v47;
  evaluate(_:options:)(v53, v52, (Swift::OpaquePointer)v51);
  v55 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v55)
  {
LABEL_64:
    swift_release();
    swift_release();
    return v55;
  }
  else
  {
LABEL_63:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
    v56 = swift_initStackObject();
    *(_OWORD *)(v56 + 16) = xmmword_1B8915E80;
    *(_QWORD *)(v56 + 32) = CFSTR("CalculateKeyLocales");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6248);
    sub_1B8912870();
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1B8915E80;
    v58 = CFSTR("CalculateKeyLocales");
    sub_1B891284C();
    *(_QWORD *)(v56 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B30);
    *(_QWORD *)(v56 + 40) = v57;
    v59 = sub_1B8897224(v56);
    v60._countAndFlagsBits = 48;
    v60._object = (void *)0xE100000000000000;
    evaluate(_:options:)(v61, v60, (Swift::OpaquePointer)v59);
    v55 = v62;
    result = swift_bridgeObjectRelease();
    if (v55)
      goto LABEL_64;
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
  }
  return result;
}

void CalculateExpression.lastOperand.setter(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t **v39;
  __objc2_class_ro **p_info;
  uint64_t i;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __objc2_class_ro **v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  uint64_t (*v61)(_QWORD *);
  _QWORD *v62;
  _QWORD *v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t Strong;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned int v74;
  unsigned __int8 v75;
  unint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned int v79;
  char v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[9];
  uint64_t v86;
  uint64_t v87[5];

  v2 = v1;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB37F0]);
  v5 = a1;
  v6 = objc_msgSend(v4, sel_init);
  objc_msgSend(v6, sel_setNumberStyle_, 0);
  objc_msgSend(v6, sel_setUsesGroupingSeparator_, 0);
  objc_msgSend(v5, sel_setNumberFormatter_, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6248);
  sub_1B8912870();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B8915E80;
  sub_1B891284C();
  v7 = (void *)sub_1B8912C90();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setLocales_, v7);

  v8 = objc_msgSend(v5, sel_formattedResult);
  v9 = sub_1B8912AD4();
  v11 = v10;

  v12 = HIBYTE(v11) & 0xF;
  v13 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v11) & 0xF;
  else
    v14 = v9 & 0xFFFFFFFFFFFFLL;
  v82 = v5;
  if (v14)
  {
    if ((v11 & 0x1000000000000000) != 0)
    {
      v16 = sub_1B8874504(v9, v11, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1B8860848);
      v18 = v80;
LABEL_37:
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        v25 = 0;
      else
        v25 = v16;
      goto LABEL_40;
    }
    if ((v11 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0)
        v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v15 = (unsigned __int8 *)sub_1B8912F84();
      v16 = (unint64_t)sub_1B8860848(v15, v13, 10);
      v18 = v17 & 1;
      goto LABEL_37;
    }
    v85[0] = v9;
    v85[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v12)
        goto LABEL_112;
      if (v12 == 1 || (BYTE1(v9) - 48) > 9u)
        goto LABEL_33;
      v16 = (BYTE1(v9) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u)
          goto LABEL_33;
        v16 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        v22 = v12 - 3;
        if (v22)
        {
          v23 = (unsigned __int8 *)v85 + 3;
          while (1)
          {
            v24 = *v23 - 48;
            if (v24 > 9)
              goto LABEL_33;
            if (!is_mul_ok(v16, 0xAuLL))
              goto LABEL_33;
            v20 = __CFADD__(10 * v16, v24);
            v16 = 10 * v16 + v24;
            if (v20)
              goto LABEL_33;
            v18 = 0;
            ++v23;
            if (!--v22)
              goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            v19 = BYTE1(v9) - 48;
            if ((BYTE1(v9) - 48) <= 9u)
            {
              v16 = 0;
              v20 = v19 == 0;
              v21 = -(uint64_t)v19;
              if (!v20)
                goto LABEL_34;
              if (v12 == 2)
              {
                v18 = 0;
                v16 = v21;
                goto LABEL_37;
              }
              v75 = BYTE2(v9) - 48;
              if ((BYTE2(v9) - 48) <= 9u && is_mul_ok(v21, 0xAuLL))
              {
                v76 = 10 * v21;
                v16 = v76 - v75;
                if (v76 >= v75)
                {
                  v77 = v12 - 3;
                  if (v77)
                  {
                    v78 = (unsigned __int8 *)v85 + 3;
                    while (1)
                    {
                      v79 = *v78 - 48;
                      if (v79 > 9)
                        goto LABEL_33;
                      if (!is_mul_ok(v16, 0xAuLL))
                        goto LABEL_33;
                      v20 = 10 * v16 >= v79;
                      v16 = 10 * v16 - v79;
                      if (!v20)
                        goto LABEL_33;
                      v18 = 0;
                      ++v78;
                      if (!--v77)
                        goto LABEL_37;
                    }
                  }
                  goto LABEL_36;
                }
              }
            }
          }
LABEL_33:
          v16 = 0;
LABEL_34:
          v18 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
        return;
      }
      if (!v12 || (v9 - 48) > 9u)
        goto LABEL_33;
      v16 = (v9 - 48);
      if (v12 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u)
          goto LABEL_33;
        v16 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        v72 = v12 - 2;
        if (v72)
        {
          v73 = (unsigned __int8 *)v85 + 2;
          while (1)
          {
            v74 = *v73 - 48;
            if (v74 > 9)
              goto LABEL_33;
            if (!is_mul_ok(v16, 0xAuLL))
              goto LABEL_33;
            v20 = __CFADD__(10 * v16, v74);
            v16 = 10 * v16 + v74;
            if (v20)
              goto LABEL_33;
            v18 = 0;
            ++v73;
            if (!--v72)
              goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    v18 = 0;
    goto LABEL_37;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    v25 = 0;
LABEL_40:
    type metadata accessor for CalculateExpression.RichToken();
    v85[0] = v25;
    swift_getKeyPath();
    v87[1] = v2;
    sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    sub_1B8912888();
    swift_release();
    v26 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    sub_1B8878988();
    v27 = sub_1B8912BE8();
    v29 = v28;
    swift_getKeyPath();
    v85[0] = v2;
    sub_1B8912888();
    swift_release();
    LOBYTE(v85[0]) = *v26;
    v30 = sub_1B886210C(v27, v29, (char *)v85);
    v31 = sub_1B88ACBD0();
    v32 = *(uint64_t (**)(void))(*(_QWORD *)v31 + 392);
    swift_retain();
    v33 = v32();
    v34 = v33 >> 62 ? sub_1B8912FD8() : *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    v35 = v34 - 1;
    if (__OFSUB__(v34, 1))
      break;
    v84 = v30;
    v36 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 416);
    v37 = v36(v34 - 1);
    v87[0] = -1;
    v83 = v37;
    if (!v37)
      goto LABEL_78;
    v38 = v37;
    swift_getKeyPath();
    v85[0] = v2;
    swift_retain();
    sub_1B8912888();
    swift_release();
    v39 = (uint64_t **)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    p_info = &OBJC_METACLASS____TtCC9Calculate19CalculateExpression22CustomOperandOperation.info;
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
    {
      i = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      if (qword_1ED562DC0 != -1)
        goto LABEL_110;
      goto LABEL_46;
    }
    while (1)
    {
      v39 = (uint64_t **)*v39;
      v42 = *((unsigned __int8 *)v39 + v38);
      if (p_info[440] != (__objc2_class_ro *)-1)
        swift_once();
      if ((sub_1B886B18C(v42, qword_1ED562DB8) & 1) != 0)
        break;
      v54 = *((unsigned __int8 *)v39 + v38);
      if (v54 == 7)
      {
        v81 = v35;
        v43 = __OFSUB__(v35, 1);
        v44 = v35 - 1;
        if (v43)
          goto LABEL_113;
        v55 = v36(v44);
        if (v55)
        {
          v56 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          if ((sub_1B886B18C(v56, qword_1ED562DB8) & 1) != 0)
            goto LABEL_52;
        }
        v54 = *((unsigned __int8 *)v39 + v83);
        v35 = v81;
      }
      if (v54 > 0x10 || ((1 << v54) & 0x10180) == 0)
      {
        swift_release();
LABEL_78:
        v61 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)v31 + 408);
        swift_retain();
        v33 = v61(v85);
        v63 = v62;
        MEMORY[0x1BCCB40AC]();
        if (*(_QWORD *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          goto LABEL_106;
        goto LABEL_79;
      }
      v87[0] = v35;
      p_info = (__objc2_class_ro **)v31;
      sub_1B88834C4(v87);
      swift_release();
      for (i = v87[0]; ; i = v35)
      {
        v38 = v84;
        if (i < 0)
          goto LABEL_78;
LABEL_74:
        if (v35 < i)
        {
          __break(1u);
        }
        else
        {
          v57 = (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v31 + 408))(v85);
          p_info = v58;
          v59 = v35 + 1;
          if (!__OFADD__(v35, 1))
          {
            v60 = (void (*)(_QWORD *, _QWORD))v57;
            sub_1B885E87C(i, v59);
            v60(v85, 0);
            goto LABEL_78;
          }
        }
        __break(1u);
LABEL_110:
        swift_once();
LABEL_46:
        if ((sub_1B886B18C(i, qword_1ED562DB8) & 1) == 0)
          break;
        swift_release();
        v87[0] = v35;
      }
    }
    v81 = v35;
    v43 = __OFSUB__(v35, 1);
    v44 = v35 - 1;
    if (!v43)
    {
LABEL_52:
      i = v81;
      while (1)
      {
        p_info = (__objc2_class_ro **)v31;
        v45 = v36(v44);
        if (!v45)
          break;
        v39 = (uint64_t **)*(unsigned __int8 *)(v45 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        v46 = qword_1ED562DB8;
        if (!*(_QWORD *)(qword_1ED562DB8 + 16))
          break;
        sub_1B89130A4();
        p_info = (__objc2_class_ro **)v85;
        sub_1B89130B0();
        v47 = sub_1B89130BC();
        v48 = -1 << *(_BYTE *)(v46 + 32);
        v49 = v47 & ~v48;
        v50 = v46 + 56;
        if (((*(_QWORD *)(v46 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v51 = *(_QWORD *)(v46 + 48);
        if (*(unsigned __int8 *)(v51 + v49) != (_DWORD)v39)
        {
          v52 = ~v48;
          v53 = (v49 + 1) & v52;
          if (((*(_QWORD *)(v50 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
            break;
          while (*(unsigned __int8 *)(v51 + v53) != (_DWORD)v39)
          {
            v53 = (v53 + 1) & v52;
            if (((*(_QWORD *)(v50 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
            {
              v87[0] = i;
              swift_release();
              goto LABEL_73;
            }
          }
        }
        i = v44;
        v43 = __OFSUB__(v44--, 1);
        if (v43)
          goto LABEL_101;
      }
      swift_release();
      v87[0] = i;
LABEL_73:
      v38 = v84;
      v35 = v81;
      if (i < 0)
        goto LABEL_78;
      goto LABEL_74;
    }
LABEL_101:
    __break(1u);
  }
  __break(1u);
LABEL_106:
  sub_1B8912CCC();
LABEL_79:
  sub_1B8912CFC();
  sub_1B8912CA8();
  ((void (*)(_QWORD *, _QWORD))v33)(v85, 0);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  v85[0] = v2;
  sub_1B891287C();
  swift_release();
  v65 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v65);
  v85[0] = v2;
  sub_1B891287C();
  swift_release();
  sub_1B889E5DC();
  v66 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v66);
  v85[0] = v2;
  sub_1B891287C();
  swift_release();
  v67 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v67);
  v85[0] = v2;
  sub_1B891287C();
  swift_release();
  v68 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *v68 = 1;
  v69 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v69);
  v86 = v2;
  sub_1B891287C();
  swift_release();
  v70 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v70);
  v86 = v2;
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v86 = v2;
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)Strong + 488))(Strong);
    swift_release();
  }
  swift_release();
  swift_release();

  swift_release();
}

void CalculateExpression.bits.getter()
{
  uint64_t v0;
  void *v1;
  const char *v2;
  int *v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;

  v0 = sub_1B8912CE4();
  *(_QWORD *)(v0 + 16) = 64;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  v1 = (void *)CalculateExpression.lastOperand.getter();
  v3 = (int *)resultTree(v1, v2);
  v4 = treeIntegerValue(v3);

  if (v4)
  {
    v5 = 95;
    while ((unint64_t)(v5 - 32) < *(_QWORD *)(v0 + 16))
    {
      *(_BYTE *)(v0 + v5) = v4 & 1;
      if (v5 != 32)
      {
        --v5;
        v6 = v4 > 1;
        v4 >>= 1;
        if (v6)
          continue;
      }
      return;
    }
    __break(1u);
  }
}

void sub_1B88A536C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  CalculateExpression.bits.getter();
  *a1 = v2;
}

void sub_1B88A5394()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  CalculateExpression.bits.setter(v0);
}

void CalculateExpression.bits.setter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  BOOL v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t inited;
  id v10;
  __CFString *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __CFString *v15;
  unint64_t v16;
  Swift::String v17;
  CalculateResult_optional *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  if (*(_QWORD *)(a1 + 16) == 64)
  {
    v1 = 0;
    v2 = 0;
    v3 = 1;
    for (i = 95; i != 31; --i)
    {
      if (*(_BYTE *)(a1 + i) == 1)
      {
        v5 = __CFADD__(v1, v3);
        v1 += v3;
        if (v5)
        {
          __break(1u);
          goto LABEL_8;
        }
      }
      v3 <<= v2++ < 0x3F;
    }
    swift_bridgeObjectRelease();
    v21 = v1;
    v6 = sub_1B8913038();
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B8916B90;
    *(_QWORD *)(inited + 32) = CFSTR("CalculateKeyEngine");
    v10 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v11 = CFSTR("CalculateKeyEngine");
    v12 = objc_msgSend(v10, sel_initWithUnsignedInteger_, 1, v21);
    v13 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 72) = CFSTR("CalculateKeyLocales");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6248);
    sub_1B8912870();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1B8915E80;
    v15 = CFSTR("CalculateKeyLocales");
    sub_1B891284C();
    *(_QWORD *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B30);
    *(_QWORD *)(inited + 80) = v14;
    v16 = sub_1B8897224(inited);
    v17._countAndFlagsBits = v6;
    v17._object = v8;
    evaluate(_:options:)(v18, v17, (Swift::OpaquePointer)v16);
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20)
      CalculateExpression.lastOperand.setter(v20);
    else
      __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void (*CalculateExpression.bits.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  CalculateExpression.bits.getter();
  *a1 = v3;
  return sub_1B88A5614;
}

void sub_1B88A5614(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    CalculateExpression.bits.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    CalculateExpression.bits.setter(*a1);
  }
}

uint64_t CalculateExpression.ascii.getter()
{
  void *v0;
  const char *v1;
  int *v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  _QWORD v9[2];

  v0 = (void *)CalculateExpression.lastOperand.getter();
  v2 = (int *)resultTree(v0, v1);
  v3 = treeIntegerValue(v2);

  v4 = 0;
  if (v3)
  {
    do
    {
      v5 = (((v3 & 0x3F) << 8) | (v3 >> 6)) + 33217;
      if ((v3 & 0x80) == 0)
        v5 = (v3 + 1);
      v9[0] = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
      v9[0] = MEMORY[0x1BCCB3F2C](v9);
      v9[1] = v6;
      swift_bridgeObjectRetain();
      sub_1B8912B58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v9[0];
      v7 = v3 >= 0x100;
      v3 >>= 8;
    }
    while (v7);
  }
  return v4;
}

void CalculateExpression.unicode.getter()
{
  void *v0;
  const char *v1;
  int *v2;
  unsigned int v3;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  v0 = (void *)CalculateExpression.lastOperand.getter();
  v2 = (int *)resultTree(v0, v1);
  v3 = treeIntegerValue(v2);

  if (HIWORD(v3) > 0x10u || (v3 & 0xFFFFF800) == 55296)
  {
    if ((v3 & 0xF800) == 0xD800)
      return;
  }
  else
  {
    if ((v3 & 0xFFFFFF80) != 0)
    {
      v6 = (v3 & 0x3F) << 8;
      v5 = (v6 | (v3 >> 6)) + 33217;
      v7 = (v6 | (v3 >> 6) & 0x3F) << 8;
      v8 = (((v7 | (v3 >> 12) & 0x3F) << 8) | (v3 >> 18)) - 2122219023;
      v9 = (v7 | (v3 >> 12)) + 8487393;
      if (HIWORD(v3))
        v9 = v8;
      if (v3 >= 0x800)
        v5 = v9;
      goto LABEL_14;
    }
    if (v3 <= 0xFF)
      goto LABEL_13;
    __break(1u);
  }
  if ((v3 & 0xFF80) != 0)
  {
    v10 = (v3 & 0x3F) << 8;
    v5 = (((unsigned __int16)v3 >> 12) | ((((unsigned __int16)v3 >> 6) & 0x3F | v10) << 8)) + 8487393;
    if ((unsigned __int16)v3 < 0x800u)
      v5 = (v10 | ((unsigned __int16)v3 >> 6)) + 33217;
    goto LABEL_14;
  }
  if ((unsigned __int16)v3 <= 0xFFu)
  {
LABEL_13:
    v5 = (v3 + 1);
LABEL_14:
    v11 = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
    MEMORY[0x1BCCB3F2C](&v11);
    return;
  }
  __break(1u);
}

unint64_t sub_1B88A58E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = CalculateExpression.lastOperand.getter();
  *a1 = result;
  return result;
}

void sub_1B88A5908(id *a1)
{
  CalculateExpression.lastOperand.setter(*a1);
}

void (*CalculateExpression.lastOperand.modify(unint64_t *a1))(void **a1, char a2)
{
  unint64_t v1;

  a1[1] = v1;
  *a1 = CalculateExpression.lastOperand.getter();
  return sub_1B88A5964;
}

void sub_1B88A5964(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    CalculateExpression.lastOperand.setter(v3);

  }
  else
  {
    CalculateExpression.lastOperand.setter(v2);
  }
}

uint64_t CalculateExpression.__allocating_init(options:base:id:)(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v6 = sub_1B8912840();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v19) = *a2;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v10 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, a1, (char *)&v19, (uint64_t)v9);
  swift_retain();
  sub_1B88ACBD0();
  swift_getKeyPath();
  v17 = v10;
  v18 = 0;
  v19 = v10;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v15 = v10;
  v16 = 1;
  v19 = v10;
  sub_1B891287C();
  swift_release();
  swift_getKeyPath();
  v13 = v10;
  v14 = 1;
  v19 = v10;
  sub_1B891287C();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v10;
}

uint64_t sub_1B88A5BBC()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

Swift::Void __swiftcall CalculateExpression.inlineEvaluate()()
{
  uint64_t v0;

  CalculateExpression.inlineEvaluate(_:)(v0);
}

void CalculateExpression.inlineEvaluate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id *v5;
  id v6;
  id *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t (*v14)(_QWORD *);
  void (*v15)(_QWORD *, _QWORD);
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(_QWORD *);
  uint64_t *v22;
  uint64_t KeyPath;
  void (*v24)(id);
  id v25;
  void (*v26)(uint64_t);
  void (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v2 = v1;
  swift_getKeyPath();
  v33[0] = a1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  v33[0] = a1;
  sub_1B8912888();
  swift_release();
  v5 = (id *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  if (*v5)
    v6 = objc_msgSend(*v5, sel_ignoringNaN);
  else
    v6 = 0;
  swift_getKeyPath();
  v33[0] = a1;
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(a1 + v4) == 1)
    sub_1B8898544();
  swift_getKeyPath();
  v33[0] = a1;
  sub_1B8912888();
  swift_release();
  v7 = (id *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  v8 = *v7;
  v9 = *v7;
  CalculateExpression.clear()();
  if (!v6)
    goto LABEL_27;
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  v10 = v6;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v10);
  CalculateExpression.update(_:)(v11);
  swift_release();
  v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 520);
  v13 = swift_retain();
  LOBYTE(v12) = v12(v13);
  swift_release();
  if ((v12 & 1) == 0)
    goto LABEL_26;
  v14 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)sub_1B88ACBD0() + 408);
  swift_retain();
  v15 = (void (*)(_QWORD *, _QWORD))v14(v33);
  v17 = v16;
  v18 = *v16;
  if (!((unint64_t)*v16 >> 62))
  {
    if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v28)
    goto LABEL_29;
LABEL_12:
  if (sub_1B88AC6AC())
    goto LABEL_16;
  if ((unint64_t)*v17 >> 62)
    goto LABEL_38;
  v19 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  v20 = v19 - 1;
  if (__OFSUB__(v19, 1))
  {
LABEL_40:
    __break(1u);
    return;
  }
  while (1)
  {
    sub_1B885DC54(v20);
LABEL_16:
    swift_release();
    v15(v33, 0);
    swift_release();
    v21 = *(uint64_t (**)(_QWORD *))(*(_QWORD *)sub_1B88ACBD0() + 408);
    swift_retain();
    v15 = (void (*)(_QWORD *, _QWORD))v21(v33);
    v17 = v22;
    v18 = *v22;
    if ((unint64_t)*v22 >> 62)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      v29 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (!v29)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_31;
    }
    v18 = *v17;
    if (!((unint64_t)*v17 >> 62))
    {
      if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_33;
      goto LABEL_20;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    v30 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (!v30)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_20:
    if ((v18 & 0xC000000000000001) == 0)
      break;
LABEL_34:
    MEMORY[0x1BCCB4394](0, v18);
LABEL_23:
    if ((unint64_t)*v17 >> 62)
      goto LABEL_36;
    if (*(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_25;
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    v32 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    v20 = v32 - 1;
    if (__OFSUB__(v32, 1))
      goto LABEL_40;
  }
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain();
  v31 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_37;
LABEL_25:
  sub_1B885E87C(0, 1);
  swift_release();
  v15(v33, 0);
  swift_release();
LABEL_26:

LABEL_27:
  sub_1B8898544();
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  v33[0] = v2;
  sub_1B891287C();
  swift_release();
  v24 = *(void (**)(id))(*(_QWORD *)sub_1B88ACBD0() + 352);
  v25 = v8;
  swift_retain();
  v24(v8);
  swift_release();
  v26 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 232);
  swift_retain();
  v26(1);
  swift_release();
  v27 = *(void (**)(_QWORD))(*(_QWORD *)sub_1B88ACBD0() + 256);
  swift_retain();
  v27(0);
  swift_release();

}

unint64_t CalculateExpression.__allocating_init(result:error:options:base:id:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t (*v21)(char *);
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t result;
  uint64_t (*v28)(char *);
  uint64_t *v29;
  uint64_t KeyPath;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(void *);
  id v36;
  void (*v37)(uint64_t);
  void (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[40];

  v10 = sub_1B8912840();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[0] = *a4;
  v46 = v14;
  v47 = v13;
  (*(void (**)(char *, uint64_t))(v14 + 16))(v12, a5);
  v15 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, a3, v49, (uint64_t)v12);
  v48 = a5;
  if (!a1)
  {
    swift_retain();
LABEL_21:
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v44 - 2) = v15;
    *(&v44 - 1) = (uint64_t)a2;
    *(_QWORD *)v49 = v15;
    v31 = a2;
    sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    sub_1B891287C();

    swift_release();
    v32 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v32);
    *(&v44 - 2) = v15;
    *(&v44 - 1) = (uint64_t)a1;
    *(_QWORD *)v49 = v15;
    v33 = a1;
    sub_1B891287C();
    swift_release();

    v34 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v34);
    *(&v44 - 2) = v15;
    *((_BYTE *)&v44 - 8) = 0;
    *(_QWORD *)v49 = v15;
    sub_1B891287C();
    swift_release();
    v35 = *(void (**)(void *))(*(_QWORD *)sub_1B88ACBD0() + 352);
    v36 = a2;
    swift_retain();
    v35(a2);
    swift_release();
    v37 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 232);
    swift_retain();
    v37(1);
    swift_release();
    v38 = *(void (**)(_QWORD))(*(_QWORD *)sub_1B88ACBD0() + 256);
    swift_retain();
    v38(0);
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
    return v15;
  }
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  v16 = a1;
  swift_retain();
  v17 = v16;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v17);
  CalculateExpression.update(_:)(v18);
  swift_release();
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 520);
  v20 = swift_retain();
  LOBYTE(v19) = v19(v20);
  swift_release();
  if ((v19 & 1) == 0)
  {

    goto LABEL_21;
  }
  v21 = *(uint64_t (**)(char *))(*(_QWORD *)sub_1B88ACBD0() + 408);
  swift_retain();
  v22 = v21(v49);
  v24 = v23;
  v25 = *v23;
  if ((unint64_t)*v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v39)
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_23;
LABEL_5:
  if (sub_1B88AC6AC())
    goto LABEL_9;
  if ((unint64_t)*v24 >> 62)
    goto LABEL_32;
  v26 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = v26 - 1;
  if (!__OFSUB__(v26, 1))
  {
    do
    {
      sub_1B885DC54(result);
LABEL_9:
      swift_release();
      ((void (*)(char *, _QWORD))v22)(v49, 0);
      swift_release();
      v28 = *(uint64_t (**)(char *))(*(_QWORD *)sub_1B88ACBD0() + 408);
      swift_retain();
      v22 = v28(v49);
      v24 = v29;
      v25 = *v29;
      if ((unint64_t)*v29 >> 62)
      {
LABEL_24:
        swift_bridgeObjectRetain();
        v40 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        if (!v40)
        {
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
      }
      else if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_25;
      }
      v25 = *v24;
      if (!((unint64_t)*v24 >> 62))
      {
        if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_27;
        goto LABEL_13;
      }
LABEL_26:
      swift_bridgeObjectRetain();
      v41 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (!v41)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        v17 = (id)v22;
        MEMORY[0x1BCCB4394](0, v25);
        goto LABEL_16;
      }
LABEL_13:
      v45 = v17;
      if ((v25 & 0xC000000000000001) != 0)
        goto LABEL_28;
      if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_30;
      }
      v17 = (id)v22;
      swift_retain();
LABEL_16:
      v22 = *v24;
      if (!((unint64_t)*v24 >> 62))
      {
        if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_18;
        goto LABEL_31;
      }
LABEL_30:
      swift_bridgeObjectRetain();
      v42 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v42)
      {
LABEL_18:
        sub_1B885E87C(0, 1);
        swift_release();
        ((void (*)(char *, _QWORD))v17)(v49, 0);
        swift_release();

        goto LABEL_21;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v43 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      result = v43 - 1;
    }
    while (!__OFSUB__(v43, 1));
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.init(_:options:base:id:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v28;

  v6 = v5;
  v8 = *a4;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) = 1;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult) = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1B8912FD8())
    v11 = sub_1B88ADD5C(MEMORY[0x1E0DEE9D8]);
  else
    v11 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations) = v11;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) = 1;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving) = 0;
  swift_weakInit();
  swift_weakInit();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults) = sub_1B8896FF8(v9);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables) = sub_1B889710C(v9);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) = 1;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) = 0;
  v12 = sub_1B8897224(v9);
  v13 = OBJC_IVAR____TtC9Calculate19CalculateExpression__options;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options) = v12;
  v14 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  *(_QWORD *)v14 = 0;
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 1;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales) = v9;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter) = 0;
  v15 = OBJC_IVAR____TtC9Calculate19CalculateExpression__base;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base) = 1;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain) = 0;
  type metadata accessor for CalculateExpression.PlainExpression();
  v16 = CalculateExpression.PlainExpression.__allocating_init()();
  v17 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain) = v16;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich) = 1;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich) = 1;
  type metadata accessor for CalculateExpression.RichExpression();
  v18 = sub_1B8865F60();
  v19 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich) = v18;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack) = v9;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation) = 0;
  sub_1B89128AC();
  v20 = (_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  *v20 = a1;
  v20[1] = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v13) = a3;
  *(_BYTE *)(v5 + v15) = v8;
  v21 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  v22 = sub_1B8912840();
  v28 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v21, a5, v22);
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  v23 = *(void (**)(uint64_t))(**(_QWORD **)v19 + 184);
  swift_retain();
  v24 = swift_retain();
  v23(v24);
  swift_release();
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  v25 = *(void (**)(uint64_t))(**(_QWORD **)v17 + 184);
  swift_retain();
  swift_retain();
  v25(v6);
  swift_release();
  sub_1B889B764();
  sub_1B88A0BB0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a5, v22);
  return v6;
}

uint64_t sub_1B88A6C34()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B88A6CE0()
{
  return sub_1B88A6D08();
}

uint64_t sub_1B88A6CF4()
{
  return sub_1B88A6D08();
}

uint64_t sub_1B88A6D08()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1B88A6DA8()
{
  return sub_1B88A6F6C((uint64_t)&unk_1B8916E98, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
}

uint64_t sub_1B88A6DBC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B88A70D8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain, a2);
}

uint64_t sub_1B88A6DD0()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B88A6E78@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A7244(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___plain, a2);
}

uint64_t sub_1B88A6E8C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain();
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B88A6F44()
{
  return sub_1B88A6F6C((uint64_t)&unk_1B89170A0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
}

uint64_t sub_1B88A6F58()
{
  return sub_1B88A6F6C((uint64_t)&unk_1B8916FB0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
}

uint64_t sub_1B88A6F6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *v4;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = (unsigned __int8 *)(v2 + *a2);
  swift_beginAccess();
  return *v4;
}

uint64_t sub_1B88A7008@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B88A70D8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich, a2);
}

uint64_t sub_1B88A701C()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B88A70C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B88A70D8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich, a2);
}

uint64_t sub_1B88A70D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = (_BYTE *)(v5 + *a2);
  result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_1B88A7188()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B88A7230@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A7244(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___rich, a2);
}

uint64_t sub_1B88A7244@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_retain();
}

uint64_t sub_1B88A72F8()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain();
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t sub_1B88A73B0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;

  v4 = (_QWORD *)(a1 + *a3);
  swift_beginAccess();
  *v4 = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1B88A7410@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B88A7424(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack, a2);
}

uint64_t sub_1B88A7424@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;

  v5 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a3 = *(_QWORD *)(v5 + *a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88A74C0()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_bridgeObjectRetain();
  sub_1B891287C();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.activeOperation.getter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  return swift_retain();
}

uint64_t sub_1B88A7608@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation);
  return swift_retain();
}

uint64_t sub_1B88A76A0()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  swift_retain();
  sub_1B891287C();
  swift_release();
  return swift_release();
}

uint64_t CalculateExpression.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  v2 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  v4 = sub_1B89128B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CalculateExpression.__deallocating_deinit()
{
  CalculateExpression.deinit();
  return swift_deallocClassInstance();
}

uint64_t CalculateExpression.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_1B8912840();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B89130A4();
  swift_getKeyPath();
  v8 = v0;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v6 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v1);
  sub_1B88A9A6C(&qword_1EF1B5FF8, v2, MEMORY[0x1E0CB09C8]);
  sub_1B8912A80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1B89130BC();
}

uint64_t sub_1B88A7A60()
{
  return CalculateExpression.hashValue.getter();
}

uint64_t sub_1B88A7A80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = sub_1B8912840();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  swift_getKeyPath();
  v9[1] = v6;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v7 = v6 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v1);
  sub_1B88A9A6C(&qword_1EF1B5FF8, v2, MEMORY[0x1E0CB09C8]);
  sub_1B8912A80();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1B88A7BC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_1B8912840();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1B89130A4();
  swift_getKeyPath();
  v9 = v6;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v7 = v6 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v1);
  sub_1B88A9A6C(&qword_1EF1B5FF8, v2, MEMORY[0x1E0CB09C8]);
  sub_1B8912A80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1B89130BC();
}

uint64_t sub_1B88A7D1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v5 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1B88A7DE0()
{
  return CalculateExpression.debugDescription.getter();
}

uint64_t sub_1B88A7E00(uint64_t *a1, uint64_t *a2)
{
  return _s9Calculate0A10ExpressionC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1B88A7E0C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  id *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void **v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  _BYTE v40[8];
  uint64_t v41;

  v2 = v1;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  sub_1B88AF474((uint64_t)(a1 + 2), (uint64_t)v40, &qword_1EF1B6250);
  sub_1B88AF474((uint64_t)v40, (uint64_t)&v41, &qword_1EF1B6250);
  v5 = v41;
  if (!Strong)
  {
    if (v41)
    {
      v6 = 0;
      return v6 & 1;
    }
LABEL_7:
    v8 = *a1;
    v7 = a1[1];
    if (v8 == sub_1B8898F00() && v7 == v9)
    {
      swift_bridgeObjectRelease();
      v38 = 0;
    }
    else
    {
      v10 = sub_1B8913050();
      swift_bridgeObjectRelease();
      v38 = v10 ^ 1;
    }
    v11 = (_BYTE *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    *v11 = 0;
    if (a1[5])
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      swift_retain();
      sub_1B891287C();
      swift_release();
      v13 = swift_getKeyPath();
      MEMORY[0x1E0C80A78](v13);
      sub_1B891287C();
      swift_release();
      swift_release();
      if (!a1[6])
        goto LABEL_14;
    }
    else if (!a1[6])
    {
LABEL_14:
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      v16 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
      swift_beginAccess();
      if (*v16 != a1[10])
      {
        v17 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v17);
        sub_1B891287C();
        swift_release();
      }
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      swift_beginAccess();
      v18 = a1[4];
      v19 = swift_bridgeObjectRetain();
      v20 = sub_1B88A9778(v19, v18);
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        v21 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v21);
        swift_bridgeObjectRetain();
        sub_1B891287C();
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      v22 = (id *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
      swift_beginAccess();
      if (*v22
        && (v23 = *v22,
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6050),
            sub_1B88796EC(0, &qword_1EF1B6258),
            swift_dynamicCast()))
      {
        v24 = v39;
        v25 = (void *)a1[8];
        if (!v25)
          goto LABEL_27;
      }
      else
      {
        v24 = 0;
        v25 = (void *)a1[8];
        if (!v25)
          goto LABEL_27;
      }
      v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6050);
      sub_1B88796EC(0, &qword_1EF1B6258);
      if (swift_dynamicCast())
      {
        v27 = v39;
        if (v24)
        {
LABEL_28:
          swift_unknownObjectRelease();
          if (v27)
          {
            swift_unknownObjectRelease();
            if (v24 == v27)
            {
LABEL_31:
              swift_getKeyPath();
              sub_1B8912888();
              swift_release();
              v30 = (void **)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
              swift_beginAccess();
              v31 = (void *)a1[7];
              if (*v30)
              {
                if (v31 && *v30 == v31)
                  goto LABEL_39;
              }
              else if (!v31)
              {
LABEL_39:
                v34 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v34);
                sub_1B891287C();
                swift_release();
                v35 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v35);
                sub_1B891287C();
                swift_release();
                v36 = swift_getKeyPath();
                MEMORY[0x1E0C80A78](v36);
                sub_1B891287C();
                swift_release();
                v6 = v38;
                return v6 & 1;
              }
              v32 = swift_getKeyPath();
              MEMORY[0x1E0C80A78](v32);
              v33 = v31;
              sub_1B891287C();
              swift_release();

              goto LABEL_39;
            }
          }
LABEL_30:
          v28 = swift_getKeyPath();
          MEMORY[0x1E0C80A78](v28);
          v29 = v25;
          sub_1B891287C();

          swift_release();
          goto LABEL_31;
        }
LABEL_25:
        if (!v27)
          goto LABEL_31;
        swift_unknownObjectRelease();
        goto LABEL_30;
      }
LABEL_27:
      v27 = 0;
      if (v24)
        goto LABEL_28;
      goto LABEL_25;
    }
    v14 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v14);
    swift_retain();
    sub_1B891287C();
    swift_release();
    v15 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v15);
    sub_1B891287C();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  swift_release();
  v6 = 0;
  if (v5 && Strong == v5)
    goto LABEL_7;
  return v6 & 1;
}

uint64_t CalculateExpression.graphReferenceCount.getter()
{
  return sub_1B889AC48((uint64_t)&unk_1B8916DF8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t CalculateExpression.graphReferenceCount.setter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

void (*CalculateExpression.graphReferenceCount.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[5] = v2;
  swift_getKeyPath();
  v4[6] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  *v4 = v2;
  v4[7] = sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
  swift_beginAccess();
  v4[3] = *v5;
  return sub_1B88A8900;
}

void sub_1B88A8900(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_getKeyPath();
  v1[4] = v1[5];
  sub_1B891287C();
  swift_release();
  free(v1);
}

uint64_t CalculateExpression.documentReferenceCount.getter()
{
  return sub_1B889AC48((uint64_t)&unk_1B8916DD0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t CalculateExpression.documentReferenceCount.setter()
{
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();
  return swift_release();
}

void (*CalculateExpression.documentReferenceCount.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[5] = v2;
  swift_getKeyPath();
  v4[6] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  *v4 = v2;
  v4[7] = sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
  swift_beginAccess();
  v4[3] = *v5;
  return sub_1B88A8B38;
}

void sub_1B88A8B38(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_getKeyPath();
  v1[4] = v1[5];
  sub_1B891287C();
  swift_release();
  free(v1);
}

id CalculateExpression.effectiveNumberFormatter.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1B8912870();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v18 = v0;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  v7 = &unk_1ED563000;
  if (Strong)
  {
    swift_getKeyPath();
    v17 = v1;
    sub_1B8912888();
    swift_release();
    v8 = swift_weakLoadStrong();
    if (v8)
    {
      v9 = v8;
      swift_getKeyPath();
      v17 = v9;
      sub_1B8912888();
      swift_release();
      v10 = *(void **)(v9 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
      v11 = v10;
      swift_release();
      if (v10)
        return v11;
    }
    swift_getKeyPath();
    v17 = v1;
    sub_1B8912888();
    swift_release();
    v7 = (_QWORD *)&unk_1ED563000;
  }
  else
  {
    swift_getKeyPath();
    v17 = v1;
    sub_1B8912888();
    swift_release();
  }
  v12 = *(void **)(v1 + v7[460]);
  v13 = v12;
  if (v12)
    return v13;
  CalculateExpression.effectiveLocale.getter((uint64_t)v5);
  v15 = (void *)sub_1B8912858();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16 = CalculateDefaultNumberFormatter((uint64_t)v15);

  return v16;
}

Swift::String __swiftcall CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(Swift::String _, Swift::Bool presentation, NSNumberFormatter_optional formatter, Swift::Int_optional significantDigits, Swift::Bool_optional forceScientificNotation)
{
  uint64_t v5;
  Swift::Bool is_nil;
  Class isa;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  uint64_t v14;
  Swift::Bool v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _BOOL8 v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  Swift::String result;
  uint64_t v32;
  uint64_t v33;
  char value;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void (*v39)();
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  is_nil = significantDigits.is_nil;
  value = significantDigits.value;
  v33 = *(_QWORD *)&formatter.is_nil;
  isa = formatter.value.super.super.isa;
  object = _._object;
  countAndFlagsBits = _._countAndFlagsBits;
  v11 = v5;
  if (formatter.value.super.super.isa)
    v12 = formatter.value.super.super.isa;
  else
    v12 = CalculateExpression.effectiveNumberFormatter.getter();
  aBlock = countAndFlagsBits;
  v36 = (uint64_t)object;
  v41 = 11077;
  v42 = 0xE200000000000000;
  sub_1B8878944();
  v13 = isa;
  if ((sub_1B8912E64() & 1) != 0
    || (aBlock = countAndFlagsBits,
        v36 = (uint64_t)object,
        v41 = 11589,
        v42 = 0xE200000000000000,
        (sub_1B8912E64() & 1) != 0))
  {
    if (presentation)
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v11;
      *(_QWORD *)(v14 + 24) = v12;
      *(_QWORD *)(v14 + 32) = countAndFlagsBits;
      *(_QWORD *)(v14 + 40) = object;
      v15 = is_nil;
      *(_BYTE *)(v14 + 48) = is_nil;
      if ((value & 1) != 0)
      {
        v21 = v12;
        swift_bridgeObjectRetain();
        v22 = swift_retain();
        countAndFlagsBits = sub_1B88A925C(v22, v21, countAndFlagsBits, (uint64_t)object, is_nil);
        object = v23;

        swift_release();
      }
      else
      {
        v16 = swift_allocObject();
        *(_QWORD *)(v16 + 16) = 0;
        *(_QWORD *)(v16 + 24) = 0xE000000000000000;
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = v12;
        *(_QWORD *)(v17 + 24) = v33;
        *(_QWORD *)(v17 + 32) = v16;
        *(_QWORD *)(v17 + 40) = sub_1B88AE8FC;
        *(_QWORD *)(v17 + 48) = v14;
        *(_BYTE *)(v17 + 56) = v15;
        *(_QWORD *)(v17 + 64) = countAndFlagsBits;
        *(_QWORD *)(v17 + 72) = object;
        v39 = sub_1B88AE96C;
        v40 = v17;
        aBlock = MEMORY[0x1E0C809B0];
        v36 = 1107296256;
        v37 = sub_1B88A9568;
        v38 = &block_descriptor_1;
        v18 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain_n();
        v19 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v19, sel_ignoreChanges_, v18);
        swift_release();

        _Block_release(v18);
        swift_beginAccess();
        countAndFlagsBits = *(_QWORD *)(v16 + 16);
        object = *(void **)(v16 + 24);
        swift_bridgeObjectRetain();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRetain();

    }
    goto LABEL_17;
  }
  if (objc_msgSend(v12, sel_usesGroupingSeparator))
  {
    CalculateExpression.effectiveBase.getter((char *)&aBlock);
    v20 = aBlock == 1;
  }
  else
  {
    v20 = 0;
  }
  v24 = (void *)sub_1B8912AB0();
  v25 = objc_msgSend(v12, sel_groupingSeparator);
  if (!v25)
  {
    __break(1u);
    goto LABEL_19;
  }
  v27 = v25;
  v25 = objc_msgSend(v12, sel_decimalSeparator);
  if (!v25)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v28 = v25;
  swift_getKeyPath();
  aBlock = v5;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  LOBYTE(v32) = *(_QWORD *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) != 1;
  v29 = objc_msgSend(v12, sel_formatString_usesGroupingSeparator_groupingSeparator_decimalSeparator_maximumIntegerDigits_maximumFractionDigits_localizeDigits_, v24, v20, v27, v28, 1000000, 1000000, v32);

  countAndFlagsBits = sub_1B8912AD4();
  object = v30;

LABEL_17:
  v25 = (id)countAndFlagsBits;
  v26 = object;
LABEL_20:
  result._object = v26;
  result._countAndFlagsBits = (uint64_t)v25;
  return result;
}

uint64_t sub_1B88A925C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v6;
  uint64_t Strong;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  __CFString *v14;
  id v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;

  v6 = a5;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v9 = (unint64_t *)(v8 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
    swift_beginAccess();
    v10 = *v9;
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v10 = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1B889AAEC(v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8915E80;
  *(_QWORD *)(inited + 32) = CFSTR("CalculateKeyNumberFormatter");
  *(_QWORD *)(inited + 64) = sub_1B88796EC(0, &qword_1ED561B98);
  *(_QWORD *)(inited + 40) = a2;
  v14 = CFSTR("CalculateKeyNumberFormatter");
  v15 = a2;
  v16 = sub_1B8897224(inited);
  sub_1B889AAEC(v16, v12);
  v17 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateKey();
  sub_1B88A9A6C(&qword_1ED561B60, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_1B8917790);
  v18 = (void *)sub_1B8912A14();
  swift_bridgeObjectRelease();
  v19 = 0;
  if (v6 != 2)
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v6 & 1);
  v20 = CalculateTermFormatDecimalString(v17, v18, v19);

  if (!v20)
    return 0;
  v21 = sub_1B8912AD4();

  return v21;
}

uint64_t sub_1B88A9568(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t CalculateExpression.accessibilityMathEquation.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  v0 = *(uint64_t (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 752);
  v1 = swift_retain();
  v2 = v0(v1);
  swift_release();
  return v2;
}

void CalculateExpression.accessibilityMathEquationDescription.getter()
{
  void *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  __int128 v6;
  __int128 v7;

  v0 = (void *)objc_opt_self();
  v1 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88ACBD0() + 752);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  v3 = (void *)sub_1B8912A14();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_mathExpressionWithDictionary_, v3);

  if (v4)
  {
    sub_1B8912E70();
    swift_unknownObjectRelease();
    sub_1B8879E64(&v6, &v7);
    sub_1B88796EC(0, &qword_1ED561BB8);
    swift_dynamicCast();
    if (objc_msgSend(v5, sel_speakableDescription))
    {
      sub_1B89127D4();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1B88A971C()
{
  sub_1B89130A4();
  sub_1B89130B0();
  return sub_1B89130BC();
}

_QWORD *sub_1B88A975C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1B88A976C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1B88A9778(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  int64_t v19;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v19 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v19)
      return 1;
    v11 = *(_QWORD *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v19)
        return 1;
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (!v11)
      {
        v3 = v10 + 2;
        if (v10 + 2 >= v19)
          return 1;
        v11 = *(_QWORD *)(v4 + 8 * v3);
        if (!v11)
        {
          v3 = v10 + 3;
          if (v10 + 3 >= v19)
            return 1;
          v11 = *(_QWORD *)(v4 + 8 * v3);
          if (!v11)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v3 << 6);
LABEL_24:
    v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B8873F28(v14, v15);
    v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6260);
    sub_1B887A014(&qword_1EF1B6268, &qword_1EF1B6260, (uint64_t)&unk_1B89163A8);
    v18 = sub_1B8912AA4();
    result = swift_release();
    if ((v18 & 1) == 0)
      return 0;
  }
  v12 = v10 + 4;
  if (v12 >= v19)
    return 1;
  v11 = *(_QWORD *)(v4 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v19)
      return 1;
    v11 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_1B88A99B0(uint64_t a1)
{
  uint64_t v2;

  sub_1B89130A4();
  sub_1B89130B0();
  v2 = sub_1B89130BC();
  return sub_1B887414C(a1, v2);
}

uint64_t type metadata accessor for CalculateExpression()
{
  uint64_t result;

  result = qword_1ED563BE0;
  if (!qword_1ED563BE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B88A9A44()
{
  uint64_t v0;

  return sub_1B8897C04(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B88A9A6C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCB4D60](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B88A9AAC(uint64_t a1)
{
  uint64_t v2;

  sub_1B8912AD4();
  sub_1B89130A4();
  sub_1B8912B10();
  v2 = sub_1B89130BC();
  swift_bridgeObjectRelease();
  return sub_1B88741E8(a1, v2);
}

uint64_t sub_1B88A9B38(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1B8912EB8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for CalculateExpression.Operation();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1B8912EAC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1B88A9E00(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1B88AA020();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1B88AA330(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for CalculateExpression.Operation();
  sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
  swift_bridgeObjectRetain();
  v10 = sub_1B8912A74();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1B88AA3FC(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_1B88A9A6C((unint64_t *)&qword_1ED561AE8, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
  while ((sub_1B8912AA4() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1B88A9E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
    v2 = sub_1B8912F0C();
    v14 = v2;
    sub_1B8912EA0();
    if (sub_1B8912EC4())
    {
      type metadata accessor for CalculateExpression.Operation();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1B88AA020();
          v2 = v14;
        }
        sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
        result = sub_1B8912A74();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1B8912EC4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1B88AA020()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
  v2 = sub_1B8912F00();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      type metadata accessor for CalculateExpression.Operation();
      sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
      result = sub_1B8912A74();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_1B88AA330(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  type metadata accessor for CalculateExpression.Operation();
  sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
  sub_1B8912A74();
  result = sub_1B8912E94();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1B88AA3FC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1B88AA020();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1B88AA5A4();
      goto LABEL_12;
    }
    sub_1B88AA74C();
  }
  v8 = *v3;
  type metadata accessor for CalculateExpression.Operation();
  sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
  result = sub_1B8912A74();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_1B88A9A6C((unint64_t *)&qword_1ED561AE8, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    do
    {
      result = sub_1B8912AA4();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1B8913074();
  __break(1u);
  return result;
}

void *sub_1B88AA5A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
  v2 = *v0;
  v3 = sub_1B8912EF4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B88AA74C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
  v2 = sub_1B8912F00();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    swift_retain();
    result = sub_1B8912A74();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

double sub_1B88AAA30@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B88A9AAC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B88781B0();
      v9 = v11;
    }

    sub_1B8879E64((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1B88AB128(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1B88AAB14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6298);
  v37 = a2;
  v6 = sub_1B8912FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1B89130A4();
    sub_1B8912B10();
    result = sub_1B89130BC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B88AAE1C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6278);
  v38 = a2;
  v6 = sub_1B8912FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      v33 = v32;
      swift_bridgeObjectRetain();
    }
    sub_1B89130A4();
    sub_1B8912B10();
    result = sub_1B89130BC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1B88AB128(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8912E88();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_1B8912AD4();
        sub_1B89130A4();
        v11 = v10;
        sub_1B8912B10();
        v12 = sub_1B89130BC();

        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 32 * v3);
          v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 2))
          {
            v9 = v19[1];
            *v18 = *v19;
            v18[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1B88AB318(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8873F28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1B88AB748();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1B88AAB14(result, a4 & 1);
  result = sub_1B8873F28(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

void sub_1B88AB468(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8873F28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B88AB8F4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1B88AAE1C(v15, a4 & 1);
  v20 = sub_1B8873F28(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8913080();
  __break(1u);
}

_OWORD *sub_1B88AB5C4(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1B88A9AAC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
        return sub_1B8879E64(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1B88781B0();
      goto LABEL_7;
    }
    sub_1B8877CEC(v12, a3 & 1);
    v18 = sub_1B88A9AAC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1B88AB6E4(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CalculateKey();
  result = (_OWORD *)sub_1B8913080();
  __break(1u);
  return result;
}

_OWORD *sub_1B88AB6E4(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1B8879E64(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_1B88AB748()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6298);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B88AB8F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6278);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(void **)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    v23 = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B88ABAA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B88784CC((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_1B8879E64(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_1B88A9AAC((uint64_t)v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1B88781B0();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_1B8879E64(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1B88784CC((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_1B8879E64(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_1B88A9AAC((uint64_t)i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1B8877CEC(v34, 1);
        v36 = sub_1B88A9AAC((uint64_t)i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_1B8879724((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1B8879E64(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_1B8879E64(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_1B88784CC((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B8879F24();
    return swift_release();
  }
  sub_1B8877CEC(v18, a4 & 1);
  v20 = sub_1B88A9AAC((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1B8879724((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1B8879E64(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CalculateKey();
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B88ABDD0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  size_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = a2;
  v26[2] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_17:
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v26[0] = a1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_4;
LABEL_24:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v4 = sub_1B8912FD8();
  if (!v4)
    goto LABEL_24;
LABEL_4:
  v5 = 0;
  v22 = a1 & 0xFFFFFFFFFFFFFF8;
  v23 = a1 & 0xC000000000000001;
  v20 = v4;
  v21 = a1 + 32;
  v6 = v2 + 56;
  while (1)
  {
    if (v23)
    {
      v7 = MEMORY[0x1BCCB4394](v5, a1);
      v8 = __OFADD__(v5++, 1);
      if (v8)
      {
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      if (v5 >= *(_QWORD *)(v22 + 16))
      {
        __break(1u);
        goto LABEL_23;
      }
      v7 = *(_QWORD *)(v21 + 8 * v5);
      swift_retain();
      v8 = __OFADD__(v5++, 1);
      if (v8)
        goto LABEL_16;
    }
    v26[1] = v5;
    v25 = v7;
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    v9 = sub_1B8912A74();
    v10 = -1 << *(_BYTE *)(v2 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      break;
LABEL_5:
    swift_release();
    if (v5 == v20)
      goto LABEL_24;
  }
  v12 = ~v10;
  sub_1B88A9A6C((unint64_t *)&qword_1ED561AE8, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
  while (1)
  {
    v24 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if ((sub_1B8912AA4() & 1) != 0)
      break;
    v11 = (v11 + 1) & v12;
    if (((*(_QWORD *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      goto LABEL_5;
  }
  swift_release();
  v13 = *(_BYTE *)(v2 + 32);
  v14 = (unint64_t)((1 << v13) + 63) >> 6;
  v15 = 8 * v14;
  if ((v13 & 0x3Fu) <= 0xD || swift_stdlib_isStackAllocationSafe())
  {
    MEMORY[0x1E0C80A78]();
    memcpy((char *)&v20 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v15);
    v16 = sub_1B88AC160((uint64_t)&v20 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0), v14, v2, v11, v26);
    swift_release();
    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    v17 = (void *)swift_slowAlloc();
    memcpy(v17, (const void *)(v2 + 56), v15);
    v18 = sub_1B88AC160((uint64_t)v17, v14, v2, v11, v26);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCB4E14](v17, -1, -1);
    return v18;
  }
}

uint64_t sub_1B88AC160(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v22;
  uint64_t v23;

  v7 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v22 = (unint64_t *)result;
  v23 = v7 - 1;
  v8 = a3 + 56;
  while (1)
  {
    v9 = a5[1];
    if (*a5 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (v9 == v20)
      {
LABEL_22:
        swift_retain();
        return sub_1B88AC3DC(v22, a2, v23, a3);
      }
    }
    else if (v9 == *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_22;
    }
    if ((*a5 & 0xC000000000000001) != 0)
    {
      result = MEMORY[0x1BCCB4394](v9);
      goto LABEL_9;
    }
    if ((v9 & 0x8000000000000000) != 0)
      break;
    if (v9 >= *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_24;
    result = swift_retain();
LABEL_9:
    v10 = a5[1];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_25;
    a5[1] = v12;
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    v13 = sub_1B8912A74();
    v14 = -1 << *(_BYTE *)(a3 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      v16 = ~v14;
      sub_1B88A9A6C((unint64_t *)&qword_1ED561AE8, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
      while ((sub_1B8912AA4() & 1) == 0)
      {
        v15 = (v15 + 1) & v16;
        if (((*(_QWORD *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          goto LABEL_2;
      }
      result = swift_release();
      v17 = (v15 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v18 = *(unint64_t *)((char *)v22 + v17);
      *(unint64_t *)((char *)v22 + v17) = v18 & ~(1 << v15);
      if ((v18 & (1 << v15)) != 0)
      {
        v19 = v23 - 1;
        if (__OFSUB__(v23, 1))
          goto LABEL_26;
        --v23;
        if (!v19)
          return MEMORY[0x1E0DEE9E8];
      }
    }
    else
    {
LABEL_2:
      result = swift_release();
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1B88AC3DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;

  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
  result = sub_1B8912F18();
  v6 = result;
  v28 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v30 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v28)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v28)
          goto LABEL_37;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v28)
            goto LABEL_37;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v28)
              goto LABEL_37;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v28)
                  goto LABEL_37;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v30 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v13);
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    swift_retain();
    result = sub_1B8912A74();
    v19 = -1 << *(_BYTE *)(v6 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v6 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v10 = v30;
    if (!v5)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1B88AC6AC()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v0 = v1;
  if (!(_DWORD)result || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
    sub_1B885DD38(v1);
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(_QWORD *)(v3 + 16) = v5;
    sub_1B8912CA8();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s9Calculate0A10ExpressionC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[6];

  v4 = sub_1B8912840();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v16 - v9;
  swift_getKeyPath();
  v16[3] = a1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v11 = a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  swift_getKeyPath();
  v16[0] = a2;
  sub_1B8912888();
  swift_release();
  v13 = a2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v12(v8, v13, v4);
  LOBYTE(v13) = sub_1B8912828();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  return v13 & 1;
}

unint64_t sub_1B88AC8D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B62A0);
    v3 = (_QWORD *)sub_1B8913008();
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1B8860108(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1B88AC9A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C18);
    v3 = (_QWORD *)sub_1B8913008();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_1B88A99B0(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1B88ACA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      swift_bridgeObjectRetain();
      sub_1B8874AF0(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

unint64_t sub_1B88ACAF8(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  v3 = result;
  v8 = a2;
  if (!(result >> 62))
  {
    v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return v2;
  }
  result = sub_1B8912FD8();
  v4 = result;
  if (!result)
    return v2;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCB4394](i, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * i + 32);
        swift_retain();
      }
      sub_1B88A9B38(&v7, v6);
      swift_release();
    }
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B88ACBD0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t Strong;
  char v4;
  _BYTE *v5;
  _BYTE *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
  swift_beginAccess();
  if (*v2 == 1)
  {
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    sub_1B891287C();
    swift_release();
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong
    || (v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 216))(Strong), swift_release(), (v4 & 1) != 0))
  {
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v5 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
    swift_beginAccess();
    if (*v5 == 1)
    {
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      v6 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
      swift_beginAccess();
      if (*v6 == 1)
      {
        swift_getKeyPath();
        sub_1B8912888();
        swift_release();
        v7 = *v5;
        type metadata accessor for CalculateExpression.PlainExpression();
        if (v7 == 1)
        {
          v8 = swift_retain();
          CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v8, 0);
        }
        else
        {
          sub_1B88ACBD0();
          v9 = swift_retain();
          CalculateExpression.PlainExpression.__allocating_init(_:)(v9);
        }
        swift_getKeyPath();
        MEMORY[0x1E0C80A78]();
        sub_1B891287C();
        swift_release();
        swift_release();
        swift_getKeyPath();
        MEMORY[0x1E0C80A78]();
        sub_1B891287C();
        swift_release();
      }
      type metadata accessor for CalculateExpression.RichExpression();
      swift_getKeyPath();
      sub_1B8912888();
      swift_release();
      swift_beginAccess();
      v10 = swift_retain();
      sub_1B88660C8(v10);
      swift_getKeyPath();
      MEMORY[0x1E0C80A78]();
      sub_1B891287C();
      swift_release();
      swift_release();
      swift_getKeyPath();
      MEMORY[0x1E0C80A78]();
      sub_1B891287C();
      swift_release();
    }
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v11 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich;
  swift_beginAccess();
  return *(_QWORD *)v11;
}

uint64_t sub_1B88AD174()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
  swift_beginAccess();
  if (*v2 == 1)
  {
    swift_getKeyPath();
    sub_1B8912888();
    swift_release();
    v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
    swift_beginAccess();
    LODWORD(v3) = *v3;
    type metadata accessor for CalculateExpression.PlainExpression();
    if ((_DWORD)v3 == 1)
    {
      v4 = swift_retain();
      CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v4, 0);
    }
    else
    {
      sub_1B88ACBD0();
      v5 = swift_retain();
      CalculateExpression.PlainExpression.__allocating_init(_:)(v5);
    }
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    sub_1B891287C();
    swift_release();
    swift_release();
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    sub_1B891287C();
    swift_release();
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  v6 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain;
  swift_beginAccess();
  return *(_QWORD *)v6;
}

uint64_t sub_1B88AD450(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  if (a1 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    v7 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    return v8;
  v35 = (uint64_t *)a4;
  v36 = (uint64_t *)a3;
  v42 = MEMORY[0x1E0DEE9D8];
  a3 = (uint64_t)&v42;
  result = (uint64_t)sub_1B88775D0(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v8 = v42;
    while (1)
    {
      if (v7 == v10)
      {
        __break(1u);
        goto LABEL_49;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        v11 = (unsigned __int8 *)MEMORY[0x1BCCB4394](v10, a1);
      }
      else
      {
        v11 = *(unsigned __int8 **)(a1 + 8 * v10 + 32);
        swift_retain();
      }
      v12 = v11[48];
      if ((_DWORD)v12 == 1)
        goto LABEL_14;
      if (qword_1ED5624B8 != -1)
        swift_once();
      if ((sub_1B886B18C(v12, qword_1ED562DD0) & 1) != 0)
      {
LABEL_14:
        v13 = (*(uint64_t (**)(void))(*(_QWORD *)v11 + 136))();
        v15 = v14;
        v40 = v13;
        v41 = v14;
        sub_1B8878944();
        a3 = (uint64_t)&v40;
        if ((sub_1B8912E64() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v16 = 0xE27265626D756E3CLL;
          a4 = 0xAB000000003EA680;
        }
        else
        {
          v40 = v13;
          v41 = v15;
          a3 = sub_1B8912E64();
          swift_bridgeObjectRelease();
          if ((a3 & 1) != 0)
            v16 = 0xE27265626D756E3CLL;
          else
            v16 = 0x3E7265626D756E3CLL;
          if ((a3 & 1) != 0)
            a4 = 0xAB000000003EA680;
          else
            a4 = 0xE800000000000000;
        }
      }
      else
      {
        v20 = v11[48];
        if (!v11[48])
        {
          a4 = 0xE90000000000003ELL;
          v16 = 0x6E776F6E6B6E753CLL;
          goto LABEL_22;
        }
        if (v20 == 19)
        {
          a4 = 0xE600000000000000;
          v16 = 0x3E74696E753CLL;
          goto LABEL_22;
        }
        if (v20 != 14)
        {
          a3 = (uint64_t)v11;
          v16 = (*(uint64_t (**)(void))(*(_QWORD *)v11 + 136))();
          a4 = v25;
          goto LABEL_22;
        }
        v21 = v11;
        swift_getKeyPath();
        v40 = a2;
        sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
        sub_1B8912888();
        swift_release();
        swift_beginAccess();
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v23 = Strong;
          v40 = 1918989884;
          v41 = 0xE400000000000000;
          v24 = (*(uint64_t (**)(void))(*(_QWORD *)v11 + 136))();
          (*(void (**)(uint64_t))(*(_QWORD *)v23 + 424))(v24);
          swift_bridgeObjectRelease();
          sub_1B8913038();
          sub_1B8912B58();
          swift_bridgeObjectRelease();
          a3 = (uint64_t)&v40;
          sub_1B8912B58();
          swift_release();
        }
        else
        {
          v26 = v36;
          if (*v36 || (*v36 = sub_1B8896EE8(MEMORY[0x1E0DEE9D8]), result = swift_bridgeObjectRelease(), *v36))
          {
            (*(void (**)(void))(*(_QWORD *)v11 + 136))();
            v27 = sub_1B8912AE0();
            v29 = v28;
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(*v36 + 16))
            {
              sub_1B8873F28(v27, v29);
              if ((v30 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v40 = 1918989884;
                v41 = 0xE400000000000000;
                sub_1B8913038();
                sub_1B8912B58();
                swift_bridgeObjectRelease();
                a3 = (uint64_t)&v40;
                sub_1B8912B58();
                v16 = v40;
                a4 = v41;
                goto LABEL_22;
              }
            }
            result = swift_bridgeObjectRelease();
            v26 = v36;
            v11 = v21;
          }
          if (__OFADD__(*v35, 1))
            goto LABEL_51;
          ++*v35;
          if (*v26)
          {
            (*(void (**)(uint64_t))(*(_QWORD *)v11 + 136))(result);
            v39 = sub_1B8912AE0();
            v34 = v31;
            swift_bridgeObjectRelease();
            v32 = *v35;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v40 = *v26;
            *v26 = 0x8000000000000000;
            sub_1B88AB318(v32, v39, v34, isUniquelyReferenced_nonNull_native);
            *v26 = v40;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v40 = 1918989884;
          v41 = 0xE400000000000000;
          sub_1B8913038();
          sub_1B8912B58();
          swift_bridgeObjectRelease();
          a3 = (uint64_t)&v40;
          sub_1B8912B58();
        }
        v16 = v40;
        a4 = v41;
      }
LABEL_22:
      if (v38)
      {
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      v42 = v8;
      v18 = *(_QWORD *)(v8 + 16);
      v17 = *(_QWORD *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        a3 = (uint64_t)&v42;
        sub_1B88775D0((char *)(v17 > 1), v18 + 1, 1);
        v8 = v42;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v18 + 1;
      v19 = v8 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = a4;
      if (v7 == v10)
        return v8;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_1B88ADAB0()
{
  uint64_t v0;

  sub_1B8898244(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B88ADAD8()
{
  return sub_1B88AFAEC(&OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating);
}

void sub_1B88ADAF4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1B88ADB0C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1B889B35C(a1, a2, v2);
}

void sub_1B88ADB14()
{
  uint64_t v0;

  sub_1B8898D3C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B88ADB3C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  swift_getKeyPath();
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) == 1)
  {
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    sub_1B891287C();
    swift_release();
    v1 = *(void (**)(uint64_t))(*(_QWORD *)sub_1B88AD174() + 288);
    v2 = swift_retain();
    v1(v2);
    swift_release();
    swift_getKeyPath();
    MEMORY[0x1E0C80A78]();
    sub_1B891287C();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  sub_1B8912888();
  swift_release();
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
}

void sub_1B88ADD44()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) = *(_BYTE *)(v0 + 24);
}

unint64_t sub_1B88ADD5C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561BE8);
      result = sub_1B8912F18();
      v3 = result;
      v18 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v18 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v17 = v4;
  while ((v18 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCB4394](v6, v18);
    v8 = __OFADD__(v6++, 1);
    if (v8)
      goto LABEL_26;
LABEL_18:
    v19 = result;
    type metadata accessor for CalculateExpression.Operation();
    sub_1B88A9A6C(&qword_1ED561AE0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
    result = sub_1B8912A74();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = ~v9;
      sub_1B88A9A6C((unint64_t *)&qword_1ED561AE8, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression.Operation, (uint64_t)&protocol conformance descriptor for CalculateExpression.Operation);
      do
      {
        result = sub_1B8912AA4();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v17;
          goto LABEL_11;
        }
        v10 = (v10 + 1) & v14;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
        v13 = 1 << v10;
      }
      while ((v12 & (1 << v10)) != 0);
      v4 = v17;
    }
    *(_QWORD *)(v7 + 8 * v11) = v13 | v12;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v19;
    v15 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v15, 1);
    v16 = v15 + 1;
    if (v8)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v16;
LABEL_11:
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v8 = __OFADD__(v6++, 1);
  if (!v8)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B88ADFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::OpaquePointer *v6;
  Swift::OpaquePointer v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  __CFString *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  id *v18;
  id v19;
  char v20;
  __CFString *v21;
  char v22;
  __CFString *v23;
  char v24;
  char v25;
  CalculateResult_optional *v26;
  __CFString *v27;
  char v28;
  void *v29;
  void *v30;
  uint64_t v31;
  Swift::String v33;
  _OWORD v34[2];
  __int128 v35;
  uint64_t v36;

  v1 = v0;
  swift_getKeyPath();
  *(_QWORD *)&v35 = v0;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B8912888();
  swift_release();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) == 1)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    sub_1B891287C();
    swift_release();
    v3 = sub_1B8898F00();
    v5 = v4;
    swift_getKeyPath();
    *(_QWORD *)&v35 = v0;
    sub_1B8912888();
    swift_release();
    v6 = (Swift::OpaquePointer *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
    swift_beginAccess();
    v7._rawValue = v6->_rawValue;
    swift_getKeyPath();
    *(_QWORD *)&v35 = v1;
    swift_bridgeObjectRetain();
    sub_1B8912888();
    swift_release();
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v33._countAndFlagsBits = v3;
    v33._object = v5;
    if (Strong)
    {
      v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 168))(Strong);
      v7._rawValue = (void *)sub_1B889AAEC((uint64_t)v7._rawValue, v9);
      swift_release();
    }
    v10 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v11 = CFSTR("CalculateKeyForceResult");
    v12 = objc_msgSend(v10, sel_initWithBool_, 1);
    v36 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
    *(_QWORD *)&v35 = v12;
    sub_1B8879E64(&v35, v34);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B88AB5C4(v34, v11, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    v14 = sub_1B889942C();
    if (!*(_QWORD *)(v14 + 16)
      || (swift_bridgeObjectRetain(),
          sub_1B8873F28(120, 0xE100000000000000),
          v16 = v15,
          swift_bridgeObjectRelease(),
          (v16 & 1) == 0))
    {
      if (qword_1EF1B7218 != -1)
        swift_once();
      v17 = qword_1ED562F50;
      swift_getKeyPath();
      *(_QWORD *)&v35 = v17;
      sub_1B8912888();
      swift_release();
      if ((*(_BYTE *)(v17 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) & 1) != 0)
        sub_1B8898544();
      swift_getKeyPath();
      *(_QWORD *)&v35 = v17;
      sub_1B8912888();
      swift_release();
      v18 = (id *)(v17 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
      swift_beginAccess();
      if (*v18)
        v19 = objc_msgSend(*v18, sel_ignoringNaN);
      else
        v19 = 0;
      v20 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v35 = v14;
      sub_1B88AB468((uint64_t)v19, 120, 0xE100000000000000, v20);
      v14 = v35;
      swift_bridgeObjectRelease();
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B28);
    *(_QWORD *)&v35 = v14;
    sub_1B8879E64(&v35, v34);
    v21 = CFSTR("CalculateKeyVariables");
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1B88AB5C4(v34, v21, v22);

    swift_bridgeObjectRelease();
    if (!*((_QWORD *)v7._rawValue + 2)
      || (swift_bridgeObjectRetain(),
          v23 = CFSTR("CalculateKeyAllowEqualSign"),
          sub_1B88A9AAC((uint64_t)v23),
          v25 = v24,
          swift_bridgeObjectRelease(),
          v23,
          (v25 & 1) == 0))
    {
      v36 = MEMORY[0x1E0DEAFA0];
      LOBYTE(v35) = 1;
      sub_1B8879E64(&v35, v34);
      v27 = CFSTR("CalculateKeyAllowEqualSign");
      v28 = swift_isUniquelyReferenced_nonNull_native();
      sub_1B88AB5C4(v34, v27, v28);

      swift_bridgeObjectRelease();
    }
    evaluate(_:options:)(v26, v33, v7);
    v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v31);
    *(_QWORD *)&v35 = v1;
    sub_1B891287C();
    swift_release();

    swift_getKeyPath();
    *(_QWORD *)&v35 = v1;
  }
  else
  {
    swift_getKeyPath();
    *(_QWORD *)&v35 = v0;
  }
  sub_1B8912888();
  swift_release();
  return *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult);
}

uint64_t sub_1B88AE5F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B88AE61C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1B88AE628()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) = *(_BYTE *)(v0 + 24);
}

void sub_1B88AE640()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1B88AE658()
{
  return sub_1B889C01C();
}

uint64_t sub_1B88AE680()
{
  return sub_1B88AF750();
}

uint64_t sub_1B88AE694()
{
  uint64_t v0;

  return sub_1B889C914(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B88AE6AC()
{
  return sub_1B88AF898();
}

void sub_1B88AE6C0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1B88AE6D8()
{
  uint64_t v0;

  return sub_1B889D580(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1B88AE700()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees) = *(_BYTE *)(v0 + 24);
}

void sub_1B88AE718()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions) = *(_BYTE *)(v0 + 24);
}

void sub_1B88AE730()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits) = *(_BYTE *)(v0 + 24);
}

void sub_1B88AE748()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1B88AE75C()
{
  return sub_1B88AF5E8();
}

uint64_t sub_1B88AE770()
{
  return sub_1B88AFAEC(&OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
}

uint64_t sub_1B88AE78C()
{
  return sub_1B88AFAEC(&OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
}

void sub_1B88AE7A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1B88AE7BC()
{
  return sub_1B88AF804(&OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
}

void sub_1B88AE7D8()
{
  uint64_t v0;

  sub_1B88A2CC8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B88AE800()
{
  return sub_1B88AF644();
}

uint64_t sub_1B88AE814()
{
  return sub_1B88AFAEC(&OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
}

uint64_t sub_1B88AE830()
{
  uint64_t v0;

  return sub_1B88A73B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC9Calculate19CalculateExpression___plain);
}

uint64_t sub_1B88AE860()
{
  uint64_t v0;

  return sub_1B88A73B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC9Calculate19CalculateExpression___rich);
}

uint64_t sub_1B88AE890()
{
  return sub_1B88AF7B0(&OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t sub_1B88AE8AC()
{
  return sub_1B88AF7B0(&OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t sub_1B88AE8C8()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B88AE8FC()
{
  uint64_t v0;

  return sub_1B88A925C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_1B88AE90C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B88AE930()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B88AE96C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(id);
  id v5;
  id v6;
  char **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *i;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t (*v59)(id);
  uint64_t v60;
  unint64_t v61;
  int v62;
  unsigned int v63;
  _QWORD v64[4];

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(uint64_t (**)(id))(v0 + 40);
  v62 = *(unsigned __int8 *)(v0 + 56);
  v60 = *(_QWORD *)(v0 + 64);
  v61 = *(_QWORD *)(v0 + 72);
  v5 = objc_msgSend(v1, sel_usesSignificantDigits);
  v6 = objc_msgSend(v1, sel_maximumSignificantDigits);
  v7 = &selRef_isSimpleVerticalMath;
  objc_msgSend(v1, sel_setUsesSignificantDigits_, 1);
  v59 = v4;
  v8 = v4(objc_msgSend(v1, sel_setMaximumSignificantDigits_, v2));
  v10 = v9;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v8;
  *(_QWORD *)(v3 + 24) = v10;
  v11 = (unint64_t)v5;
  swift_bridgeObjectRelease();
  if (v62 != 2)
  {
LABEL_58:
    objc_msgSend(v1, sel_setMaximumSignificantDigits_, v6);
    objc_msgSend(v1, v7[451], v11);
    return;
  }
  v58 = v6;
  v63 = v5;
  swift_beginAccess();
  v57 = v3;
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1B8912AB0();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v1, sel_decimalSeparator);
  if (!v13)
    goto LABEL_86;
  v14 = v13;
  v15 = (uint64_t)&selRef_isSimpleVerticalMath;
  v16 = (uint64_t)objc_msgSend(v12, sel_rangeOfString_, v13);

  v17 = (void *)sub_1B8912AB0();
  v18 = objc_msgSend(v12, sel_rangeOfString_, v17);

  if (v18 == (_BYTE *)sub_1B89127C8())
    v18 = objc_msgSend(v12, sel_length);
  v19 = sub_1B89127C8();
  v20 = v18;
  v7 = &selRef_isSimpleVerticalMath;
  if (v16 != v19)
  {
    v20 = (_BYTE *)(v16 + 1);
    if (__OFADD__(v16, 1))
    {
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
  }
  v16 = v18 - v20;
  if (__OFSUB__(v18, v20))
  {
    __break(1u);
    goto LABEL_76;
  }
  if ((uint64_t)objc_msgSend(v1, sel_maximumFractionDigits) >= v16)
  {

    v11 = v63;
LABEL_57:
    v6 = v58;
    goto LABEL_58;
  }
  v16 = sub_1B8912AB0();
  v21 = (void *)sub_1B8912AB0();
  v15 = (uint64_t)objc_msgSend((id)v16, sel_rangeOfString_, v21);

  v22 = (void *)sub_1B8912AB0();
  if (__OFADD__(v15, 1))
  {
LABEL_77:
    __break(1u);
LABEL_78:
    swift_bridgeObjectRelease();
    v37 = 0;
    goto LABEL_47;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_substringFromIndex_, v15 + 1);

  v16 = sub_1B8912AD4();
  v11 = v25;

  v26 = HIBYTE(v11) & 0xF;
  v27 = v16 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v28 = HIBYTE(v11) & 0xF;
  else
    v28 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v28)
    goto LABEL_78;
  if ((v11 & 0x1000000000000000) != 0)
    goto LABEL_80;
  if ((v11 & 0x2000000000000000) != 0)
  {
    v64[0] = v16;
    v64[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v16 == 43)
    {
      if (!v26)
        goto LABEL_85;
      if (v26 != 1 && (BYTE1(v16) - 48) <= 9u)
      {
        v30 = (BYTE1(v16) - 48);
        if (v26 != 2)
        {
          if ((BYTE2(v16) - 48) > 9u)
            goto LABEL_41;
          v30 = 10 * (BYTE1(v16) - 48) + (BYTE2(v16) - 48);
          v33 = v26 - 3;
          if (v33)
          {
            v34 = (unsigned __int8 *)v64 + 3;
            while (1)
            {
              v35 = *v34 - 48;
              if (v35 > 9)
                goto LABEL_41;
              v36 = 10 * v30;
              if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
                goto LABEL_41;
              v30 = v36 + v35;
              if (__OFADD__(v36, v35))
                goto LABEL_41;
              v16 = 0;
              ++v34;
              if (!--v33)
                goto LABEL_44;
            }
          }
        }
        goto LABEL_43;
      }
    }
    else
    {
      if (v16 != 45)
      {
        if (!v26 || (v16 - 48) > 9u)
          goto LABEL_41;
        v30 = (v16 - 48);
        if (v26 != 1)
        {
          if ((BYTE1(v16) - 48) > 9u)
            goto LABEL_41;
          v30 = 10 * (v16 - 48) + (BYTE1(v16) - 48);
          v48 = v26 - 2;
          if (v48)
          {
            v49 = (unsigned __int8 *)v64 + 2;
            while (1)
            {
              v50 = *v49 - 48;
              if (v50 > 9)
                goto LABEL_41;
              v51 = 10 * v30;
              if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
                goto LABEL_41;
              v30 = v51 + v50;
              if (__OFADD__(v51, v50))
                goto LABEL_41;
              v16 = 0;
              ++v49;
              if (!--v48)
                goto LABEL_44;
            }
          }
        }
        goto LABEL_43;
      }
      if (!v26)
        goto LABEL_84;
      if (v26 != 1 && (BYTE1(v16) - 48) <= 9u)
      {
        v32 = (BYTE1(v16) - 48);
        if (v26 == 2)
        {
          v16 = 0;
          v30 = -v32;
          goto LABEL_44;
        }
        if ((BYTE2(v16) - 48) <= 9u)
        {
          v30 = -10 * (BYTE1(v16) - 48) - (BYTE2(v16) - 48);
          v52 = v26 - 3;
          if (v52)
          {
            v53 = (unsigned __int8 *)v64 + 3;
            while (1)
            {
              v54 = *v53 - 48;
              if (v54 > 9)
                goto LABEL_41;
              v55 = 10 * v30;
              if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
                goto LABEL_41;
              v30 = v55 - v54;
              if (__OFSUB__(v55, v54))
                goto LABEL_41;
              v16 = 0;
              ++v53;
              if (!--v52)
                goto LABEL_44;
            }
          }
LABEL_43:
          v16 = 0;
          goto LABEL_44;
        }
      }
    }
LABEL_41:
    v30 = 0;
    v16 = 1;
    goto LABEL_44;
  }
  if ((v16 & 0x1000000000000000) == 0)
    goto LABEL_82;
  for (i = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32); ; i = (unsigned __int8 *)sub_1B8912F84())
  {
    v30 = (uint64_t)sub_1B8874874(i, v27, 10);
    v16 = v31 & 1;
LABEL_44:
    while (1)
    {
      swift_bridgeObjectRelease();
      v37 = (v16 & 1) != 0 ? 0 : v30;
LABEL_47:
      v11 = v63;
      v38 = __OFADD__(v15, v37);
      v15 += v37;
      if (!v38)
        break;
      __break(1u);
LABEL_80:
      v30 = sub_1B8874504(v16, v11, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1B8874874);
      v16 = v56;
    }
    swift_bridgeObjectRetain();
    v39 = sub_1B88A2030(v60, v61);
    v41 = v40;
    swift_bridgeObjectRelease();
    if (!v41)
    {
      v7 = &selRef_isSimpleVerticalMath;
      goto LABEL_55;
    }
    if (v39 == 45 && v41 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      v7 = &selRef_isSimpleVerticalMath;
    }
    else
    {
      v42 = sub_1B8913050();
      swift_bridgeObjectRelease();
      v7 = &selRef_isSimpleVerticalMath;
      if ((v42 & 1) == 0)
        goto LABEL_55;
    }
    v38 = __OFSUB__(v15--, 1);
    if (v38)
      break;
LABEL_55:
    v43 = v15 & ~(v15 >> 63);
    v44 = (char *)objc_msgSend(v1, sel_maximumFractionDigits);
    if (!__OFADD__(v43, v44))
    {
      v45 = v59(objc_msgSend(v1, sel_setMaximumSignificantDigits_, &v44[v43]));
      v47 = v46;

      swift_beginAccess();
      *(_QWORD *)(v57 + 16) = v45;
      *(_QWORD *)(v57 + 24) = v47;
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
    __break(1u);
LABEL_82:
    ;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1B88AEFFC()
{
  return sub_1B88A9A6C(&qword_1ED561C48, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
}

uint64_t sub_1B88AF028()
{
  return sub_1B88A9A6C(&qword_1EF1B5FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_1B88AF054()
{
  return type metadata accessor for CalculateExpression();
}

uint64_t sub_1B88AF05C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B8912840();
  if (v1 <= 0x3F)
  {
    result = sub_1B89128B8();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for CalculateExpression()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.__allocating_init(_:options:base:id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t getEnumTagSinglePayload for CalculateExpression.TokenType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCE)
    goto LABEL_17;
  if (a2 + 50 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 50) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 50;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 50;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 50;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x33;
  v8 = v6 - 51;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CalculateExpression.TokenType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 50 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 50) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCD)
    return ((uint64_t (*)(void))((char *)&loc_1B88AF270 + 4 * byte_1B8916BA5[v4]))();
  *a1 = a2 + 50;
  return ((uint64_t (*)(void))((char *)sub_1B88AF2A4 + 4 * byte_1B8916BA0[v4]))();
}

uint64_t sub_1B88AF2A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B88AF2AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B88AF2B4);
  return result;
}

uint64_t sub_1B88AF2C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B88AF2C8);
  *(_BYTE *)result = a2 + 50;
  return result;
}

uint64_t sub_1B88AF2CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B88AF2D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.TokenType()
{
  return &type metadata for CalculateExpression.TokenType;
}

uint64_t getEnumTagSinglePayload for CalculateExpression.Base(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CalculateExpression.Base(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B88AF3CC + 4 * byte_1B8916BAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B88AF400 + 4 * byte_1B8916BAA[v4]))();
}

uint64_t sub_1B88AF400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B88AF408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B88AF410);
  return result;
}

uint64_t sub_1B88AF41C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B88AF424);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B88AF428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B88AF430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.Base()
{
  return &type metadata for CalculateExpression.Base;
}

void type metadata accessor for CalculateFormat(uint64_t a1)
{
  sub_1B88AFB58(a1, &qword_1ED561B88);
}

void type metadata accessor for CalculateEngine(uint64_t a1)
{
  sub_1B88AFB58(a1, &qword_1ED561B80);
}

uint64_t sub_1B88AF474(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B88AF4B8()
{
  sub_1B88AF860(&OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver);
}

uint64_t sub_1B88AF4D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B88AF4F8()
{
  return sub_1B88A2A18();
}

uint64_t sub_1B88AF500(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2)
  {
    v3 = result;
    if (result == 0x656C61636F6CLL && a2 == 0xE600000000000000)
      return sub_1B889D2F8();
    if ((sub_1B8913050() & 1) != 0 || v3 == 0xD000000000000015 && a2 == 0x80000001B8A547B0)
      return sub_1B889D2F8();
    result = sub_1B8913050();
    if ((result & 1) != 0)
      return sub_1B889D2F8();
  }
  return result;
}

uint64_t sub_1B88AF5CC()
{
  return sub_1B88AF804(&OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
}

uint64_t sub_1B88AF5E8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1B88AF628()
{
  return sub_1B88AF804(&OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations);
}

uint64_t sub_1B88AF644()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = (_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  swift_beginAccess();
  *v2 = v1;
  return sub_1B88A32F8();
}

uint64_t sub_1B88AF6A8()
{
  return sub_1B88AF6BC();
}

uint64_t sub_1B88AF6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  result = swift_beginAccess();
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = v2;
  *(_BYTE *)(v4 + 16) = v3;
  return result;
}

uint64_t sub_1B88AF728()
{
  uint64_t v0;

  return sub_1B889C730(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B88AF750()
{
  swift_beginAccess();
  return swift_weakAssign();
}

uint64_t sub_1B88AF7B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = (_QWORD *)(*(_QWORD *)(v1 + 16) + *a1);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1B88AF804(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 16) + *a1) = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1B88AF844()
{
  sub_1B88AF860(&OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult);
}

void sub_1B88AF860(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v4 = *(void **)(v2 + *a1);
  *(_QWORD *)(v2 + *a1) = v3;
  v5 = v3;

}

uint64_t sub_1B88AF898()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  v2 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88AF8E0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B88AF914()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  swift_getKeyPath();
  v3 = v1;
  sub_1B88A9A6C(&qword_1ED561B00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
  sub_1B891287C();

  swift_release();
  swift_getKeyPath();
  v4 = v2;
  sub_1B891287C();

  swift_release();
  swift_getKeyPath();
  sub_1B891287C();
  return swift_release();
}

uint64_t sub_1B88AFA70()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B88AFA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1B8889128;
  return sub_1B889B680((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_1B88AFAEC(_QWORD *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = (_BYTE *)(*(_QWORD *)(v1 + 16) + *a1);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

void type metadata accessor for CalculateTokenType(uint64_t a1)
{
  sub_1B88AFB58(a1, &qword_1ED561BA8);
}

void sub_1B88AFB58(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1B88AFB9C()
{
  return sub_1B88A9A6C(&qword_1ED561BA0, (uint64_t (*)(uint64_t))type metadata accessor for CalculateTokenType, (uint64_t)&unk_1B8917714);
}

void sub_1B88AFBD0()
{
  sub_1B88ADAB0();
}

void sub_1B88AFBE4()
{
  sub_1B88ADB14();
}

uint64_t sub_1B88AFBF8()
{
  return sub_1B88AE694();
}

uint64_t sub_1B88AFC0C()
{
  return sub_1B88AE860();
}

uint64_t sub_1B88AFC20()
{
  return sub_1B88AE830();
}

void sub_1B88AFC34()
{
  sub_1B88AE7D8();
}

uint64_t sub_1B88AFC48()
{
  return sub_1B88AF728();
}

uint64_t sub_1B88AFC5C()
{
  return sub_1B88AE6D8();
}

uint64_t sub_1B88AFC70()
{
  return sub_1B88AE658();
}

uint64_t sub_1B88AFC84()
{
  return sub_1B88A9A44();
}

void sub_1B88AFC98()
{
  sub_1B88ADAF4();
}

void sub_1B88AFCAC()
{
  sub_1B88ADD44();
}

void sub_1B88AFCC0()
{
  sub_1B88AE6C0();
}

void sub_1B88AFCD4()
{
  sub_1B88AE730();
}

void sub_1B88AFCE8()
{
  sub_1B88AE718();
}

void sub_1B88AFCFC()
{
  sub_1B88AE700();
}

void sub_1B88AFD10()
{
  sub_1B88AE628();
}

void sub_1B88AFD24()
{
  sub_1B88AE640();
}

void sub_1B88AFD38()
{
  sub_1B88AE7A8();
}

void sub_1B88AFD4C()
{
  sub_1B88AE748();
}

unint64_t sub_1B88AFD64(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C10);
  v2 = sub_1B8913008();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B88B0278(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_1B8873FBC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1B8879E64(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id evaluate(_:options:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateKey();
  sub_1B88B0238(&qword_1ED561B60, (uint64_t)&unk_1B8917790);
  v9 = (void *)sub_1B8912A14();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1B88AFFAC;
  v13[3] = &block_descriptor_2;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v7, sel_evaluate_options_resultHandler_, v8, v9, v10);
  _Block_release(v10);

  return v11;
}

void sub_1B88AFFAC(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_1B88B0038()
{
  return sub_1B88AFD64(MEMORY[0x1E0DEE9D8]);
}

void __swiftcall evaluate(_:options:)(CalculateResult_optional *__return_ptr retstr, Swift::String _, Swift::OpaquePointer options)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateKey();
  sub_1B88B0238(&qword_1ED561B60, (uint64_t)&unk_1B8917790);
  v5 = (void *)sub_1B8912A14();
  v6 = objc_msgSend(v3, sel_evaluate_options_, v4, v5);

}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> evaluateError(_:options:)(CalculateResult *__return_ptr retstr, Swift::String _, Swift::OpaquePointer options)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1B8912AB0();
  type metadata accessor for CalculateKey();
  sub_1B88B0238(&qword_1ED561B60, (uint64_t)&unk_1B8917790);
  v5 = (void *)sub_1B8912A14();
  v9[0] = 0;
  v6 = objc_msgSend(v3, sel_evaluate_options_error_, v4, v5, v9);

  if (v6)
  {
    v7 = v9[0];
  }
  else
  {
    v8 = v9[0];
    sub_1B89127EC();

    swift_willThrow();
  }
}

uint64_t sub_1B88B0238(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CalculateKey();
    result = MEMORY[0x1BCCB4D60](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B88B0278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B88B02C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(__int128 *, _QWORD);
  uint64_t result;
  uint64_t (*v16)(__int128 *);
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  void (*v28)(__int128 *, _QWORD);
  uint64_t (*v29)(__int128 *);
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(__int128 *, _QWORD);
  uint64_t (*v33)(__int128 *);
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(__int128 *, _QWORD);
  uint64_t (*v37)(__int128 *);
  void (*v38)(__int128 *, _QWORD);
  uint64_t v39;
  unint64_t v40;
  __int128 v41;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887E34C, &v41);
  v3 = v41;
  if (!(_QWORD)v41)
    return 0;
  v4 = *((_QWORD *)&v41 + 1);
  v5 = *(uint64_t (**)(void))(*(_QWORD *)v41 + 416);
  v6 = swift_retain();
  sub_1B885DBF8(v6);
  if (!((uint64_t (*)(unint64_t))v5)(v4))
  {
    swift_release();
    sub_1B885DC28(v3);
    sub_1B885DC28(v3);
    return 0;
  }
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v41) = 34;
  v7 = sub_1B885FD04();
  v8 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v41, v7 & 1);
  (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
  v9 = ((uint64_t (*)(unint64_t))v5)(v4);
  if (!v9)
  {
    v16 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
    swift_retain();
    v11 = v16(&v41);
    v18 = v17;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_15:
      sub_1B8912CFC();
      sub_1B8912CA8();
      ((void (*)(__int128 *, _QWORD))v11)(&v41, 0);
      sub_1B885DC28(v3);
LABEL_30:
      swift_release();
LABEL_31:
      swift_release();
      swift_release();
      sub_1B885DC28(v3);
      return 1;
    }
LABEL_41:
    sub_1B8912CCC();
    goto LABEL_15;
  }
  v39 = v8;
  v10 = *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v41) = v10;
  LOBYTE(v40) = 16;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v41, (unsigned __int8 *)&v40)
    || (LOBYTE(v41) = v10, (CalculateExpression.TokenType.isOperand.getter() & 1) != 0))
  {
    v40 = v4;
    sub_1B88834C4((uint64_t *)&v40);
    v11 = v40;
    if (!__OFSUB__(v40, 1))
    {
      v38 = (void (*)(__int128 *, _QWORD))(v40 - 1);
      v12 = v5();
      if (v12)
      {
        v13 = *(_BYTE *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        LOBYTE(v41) = v13;
        sub_1B885DDA0();
        if ((sub_1B8912AA4() & 1) != 0)
        {
          v14 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v41);
          sub_1B885DC54((unint64_t)v38);
          swift_release();
          v14(&v41, 0);
LABEL_29:
          sub_1B885DC28(v3);
          swift_release();
          goto LABEL_30;
        }
      }
      v19 = ((uint64_t (*)(void (*)(__int128 *, _QWORD)))v5)(v38);
      if (v19
        && (v20 = *(_BYTE *)(v19 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
            swift_release(),
            LOBYTE(v41) = v20,
            sub_1B885DDA0(),
            (sub_1B8912AA4() & 1) != 0))
      {
        LOBYTE(v41) = 16;
        v21 = sub_1B885FD04();
        v22 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v41, v21 & 1);
        v11 = v4 + 1;
        if (!__OFADD__(v4, 1))
        {
          v5 = (uint64_t (*)(void))v22;
          v37 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
          v36 = (void (*)(__int128 *, _QWORD))v37(&v41);
          if (!(*v23 >> 62))
          {
            v24 = *(_QWORD *)((*v23 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
            if (v24 < v11)
            {
              __break(1u);
            }
            else if ((v11 & 0x8000000000000000) == 0)
            {
              sub_1B88604E0(v11, v11, (uint64_t)v5);
              v36(&v41, 0);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
              v25 = swift_allocObject();
              *(_OWORD *)(v25 + 16) = xmmword_1B8915E20;
              *(_QWORD *)(v25 + 32) = v39;
              LOBYTE(v41) = 15;
              swift_retain();
              v26 = sub_1B885FD04();
              *(_QWORD *)(v25 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v41, v26 & 1);
              *(_QWORD *)&v41 = v25;
              sub_1B8912CA8();
              v27 = v41;
              v28 = (void (*)(__int128 *, _QWORD))v37(&v41);
              sub_1B8860170((uint64_t)v38, (uint64_t)v38, v27);
              v28(&v41, 0);
              goto LABEL_29;
            }
            __break(1u);
            goto LABEL_49;
          }
LABEL_46:
          swift_bridgeObjectRetain();
          v24 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      else
      {
        v29 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
        swift_retain();
        v5 = (uint64_t (*)(void))v29(&v41);
        if (*v30 >> 62)
        {
          swift_bridgeObjectRetain();
          v31 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v31 = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v31 < v11)
        {
          __break(1u);
        }
        else if ((v11 & 0x8000000000000000) == 0)
        {
          sub_1B88604E0(v11, v11, v8);
          ((void (*)(__int128 *, _QWORD))v5)(&v41, 0);
          goto LABEL_29;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_46;
    }
    __break(1u);
    goto LABEL_41;
  }
  LOBYTE(v41) = v10;
  LOBYTE(v40) = 34;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v41, (unsigned __int8 *)&v40))
  {
    v32 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v41);
    sub_1B885DC54(v4);
    swift_release();
    v32(&v41, 0);
    sub_1B885DC28(v3);
    swift_release();
    swift_release();
    goto LABEL_31;
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v33 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
  swift_retain();
  result = v33(&v41);
  v38 = (void (*)(__int128 *, _QWORD))result;
  if (*v34 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    v35 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  v35 = *(_QWORD *)((*v34 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_37:
  if (v35 < v11)
  {
    __break(1u);
  }
  else if ((v11 & 0x8000000000000000) == 0)
  {
    sub_1B88604E0(v11, v11, v39);
    v38(&v41, 0);
    sub_1B885DC28(v3);
    swift_release();
    swift_release();
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.NegOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.NegOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B88B09AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(unsigned __int8 *, _QWORD);
  uint64_t v14;
  char v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  void (*v31)(unsigned __int8 *, _QWORD);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  void (*v37)(unsigned __int8 *, _QWORD);
  uint64_t v38;
  unsigned __int8 v39;
  BOOL v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  ValueMetadata *v59;
  char v60;
  uint64_t *v61;
  char v62;
  uint64_t v63;
  uint64_t (*v64)(unsigned __int8 *);
  uint64_t (*v65)(unsigned __int8 *, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(unsigned __int8 *, _QWORD);
  uint64_t v73;
  unsigned __int8 v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  char v80;
  void (*v81)(unsigned __int8 *, _QWORD);
  void (*v82)(unsigned __int8 *, _QWORD);
  uint64_t v83;
  uint64_t (*v84)(unsigned __int8 *, _QWORD);
  void (*v85)(unsigned __int8 *, _QWORD);
  void (*v86)(unsigned __int8 *, _QWORD);
  uint64_t v87;
  uint64_t v88;
  void (*v89)(unsigned __int8 *, _QWORD);
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  unsigned __int8 v95[32];
  _BYTE v96[8];
  uint64_t v97;
  char v98;
  uint64_t v99;
  void (*v100)(unsigned __int8 *, _QWORD);
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887E34C, &v101);
  v4 = v101;
  if (!(_QWORD)v101)
    return 0;
  v5 = *((_QWORD *)&v101 + 1);
  v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v101 + 560);
  sub_1B885DBF8(v101);
  v7 = swift_retain();
  if ((v6(v7) & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 568))() & 1) != 0
    || (sub_1B88B18B4(v4, v5, (uint64_t)v96), (v96[0] & 1) == 0))
  {
LABEL_6:
    swift_release();
    sub_1B885DC28(v4);
    sub_1B885DC28(v4);
    return 0;
  }
  v9 = v99;
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 416);
  v11 = ((uint64_t (*)(uint64_t))v10)(v99);
  if (!v11)
    goto LABEL_15;
  v12 = *(_BYTE *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v101) = v12;
  v95[0] = 15;
  v2 = sub_1B885DDA0();
  if ((sub_1B8912AA4() & 1) == 0)
    goto LABEL_15;
  v13 = v100;
  v14 = ((uint64_t (*)(void (*)(unsigned __int8 *, _QWORD)))v10)(v100);
  if (!v14)
    goto LABEL_15;
  v15 = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v101) = v15;
  v95[0] = 16;
  v16 = &type metadata for CalculateExpression.TokenType;
  if ((sub_1B8912AA4() & 1) == 0)
    goto LABEL_15;
  if (__OFSUB__(v13, 1))
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  sub_1B88B18B4(v4, (uint64_t)v13 - 1, (uint64_t)&v101);
  if ((v101 & 1) == 0)
    goto LABEL_6;
  if (v9 < *((uint64_t *)&v101 + 1))
  {
LABEL_15:
    v16 = (ValueMetadata *)v4;
    v17 = ((uint64_t (*)(uint64_t))v10)(v9);
    if (v17)
    {
      v16 = (ValueMetadata *)v17;
      v2 = v9;
      v95[0] = *(_BYTE *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v94 = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v95, &v94))
      {
        v18 = *(uint64_t (**)(void))(v16->Kind + 208);
        v92 = (uint64_t)v16;
        v19 = v18();
        v91 = sub_1B8873AB8(101, 0xE100000000000000, v19, v20);
        v22 = v21;
        v23 = swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          ((void (*)(uint64_t))v18)(v23);
          v24 = sub_1B8912BDC();
          v25 = swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
            goto LABEL_62;
          v26 = ((uint64_t (*)(uint64_t))v18)(v25);
          sub_1B8873AB8(45, 0xE100000000000000, v26, v27);
          v29 = v28;
          v30 = swift_bridgeObjectRelease();
          if ((v29 & 1) == 0)
          {
            v31 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(v16->Kind + 224))(v95);
            sub_1B8912B70();
            swift_bridgeObjectRelease();
            v31(v95, 0);
            goto LABEL_62;
          }
          ((void (*)(uint64_t))v18)(v30);
          v51 = sub_1B8912B4C();
          v52 = swift_bridgeObjectRelease();
          v90 = (uint64_t)v18;
          v53 = ((uint64_t (*)(uint64_t))v18)(v52);
          v55 = sub_1B8873BA4(v51, v53, v54);
          v9 = v56;
          v58 = v57;
          v16 = v59;
          v10 = v55;
          swift_bridgeObjectRelease();
          v91 = v58;
          if ((sub_1B88B1B50(v10, v9, v58, (uint64_t)v16, 48, 0xE100000000000000) & 1) != 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_49;
          }
LABEL_61:
          v62 = sub_1B88B1B50(v10, v9, v91, (uint64_t)v16, 12331, 0xE200000000000000);
          v63 = swift_bridgeObjectRelease();
          if ((v62 & 1) != 0)
            goto LABEL_62;
LABEL_66:
          ((void (*)(uint64_t))v90)(v63);
          v67 = sub_1B8912BF4();
          v69 = v68;
          swift_bridgeObjectRelease();
          if (v67 == 43 && v69 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
            v70 = v92;
            goto LABEL_85;
          }
LABEL_84:
          v80 = sub_1B8913050();
          swift_bridgeObjectRelease();
          v70 = v92;
          if ((v80 & 1) == 0)
          {
LABEL_86:
            v82 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v70 + 224))(v95);
            sub_1B8912B64();
            v82(v95, 0);
            swift_release();
            goto LABEL_49;
          }
LABEL_85:
          v81 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v70 + 224))(v95);
          sub_1B8912B70();
          swift_bridgeObjectRelease();
          v81(v95, 0);
          goto LABEL_86;
        }
      }
      swift_release();
      v9 = v2;
    }
    if ((v98 & 1) != 0)
    {
      v92 = v10;
      v2 = v97;
      v10 = v97 + 1;
      if (!__OFADD__(v97, 1))
      {
        if (v9 >= v10)
        {
          v36 = v9;
          v90 = *(_QWORD *)(*(_QWORD *)v4 + 408);
          v37 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v90)(v95);
          v91 = v10;
          sub_1B885E87C(v10, v36);
          v37(v95, 0);
          v38 = ((uint64_t (*)(uint64_t))v92)(v2);
          if (!v38)
            goto LABEL_38;
          v39 = *(_BYTE *)(v38 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          v95[0] = v39;
          if ((CalculateExpression.TokenType.isBasicOperator.getter() & 1) != 0)
          {
LABEL_62:
            swift_release();
            goto LABEL_49;
          }
          v95[0] = v39;
          v94 = 15;
          v40 = static CalculateExpression.TokenType.== infix(_:_:)(v95, &v94);
          swift_release();
          if (!v40)
          {
LABEL_38:
            if (v2 < 0 || (*(uint64_t (**)(void))(*(_QWORD *)a1 + 368))() == 2)
              goto LABEL_49;
            type metadata accessor for CalculateExpression.RichToken();
            v95[0] = 3;
            v41 = sub_1B885FD04();
            v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v41 & 1);
            v13 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v90)(v95);
            v16 = (ValueMetadata *)v42;
            v9 = *v42;
            if (!((unint64_t)*v42 >> 62))
            {
              v43 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
              v44 = v91;
              if (v43 < v91)
              {
                __break(1u);
              }
              else if ((v91 & 0x8000000000000000) == 0)
              {
LABEL_43:
                sub_1B88604E0(v44, v44, v2);
                v13(v95, 0);
                goto LABEL_49;
              }
              __break(1u);
              goto LABEL_110;
            }
LABEL_107:
            swift_bridgeObjectRetain();
            v43 = sub_1B8912FD8();
            swift_bridgeObjectRelease();
            goto LABEL_41;
          }
          goto LABEL_49;
        }
        goto LABEL_99;
      }
    }
    else
    {
      if ((uint64_t)v100 >= v9)
      {
        v2 = (uint64_t)v100 + 1;
        if (!__OFADD__(v100, 1))
        {
          if ((sub_1B88B16E8(v4, v9, (uint64_t)v100 + 1) & 1) == 0)
          {
            v10 = v9;
            v32 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 368))();
            v33 = type metadata accessor for CalculateExpression.RichToken();
            if (v32 != 2)
            {
              v95[0] = 16;
              v45 = sub_1B885FD04();
              v92 = v33;
              v90 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v45 & 1);
              v91 = *(_QWORD *)(*(_QWORD *)v4 + 408);
              v89 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v91)(v95);
              v16 = (ValueMetadata *)v46;
              v9 = *v46;
              if (!((unint64_t)*v46 >> 62))
              {
                v13 = *(void (**)(unsigned __int8 *, _QWORD))((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
                if ((uint64_t)v13 < v2)
                {
LABEL_105:
                  __break(1u);
LABEL_106:
                  __break(1u);
                  goto LABEL_107;
                }
LABEL_46:
                if ((v2 & 0x8000000000000000) == 0)
                {
                  sub_1B88604E0(v2, v2, v90);
                  v89(v95, 0);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
                  v47 = swift_allocObject();
                  *(_OWORD *)(v47 + 16) = xmmword_1B8915E20;
                  v95[0] = 15;
                  v48 = sub_1B885FD04();
                  *(_QWORD *)(v47 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v48 & 1);
                  v95[0] = 4;
                  v49 = sub_1B885FD04();
                  *(_QWORD *)(v47 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v49 & 1);
                  *(_QWORD *)v95 = v47;
                  sub_1B8912CA8();
                  v50 = *(_QWORD *)v95;
                  v2 = ((uint64_t (*)(unsigned __int8 *))v91)(v95);
                  sub_1B8860170(v10, v10, v50);
                  goto LABEL_48;
                }
                goto LABEL_106;
              }
LABEL_104:
              swift_bridgeObjectRetain();
              v13 = (void (*)(unsigned __int8 *, _QWORD))sub_1B8912FD8();
              swift_bridgeObjectRelease();
              if ((uint64_t)v13 < v2)
                goto LABEL_105;
              goto LABEL_46;
            }
            v95[0] = 4;
            v34 = sub_1B885FD04();
            v92 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v34 & 1);
            v2 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408))(v95);
            v16 = (ValueMetadata *)v35;
            v9 = *v35;
            if (!((unint64_t)*v35 >> 62))
            {
              if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= v10)
                goto LABEL_30;
              goto LABEL_102;
            }
LABEL_101:
            swift_bridgeObjectRetain();
            v87 = sub_1B8912FD8();
            swift_bridgeObjectRelease();
            if (v87 >= v10)
            {
LABEL_30:
              if ((v10 & 0x8000000000000000) == 0)
              {
LABEL_31:
                sub_1B88604E0(v10, v10, v92);
LABEL_48:
                ((void (*)(unsigned __int8 *, _QWORD))v2)(v95, 0);
                goto LABEL_49;
              }
              goto LABEL_103;
            }
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
            goto LABEL_104;
          }
LABEL_49:
          (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
          sub_1B885DC28(v4);
          swift_release();
          sub_1B885DC28(v4);
          return 1;
        }
        goto LABEL_98;
      }
      __break(1u);
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if ((v102 & 1) == 0)
  {
    if ((v98 & 1) != 0)
    {
      v92 = v97;
      v2 = v97 + 1;
      if (!__OFADD__(v97, 1))
      {
        if (v9 >= v2)
        {
          v71 = v9;
          v91 = *(_QWORD *)(*(_QWORD *)v4 + 408);
          v72 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v91)(v95);
          v90 = v2;
          sub_1B885E87C(v2, v71);
          v72(v95, 0);
          v73 = ((uint64_t (*)(uint64_t))v10)(v92);
          if (v73)
          {
            v74 = *(_BYTE *)(v73 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            v95[0] = v74;
            if ((CalculateExpression.TokenType.isBasicOperator.getter() & 1) != 0)
              goto LABEL_49;
          }
          if (v92 < 0)
            goto LABEL_49;
          type metadata accessor for CalculateExpression.RichToken();
          v95[0] = 3;
          v75 = sub_1B885FD04();
          v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v75 & 1);
          v13 = (void (*)(unsigned __int8 *, _QWORD))((uint64_t (*)(unsigned __int8 *))v91)(v95);
          v16 = (ValueMetadata *)v76;
          v9 = *v76;
          if (!((unint64_t)*v76 >> 62))
          {
            v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_76:
            v44 = v90;
            if (v10 >= v90)
            {
              if ((v90 & 0x8000000000000000) == 0)
                goto LABEL_43;
              __break(1u);
              goto LABEL_79;
            }
            __break(1u);
            goto LABEL_116;
          }
LABEL_114:
          swift_bridgeObjectRetain();
          v10 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          goto LABEL_76;
        }
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    v10 = v9 + 1;
    if (!__OFADD__(v9, 1))
    {
      if ((uint64_t)v13 >= v10)
      {
        if ((sub_1B88B16E8(v4, v9 + 1, (uint64_t)v13) & 1) != 0)
          goto LABEL_49;
        type metadata accessor for CalculateExpression.RichToken();
        v95[0] = 4;
        v60 = sub_1B885FD04();
        v92 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v95, v60 & 1);
        result = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408))(v95);
        v2 = result;
        v16 = (ValueMetadata *)v61;
        v9 = *v61;
        if (!((unint64_t)*v61 >> 62))
        {
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < v10)
          {
LABEL_117:
            __break(1u);
            goto LABEL_118;
          }
LABEL_59:
          if (v10 < 0)
          {
            __break(1u);
            goto LABEL_61;
          }
          goto LABEL_31;
        }
LABEL_116:
        swift_bridgeObjectRetain();
        v88 = sub_1B8912FD8();
        result = swift_bridgeObjectRelease();
        if (v88 < v10)
          goto LABEL_117;
        goto LABEL_59;
      }
      goto LABEL_111;
    }
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  if ((v98 & 1) == 0)
  {
    v64 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
    v65 = (uint64_t (*)(unsigned __int8 *, _QWORD))v64(v95);
    sub_1B885DC54((unint64_t)v13);
    swift_release();
    v63 = v65(v95, 0);
    v66 = v103;
    if (v103 < v9)
    {
      __break(1u);
      goto LABEL_66;
    }
LABEL_92:
    v85 = (void (*)(unsigned __int8 *, _QWORD))v64(v95);
    sub_1B885E87C(v9, v66);
    v85(v95, 0);
    goto LABEL_49;
  }
LABEL_79:
  v77 = v97;
  result = ((uint64_t (*)(uint64_t))v10)(v97);
  if (result)
  {
    v78 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v95[0] = v78;
    result = CalculateExpression.TokenType.isBasicOperator.getter();
    if ((result & 1) != 0)
    {
      v79 = v77 + 1;
      if (!__OFADD__(v77, 1))
      {
        if (v9 < v79)
        {
          __break(1u);
          goto LABEL_84;
        }
LABEL_95:
        v86 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408))(v95);
        sub_1B885E87C(v79, v9);
        v86(v95, 0);
        goto LABEL_49;
      }
      goto LABEL_122;
    }
  }
  if ((v77 & 0x8000000000000000) == 0)
  {
    v93 = v9;
    v83 = v104 + 1;
    if (!__OFADD__(v104, 1))
    {
      if ((uint64_t)v13 >= v83)
      {
        v64 = *(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v4 + 408);
        result = v64(v95);
        if (!__OFADD__(v13, 1))
        {
          v84 = (uint64_t (*)(unsigned __int8 *, _QWORD))result;
          sub_1B885E87C(v83, (uint64_t)v13 + 1);
          result = v84(v95, 0);
          v66 = v103;
          v9 = v93;
          if (v103 >= v93)
            goto LABEL_92;
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
          goto LABEL_123;
        }
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  if (v9 > v77)
  {
    v79 = v77 + 1;
    goto LABEL_95;
  }
LABEL_123:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.NegateOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B88B16E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v3 = a3 - 1;
  if (__OFSUB__(a3, 1))
    goto LABEL_25;
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)result + 416);
  do
  {
    if (!v5(a2))
      goto LABEL_11;
    swift_release();
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) == 0)
      goto LABEL_11;
    if (!v5(v3))
      goto LABEL_11;
    swift_release();
    result = sub_1B8912AA4();
    if ((result & 1) == 0)
      goto LABEL_11;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    ++a2;
  }
  while (!__OFSUB__(v3--, 1));
  __break(1u);
LABEL_11:
  if (a2 != v3)
    return 0;
  v7 = v5(a2);
  if (!v7)
    return 0;
  v8 = v7;
  v13 = *(_BYTE *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v12 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
  {
    swift_release();
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(_QWORD *)v8 + 208))() != 48 || v9 != 0xE100000000000000)
  {
    v11 = sub_1B8913050();
    swift_release();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1B88B18B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  unsigned __int8 v8;
  char v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  BOOL v17;
  unsigned __int8 v18;
  char v19;
  BOOL v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;

  v24 = a2;
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 416);
  v6 = v5(a2);
  result = a2;
  if (v6)
  {
    v8 = *(_BYTE *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v23 = v8;
    v22 = 9;
    sub_1B885DDA0();
    v9 = sub_1B8912AA4();
    result = a2;
    if ((v9 & 1) != 0)
    {
      result = a2 - 1;
      if (__OFSUB__(a2, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v24 = a2 - 1;
    }
  }
  v10 = v5(result);
  if (v10)
  {
    v11 = *(_BYTE *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v23 = v11;
    v22 = 15;
    sub_1B885DDA0();
    v12 = sub_1B8912AA4();
  }
  else
  {
    v12 = 0;
  }
  result = sub_1B88834C4(&v24);
  v13 = v24;
  v14 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  v15 = v5(v24 - 1);
  if (v15)
  {
    v16 = *(_BYTE *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v23 = v16;
    v22 = 17;
    sub_1B885DDA0();
    result = sub_1B8912AA4();
    if ((result & 1) != 0)
    {
      v17 = __OFSUB__(v14--, 1);
      if (v17)
        goto LABEL_27;
    }
  }
  result = v5(v14);
  if (!result
    || (v18 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        v23 = v18,
        v22 = 4,
        sub_1B885DDA0(),
        result = sub_1B8912AA4(),
        (result & 1) == 0))
  {
    v19 = 0;
    v20 = 0;
    if ((v12 & 1) != 0)
    {
LABEL_23:
      *(_BYTE *)a3 = v20;
      *(_QWORD *)(a3 + 8) = v14;
      *(_BYTE *)(a3 + 16) = v19;
      *(_QWORD *)(a3 + 24) = v13;
      *(_QWORD *)(a3 + 32) = a2;
      return result;
    }
    goto LABEL_18;
  }
  v17 = __OFSUB__(v14--, 1);
  if (!v17)
  {
    v19 = 1;
    if ((v12 & 1) != 0)
    {
LABEL_22:
      v20 = 0;
      goto LABEL_23;
    }
LABEL_18:
    result = v5(v13);
    if (result)
    {
      v21 = *(_BYTE *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v23 = v21;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
        || (v23 = v21, v22 = 15, static CalculateExpression.TokenType.== infix(_:_:)(&v23, &v22)))
      {
        result = swift_release();
        v20 = 1;
      }
      else
      {
        v23 = v21;
        v22 = 10;
        v20 = static CalculateExpression.TokenType.== infix(_:_:)(&v23, &v22);
        result = swift_release();
      }
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B88B1B50(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_1B891302C() & 1;
}

uint64_t type metadata accessor for CalculateExpression.NegateOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.NegateOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t _s15NegateOperationC13NegatePatternVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[40])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s15NegateOperationC13NegatePatternVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s15NegateOperationC13NegatePatternVMa()
{
  return &_s15NegateOperationC13NegatePatternVN;
}

uint64_t sub_1B88B1CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, _QWORD);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*i)(__int128 *, _QWORD);
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t (*v48)(__int128 *);
  void (*v49)(__int128 *, _QWORD);
  char v50;
  _QWORD *v51;
  char v52;
  uint64_t (*v53)(__int128 *);
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  void (*v62)(__int128 *, _QWORD);

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887F64C, &v60);
  v5 = v60;
  if (!(_QWORD)v60)
    return 0;
  v6 = *((_QWORD *)&v60 + 1);
  v7 = v61;
  v8 = v62;
  v9 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v60 + 416);
  v10 = swift_retain();
  sub_1B885DBF8(v10);
  v11 = v9(v6);
  i = (void (*)(__int128 *, _QWORD))type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v60) = 7;
  v13 = sub_1B885FD04();
  v14 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v60, v13 & 1);
  if (!v11)
  {
    swift_release();
    sub_1B885DC28(v5);
    swift_release();
    v30 = v5;
LABEL_20:
    sub_1B885DC28(v30);
    return 0;
  }
  v58 = v14;
  v15 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 328);
  v16 = swift_retain();
  v17 = v15(v16);
  v18 = v7 + v17;
  if (__OFADD__(v7, v17))
  {
    __break(1u);
    goto LABEL_56;
  }
  v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v20 = *(_QWORD *)sub_1B8896B1C();
  swift_release();
  if (v19 >= v20)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1B885DC28(v5);
LABEL_19:
    v30 = v5;
    goto LABEL_20;
  }
  v21 = *(void (**)(_QWORD))(*(_QWORD *)a1 + 232);
  swift_retain();
  v21(0);
  v22 = *(_QWORD *)(v3 + 16);
  v23 = *(_QWORD *)(v3 + 24);
  if (v22)
    v24 = 0;
  else
    v24 = v23 == 0xE000000000000000;
  v25 = v24;
  v57 = v25;
  if (v24 || (sub_1B8913050() & 1) != 0)
  {
    LOBYTE(v60) = 18;
    v26 = sub_1B885FD04() & 1;
    v27 = 0;
    v28 = 0;
  }
  else
  {
    LOBYTE(v60) = 1;
    swift_bridgeObjectRetain();
    v26 = sub_1B885FD04() & 1;
    v27 = v22;
    v28 = v23;
  }
  v7 = (uint64_t)i;
  i = (void (*)(__int128 *, _QWORD))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v27, v28, (unsigned __int8 *)&v60, v26);
  type metadata accessor for CalculateExpression.RichExpression();
  v8 = (void (*)(__int128 *, _QWORD))__swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1B8915DF0;
  *(_QWORD *)(v31 + 32) = i;
  *(_QWORD *)&v60 = v31;
  sub_1B8912CA8();
  v32 = v60;
  swift_retain();
  v33 = sub_1B88622EC(v32);
  v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 288))(v33);
  v35 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v58 + 280);
  v36 = v35(v34);
  if (v36)
  {
    v37 = v36;
    if (v57)
      v38 = 1;
    else
      v38 = sub_1B8913050();
    (*(void (**)(_QWORD))(*(_QWORD *)v37 + 304))(v38 & 1);
    v36 = swift_release();
  }
  v39 = v58;
  v40 = v35(v36);
  if (v40)
  {
    LOBYTE(v60) = 1;
    (*(void (**)(__int128 *))(*(_QWORD *)v40 + 280))(&v60);
    swift_release();
  }
  v56 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v41 = *(_BYTE *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v60) = v41;
  LOBYTE(v59) = 7;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v60, (unsigned __int8 *)&v59))
  {
    LOBYTE(v60) = v41;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
      goto LABEL_44;
    LOBYTE(v60) = v41;
    LOBYTE(v59) = 8;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
      goto LABEL_44;
    LOBYTE(v60) = v41;
    LOBYTE(v59) = 9;
    if ((sub_1B8912AA4() & 1) != 0)
      goto LABEL_44;
    swift_release();
    sub_1B885DC28(v5);
    swift_release();
    swift_release();
    swift_release_n();
    goto LABEL_19;
  }
  v42 = (*(uint64_t (**)(void))(*(_QWORD *)v11 + 280))();
  if (v42)
  {
    v43 = v42;
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 568))(v42) & 1) != 0)
    {
      swift_release();
LABEL_38:
      swift_release();
      sub_1B885DC28(v5);
      swift_release();
      swift_release();
      swift_release_n();
      v30 = v5;
      goto LABEL_20;
    }
    v44 = (*(uint64_t (**)(void))(*(_QWORD *)v43 + 560))();
    swift_release();
    if ((v44 & 1) != 0)
      goto LABEL_38;
  }
  v59 = v6;
  sub_1B88834C4(&v59);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1B8915E20;
  LOBYTE(v60) = 16;
  v46 = sub_1B885FD04();
  *(_QWORD *)(v45 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v60, v46 & 1);
  *(_QWORD *)(v45 + 40) = v58;
  *(_QWORD *)&v60 = v45;
  sub_1B8912CA8();
  if (__OFADD__(v6, 1))
    goto LABEL_61;
  v47 = v60;
  v48 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
  swift_retain();
  v49 = (void (*)(__int128 *, _QWORD))v48(&v60);
  sub_1B8860170(v6 + 1, v6 + 1, v47);
  v49(&v60, 0);
  LOBYTE(v60) = 15;
  v50 = sub_1B885FD04();
  v7 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v60, v50 & 1);
  v39 = v59;
  result = v48(&v60);
  v8 = (void (*)(__int128 *, _QWORD))result;
  if (*v51 >> 62)
    goto LABEL_62;
  for (i = *(void (**)(__int128 *, _QWORD))((*v51 & 0xFFFFFFFFFFFFF8) + 0x10);
        (uint64_t)i >= v39;
        result = swift_bridgeObjectRelease())
  {
    if (v39 < 0)
      goto LABEL_64;
    sub_1B88604E0(v39, v39, v7);
    v8(&v60, 0);
LABEL_44:
    v52 = *(_BYTE *)(v11 + v56);
    LOBYTE(v60) = v52;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v60) = v52;
      LOBYTE(v59) = 16;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v60, (unsigned __int8 *)&v59))
      {
        LOBYTE(v60) = v52;
        LOBYTE(v59) = 8;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v60, (unsigned __int8 *)&v59))
        {
          LOBYTE(v60) = v52;
          LOBYTE(v59) = 9;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v60, (unsigned __int8 *)&v59))
            goto LABEL_54;
        }
      }
    }
    a1 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_57:
      __break(1u);
    }
    else
    {
      v53 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
      swift_retain();
      i = (void (*)(__int128 *, _QWORD))v53(&v60);
      if (!(*v54 >> 62))
      {
        v55 = *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRetain();
    v55 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
LABEL_51:
    v39 = v58;
    if (v55 < a1)
    {
      __break(1u);
    }
    else if ((a1 & 0x8000000000000000) == 0)
    {
      sub_1B88604E0(a1, a1, v58);
      i(&v60, 0);
LABEL_54:
      swift_release();
      sub_1B885DC28(v5);
      swift_release();
      swift_release();
      swift_release_n();
      sub_1B885DC28(v5);
      return 1;
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    i = (void (*)(__int128 *, _QWORD))sub_1B8912FD8();
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

void sub_1B88B2458()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.PowerOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.PowerOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.PowerOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.PowerOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t CalculateExpression.EqualsOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.EqualsOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B88B2550(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_BYTE *)(v6 + 32) = a3;
  return sub_1B8883058();
}

uint64_t sub_1B88B259C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3;
  return sub_1B8883058();
}

uint64_t sub_1B88B25A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  unsigned __int8 v5;

  type metadata accessor for CalculateExpression.RichToken();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v5 = 10;
  swift_bridgeObjectRetain();
  v3 = sub_1B885FD04();
  return CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v2, v1, &v5, v3 & 1);
}

uint64_t sub_1B88B260C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t (*v8)(unint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t (*v21)(__int128 *);
  void (*v22)(__int128 *, _QWORD);
  char v23;
  void (*v24)(__int128 *, _QWORD);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  void (*v34)(__int128 *, _QWORD);
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(__int128 *);
  void (*v48)(__int128 *, _QWORD);
  void (*v49)(__int128 *, _QWORD);
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(__int128 *, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  void (*v73)(__int128 *, _QWORD);
  uint64_t v74;
  unint64_t *v75;
  unint64_t *v76;
  unint64_t v77;
  char isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(__int128 *);
  uint64_t v87;
  uint64_t (*v88)(unint64_t);
  unint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  unint64_t v92;
  __int128 v93;
  uint64_t *v94;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B88B3514, &v93);
  v5 = v93;
  if (!(_QWORD)v93)
    return 0;
  v6 = *((_QWORD *)&v93 + 1);
  v7 = v94;
  v8 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v93 + 416);
  sub_1B885DBF8(v93);
  swift_retain();
  v89 = v6;
  v88 = v8;
  v90 = v8(v6);
  v9 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 144))();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B8915E20;
  *(_QWORD *)(v10 + 32) = v9;
  v11 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v93) = 15;
  swift_retain();
  v12 = sub_1B885FD04();
  *(_QWORD *)(v10 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v93, v12 & 1);
  *(_QWORD *)&v93 = v10;
  sub_1B8912CA8();
  v13 = v93;
  LOBYTE(v93) = 16;
  CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v93, 1);
  *(_QWORD *)&v93 = v13;
  swift_bridgeObjectRetain();
  v14 = swift_retain();
  MEMORY[0x1BCCB40AC](v14);
  if (*(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_67;
  while (1)
  {
    sub_1B8912CFC();
    sub_1B8912CA8();
    v15 = v93;
    v16 = swift_release();
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 328))(v16);
    if (__OFADD__(v7, v17))
    {
      __break(1u);
      goto LABEL_117;
    }
    if ((uint64_t)v7 + v17 >= *(_QWORD *)sub_1B8896B1C())
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B885DC28(v5);
      v20 = v5;
LABEL_12:
      sub_1B885DC28(v20);
      return 0;
    }
    if (!v90
      || ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 576))() & 1) != 0
      && ((*(uint64_t (**)(void))(*(_QWORD *)a1 + 224))() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t))(*(_QWORD *)v5 + 400))(v15);
      sub_1B885DC28(v5);
      swift_release();
      swift_release();
      swift_release();
      v18 = v5;
      goto LABEL_28;
    }
    if (((*(uint64_t (**)(void))(*(_QWORD *)a1 + 224))() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v21 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
      v22 = (void (*)(__int128 *, _QWORD))v21(&v93);
      sub_1B8860170(0, 0, v13);
      v22(&v93, 0);
      LOBYTE(v93) = 16;
      v23 = sub_1B885FD04();
      CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v93, v23 & 1);
      v24 = (void (*)(__int128 *, _QWORD))v21(&v93);
      v26 = v25;
      MEMORY[0x1BCCB40AC]();
      if (*(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B8912CCC();
      sub_1B8912CFC();
      sub_1B8912CA8();
      v24(&v93, 0);
      (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
      sub_1B885DC28(v5);
      swift_release();
      swift_release();
      goto LABEL_17;
    }
    v7 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    v27 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    a1 = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v93) = *(_BYTE *)(v90 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_retain();
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v93) = a1;
      LOBYTE(v92) = 7;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v92))
        break;
      if (__OFSUB__(v89, 1))
        goto LABEL_74;
      v35 = v88(v89 - 1);
      if (!v35)
        break;
      v36 = *(_BYTE *)(v35 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v93) = v36;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
        break;
    }
    swift_bridgeObjectRelease();
    a1 = v89;
    v27 = v89;
    v3 = (uint64_t)v88;
    while (1)
    {
      v15 = v27;
      v28 = __OFSUB__(v27--, 1);
      if (v28)
        break;
      v29 = v88(v27);
      if (v29)
      {
        v30 = *(_BYTE *)(v29 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        LOBYTE(v93) = v30;
        if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0)
          continue;
      }
      LOBYTE(v93) = 16;
      v31 = sub_1B885FD04();
      v32 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v93, v31 & 1);
      v11 = v89 + 1;
      if (__OFADD__(v89, 1))
      {
        __break(1u);
      }
      else
      {
        v7 = (uint64_t *)v32;
        v3 = *(_QWORD *)(*(_QWORD *)v5 + 408);
        v88 = (uint64_t (*)(unint64_t))((uint64_t (*)(__int128 *))v3)(&v93);
        v27 = *v33;
        if (!((unint64_t)*v33 >> 62))
        {
          a1 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (a1 >= v11)
            goto LABEL_26;
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
      }
      swift_bridgeObjectRetain();
      a1 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (a1 < v11)
        goto LABEL_72;
LABEL_26:
      a1 = v89;
      if ((v11 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(v11, v11, (uint64_t)v7);
        ((void (*)(__int128 *, _QWORD))v88)(&v93, 0);
        v34 = (void (*)(__int128 *, _QWORD))((uint64_t (*)(__int128 *))v3)(&v93);
        sub_1B8860170(v15, v15, v13);
        v34(&v93, 0);
        sub_1B885DC28(v5);
        swift_release();
        swift_release_n();
        swift_release();
        v18 = v5;
        goto LABEL_28;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      swift_bridgeObjectRetain();
      if (!sub_1B8912FD8())
      {
LABEL_77:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_78;
      }
LABEL_42:
      v83 = (uint64_t (*)(uint64_t))v3;
      v84 = v27;
      v82 = v13 & 0xC000000000000001;
      if ((v13 & 0xC000000000000001) != 0)
        goto LABEL_90;
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v41 = *(_QWORD *)(v13 + 32);
        swift_retain();
        goto LABEL_45;
      }
      __break(1u);
      goto LABEL_92;
    }
    __break(1u);
LABEL_67:
    sub_1B8912CCC();
  }
  v37 = *(_BYTE *)(v90 + v27);
  LOBYTE(v93) = v37;
  LOBYTE(v92) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v92))
  {
    LOBYTE(v93) = v37;
    LOBYTE(v92) = 7;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v92))
    {
      LOBYTE(v93) = v37;
      LOBYTE(v92) = 8;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v92))
      {
        swift_bridgeObjectRelease();
        v13 = v89 + 1;
        if (__OFADD__(v89, 1))
          goto LABEL_75;
        v47 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
        v48 = (void (*)(__int128 *, _QWORD))v47(&v93);
        sub_1B8860170(v13, v13, v15);
        v48(&v93, 0);
        LOBYTE(v93) = *(_BYTE *)(v90 + v27);
        LOBYTE(v92) = 18;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, (unsigned __int8 *)&v92))
        {
          v49 = (void (*)(__int128 *, _QWORD))v47(&v93);
          sub_1B885DC54(v89);
          swift_release();
          v49(&v93, 0);
        }
        sub_1B885DC28(v5);
        swift_release();
        swift_release_n();
LABEL_17:
        swift_release();
        v18 = v5;
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  a1 = v89;
  v92 = v89;
  sub_1B88834C4((uint64_t *)&v92);
  if ((v92 & 0x8000000000000000) != 0)
  {
    sub_1B885DC28(v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release();
    v20 = v5;
    goto LABEL_12;
  }
  v87 = v92;
  if (*(_BYTE *)(v3 + 32) != 1)
    goto LABEL_79;
  v38 = ((uint64_t (*)(void))v88)();
  if (!v38)
    goto LABEL_79;
  v27 = v38;
  LOBYTE(v93) = *(_BYTE *)(v38 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v91 = 10;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v91))
  {
    v3 = *(_QWORD *)(*(_QWORD *)v27 + 208);
    v85 = ((uint64_t (*)(void))v3)();
    v15 = v39;
    if (v13 >> 62)
      goto LABEL_76;
    v40 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v40)
      goto LABEL_77;
    goto LABEL_42;
  }
  while (2)
  {
    while (2)
    {
      swift_release();
LABEL_79:
      LOBYTE(v93) = 16;
      v59 = sub_1B885FD04();
      v60 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v93, v59 & 1);
      v28 = __OFADD__(a1++, 1);
      if (v28)
      {
        __break(1u);
      }
      else
      {
        v7 = (uint64_t *)v60;
        v15 = *(_QWORD *)(*(_QWORD *)v5 + 408);
        v11 = ((uint64_t (*)(__int128 *))v15)(&v93);
        if (!(*v61 >> 62))
        {
          v62 = *(_QWORD *)((*v61 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_82;
        }
      }
      swift_bridgeObjectRetain();
      v62 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
LABEL_82:
      if (v62 < a1)
      {
        __break(1u);
      }
      else if ((a1 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(a1, a1, (uint64_t)v7);
        ((void (*)(__int128 *, _QWORD))v11)(&v93, 0);
        v63 = (void (*)(__int128 *, _QWORD))((uint64_t (*)(__int128 *))v15)(&v93);
        sub_1B8860170(v87, v87, v13);
        v63(&v93, 0);
        sub_1B885DC28(v5);
LABEL_85:
        swift_release();
        swift_release_n();
        swift_release();
        v18 = v5;
LABEL_28:
        sub_1B885DC28(v18);
        return 1;
      }
      __break(1u);
LABEL_90:
      v41 = MEMORY[0x1BCCB4394](0, v13);
LABEL_45:
      v42 = swift_bridgeObjectRelease();
      v43 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 208))(v42);
      v45 = v44;
      swift_release();
      if (v85 == v43 && v15 == v45)
      {
        v46 = swift_bridgeObjectRelease_n();
        v3 = (uint64_t)v88;
      }
      else
      {
        v50 = sub_1B8913050();
        swift_bridgeObjectRelease();
        v46 = swift_bridgeObjectRelease();
        v3 = (uint64_t)v88;
        if ((v50 & 1) == 0)
          continue;
      }
      break;
    }
    if (v83(v46) == 1885957222 && v51 == 0xE400000000000000)
    {
      v52 = swift_bridgeObjectRelease();
LABEL_59:
      v54 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v84 + 280))(v52);
      if (!v54)
        goto LABEL_94;
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v54 + 392))(v54);
      swift_release();
      if (!(v15 >> 62))
      {
        v55 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v55)
          goto LABEL_62;
LABEL_93:
        swift_bridgeObjectRelease();
LABEL_94:
        v85 = 0;
        v15 = 0;
        goto LABEL_95;
      }
LABEL_92:
      swift_bridgeObjectRetain();
      v55 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (!v55)
        goto LABEL_93;
LABEL_62:
      if ((v15 & 0xC000000000000001) != 0)
        goto LABEL_128;
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v56 = *(_QWORD *)(v15 + 32);
        swift_retain();
        goto LABEL_65;
      }
      __break(1u);
LABEL_130:
      v68 = MEMORY[0x1BCCB4394](0, v55);
LABEL_104:
      v69 = swift_bridgeObjectRelease();
      v66 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v68 + 208))(v69);
      v71 = v70;
      swift_release();
      v3 = (uint64_t)v88;
      goto LABEL_108;
    }
    v53 = sub_1B8913050();
    v52 = swift_bridgeObjectRelease();
    if ((v53 & 1) != 0)
      goto LABEL_59;
LABEL_117:
    swift_bridgeObjectRelease();
    v86 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
    v73 = (void (*)(__int128 *, _QWORD))v86(&v93);
    sub_1B885DC54(a1);
    swift_release();
    v73(&v93, 0);
    v11 = v87;
    while (1)
    {
      v74 = ((uint64_t (*)(uint64_t))v3)(v11);
      if (!v74)
      {
LABEL_125:
        sub_1B885DC28(v5);
        swift_release();
        goto LABEL_85;
      }
      v15 = v74;
      v13 = v86(&v93);
      v76 = v75;
      v77 = *v75;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v76 = v77;
      if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0
        || (v77 & 0x8000000000000000) != 0
        || (v77 & 0x4000000000000000) != 0)
      {
        sub_1B885DD38(v77);
      }
      v3 = v77 & 0xFFFFFFFFFFFFFF8;
      v79 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = v87;
      if (v87 >= v79)
        break;
      v80 = v79 - 1;
      memmove((void *)(v3 + 8 * v87 + 32), (const void *)(v3 + 8 * v87 + 40), 8 * (v79 - 1 - v87));
      *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) = v80;
      sub_1B8912CA8();
      swift_release();
      ((void (*)(__int128 *, _QWORD))v13)(&v93, 0);
      LOBYTE(v93) = *(_BYTE *)(v15 + *v7);
      v91 = 15;
      v81 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v91);
      swift_release();
      v3 = (uint64_t)v88;
      a1 = v89;
      if (v81)
        goto LABEL_125;
    }
    __break(1u);
LABEL_128:
    v56 = MEMORY[0x1BCCB4394](0, v15);
LABEL_65:
    v57 = swift_bridgeObjectRelease();
    v85 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 208))(v57);
    v15 = v58;
    swift_release();
LABEL_95:
    if (v82)
    {
      swift_bridgeObjectRetain();
      v64 = MEMORY[0x1BCCB4394](0, v13);
      v65 = swift_bridgeObjectRelease();
    }
    else
    {
      v64 = *(_QWORD *)(v13 + 32);
      v65 = swift_retain();
    }
    v66 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v64 + 280))(v65);
    v67 = swift_release();
    if (!v66)
      goto LABEL_107;
    v55 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v66 + 392))(v67);
    result = swift_release();
    if (!(v55 >> 62))
    {
      v66 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v66)
        goto LABEL_101;
LABEL_106:
      swift_bridgeObjectRelease();
LABEL_107:
      v71 = 0;
LABEL_108:
      if (v15)
      {
        if (!v71)
          goto LABEL_114;
        if (v85 == v66 && v15 == v71)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v72 = sub_1B8913050();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v72 & 1) == 0)
            continue;
        }
      }
      else if (v71)
      {
LABEL_114:
        swift_release();
LABEL_78:
        swift_bridgeObjectRelease();
        goto LABEL_79;
      }
      goto LABEL_117;
    }
    break;
  }
  swift_bridgeObjectRetain();
  v66 = sub_1B8912FD8();
  result = swift_bridgeObjectRelease();
  if (!v66)
    goto LABEL_106;
LABEL_101:
  if ((v55 & 0xC000000000000001) != 0)
    goto LABEL_130;
  if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v68 = *(_QWORD *)(v55 + 32);
    swift_retain();
    goto LABEL_104;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B88B3514(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if (((*(uint64_t (**)(void))(*(_QWORD *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 568))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v1 + 544))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(_QWORD *)v1 + 456))() & 1;
  }
}

void sub_1B88B3578()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.FunctionOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.FunctionOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.FunctionOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.FunctionOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.FunctionOperation.functionToken.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CalculateExpression.FunctionOperation.requireParentheses.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t static CalculateDocument.== infix(_:_:)()
{
  return sub_1B8912828();
}

uint64_t CalculateDocument.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  v4 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1B88B36A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6368);
  v6 = sub_1B8913008();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_9;
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v31[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1B8879FD0(v12, (uint64_t)v5, &qword_1ED5621E0);
    result = sub_1B887C468((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1B8912840();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 120 * v16;
    v20 = *((_QWORD *)v9 + 2);
    v21 = v9[72];
    v22 = v9[112];
    v23 = *(_OWORD *)(v9 + 24);
    v24 = *(_OWORD *)(v9 + 40);
    v25 = *(_OWORD *)(v9 + 56);
    v26 = *((_OWORD *)v9 + 5);
    v27 = *((_OWORD *)v9 + 6);
    *(_OWORD *)v19 = *(_OWORD *)v9;
    *(_QWORD *)(v19 + 16) = v20;
    *(_OWORD *)(v19 + 24) = v23;
    *(_OWORD *)(v19 + 40) = v24;
    *(_OWORD *)(v19 + 56) = v25;
    *(_BYTE *)(v19 + 72) = v21;
    *(_OWORD *)(v19 + 80) = v26;
    *(_OWORD *)(v19 + 96) = v27;
    *(_BYTE *)(v19 + 112) = v22;
    v28 = v7[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_12;
    v7[2] = v30;
    v12 += v13;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (unint64_t)v7;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1B88B387C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t sub_1B88B38AC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B88B44B4(a1, a2, a3, a4, (uint64_t)&unk_1B89178C0, (uint64_t)sub_1B88BAA50);
}

uint64_t sub_1B88B38C0()
{
  return sub_1B88B423C();
}

uint64_t sub_1B88B38D4()
{
  return sub_1B88B3A24();
}

uint64_t sub_1B88B38E8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B88B391C(uint64_t a1, uint64_t *a2)
{
  return sub_1B88B4BA4(a1, a2);
}

uint64_t sub_1B88B3930()
{
  return sub_1B88B4C2C((uint64_t)&unk_1B89178E8, &OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous);
}

uint64_t sub_1B88B3944()
{
  return sub_1B88B3D18();
}

uint64_t (*sub_1B88B3958())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1B88B399C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 264))();
  *a2 = result;
  return result;
}

uint64_t sub_1B88B39CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 272);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1B88B39FC()
{
  return sub_1B88B43B4();
}

uint64_t sub_1B88B3A10()
{
  return sub_1B88B3A24();
}

uint64_t sub_1B88B3A24()
{
  uint64_t v0;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v0 + 512))();
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_1B88B3AA0(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v2 + 504))();
  swift_release();
  v4[5] = OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  *v4 = v2;
  swift_getKeyPath();
  v4[6] = sub_1B88A9A6C(&qword_1ED561C68, (uint64_t (*)(uint64_t))type metadata accessor for CalculateDocument, (uint64_t)&protocol conformance descriptor for CalculateDocument);
  sub_1B89128A0();
  swift_release();
  v4[7] = sub_1B88B3958();
  return sub_1B88B3B80;
}

void sub_1B88B3B80(_QWORD *a1)
{
  sub_1B88A3C14(a1);
}

uint64_t CalculateDocument.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  sub_1B8912834();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1B8896EE8(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1B89128AC();
  return v0;
}

uint64_t CalculateDocument.init()()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B8912834();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1B8896EE8(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1B89128AC();
  return v0;
}

uint64_t sub_1B88B3CF0()
{
  return sub_1B88B3A24();
}

uint64_t sub_1B88B3D04()
{
  return sub_1B88B3D18();
}

uint64_t sub_1B88B3D18()
{
  uint64_t v0;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v0 + 512))();
  return swift_release();
}

uint64_t CalculateDocument.__allocating_init(expressions:options:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CalculateDocument.init(expressions:options:)();
  return v0;
}

uint64_t CalculateDocument.init(expressions:options:)()
{
  uint64_t v0;
  unint64_t v1;
  void (*v2)(void);

  sub_1B8912834();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1B8896EE8(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1B89128AC();
  swift_getKeyPath();
  v2 = *(void (**)(void))(*(_QWORD *)v0 + 512);
  v2();
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v2();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B88B76F0(v1);
  return v0;
}

uint64_t CalculateDocument.__allocating_init(expressions:options:synchronous:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CalculateDocument.init(expressions:options:synchronous:)();
  return v0;
}

uint64_t CalculateDocument.init(expressions:options:synchronous:)()
{
  uint64_t v0;
  unint64_t v1;
  void (*v2)(void);

  sub_1B8912834();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1B8897224(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1B8896EE8(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1B89128AC();
  swift_getKeyPath();
  v2 = *(void (**)(void))(*(_QWORD *)v0 + 512);
  v2();
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v2();
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v2();
  swift_release();
  sub_1B88B76F0(v1);
  return v0;
}

uint64_t (*sub_1B88B4128(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions;
  a1[2] = OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions;
  *a1 = *(_QWORD *)(v1 + v2);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_1B88B416C;
}

uint64_t sub_1B88B416C(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = a1[1];
  v2 = a1[2];
  v4 = *(_QWORD *)(v3 + v2);
  *(_QWORD *)(v3 + v2) = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1B88B76F0(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B88B76F0(v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88B41C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 336))();
  *a2 = result;
  return result;
}

uint64_t sub_1B88B41F8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 344);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1B88B4228()
{
  return sub_1B88B423C();
}

uint64_t sub_1B88B423C()
{
  uint64_t v0;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v0 + 504))();
  swift_release();
  return swift_bridgeObjectRetain();
}

void (*sub_1B88B4284(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v2 + 504))();
  swift_release();
  v4[5] = OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  *v4 = v2;
  swift_getKeyPath();
  v4[6] = sub_1B88A9A6C(&qword_1ED561C68, (uint64_t (*)(uint64_t))type metadata accessor for CalculateDocument, (uint64_t)&protocol conformance descriptor for CalculateDocument);
  sub_1B89128A0();
  swift_release();
  v4[7] = sub_1B88B4128(v4);
  return sub_1B88B4364;
}

void sub_1B88B4364(_QWORD *a1)
{
  sub_1B88A3C14(a1);
}

BOOL sub_1B88B4370()
{
  uint64_t v0;

  return ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))() & 1) == 0;
}

uint64_t sub_1B88B4394()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t sub_1B88B43A0()
{
  return sub_1B88B43B4();
}

uint64_t sub_1B88B43B4()
{
  uint64_t v0;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v0 + 504))();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88B4420@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v3 + 504))();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B88B44A0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B88B44B4(a1, a2, a3, a4, (uint64_t)&unk_1B8917988, (uint64_t)sub_1B88BB564);
}

uint64_t sub_1B88B44B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  void (*v10)(uint64_t, uint64_t, _QWORD *, uint64_t);
  _QWORD v12[6];

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath();
  v12[2] = v8;
  v12[3] = v7;
  v10 = *(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t))(*(_QWORD *)v8 + 512);
  swift_bridgeObjectRetain();
  v10(KeyPath, a6, v12, MEMORY[0x1E0DEE9C0] + 8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B88B4540(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88B45A4()
{
  char *v0;
  char *v1;
  void (*v2)(void);
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t result;
  char *v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;

  v1 = v0;
  swift_getKeyPath();
  v2 = *(void (**)(void))(*(_QWORD *)v0 + 504);
  v2();
  swift_release();
  v3 = &v0[OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols];
  v4 = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    goto LABEL_17;
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 264))(v4);
  v5 = swift_bridgeObjectRetain();
  v6 = (char *)sub_1B88B91E4(v5);
  swift_bridgeObjectRelease();
  v42 = v6;
  sub_1B88B917C(&v42);
  swift_bridgeObjectRelease();
  v39 = *((_QWORD *)v42 + 2);
  if (!v39)
  {
LABEL_16:
    swift_release();
LABEL_17:
    v29 = sub_1B8912AE0();
    v31 = v30;
    swift_getKeyPath();
    v2();
    swift_release();
    v32 = *(_QWORD *)v3;
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      swift_bridgeObjectRetain();
      v33 = sub_1B8873F28(v29, v31);
      if ((v34 & 1) != 0)
        v35 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v33);
      else
        v35 = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = 0;
    }
    swift_bridgeObjectRelease();
    return v35;
  }
  v7 = 0;
  v8 = v42 + 40;
  v37 = v0;
  v38 = v2;
  while (1)
  {
    v40 = v7;
    v9 = sub_1B8912AE0();
    v11 = v10;
    swift_getKeyPath();
    v2();
    swift_release();
    v42 = v1;
    swift_getKeyPath();
    sub_1B88A9A6C(&qword_1ED561C68, (uint64_t (*)(uint64_t))type metadata accessor for CalculateDocument, (uint64_t)&protocol conformance descriptor for CalculateDocument);
    sub_1B89128A0();
    swift_release();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *(_QWORD *)v3;
    v41 = *(_QWORD **)v3;
    v14 = v3;
    *(_QWORD *)v3 = 0x8000000000000000;
    v16 = sub_1B8873F28(v9, v11);
    v17 = *(_QWORD *)(v13 + 16);
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      break;
    v20 = v15;
    if (*(_QWORD *)(v13 + 24) < v19)
    {
      sub_1B88AAB14(v19, isUniquelyReferenced_nonNull_native);
      v21 = sub_1B8873F28(v9, v11);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_26;
      v16 = v21;
      goto LABEL_10;
    }
    v23 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B88AB748();
LABEL_10:
      v23 = v40;
    }
    v24 = v23 + 1;
    if ((v20 & 1) != 0)
    {
      *(_QWORD *)(v41[7] + 8 * v16) = v24;
      v7 = v24;
    }
    else
    {
      v41[(v16 >> 6) + 8] |= 1 << v16;
      v25 = (uint64_t *)(v41[6] + 16 * v16);
      *v25 = v9;
      v25[1] = v11;
      *(_QWORD *)(v41[7] + 8 * v16) = v24;
      v26 = v41[2];
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        goto LABEL_25;
      v41[2] = v28;
      v7 = v24;
      swift_bridgeObjectRetain();
    }
    v8 += 16;
    v3 = v14;
    *(_QWORD *)v14 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v1 = v37;
    v42 = v37;
    swift_getKeyPath();
    sub_1B8912894();
    swift_release();
    v2 = v38;
    if (v39 == v7)
      goto LABEL_16;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1B8913080();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1B88B4988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1B8912DD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8912DC8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1B89128DC();
  MEMORY[0x1E0C80A78](v6);
  sub_1B88796EC(0, qword_1ED562218);
  sub_1B89128D0();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1B88A9A6C(&qword_1ED562210, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED562200);
  sub_1B887A014(&qword_1ED562208, &qword_1ED562200, MEMORY[0x1E0DEAF38]);
  sub_1B8912E7C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1B8912DF8();
  qword_1ED563B98 = result;
  return result;
}

uint64_t sub_1B88B4B5C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 456))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1B88B4B90(uint64_t a1, uint64_t *a2)
{
  return sub_1B88B4BA4(a1, a2);
}

uint64_t sub_1B88B4BA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v2 + 512))();
  return swift_release();
}

uint64_t sub_1B88B4C18()
{
  return sub_1B88B4C2C((uint64_t)&unk_1B8917960, &OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating);
}

uint64_t sub_1B88B4C2C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  (*(void (**)(void))(*(_QWORD *)v2 + 504))();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1B88B4C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  int64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  unsigned __int8 v53;
  __CFString *v54;
  int64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t (*v79)(void);
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int64_t v87;
  unint64_t v88;
  unint64_t v89;
  int64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  BOOL v103;
  uint64_t v104;
  _QWORD *v105;
  BOOL v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  int64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  unint64_t v117;
  unint64_t v118;
  int64_t v119;
  unint64_t v120;
  int64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  void *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  _QWORD *v143;
  id v144;
  char v145;
  unint64_t v146;
  uint64_t v147;
  _BOOL8 v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __CFString *v158;
  char v159;
  uint64_t v160;
  __CFString *v161;
  char v162;
  char v163;
  __CFString *v164;
  char v165;
  void *v166;
  void *v167;
  uint64_t v168;
  void *v169;
  id v170;
  id v171;
  id *v172;
  void (*v173)(double);
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void (*v187)(_QWORD *);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  void *v192;
  void *v193;
  id v194;
  id v195;
  id v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  uint64_t v201;
  void *v202;
  _DWORD *v203;
  uint64_t *v204;
  char v205;
  uint64_t v206;
  unint64_t v207;
  char v208;
  void *v209;
  id v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  _OWORD *v217;
  uint64_t (*v218)();
  NSObject *v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v225;
  uint64_t (*v226)();
  uint64_t v227;
  _OWORD *v228;
  _QWORD *v229;
  _QWORD *v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  _DWORD *v245;
  uint64_t v246;
  __CFString *v247;
  uint64_t v248;
  __CFString *v249;
  uint64_t v250;
  uint64_t v251;
  __CFString *v252;
  uint64_t v253;
  void *v254;
  char *v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t (*v258)(uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t (*v272)(uint64_t, uint64_t);
  uint64_t *v273;
  char *v274;
  int64_t v275;
  int64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  char v282;
  int64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t v286;
  __int128 v287;
  uint64_t (*v288)(uint64_t);
  void *v289;
  uint64_t (*v290)();
  uint64_t v291;
  _OWORD v292[2];
  uint64_t aBlock;
  uint64_t v294;
  uint64_t (*v295)(uint64_t);
  void *v296;
  uint64_t (*v297)();
  uint64_t v298;
  uint64_t v299;
  id v300;
  id v301;
  char v302;
  _BYTE v303[15];
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char v307;
  uint64_t v308;

  v1 = v0;
  v308 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621D0);
  MEMORY[0x1E0C80A78](v2);
  v277 = (uint64_t)&v225 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B8912840();
  v279 = *(_QWORD *)(v4 - 8);
  v280 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v248 = (uint64_t)&v225 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v274 = (char *)&v225 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v256 = (uint64_t)&v225 - v10;
  MEMORY[0x1E0C80A78](v9);
  v255 = (char *)&v225 - v11;
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t *)(v12 + 16);
  v15 = swift_allocObject();
  v16 = v13;
  v17 = (_QWORD *)v15;
  *(_QWORD *)(v15 + 16) = sub_1B88B36A0(v16);
  v273 = v17 + 2;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v1;
  v18[3] = v12;
  v18[4] = v17;
  v19 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  swift_retain();
  v236 = v19;
  v20 = objc_msgSend(v19, sel_isMainThread);
  v229 = v18;
  v230 = v17;
  v231 = v12;
  v228 = (_OWORD *)v1;
  if (v20)
  {
    sub_1B88B683C(v1, v12, v17);
    v226 = 0;
    v227 = 0;
  }
  else
  {
    sub_1B88796EC(0, qword_1ED562218);
    v21 = sub_1B8912DE0();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1B88BABFC;
    *(_QWORD *)(v22 + 24) = v18;
    v23 = swift_allocObject();
    v226 = sub_1B88BAC2C;
    v227 = v22;
    *(_QWORD *)(v23 + 16) = sub_1B88BAC2C;
    *(_QWORD *)(v23 + 24) = v22;
    v297 = sub_1B88BAC2C;
    v298 = v23;
    aBlock = MEMORY[0x1E0C809B0];
    v294 = 1107296256;
    v295 = sub_1B88B6C00;
    v296 = &block_descriptor_3;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v21, v24);

    _Block_release(v24);
    LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v21 & 1) != 0)
      goto LABEL_194;
  }
  v285 = sub_1B889710C(MEMORY[0x1E0DEE9D8]);
  v283 = MEMORY[0x1E0DEE9E8];
  v284 = MEMORY[0x1E0DEE9E8];
  swift_beginAccess();
  v25 = *v14;
  if ((unint64_t)*v14 >> 62)
    goto LABEL_187;
  v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v27 = (uint64_t)v255;
  if (v26)
  {
LABEL_6:
    v28 = 0;
    v263 = v25 & 0xC000000000000001;
    v250 = v25 + 32;
    v251 = v25 & 0xFFFFFFFFFFFFFF8;
    v247 = CFSTR("CalculateKeyVariables");
    v245 = v303;
    v249 = CFSTR("CalculateKeyAllowEqualSign");
    v244 = MEMORY[0x1E0DEE9B8] + 8;
    v246 = v25;
    v261 = v26;
    do
    {
      if (v263)
      {
        v29 = MEMORY[0x1BCCB4394](v28, v25);
        v30 = __OFADD__(v28, 1);
        v31 = v28 + 1;
        if (v30)
          goto LABEL_179;
      }
      else
      {
        if (v28 >= *(_QWORD *)(v251 + 16))
          goto LABEL_181;
        v29 = swift_retain();
        v30 = __OFADD__(v28, 1);
        v31 = v28 + 1;
        if (v30)
          goto LABEL_179;
      }
      v269 = v31;
      v270 = v29;
      CalculateExpression.id.getter(v27);
      v32 = v273;
      swift_beginAccess();
      v33 = *v32;
      if (*(_QWORD *)(v33 + 16))
      {
        v34 = sub_1B887C468(v27);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(v33 + 56) + 120 * v34;
          v37 = *(_QWORD *)(v36 + 8);
          v262 = *(_QWORD *)v36;
          v38 = *(uint64_t (**)(uint64_t))(v36 + 16);
          v39 = *(_QWORD *)(v36 + 24);
          v40 = *(_QWORD *)(v36 + 40);
          v278 = *(_QWORD *)(v36 + 32);
          v42 = *(_QWORD *)(v36 + 48);
          v41 = *(void **)(v36 + 56);
          v43 = *(void **)(v36 + 64);
          v44 = *(_BYTE *)(v36 + 72);
          v45 = *(_QWORD *)(v36 + 88);
          v253 = *(_QWORD *)(v36 + 80);
          v46 = *(_QWORD *)(v36 + 104);
          v266 = *(_QWORD *)(v36 + 96);
          LOBYTE(v36) = *(_BYTE *)(v36 + 112);
          v282 = v44;
          v281 = v36;
          swift_endAccess();
          v267 = v37;
          swift_bridgeObjectRetain();
          v258 = v38;
          v47 = v278;
          swift_retain();
          v276 = v39;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v48 = v40;
          swift_retain();
          v265 = v42;
          swift_retain();
          v268 = v41;
          v49 = v41;
          v254 = v43;
          v50 = v43;
          v260 = v46;
          swift_bridgeObjectRetain();
          v51 = *(void (**)(_QWORD, _QWORD))(v279 + 8);
          v259 = v45;
          swift_bridgeObjectRetain();
          v272 = (uint64_t (*)(uint64_t, uint64_t))v51;
          v51(v255, v280);
          v52 = v285;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v53 = sub_1B88A9778(v47, v52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v53 & 1) == 0)
          {

            v282 = 1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v268 = 0;
            v47 = v52;
          }
          v289 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6360);
          *(_QWORD *)&v287 = v47;
          sub_1B8879E64(&v287, v292);
          v54 = v247;
          swift_bridgeObjectRetain();
          v55 = v276;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v286 = v55;
          sub_1B88AB5C4(v292, v54, isUniquelyReferenced_nonNull_native);
          v25 = v286;

          swift_bridgeObjectRelease();
          v57 = v266;
          v264 = (void *)v25;
          v252 = v54;
          if ((v53 & (v48 != 0)) == 1)
          {
            swift_retain();
          }
          else
          {
            type metadata accessor for CalculateExpression.PlainExpression();
            v58 = v270;
            swift_retain();
            swift_bridgeObjectRetain();
            v59 = CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v58, v25);
            swift_retain_n();
            swift_release();
            type metadata accessor for CalculateExpression.RichExpression();
            v25 = sub_1B88660C8(v59);
            v60 = swift_release();
            v57 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 416))(v60);
            v62 = v61;
            v63 = swift_bridgeObjectRelease();
            v64 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 456))(v63);
            swift_release();
            v281 = v64 & 1;
            v48 = v59;
            v265 = v25;
            v260 = v62;
          }
          v65 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 280);
          v66 = v65(0);
          if (v66)
          {
            v67 = *(_BYTE *)(v66 + 48);
            swift_release();
            LOBYTE(v287) = v67;
            LOBYTE(v292[0]) = 17;
            sub_1B885DDA0();
            v68 = sub_1B8912AA4() & 1;
          }
          else
          {
            v68 = 0;
          }
          v69 = v65(v68);
          v278 = v47;
          if (!v69)
            goto LABEL_36;
          v70 = *(_BYTE *)(v69 + 48);
          swift_release();
          LOBYTE(v287) = v70;
          LOBYTE(v292[0]) = 14;
          sub_1B885DDA0();
          if ((sub_1B8912AA4() & 1) == 0)
            goto LABEL_36;
          v25 = v68 + 1;
          v71 = v65(v68 + 1);
          if (v71)
          {
            v72 = *(_BYTE *)(v71 + 48);
            swift_release();
            LOBYTE(v287) = v72;
            LOBYTE(v292[0]) = 17;
            if ((sub_1B8912AA4() & 1) != 0)
              v25 = v68 | 2;
          }
          v73 = v65(v25);
          if (v73
            && (v74 = *(_BYTE *)(v73 + 48),
                swift_release(),
                LOBYTE(v287) = v74,
                LOBYTE(v292[0]) = 35,
                (sub_1B8912AA4() & 1) != 0))
          {
            v75 = v25 + 1;
            v76 = v65(v25 + 1);
            if (v76)
            {
              v77 = *(_BYTE *)(v76 + 48);
              swift_release();
              LOBYTE(v287) = v77;
              LOBYTE(v292[0]) = 17;
              if ((sub_1B8912AA4() & 1) != 0)
                v25 += 2;
              else
                ++v25;
            }
            else
            {
              ++v25;
            }
            v211 = (*(uint64_t (**)(void))(*(_QWORD *)v48 + 256))();
            if (v211 >> 62)
              v212 = sub_1B8912FD8();
            else
              v212 = *(_QWORD *)((v211 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRelease();
            if (v25 >= v212)
              v78 = 0;
            else
              v78 = v75;
          }
          else
          {
LABEL_36:
            v78 = 0;
          }
          v79 = *(uint64_t (**)(void))(*(_QWORD *)v48 + 256);
          v80 = v79();
          if (v80 >> 62)
            v81 = sub_1B8912FD8();
          else
            v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
          v82 = swift_bridgeObjectRelease();
          if (v81 < v78)
            goto LABEL_182;
          if (v78 != v81)
          {
            if (v78 >= v81)
              goto LABEL_184;
            while (2)
            {
              v175 = ((uint64_t (*)(uint64_t))v79)(v82);
              if ((v175 & 0xC000000000000001) != 0)
              {
                v25 = MEMORY[0x1BCCB4394](v78, v175);
              }
              else
              {
                if (v78 < 0)
                {
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
                  goto LABEL_185;
                }
                if ((unint64_t)v78 >= *(_QWORD *)((v175 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_177;
                v25 = *(_QWORD *)(v175 + 8 * v78 + 32);
                swift_retain();
              }
              swift_bridgeObjectRelease();
              LOBYTE(v287) = *(_BYTE *)(v25 + 48);
              LOBYTE(v292[0]) = 14;
              if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v287, (unsigned __int8 *)v292))goto LABEL_130;
              (*(void (**)(void))(*(_QWORD *)v25 + 136))();
              v176 = sub_1B8912AE0();
              v178 = v177;
              swift_bridgeObjectRelease();
              v179 = v285;
              if (*(_QWORD *)(v285 + 16) && (v180 = sub_1B8873F28(v176, v178), (v181 & 1) != 0))
              {
                v182 = *(_QWORD *)(*(_QWORD *)(v179 + 56) + 8 * v180);
                swift_retain();
                v183 = swift_bridgeObjectRelease();
                v184 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v182 + 104))(v183);
                swift_release();
                if (v184)
                {
                  v185 = v256;
                  CalculateExpression.id.getter(v256);
                  swift_beginAccess();
                  v187 = sub_1B88B6C20(&v287);
                  if (*(_QWORD *)(v186 + 8))
                  {
                    v188 = *(_QWORD *)(v186 + 80);
                    v30 = __OFADD__(v188, 1);
                    v189 = v188 + 1;
                    if (v30)
                      goto LABEL_183;
                    *(_QWORD *)(v186 + 80) = v189;
                    ((void (*)(__int128 *, _QWORD))v187)(&v287, 0);
                    swift_endAccess();
                    swift_release();
                    swift_release();
                    v190 = v256;
                  }
                  else
                  {
                    ((void (*)(__int128 *, _QWORD))v187)(&v287, 0);
                    swift_endAccess();
                    swift_release();
                    swift_release();
                    v190 = v185;
                  }
                  v82 = v272(v190, v280);
                  goto LABEL_131;
                }
LABEL_130:
                v82 = swift_release();
              }
              else
              {
                swift_release();
                v82 = swift_bridgeObjectRelease();
              }
LABEL_131:
              if (v81 == ++v78)
                break;
              continue;
            }
          }
          v266 = v57;
          v271 = v48;
          if ((v282 & 1) != 0)
            goto LABEL_78;
          v83 = *(_QWORD *)(v283 + 56);
          v257 = (_QWORD *)(v283 + 56);
          v84 = 1 << *(_BYTE *)(v283 + 32);
          if (v84 < 64)
            v85 = ~(-1 << v84);
          else
            v85 = -1;
          v86 = v85 & v83;
          v275 = (unint64_t)(v84 + 63) >> 6;
          v276 = v283;
          swift_bridgeObjectRetain();
          v87 = 0;
          while (1)
          {
            if (v86)
            {
              v88 = __clz(__rbit64(v86));
              v86 &= v86 - 1;
              v89 = v88 | (v87 << 6);
            }
            else
            {
              v90 = v87 + 1;
              if (__OFADD__(v87, 1))
                goto LABEL_180;
              if (v90 >= v275)
              {
LABEL_163:
                swift_release();
                v198 = v260;
                if (!v260)
                {
                  v200 = v254;
                  v170 = v268;
                  goto LABEL_155;
                }
                swift_bridgeObjectRetain();
                v199 = v266;
                sub_1B88B9E9C(v266, v198);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v200 = v254;
                v170 = v268;
LABEL_156:
                v201 = v248;
                CalculateExpression.id.getter(v248);
                aBlock = v262;
                v294 = v267;
                v295 = v258;
                v296 = v264;
                v297 = (uint64_t (*)())v278;
                v298 = v271;
                v299 = v265;
                v300 = v170;
                v268 = v170;
                v202 = v200;
                v301 = v200;
                v302 = v282;
                v203 = v245;
                *v245 = v286;
                *(_DWORD *)((char *)v203 + 3) = *(_DWORD *)((char *)&v286 + 3);
                *(_QWORD *)&v303[7] = v253;
                v304 = v259;
                v305 = v199;
                v306 = v198;
                v307 = v281;
                v204 = v273;
                swift_beginAccess();
                sub_1B88BACCC((uint64_t)&aBlock);
                v205 = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)&v292[0] = *v204;
                *v204 = 0x8000000000000000;
                sub_1B88B88D4((uint64_t)&aBlock, v201, v205);
                *v204 = *(_QWORD *)&v292[0];
                swift_bridgeObjectRelease();
                v272(v201, v280);
                swift_endAccess();
                if (v198)
                {
                  swift_bridgeObjectRetain_n();
                  sub_1B8874AF0((uint64_t *)&v287, v199, v198);
                  swift_bridgeObjectRelease();
                  v25 = v246;
                  if ((v281 & 1) != 0)
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6260);
                    swift_retain();
                    v206 = sub_1B887FC64();
                    v207 = v285;
                    v208 = swift_isUniquelyReferenced_nonNull_native();
                    *(_QWORD *)&v287 = v207;
                    sub_1B88B8A48(v206, v199, v198, v208);
                    v285 = v287;
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_1B88B7D38(v199, v198);
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_release();
                    swift_release();
                  }
                  v27 = (uint64_t)v255;
                }
                else
                {
                  swift_release();
                  swift_release();
                  v27 = (uint64_t)v255;
                  v25 = v246;
                }
                v209 = v202;
                v210 = v268;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_8;
              }
              v91 = v257[v90];
              ++v87;
              if (!v91)
              {
                v87 = v90 + 1;
                if (v90 + 1 >= v275)
                  goto LABEL_163;
                v91 = v257[v87];
                if (!v91)
                {
                  v87 = v90 + 2;
                  if (v90 + 2 >= v275)
                    goto LABEL_163;
                  v91 = v257[v87];
                  if (!v91)
                  {
                    v92 = v90 + 3;
                    if (v92 >= v275)
                      goto LABEL_163;
                    v91 = v257[v92];
                    if (!v91)
                    {
                      while (1)
                      {
                        v87 = v92 + 1;
                        if (__OFADD__(v92, 1))
                          break;
                        if (v87 >= v275)
                          goto LABEL_163;
                        v91 = v257[v87];
                        ++v92;
                        if (v91)
                          goto LABEL_62;
                      }
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
LABEL_187:
                      swift_bridgeObjectRetain_n();
                      v26 = sub_1B8912FD8();
                      swift_bridgeObjectRelease();
                      v27 = (uint64_t)v255;
                      if (!v26)
                        goto LABEL_188;
                      goto LABEL_6;
                    }
                    v87 = v92;
                  }
                }
              }
LABEL_62:
              v86 = (v91 - 1) & v91;
              v89 = __clz(__rbit64(v91)) + (v87 << 6);
            }
            v93 = (uint64_t *)(*(_QWORD *)(v276 + 48) + 16 * v89);
            v94 = *v93;
            v25 = v93[1];
            v95 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v271 + 424);
            swift_bridgeObjectRetain();
            v96 = swift_retain();
            v97 = v95(v96);
            if (*(_QWORD *)(v97 + 16))
            {
              sub_1B89130A4();
              sub_1B8912B10();
              v98 = sub_1B89130BC();
              v99 = -1 << *(_BYTE *)(v97 + 32);
              v100 = v98 & ~v99;
              if (((*(_QWORD *)(v97 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFF8)) >> v100) & 1) != 0)
              {
                v101 = *(_QWORD *)(v97 + 48);
                v102 = (_QWORD *)(v101 + 16 * v100);
                v103 = *v102 == v94 && v102[1] == v25;
                if (v103 || (sub_1B8913050() & 1) != 0)
                {
LABEL_77:
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  v282 = 1;
LABEL_78:
                  v107 = (_QWORD *)sub_1B8896FF8(MEMORY[0x1E0DEE9D8]);
                  v108 = v278;
                  v109 = *(_QWORD *)(v278 + 64);
                  v275 = v278 + 64;
                  v110 = 1 << *(_BYTE *)(v278 + 32);
                  if (v110 < 64)
                    v111 = ~(-1 << v110);
                  else
                    v111 = -1;
                  v112 = v111 & v109;
                  v276 = (unint64_t)(v110 + 63) >> 6;
                  swift_bridgeObjectRetain();
                  v113 = 0;
                  while (2)
                  {
                    while (2)
                    {
                      if (v112)
                      {
                        v117 = __clz(__rbit64(v112));
                        v112 &= v112 - 1;
                        v118 = v117 | (v113 << 6);
                      }
                      else
                      {
                        v119 = v113 + 1;
                        if (__OFADD__(v113, 1))
                        {
                          __break(1u);
                          goto LABEL_176;
                        }
                        if (v119 >= v276)
                          goto LABEL_122;
                        v120 = *(_QWORD *)(v275 + 8 * v119);
                        ++v113;
                        if (!v120)
                        {
                          v113 = v119 + 1;
                          if (v119 + 1 >= v276)
                            goto LABEL_122;
                          v120 = *(_QWORD *)(v275 + 8 * v113);
                          if (!v120)
                          {
                            v113 = v119 + 2;
                            if (v119 + 2 >= v276)
                              goto LABEL_122;
                            v120 = *(_QWORD *)(v275 + 8 * v113);
                            if (!v120)
                            {
                              v121 = v119 + 3;
                              if (v121 >= v276)
                              {
LABEL_122:
                                swift_release();
                                v289 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED561B28);
                                *(_QWORD *)&v287 = v107;
                                sub_1B8879E64(&v287, v292);
                                swift_bridgeObjectRetain();
                                v157 = (uint64_t)v264;
                                swift_bridgeObjectRetain();
                                v158 = v252;
                                v159 = swift_isUniquelyReferenced_nonNull_native();
                                v286 = v157;
                                sub_1B88AB5C4(v292, v158, v159);
                                v160 = v286;

                                swift_bridgeObjectRelease();
                                if (!*(_QWORD *)(v160 + 16)
                                  || (swift_bridgeObjectRetain(),
                                      v161 = v249,
                                      sub_1B88A9AAC((uint64_t)v161),
                                      v163 = v162,
                                      swift_bridgeObjectRelease(),
                                      v161,
                                      (v163 & 1) == 0))
                                {
                                  v289 = (void *)MEMORY[0x1E0DEAFA0];
                                  LOBYTE(v287) = 1;
                                  sub_1B8879E64(&v287, v292);
                                  v164 = v249;
                                  v165 = swift_isUniquelyReferenced_nonNull_native();
                                  v286 = v160;
                                  sub_1B88AB5C4(v292, v164, v165);
                                  v160 = v286;

                                  swift_bridgeObjectRelease();
                                }
                                v166 = v254;
                                LOBYTE(v292[0]) = 0;
                                v167 = (void *)sub_1B8912AB0();
                                v168 = swift_bridgeObjectRetain();
                                sub_1B88B6D04(v168);
                                swift_bridgeObjectRelease();
                                v169 = (void *)sub_1B8912A14();
                                swift_bridgeObjectRelease();
                                *(_QWORD *)&v287 = 0;
                                v170 = CalculateEvaluateError((uint64_t)v167, (uint64_t)v169, (uint64_t)&v287, (uint64_t)v292);

                                v171 = (id)v287;
                                if (LOBYTE(v292[0]) == 1)
                                {
                                  type metadata accessor for StocksKitCurrencyCache();
                                  if (static StocksKitCurrencyCache.isEnabled.getter())
                                  {
                                    v172 = (id *)sub_1B8884628();
                                    swift_beginAccess();
                                    v173 = *(void (**)(double))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v172)
                                                                         + 0x60);
                                    v174 = *v172;
                                    v173(6.0);
                                  }
                                  else
                                  {
                                    if (objc_msgSend(v236, sel_isMainThread))
                                    {
                                      v191 = objc_msgSend((id)objc_opt_self(), sel_shared);
                                      objc_msgSend(v191, sel_setTimeout_, 6.0);

                                    }
                                    v174 = objc_msgSend((id)objc_opt_self(), sel_shared);
                                    objc_msgSend(v174, sel_refreshIfNeeded);
                                  }

                                  v192 = (void *)sub_1B8912AB0();
                                  swift_bridgeObjectRelease();
                                  sub_1B88B6D04(v160);
                                  swift_bridgeObjectRelease();
                                  v193 = (void *)sub_1B8912A14();
                                  swift_bridgeObjectRelease();
                                  *(_QWORD *)&v287 = v171;
                                  v194 = CalculateEvaluateError((uint64_t)v192, (uint64_t)v193, (uint64_t)&v287, (uint64_t)v292);

                                  v195 = (id)v287;
                                  v170 = v194;
                                  v171 = v195;
                                }
                                else
                                {
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                }
                                v196 = v170;

                                v197 = v171;
                                v282 = 0;
                                v198 = v260;
                                if (v260)
                                {
                                  swift_bridgeObjectRetain();
                                  v199 = v266;
                                  sub_1B8874AF0((uint64_t *)&v287, v266, v198);

                                  swift_bridgeObjectRelease();
                                  v200 = v171;
                                  goto LABEL_156;
                                }

                                v200 = v171;
LABEL_155:
                                v199 = v266;
                                goto LABEL_156;
                              }
                              v120 = *(_QWORD *)(v275 + 8 * v121);
                              if (!v120)
                              {
                                while (1)
                                {
                                  v113 = v121 + 1;
                                  if (__OFADD__(v121, 1))
                                    goto LABEL_178;
                                  if (v113 >= v276)
                                    goto LABEL_122;
                                  v120 = *(_QWORD *)(v275 + 8 * v113);
                                  ++v121;
                                  if (v120)
                                    goto LABEL_101;
                                }
                              }
                              v113 = v121;
                            }
                          }
                        }
LABEL_101:
                        v112 = (v120 - 1) & v120;
                        v118 = __clz(__rbit64(v120)) + (v113 << 6);
                      }
                      v122 = (uint64_t *)(*(_QWORD *)(v108 + 48) + 16 * v118);
                      v25 = *v122;
                      v123 = v122[1];
                      v124 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v108 + 56) + 8 * v118) + 104);
                      swift_bridgeObjectRetain();
                      v125 = swift_retain();
                      if (!v124(v125))
                      {
                        v114 = v277;
                        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 + 56))(v277, 1, 1, v280);
LABEL_83:
                        sub_1B887D11C(v114);
LABEL_84:
                        swift_bridgeObjectRetain();
                        v25 = sub_1B8873F28(v25, v123);
                        v116 = v115;
                        swift_bridgeObjectRelease();
                        v108 = v278;
                        if ((v116 & 1) != 0)
                        {
                          v134 = swift_isUniquelyReferenced_nonNull_native();
                          *(_QWORD *)&v287 = v107;
                          if ((v134 & 1) == 0)
                          {
                            sub_1B88AB8F4();
                            v107 = (_QWORD *)v287;
                          }
                          swift_bridgeObjectRelease();
                          v135 = *(void **)(v107[7] + 8 * v25);
                          sub_1B8888B08(v25, (uint64_t)v107);
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();

                        }
                        else
                        {
                          swift_release();
                          swift_bridgeObjectRelease();
                        }
                        continue;
                      }
                      break;
                    }
                    v114 = v277;
                    CalculateExpression.id.getter(v277);
                    swift_release();
                    v127 = v279;
                    v126 = v280;
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v279 + 56))(v114, 0, 1, v280);
                    v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
                    v129 = (uint64_t)v274;
                    if (v128(v114, 1, v126) == 1)
                      goto LABEL_83;
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 32))(v129, v114, v280);
                    v130 = v273;
                    swift_beginAccess();
                    v131 = *v130;
                    if (!*(_QWORD *)(v131 + 16) || (v132 = sub_1B887C468(v129), (v133 & 1) == 0))
                    {
                      swift_endAccess();
                      v272(v129, v280);
                      goto LABEL_84;
                    }
                    v136 = (_QWORD *)(*(_QWORD *)(v131 + 56) + 120 * v132);
                    v137 = v136[1];
                    v138 = v136[2];
                    v139 = v136[3];
                    v240 = v136[4];
                    v241 = v139;
                    v140 = v136[5];
                    v238 = v136[6];
                    v239 = v140;
                    v257 = (_QWORD *)v136[7];
                    v141 = (void *)v136[8];
                    v237 = v136[11];
                    v142 = v136[13];
                    v242 = v141;
                    v243 = v142;
                    swift_endAccess();
                    v234 = v137;
                    swift_bridgeObjectRetain();
                    v233 = v138;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    v143 = v257;
                    v144 = v242;
                    swift_bridgeObjectRetain();
                    v232 = v143;
                    swift_bridgeObjectRetain();
                    v235 = swift_isUniquelyReferenced_nonNull_native();
                    *(_QWORD *)&v287 = v107;
                    v146 = sub_1B8873F28(v25, v123);
                    v147 = v107[2];
                    v148 = (v145 & 1) == 0;
                    v149 = v147 + v148;
                    if (__OFADD__(v147, v148))
                      goto LABEL_186;
                    if (v107[3] >= v149)
                    {
                      if ((v235 & 1) == 0)
                      {
                        v150 = v145;
                        sub_1B88AB8F4();
                        goto LABEL_114;
                      }
                    }
                    else
                    {
                      v150 = v145;
                      sub_1B88AAE1C(v149, v235);
                      v151 = sub_1B8873F28(v25, v123);
                      if ((v150 & 1) != (v152 & 1))
                      {
                        result = sub_1B8913080();
                        __break(1u);
                        return result;
                      }
                      v146 = v151;
LABEL_114:
                      v145 = v150;
                    }
                    v107 = (_QWORD *)v287;
                    if ((v145 & 1) != 0)
                    {
                      v153 = *(_QWORD *)(v287 + 56);
                      v25 = 8 * v146;

                      *(_QWORD *)(v153 + 8 * v146) = v257;
                    }
                    else
                    {
                      *(_QWORD *)(v287 + 8 * (v146 >> 6) + 64) |= 1 << v146;
                      v154 = (uint64_t *)(v107[6] + 16 * v146);
                      *v154 = v25;
                      v154[1] = v123;
                      *(_QWORD *)(v107[7] + 8 * v146) = v257;
                      v155 = v107[2];
                      v30 = __OFADD__(v155, 1);
                      v156 = v155 + 1;
                      if (v30)
                      {
                        __break(1u);
LABEL_194:
                        __break(1u);
LABEL_195:
                        __break(1u);
                      }
                      v107[2] = v156;
                      swift_bridgeObjectRetain();
                    }

                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v272(v129, v280);
                    v108 = v278;
                    continue;
                  }
                }
                v104 = ~v99;
                while (1)
                {
                  v100 = (v100 + 1) & v104;
                  if (((*(_QWORD *)(v97 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFF8)) >> v100) & 1) == 0)
                    break;
                  v105 = (_QWORD *)(v101 + 16 * v100);
                  v106 = *v105 == v94 && v105[1] == v25;
                  if (v106 || (sub_1B8913050() & 1) != 0)
                    goto LABEL_77;
                }
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
      }
      swift_endAccess();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v27, v280);
LABEL_8:
      v28 = v269;
    }
    while (v269 != v261);
    swift_bridgeObjectRelease();
    v213 = v284;
  }
  else
  {
LABEL_188:
    swift_bridgeObjectRelease();
    v213 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  v214 = (_QWORD *)swift_allocObject();
  v215 = (uint64_t)v230;
  v216 = v231;
  v214[2] = v231;
  v214[3] = v215;
  v217 = v228;
  v214[4] = v228;
  v214[5] = v213;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (objc_msgSend(v236, sel_isMainThread))
  {
    sub_1B88B70C8(v216, v215, v217, v213);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v218 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1B88796EC(0, qword_1ED562218);
    v219 = sub_1B8912DE0();
    v220 = swift_allocObject();
    *(_QWORD *)(v220 + 16) = sub_1B88BACB0;
    *(_QWORD *)(v220 + 24) = v214;
    v221 = swift_allocObject();
    v218 = sub_1B88BB548;
    *(_QWORD *)(v221 + 16) = sub_1B88BB548;
    *(_QWORD *)(v221 + 24) = v220;
    v290 = sub_1B88BB548;
    v291 = v221;
    *(_QWORD *)&v287 = MEMORY[0x1E0C809B0];
    *((_QWORD *)&v287 + 1) = 1107296256;
    v288 = sub_1B88B6C00;
    v289 = &block_descriptor_40;
    v222 = _Block_copy(&v287);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v219, v222);

    swift_release();
    swift_release();
    _Block_release(v222);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      goto LABEL_195;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B8896A0C((uint64_t)v226);
  return sub_1B8896A0C((uint64_t)v218);
}

uint64_t sub_1B88B683C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  id *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _OWORD v46[7];
  char v47;

  v44 = sub_1B8912840();
  v6 = *(_QWORD *)(v44 - 8);
  v7 = MEMORY[0x1E0C80A78](v44);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a2 + 16);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 360))(v7);
  if ((v11 & 1) != 0)
  {
    v12 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 368))();
    v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 344))(v12);
  }
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 336))(v11);
  swift_beginAccess();
  *v10 = v13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = *v10;
  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_26;
  v15 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
    return swift_bridgeObjectRelease();
LABEL_5:
  if (v15 >= 1)
  {
    v16 = 0;
    a3 += 2;
    v43 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v42 = isUniquelyReferenced_nonNull_native;
    v41 = v15;
    while (1)
    {
      if (v43)
      {
        v17 = MEMORY[0x1BCCB4394](v16, isUniquelyReferenced_nonNull_native);
      }
      else
      {
        v17 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v16 + 32);
        swift_retain();
      }
      CalculateExpression.id.getter((uint64_t)v9);
      v18 = swift_retain();
      sub_1B88BA800(v18, (uint64_t)v46);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = (_QWORD *)*a3;
      v19 = v45;
      *a3 = 0x8000000000000000;
      v21 = sub_1B887C468((uint64_t)v9);
      v22 = v19[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        v15 = sub_1B8912FD8();
        if (!v15)
          return swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      v25 = v20;
      if (v19[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v20 & 1) != 0)
            goto LABEL_18;
        }
        else
        {
          sub_1B88B8C68();
          v19 = v45;
          if ((v25 & 1) != 0)
            goto LABEL_18;
        }
      }
      else
      {
        sub_1B88B7E04(v24, isUniquelyReferenced_nonNull_native);
        v19 = v45;
        v26 = sub_1B887C468((uint64_t)v9);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_29;
        v21 = v26;
        if ((v25 & 1) != 0)
        {
LABEL_18:
          sub_1B88BB430((uint64_t)v46, v19[7] + 120 * v21);
          goto LABEL_22;
        }
      }
      v19[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v19[6] + *(_QWORD *)(v6 + 72) * v21, v9, v44);
      v28 = v19[7] + 120 * v21;
      v29 = v46[0];
      v30 = v46[1];
      v31 = v46[3];
      *(_OWORD *)(v28 + 32) = v46[2];
      *(_OWORD *)(v28 + 48) = v31;
      *(_OWORD *)v28 = v29;
      *(_OWORD *)(v28 + 16) = v30;
      v32 = v46[4];
      v33 = v46[5];
      v34 = v46[6];
      *(_BYTE *)(v28 + 112) = v47;
      *(_OWORD *)(v28 + 80) = v33;
      *(_OWORD *)(v28 + 96) = v34;
      *(_OWORD *)(v28 + 64) = v32;
      v35 = v19[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_25;
      v19[2] = v37;
LABEL_22:
      *a3 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v44);
      swift_endAccess();
      v38 = (id *)(v17 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest);
      swift_beginAccess();
      if (*v38)
        objc_msgSend(*v38, sel_cancel);
      ++v16;
      sub_1B8898370();
      swift_release();
      isUniquelyReferenced_nonNull_native = v42;
      if (v41 == v16)
        return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_29:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B88B6C00(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void (*sub_1B88B6C20(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_1B8912840();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_1B88B9D70(v2, (uint64_t)v5);
  return sub_1B88B6CB0;
}

void sub_1B88B6CB0(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_1B88B6D04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6038);
    v2 = sub_1B8913008();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_1B8879724(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(_QWORD *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    v38 = v40;
    *(_QWORD *)&v36[0] = v17;
    type metadata accessor for CalculateKey();
    v18 = v17;
    swift_dynamicCast();
    sub_1B8879E64((_OWORD *)((char *)v37 + 8), v31);
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1B8879E64(v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1B8879E64(v35, v36);
    sub_1B8879E64(v36, &v32);
    result = sub_1B8912EDC();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1B8879E64(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1B8879F24();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1B88B70C8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t (*)());
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD v34[2];
  _OWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[7];
  char v41;

  v34[1] = a4;
  v39 = sub_1B8912840();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  if (v9 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v10 = sub_1B8912FD8();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v35 = a3;
  v11 = 0;
  if (v10)
  {
    v12 = 0;
    a3 = v40;
    v13 = (uint64_t *)(a2 + 16);
    v37 = v9 & 0xFFFFFFFFFFFFFF8;
    while (2)
    {
      v36 = v11;
      v14 = v12;
      while (1)
      {
        if ((v9 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1BCCB4394](v14, v9);
          v12 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_22;
        }
        else
        {
          if (v14 >= *(_QWORD *)(v37 + 16))
            goto LABEL_23;
          swift_retain();
          v12 = v14 + 1;
          if (__OFADD__(v14, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        CalculateExpression.id.getter((uint64_t)v8);
        swift_beginAccess();
        a2 = *v13;
        if (!*(_QWORD *)(*v13 + 16))
          break;
        v15 = sub_1B887C468((uint64_t)v8);
        if ((v16 & 1) == 0)
          break;
        v17 = *(_QWORD *)(a2 + 56) + 120 * v15;
        v19 = *(_OWORD *)(v17 + 32);
        v18 = *(_OWORD *)(v17 + 48);
        v20 = *(_OWORD *)(v17 + 16);
        v40[0] = *(_OWORD *)v17;
        v40[1] = v20;
        v40[2] = v19;
        v40[3] = v18;
        v21 = *(_OWORD *)(v17 + 64);
        v22 = *(_OWORD *)(v17 + 80);
        v23 = *(_OWORD *)(v17 + 96);
        v41 = *(_BYTE *)(v17 + 112);
        v40[5] = v22;
        v40[6] = v23;
        v40[4] = v21;
        swift_endAccess();
        sub_1B88BACCC((uint64_t)v40);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
        a2 = sub_1B88A7E0C((uint64_t *)v40);
        sub_1B88BB468((uint64_t)v40);
        swift_release();
        if ((a2 & 1) != 0)
          goto LABEL_18;
        ++v14;
        if (v12 == v10)
        {
          LOBYTE(v11) = v36;
          goto LABEL_19;
        }
      }
      swift_endAccess();
      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
LABEL_18:
      v11 = 1;
      if (v12 != v10)
        continue;
      break;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v24 = v35;
  v25 = *(void (**)(uint64_t))(*(_QWORD *)v35 + 272);
  v26 = swift_bridgeObjectRetain();
  v25(v26);
  v27 = sub_1B8896EE8(MEMORY[0x1E0DEE9D8]);
  KeyPath = swift_getKeyPath();
  v29 = MEMORY[0x1E0C80A78](KeyPath);
  v34[-2] = v24;
  v34[-1] = v27;
  v30 = *(void (**)(uint64_t, uint64_t (*)()))(*(_QWORD *)v24 + 512);
  v30(v29, sub_1B88BB440);
  swift_bridgeObjectRelease();
  swift_release();
  v31 = swift_getKeyPath();
  v32 = MEMORY[0x1E0C80A78](v31);
  v34[-2] = v24;
  LOBYTE(v34[-1]) = 0;
  v30(v32, (uint64_t (*)())sub_1B88BB58C);
  result = swift_release();
  if ((v11 & 1) != 0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 488))(result);
  return result;
}

uint64_t sub_1B88B745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[3];
  _QWORD aBlock[7];

  v1 = sub_1B89128C4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B89128DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 456))(v7);
  if ((result & 1) == 0)
  {
    KeyPath = swift_getKeyPath();
    v12 = MEMORY[0x1E0C80A78](KeyPath);
    v15[-2] = v0;
    LOBYTE(v15[-1]) = 1;
    (*(void (**)(uint64_t, void (*)()))(*(_QWORD *)v0 + 512))(v12, sub_1B88BB58C);
    v13 = swift_release();
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 216))(v13) & 1) != 0)
    {
      return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
    }
    else
    {
      if (qword_1ED563DD0 != -1)
        swift_once();
      v15[1] = qword_1ED563B98;
      aBlock[4] = sub_1B88BAD70;
      aBlock[5] = v0;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1B88A9568;
      aBlock[3] = &block_descriptor_44;
      v14 = _Block_copy(aBlock);
      swift_retain();
      sub_1B89128D0();
      v15[2] = MEMORY[0x1E0DEE9D8];
      sub_1B88A9A6C(&qword_1ED5621E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5621F0);
      sub_1B887A014(&qword_1ED5621F8, &qword_1ED5621F0, MEMORY[0x1E0DEAF38]);
      sub_1B8912E7C();
      MEMORY[0x1BCCB4214](0, v9, v4, v14);
      _Block_release(v14);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return swift_release();
    }
  }
  return result;
}

unint64_t sub_1B88B76F0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  char v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t j;
  _BYTE *v29;
  uint64_t k;
  _BYTE *v31;

  v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1B8912FD8();
    v4 = result;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_43;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = 0;
      do
      {
        v10 = MEMORY[0x1BCCB4394](v6, a1);
        v11 = CalculateExpression.document.getter();
        if (v11)
        {
          v7 = v11;
          swift_release();
          v8 = v7 == v2;
        }
        else
        {
          v8 = 0;
        }
        ++v6;
        v9 = (BOOL *)(v10 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        *v9 = v8;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
    }
    else
    {
      v12 = 0;
      do
      {
        v16 = *(_QWORD *)(a1 + 8 * v12 + 32);
        swift_retain();
        v17 = CalculateExpression.document.getter();
        if (v17)
        {
          v13 = v17;
          swift_release();
          v14 = v13 == v2;
        }
        else
        {
          v14 = 0;
        }
        ++v12;
        v15 = (BOOL *)(v16 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        *v15 = v14;
        swift_release();
      }
      while (v4 != v12);
    }
  }
  v18 = swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 336))(v18);
  v19 = result;
  if (result >> 62)
  {
    result = sub_1B8912FD8();
    v20 = result;
    if (result)
    {
LABEL_18:
      if (v20 >= 1)
      {
        for (i = 0; i != v20; ++i)
        {
          if ((v19 & 0xC000000000000001) != 0)
          {
            v23 = MEMORY[0x1BCCB4394](i, v19);
          }
          else
          {
            v23 = *(_QWORD *)(v19 + 8 * i + 32);
            swift_retain();
          }
          v24 = (_BYTE *)(v23 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
          swift_beginAccess();
          *v24 = 0;
          v25 = CalculateExpression.document.getter();
          if (!v25 || (v26 = v25, swift_release(), v26 != v2))
          {
            swift_retain();
            sub_1B889BF70();
            v22 = sub_1B885FD04();
            CalculateExpression.setNeedsEvaluation(rebuild:)(v22 & 1);
          }
          swift_release();
        }
        goto LABEL_30;
      }
LABEL_43:
      __break(1u);
      __break(1u);
      return result;
    }
  }
  else
  {
    v20 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_18;
  }
LABEL_30:
  v27 = swift_bridgeObjectRelease();
  if (v4)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      for (j = 0; j != v4; ++j)
      {
        v29 = (_BYTE *)(MEMORY[0x1BCCB4394](j, a1) + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        if (*v29 == 1)
          sub_1B889BF70();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      for (k = 0; k != v4; ++k)
      {
        v31 = (_BYTE *)(*(_QWORD *)(a1 + 8 * k + 32) + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        if (*v31 == 1)
        {
          swift_retain();
          sub_1B889BF70();
          swift_release();
        }
      }
    }
    v27 = swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 488))(v27);
}

uint64_t sub_1B88B7A60()
{
  sub_1B88A9A6C(&qword_1ED561C68, (uint64_t (*)(uint64_t))type metadata accessor for CalculateDocument, (uint64_t)&protocol conformance descriptor for CalculateDocument);
  return sub_1B8912888();
}

uint64_t sub_1B88B7ACC()
{
  sub_1B88A9A6C(&qword_1ED561C68, (uint64_t (*)(uint64_t))type metadata accessor for CalculateDocument, (uint64_t)&protocol conformance descriptor for CalculateDocument);
  return sub_1B891287C();
}

uint64_t CalculateDocument.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  v2 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  v4 = sub_1B89128B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CalculateDocument.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  v2 = sub_1B8912840();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  v4 = sub_1B89128B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_1B88B7CD4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  v4 = sub_1B8912840();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1B88B7D1C()
{
  return sub_1B8912828();
}

uint64_t sub_1B88B7D38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B8873F28(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B88B8FC8();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1B8888B08(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B88B7E04(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  int64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;

  v3 = v2;
  v5 = sub_1B8912840();
  v67 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6368);
  v66 = a2;
  v80 = sub_1B8912FFC();
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v81 = v7;
  v61 = v2;
  v9 = 1 << *(_BYTE *)(v8 + 32);
  v10 = *(_QWORD *)(v8 + 64);
  v63 = (_QWORD *)(v8 + 64);
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v62 = (unint64_t)(v9 + 63) >> 6;
  v13 = v80 + 64;
  result = swift_retain();
  v15 = 0;
  v65 = v8;
  v82 = v5;
  v16 = v67;
  while (1)
  {
    if (v12)
    {
      v24 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v25 = v24 | (v15 << 6);
      goto LABEL_22;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v62)
      break;
    v27 = v63;
    v28 = v63[v26];
    ++v15;
    if (!v28)
    {
      v15 = v26 + 1;
      if (v26 + 1 >= v62)
        goto LABEL_34;
      v28 = v63[v15];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v62)
        {
LABEL_34:
          swift_release();
          v3 = v61;
          if ((v66 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v63[v29];
        if (!v28)
        {
          while (1)
          {
            v15 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v15 >= v62)
              goto LABEL_34;
            v28 = v63[v15];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v15 = v29;
      }
    }
LABEL_21:
    v12 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v15 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v8 + 48) + *(_QWORD *)(v16 + 72) * v25;
    v31 = 120 * v25;
    v78 = *(_QWORD *)(v16 + 72);
    v79 = v15;
    if ((v66 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 32))(v81, v30, v82);
      v32 = *(_QWORD *)(v8 + 56) + v31;
      v33 = *(_QWORD *)v32;
      v76 = *(_QWORD *)(v32 + 8);
      v77 = v33;
      v34 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v32 + 32);
      v74 = *(_QWORD *)(v32 + 24);
      v75 = v34;
      v36 = *(_QWORD *)(v32 + 40);
      v37 = *(_QWORD *)(v32 + 48);
      v39 = *(void **)(v32 + 56);
      v38 = *(void **)(v32 + 64);
      v73 = *(unsigned __int8 *)(v32 + 72);
      v40 = *(_QWORD *)(v32 + 80);
      v71 = *(_QWORD *)(v32 + 88);
      v72 = v40;
      v41 = *(_QWORD *)(v32 + 96);
      v69 = *(_QWORD *)(v32 + 104);
      v70 = v41;
      v68 = *(unsigned __int8 *)(v32 + 112);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v81, v30, v82);
      v42 = *(_QWORD *)(v8 + 56) + v31;
      v43 = *(_QWORD *)v42;
      v76 = *(_QWORD *)(v42 + 8);
      v77 = v43;
      v45 = *(_QWORD *)(v42 + 16);
      v44 = *(_QWORD *)(v42 + 24);
      v64 = v12;
      v46 = *(_QWORD *)(v42 + 32);
      v36 = *(_QWORD *)(v42 + 40);
      v37 = *(_QWORD *)(v42 + 48);
      v39 = *(void **)(v42 + 56);
      v38 = *(void **)(v42 + 64);
      v73 = *(unsigned __int8 *)(v42 + 72);
      v47 = *(_QWORD *)(v42 + 88);
      v72 = *(_QWORD *)(v42 + 80);
      v48 = *(_QWORD *)(v42 + 104);
      v70 = *(_QWORD *)(v42 + 96);
      v68 = *(unsigned __int8 *)(v42 + 112);
      swift_bridgeObjectRetain();
      v75 = v45;
      swift_retain();
      v74 = v44;
      v35 = v46;
      v12 = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v49 = v39;
      v50 = v38;
      v69 = v48;
      swift_bridgeObjectRetain();
      v71 = v47;
      swift_bridgeObjectRetain();
    }
    v51 = v80;
    sub_1B88A9A6C(&qword_1EF1B5FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1B8912A74();
    v52 = -1 << *(_BYTE *)(v51 + 32);
    v53 = result & ~v52;
    v54 = v53 >> 6;
    if (((-1 << v53) & ~*(_QWORD *)(v13 + 8 * (v53 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v53) & ~*(_QWORD *)(v13 + 8 * (v53 >> 6)))) | v53 & 0x7FFFFFFFFFFFFFC0;
      v16 = v67;
    }
    else
    {
      v55 = 0;
      v56 = (unint64_t)(63 - v52) >> 6;
      v16 = v67;
      do
      {
        if (++v54 == v56 && (v55 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v57 = v54 == v56;
        if (v54 == v56)
          v54 = 0;
        v55 |= v57;
        v58 = *(_QWORD *)(v13 + 8 * v54);
      }
      while (v58 == -1);
      v17 = __clz(__rbit64(~v58)) + (v54 << 6);
    }
    *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = v80;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v80 + 48) + v17 * v78, v81, v82);
    v19 = *(_QWORD *)(v18 + 56) + 120 * v17;
    v20 = v76;
    *(_QWORD *)v19 = v77;
    *(_QWORD *)(v19 + 8) = v20;
    v21 = v74;
    *(_QWORD *)(v19 + 16) = v75;
    *(_QWORD *)(v19 + 24) = v21;
    *(_QWORD *)(v19 + 32) = v35;
    *(_QWORD *)(v19 + 40) = v36;
    *(_QWORD *)(v19 + 48) = v37;
    *(_QWORD *)(v19 + 56) = v39;
    *(_QWORD *)(v19 + 64) = v38;
    *(_BYTE *)(v19 + 72) = v73;
    v22 = v71;
    *(_QWORD *)(v19 + 80) = v72;
    *(_QWORD *)(v19 + 88) = v22;
    v23 = v69;
    *(_QWORD *)(v19 + 96) = v70;
    *(_QWORD *)(v19 + 104) = v23;
    *(_BYTE *)(v19 + 112) = v68;
    ++*(_QWORD *)(v18 + 16);
    v8 = v65;
    v15 = v79;
  }
  swift_release();
  v3 = v61;
  v27 = v63;
  if ((v66 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v59 = 1 << *(_BYTE *)(v8 + 32);
  if (v59 >= 64)
    bzero(v27, ((unint64_t)(v59 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v59;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v80;
  return result;
}

uint64_t sub_1B88B8308(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6280);
  v36 = a2;
  v6 = sub_1B8912FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1B89130A4();
    sub_1B8912B10();
    result = sub_1B89130BC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

char *sub_1B88B861C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  char *v23;
  BOOL v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_1B8912840();
  v34 = *(_QWORD *)(v4 - 8);
  result = (char *)MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = (char *)sub_1B8912E88();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v33 = (unint64_t)(result + 1) & v11;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v32(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1B88A9A6C(&qword_1EF1B5FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1B8912A74();
        result = (char *)(*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = (char *)(v22 + 120 * a1);
            v23 = (char *)(v22 + 120 * v10);
            if (120 * a1 < (uint64_t)(120 * v10) || result >= v23 + 120 || (v24 = a1 == v10, a1 = v10, !v24))
            {
              result = (char *)memmove(result, v23, 0x78uLL);
              v13 = v17;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1B88B88D4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1B8912840();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1B887C468(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1B88BB430(a1, v20[7] + 120 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1B88B8C68();
      goto LABEL_7;
    }
    sub_1B88B7E04(v17, a3 & 1);
    v22 = sub_1B887C468(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_1B88BB430(a1, v20[7] + 120 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1B88B8BA4(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B88B8A48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8873F28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B88B8FC8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1B88B8308(v15, a4 & 1);
  v21 = sub_1B8873F28(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8913080();
  __break(1u);
  return result;
}

uint64_t sub_1B88B8BA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1B8912840();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 120 * a1;
  v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  *(_BYTE *)(v11 + 112) = *(_BYTE *)(a3 + 112);
  v14 = *(_OWORD *)(a3 + 96);
  v15 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v11 + 96) = v14;
  *(_OWORD *)(v11 + 64) = v15;
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

void *sub_1B88B8C68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  const void *v48;
  int64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  v1 = sub_1B8912840();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  MEMORY[0x1E0C80A78](v1);
  v50 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6368);
  v47 = v0;
  v3 = *v0;
  v4 = sub_1B8912FF0();
  v5 = *(_QWORD *)(v3 + 16);
  v54 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v46 = v54;
    v45 = v47;
LABEL_28:
    *v45 = v46;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v48 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v48, 8 * v8);
    v6 = v54;
    v5 = *(_QWORD *)(v3 + 16);
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = v5;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v53 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v49 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v55 = (v13 - 1) & v13;
      v56 = v10;
      v14 = __clz(__rbit64(v13)) | (v10 << 6);
      v15 = v53;
      goto LABEL_12;
    }
    v41 = v10 + 1;
    v15 = v53;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v41 >= v49)
      goto LABEL_26;
    v42 = *((_QWORD *)v48 + v41);
    v43 = v10 + 1;
    if (!v42)
    {
      v43 = v10 + 2;
      if (v10 + 2 >= v49)
        goto LABEL_26;
      v42 = *((_QWORD *)v48 + v43);
      if (!v42)
        break;
    }
LABEL_25:
    v55 = (v42 - 1) & v42;
    v56 = v43;
    v14 = __clz(__rbit64(v42)) + (v43 << 6);
LABEL_12:
    v17 = v50;
    v16 = v51;
    v18 = *(_QWORD *)(v51 + 72) * v14;
    v19 = v52;
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, *(_QWORD *)(v15 + 48) + v18, v52);
    v20 = 120 * v14;
    v21 = *(_QWORD *)(v15 + 56) + 120 * v14;
    v22 = *(_QWORD *)(v21 + 8);
    v67 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 32);
    v25 = *(_QWORD *)(v21 + 40);
    v26 = *(_QWORD *)(v21 + 48);
    v57 = *(_QWORD *)(v21 + 24);
    v58 = v26;
    v27 = *(void **)(v21 + 56);
    v28 = *(void **)(v21 + 64);
    v66 = *(unsigned __int8 *)(v21 + 72);
    v65 = *(_QWORD *)(v21 + 80);
    v29 = *(_QWORD *)(v21 + 88);
    v61 = v28;
    v62 = v29;
    v64 = *(_QWORD *)(v21 + 96);
    v30 = *(_QWORD *)(v21 + 104);
    v59 = v27;
    v60 = v30;
    v63 = *(unsigned __int8 *)(v21 + 112);
    v31 = v54;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v54 + 48) + v18, v17, v19);
    v32 = *(_QWORD *)(v31 + 56) + v20;
    *(_QWORD *)v32 = v67;
    *(_QWORD *)(v32 + 8) = v22;
    v33 = v57;
    v34 = v58;
    *(_QWORD *)(v32 + 16) = v23;
    *(_QWORD *)(v32 + 24) = v33;
    *(_QWORD *)(v32 + 32) = v24;
    *(_QWORD *)(v32 + 40) = v25;
    v36 = v59;
    v35 = v60;
    *(_QWORD *)(v32 + 48) = v34;
    *(_QWORD *)(v32 + 56) = v36;
    v38 = v61;
    v37 = v62;
    *(_QWORD *)(v32 + 64) = v61;
    *(_BYTE *)(v32 + 72) = v66;
    *(_QWORD *)(v32 + 80) = v65;
    *(_QWORD *)(v32 + 88) = v37;
    *(_QWORD *)(v32 + 96) = v64;
    *(_QWORD *)(v32 + 104) = v35;
    *(_BYTE *)(v32 + 112) = v63;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v39 = v36;
    v40 = v38;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    v13 = v55;
    v10 = v56;
  }
  v44 = v10 + 3;
  if (v10 + 3 >= v49)
  {
LABEL_26:
    result = (void *)swift_release();
    v45 = v47;
    v46 = v54;
    goto LABEL_28;
  }
  v42 = *((_QWORD *)v48 + v44);
  if (v42)
  {
    v43 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v43 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v43 >= v49)
      goto LABEL_26;
    v42 = *((_QWORD *)v48 + v43);
    ++v44;
    if (v42)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B88B8FC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6280);
  v2 = *v0;
  v3 = sub_1B8912FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B88B917C(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1B88BA7EC((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_1B88B92C8(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_1B88B91E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C28);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1B88BA5F0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1B8879F24();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1B88B92C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  result = sub_1B8913020();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1B88B996C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_151;
  v101 = result;
  v98 = a1;
  if (v3 <= 1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v104 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v10 = MEMORY[0x1E0DEE9D8];
LABEL_117:
      result = v10;
      v100 = v7;
      if (v11 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v11 - 2;
          if (v11 < 2)
            goto LABEL_146;
          if (!v91)
            goto LABEL_159;
          v93 = result;
          v94 = *(_QWORD *)(result + 32 + 16 * v92);
          v95 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
          result = sub_1B88B9A38((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_147;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1B88B9D5C(v93);
            v93 = result;
          }
          if (v92 >= *(_QWORD *)(v93 + 16))
            goto LABEL_148;
          v96 = (_QWORD *)(v93 + 32 + 16 * v92);
          *v96 = v94;
          v96[1] = v95;
          v97 = *(_QWORD *)(v93 + 16);
          if (v11 > v97)
            goto LABEL_149;
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          result = v93;
          *(_QWORD *)(v93 + 16) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v100 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    result = sub_1B8912CE4();
    *(_QWORD *)(result + 16) = v6;
    v100 = result;
    v104 = (char *)(result + 32);
  }
  v8 = 0;
  v9 = *a1;
  v99 = v9 + 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v102 = v3;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v3)
      goto LABEL_45;
    v13 = (uint64_t *)(v9 + 16 * v8);
    result = *v13;
    v14 = v13[1];
    v15 = (_QWORD *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_44;
      v17 = 0;
    }
    else
    {
      result = sub_1B8913050();
      v17 = result;
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_36;
    }
    v19 = (_QWORD *)(v99 + 16 * v18);
    do
    {
      result = *(v19 - 1);
      v21 = (_QWORD *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        result = sub_1B8913050();
        if (((v17 ^ result) & 1) != 0)
          goto LABEL_36;
      }
      v19 += 2;
      v20 = v18 + 1;
      v8 = v18;
      v18 = v20;
    }
    while (v20 < v3);
    v18 = v20;
LABEL_36:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_37:
      if (v18 < v12)
        goto LABEL_155;
      if (v12 < v18)
      {
        v23 = 16 * v18;
        v24 = 16 * v12;
        v25 = v18;
        v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_158;
            v27 = v9 + v23;
            v28 = *(_QWORD *)(v9 + v24);
            v29 = *(_QWORD *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(_QWORD *)(v27 - 16) = v28;
            *(_QWORD *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_150;
      if (v8 - v12 < v101)
        break;
    }
LABEL_66:
    if (v8 < v12)
      goto LABEL_145;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B88B9C64(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = result;
    }
    v38 = *(_QWORD *)(v10 + 16);
    v37 = *(_QWORD *)(v10 + 24);
    v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      result = (uint64_t)sub_1B88B9C64((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      v10 = result;
    }
    *(_QWORD *)(v10 + 16) = v11;
    v39 = v10 + 32;
    v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      v103 = v8;
      while (1)
      {
        v41 = v11 - 1;
        if (v11 >= 4)
        {
          v46 = v39 + 16 * v11;
          v47 = *(_QWORD *)(v46 - 64);
          v48 = *(_QWORD *)(v46 - 56);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_134;
          v51 = *(_QWORD *)(v46 - 48);
          v50 = *(_QWORD *)(v46 - 40);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_135;
          v53 = v11 - 2;
          v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          v56 = *v54;
          v55 = v54[1];
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_136;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_138;
          if (v58 >= v49)
          {
            v76 = (uint64_t *)(v39 + 16 * v41);
            v78 = *v76;
            v77 = v76[1];
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_144;
            v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v70 = *(_QWORD *)(v10 + 32);
            v71 = *(_QWORD *)(v10 + 40);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_98;
          }
          v43 = *(_QWORD *)(v10 + 32);
          v42 = *(_QWORD *)(v10 + 40);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_137;
        v53 = v11 - 2;
        v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        v61 = *v59;
        v60 = v59[1];
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_139;
        v65 = (uint64_t *)(v39 + 16 * v41);
        v67 = *v65;
        v66 = v65[1];
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_141;
        if (__OFADD__(v63, v68))
          goto LABEL_143;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_104:
          if (v69)
            v41 = v53;
          goto LABEL_106;
        }
LABEL_98:
        if ((v64 & 1) != 0)
          goto LABEL_140;
        v72 = (uint64_t *)(v39 + 16 * v41);
        v74 = *v72;
        v73 = v72[1];
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_142;
        if (v75 < v63)
          goto LABEL_15;
LABEL_106:
        v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v81 = v9;
        if (!v9)
          goto LABEL_157;
        v82 = v10;
        v83 = (uint64_t *)(v39 + 16 * v80);
        v84 = *v83;
        v85 = v39;
        v86 = v41;
        v87 = (_QWORD *)(v39 + 16 * v41);
        v88 = v87[1];
        v89 = v81;
        result = sub_1B88B9A38((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1)
          goto LABEL_114;
        if (v88 < v84)
          goto LABEL_131;
        if (v86 > *(_QWORD *)(v82 + 16))
          goto LABEL_132;
        *v83 = v84;
        *(_QWORD *)(v85 + 16 * v80 + 8) = v88;
        v90 = *(_QWORD *)(v82 + 16);
        if (v86 >= v90)
          goto LABEL_133;
        v10 = v82;
        v11 = v90 - 1;
        result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        v39 = v85;
        *(_QWORD *)(v82 + 16) = v90 - 1;
        v9 = v89;
        v8 = v103;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v3 = v102;
    if (v8 >= v102)
    {
      v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101))
    goto LABEL_153;
  if (v12 + v101 >= v3)
    v30 = v3;
  else
    v30 = v12 + v101;
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        v32 = (uint64_t *)(v9 + 16 * v8);
        result = *v32;
        v33 = v32[1];
        v34 = v12;
        v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1))
            break;
          result = sub_1B8913050();
          if ((result & 1) == 0)
            break;
          if (!v9)
            goto LABEL_156;
          result = *v35;
          v33 = v35[1];
          *(_OWORD *)v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_1B88B996C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1B8913050(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B88B9A38(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_48;
    v17 = (char *)(a3 - 16);
    while (1)
    {
      v18 = v17 + 16;
      v19 = v6 - 16;
      v20 = *((_QWORD *)v14 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v14 - 1) == *((_QWORD *)v6 - 1);
      if (v20 || (sub_1B8913050() & 1) == 0)
      {
        v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        v21 = v17 >= v14;
        v14 -= 16;
        if (v21)
          goto LABEL_45;
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        v21 = v17 >= v6;
        v6 -= 16;
        if (v21)
          goto LABEL_45;
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (v15 || (sub_1B8913050() & 1) == 0)
        break;
      v16 = v6;
      v15 = v7 == v6;
      v6 += 16;
      if (!v15)
        goto LABEL_20;
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_23;
    }
    v16 = v4;
    v15 = v7 == v4;
    v4 += 16;
    if (v15)
      goto LABEL_21;
LABEL_20:
    *(_OWORD *)v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  return 1;
}

char *sub_1B88B9C64(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B6370);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B88B9D5C(uint64_t a1)
{
  return sub_1B88B9C64(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void (*sub_1B88B9D70(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_1B8912840();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_1B88BA3CC(v4);
  v4[12] = sub_1B88BA1EC(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_1B88B9E30;
}

void sub_1B88B9E30(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

uint64_t sub_1B88B9E9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1B89130A4();
  swift_bridgeObjectRetain();
  sub_1B8912B10();
  v6 = sub_1B89130BC();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1B8913050() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1B8913050() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B8875FCC();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1B88BA028(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1B88BA028(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1B8912E88();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1B89130A4();
        swift_bridgeObjectRetain();
        sub_1B8912B10();
        v10 = sub_1B89130BC();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_1B88BA1EC(_QWORD *a1, uint64_t a2, char a3))(uint64_t *a1)
{
  uint64_t *v3;
  uint64_t *v4;
  char *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  char v27;
  void (*result)(uint64_t *);

  v4 = v3;
  v8 = (char *)malloc(0x90uLL);
  *a1 = v8;
  *((_QWORD *)v8 + 15) = a2;
  *((_QWORD *)v8 + 16) = v4;
  v9 = *v4;
  v11 = sub_1B887C468(a2);
  v8[113] = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v8 + 17) = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*v4 + 56) + 120 * v11;
        v18 = *(_QWORD *)(v17 + 16);
        v19 = *(_OWORD *)(v17 + 56);
        v20 = *(unsigned __int8 *)(v17 + 72);
        v21 = *(_OWORD *)(v17 + 80);
        v22 = *(_OWORD *)(v17 + 96);
        v23 = *(_BYTE *)(v17 + 112);
        v24 = *(_OWORD *)(v17 + 40);
        v25 = *(_OWORD *)(v17 + 24);
        *(_OWORD *)v8 = *(_OWORD *)v17;
        *((_QWORD *)v8 + 2) = v18;
        *(_OWORD *)(v8 + 24) = v25;
        *(_OWORD *)(v8 + 40) = v24;
LABEL_12:
        *(_OWORD *)(v8 + 56) = v19;
        *((_QWORD *)v8 + 9) = v20;
        *((_OWORD *)v8 + 5) = v21;
        *((_OWORD *)v8 + 6) = v22;
        v8[112] = v23;
        return sub_1B88BA364;
      }
LABEL_11:
      v20 = 0;
      v23 = 0;
      *((_QWORD *)v8 + 6) = 0;
      v19 = 0uLL;
      *((_OWORD *)v8 + 1) = 0u;
      *((_OWORD *)v8 + 2) = 0u;
      *(_OWORD *)v8 = 0u;
      v21 = 0uLL;
      v22 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1B88B8C68();
      goto LABEL_7;
    }
    sub_1B88B7E04(v14, a3 & 1);
    v26 = sub_1B887C468(a2);
    if ((v15 & 1) == (v27 & 1))
    {
      v11 = v26;
      *((_QWORD *)v8 + 17) = v26;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_1B8912840();
  result = (void (*)(uint64_t *))sub_1B8913080();
  __break(1u);
  return result;
}

void sub_1B88BA364(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1B88BA3F8(*a1, *(_BYTE *)(*a1 + 113), *(uint64_t **)(*a1 + 128), *(_QWORD *)(*a1 + 136), *(_QWORD *)(*a1 + 120));
  sub_1B88BB2D8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
  free((void *)v1);
}

uint64_t (*sub_1B88BA3CC(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1B88BA3EC;
}

uint64_t sub_1B88BA3EC(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1B88BA3F8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int64_t v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void *v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;

  v44 = a5;
  v45 = a4;
  v8 = sub_1B8912840();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(void **)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v25 = *(_QWORD *)(a1 + 96);
  v24 = *(_QWORD *)(a1 + 104);
  v26 = *(_BYTE *)(a1 + 112);
  if (!v13)
  {
    if ((a2 & 1) == 0)
      return sub_1B88BB384(v12, v13, v15, v14, v16, v17, v18, v19, v20);
    v42 = v15;
    v43 = v12;
    v32 = v45;
    v44 = v14;
    v40 = v16;
    v41 = v17;
    v38 = v18;
    v39 = v19;
    v33 = v20;
    swift_arrayDestroy();
    sub_1B88B861C(v32, *a3);
    v20 = v33;
LABEL_7:
    v19 = v39;
    v18 = v38;
    v16 = v40;
    v17 = v41;
    v12 = v43;
    v14 = v44;
    v15 = v42;
    return sub_1B88BB384(v12, v13, v15, v14, v16, v17, v18, v19, v20);
  }
  *(_QWORD *)&v46 = v12;
  *((_QWORD *)&v46 + 1) = v13;
  *(_QWORD *)&v47 = v15;
  *((_QWORD *)&v47 + 1) = v14;
  *(_QWORD *)&v48 = v16;
  *((_QWORD *)&v48 + 1) = v17;
  *(_QWORD *)&v49 = v18;
  *((_QWORD *)&v49 + 1) = v19;
  *(_QWORD *)&v50 = v20;
  BYTE8(v50) = v21 & 1;
  *(_QWORD *)&v51 = v22;
  *((_QWORD *)&v51 + 1) = v23;
  *(_QWORD *)&v52 = v25;
  *((_QWORD *)&v52 + 1) = v24;
  v53 = v26 & 1;
  v27 = (_QWORD *)*a3;
  if ((a2 & 1) == 0)
  {
    v34 = *(void (**)(char *, uint64_t))(v9 + 16);
    v42 = v15;
    v43 = v12;
    v35 = v44;
    v44 = v14;
    v40 = v16;
    v41 = v17;
    v38 = v18;
    v39 = v19;
    v36 = v20;
    v34(v11, v35);
    sub_1B88B8BA4(v45, (uint64_t)v11, (uint64_t)&v46, v27);
    v20 = v36;
    goto LABEL_7;
  }
  v28 = v27[7] + 120 * v45;
  v29 = v51;
  *(_OWORD *)(v28 + 64) = v50;
  *(_OWORD *)(v28 + 80) = v29;
  *(_OWORD *)(v28 + 96) = v52;
  *(_BYTE *)(v28 + 112) = v53;
  v30 = v47;
  *(_OWORD *)v28 = v46;
  *(_OWORD *)(v28 + 16) = v30;
  v31 = v49;
  *(_OWORD *)(v28 + 32) = v48;
  *(_OWORD *)(v28 + 48) = v31;
  return sub_1B88BB384(v12, v13, v15, v14, v16, v17, v18, v19, v20);
}

uint64_t sub_1B88BA5F0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

char *sub_1B88BA7EC(uint64_t a1)
{
  return sub_1B88775EC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B88BA800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  __CFString *v24;
  id v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  _OWORD v35[2];
  __int128 v36;
  uint64_t v37;

  v4 = sub_1B8898F00();
  v6 = v5;
  v7 = CalculateExpression.document.getter();
  v8 = sub_1B88992EC();
  v9 = sub_1B889C794();
  v10 = (_BYTE *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  v11 = 0;
  if ((*v10 & 1) == 0)
    v11 = sub_1B8898038();
  v34 = sub_1B8898B28();
  v32 = CalculateExpression.needsEvaluation.getter();
  v12 = CalculateExpression.plain.getter();
  v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 424))(v12);
  swift_release();
  v13 = CalculateExpression.plain.getter();
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 416))(v13);
  v30 = v15;
  v31 = v14;
  swift_release();
  v16 = CalculateExpression.plain.getter();
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 456))(v16);
  swift_release();
  CalculateExpression.declaredSymbol.getter();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v28 = v7;
    v29 = v9;
    v20 = v6;
    v21 = v11;
    v22 = v4;
    v23 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v24 = CFSTR("CalculateKeyConvertTrivial");
    v25 = objc_msgSend(v23, sel_initWithBool_, 0);
    v37 = sub_1B88796EC(0, (unint64_t *)&qword_1ED561BD8);
    *(_QWORD *)&v36 = v25;
    v4 = v22;
    v11 = v21;
    sub_1B8879E64(&v36, v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B88AB5C4(v35, v24, isUniquelyReferenced_nonNull_native);
    swift_release();

    v6 = v20;
    v7 = v28;
    v9 = v29;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_release();
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v34;
  *(_BYTE *)(a2 + 72) = v32 & 1;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = v33;
  *(_QWORD *)(a2 + 96) = v31;
  *(_QWORD *)(a2 + 104) = v30;
  *(_BYTE *)(a2 + 112) = v17 & 1;
  return result;
}

uint64_t sub_1B88BAA50()
{
  return sub_1B88BB508();
}

void sub_1B88BAA64()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1B88BAA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CalculateDocument()
{
  uint64_t result;

  result = qword_1ED5640A0;
  if (!qword_1ED5640A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B88BAB24()
{
  return sub_1B88BAB50();
}

void sub_1B88BAB38()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1B88BAB50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1B88B76F0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88BABA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B88BABC8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B88BABFC()
{
  uint64_t v0;

  return sub_1B88B683C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1B88BAC08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B88BAC2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B88BAC4C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1B88BAC74()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B88BACB0()
{
  uint64_t v0;

  return sub_1B88B70C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_OWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1B88BACBC()
{
  return swift_deallocObject();
}

uint64_t sub_1B88BACCC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 56);
  v3 = *(void **)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v4 = v2;
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B88BAD70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t sub_1B88BAD7C()
{
  return type metadata accessor for CalculateDocument();
}

uint64_t sub_1B88BAD84()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B8912840();
  if (v1 <= 0x3F)
  {
    result = sub_1B89128B8();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CalculateDocument()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateDocument.options.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CalculateDocument.synchronous.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init(expressions:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init(expressions:options:synchronous:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of CalculateDocument.isEvaluating.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t destroy for CalculateDocument.Evaluation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(void **)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v9 = v7;
  v10 = v8;
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 64);
  v8 = *(void **)(a2 + 64);
  v9 = v8;
  *(_QWORD *)(a1 + 64) = v8;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();

  v4 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalculateDocument.Evaluation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CalculateDocument.Evaluation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateDocument.Evaluation()
{
  return &type metadata for CalculateDocument.Evaluation;
}

uint64_t sub_1B88BB2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B88BB384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  id v10;
  id v11;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v10 = a8;
    v11 = a9;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B88BB430(uint64_t a1, uint64_t a2)
{
  return assignWithTake for CalculateDocument.Evaluation(a2, a1);
}

uint64_t sub_1B88BB440()
{
  uint64_t v0;

  return sub_1B88B4540(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B88BB468(uint64_t a1)
{
  void *v2;
  void *v3;

  v3 = *(void **)(a1 + 56);
  v2 = *(void **)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B88BB508()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B88BB564()
{
  return sub_1B88BB440();
}

void sub_1B88BB578()
{
  sub_1B88BAA64();
}

void sub_1B88BB58C()
{
  sub_1B88BAB38();
}

uint64_t sub_1B88BB5A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v9 = *a1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v5 = CalculateExpression.RichExpression.EditingToken.token.getter();
  if (v5 && (v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 384))(v5), swift_release(), (v6 & 1) != 0))
  {
    v7 = 1;
  }
  else
  {
    v9 = v1;
    v10 = v2;
    v11 = v3;
    v12 = v4;
    v7 = sub_1B888B474(&v9);
  }
  return v7 & 1;
}

uint64_t sub_1B88BB638()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v0 = type metadata accessor for CalculateExpression.RichToken();
  v3[0] = 1;
  v3[1] = 0xE000000000000000;
  sub_1B88BB70C(v0, 0.0, 1.0);
  sub_1B8912D68();
  v1 = sub_1B886210C(0, 0xE000000000000000, (char *)v3);
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 240))(1);
  return v1;
}

uint64_t sub_1B88BB6BC()
{
  swift_allocObject();
  return sub_1B88BC9A8();
}

uint64_t CalculateExpression.RandOperation.__deallocating_deinit()
{
  CalculateExpression.OperandOperation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B88BB70C(uint64_t result, float a2, float a3)
{
  float v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE_INT(a3 - a2) & 0x7F800000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x1BCCB4E2C](&v7, 8);
  if ((float)((float)(v5 * (float)((float)(v7 & 0xFFFFFF) * 0.000000059605)) + a2) == a3)
    return sub_1B88BB70C(v6, a2, a3);
  return result;
}

uint64_t type metadata accessor for CalculateExpression.RandOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B88BB7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  void (*v5)(__int128 *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(unint64_t);
  uint64_t v11;
  void (*v12)(__int128 *, _QWORD);
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(__int128 *, _QWORD);
  uint64_t result;
  uint64_t (*v20)(__int128 *);
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  void (*v32)(__int128 *, _QWORD);
  _QWORD *v33;
  void (*v34)(__int128 *, _QWORD);
  uint64_t (*v35)(__int128 *);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(__int128 *);
  void (*v42)(__int128 *, _QWORD);
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  void (*v46)(__int128 *, _QWORD);

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B887E34C, &v45);
  v3 = v45;
  if (!(_QWORD)v45)
    return 0;
  v4 = *((_QWORD *)&v45 + 1);
  v5 = v46;
  v6 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v45) = 33;
  v7 = swift_retain();
  sub_1B885DBF8(v7);
  v8 = sub_1B885FD04();
  v9 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v45, v8 & 1);
  (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
  v10 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v3 + 416);
  v11 = v10(v4);
  if (!v11)
  {
    v20 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
    swift_retain();
    v12 = (void (*)(__int128 *, _QWORD))v20(&v45);
    v22 = v21;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_12:
      sub_1B8912CFC();
      sub_1B8912CA8();
      v12(&v45, 0);
      sub_1B885DC28(v3);
      swift_release();
      goto LABEL_13;
    }
LABEL_38:
    sub_1B8912CCC();
    goto LABEL_12;
  }
  v12 = (void (*)(__int128 *, _QWORD))v11;
  v43 = v9;
  v13 = *(_BYTE *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v45) = v13;
  LOBYTE(v44) = 16;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v45, (unsigned __int8 *)&v44)
    || (LOBYTE(v45) = v13, (CalculateExpression.TokenType.isOperand.getter() & 1) != 0))
  {
    v42 = v5;
    v44 = v4;
    sub_1B88834C4((uint64_t *)&v44);
    v14 = v44;
    v15 = v44 - 1;
    if (!__OFSUB__(v44, 1))
    {
      v16 = v10(v44 - 1);
      if (v16)
      {
        v17 = *(_BYTE *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        LOBYTE(v45) = v17;
        sub_1B885DDA0();
        if ((sub_1B8912AA4() & 1) != 0)
        {
          v18 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v45);
          sub_1B885DC54(v15);
          swift_release();
          v18(&v45, 0);
LABEL_27:
          sub_1B885DC28(v3);
          swift_release();
          swift_release();
          swift_release();
          v23 = v3;
          goto LABEL_28;
        }
      }
      v24 = v10(v15);
      if (v24
        && (v25 = *(unsigned __int8 *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
            swift_release(),
            LOBYTE(v45) = v25,
            sub_1B885DDA0(),
            (sub_1B8912AA4() & 1) != 0))
      {
        LOBYTE(v45) = 16;
        v26 = sub_1B885FD04();
        v27 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v45, v26 & 1);
        v14 = v4 + 1;
        if (!__OFADD__(v4, 1))
        {
          v25 = v27;
          v41 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
          v10 = (uint64_t (*)(unint64_t))v41(&v45);
          if (!(*v28 >> 62))
          {
            if (*(_QWORD *)((*v28 & 0xFFFFFFFFFFFFF8) + 0x10) >= v14)
              goto LABEL_19;
            goto LABEL_44;
          }
LABEL_43:
          v40 = v25;
          swift_bridgeObjectRetain();
          v37 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          v38 = v37;
          v25 = v40;
          if (v38 >= v14)
          {
LABEL_19:
            if ((v14 & 0x8000000000000000) == 0)
            {
              sub_1B88604E0(v14, v14, v25);
              ((void (*)(__int128 *, _QWORD))v10)(&v45, 0);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
              v29 = swift_allocObject();
              *(_OWORD *)(v29 + 16) = xmmword_1B8915E20;
              *(_QWORD *)(v29 + 32) = v43;
              LOBYTE(v45) = 15;
              swift_retain();
              v30 = sub_1B885FD04();
              *(_QWORD *)(v29 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v45, v30 & 1);
              *(_QWORD *)&v45 = v29;
              sub_1B8912CA8();
              v31 = v45;
              v32 = (void (*)(__int128 *, _QWORD))v41(&v45);
              sub_1B8860170(v15, v15, v31);
              v32(&v45, 0);
              goto LABEL_27;
            }
            goto LABEL_45;
          }
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
      }
      else
      {
        v25 = *(_QWORD *)(*(_QWORD *)v3 + 408);
        swift_retain();
        v6 = ((uint64_t (*)(__int128 *))v25)(&v45);
        if (*v33 >> 62)
        {
          swift_bridgeObjectRetain();
          v10 = (uint64_t (*)(unint64_t))sub_1B8912FD8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = *(uint64_t (**)(unint64_t))((*v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v15 = v43;
        if ((uint64_t)v10 < v14)
        {
          __break(1u);
        }
        else if ((v14 & 0x8000000000000000) == 0)
        {
          sub_1B88604E0(v14, v14, v43);
          ((void (*)(__int128 *, _QWORD))v6)(&v45, 0);
          goto LABEL_27;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_43;
    }
    __break(1u);
    goto LABEL_38;
  }
  LOBYTE(v45) = v13;
  LOBYTE(v44) = 33;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v45, (unsigned __int8 *)&v44))
  {
    v6 = v4 + 1;
    if (!__OFADD__(v4, 1))
    {
      v35 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408);
      swift_retain();
      result = v35(&v45);
      v42 = (void (*)(__int128 *, _QWORD))result;
      if (!(*v36 >> 62))
      {
        if (*(_QWORD *)((*v36 & 0xFFFFFFFFFFFFF8) + 0x10) < v6)
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_35:
        if ((v6 & 0x8000000000000000) == 0)
        {
          sub_1B88604E0(v6, v6, v43);
          v42(&v45, 0);
          sub_1B885DC28(v3);
          swift_release();
          swift_release();
          swift_release();
          v23 = v3;
          goto LABEL_28;
        }
LABEL_49:
        __break(1u);
        return result;
      }
LABEL_47:
      swift_bridgeObjectRetain();
      v39 = sub_1B8912FD8();
      result = swift_bridgeObjectRelease();
      if (v39 < v6)
        goto LABEL_48;
      goto LABEL_35;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v34 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v3 + 408))(&v45);
  sub_1B885DC54(v4);
  swift_release();
  v34(&v45, 0);
  sub_1B885DC28(v3);
  swift_release();
  swift_release();
LABEL_13:
  swift_release();
  v23 = v3;
LABEL_28:
  sub_1B885DC28(v23);
  return 1;
}

uint64_t CalculateExpression.NotOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.NotOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B88BBEC0()
{
  char v1;

  type metadata accessor for CalculateExpression.RichToken();
  v1 = 1;
  return sub_1B886210C(48, 0xE100000000000000, &v1);
}

uint64_t sub_1B88BBF04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(__int128 *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(__int128 *, _QWORD);
  uint64_t (*v30)(unint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(__int128 *, _QWORD);
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(__int128 *, _QWORD);
  void (*v51)(__int128 *, _QWORD);
  char v52;
  void (*v53)(__int128 *, _QWORD);
  _QWORD *v54;
  _QWORD *v55;
  uint64_t (*v56)(__int128 *);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t (*v62)(__int128 *);
  unsigned __int8 v63;
  __int128 v64;

  v5 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 128);
  v6 = v5();
  v7 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 120))();
  v8 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 176);
  v9 = v8();
  if (v9)
  {
    v10 = v9;
    if (CalculateExpression.engine.getter() == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 640))(v10);
    v9 = swift_release();
  }
  v11 = *(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)a1 + 384);
  v11(&v64, v9);
  v12 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)v7 + 400))(&v64);
  if ((((uint64_t (*)(uint64_t))v5)(v12) & 1) != 0 && (*(uint64_t (**)(void))(*(_QWORD *)a1 + 368))() != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B8917AC0;
    type metadata accessor for CalculateExpression.RichToken();
    LOBYTE(v64) = 15;
    v17 = sub_1B885FD04();
    *(_QWORD *)(v16 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v64, v17 & 1);
    LOBYTE(v64) = 4;
    v18 = sub_1B885FD04();
    *(_QWORD *)(v16 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v64, v18 & 1);
    *(_QWORD *)(v16 + 48) = v7;
    LOBYTE(v64) = 16;
    swift_retain();
    v19 = sub_1B885FD04();
    *(_QWORD *)(v16 + 56) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v64, v19 & 1);
    *(_QWORD *)&v64 = v16;
    v15 = sub_1B8912CA8();
    v14 = v64;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)&v64 = v13;
    sub_1B8912CA8();
    v14 = v64;
    v15 = swift_retain();
  }
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 368))(v15) != 2)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0
      || (CalculateExpression.RichExpression.editingToken(matching:)(sub_1B88BC9CC, &v64), (v6 = v64) == 0))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
    a2 = *((_QWORD *)&v64 + 1);
    v30 = *(uint64_t (**)(unint64_t))(*(_QWORD *)v64 + 416);
    v31 = swift_retain();
    sub_1B885DBF8(v31);
    v8 = (uint64_t (*)(void))v30(a2);
    if (v8)
    {
      if (((*(uint64_t (**)(void))(*(_QWORD *)a1 + 224))() & 1) == 0)
      {
        type metadata accessor for CalculateExpression.RandOperation();
        if (!swift_dynamicCastClass())
        {
          swift_retain();
          goto LABEL_52;
        }
        v41 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 384);
        v42 = swift_retain();
        result = v41(v42);
        if ((result & 1) == 0)
          goto LABEL_52;
        if (v14 >> 62)
          goto LABEL_99;
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
          goto LABEL_52;
        goto LABEL_47;
      }
      (*(void (**)(unint64_t))(*(_QWORD *)v6 + 400))(v14);
    }
    else
    {
      v40 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v6 + 408))(&v64);
      sub_1B8860170(0, 0, v14);
      v40(&v64, 0);
    }
LABEL_61:
    (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
    swift_release();
    sub_1B885DC28(v6);
    swift_release();
    swift_release();
    sub_1B885DC28(v6);
    return 1;
  }
  v20 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 248))();
  if ((v20 & 1) != 0)
  {
    type metadata accessor for CalculateExpression.RichToken();
    ((void (*)(__int128 *__return_ptr))v11)(&v64);
    sub_1B886210C(48, 0xE100000000000000, (char *)&v64);
    a2 = (*(uint64_t (**)(__int128 *))(*(_QWORD *)a1 + 408))(&v64);
    v22 = v21;
    MEMORY[0x1BCCB40AC]();
    if (*(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8912CCC();
    sub_1B8912CFC();
    sub_1B8912CA8();
    ((void (*)(__int128 *, _QWORD))a2)(&v64, 0);
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 232))(1);
    v20 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 256))(0);
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224))(v20) & 1) != 0)
  {
LABEL_15:
    if (!v8())
      goto LABEL_67;
    v23 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v24)
      {
LABEL_18:
        v25 = v24 - 1;
        if (__OFSUB__(v24, 1))
        {
          __break(1u);
        }
        else if ((v23 & 0xC000000000000001) == 0)
        {
          if ((v25 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v25 < *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_23;
          }
          __break(1u);
          goto LABEL_93;
        }
        MEMORY[0x1BCCB4394](v25, v23);
LABEL_23:
        swift_bridgeObjectRelease();
        v26 = CalculateExpression.rich.getter();
        v27 = (*(uint64_t (**)(void))(*(_QWORD *)v26 + 392))();
        swift_release();
        if (!(v27 >> 62))
        {
          v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_25:
          swift_bridgeObjectRelease();
          v29 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)a1 + 408))(&v64);
          sub_1B885E26C(v28);
          v29(&v64, 0);
          swift_release();
          goto LABEL_67;
        }
LABEL_93:
        swift_bridgeObjectRetain();
        v28 = sub_1B8912FD8();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v24)
        goto LABEL_18;
    }
    goto LABEL_66;
  }
  type metadata accessor for CalculateExpression.RandOperation();
  if (!swift_dynamicCastClass())
    goto LABEL_67;
  v33 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 392))();
  if (!(v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_35;
LABEL_66:
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  v34 = sub_1B8912FD8();
  if (!v34)
    goto LABEL_66;
LABEL_35:
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
    goto LABEL_95;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_95:
    v37 = MEMORY[0x1BCCB4394](v36, v33);
LABEL_40:
    v38 = swift_bridgeObjectRelease();
    v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 384))(v38);
    swift_release();
    if ((v39 & 1) == 0)
    {
LABEL_67:
      if ((v6 & 1) == 0)
        goto LABEL_70;
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v64) = 4;
      v52 = sub_1B885FD04();
      CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v64, v52 & 1);
      v53 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)a1 + 408))(&v64);
      v55 = v54;
      MEMORY[0x1BCCB40AC]();
      if (*(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_88;
      while (1)
      {
        sub_1B8912CFC();
        sub_1B8912CA8();
        v53(&v64, 0);
LABEL_70:
        v56 = *(uint64_t (**)(__int128 *))(*(_QWORD *)a1 + 408);
        swift_bridgeObjectRetain();
        v53 = (void (*)(__int128 *, _QWORD))v56(&v64);
        sub_1B885E32C(v14);
        v53(&v64, 0);
        (*(void (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain();
          v57 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (!v57)
          {
LABEL_81:
            swift_release();
            swift_bridgeObjectRelease();
            return 1;
          }
        }
        else
        {
          v57 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v57)
            goto LABEL_81;
        }
        v58 = v57 - 1;
        if (__OFSUB__(v57, 1))
          break;
        if ((v14 & 0xC000000000000001) != 0)
          goto LABEL_85;
        if ((v58 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v58 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v59 = *(_QWORD *)(v14 + 8 * v58 + 32);
          swift_retain();
          goto LABEL_77;
        }
        __break(1u);
LABEL_88:
        sub_1B8912CCC();
      }
      __break(1u);
LABEL_85:
      v59 = MEMORY[0x1BCCB4394](v58, v14);
LABEL_77:
      swift_bridgeObjectRelease();
      v60 = *(_BYTE *)(v59 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v64) = v60;
      if ((CalculateExpression.TokenType.isConstant.getter() & 1) != 0)
      {
        v32 = 1;
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 256))(1);
        swift_release();
        return v32;
      }
      swift_release();
      return 1;
    }
    goto LABEL_15;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v37 = *(_QWORD *)(v33 + 8 * v36 + 32);
    swift_retain();
    goto LABEL_40;
  }
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_99:
    swift_bridgeObjectRetain();
    v61 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (v61 == 1)
      break;
LABEL_52:
    v49 = *((_BYTE *)v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v64) = v49;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
    {
      LOBYTE(v64) = v49;
      v63 = 15;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v64, &v63))
      {
        LOBYTE(v64) = v49;
        if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
        {
          LOBYTE(v64) = v49;
          v63 = 18;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v64, &v63))
          {
            LOBYTE(v64) = v49;
            v63 = 16;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v64, &v63))
            {
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
          }
        }
      }
    }
    if (!__OFADD__(a2, 1))
    {
      v62 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v6 + 408);
      v50 = (void (*)(__int128 *, _QWORD))v62(&v64);
      sub_1B8860170(a2 + 1, a2 + 1, v14);
      v50(&v64, 0);
      LOBYTE(v64) = v49;
      v63 = 18;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v64, &v63))
      {
        v51 = (void (*)(__int128 *, _QWORD))v62(&v64);
        sub_1B885DC54(a2);
        swift_release();
        v51(&v64, 0);
      }
      goto LABEL_60;
    }
  }
LABEL_47:
  if ((v14 & 0xC000000000000001) != 0)
  {
    v44 = MEMORY[0x1BCCB4394](0, v14);
LABEL_50:
    v45 = swift_bridgeObjectRelease();
    v46 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 208))(v45);
    v48 = v47;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 216))(v46, v48);
LABEL_60:
    swift_release();
    goto LABEL_61;
  }
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v44 = *(_QWORD *)(v14 + 32);
    swift_retain();
    goto LABEL_50;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.OperandOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B88BC9CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v2 = a1[3];
  v4 = *a1;
  v5 = *(_OWORD *)(a1 + 1);
  v6 = v2;
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)v1 + 136))(&v4) & 1;
}

uint64_t type metadata accessor for CalculateExpression.OperandOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.OperandOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.OperandOperation.operand.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CalculateExpression.OperandOperation.isNegative.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1B88BCA54()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  int v6;
  char v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  unsigned __int8 v26;

  type metadata accessor for CalculateExpression.RichToken();
  v26 = 10;
  v1 = sub_1B885FD04();
  v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(6778732, 0xE300000000000000, &v26, v1 & 1);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  if (v3)
    v5 = 0;
  else
    v5 = v4 == 0xE000000000000000;
  v6 = v5;
  if (v5 || (sub_1B8913050() & 1) != 0)
  {
    v22 = 18;
    v7 = sub_1B885FD04() & 1;
    v8 = &v22;
    v9 = 0;
    v10 = 0;
  }
  else
  {
    v25 = 1;
    swift_bridgeObjectRetain();
    v7 = sub_1B885FD04() & 1;
    v8 = &v25;
    v9 = v3;
    v10 = v4;
  }
  v11 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v9, v10, (unsigned __int8 *)v8, v7);
  type metadata accessor for CalculateExpression.RichExpression();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B8915DF0;
  *(_QWORD *)(v12 + 32) = v11;
  v24 = v12;
  sub_1B8912CA8();
  v13 = v24;
  swift_retain();
  v14 = sub_1B88622EC(v13);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 288))(v14);
  v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 280);
  v17 = v16(v15);
  if (v17)
  {
    v18 = v17;
    if (v6)
      v19 = 1;
    else
      v19 = sub_1B8913050();
    (*(void (**)(_QWORD))(*(_QWORD *)v18 + 304))(v19 & 1);
    v17 = swift_release();
  }
  v20 = v16(v17);
  if (v20)
  {
    v23 = 2;
    (*(void (**)(char *))(*(_QWORD *)v20 + 280))(&v23);
    swift_release();
  }
  swift_release();
  return v2;
}

uint64_t CalculateExpression.LogOperation.__deallocating_deinit()
{
  CalculateExpression.FunctionOperation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.LogOperation()
{
  return objc_opt_self();
}

uint64_t _sSo13CalculateUnitC0A0E2idSSvg_0()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_name);
  v2 = sub_1B8912AD4();

  return v2;
}

uint64_t sub_1B88BCCDC()
{
  return MEMORY[0x1E0DEA978];
}

void sub_1B88BCCE8(uint64_t *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*v1, sel_name);
  v4 = sub_1B8912AD4();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void CalculateExpression.CustomOperandOperation.__allocating_init(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  id *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  _QWORD v53[2];

  v2 = v1;
  v4 = sub_1B8912870();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_unitType) == (id)16)
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
    objc_msgSend(v8, sel_setMaximumFractionDigits_, 8);
    sub_1B891284C();
    v9 = (void *)sub_1B8912858();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v8, sel_setLocale_, v9);

    objc_msgSend(v8, sel_setUsesGroupingSeparator_, 0);
    objc_msgSend(v8, sel_setNumberStyle_, 1);
    objc_msgSend(v8, sel_setRoundingMode_, 6);
    v10 = (unint64_t)objc_msgSend(a1, sel_numberFormatter);
    objc_msgSend(a1, sel_setNumberFormatter_, v8);
    v11 = objc_msgSend(a1, sel_terms);
    sub_1B88BD3E4();
    v12 = sub_1B8912C9C();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1B8912FD8();
      swift_bridgeObjectRelease();
      if (v13)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_4:
        if ((v12 & 0xC000000000000001) != 0)
        {
          v14 = (id)MEMORY[0x1BCCB4394](0, v12);
          goto LABEL_7;
        }
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v14 = *(id *)(v12 + 32);
LABEL_7:
          v15 = v14;
          swift_bridgeObjectRelease();
          v16 = objc_msgSend(v15, sel_formattedValue);

          v13 = sub_1B8912AD4();
          v18 = v17;

LABEL_18:
          objc_msgSend(a1, sel_setNumberFormatter_, v10);
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRelease();
    v18 = 0xE000000000000000;
    goto LABEL_18;
  }
  v19 = objc_msgSend(a1, sel_terms);
  sub_1B88BD3E4();
  v10 = sub_1B8912C9C();

  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v23 = sub_1B8912FD8();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_21;
LABEL_10:
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_40:
    v20 = (id)MEMORY[0x1BCCB4394](0, v10);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v10 + 32);
LABEL_13:
    v8 = v20;
    swift_bridgeObjectRelease();
    v21 = (id *)CalculateTermDecimalString(v8);
    if (v21)
    {
      v10 = (unint64_t)v21;
      v13 = sub_1B8912AD4();
      v18 = v22;
LABEL_19:

      goto LABEL_23;
    }

LABEL_22:
    v13 = 0;
    v18 = 0xE000000000000000;
LABEL_23:
    v53[0] = v13;
    v53[1] = v18;
    v52[2] = 12357;
    v52[3] = 0xE200000000000000;
    v52[0] = 3156805;
    v52[1] = 0xE300000000000000;
    sub_1B8878944();
    v24 = sub_1B8912E4C();
    v26 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v27 = sub_1B88A2030(v24, v26);
    v29 = v28;
    swift_bridgeObjectRelease();
    if (v29)
    {
      if (v27 == 43 && v29 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_28:
        v31 = sub_1B8878E44(1uLL, v24, v26);
        v33 = v32;
        v35 = v34;
        v37 = v36;
        swift_bridgeObjectRelease();
        v24 = MEMORY[0x1BCCB3F20](v31, v33, v35, v37);
        v26 = v38;
        v39 = 0;
        goto LABEL_35;
      }
      v30 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
        goto LABEL_28;
    }
    swift_bridgeObjectRetain();
    v40 = sub_1B88A2030(v24, v26);
    v39 = v41;
    swift_bridgeObjectRelease();
    if (!v39)
    {
LABEL_36:
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v53[0]) = 1;
      v51 = sub_1B886210C(v24, v26, (char *)v53);
      (*(void (**)(uint64_t, uint64_t))(v2 + 160))(v51, v39);

      return;
    }
    if (v40 == 45 && v39 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = sub_1B8913050();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
      {
        v39 = 0;
        goto LABEL_36;
      }
    }
    v39 = 1;
    v43 = sub_1B8878E44(1uLL, v24, v26);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1BCCB3F20](v43, v45, v47, v49);
    v26 = v50;
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __break(1u);
}

uint64_t CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)(uint64_t a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = a2;
  return sub_1B88BC9A8();
}

uint64_t CalculateExpression.CustomOperandOperation.init(_:negative:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2;
  return sub_1B88BC9A8();
}

uint64_t sub_1B88BD340()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1B88BD348()
{
  return swift_retain();
}

void sub_1B88BD350()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B88BD37C()
{
  return swift_release();
}

uint64_t CalculateExpression.CustomOperandOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.OperandOperation.deinit();
  swift_release();
  return v0;
}

uint64_t CalculateExpression.CustomOperandOperation.__deallocating_deinit()
{
  CalculateExpression.OperandOperation.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1B88BD3E4()
{
  unint64_t result;

  result = qword_1ED561B78;
  if (!qword_1ED561B78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED561B78);
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.CustomOperandOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.CustomOperandOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1B88BD454(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(__int128 *, _QWORD);
  uint64_t *v34;
  uint64_t *v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  void (*v45)(__int128 *, _QWORD);
  unint64_t *v46;
  unint64_t *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  void (*v52)(__int128 *, _QWORD);
  uint64_t v53;
  uint64_t (*v54)(__int128 *);
  uint64_t *v55;
  uint64_t (*v56)(uint64_t);
  uint64_t (*v57)(_QWORD);
  unsigned __int8 v58;
  __int128 v59;
  uint64_t (*v60)(_QWORD);

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B888B474, &v59);
  v4 = v59;
  if (!(_QWORD)v59)
    return 0;
  v5 = (uint64_t *)*((_QWORD *)&v59 + 1);
  v6 = *(uint64_t (**)(uint64_t *))(*(_QWORD *)v59 + 416);
  v57 = v60;
  sub_1B885DBF8(v59);
  swift_retain();
  v7 = v6(v5);
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v59) = 15;
  v8 = sub_1B885FD04();
  v9 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v59, v8 & 1);
  v10 = (uint64_t)v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    v20 = sub_1B8912FD8();
LABEL_16:
    v21 = swift_bridgeObjectRelease();
    if (a1 < v20)
    {
      v55 = v5;
      v22 = 0;
      v10 += 5;
      v5 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
      while (1)
      {
        a1 = v10 - 4;
        v23 = v2(v21);
        v24 = v23;
        if ((v23 & 0xC000000000000001) != 0)
        {
          v25 = MEMORY[0x1BCCB4394](v10 - 4, v23);
        }
        else
        {
          if (a1 < 0)
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            if (((*(uint64_t (**)(void))(*(_QWORD *)v24 + 232))() & 1) != 0)
            {
              v52 = (void (*)(__int128 *, _QWORD))v54(&v59);
              sub_1B885DC54(a1);
              swift_release();
              v52(&v59, 0);
              sub_1B885DC28(v4);
              swift_release();
              swift_release();
              goto LABEL_43;
            }
LABEL_79:
            v14 = swift_release();
LABEL_80:
            v5 = v55;
LABEL_13:
            a1 = v10 + 1;
            if (!__OFADD__(v10, 1))
            {
              v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 392);
              v19 = v2(v14);
              if (!(v19 >> 62))
              {
                v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
                goto LABEL_16;
              }
              goto LABEL_84;
            }
            goto LABEL_83;
          }
          if ((unint64_t)a1 >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_75;
          v25 = *(_QWORD *)(v23 + 8 * v10);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        v26 = *(_BYTE *)(v25 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v59) = v26;
        v58 = 15;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v58))
        {
          v27 = swift_release();
          v28 = __OFADD__(v22++, 1);
          if (v28)
          {
            __break(1u);
            goto LABEL_79;
          }
        }
        else
        {
          LOBYTE(v59) = v26;
          v58 = 16;
          v29 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v58);
          v27 = swift_release();
          if (v29)
          {
            if (!v22)
              goto LABEL_36;
            v28 = __OFSUB__(v22--, 1);
            if (v28)
            {
              __break(1u);
              goto LABEL_82;
            }
          }
        }
        v28 = __OFADD__(a1, 1);
        a1 = v10 - 3;
        if (v28)
          goto LABEL_76;
        v30 = v2(v27);
        if (v30 >> 62)
          v31 = sub_1B8912FD8();
        else
          v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
        v21 = swift_bridgeObjectRelease();
        ++v10;
        if (a1 >= v31)
        {
LABEL_36:
          v5 = v55;
          break;
        }
      }
    }
    LOBYTE(v59) = 16;
    v32 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v59, 1);
    v33 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v4 + 408))(&v59);
    v10 = *v34;
    if ((unint64_t)*v34 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = (uint64_t *)sub_1B8912FD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(uint64_t **)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v2 = v56;
    v36 = v57;
    if ((uint64_t)v35 < a1)
    {
      __break(1u);
    }
    else if ((a1 & 0x8000000000000000) == 0)
    {
      sub_1B88604E0(a1, a1, v32);
      v33(&v59, 0);
      sub_1B885DC28(v4);
      goto LABEL_42;
    }
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v2 = (uint64_t (*)(uint64_t))v9;
  v56 = (uint64_t (*)(uint64_t))v9;
  if (((*(uint64_t (**)(void))(*(_QWORD *)a1 + 224))() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v11 + 32) = v2;
    *(_QWORD *)&v59 = v11;
    sub_1B8912CA8();
    v12 = v59;
    v13 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 400);
    swift_retain();
    v13(v12);
    v14 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
LABEL_12:
    v10 = 0;
    goto LABEL_13;
  }
  if (!v7
    || ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 576))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(_QWORD *)v4 + 568))() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v16 + 32) = v2;
    *(_QWORD *)&v59 = v16;
    sub_1B8912CA8();
    v17 = v59;
    v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 400);
    swift_retain();
    v14 = v18(v17);
    goto LABEL_12;
  }
  v37 = v6((uint64_t *)((char *)v5 + 1));
  v35 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  if (!v37)
  {
LABEL_56:
    v36 = *(uint64_t (**)(_QWORD))(*(_QWORD *)v4 + 408);
    swift_retain();
    result = v36(&v59);
    v55 = (uint64_t *)result;
    if (!(*v49 >> 62))
    {
      if (*(_QWORD *)((*v49 & 0xFFFFFFFFFFFFF8) + 0x10) >= v10)
        goto LABEL_58;
      goto LABEL_92;
    }
LABEL_91:
    swift_bridgeObjectRetain();
    v53 = sub_1B8912FD8();
    result = swift_bridgeObjectRelease();
    if (v53 >= v10)
    {
LABEL_58:
      if ((v10 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(v10, v10, (uint64_t)v2);
        v14 = ((uint64_t (*)(__int128 *, _QWORD))v55)(&v59, 0);
        if (v10)
        {
          v54 = (uint64_t (*)(__int128 *))v36;
          v55 = v5;
          v36 = 0;
          v2 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 392);
          v5 = (uint64_t *)((char *)v5 + 5);
          while (1)
          {
            a1 = (uint64_t)v5 - 4;
            v50 = v2(v14);
            if ((v50 & 0xC000000000000001) != 0)
            {
              v24 = MEMORY[0x1BCCB4394]((char *)v5 - 4, v50);
            }
            else
            {
              if ((unint64_t)a1 >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_88;
              v24 = *(_QWORD *)(v50 + 8 * (_QWORD)v5);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            v51 = *(_BYTE *)(v24 + *v35);
            LOBYTE(v59) = v51;
            v58 = 16;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v58))
            {
              v14 = swift_release();
              v28 = __OFADD__(v36, 1);
              v36 = (uint64_t (*)(_QWORD))((char *)v36 + 1);
              if (v28)
                goto LABEL_89;
            }
            else
            {
              LOBYTE(v59) = v51;
              v58 = 15;
              if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v58))
              {
                if (!v36)
                  goto LABEL_77;
                v14 = swift_release();
                v28 = __OFSUB__(v36, 1);
                v36 = (uint64_t (*)(_QWORD))((char *)v36 - 1);
                if (v28)
                  goto LABEL_90;
              }
              else
              {
                v14 = swift_release();
              }
            }
            v5 = (uint64_t *)((char *)v5 - 1);
            if (a1 <= 1)
              goto LABEL_80;
          }
        }
        goto LABEL_13;
      }
      goto LABEL_93;
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v38 = v37;
  v39 = *(_BYTE *)(v37 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v59) = v39;
  v58 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v59, &v58)
    || ((*(uint64_t (**)(void))(*(_QWORD *)v38 + 232))() & 1) == 0)
  {
    swift_release();
    goto LABEL_56;
  }
  v40 = (*(uint64_t (**)(void))(*(_QWORD *)v38 + 208))();
  v42 = v41;
  LOBYTE(v59) = v39;
  v43 = sub_1B885FD04() & 1;
  v44 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v40, v42, (unsigned __int8 *)&v59, v43);
  v45 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v4 + 408))(&v59);
  v47 = v46;
  v48 = *v46;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v47 = v48;
  if (!(_DWORD)result || (v48 & 0x8000000000000000) != 0 || (v48 & 0x4000000000000000) != 0)
    sub_1B885DD38(v48);
  if (v10 < 0)
    goto LABEL_94;
  if ((unint64_t)v10 >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_95:
    __break(1u);
    return result;
  }
  *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v44;
  swift_release();
  sub_1B8912CA8();
  v45(&v59, 0);
  sub_1B885DC28(v4);
  swift_release();
LABEL_42:
  swift_release();
LABEL_43:
  swift_release();
  swift_release();
  sub_1B885DC28(v4);
  return 1;
}

uint64_t CalculateExpression.OpenParenthesisOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.OpenParenthesisOperation()
{
  return objc_opt_self();
}

uint64_t sub_1B88BDC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  if (a1 == 6582125 && a2 == 0xE300000000000000 || (sub_1B8913050() & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v4 + 32) = 1;
    *(_QWORD *)(v4 + 16) = 37;
    *(_QWORD *)(v4 + 24) = 0xE100000000000000;
    swift_release();
  }
  else
  {
    *(_BYTE *)(v4 + 32) = 0;
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  return sub_1B8883058();
}

void sub_1B88BDD48(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v6;
  BOOL v8;
  char v9;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  if (v3 == 15420 && v4 == 0xE200000000000000)
    goto LABEL_14;
  v6 = sub_1B8913050();
  v8 = v3 == 15934 && v4 == 0xE200000000000000;
  v9 = 3;
  if ((v6 & 1) == 0 && !v8)
  {
    if ((sub_1B8913050() & 1) != 0)
    {
LABEL_14:
      v9 = 3;
      goto LABEL_15;
    }
    if ((v3 == 37 && v4 == 0xE100000000000000 || (sub_1B8913050() & 1) != 0) && *(_BYTE *)(v1 + 32) != 1)
      v9 = 1;
    else
      v9 = 2;
  }
LABEL_15:
  *a1 = v9;
}

uint64_t sub_1B88BDE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *, _QWORD);
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  BOOL v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t (*v34)(__int128 *);
  _QWORD *v35;
  uint64_t result;
  char v37;
  char v38;
  BOOL v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t (*v53)(__int128 *);
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(__int128 *, _QWORD);
  char v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  void (*v63)(__int128 *, _QWORD);
  uint64_t (*v64)(__int128 *);
  _QWORD *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  void (*v72)(__int128 *, _QWORD);
  uint64_t (*v73)(__int128 *);
  void (*v74)(__int128 *, _QWORD);
  uint64_t *v75;
  uint64_t *v76;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t (*v78)(__int128 *);
  void (*v79)(__int128 *, _QWORD);
  void (*v80)(__int128 *, _QWORD);
  unint64_t *v81;
  unint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void);
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;

  if (*(_BYTE *)(a2 + 16) != 1)
    return 0;
  v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1B88BED58, &v93);
  v5 = v93;
  if (!(_QWORD)v93)
    return 0;
  v6 = *((_QWORD *)&v93 + 1);
  v90 = v94;
  v91 = v95;
  sub_1B885DBF8(v93);
  swift_retain();
  v7 = sub_1B8896190((uint64_t)&unk_1E6E9D540);
  v9 = *(void (**)(__int128 *, _QWORD))(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_153;
  swift_bridgeObjectRetain();
  v11 = sub_1B8873F28((uint64_t)v9, v8);
  if ((v12 & 1) == 0)
  {
LABEL_152:
    swift_bridgeObjectRelease();
LABEL_153:
    result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  v13 = v11;
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v13) = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v93) = v13;
  v14 = sub_1B885FD04();
  v15 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)((uint64_t)v9, v8, (unsigned __int8 *)&v93, v14 & 1);
  v16 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1 + 232))(0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 576))(v16) & 1) != 0
    && (v9 == (void (*)(__int128 *, _QWORD))45 && v8 == 0xE100000000000000 || (sub_1B8913050() & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED561C38);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B8915DF0;
    *(_QWORD *)(v17 + 32) = v15;
    *(_QWORD *)&v93 = v17;
    sub_1B8912CA8();
    v18 = v93;
    v19 = *(void (**)(uint64_t))(*(_QWORD *)v5 + 400);
    swift_retain();
    v19(v18);
    sub_1B885DC28(v5);
LABEL_40:
    swift_release();
    swift_release();
LABEL_41:
    v30 = v5;
    goto LABEL_42;
  }
  v20 = *(uint64_t (**)(void))(*(_QWORD *)v5 + 416);
  v21 = ((uint64_t (*)(unint64_t))v20)(v6);
  if (!v21)
  {
    swift_release();
LABEL_46:
    swift_release();
    sub_1B885DC28(v5);
    sub_1B885DC28(v5);
    return 0;
  }
  v22 = v21;
  v86 = v20;
  v23 = (uint64_t (*)(void))v15;
  v24 = v9 == (void (*)(__int128 *, _QWORD))45 && v8 == 0xE100000000000000;
  v25 = v24;
  v87 = v25;
  v89 = v21;
  if (v24)
    goto LABEL_158;
  if ((sub_1B8913050() & 1) == 0)
  {
    v37 = *(_BYTE *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v93) = v37;
    v92 = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92)
      || (LOBYTE(v93) = v37, v92 = 18,
                             static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92)))
    {
LABEL_45:
      swift_release();
      swift_release();
      goto LABEL_46;
    }
  }
  if ((sub_1B8913050() & 1) != 0)
  {
LABEL_158:
    v26 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v93) = *(_BYTE *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    v22 = v89;
    if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) != 0)
    {
      LOBYTE(v93) = v26;
      v92 = 4;
      sub_1B885DDA0();
      v22 = v89;
      if ((sub_1B8912AA4() & 1) == 0)
      {
        LOBYTE(v93) = v26;
        v92 = 3;
        v22 = v89;
        if ((sub_1B8912AA4() & 1) == 0)
        {
          v52 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
          }
          else
          {
            v53 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
            swift_retain();
            v8 = v53(&v93);
            if (!(*v54 >> 62))
            {
              v9 = *(void (**)(__int128 *, _QWORD))((*v54 & 0xFFFFFFFFFFFFF8) + 0x10);
              if ((uint64_t)v9 >= v52)
                goto LABEL_78;
              goto LABEL_143;
            }
          }
          swift_bridgeObjectRetain();
          v9 = (void (*)(__int128 *, _QWORD))sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if ((uint64_t)v9 >= v52)
          {
LABEL_78:
            if ((v52 & 0x8000000000000000) == 0)
            {
              sub_1B88604E0(v6 + 1, v6 + 1, (uint64_t)v23);
              ((void (*)(__int128 *, _QWORD))v8)(&v93, 0);
              goto LABEL_123;
            }
            goto LABEL_144;
          }
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
      }
    }
  }
  v88 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  v27 = *(_BYTE *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v93) = v27;
  if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0)
  {
    LOBYTE(v93) = v27;
    if ((CalculateExpression.TokenType.isPostfixOperator.getter() & 1) == 0)
    {
      v26 = (uint64_t)v23;
      if ((v87 & 1) != 0
        || ((v38 = sub_1B8913050(), v9 == (void (*)(__int128 *, _QWORD))43)
          ? (v39 = v8 == 0xE100000000000000)
          : (v39 = 0),
            !v39 ? (v40 = 0) : (v40 = 1),
            (v38 & 1) != 0 || (v40 & 1) != 0 || (sub_1B8913050() & 1) != 0))
      {
        LOBYTE(v93) = v27;
        v92 = 1;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
        {
          v23 = *(uint64_t (**)(void))(*(_QWORD *)v89 + 208);
          v41 = v23();
          v43 = sub_1B886B504(v41, v42);
          v45 = v44;
          swift_bridgeObjectRelease();
          if (v45)
          {
            if (v43 == 101 && v45 == 0xE100000000000000)
            {
              v46 = swift_bridgeObjectRelease();
LABEL_88:
              *(_QWORD *)&v93 = ((uint64_t (*)(uint64_t))v23)(v46);
              *((_QWORD *)&v93 + 1) = v60;
              swift_bridgeObjectRetain();
              sub_1B8912B58();
              swift_bridgeObjectRelease();
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v89 + 216))(v93, *((_QWORD *)&v93 + 1));
              goto LABEL_123;
            }
            v59 = sub_1B8913050();
            v46 = swift_bridgeObjectRelease();
            if ((v59 & 1) != 0)
              goto LABEL_88;
          }
        }
      }
      v61 = *(_BYTE *)(v89 + v88);
      LOBYTE(v93) = v61;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
      {
        LOBYTE(v93) = v61;
        v92 = 16;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
        {
          LOBYTE(v93) = v61;
          v92 = 15;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92)
            || (v87 & 1) == 0 && (sub_1B8913050() & 1) == 0)
          {
            LOBYTE(v93) = v61;
            v92 = 18;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
              goto LABEL_45;
          }
        }
      }
      v33 = v6 + 1;
      if (!__OFADD__(v6, 1))
      {
        v23 = *(uint64_t (**)(void))(*(_QWORD *)v5 + 408);
        swift_retain();
        v8 = ((uint64_t (*)(__int128 *))v23)(&v93);
        if (!(*v62 >> 62))
        {
          v9 = *(void (**)(__int128 *, _QWORD))((*v62 & 0xFFFFFFFFFFFFF8) + 0x10);
          if ((uint64_t)v9 < v33)
          {
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
LABEL_98:
          if ((v33 & 0x8000000000000000) == 0)
          {
            sub_1B88604E0(v33, v33, v26);
            ((void (*)(__int128 *, _QWORD))v8)(&v93, 0);
            LOBYTE(v93) = *(_BYTE *)(v89 + v88);
            v92 = 18;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
            {
              v63 = (void (*)(__int128 *, _QWORD))((uint64_t (*)(__int128 *))v23)(&v93);
              sub_1B885DC54(v6);
              swift_release();
              v63(&v93, 0);
            }
            goto LABEL_123;
          }
          goto LABEL_139;
        }
LABEL_137:
        swift_bridgeObjectRetain();
        v9 = (void (*)(__int128 *, _QWORD))sub_1B8912FD8();
        swift_bridgeObjectRelease();
        if ((uint64_t)v9 < v33)
          goto LABEL_138;
        goto LABEL_98;
      }
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
  }
  v28 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  LOBYTE(v93) = *((_BYTE *)v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v92 = 9;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
  {
    if (!(*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))()
      || (v29 = CalculateExpression.engine.getter(), swift_release(), v29 != 1))
    {
      LOBYTE(v93) = *(_BYTE *)(v89 + v88);
      v92 = *((_BYTE *)v23 + v28);
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
      {
        *(_QWORD *)&v93 = v5;
        *((_QWORD *)&v93 + 1) = v6;
        v94 = v90;
        v95 = v91;
        sub_1B88831BC((void (*)(unsigned __int8 *, _QWORD))v23, (uint64_t *)&v93);
        sub_1B885DC28(v5);
        swift_release();
        swift_release();
        swift_release();
        v30 = v5;
LABEL_42:
        sub_1B885DC28(v30);
        return 1;
      }
    }
  }
  v31 = *(_BYTE *)(v89 + v88);
  LOBYTE(v93) = v31;
  v32 = *((_BYTE *)v23 + v28);
  v26 = (uint64_t)v23;
  v92 = v32;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92)
    && ((*(uint64_t (**)(void))(*(_QWORD *)v89 + 232))() & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1B885DC28(v5);
    goto LABEL_41;
  }
  LOBYTE(v93) = v31;
  v92 = 8;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92)
    || (LOBYTE(v93) = v31, v92 = 9, static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92))
    && (!(*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))()
     || (v47 = CalculateExpression.engine.getter(), swift_release(), v47 != 1)))
  {
    v33 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v34 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
      swift_retain();
      v8 = v34(&v93);
      if (!(*v35 >> 62))
      {
        if (*(_QWORD *)((*v35 & 0xFFFFFFFFFFFFF8) + 0x10) >= v33)
          goto LABEL_37;
        goto LABEL_134;
      }
    }
    swift_bridgeObjectRetain();
    v84 = sub_1B8912FD8();
    swift_bridgeObjectRelease();
    if (v84 >= v33)
    {
LABEL_37:
      if ((v33 & 0x8000000000000000) == 0)
      {
        sub_1B88604E0(v6 + 1, v6 + 1, (uint64_t)v23);
        ((void (*)(__int128 *, _QWORD))v8)(&v93, 0);
LABEL_39:
        sub_1B885DC28(v5);
        swift_release();
        goto LABEL_40;
      }
      goto LABEL_135;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  LOBYTE(v93) = *(_BYTE *)(v89 + v88);
  v92 = 7;
  v48 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v93, &v92);
  v23 = v86;
  if ((v48 & 1) != 0)
  {
    v48 = (*(uint64_t (**)(void))(*(_QWORD *)v89 + 280))();
    if (v48)
    {
      if (((*(uint64_t (**)(void))(*(_QWORD *)v48 + 568))() & 1) == 0)
      {
        v8 = v6 + 1;
        if (!__OFADD__(v6, 1))
        {
          v64 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
          swift_retain();
          v9 = (void (*)(__int128 *, _QWORD))v64(&v93);
          if (!(*v65 >> 62))
          {
            if (*(_QWORD *)((*v65 & 0xFFFFFFFFFFFFF8) + 0x10) < v8)
            {
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
              goto LABEL_152;
            }
LABEL_104:
            if ((v8 & 0x8000000000000000) == 0)
            {
              sub_1B88604E0(v8, v8, v26);
              v9(&v93, 0);
              sub_1B885DC28(v5);
              swift_release();
              swift_release();
              goto LABEL_40;
            }
            goto LABEL_151;
          }
LABEL_149:
          swift_bridgeObjectRetain();
          v85 = sub_1B8912FD8();
          swift_bridgeObjectRelease();
          if (v85 < v8)
            goto LABEL_150;
          goto LABEL_104;
        }
LABEL_148:
        __break(1u);
        goto LABEL_149;
      }
      v48 = swift_release();
    }
  }
  v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 392))(v48);
  if (!(v49 >> 62))
  {
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_72;
  }
LABEL_140:
  v50 = sub_1B8912FD8();
LABEL_72:
  v51 = swift_bridgeObjectRelease();
  if (v50 == 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 424))(v51);
    goto LABEL_39;
  }
  v55 = v6 - 1;
  if (__OFSUB__(v6, 1))
    goto LABEL_145;
  v56 = ((uint64_t (*)(unint64_t))v23)(v6 - 1);
  if (v56)
  {
    v57 = *(_BYTE *)(v56 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v93) = v57;
    v92 = 15;
    sub_1B885DDA0();
    if ((sub_1B8912AA4() & 1) != 0)
    {
      v58 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v93);
      sub_1B885DC54(v6);
      swift_release();
      v58(&v93, 0);
      goto LABEL_39;
    }
  }
  if ((v87 & 1) != 0)
    goto LABEL_85;
  if ((sub_1B8913050() & 1) != 0)
    goto LABEL_112;
  v66 = ((uint64_t (*)(unint64_t))v23)(v6 - 1);
  if (!v66)
    goto LABEL_112;
  v67 = *(_BYTE *)(v66 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v93) = v67;
  if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0
    || (v68 = ((uint64_t (*)(unint64_t))v23)(v6 - 1)) != 0
    && (v69 = *(_BYTE *)(v68 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        LOBYTE(v93) = v69,
        v92 = 9,
        sub_1B885DDA0(),
        (sub_1B8912AA4() & 1) != 0))
  {
LABEL_112:
    if (v9 == (void (*)(__int128 *, _QWORD))37 && v8 == 0xE100000000000000)
    {
LABEL_113:
      v70 = ((uint64_t (*)(unint64_t))v23)(v6 - 1);
      if (!v70
        || (v71 = *(_BYTE *)(v70 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
            swift_release(),
            LOBYTE(v93) = v71,
            v92 = 9,
            sub_1B885DDA0(),
            (sub_1B8912AA4() & 1) == 0))
      {
LABEL_116:
        v73 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
        swift_retain();
        v74 = (void (*)(__int128 *, _QWORD))v73(&v93);
        v76 = v75;
        v8 = *v75;
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v76 = v8;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
          sub_1B885DD38(v8);
        if ((v6 & 0x8000000000000000) == 0)
        {
          if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v26;
            swift_release();
            sub_1B8912CA8();
            v74(&v93, 0);
            goto LABEL_123;
          }
          goto LABEL_147;
        }
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
        goto LABEL_148;
      }
      v72 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408))(&v93);
      sub_1B885DC54(v6);
      swift_release();
      v72(&v93, 0);
LABEL_123:
      sub_1B885DC28(v5);
      swift_release();
      swift_release();
      swift_release();
      v30 = v5;
      goto LABEL_42;
    }
LABEL_85:
    if ((sub_1B8913050() & 1) == 0)
      goto LABEL_116;
    goto LABEL_113;
  }
  v78 = *(uint64_t (**)(__int128 *))(*(_QWORD *)v5 + 408);
  v79 = (void (*)(__int128 *, _QWORD))v78(&v93);
  sub_1B885DC54(v6);
  swift_release();
  v79(&v93, 0);
  swift_retain();
  v80 = (void (*)(__int128 *, _QWORD))v78(&v93);
  v82 = v81;
  v83 = *v81;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v82 = v83;
  if (!(_DWORD)result || (v83 & 0x8000000000000000) != 0 || (v83 & 0x4000000000000000) != 0)
    sub_1B885DD38(v83);
  if ((v55 & 0x8000000000000000) != 0)
    goto LABEL_154;
  if (v55 < *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 8 * v55 + 0x20) = v26;
    swift_release();
    sub_1B8912CA8();
    v80(&v93, 0);
    goto LABEL_123;
  }
LABEL_155:
  __break(1u);
  return result;
}

uint64_t sub_1B88BED58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  BOOL v9;
  char v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  unsigned __int8 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v2 = *a1;
  v22 = *(_OWORD *)(a1 + 1);
  v3 = a1[3];
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  if (v5 == 45 && v4 == 0xE100000000000000)
    goto LABEL_15;
  v7 = sub_1B8913050();
  v9 = v5 == 43 && v4 == 0xE100000000000000;
  if ((v7 & 1) != 0 || v9 || (v10 = 0, (sub_1B8913050() & 1) != 0))
  {
    if ((sub_1B8913050() & 1) == 0)
    {
      v13 = swift_retain();
      goto LABEL_21;
    }
LABEL_15:
    v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 560);
    v12 = swift_retain();
    if ((v11(v12) & 1) != 0
      || ((*(uint64_t (**)(void))(*(_QWORD *)v2 + 568))() & 1) != 0
      || (v13 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 544))(), (v13 & 1) != 0))
    {
      (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v2 + 272))(&v24);
      v23 = 3;
      sub_1B88797D8();
      v13 = sub_1B8912AA4();
      if ((v13 & 1) == 0)
      {
        v10 = 1;
LABEL_33:
        swift_release();
        return v10 & 1;
      }
    }
LABEL_21:
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 456))(v13) & 1) != 0
      && (v24 = v2, v25 = v22, v26 = v3, (v14 = CalculateExpression.RichExpression.EditingToken.token.getter()) != 0))
    {
      v15 = v14;
      LOBYTE(v24) = *(_BYTE *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v23 = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v24, &v23)
        && (v16 = (*(uint64_t (**)(void))(*(_QWORD *)v15 + 208))(),
            v18 = sub_1B886B504(v16, v17),
            v20 = v19,
            swift_bridgeObjectRelease(),
            v20))
      {
        if (v18 == 101 && v20 == 0xE100000000000000)
          v10 = 1;
        else
          v10 = sub_1B8913050();
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = 0;
      }
      swift_release();
    }
    else
    {
      v10 = 0;
    }
    goto LABEL_33;
  }
  return v10 & 1;
}

void sub_1B88BEF94()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CalculateExpression.BasicOperatorOperation.deinit()
{
  uint64_t v0;

  v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.BasicOperatorOperation.__deallocating_deinit()
{
  CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CalculateExpression.BasicOperatorOperation()
{
  return objc_opt_self();
}

uint64_t method lookup function for CalculateExpression.BasicOperatorOperation()
{
  return swift_lookUpClassMethod();
}

void sub_1B88BF898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B88BF9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B88BFE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unint64_t treeDecimalValue(double *a1)
{
  int v1;
  double v3;
  int v4;

  v1 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 == 1)
  {
    v3 = a1[4];
    if (my_rnd_mode)
      v4 = 4;
    else
      v4 = 0;
    return __binary64_to_bid128(v4, &my_fpsf, v3);
  }
  else if (v1 == 2)
  {
    return *((_QWORD *)a1 + 6);
  }
  else if (v1 == 4)
  {
    return *((_QWORD *)a1 + 8);
  }
  else
  {
    return 0;
  }
}

double *newConstantNode(unsigned __int8 *a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;

  if (my_rnd_mode)
    v1 = 4;
  else
    v1 = 0;
  v2 = __bid128_from_string(a1, v1, &my_fpsf);
  return newDecimalNode(v2, v3);
}

double *newDecimalNode(unint64_t a1, unint64_t a2)
{
  double *v4;
  unint64_t v5;

  v4 = (double *)malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v4[4] = __bid128_to_binary64(a1, a2, 4, &my_fpsf);
  *((_QWORD *)v4 + 6) = a1;
  *((_QWORD *)v4 + 7) = a2;
  v5 = -1;
  if (!__bid128_quiet_greater_equal(a1, a2, 0xFFFFFFFFFFFFFFFFLL, 0x3040000000000000uLL, &my_fpsf))
    v5 = __bid128_to_uint64_int(a1, a2, &my_fpsf);
  *((_QWORD *)v4 + 8) = v5;
  *((_QWORD *)v4 + 1) = functionConstant;
  *(_DWORD *)v4 = g_PreferredType;
  *((_DWORD *)v4 + 51) = 0;
  return v4;
}

void functionConstant(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionConstant_block_invoke;
  v2[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  v2[5] = a1;
  evaluateUnary(a1, a2, v2);
}

uint64_t __functionConstant_block_invoke(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;

  v2 = *(_QWORD *)(result + 32);
  v1 = *(_QWORD *)(result + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  v3 = *(_QWORD *)(result + 32);
  v4 = *(int **)(result + 40);
  *(_QWORD *)(v3 + 64) = *((_QWORD *)v4 + 8);
  if (*((_BYTE *)v4 + 203))
    g_isTrivial = 0;
  v5 = g_PowNestingLevel;
  if (!g_PowNestingLevel && (g_foundFirstCoefficient & 1) == 0)
  {
    v6 = *v4;
    if (*v4 == 1)
    {
      if (my_rnd_mode)
        v7 = 4;
      else
        v7 = 0;
      result = __binary64_to_bid128(v7, &my_fpsf, *((double *)v4 + 4));
    }
    else if (v6 == 2)
    {
      result = *((_QWORD *)v4 + 6);
      v8 = *((_QWORD *)v4 + 7);
    }
    else
    {
      if (v6 == 4)
        result = *((_QWORD *)v4 + 8);
      else
        result = 0;
      v8 = 0x3040000000000000;
    }
    g_firstCoefficient_0 = result;
    qword_1ED563A58 = v8;
    g_foundFirstCoefficient = 1;
    *(_BYTE *)(v3 + 202) = 1;
  }
  if (g_GeneratingConvertTerm == 1 && !v5)
  {
    v9 = *v4;
    if (*v4 == 1)
    {
      if (my_rnd_mode)
        v11 = 4;
      else
        v11 = 0;
      v10 = __binary64_to_bid128(v11, &my_fpsf, *((double *)v4 + 4));
    }
    else if (v9 == 2)
    {
      v10 = *((_QWORD *)v4 + 6);
      v12 = *((_QWORD *)v4 + 7);
    }
    else
    {
      if (v9 == 4)
        v10 = *((_QWORD *)v4 + 8);
      else
        v10 = 0;
      v12 = 0x3040000000000000;
    }
    result = __bid128_quiet_equal(v10, v12, 1uLL, 0x3040000000000000uLL, &my_fpsf);
    if (!(_DWORD)result)
    {
      *(_DWORD *)(v3 + 204) = 10;
      *(_QWORD *)(v3 + 48) = 0;
      *(_QWORD *)(v3 + 56) = 0x7C00000000000000;
    }
  }
  return result;
}

void evaluateUnary(uint64_t a1, uint64_t a2, void *a3)
{
  void (**v5)(id, _OWORD *, double);
  int v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  memset(v7, 0, sizeof(v7));
  evaluateTree(*(_QWORD *)(a1 + 16), (uint64_t)v7);
  *(_QWORD *)(a2 + 8) = functionNoOp;
  *(_DWORD *)a2 = *(_DWORD *)a1;
  my_rnd_mode = 1;
  my_fpsf = 0;
  if (HIDWORD(v18))
  {
    *(_DWORD *)(a2 + 204) = HIDWORD(v18);
    goto LABEL_17;
  }
  if ((~*((_QWORD *)&v9 + 1) & 0x7C00000000000000) == 0)
  {
    *(_QWORD *)(a2 + 32) = 0x7FF8000000000000;
    *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
LABEL_16:
    *(_QWORD *)(a2 + 48) = 0;
    goto LABEL_17;
  }
  v5[2](v5, v7, *(double *)&v8);
  if (!*(_DWORD *)(a2 + 204))
  {
    if ((my_fpsf & 4) != 0)
    {
      v6 = 1;
    }
    else if ((my_fpsf & 8) != 0)
    {
      v6 = 3;
    }
    else if ((my_fpsf & 0x10) != 0)
    {
      v6 = 2;
    }
    else
    {
      v6 = 4 * (my_fpsf & 1);
    }
    *(_DWORD *)(a2 + 204) = v6;
  }
  if (__bid128_quiet_equal(*(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), 0, 0x3040000000000000uLL, &my_fpsf))
  {
    *(_QWORD *)(a2 + 56) = 0x3040000000000000;
    goto LABEL_16;
  }
LABEL_17:
  if (!*(_DWORD *)(a2 + 204))
  {
    if ((~*(_QWORD *)(a2 + 56) & 0x7C00000000000000) != 0)
      goto LABEL_21;
    *(_DWORD *)(a2 + 204) = 4;
  }
  *(_QWORD *)(a2 + 32) = 0x7FF8000000000000;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
LABEL_21:

}

uint64_t evaluateTree(uint64_t result, uint64_t a2)
{
  uint64_t (*v2)(void);

  *(_OWORD *)(a2 + 176) = 0u;
  *(_OWORD *)(a2 + 192) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  if (result)
  {
    *(_DWORD *)a2 = *(_DWORD *)result;
    v2 = *(uint64_t (**)(void))(result + 8);
    if (v2)
    {
      return v2();
    }
    else
    {
      *(_QWORD *)(a2 + 8) = functionNoOp;
      *(_DWORD *)a2 = *(_DWORD *)result;
      *(_QWORD *)(a2 + 32) = 0x7FF8000000000000;
      *(_QWORD *)(a2 + 48) = 0;
      *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
    }
  }
  return result;
}

uint64_t functionNoOp(uint64_t a1, uint64_t a2)
{
  _QWORD v3[6];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __functionNoOp_block_invoke;
  v3[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v3[4] = a2;
  v3[5] = a1;
  return evaluateUnary(a1, a2, v3);
}

__n128 __functionNoOp_block_invoke(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *(_QWORD *)(a1 + 32);
  v1 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v3 + 64);
  v5 = *(_OWORD *)(v3 + 120);
  v6 = *(_OWORD *)(v3 + 104);
  v7 = *(_OWORD *)(v3 + 88);
  *(_OWORD *)(v4 + 72) = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v4 + 88) = v7;
  *(_OWORD *)(v4 + 104) = v6;
  *(_OWORD *)(v4 + 120) = v5;
  result = *(__n128 *)(v3 + 136);
  v9 = *(_OWORD *)(v3 + 152);
  v10 = *(_OWORD *)(v3 + 168);
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(v3 + 184);
  *(_OWORD *)(v4 + 168) = v10;
  *(_OWORD *)(v4 + 152) = v9;
  *(__n128 *)(v4 + 136) = result;
  return result;
}

_QWORD *newUnitNode(const char *a1)
{
  _QWORD *v2;
  id v3;
  void *v4;

  v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[4] = 0x3FF0000000000000;
  v2[6] = 1;
  v2[7] = 0x3040000000000000;
  v2[8] = 1;
  v3 = (id)g_unitsInfo;
  objc_msgSend(v3, "objectAtIndexedSubscript:", (int)strtoull(a1, 0, 10));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  LODWORD(v3) = objc_msgSend(v4, "unitID");
  LODWORD(v2[(int)objc_msgSend(v4, "unitType") + 9]) = (_DWORD)v3;
  HIDWORD(v2[(int)objc_msgSend(v4, "unitType") + 9]) = 1;
  *((_BYTE *)v2 + 201) = 1;
  v2[1] = functionUnit;
  *(_DWORD *)v2 = g_PreferredType;
  *((_DWORD *)v2 + 51) = 0;

  return v2;
}

void functionUnit(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionUnit_block_invoke;
  v2[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  v2[5] = a1;
  evaluateUnary(a1, a2, v2);
}

void __functionUnit_block_invoke(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  int *v52;
  int v53;
  uint64_t v54;
  double v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int v72;

  v2 = 0;
  v3 = 0;
  v4 = 0;
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v5 + 32);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v5 + 48);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v9 = (int *)(v8 + 76);
  do
  {
    v10 = *v9;
    v9 += 2;
    if (v10)
    {
      if (v4 > 0)
        goto LABEL_17;
      v4 = 1;
      v3 = v2;
    }
    ++v2;
  }
  while (v2 != 16);
  if (!v3)
  {
LABEL_17:
    v32 = *(_OWORD *)(v8 + 72);
    v33 = *(_OWORD *)(v8 + 88);
    v34 = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 104) = v34;
    *(_OWORD *)(v7 + 88) = v33;
    *(_OWORD *)(v7 + 72) = v32;
    v35 = *(_OWORD *)(v8 + 136);
    v36 = *(_OWORD *)(v8 + 152);
    v37 = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 168) = v37;
    *(_OWORD *)(v7 + 152) = v36;
    *(_OWORD *)(v7 + 136) = v35;
    return;
  }
  v11 = *(int *)(v8 + 8 * v3 + 72);
  v12 = (id)g_unitsInfo;
  objc_msgSend(v12, "objectAtIndexedSubscript:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  addUnitToSuggestions(v13);
  if ((g_GeneratingConvertTerm & 1) != 0
    || (objc_msgSend(v13, "typeInfo"),
        v14 = (void *)objc_claimAutoreleasedReturnValue(),
        v15 = objc_msgSend(v14, "isDecomposable"),
        v14,
        !v15))
  {
    v39 = *(_QWORD *)(a1 + 32);
    v38 = *(_QWORD *)(a1 + 40);
    v40 = *(_OWORD *)(v38 + 152);
    v41 = *(_OWORD *)(v38 + 168);
    v42 = *(_OWORD *)(v38 + 184);
    *(_OWORD *)(v39 + 136) = *(_OWORD *)(v38 + 136);
    *(_OWORD *)(v39 + 184) = v42;
    *(_OWORD *)(v39 + 168) = v41;
    *(_OWORD *)(v39 + 152) = v40;
    v43 = *(_OWORD *)(v38 + 72);
    v44 = *(_OWORD *)(v38 + 88);
    v45 = *(_OWORD *)(v38 + 104);
    *(_OWORD *)(v39 + 120) = *(_OWORD *)(v38 + 120);
    *(_OWORD *)(v39 + 104) = v45;
    *(_OWORD *)(v39 + 88) = v44;
    *(_OWORD *)(v39 + 72) = v43;
  }
  else
  {
    objc_msgSend(v13, "typeInfo");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "decompositionCoefficient");
    v19 = v18;

    v20 = objc_msgSend(v13, "isInverted");
    v22 = objc_msgSend(v13, "baseNumerator");
    if (my_rnd_mode)
      v23 = 4;
    else
      v23 = 0;
    if (v20)
    {
      v24 = __bid128_div(v17, v19, v22, v21, v23, &my_fpsf);
      v26 = v25;
      v28 = objc_msgSend(v13, "baseDenominator");
      if (my_rnd_mode)
        v29 = 4;
      else
        v29 = 0;
      v30 = __bid128_mul(v24, v26, v28, v27, v29, &my_fpsf);
    }
    else
    {
      v46 = __bid128_mul(v17, v19, v22, v21, v23, &my_fpsf);
      v48 = v47;
      v50 = objc_msgSend(v13, "baseDenominator");
      if (my_rnd_mode)
        v51 = 4;
      else
        v51 = 0;
      v30 = __bid128_div(v46, v48, v50, v49, v51, &my_fpsf);
    }
    v52 = *(int **)(a1 + 32);
    v53 = *v52;
    if (*v52 == 1)
    {
      if (my_rnd_mode)
        v56 = 4;
      else
        v56 = 0;
      v55 = *((double *)v52 + 4);
      *((double *)v52 + 4) = v55 * __bid128_to_binary64(v30, v31, v56, &my_fpsf);
    }
    else if (v53 == 2)
    {
      if (my_rnd_mode)
        v57 = 4;
      else
        v57 = 0;
      *((_QWORD *)v52 + 6) = __bid128_mul(*((_QWORD *)v52 + 6), *((_QWORD *)v52 + 7), v30, v31, v57, &my_fpsf);
      *((_QWORD *)v52 + 7) = v58;
    }
    else if (v53 == 4)
    {
      v54 = *((_QWORD *)v52 + 8);
      v72 = 0;
      *((_QWORD *)v52 + 8) = __bid128_to_uint64_int(v30, v31, &v72) * v54;
    }
    objc_msgSend(v13, "typeInfo");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    v60 = v59;
    if (v59)
    {
      objc_msgSend(v59, "decomposition");
    }
    else
    {
      v70 = 0u;
      v71 = 0u;
      v68 = 0u;
      v69 = 0u;
      v66 = 0u;
      v67 = 0u;
      v64 = 0u;
      v65 = 0u;
    }
    v61 = *(_QWORD *)(a1 + 32);
    *(_OWORD *)(v61 + 136) = v68;
    *(_OWORD *)(v61 + 152) = v69;
    *(_OWORD *)(v61 + 168) = v70;
    *(_OWORD *)(v61 + 184) = v71;
    *(_OWORD *)(v61 + 72) = v64;
    *(_OWORD *)(v61 + 88) = v65;
    *(_OWORD *)(v61 + 104) = v66;
    *(_OWORD *)(v61 + 120) = v67;

    if (objc_msgSend(v13, "isInverted"))
    {
      v62 = 0;
      v63 = *(_QWORD *)(a1 + 32) + 76;
      do
      {
        *(_DWORD *)(v63 + v62) = -*(_DWORD *)(v63 + v62);
        v62 += 8;
      }
      while (v62 != 128);
    }
  }

}

void addUnitToSuggestions(void *a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  BOOL v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (id)g_unitSuggestions;
  v3 = (id)g_unitSuggestionsSet;
  v4 = v3;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v1, "unitID"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "containsObject:", v6) & 1) == 0)
    {
      objc_msgSend(v4, "addObject:", v6);
      objc_msgSend(v2, "addObject:", v6);
      v7 = (id)g_unitsInfo;
      v14 = 0u;
      v15 = 0u;
      v16 = 0u;
      v17 = 0u;
      objc_msgSend(v1, "subunitIDs", 0);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v15;
        do
        {
          v12 = 0;
          do
          {
            if (*(_QWORD *)v15 != v11)
              objc_enumerationMutation(v8);
            objc_msgSend(v7, "objectAtIndexedSubscript:", (int)objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v12), "intValue"));
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            addUnitToSuggestions();

            ++v12;
          }
          while (v10 != v12);
          v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        }
        while (v10);
      }

    }
  }

}

_QWORD *newUnitIDNode(int a1)
{
  _QWORD *v2;
  void *v3;
  int v4;

  v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[4] = 0x3FF0000000000000;
  v2[6] = 1;
  v2[7] = 0x3040000000000000;
  v2[8] = 1;
  objc_msgSend((id)g_unitsInfo, "objectAtIndexedSubscript:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "unitID");
  LODWORD(v2[(int)objc_msgSend(v3, "unitType") + 9]) = v4;
  HIDWORD(v2[(int)objc_msgSend(v3, "unitType") + 9]) = 1;
  *((_BYTE *)v2 + 201) = 1;
  v2[1] = functionUnit;
  *(_DWORD *)v2 = g_PreferredType;
  *((_DWORD *)v2 + 51) = 0;

  return v2;
}

_QWORD *newVariableNode(const char *a1)
{
  _QWORD *v2;

  v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[1] = functionVariable;
  *(_DWORD *)v2 = 4;
  *((_DWORD *)v2 + 51) = 0;
  v2[8] = (int)strtoull(a1, 0, 10);
  return v2;
}

uint64_t functionVariable(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[8];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (g_variableResultTrees
    && (v3 = *(_QWORD *)(result + 64), (v3 & 0x80000000) == 0)
    && g_variableResultTreesCount > (int)v3
    && (result = *(_QWORD *)(g_variableResultTrees + 8 * *(_QWORD *)(result + 64))) != 0)
  {
    evaluateTree(result, a2);
    for (i = 0; i != 128; i += 8)
    {
      if (*(_DWORD *)(a2 + i + 76))
      {
        objc_msgSend((id)g_unitsInfo, "objectAtIndexedSubscript:", *(int *)(a2 + i + 72));
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        addUnitToSuggestions(v5);

      }
    }
    result = UnitCountDecompose(*(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), a2 + 72, v11, (_DWORD *)(a2 + 204));
    v6 = v11[5];
    *(_OWORD *)(a2 + 136) = v11[4];
    *(_OWORD *)(a2 + 152) = v6;
    v7 = v11[7];
    *(_OWORD *)(a2 + 168) = v11[6];
    *(_OWORD *)(a2 + 184) = v7;
    v8 = v11[1];
    *(_OWORD *)(a2 + 72) = v11[0];
    *(_OWORD *)(a2 + 88) = v8;
    v9 = v11[3];
    *(_OWORD *)(a2 + 104) = v11[2];
    *(_QWORD *)(a2 + 48) = result;
    *(_QWORD *)(a2 + 56) = v10;
    *(_OWORD *)(a2 + 120) = v9;
  }
  else
  {
    *(_DWORD *)a2 = 2;
    *(_DWORD *)(a2 + 204) = 11;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
  }
  return result;
}

uint64_t UnitCountDecompose(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _DWORD *a5)
{
  uint64_t v9;
  int *v10;
  void *v11;
  void *v12;
  char v13;
  int v14;
  int v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  _DWORD *v52;
  uint64_t v53;
  id v54;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[8];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  v54 = (id)g_unitsInfo;
  v9 = 0;
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  a4[5] = 0u;
  a4[6] = 0u;
  a4[7] = 0u;
  v52 = a5;
  do
  {
    v10 = (int *)(a3 + 8 * v9);
    if (v10[1])
    {
      v56 = a1;
      objc_msgSend(v54, "objectAtIndexedSubscript:", *v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "typeInfo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "isDecomposable");

      if ((v13 & 1) != 0)
      {
        v14 = v10[1];
        if (objc_msgSend(v11, "isInverted"))
          v15 = -v14;
        else
          v15 = v14;
        objc_msgSend(v11, "typeInfo", v52);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "decompositionCoefficient");
        v53 = v18;

        v19 = objc_msgSend(v11, "baseNumerator");
        if (v14 >= 0)
          v21 = v14;
        else
          v21 = -v14;
        if (v15 < 0)
          v22 = 0xB040000000000000;
        else
          v22 = 0x3040000000000000;
        if (my_rnd_mode)
          v23 = 4;
        else
          v23 = 0;
        v25 = bid128_pow_fix(v19, v20, v21, v22, v23, &my_fpsf);
        if (my_rnd_mode)
          v26 = 4;
        else
          v26 = 0;
        v27 = __bid128_mul(v17, v53, v25, v24, v26, &my_fpsf);
        v29 = v28;
        v30 = objc_msgSend(v11, "baseDenominator");
        if (my_rnd_mode)
          v32 = 4;
        else
          v32 = 0;
        v34 = bid128_pow_fix(v30, v31, v21, v22, v32, &my_fpsf);
        if (my_rnd_mode)
          v35 = 4;
        else
          v35 = 0;
        v36 = __bid128_div(v27, v29, v34, v33, v35, &my_fpsf);
        v38 = __bid128_mul(v56, a2, v36, v37, v35, &my_fpsf);
        a2 = v39;
        objc_msgSend(v11, "typeInfo");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = v40;
        if (v40)
        {
          objc_msgSend(v40, "decomposition");
        }
        else
        {
          v63 = 0u;
          v64 = 0u;
          v61 = 0u;
          v62 = 0u;
          v59 = 0u;
          v60 = 0u;
          v57 = 0u;
          v58 = 0u;
        }
        v70 = v61;
        v71 = v62;
        v72 = v63;
        v73 = v64;
        v66 = v57;
        v67 = v58;
        v68 = v59;
        v69 = v60;

        v42 = 0;
        a5 = v52;
        do
        {
          *(_DWORD *)((char *)&v66 + v42 + 4) *= v15;
          v42 += 8;
        }
        while (v42 != 128);
      }
      else
      {
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        v68 = 0u;
        v69 = 0u;
        v66 = 0u;
        v67 = 0u;
        *((_QWORD *)&v66 + v9) = *(_QWORD *)v10;
        v38 = v56;
      }
      v43 = a4[5];
      v65[4] = a4[4];
      v65[5] = v43;
      v44 = a4[7];
      v65[6] = a4[6];
      v65[7] = v44;
      v45 = a4[1];
      v65[0] = *a4;
      v65[1] = v45;
      v46 = a4[3];
      v65[2] = a4[2];
      v65[3] = v46;
      v48 = UnitCountMultiply((uint64_t)v65, 1uLL, 0x3040000000000000uLL, (uint64_t)&v66, (uint64_t)a4, a5);
      if (my_rnd_mode)
        v49 = 4;
      else
        v49 = 0;
      a1 = __bid128_mul(v38, a2, v48, v47, v49, &my_fpsf);
      a2 = v50;

    }
    ++v9;
  }
  while (v9 != 16);

  return a1;
}

unint64_t bid128_pow_fix(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unsigned int a5, int *a6)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  int v21;

  if (__bid128_isZero(a1, a2) && __bid128_isZero(a3, a4))
    return 0;
  v12 = __bid128_pow(a1, a2, a3, a4, a5, a6);
  v14 = v13;
  v20 = 0;
  v15 = __bid128_round_integral_exact(a1, a2, 4, &v20);
  if (__bid128_quiet_equal(a1, a2, v15, v16, &v20))
  {
    v21 = 0;
    v17 = __bid128_round_integral_exact(a3, a4, 4, &v21);
    if (__bid128_quiet_equal(a3, a4, v17, v18, &v21))
    {
      if (__bid128_quiet_greater_equal(a3, a4, 0, 0x3040000000000000uLL, a6))
        return __bid128_round_integral_exact(v12, v14, a5, a6);
    }
  }
  return v12;
}

unint64_t UnitCountMultiply(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  uint64_t v12;
  uint64_t i;
  int v14;
  uint64_t v15;
  _DWORD *v16;
  int v17;
  uint64_t j;
  int v19;
  int *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  int *v27;

  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    v12 = 0;
    while (!*(_DWORD *)(a1 + v12 + 4) || !*(_DWORD *)(a4 + v12 + 4) || *(_DWORD *)(a1 + v12) == *(_DWORD *)(a4 + v12))
    {
      v12 += 8;
      if (v12 == 128)
      {
        for (i = 0; i != 128; i += 8)
        {
          v14 = *(_DWORD *)(a4 + i + 4);
          if (v14)
            v15 = a4;
          else
            v15 = a1;
          v16 = (_DWORD *)(a5 + i);
          v17 = *(_DWORD *)(a1 + i + 4) + v14;
          *v16 = *(_DWORD *)(v15 + i);
          v16[1] = v17;
        }
        return a2;
      }
    }
    a2 = 0;
    if (a6)
      *a6 = 8;
  }
  else
  {
    for (j = 0; j != 128; j += 8)
    {
      v19 = *(_DWORD *)(a4 + j + 4);
      v20 = (int *)(a1 + j);
      v21 = *(_DWORD *)(a1 + j + 4);
      if (v21 | v19)
      {
        if (v21)
          v22 = v19 == 0;
        else
          v22 = 1;
        if (v22)
        {
          if (v19)
            v23 = a4;
          else
            v23 = a1;
          v24 = *(_DWORD *)(v23 + j);
        }
        else
        {
          v24 = *v20;
          v25 = *(_DWORD *)(a4 + j);
          if (*v20 != v25)
          {
            a2 = UnitCountConvertID(a2, a3, v25, *(_DWORD *)(a4 + j + 4), v24, 0, a6);
            a3 = v26;
            v24 = *v20;
            v21 = v20[1];
          }
        }
        v27 = (int *)(a5 + j);
        *v27 = v24;
        v27[1] = v21 + v19;
      }
    }
  }
  return a2;
}

unint64_t UnitCountConvertID(unint64_t a1, unint64_t a2, int a3, int a4, int a5, int a6, _DWORD *a7)
{
  unint64_t v10;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  int v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  __objc2_class **v37;
  void *v38;
  void *v39;
  void *v40;
  BOOL v41;
  void *v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  unint64_t v55;
  unint64_t v56;
  unsigned int v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  unint64_t v67;
  unsigned int v68;
  unint64_t v69;
  unint64_t v70;
  int v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unsigned int v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  unint64_t v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  double v93;
  unsigned int v94;
  unint64_t v95;
  unint64_t v96;
  BOOL v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  int v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  unsigned int v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unsigned int v111;
  void *v112;
  int v113;
  uint64_t v114;
  int v115;
  void *v116;
  int v117;
  unsigned int v118;
  unint64_t v119;
  uint64_t v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  int v125;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;

  LODWORD(v10) = a4;
  v14 = (id)g_unitsInfo;
  v15 = v14;
  if (a3 == a5)
    goto LABEL_103;
  v129 = a2;
  if (!a6
    || (objc_msgSend(v14, "objectAtIndexedSubscript:", a5),
        v16 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v16, "typeInfo"),
        v17 = (void *)objc_claimAutoreleasedReturnValue(),
        v18 = objc_msgSend(v17, "isTemperature"),
        v17,
        v16,
        !v18))
  {
    objc_msgSend(v15, "objectAtIndexedSubscript:", a5);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "typeInfo");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(v35, "isCurrency");

    if (!v36)
    {
      objc_msgSend(v15, "objectAtIndexedSubscript:", a3);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = objc_msgSend(v42, "baseNumerator");
      if ((v10 & 0x80000000) == 0)
        v45 = v10;
      else
        v45 = -(int)v10;
      if ((v10 & 0x80000000) != 0)
        v46 = 0xB040000000000000;
      else
        v46 = 0x3040000000000000;
      if (my_rnd_mode)
        v47 = 4;
      else
        v47 = 0;
      v49 = bid128_pow_fix(v43, v44, v45, v46, v47, &my_fpsf);
      if (my_rnd_mode)
        v50 = 4;
      else
        v50 = 0;
      v51 = __bid128_mul(1uLL, 0x3040000000000000, v49, v48, v50, &my_fpsf);
      v53 = v52;

      objc_msgSend(v15, "objectAtIndexedSubscript:", a3);
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      v55 = objc_msgSend(v54, "baseDenominator");
      if (my_rnd_mode)
        v57 = 4;
      else
        v57 = 0;
      v59 = bid128_pow_fix(v55, v56, v45, v46, v57, &my_fpsf);
      if (my_rnd_mode)
        v60 = 4;
      else
        v60 = 0;
      v61 = __bid128_div(v51, v53, v59, v58, v60, &my_fpsf);
      v63 = v62;

      v64 = a5;
      objc_msgSend(v15, "objectAtIndexedSubscript:", a5);
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      v66 = objc_msgSend(v65, "baseNumerator");
      if (my_rnd_mode)
        v68 = 4;
      else
        v68 = 0;
      v70 = bid128_pow_fix(v66, v67, v45, v46, v68, &my_fpsf);
      if (my_rnd_mode)
        v71 = 4;
      else
        v71 = 0;
      v72 = __bid128_div(v61, v63, v70, v69, v71, &my_fpsf);
      v74 = v73;

      objc_msgSend(v15, "objectAtIndexedSubscript:", v64);
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      v76 = objc_msgSend(v75, "baseDenominator");
      if (my_rnd_mode)
        v78 = 4;
      else
        v78 = 0;
      v80 = bid128_pow_fix(v76, v77, v45, v46, v78, &my_fpsf);
      if (my_rnd_mode)
        v81 = 4;
      else
        v81 = 0;
      v82 = __bid128_mul(v72, v74, v80, v79, v81, &my_fpsf);
      v84 = v83;

      if (my_rnd_mode)
        v85 = 4;
      else
        v85 = 0;
      v86 = __bid128_mul(a1, v129, v82, v84, v85, &my_fpsf);
      goto LABEL_98;
    }
    g_containsCurrencyConversion = 1;
    v37 = &off_1E6E9C478;
    if (!+[StocksKitCurrencyCache isEnabled](_TtC9Calculate22StocksKitCurrencyCache, "isEnabled"))
      v37 = off_1E6E9C2F0;
    -[__objc2_class shared](*v37, "shared");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    g_currencyNeedsRefresh = objc_msgSend(v38, "needsRefresh");

    -[__objc2_class shared](*v37, "shared");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "currencyData");
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    if (v40)
      v41 = g_allowCurrencyConversions == 0;
    else
      v41 = 1;
    if (v41)
    {
      a1 = 0;
      if (a7)
        *a7 = 12;
    }
    else
    {
      objc_msgSend(v15, "objectAtIndexedSubscript:", a3);
      v87 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "name");
      v88 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "objectForKey:", v88);
      v89 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "objectAtIndexedSubscript:", a5);
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v90, "name");
      v91 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "objectForKey:", v91);
      v92 = (void *)objc_claimAutoreleasedReturnValue();

      if (v89 && v92)
      {
        objc_msgSend(v89, "doubleValue");
        if (my_rnd_mode)
          v94 = 4;
        else
          v94 = 0;
        v95 = __binary64_to_bid128(v94, &my_fpsf, v93);
        v97 = (v10 & 0x80000000) != 0;
        if ((v10 & 0x80000000) == 0)
          v10 = v10;
        else
          v10 = -(int)v10;
        if (v97)
          v98 = 0xB040000000000000;
        else
          v98 = 0x3040000000000000;
        v100 = bid128_pow_fix(v95, v96, v10, v98, v94, &my_fpsf);
        if (my_rnd_mode)
          v101 = 4;
        else
          v101 = 0;
        v102 = __bid128_div(a1, v129, v100, v99, v101, &my_fpsf);
        v104 = v103;
        objc_msgSend(v92, "doubleValue");
        if (my_rnd_mode)
          v106 = 4;
        else
          v106 = 0;
        v107 = __binary64_to_bid128(v106, &my_fpsf, v105);
        v110 = bid128_pow_fix(v107, v108, v10, v98, v106, &my_fpsf);
        if (my_rnd_mode)
          v111 = 4;
        else
          v111 = 0;
        a1 = __bid128_mul(v102, v104, v110, v109, v111, &my_fpsf);
      }
      else
      {
        a1 = 0;
        if (a7)
          *a7 = 12;
      }

    }
    goto LABEL_103;
  }
  if (my_rnd_mode)
    v19 = 4;
  else
    v19 = 0;
  v20 = __bid128_div(0x12uLL, 0x3040000000000000uLL, 0xAuLL, 0x3040000000000000uLL, v19, &my_fpsf);
  v22 = v21;
  v23 = __bid128_div(0xFuLL, 0x3040000000000000uLL, 0x64uLL, 0x3040000000000000uLL, v19, &my_fpsf);
  v25 = __bid128_add(0x111uLL, 0x3040000000000000, v23, v24, v19, &my_fpsf);
  v127 = v26;
  v128 = v25;
  objc_msgSend(v15, "objectAtIndexedSubscript:", a3);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = objc_msgSend(v27, "isFahrenheit");

  if (v28)
  {
    if (my_rnd_mode)
      v29 = 4;
    else
      v29 = 0;
    v30 = __bid128_add(a1, v129, 0x20uLL, 0xB040000000000000, v29, &my_fpsf);
    v32 = __bid128_div(v30, v31, v20, v22, v29, &my_fpsf);
LABEL_83:
    a1 = v32;
    v114 = v33;
    goto LABEL_84;
  }
  objc_msgSend(v15, "objectAtIndexedSubscript:", a3);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v113 = objc_msgSend(v112, "isKelvin");

  v114 = v129;
  if (v113)
  {
    if (my_rnd_mode)
      v115 = 4;
    else
      v115 = 0;
    v32 = __bid128_sub(a1, v129, v128, v127, v115, &my_fpsf);
    goto LABEL_83;
  }
LABEL_84:
  objc_msgSend(v15, "objectAtIndexedSubscript:", a5);
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  v117 = objc_msgSend(v116, "isFahrenheit");

  if (v117)
  {
    if (my_rnd_mode)
      v118 = 4;
    else
      v118 = 0;
    v119 = __bid128_mul(a1, v114, v20, v22, v118, &my_fpsf);
    if (my_rnd_mode)
      v121 = 4;
    else
      v121 = 0;
    v122 = 32;
    v123 = 0x3040000000000000;
LABEL_97:
    v86 = __bid128_add(v119, v120, v122, v123, v121, &my_fpsf);
LABEL_98:
    a1 = v86;
    goto LABEL_103;
  }
  objc_msgSend(v15, "objectAtIndexedSubscript:", a5);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v125 = objc_msgSend(v124, "isKelvin");

  if (v125)
  {
    if (my_rnd_mode)
      v121 = 4;
    else
      v121 = 0;
    v119 = a1;
    v120 = v114;
    v123 = v127;
    v122 = v128;
    goto LABEL_97;
  }
LABEL_103:

  return a1;
}

_QWORD *newTreeObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;
  BOOL v7;

  result = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  result[2] = a2;
  result[3] = a3;
  result[1] = a1;
  *(_DWORD *)result = g_PreferredType;
  *((_DWORD *)result + 51) = 0;
  if (a2 && *(_BYTE *)(a2 + 201))
  {
    v7 = 1;
  }
  else if (a3)
  {
    v7 = *(_BYTE *)(a3 + 201) != 0;
  }
  else
  {
    v7 = 0;
  }
  *((_BYTE *)result + 201) = v7;
  return result;
}

void displayNode(int *a1)
{
  int v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  long double v7;
  double v8;
  void *v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  long double v14;
  double v15;
  uint64_t v16;
  void *v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  int v32;
  int v33;
  uint64_t v34;
  void *v35;
  void *v36;
  char *v37;
  size_t v38;
  id v39;
  int v40;
  uint64_t v41;
  void *v42;
  void *v43;
  const __CFString *v44;
  void *v45;
  char *v46;
  size_t v47;
  id v48;
  long double __y;
  long double v50[7];

  v50[6] = *(long double *)MEMORY[0x1E0C80C00];
  if (a1[51])
  {
    g_ErrorCode = a1[51];
    if (g_ResultBuffer)
      snprintf((char *)g_ResultBuffer, g_BufferLen, "");
    return;
  }
  if (!g_ResultBuffer)
    return;
  v2 = *a1;
  if (*a1 == 1)
  {
    objc_msgSend(MEMORY[0x1E0CB3598], "maximumDecimalNumber");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "doubleValue");
    if (v10 < *((double *)a1 + 4))
    {
LABEL_12:

LABEL_13:
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%16.*lg");
      return;
    }
    objc_msgSend(MEMORY[0x1E0CB3598], "minimumDecimalNumber");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "doubleValue");
    v12 = *((double *)a1 + 4);
    if (v13 > v12)
    {

      goto LABEL_12;
    }

    if (v12 != 0.0 && v12 < 1.0e-13 && v12 > -1.0e-13)
      goto LABEL_13;
    v15 = *((double *)a1 + 4);
    if (v15 >= 4294967300.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*lg");
      return;
    }
    if (modf(*((long double *)a1 + 4), v50) == 0.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%ld");
      return;
    }
    v23 = CountLeadingZeros(v16, v15);
    v24 = v23;
    if (v23 >= 100)
      v25 = 100;
    else
      v25 = v23;
    objc_msgSend(CFSTR("%."), "stringByAppendingFormat:", CFSTR("%d"), (g_Precision + v25));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "stringByAppendingString:", CFSTR("lf"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", v27, *((_QWORD *)a1 + 4));
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithString:", v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "stringValue");
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v30 || !objc_msgSend(v30, "length"))
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%16.*lg", g_Precision, *((double *)a1 + 4));
LABEL_67:

      return;
    }
    objc_msgSend(MEMORY[0x1E0CB3900], "scannerWithString:", v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "scanUpToString:intoString:", CFSTR("."), 0);
    objc_msgSend(v31, "scanLocation");
    v32 = objc_msgSend(v30, "length");
    v33 = v32 + ~objc_msgSend(v31, "scanLocation");
    if (objc_msgSend(v30, "length") && objc_msgSend(v30, "characterAtIndex:", 0) == 45)
    {
      if ((unint64_t)objc_msgSend(v30, "length") < 3
        || objc_msgSend(v30, "characterAtIndex:", 1) != 48)
      {
        goto LABEL_60;
      }
      v34 = 2;
    }
    else
    {
      if ((unint64_t)objc_msgSend(v30, "length") < 2
        || objc_msgSend(v30, "characterAtIndex:", 0) != 48)
      {
        goto LABEL_60;
      }
      v34 = 1;
    }
    objc_msgSend(v30, "characterAtIndex:", v34);
LABEL_60:
    v40 = g_Precision;
    if (g_Precision >= v33)
      v40 = v33;
    v41 = v40 & ~(v40 >> 31);
    if (g_Precision > v33 || v24 < 1)
    {
      objc_msgSend(CFSTR("%."), "stringByAppendingFormat:", CFSTR("%u"), v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = v42;
      v44 = CFSTR("lf");
    }
    else
    {
      objc_msgSend(CFSTR("%."), "stringByAppendingFormat:", CFSTR("%u"), (v41 - 1));
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = v42;
      v44 = CFSTR("le");
    }
    objc_msgSend(v42, "stringByAppendingString:", v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    v46 = (char *)g_ResultBuffer;
    v47 = g_BufferLen;
    v48 = objc_retainAutorelease(v45);
    snprintf(v46, v47, (const char *)objc_msgSend(v48, "UTF8String"), *((_QWORD *)a1 + 4));

    goto LABEL_67;
  }
  if (v2 == 4)
  {
    snprintf((char *)g_ResultBuffer, g_BufferLen, "%llu");
    return;
  }
  if (v2 == 2)
  {
    __bid128_to_string((uint64_t)v50, *((_QWORD *)a1 + 6), *((_QWORD *)a1 + 7));
    v3 = (void *)MEMORY[0x1E0CB3598];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v50);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "decimalNumberWithString:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "stringValue");
    v6 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v7 = strtold((const char *)objc_msgSend(v6, "UTF8String"), 0);
    objc_msgSend(v5, "doubleValue");
    if (!v6 || (v14 = v8, !objc_msgSend(v6, "length")))
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "Error!");
      goto LABEL_28;
    }
    if (fabs(v14) >= 1.0e16)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*lg");
      goto LABEL_28;
    }
    if (modf(v14, &__y) == 0.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%lld");
LABEL_28:

      return;
    }
    objc_msgSend(MEMORY[0x1E0CB3900], "scannerWithString:", v6);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "scanUpToString:intoString:", CFSTR("."), 0);
    objc_msgSend(v17, "scanLocation");
    v18 = objc_msgSend(v6, "length");
    v19 = objc_msgSend(v17, "scanLocation");
    if (objc_msgSend(v6, "length") && objc_msgSend(v6, "characterAtIndex:", 0) == 45)
    {
      v20 = objc_msgSend(v6, "length");
      if (v20 < 3)
        goto LABEL_40;
      v20 = objc_msgSend(v6, "characterAtIndex:", 1);
      if ((_DWORD)v20 != 48)
        goto LABEL_40;
      v21 = 2;
    }
    else
    {
      v20 = objc_msgSend(v6, "length");
      if (v20 < 2)
        goto LABEL_40;
      v20 = objc_msgSend(v6, "characterAtIndex:", 0);
      if ((_DWORD)v20 != 48)
        goto LABEL_40;
      v21 = 1;
    }
    v20 = objc_msgSend(v6, "characterAtIndex:", v21);
LABEL_40:
    v22 = g_Precision & ~(g_Precision >> 31);
    if ((int)CountLeadingZeros(v20, v7) < 1 || ((v18 + ~v19) & ~((v18 + ~v19) >> 31)) <= g_Precision)
    {
      objc_msgSend(MEMORY[0x1E0CB35A0], "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:", 0, (__int16)v22, 0, 0, 1, 0);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "decimalNumberByRoundingAccordingToBehavior:", v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v37 = (char *)g_ResultBuffer;
      v38 = g_BufferLen;
      objc_msgSend(v36, "stringValue");
      v39 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      snprintf(v37, v38, "%s", (const char *)objc_msgSend(v39, "UTF8String"));

    }
    else
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*Lg", v22, v7);
    }

    goto LABEL_28;
  }
}

uint64_t CountLeadingZeros(uint64_t a1, double a2)
{
  uint64_t v2;
  double v4;
  void *v5;
  void *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  char v12[136];
  uint64_t v13;

  v2 = 0;
  v13 = *MEMORY[0x1E0C80C00];
  if (a2 > -1.0 && a2 != 0.0 && a2 < 1.0)
  {
    v4 = MEMORY[0x1E0C80A78](a1);
    snprintf(v12, 0x80uLL, "%.100Lf", v4);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v12);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3900], "scannerWithString:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "scanUpToString:intoString:", CFSTR("."), 0);
    v2 = 0;
    v7 = objc_msgSend(v6, "scanLocation");
LABEL_8:
    ++v7;
    do
    {
      v8 = objc_msgSend(v5, "length");
      v9 = v8 >= 0x200 ? 512 : v8;
      if (v9 <= v7)
        break;
      v10 = objc_msgSend(v5, "characterAtIndex:", v7);
      if (v10 == 48)
      {
        v2 = (v2 + 1);
        goto LABEL_8;
      }
      ++v7;
    }
    while ((v10 - 47) > 0xFFFFFFFD || (v10 - 48) > 9);

  }
  return v2;
}

void evaluateBinary(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  int v6;
  int v7;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[3];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  memset(v20, 0, sizeof(v20));
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  memset(v8, 0, sizeof(v8));
  evaluateTree(*(_QWORD *)(a1 + 16), (uint64_t)v20);
  evaluateTree(*(_QWORD *)(a1 + 24), (uint64_t)v8);
  *(_QWORD *)(a2 + 8) = functionNoOp;
  *(_DWORD *)a2 = *(_DWORD *)a1;
  my_rnd_mode = 1;
  my_fpsf = 0;
  v6 = HIDWORD(v30);
  if (!HIDWORD(v30))
  {
    v6 = HIDWORD(v19);
    if (!HIDWORD(v19))
    {
      if ((~*((_QWORD *)&v21 + 1) & 0x7C00000000000000) != 0 && (~*((_QWORD *)&v10 + 1) & 0x7C00000000000000) != 0)
      {
        (*((void (**)(id, _OWORD *, _OWORD *, double))v5 + 2))(v5, v20, v8, *(double *)&v9);
        if (*(_DWORD *)(a2 + 204))
          goto LABEL_4;
        if ((my_fpsf & 4) != 0)
        {
          v7 = 1;
        }
        else if ((my_fpsf & 8) != 0)
        {
          v7 = 3;
        }
        else
        {
          v7 = (my_fpsf & 0x10) != 0 ? 2 : 4 * (my_fpsf & 1);
        }
        *(_DWORD *)(a2 + 204) = v7;
        if (v7)
          goto LABEL_4;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = 0x7FF8000000000000;
        *(_QWORD *)(a2 + 48) = 0;
        *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
        if (*(_DWORD *)(a2 + 204))
          goto LABEL_4;
      }
      if ((~*(_QWORD *)(a2 + 56) & 0x7C00000000000000) != 0)
        goto LABEL_5;
      v6 = 4;
    }
  }
  *(_DWORD *)(a2 + 204) = v6;
LABEL_4:
  *(_QWORD *)(a2 + 32) = 0x7FF8000000000000;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x7C00000000000000;
LABEL_5:

}

void freeTree(_QWORD *a1)
{
  if (a1)
  {
    freeTree(a1[2]);
    freeTree(a1[3]);
    free(a1);
  }
}

_OWORD *copyTree(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (!a1)
    return 0;
  v2 = malloc_type_malloc(0xD0uLL, 0x10A00405A5B035DuLL);
  *v2 = *(_OWORD *)a1;
  v3 = *(_OWORD *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  v2[3] = *(_OWORD *)(a1 + 48);
  v2[4] = v3;
  v2[1] = v5;
  v2[2] = v4;
  v6 = *(_OWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 80);
  v7 = *(_OWORD *)(a1 + 96);
  v2[7] = *(_OWORD *)(a1 + 112);
  v2[8] = v6;
  v2[5] = v8;
  v2[6] = v7;
  v9 = *(_OWORD *)(a1 + 192);
  v11 = *(_OWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 160);
  v2[11] = *(_OWORD *)(a1 + 176);
  v2[12] = v9;
  v2[9] = v11;
  v2[10] = v10;
  *((_QWORD *)v2 + 2) = copyTree(*(_QWORD *)(a1 + 16));
  *((_QWORD *)v2 + 3) = copyTree(*(_QWORD *)(a1 + 24));
  return v2;
}

uint64_t UnitCountHasNonAngleUnits(uint64_t a1)
{
  void *v2;
  int v3;
  BOOL v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  BOOL v10;

  objc_msgSend((id)g_unitsInfo, "infoForAngle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unitType");

  if (*(_DWORD *)(a1 + 4))
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
    return 1;
  v5 = (int *)(a1 + 12);
  v6 = 1;
  v7 = 15;
  while (v6 != 16)
  {
    v8 = *v5;
    v5 += 2;
    v9 = v6 + 1;
    if (v8)
      v10 = v3 == v6;
    else
      v10 = 1;
    ++v6;
    if (!v10)
    {
      v7 = v9 - 2;
      return v7 < 0xF;
    }
  }
  return v7 < 0xF;
}

unint64_t UnitCountConvert(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, _DWORD *a6)
{
  __int128 *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int *v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int *v27;
  int *v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  unint64_t v35;
  int v36;
  BOOL v37;
  unint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  unint64_t v48;

  v9 = (__int128 *)a3;
  v10 = a2;
  v11 = a1;
  v12 = *(_DWORD *)(a4 + 4);
  if (!v12)
  {
    v15 = (int *)(a4 + 12);
    v16 = -1;
    while (v16 != 14)
    {
      v17 = *v15;
      v15 += 2;
      ++v16;
      if (v17)
        goto LABEL_9;
    }
    v16 = 15;
LABEL_9:
    v14 = v16 < 0xF;
    v13 = *(_DWORD *)(a3 + 4);
    if (v13)
    {
      if (v16 >= 0xF)
      {
LABEL_21:
        v21 = *v9;
        v22 = v9[1];
        v23 = v9[3];
        a5[2] = v9[2];
        a5[3] = v23;
        *a5 = v21;
        a5[1] = v22;
        v24 = v9[4];
        v25 = v9[5];
        v26 = v9[7];
        a5[6] = v9[6];
        a5[7] = v26;
        a5[4] = v24;
        a5[5] = v25;
        return v11;
      }
      goto LABEL_23;
    }
    goto LABEL_12;
  }
  v13 = *(_DWORD *)(a3 + 4);
  if (!v13)
  {
    v14 = 1;
LABEL_12:
    v18 = -1;
    v19 = 12;
    while (v18 != 14)
    {
      v20 = *(_DWORD *)(a3 + v19);
      ++v18;
      v19 += 8;
      if (v20)
        goto LABEL_17;
    }
    v18 = 15;
LABEL_17:
    if (((v18 > 0xE) & ~v14) != 0)
      return v11;
    if (((v14 ^ (v18 < 0xF)) & 1) != 0)
    {
      if (v14)
        v9 = (__int128 *)a4;
      goto LABEL_21;
    }
    v13 = 0;
  }
LABEL_23:
  if (v13 + v12)
  {
LABEL_32:
    v34 = 0;
  }
  else
  {
    v27 = (int *)(a3 + 12);
    v28 = (int *)(a4 + 12);
    v29 = -1;
    while (v29 != 14)
    {
      v31 = *v27;
      v27 += 2;
      v30 = v31;
      v32 = *v28;
      v28 += 2;
      ++v29;
      if (v30 + v32)
      {
        if (v29 < 0xF)
          goto LABEL_32;
        break;
      }
    }
    if (my_rnd_mode)
      v33 = 4;
    else
      v33 = 0;
    v34 = 1;
    v11 = __bid128_div(1uLL, 0x3040000000000000uLL, a1, a2, v33, &my_fpsf);
    v10 = v35;
    v12 = *(_DWORD *)(a4 + 4);
  }
  if (v12 > 1)
  {
    v37 = 0;
  }
  else
  {
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = (unsigned int *)(a4 + 12);
    do
    {
      if (v12)
      {
        if (v36 > 0)
          break;
        v36 = 1;
      }
      v37 = v38 > 0xE;
      if (v38 == 15)
        break;
      v40 = *v39;
      v39 += 2;
      v12 = v40;
      ++v38;
    }
    while (v40 <= 1);
  }
  v41 = 0;
  v42 = v37;
  while (1)
  {
    if (v34)
      v43 = -*(_DWORD *)((char *)v9 + v41 + 4);
    else
      v43 = *(_DWORD *)((char *)v9 + v41 + 4);
    v44 = *(_DWORD *)(a4 + v41 + 4);
    if (!(v44 | v43))
      goto LABEL_52;
    if (v44 != v43)
      break;
    v45 = *(_DWORD *)(a4 + v41);
    v46 = *(_DWORD *)((char *)v9 + v41);
    if (v45 == v46)
    {
      LODWORD(v47) = *(_DWORD *)(a4 + v41);
      HIDWORD(v47) = v43;
    }
    else
    {
      v11 = UnitCountConvertID(v11, v10, v46, v43, v45, v42, a6);
      v10 = v48;
      v47 = *(_QWORD *)(a4 + v41);
    }
    *(_QWORD *)((char *)a5 + v41) = v47;
LABEL_52:
    v41 += 8;
    if (v41 == 128)
      return v11;
  }
  v11 = 0;
  if (a6)
    *a6 = 8;
  return v11;
}

void *UnitCountNextSmallestID(uint64_t a1)
{
  unsigned int v1;
  int v2;
  BOOL v3;
  unint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  int *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;

  v1 = *(_DWORD *)(a1 + 4);
  if (v1 > 1)
    return 0;
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = (unsigned int *)(a1 + 12);
  do
  {
    if (v1)
    {
      if (v2 > 0)
        break;
      v2 = 1;
    }
    v3 = v4 > 0xE;
    if (v4 == 15)
      break;
    v6 = *v5;
    v5 += 2;
    v1 = v6;
    ++v4;
  }
  while (v6 <= 1);
  if (!v3)
    return 0;
  v7 = 0;
  v8 = 0;
  v9 = (int *)(a1 + 4);
  do
  {
    v10 = *v9;
    v9 += 2;
    if (v10)
      v8 = v7;
    ++v7;
  }
  while (v7 != 16);
  objc_msgSend((id)g_unitsInfo, "objectAtIndexedSubscript:", *(int *)(a1 + 8 * v8));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "nextSmallest");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend(v11, "nextSmallest");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v13, "unitID");

  }
  return v12;
}

BOOL UnitCountShouldImplicitlyAdd(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v4;
  BOOL v5;
  unint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  BOOL v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int *v17;
  int *v18;
  int v19;
  int v20;
  int v21;
  void *v22;
  _DWORD *v23;
  void *v24;
  _BOOL8 v25;

  v2 = *(_DWORD *)(a1 + 4);
  if (v2 <= 1)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = (unsigned int *)(a1 + 12);
    do
    {
      if (v2)
      {
        if (v4 > 0)
          break;
        v4 = 1;
      }
      v5 = v6 > 0xE;
      if (v6 == 15)
        break;
      v8 = *v7;
      v7 += 2;
      v2 = v8;
      ++v6;
    }
    while (v8 <= 1);
    if (v5)
    {
      v9 = *(_DWORD *)(a2 + 4);
      if (v9 <= 1)
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = (unsigned int *)(a2 + 12);
        do
        {
          if (v9)
          {
            if (v10 > 0)
              break;
            v10 = 1;
          }
          v11 = v12 > 0xE;
          if (v12 == 15)
            break;
          v14 = *v13;
          v13 += 2;
          v9 = v14;
          ++v12;
        }
        while (v14 <= 1);
        if (v11)
        {
          v15 = 0;
          v16 = 0;
          v17 = (int *)(a2 + 4);
          v18 = (int *)(a1 + 4);
          while (1)
          {
            v20 = *v18;
            v18 += 2;
            v19 = v20;
            v21 = *v17;
            v17 += 2;
            if (v19 != v21)
              break;
            if (v19)
              v16 = v15;
            if (++v15 == 16)
            {
              objc_msgSend((id)g_unitsInfo, "objectAtIndexedSubscript:", *(int *)(a1 + 8 * v16));
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v23 = (_DWORD *)(a2 + 8 * v16);
              do
              {
                objc_msgSend(v22, "nextSmallest");
                v24 = (void *)objc_claimAutoreleasedReturnValue();

                v25 = v24 != 0;
                if (!v24)
                  break;
                v22 = v24;
              }
              while (objc_msgSend(v24, "unitID") != *v23);

              return v25;
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t UnitCountAngleUnitID(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unsigned int v7;

  objc_msgSend((id)g_unitsInfo, "infoForAngle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unitType");

  v4 = 0;
  result = 0;
  v6 = 8 * v3;
  while (1)
  {
    v7 = *(_DWORD *)(a1 + v4 + 4);
    if (v7 > 1)
      break;
    if (v7 && v6 != v4)
      break;
    if (v6 == v4)
      result = *(unsigned int *)(a1 + v4);
    v4 += 8;
    if (v4 == 128)
      return result;
  }
  return 0;
}

unint64_t UnitCountRequireDegrees(unint64_t a1, unint64_t a2, uint64_t a3, _DWORD *a4)
{
  int v7;
  int v8;
  void *v9;
  unint64_t v10;

  v7 = UnitCountAngleUnitID(a3);
  if (!v7)
    return a1;
  v8 = v7;
  objc_msgSend((id)g_unitsInfo, "infoForDegrees");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = UnitCountConvertID(a1, a2, v8, 1, objc_msgSend(v9, "unitID"), 1, a4);

  return v10;
}

unint64_t UnitCountRequireRadians(unint64_t a1, unint64_t a2, uint64_t a3, _DWORD *a4)
{
  int v7;
  int v8;
  void *v9;
  unint64_t v10;

  v7 = UnitCountAngleUnitID(a3);
  if (!v7)
    return a1;
  v8 = v7;
  objc_msgSend((id)g_unitsInfo, "infoForRadians");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = UnitCountConvertID(a1, a2, v8, 1, objc_msgSend(v9, "unitID"), 1, a4);

  return v10;
}

uint64_t UnitCountCompose(uint64_t a1, unint64_t a2, uint64_t a3, _OWORD *a4, _DWORD *a5)
{
  _OWORD *v6;
  int *v7;
  unint64_t v8;
  int v9;
  BOOL v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  void *v24;
  uint64_t v25;
  int v26;
  uint64_t i;
  void *v28;
  BOOL v29;
  BOOL v30;
  void *v31;
  char v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t j;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  int v44;
  UnitRank *v45;
  void *v46;
  UnitRank *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  double v51;
  UnitRank *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t k;
  void *v58;
  void *v59;
  void *v60;
  int v61;
  void *v62;
  void *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unsigned int v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  unsigned int v87;
  unint64_t v88;
  int v89;
  void *v90;
  int v91;
  void *v92;
  uint64_t m;
  void *v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  int *v99;
  int v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t n;
  void *v106;
  void *v107;
  int v108;
  unsigned int v109;
  int v110;
  BOOL v111;
  unint64_t v112;
  unsigned int *v113;
  unsigned int v114;
  uint64_t v115;
  int *v116;
  int v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  id v128;
  _OWORD *v130;
  void *v131;
  int v132;
  _DWORD *v133;
  void *v134;
  int v135;
  uint64_t v136;
  id obj;
  id obja;
  unsigned int v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  unint64_t v144;
  unint64_t v146;
  char v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  int v152;
  void *v153;
  id v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  _OWORD v159[8];
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  _OWORD v172[8];
  _BYTE v173[128];
  _OWORD v174[4];
  _BYTE v175[128];
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  _OWORD v184[8];
  _BYTE v185[128];
  _BYTE v186[128];
  uint64_t v187;

  v6 = (_OWORD *)a3;
  v187 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(a3 + 4))
    goto LABEL_8;
  v7 = (int *)(a3 + 12);
  v8 = -1;
  while (v8 != 14)
  {
    v9 = *v7;
    v7 += 2;
    ++v8;
    if (v9)
      goto LABEL_7;
  }
  v8 = 15;
LABEL_7:
  if (v8 < 0xF)
  {
LABEL_8:
    if (g_unitSuggestions)
      v10 = g_unitSuggestionsSet == 0;
    else
      v10 = 1;
    if (!v10)
    {
      v128 = (id)g_unitSuggestions;
      v11 = (id)g_unitSuggestionsSet;
      v154 = (id)g_unitsInfo;
      v133 = a5;
      v134 = (void *)objc_opt_new();
      v12 = 0;
      v130 = v6;
      do
      {
        objc_msgSend(v154, "infoForUnitType:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v13, "isDecomposable"))
        {
          v14 = 0;
          v15 = 0;
          v16 = 0;
          v141 = 0;
          v184[0] = 0uLL;
          LOBYTE(v17) = 1;
LABEL_15:
          v18 = (8 * v14) | 4;
          do
          {
            if (v13)
              objc_msgSend(v13, "decomposition");
            else
              memset(v172, 0, sizeof(v172));
            v19 = *(_DWORD *)((char *)v172 + v18);
            v20 = *(_DWORD *)((char *)v6 + v18);
            if (v19)
            {
              *((_BYTE *)v184 + v14) = 1;
              v21 = (v20 / v19);
              if (v20 >= 0)
                v22 = v20;
              else
                v22 = -v20;
              if (v19 >= 0)
                v23 = v19;
              else
                v23 = -v19;
              if (v22 < v23 || (_DWORD)v21 * v19 != v20 || (v16 & ((_DWORD)v21 != (_DWORD)v15)) != 0)
                goto LABEL_79;
              ++v141;
              ++v14;
              v16 = 1;
              v15 = (v20 / v19);
              if (v14 != 16)
                goto LABEL_15;
              if ((v17 & 1) != 0)
                goto LABEL_36;
              goto LABEL_37;
            }
            v17 = (v20 == 0) & v17;
            ++v14;
            v18 += 8;
          }
          while (v14 != 16);
          if ((v16 & 1) == 0)
            goto LABEL_79;
          v21 = v15;
          if (v17)
          {
LABEL_36:
            g_composedType = v12;
            g_composedExponent = v21;
          }
LABEL_37:
          v132 = v12;
          v170 = 0u;
          v171 = 0u;
          v168 = 0u;
          v169 = 0u;
          v131 = v13;
          objc_msgSend(v13, "units");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v150 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v168, v186, 16);
          if (v150)
          {
            v25 = *(_QWORD *)v169;
            if ((int)v21 >= 0)
              v26 = v21;
            else
              v26 = -(int)v21;
            v139 = v21;
            v136 = *(_QWORD *)v169;
            obj = v24;
            v135 = v26;
            do
            {
              for (i = 0; i != v150; ++i)
              {
                if (*(_QWORD *)v169 != v25)
                  objc_enumerationMutation(v24);
                v28 = *(void **)(*((_QWORD *)&v168 + 1) + 8 * i);
                if (objc_msgSend(v28, "isDisplayName"))
                  v29 = v26 == 1;
                else
                  v29 = 1;
                if (v29)
                {
                  if (!objc_msgSend(v28, "impliesDivision")
                    || (objc_msgSend(v28, "isInverted") ? (v30 = (_DWORD)v21 == -1) : (v30 = 1),
                        v30 && ((objc_msgSend(v28, "isInverted") & 1) != 0 || (_DWORD)v21 == 1)))
                  {
                    v149 = i;
                    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", objc_msgSend(v28, "unitID"));
                    v31 = (void *)objc_claimAutoreleasedReturnValue();
                    v32 = objc_msgSend(v11, "containsObject:", v31);

                    i = v149;
                    v33 = 10000 * v141;
                    if ((v32 & 1) != 0)
                      goto LABEL_74;
                    v176 = 0uLL;
                    v164 = 0u;
                    v165 = 0u;
                    v166 = 0u;
                    v167 = 0u;
                    objc_msgSend(v28, "allSubunitIDs");
                    v34 = (void *)objc_claimAutoreleasedReturnValue();
                    v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v164, v185, 16);
                    if (v35)
                    {
                      v36 = v35;
                      v33 = 0;
                      v152 = 0;
                      v37 = *(_QWORD *)v165;
                      do
                      {
                        for (j = 0; j != v36; ++j)
                        {
                          if (*(_QWORD *)v165 != v37)
                            objc_enumerationMutation(v34);
                          v39 = *(void **)(*((_QWORD *)&v164 + 1) + 8 * j);
                          if (objc_msgSend(v11, "containsObject:", v39))
                          {
                            v40 = v11;
                            v41 = v28;
                            objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(v39, "intValue"));
                            v42 = (void *)objc_claimAutoreleasedReturnValue();
                            objc_msgSend(v42, "typeInfo");
                            v43 = (void *)objc_claimAutoreleasedReturnValue();
                            v44 = objc_msgSend(v43, "unitType");

                            if (*((_BYTE *)v184 + v44) && !*((_BYTE *)&v176 + v44))
                            {
                              *((_BYTE *)&v176 + v44) = 1;
                              ++v152;
                            }
                            v28 = v41;
                            ++v33;
                            v11 = v40;
                          }
                        }
                        v36 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v164, v185, 16);
                      }
                      while (v36);
                    }
                    else
                    {
                      v33 = 0;
                      v152 = 0;
                    }

                    v21 = v139;
                    v25 = v136;
                    v24 = obj;
                    v26 = v135;
                    i = v149;
                    if (v152 == v141)
                    {
LABEL_74:
                      if (v33 >= 1)
                      {
                        v45 = [UnitRank alloc];
                        v46 = v28;
                        v47 = v45;
                        v48 = objc_msgSend(v46, "unitID");
                        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v21);
                        v49 = (void *)objc_claimAutoreleasedReturnValue();
                        v50 = v48;
                        i = v149;
                        *(float *)&v51 = (float)-v33;
                        v52 = -[UnitRank initWithUnitID:rank:locale:context:](v47, "initWithUnitID:rank:locale:context:", v50, 0, v49, v51);
                        objc_msgSend(v134, "addUnitRank:", v52);

                      }
                    }
                  }
                }
              }
              v150 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v168, v186, 16);
            }
            while (v150);
          }

          v6 = v130;
          v13 = v131;
          LODWORD(v12) = v132;
LABEL_79:
          a5 = v133;
        }

        v12 = (v12 + 1);
      }
      while ((_DWORD)v12 != 16);
      if (!g_composedType)
      {
        v96 = 0;
        v97 = 0;
        v98 = 0;
        v99 = (int *)v6 + 1;
        do
        {
          v100 = *v99;
          v99 += 2;
          if (v100)
          {
            if (v98 > 0)
              goto LABEL_82;
            v98 = 1;
            v97 = v96;
          }
          ++v96;
        }
        while (v96 != 16);
        if (v97 >= 1)
        {
          g_composedType = v97;
          g_composedExponent = *((_DWORD *)v6 + 2 * v97 + 1);
        }
      }
LABEL_82:
      objc_msgSend(v134, "sort");
      v53 = v6[5];
      v184[4] = v6[4];
      v184[5] = v53;
      v54 = v6[7];
      v184[6] = v6[6];
      v184[7] = v54;
      v55 = v6[1];
      v184[0] = *v6;
      v184[1] = v55;
      v56 = v6[3];
      v184[2] = v6[2];
      v184[3] = v56;
      v183 = 0u;
      v182 = 0u;
      v181 = 0u;
      v180 = 0u;
      v179 = 0u;
      v177 = 0u;
      v178 = 0u;
      v176 = 0u;
      v162 = 0u;
      v163 = 0u;
      v160 = 0u;
      v161 = 0u;
      objc_msgSend(v134, "ranks");
      obja = (id)objc_claimAutoreleasedReturnValue();
      v142 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v160, v175, 16);
      if (v142)
      {
        v140 = *(_QWORD *)v161;
        v147 = 1;
        v151 = 1;
        do
        {
          for (k = 0; k != v142; ++k)
          {
            if (*(_QWORD *)v161 != v140)
              objc_enumerationMutation(obja);
            v58 = *(void **)(*((_QWORD *)&v160 + 1) + 8 * k);
            objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(v58, "unitID"));
            v59 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v58, "context");
            v60 = (void *)objc_claimAutoreleasedReturnValue();
            v61 = objc_msgSend(v60, "intValue");

            v153 = v59;
            objc_msgSend(v59, "typeInfo");
            v62 = (void *)objc_claimAutoreleasedReturnValue();
            v63 = v62;
            if (v62)
              objc_msgSend(v62, "decomposition");
            else
              memset(v159, 0, sizeof(v159));

            v64 = 0;
            while (1)
            {
              v65 = *(_DWORD *)((char *)v159 + v64 + 4);
              if (v65)
              {
                if (v65 * v61 != *(_DWORD *)((char *)v184 + v64 + 4))
                  break;
              }
              v64 += 8;
              if (v64 == 128)
              {
                v66 = 0;
                v68 = a1;
                v67 = a2;
                do
                {
                  v69 = *(_DWORD *)((char *)v159 + v66 + 4) * v61;
                  if (v69)
                  {
                    v70 = *(_DWORD *)((char *)v184 + v66);
                    v71 = *(_DWORD *)((char *)v159 + v66);
                    if (v70 != v71)
                      v68 = UnitCountConvertID(v68, v67, v70, v69, v71, 0, a5);
                    *(_DWORD *)((char *)v184 + v66 + 4) = 0;
                  }
                  v66 += 8;
                }
                while (v66 != 128);
                v144 = v68;
                v146 = v67;
                v72 = objc_msgSend(v59, "baseNumerator");
                if (v61 >= 0)
                  v74 = v61;
                else
                  v74 = -v61;
                if (v61 < 0)
                  v75 = 0xB040000000000000;
                else
                  v75 = 0x3040000000000000;
                if (my_rnd_mode)
                  v76 = 4;
                else
                  v76 = 0;
                v78 = bid128_pow_fix(v72, v73, v74, v75, v76, &my_fpsf);
                if (my_rnd_mode)
                  v79 = 4;
                else
                  v79 = 0;
                v148 = __bid128_div(v144, v146, v78, v77, v79, &my_fpsf);
                v81 = v80;
                v82 = objc_msgSend(v153, "baseDenominator");
                if (my_rnd_mode)
                  v84 = 4;
                else
                  v84 = 0;
                v86 = bid128_pow_fix(v82, v83, v74, v75, v84, &my_fpsf);
                if (my_rnd_mode)
                  v87 = 4;
                else
                  v87 = 0;
                a1 = __bid128_mul(v148, v81, v86, v85, v87, &my_fpsf);
                a2 = v88;
                v89 = objc_msgSend(v153, "unitID");
                objc_msgSend(v153, "typeInfo");
                v90 = (void *)objc_claimAutoreleasedReturnValue();
                *((_DWORD *)&v176 + 2 * (int)objc_msgSend(v90, "unitType")) = v89;

                if (objc_msgSend(v153, "isInverted"))
                  v91 = -v61;
                else
                  v91 = v61;
                objc_msgSend(v153, "typeInfo");
                v92 = (void *)objc_claimAutoreleasedReturnValue();
                *((_DWORD *)&v176 + 2 * (int)objc_msgSend(v92, "unitType") + 1) = v91;

                if ((v151 & 1) != 0)
                {
                  for (m = 0; m != 128; m += 8)
                  {
                    if (*(_DWORD *)((char *)v184 + m + 4))
                    {
                      v147 = 0;
                      v151 = 0;
                      goto LABEL_131;
                    }
                  }
                  objc_msgSend(v153, "typeInfo");
                  v94 = (void *)objc_claimAutoreleasedReturnValue();
                  g_composedType = objc_msgSend(v94, "unitType");

                  v147 = 0;
                  v151 = 0;
                  if (objc_msgSend(v153, "isInverted"))
                    v95 = -v61;
                  else
                    v95 = v61;
                  g_composedExponent = v95;
LABEL_131:
                  a5 = v133;
                }
                else
                {
                  v147 = 0;
                  v151 = 0;
                  a5 = v133;
                }
                break;
              }
            }

          }
          v142 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v160, v175, 16);
        }
        while (v142);
      }
      else
      {
        v147 = 1;
      }

      memset(v174, 0, sizeof(v174));
      v155 = 0u;
      v156 = 0u;
      v157 = 0u;
      v158 = 0u;
      v101 = v128;
      v102 = objc_msgSend(v101, "countByEnumeratingWithState:objects:count:", &v155, v173, 16);
      if (v102)
      {
        v103 = v102;
        v104 = *(_QWORD *)v156;
        do
        {
          for (n = 0; n != v103; ++n)
          {
            if (*(_QWORD *)v156 != v104)
              objc_enumerationMutation(v101);
            objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(*(id *)(*((_QWORD *)&v155 + 1) + 8 * n), "intValue"));
            v106 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v106, "typeInfo");
            v107 = (void *)objc_claimAutoreleasedReturnValue();
            v108 = objc_msgSend(v107, "unitType");

            if (!*((_DWORD *)v174 + v108))
              *((_DWORD *)v174 + v108) = objc_msgSend(v106, "unitID");

          }
          v103 = objc_msgSend(v101, "countByEnumeratingWithState:objects:count:", &v155, v173, 16);
        }
        while (v103);
      }

      v109 = DWORD1(v184[0]);
      if ((v147 & (DWORD1(v184[0]) < 2)) == 1)
      {
        v110 = 0;
        v111 = 0;
        v112 = 0;
        v113 = (unsigned int *)((unint64_t)v184 | 0xC);
        do
        {
          if (v109)
          {
            if (v110 > 0)
              break;
            v110 = 1;
          }
          v111 = v112 > 0xE;
          if (v112 == 15)
            break;
          v114 = *v113;
          v113 += 2;
          v109 = v114;
          ++v112;
        }
        while (v114 <= 1);
      }
      else
      {
        v111 = 0;
      }
      v115 = 0;
      v116 = (int *)v174;
      v117 = v111;
      v118 = a1;
      v119 = a2;
      do
      {
        v120 = *(_DWORD *)((char *)v184 + v115 + 4);
        if (v120)
        {
          v121 = *(_QWORD *)((char *)v184 + v115);
          *(_QWORD *)((char *)&v176 + v115) = v121;
          v122 = *v116;
          if (*v116 >= 1)
          {
            v118 = UnitCountConvertID(v118, v119, v121, v120, *v116, v117, v133);
            *(_DWORD *)((char *)&v176 + v115) = v122;
          }
        }
        v115 += 8;
        ++v116;
      }
      while (v115 != 128);
      a1 = v118;
      v123 = v181;
      a4[4] = v180;
      a4[5] = v123;
      v124 = v183;
      a4[6] = v182;
      a4[7] = v124;
      v125 = v177;
      *a4 = v176;
      a4[1] = v125;
      v126 = v179;
      a4[2] = v178;
      a4[3] = v126;

    }
  }
  return a1;
}

unint64_t treeIntegerValue(int *a1)
{
  int v1;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  int v6;

  v1 = *a1;
  if (*a1 == 1)
    return (uint64_t)rint(*((double *)a1 + 4));
  if (v1 == 2)
  {
    v5 = a1 + 12;
    v3 = *((_QWORD *)a1 + 6);
    v4 = *((_QWORD *)v5 + 1);
    v6 = 0;
    return __bid128_to_uint64_int(v3, v4, &v6);
  }
  else if (v1 == 4)
  {
    return *((_QWORD *)a1 + 8);
  }
  else
  {
    return 0;
  }
}

void ___functionAdd_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double *v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  unint64_t v21;
  unint64_t v22;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int *v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;

  v39 = 0;
  v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v8 = 4;
    else
      v8 = 0;
    v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    v7 = *((_QWORD *)a3 + 6);
    v9 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v6 == 4)
      v7 = *((_QWORD *)a3 + 8);
    else
      v7 = 0;
    v9 = 0x3040000000000000;
  }
  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    v10 = 0;
    v11 = 10;
    v12 = 0x7C00000000000000;
LABEL_16:
    v14 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v14 + 204) = v11;
    *(_QWORD *)(v14 + 48) = v10;
    *(_QWORD *)(v14 + 56) = v12;
    return;
  }
  v10 = UnitCountConvert(v7, v9, (uint64_t)(a3 + 18), (uint64_t)(a2 + 18), (_OWORD *)(*(_QWORD *)(a1 + 32) + 72), &v39);
  v12 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    v11 = v39;
    goto LABEL_16;
  }
  if (!*(_BYTE *)(a1 + 40))
    g_isTrivial = 0;
  v15 = *(double **)(a1 + 32);
  v16 = *(_DWORD *)v15;
  if (*(_DWORD *)v15 == 1)
  {
    v19 = *a2;
    if (*a2 == 1)
    {
      v20 = *((double *)a2 + 4);
    }
    else if (v19 == 2)
    {
      if (my_rnd_mode)
        v28 = 4;
      else
        v28 = 0;
      v20 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v28, &my_fpsf);
    }
    else
    {
      v20 = 0.0;
      if (v19 == 4)
      {
        v21 = *((_QWORD *)a2 + 8);
        v22 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v21 && v22 > v21)
          v20 = (double)v21;
        else
          v20 = NAN;
      }
    }
    if (my_rnd_mode)
      v29 = 4;
    else
      v29 = 0;
    v15[4] = v20 + __bid128_to_binary64(v10, v12, v29, &my_fpsf);
  }
  else if (v16 == 2)
  {
    v24 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v30 = 4;
      else
        v30 = 0;
      v25 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v24 == 2)
    {
      v25 = *((_QWORD *)a2 + 6);
      v31 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v24 == 4)
        v25 = *((_QWORD *)a2 + 8);
      else
        v25 = 0;
      v31 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v32 = 4;
    else
      v32 = 0;
    *((_QWORD *)v15 + 6) = __bid128_add(v25, v31, v10, v12, v32, &my_fpsf);
    *((_QWORD *)v15 + 7) = v33;
  }
  else if (v16 == 4)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      v18 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v17 == 2)
    {
      v26 = *((_QWORD *)a2 + 6);
      v27 = *((_QWORD *)a2 + 7);
      v40 = 0;
      v18 = __bid128_to_uint64_int(v26, v27, &v40);
    }
    else if (v17 == 4)
    {
      v18 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v18 = 0;
    }
    v41 = 0;
    *((_QWORD *)v15 + 8) = __bid128_to_uint64_int(v10, v12, &v41) + v18;
  }
  if (*(_BYTE *)(a1 + 40) && *((_BYTE *)a2 + 202))
  {
    v34 = *(int **)(a1 + 32);
    v35 = *v34;
    if (*v34 == 1)
    {
      if (my_rnd_mode)
        v37 = 4;
      else
        v37 = 0;
      v36 = __binary64_to_bid128(v37, &my_fpsf, *((double *)v34 + 4));
    }
    else if (v35 == 2)
    {
      v36 = *((_QWORD *)v34 + 6);
      v38 = *((_QWORD *)v34 + 7);
    }
    else
    {
      if (v35 == 4)
        v36 = *((_QWORD *)v34 + 8);
      else
        v36 = 0;
      v38 = 0x3040000000000000;
    }
    g_firstCoefficient_0 = v36;
    qword_1ED563A58 = v38;
    *((_BYTE *)v34 + 202) = 1;
  }
}

void functionAdd(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = ___functionAdd_block_invoke;
  v2[3] = &__block_descriptor_41_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  v3 = 0;
  evaluateBinary(a1, a2, v2);
}

void functionSubtract(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSubtract_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionSubtract_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double *v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  unint64_t v21;
  unint64_t v22;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;

  v34 = 0;
  v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v8 = 4;
    else
      v8 = 0;
    v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    v7 = *((_QWORD *)a3 + 6);
    v9 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v6 == 4)
      v7 = *((_QWORD *)a3 + 8);
    else
      v7 = 0;
    v9 = 0x3040000000000000;
  }
  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    v10 = 0;
    v11 = 10;
    v12 = 0x7C00000000000000;
LABEL_16:
    v14 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v14 + 204) = v11;
    *(_QWORD *)(v14 + 48) = v10;
    *(_QWORD *)(v14 + 56) = v12;
    return;
  }
  v10 = UnitCountConvert(v7, v9, (uint64_t)(a3 + 18), (uint64_t)(a2 + 18), (_OWORD *)(*(_QWORD *)(a1 + 32) + 72), &v34);
  v12 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    v11 = v34;
    goto LABEL_16;
  }
  g_isTrivial = 0;
  v15 = *(double **)(a1 + 32);
  v16 = *(_DWORD *)v15;
  if (*(_DWORD *)v15 == 1)
  {
    v19 = *a2;
    if (*a2 == 1)
    {
      v20 = *((double *)a2 + 4);
    }
    else if (v19 == 2)
    {
      if (my_rnd_mode)
        v28 = 4;
      else
        v28 = 0;
      v20 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v28, &my_fpsf);
    }
    else
    {
      v20 = 0.0;
      if (v19 == 4)
      {
        v21 = *((_QWORD *)a2 + 8);
        v22 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v21 && v22 > v21)
          v20 = (double)v21;
        else
          v20 = NAN;
      }
    }
    if (my_rnd_mode)
      v29 = 4;
    else
      v29 = 0;
    v15[4] = v20 - __bid128_to_binary64(v10, v12, v29, &my_fpsf);
  }
  else if (v16 == 2)
  {
    v24 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v30 = 4;
      else
        v30 = 0;
      v25 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v24 == 2)
    {
      v25 = *((_QWORD *)a2 + 6);
      v31 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v24 == 4)
        v25 = *((_QWORD *)a2 + 8);
      else
        v25 = 0;
      v31 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v32 = 4;
    else
      v32 = 0;
    *((_QWORD *)v15 + 6) = __bid128_sub(v25, v31, v10, v12, v32, &my_fpsf);
    *((_QWORD *)v15 + 7) = v33;
  }
  else if (v16 == 4)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      v18 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v17 == 2)
    {
      v26 = *((_QWORD *)a2 + 6);
      v27 = *((_QWORD *)a2 + 7);
      v35 = 0;
      v18 = __bid128_to_uint64_int(v26, v27, &v35);
    }
    else if (v17 == 4)
    {
      v18 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v18 = 0;
    }
    v36 = 0;
    *((_QWORD *)v15 + 8) = v18 - __bid128_to_uint64_int(v10, v12, &v36);
  }
}

unint64_t trivialCoefficient(unint64_t result)
{
  void (*v1)(uint64_t, uint64_t);
  int v4;
  uint64_t v5;
  int *v6;
  double v7;
  int v8;
  int v9;

  if (result)
  {
    v1 = *(void (**)(uint64_t, uint64_t))(result + 8);
    if ((char *)v1 == (char *)functionNoOp || v1 == functionUnit || v1 == functionConstant)
    {
      v4 = *(_DWORD *)result;
      if (*(_DWORD *)result != 1)
      {
        if (v4 == 2)
          return *(_QWORD *)(result + 48);
        if (v4 == 4)
          return *(_QWORD *)(result + 64);
        return 0;
      }
      v7 = *(double *)(result + 32);
    }
    else
    {
      if ((char *)v1 != (char *)functionCoefficientUnit)
      {
        if (v1 == functionPow)
        {
          v5 = *(_QWORD *)(result + 16);
          if (v5)
          {
            if (*(_QWORD *)(result + 24) && *(void (**)(uint64_t, uint64_t))(v5 + 8) == functionUnit)
              return treeDecimalValue(*(double **)(result + 16));
          }
        }
        return 0;
      }
      v6 = *(int **)(result + 16);
      if (!v6 || *((void (**)(uint64_t, uint64_t))v6 + 1) != functionConstant)
        return 0;
      v9 = *v6;
      if (*v6 != 1)
      {
        if (v9 == 2)
          return *((_QWORD *)v6 + 6);
        if (v9 == 4)
          return *((_QWORD *)v6 + 8);
        return 0;
      }
      v7 = *((double *)v6 + 4);
    }
    if (my_rnd_mode)
      v8 = 4;
    else
      v8 = 0;
    return __binary64_to_bid128(v8, &my_fpsf, v7);
  }
  return result;
}

void functionCoefficientUnit(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];
  char v3;

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = ___functionMultiply_block_invoke;
  v2[3] = &__block_descriptor_49_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  v2[5] = a1;
  v3 = 1;
  evaluateBinary(a1, a2, v2);
}

void functionPow(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD v3[5];

  ++g_PowNestingLevel;
  v2 = g_negationCount;
  g_negationCount = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __functionPow_block_invoke;
  v3[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v3[4] = a2;
  evaluateBinary(a1, a2, v3);
  g_negationCount = v2;
  --g_PowNestingLevel;
}

uint64_t __functionPow_block_invoke(uint64_t result, int *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  int *v12;
  unint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  int *v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  int v29;
  double v30;
  unint64_t v31;
  unint64_t v32;
  int v34;
  unint64_t v35;
  int v36;
  int v37;
  double v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  int v42;
  double v43;
  int v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  int v56;
  int *v57;
  int v58;
  BOOL v59;
  int v61;
  unint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  int v68;

  v3 = result;
  if (a3[19])
  {
LABEL_2:
    v4 = *(_QWORD *)(v3 + 32);
    *(_DWORD *)(v4 + 204) = 9;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  v7 = -1;
  v8 = 21;
  while (v7 != 14)
  {
    v9 = a3[v8];
    ++v7;
    v8 += 2;
    if (v9)
    {
      if (v7 < 0xF)
        goto LABEL_2;
      break;
    }
  }
  if (a2[19])
  {
LABEL_8:
    v10 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v15 = 4;
      else
        v15 = 0;
      v11 = __binary64_to_bid128(v15, &my_fpsf, *((double *)a3 + 4));
      v17 = v16;
    }
    else if (v10 == 2)
    {
      v11 = *((_QWORD *)a3 + 6);
      v17 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v10 == 4)
        v11 = *((_QWORD *)a3 + 8);
      else
        v11 = 0;
      v17 = 0x3040000000000000;
    }
    v68 = 0;
    v18 = __bid128_round_integral_exact(v11, v17, 4, &v68);
    result = __bid128_quiet_equal(v11, v17, v18, v19, &v68);
    if (!(_DWORD)result)
      goto LABEL_2;
  }
  else
  {
    v12 = a2 + 21;
    v13 = -1;
    while (v13 != 14)
    {
      v14 = *v12;
      v12 += 2;
      ++v13;
      if (v14)
      {
        if (v13 <= 0xE)
          goto LABEL_8;
        break;
      }
    }
  }
  v20 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    v21 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
  }
  else if (v20 == 2)
  {
    v21 = *((_QWORD *)a2 + 6);
    v23 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v20 == 4)
      v21 = *((_QWORD *)a2 + 8);
    else
      v21 = 0;
    v23 = 0x3040000000000000;
  }
  if (!__bid128_quiet_equal(v21, v23, 1uLL, 0x3040000000000000uLL, &my_fpsf))
    goto LABEL_42;
  if (!a2[19])
  {
    v24 = a2 + 21;
    v25 = -1;
    while (v25 != 14)
    {
      v26 = *v24;
      v24 += 2;
      ++v25;
      if (v26)
      {
        if (v25 < 0xF)
          goto LABEL_43;
        break;
      }
    }
LABEL_42:
    g_isTrivial = 0;
  }
LABEL_43:
  v27 = *(_QWORD *)(v3 + 32);
  if (*(_DWORD *)v27 == 4 || *(_DWORD *)v27 == 1)
  {
    v29 = *a2;
    if (*a2 == 1)
    {
      v30 = *((double *)a2 + 4);
    }
    else if (v29 == 2)
    {
      if (my_rnd_mode)
        v36 = 4;
      else
        v36 = 0;
      v30 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v36, &my_fpsf);
    }
    else
    {
      v30 = 0.0;
      if (v29 == 4)
      {
        v31 = *((_QWORD *)a2 + 8);
        v32 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v31 && v32 > v31)
          v30 = (double)v31;
        else
          v30 = NAN;
      }
    }
    v37 = *a3;
    if (*a3 == 1)
    {
      v38 = *((double *)a3 + 4);
    }
    else if (v37 == 2)
    {
      if (my_rnd_mode)
        v42 = 4;
      else
        v42 = 0;
      v38 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v42, &my_fpsf);
    }
    else
    {
      v38 = 0.0;
      if (v37 == 4)
      {
        v39 = *((_QWORD *)a3 + 8);
        v40 = (uint64_t)rint(1.79769313e308);
        v41 = (uint64_t)rint(2.22507386e-308) < v39 && v40 > v39;
        v38 = NAN;
        if (v41)
          v38 = (double)v39;
      }
    }
    v43 = pow(v30, v38);
    *(double *)(v27 + 32) = v43;
    *(_QWORD *)(v27 + 64) = (uint64_t)rint(v43);
  }
  else
  {
    v34 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v44 = 4;
      else
        v44 = 0;
      v35 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a2 + 4));
      v46 = v45;
    }
    else if (v34 == 2)
    {
      v35 = *((_QWORD *)a2 + 6);
      v46 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v34 == 4)
        v35 = *((_QWORD *)a2 + 8);
      else
        v35 = 0;
      v46 = 0x3040000000000000;
    }
    v47 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v49 = 4;
      else
        v49 = 0;
      v48 = __binary64_to_bid128(v49, &my_fpsf, *((double *)a3 + 4));
      v51 = v50;
    }
    else if (v47 == 2)
    {
      v48 = *((_QWORD *)a3 + 6);
      v51 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v47 == 4)
        v48 = *((_QWORD *)a3 + 8);
      else
        v48 = 0;
      v51 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v52 = 4;
    else
      v52 = 0;
    *(_QWORD *)(v27 + 48) = bid128_pow_fix(v35, v46, v48, v51, v52, &my_fpsf);
    *(_QWORD *)(v27 + 56) = v53;
    v27 = *(_QWORD *)(v3 + 32);
  }
  v54 = 0;
  v55 = g_isTrivial;
  if (my_rnd_mode)
    v56 = 4;
  else
    v56 = 0;
  do
  {
    v57 = &a2[v54];
    *(_DWORD *)(v27 + v54 * 4 + 72) = a2[v54 + 18];
    if ((v55 & 1) != 0)
    {
      v58 = v57[19];
      v59 = v58 == 0;
      if (v58 < 0)
        v58 = -v58;
      if (v59 || v58 == 1)
      {
        v55 = 1;
      }
      else
      {
        v61 = *a3;
        if (*a3 == 1)
        {
          v62 = __binary64_to_bid128(v56, &my_fpsf, *((double *)a3 + 4));
        }
        else if (v61 == 2)
        {
          v62 = *((_QWORD *)a3 + 6);
          v63 = *((_QWORD *)a3 + 7);
        }
        else
        {
          if (v61 == 4)
            v62 = *((_QWORD *)a3 + 8);
          else
            v62 = 0;
          v63 = 0x3040000000000000;
        }
        v55 = 1;
        if (!__bid128_quiet_equal(v62, v63 & 0x7FFFFFFFFFFFFFFFLL, 1uLL, 0x3040000000000000uLL, &my_fpsf))
        {
          v55 = 0;
          g_isTrivial = 0;
        }
      }
    }
    else
    {
      v55 = 0;
    }
    v64 = v57[19];
    v65 = *a3;
    if (*a3 == 1)
    {
      v66 = __binary64_to_bid128(v56, &my_fpsf, *((double *)a3 + 4));
    }
    else if (v65 == 2)
    {
      v66 = *((_QWORD *)a3 + 6);
      v67 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v65 == 4)
        v66 = *((_QWORD *)a3 + 8);
      else
        v66 = 0;
      v67 = 0x3040000000000000;
    }
    result = __bid128_to_int32_int(v66, v67, &my_fpsf);
    *(_DWORD *)(v27 + v54 * 4 + 76) = result * v64;
    v54 += 2;
  }
  while (v54 != 32);
  return result;
}

void ___functionMultiply_block_invoke(uint64_t a1, int *a2, int *a3)
{
  uint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  int *v23;
  unint64_t v24;
  int v25;
  int *v26;
  unint64_t v27;
  int v28;
  double *v29;
  int v30;
  int v31;
  unint64_t v32;
  int v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;

  v48 = 0;
  v6 = (uint64_t)(a2 + 18);
  v7 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v9 = 4;
    else
      v9 = 0;
    v8 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a3 + 4));
    v11 = v10;
  }
  else if (v7 == 2)
  {
    v8 = *((_QWORD *)a3 + 6);
    v11 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v7 == 4)
      v8 = *((_QWORD *)a3 + 8);
    else
      v8 = 0;
    v11 = 0x3040000000000000;
  }
  v12 = UnitCountMultiply(v6, v8, v11, (uint64_t)(a3 + 18), *(_QWORD *)(a1 + 32) + 72, &v48);
  v14 = v12;
  v15 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    v16 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v16 + 204) = v48;
    *(_QWORD *)(v16 + 48) = v12;
    *(_QWORD *)(v16 + 56) = v13;
    return;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  if (!v17)
  {
LABEL_27:
    v18 = 0x3040000000000000;
    goto LABEL_28;
  }
  if (*(void (**)(uint64_t, uint64_t))(v17 + 8) != functionSameCurrency)
  {
    v17 = trivialCoefficient(v17);
    goto LABEL_28;
  }
  v19 = *a2;
  if (*a2 != 1)
  {
    if (v19 == 2)
    {
      v17 = *((_QWORD *)a2 + 6);
      v18 = *((_QWORD *)a2 + 7);
      goto LABEL_28;
    }
    if (v19 == 4)
      v17 = *((_QWORD *)a2 + 8);
    else
      v17 = 0;
    goto LABEL_27;
  }
  if (my_rnd_mode)
    v20 = 4;
  else
    v20 = 0;
  v17 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
LABEL_28:
  if (g_isTrivial == 1)
  {
    if (__bid128_quiet_equal(v17, v18, 1uLL, 0x3040000000000000uLL, &my_fpsf)
      || (v21 = trivialCoefficient(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 24)),
          __bid128_quiet_equal(v21, v22, 1uLL, 0x3040000000000000uLL, &my_fpsf)))
    {
      if (a2[19])
        goto LABEL_42;
      v23 = a2 + 21;
      v24 = -1;
      while (v24 != 14)
      {
        v25 = *v23;
        v23 += 2;
        ++v24;
        if (v25)
        {
          if (v24 < 0xF)
            goto LABEL_42;
          break;
        }
      }
      if (a3[19])
        goto LABEL_42;
      v26 = a3 + 21;
      v27 = -1;
      while (v27 != 14)
      {
        v28 = *v26;
        v26 += 2;
        ++v27;
        if (v28)
        {
          if (v27 < 0xF)
            goto LABEL_42;
          break;
        }
      }
    }
    g_isTrivial = 0;
  }
LABEL_42:
  v29 = *(double **)(a1 + 32);
  v30 = *(_DWORD *)v29;
  if (*(_DWORD *)v29 == 1)
  {
    v33 = *a2;
    if (*a2 == 1)
    {
      v34 = *((double *)a2 + 4);
    }
    else if (v33 == 2)
    {
      if (my_rnd_mode)
        v42 = 4;
      else
        v42 = 0;
      v34 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v42, &my_fpsf);
    }
    else
    {
      v34 = 0.0;
      if (v33 == 4)
      {
        v35 = *((_QWORD *)a2 + 8);
        v36 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v35 && v36 > v35)
          v34 = (double)v35;
        else
          v34 = NAN;
      }
    }
    if (my_rnd_mode)
      v43 = 4;
    else
      v43 = 0;
    v29[4] = v34 * __bid128_to_binary64(v14, v15, v43, &my_fpsf);
  }
  else if (v30 == 2)
  {
    v38 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v44 = 4;
      else
        v44 = 0;
      v39 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v38 == 2)
    {
      v39 = *((_QWORD *)a2 + 6);
      v45 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v38 == 4)
        v39 = *((_QWORD *)a2 + 8);
      else
        v39 = 0;
      v45 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v46 = 4;
    else
      v46 = 0;
    *((_QWORD *)v29 + 6) = __bid128_mul(v39, v45, v14, v15, v46, &my_fpsf);
    *((_QWORD *)v29 + 7) = v47;
  }
  else if (v30 == 4)
  {
    v31 = *a2;
    if (*a2 == 1)
    {
      v32 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v31 == 2)
    {
      v40 = *((_QWORD *)a2 + 6);
      v41 = *((_QWORD *)a2 + 7);
      v49 = 0;
      v32 = __bid128_to_uint64_int(v40, v41, &v49);
    }
    else if (v31 == 4)
    {
      v32 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v32 = 0;
    }
    v50 = 0;
    *((_QWORD *)v29 + 8) = __bid128_to_uint64_int(v14, v15, &v50) * v32;
  }
  if (*(_BYTE *)(a1 + 48) && (*((_BYTE *)a2 + 202) || *((_BYTE *)a3 + 202)))
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 202) = 1;
}

void functionSameCurrency(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSameCurrency_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionSameCurrency_block_invoke(uint64_t a1, int *a2, int *a3)
{
  __int128 *v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  double *v32;
  int v33;
  int v34;
  unint64_t v35;
  int v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;

  v6 = (__int128 *)(a2 + 18);
  v51 = (uint64_t)(a3 + 18);
  v7 = (id)g_unitsInfo;
  v8 = 0;
  v9 = 0;
  v10 = 18;
  do
  {
    v11 = a2[v10 + 1];
    if (v11 != a3[v10 + 1])
    {
LABEL_9:

      goto LABEL_10;
    }
    if (v11)
    {
      if (a2[v10] != a3[v10])
        goto LABEL_9;
      objc_msgSend(v7, "infoForUnitType:", v8);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "isCurrency");

      v9 |= v13;
    }
    ++v8;
    v10 += 2;
  }
  while (v8 != 16);

  if ((v9 & 1) != 0)
  {
    v14 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v14 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(v14 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)(v14 + 48) = *((_OWORD *)a2 + 3);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *v6;
    v17 = v6[1];
    v18 = v6[2];
    *(_OWORD *)(v15 + 120) = v6[3];
    *(_OWORD *)(v15 + 104) = v18;
    *(_OWORD *)(v15 + 88) = v17;
    *(_OWORD *)(v15 + 72) = v16;
    v19 = v6[4];
    v20 = v6[5];
    v21 = v6[6];
    *(_OWORD *)(v15 + 184) = v6[7];
    *(_OWORD *)(v15 + 168) = v21;
    *(_OWORD *)(v15 + 152) = v20;
    *(_OWORD *)(v15 + 136) = v19;
    return;
  }
LABEL_10:
  v52 = 0;
  v22 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v24 = 4;
    else
      v24 = 0;
    v23 = __binary64_to_bid128(v24, &my_fpsf, *((double *)a3 + 4));
    v26 = v25;
  }
  else if (v22 == 2)
  {
    v23 = *((_QWORD *)a3 + 6);
    v26 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v22 == 4)
      v23 = *((_QWORD *)a3 + 8);
    else
      v23 = 0;
    v26 = 0x3040000000000000;
  }
  v27 = UnitCountMultiply((uint64_t)v6, v23, v26, v51, *(_QWORD *)(a1 + 32) + 72, &v52);
  v29 = v27;
  v30 = v28;
  if ((~v28 & 0x7C00000000000000) != 0)
  {
    g_isTrivial = 0;
    v32 = *(double **)(a1 + 32);
    v33 = *(_DWORD *)v32;
    if (*(_DWORD *)v32 == 1)
    {
      v36 = *a2;
      if (*a2 == 1)
      {
        v37 = *((double *)a2 + 4);
      }
      else if (v36 == 2)
      {
        if (my_rnd_mode)
          v45 = 4;
        else
          v45 = 0;
        v37 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v45, &my_fpsf);
      }
      else
      {
        v37 = 0.0;
        if (v36 == 4)
        {
          v38 = *((_QWORD *)a2 + 8);
          v39 = (uint64_t)rint(1.79769313e308);
          if ((uint64_t)rint(2.22507386e-308) < v38 && v39 > v38)
            v37 = (double)v38;
          else
            v37 = NAN;
        }
      }
      if (my_rnd_mode)
        v46 = 4;
      else
        v46 = 0;
      v32[4] = v37 * __bid128_to_binary64(v29, v30, v46, &my_fpsf);
    }
    else if (v33 == 2)
    {
      v41 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v47 = 4;
        else
          v47 = 0;
        v42 = __binary64_to_bid128(v47, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v41 == 2)
      {
        v42 = *((_QWORD *)a2 + 6);
        v48 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v41 == 4)
          v42 = *((_QWORD *)a2 + 8);
        else
          v42 = 0;
        v48 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v49 = 4;
      else
        v49 = 0;
      *((_QWORD *)v32 + 6) = __bid128_mul(v42, v48, v29, v30, v49, &my_fpsf);
      *((_QWORD *)v32 + 7) = v50;
    }
    else if (v33 == 4)
    {
      v34 = *a2;
      if (*a2 == 1)
      {
        v35 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v34 == 2)
      {
        v43 = *((_QWORD *)a2 + 6);
        v44 = *((_QWORD *)a2 + 7);
        v53 = 0;
        v35 = __bid128_to_uint64_int(v43, v44, &v53);
      }
      else if (v34 == 4)
      {
        v35 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v35 = 0;
      }
      v54 = 0;
      *((_QWORD *)v32 + 8) = __bid128_to_uint64_int(v29, v30, &v54) * v35;
    }
  }
  else
  {
    v31 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v31 + 204) = v52;
    *(_QWORD *)(v31 + 48) = v27;
    *(_QWORD *)(v31 + 56) = v28;
  }
}

void functionMultiply(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];
  char v3;

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = ___functionMultiply_block_invoke;
  v2[3] = &__block_descriptor_49_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  v2[5] = a1;
  v3 = 0;
  evaluateBinary(a1, a2, v2);
}

void functionDivide(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionDivide_block_invoke;
  v2[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  v2[5] = a1;
  evaluateBinary(a1, a2, v2);
}

void __functionDivide_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  _BOOL4 v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  int *v22;
  int *v23;
  uint64_t v24;
  uint64_t i;
  uint64_t j;
  int v27;
  int *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int *v34;
  int v35;
  BOOL v36;
  int *v37;
  int v38;
  int v39;
  unint64_t v40;
  int *v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _BOOL4 v46;
  int *v47;
  unint64_t v48;
  int v49;
  int *v50;
  unint64_t v51;
  int v52;
  double *v53;
  int v54;
  int v55;
  unint64_t v56;
  int v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  unint64_t v70;
  double v71;
  int v72;
  int v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;

  v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v8 = 4;
    else
      v8 = 0;
    v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    v7 = *((_QWORD *)a3 + 6);
    v9 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v6 == 4)
      v7 = *((_QWORD *)a3 + 8);
    else
      v7 = 0;
    v9 = 0x3040000000000000;
  }
  if (__bid128_quiet_equal(v7, v9, 0, 0x3040000000000000uLL, &my_fpsf))
  {
    v10 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v14 = 4;
      else
        v14 = 0;
      v11 = __binary64_to_bid128(v14, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v10 == 2)
    {
      v11 = *((_QWORD *)a2 + 6);
      v15 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v10 == 4)
        v11 = *((_QWORD *)a2 + 8);
      else
        v11 = 0;
      v15 = 0x3040000000000000;
    }
    v16 = __bid128_quiet_equal(v11, v15, 0, 0x3040000000000000uLL, &my_fpsf);
    v17 = *(_QWORD *)(a1 + 32);
    if (v16)
      v18 = 15;
    else
      v18 = 1;
    *(_DWORD *)(v17 + 204) = v18;
    my_fpsf |= 4u;
    *(_QWORD *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 56) = 0x7C00000000000000;
    return;
  }
  v77 = 0;
  v12 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v13 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a3 + 4));
    v21 = v20;
  }
  else if (v12 == 2)
  {
    v13 = *((_QWORD *)a3 + 6);
    v21 = *((_QWORD *)a3 + 7);
  }
  else
  {
    if (v12 == 4)
      v13 = *((_QWORD *)a3 + 8);
    else
      v13 = 0;
    v21 = 0x3040000000000000;
  }
  v22 = a2 + 18;
  v23 = a3 + 18;
  v24 = *(_QWORD *)(a1 + 32);
  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    for (i = 0; i != 32; i += 2)
    {
      if (a2[i + 19] && a3[i + 19] && a2[i + 18] != a3[i + 18])
      {
        v13 = 0;
        v21 = 0x7C00000000000000;
        v42 = 8;
        goto LABEL_89;
      }
    }
    for (j = 0; j != 32; j += 2)
    {
      v27 = a3[j + 19];
      if (v27)
        v28 = a3 + 18;
      else
        v28 = a2 + 18;
      v29 = v24 + j * 4;
      v30 = a2[j + 19] - v27;
      *(_DWORD *)(v29 + 72) = v28[j];
      *(_DWORD *)(v29 + 76) = v30;
    }
  }
  else
  {
    v31 = 0;
    v32 = v24 + 72;
    do
    {
      v33 = v23[v31 + 1];
      v34 = &v22[v31];
      v35 = v22[v31 + 1];
      if (v35 | v33)
      {
        if (v35)
          v36 = v33 == 0;
        else
          v36 = 1;
        if (v36)
        {
          if (v33)
            v37 = a3 + 18;
          else
            v37 = a2 + 18;
          v38 = v37[v31];
        }
        else
        {
          v38 = *v34;
          v39 = v23[v31];
          if (*v34 != v39)
          {
            v13 = UnitCountConvertID(v13, v21, v39, v23[v31 + 1], v38, 0, &v77);
            v21 = v40;
            v38 = *v34;
            v35 = v34[1];
          }
        }
        v41 = (int *)(v32 + v31 * 4);
        *v41 = v38;
        v41[1] = v35 - v33;
      }
      v31 += 2;
    }
    while (v31 != 32);
  }
  if ((~v21 & 0x7C00000000000000) != 0)
  {
    if (g_isTrivial == 1)
    {
      v43 = v13;
      v44 = trivialCoefficient(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 24));
      v46 = __bid128_quiet_equal(v44, v45, 1uLL, 0x3040000000000000uLL, &my_fpsf);
      v13 = v43;
      if (v46)
      {
        if (a2[19])
          goto LABEL_81;
        v47 = a2 + 21;
        v48 = -1;
        while (v48 != 14)
        {
          v49 = *v47;
          v47 += 2;
          ++v48;
          if (v49)
          {
            if (v48 < 0xF)
              goto LABEL_81;
            break;
          }
        }
        if (a3[19])
          goto LABEL_81;
        v50 = a3 + 21;
        v51 = -1;
        while (v51 != 14)
        {
          v52 = *v50;
          v50 += 2;
          ++v51;
          if (v52)
          {
            if (v51 < 0xF)
              goto LABEL_81;
            break;
          }
        }
      }
      g_isTrivial = 0;
    }
LABEL_81:
    v53 = *(double **)(a1 + 32);
    v54 = *(_DWORD *)v53;
    if (*(_DWORD *)v53 == 1)
    {
      v57 = *a2;
      if (*a2 == 1)
      {
        v58 = *((double *)a2 + 4);
      }
      else if (v57 == 2)
      {
        if (my_rnd_mode)
          v69 = 4;
        else
          v69 = 0;
        v70 = v13;
        v71 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v69, &my_fpsf);
        v13 = v70;
        v58 = v71;
      }
      else
      {
        v58 = 0.0;
        if (v57 == 4)
        {
          v59 = *((_QWORD *)a2 + 8);
          v60 = (uint64_t)rint(1.79769313e308);
          if ((uint64_t)rint(2.22507386e-308) < v59 && v60 > v59)
            v58 = (double)v59;
          else
            v58 = NAN;
        }
      }
      if (my_rnd_mode)
        v72 = 4;
      else
        v72 = 0;
      v53[4] = v58 / __bid128_to_binary64(v13, v21, v72, &my_fpsf);
    }
    else if (v54 == 2)
    {
      v62 = v13;
      v63 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v73 = 4;
        else
          v73 = 0;
        v64 = __binary64_to_bid128(v73, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v63 == 2)
      {
        v64 = *((_QWORD *)a2 + 6);
        v74 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v63 == 4)
          v64 = *((_QWORD *)a2 + 8);
        else
          v64 = 0;
        v74 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v75 = 4;
      else
        v75 = 0;
      *((_QWORD *)v53 + 6) = __bid128_div(v64, v74, v62, v21, v75, &my_fpsf);
      *((_QWORD *)v53 + 7) = v76;
    }
    else if (v54 == 4)
    {
      v55 = *a2;
      if (*a2 == 1)
      {
        v56 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v55 == 2)
      {
        v65 = *((_QWORD *)a2 + 6);
        v66 = *((_QWORD *)a2 + 7);
        v78 = 0;
        v67 = v13;
        v68 = __bid128_to_uint64_int(v65, v66, &v78);
        v13 = v67;
        v56 = v68;
      }
      else if (v55 == 4)
      {
        v56 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v56 = 0;
      }
      v79 = 0;
      *((_QWORD *)v53 + 8) = v56 / __bid128_to_uint64_int(v13, v21, &v79);
    }
    return;
  }
  v42 = v77;
  v24 = *(_QWORD *)(a1 + 32);
LABEL_89:
  *(_DWORD *)(v24 + 204) = v42;
  *(_QWORD *)(v24 + 48) = v13;
  *(_QWORD *)(v24 + 56) = v21;
}

void functionNegate(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionNegate_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionNegate_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int v11;
  double *v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  double v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  v2 = g_PowNestingLevel;
  if (g_GeneratingConvertTerm == 1 && g_PowNestingLevel == 0)
  {
    v16 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v16 + 204) = 10;
    *(_QWORD *)(v16 + 48) = 0;
    *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_OWORD *)(a2 + 18);
    v6 = *(_OWORD *)(a2 + 22);
    v7 = *(_OWORD *)(a2 + 26);
    *(_OWORD *)(v4 + 120) = *(_OWORD *)(a2 + 30);
    *(_OWORD *)(v4 + 104) = v7;
    *(_OWORD *)(v4 + 88) = v6;
    *(_OWORD *)(v4 + 72) = v5;
    v8 = *(_OWORD *)(a2 + 34);
    v9 = *(_OWORD *)(a2 + 38);
    v10 = *(_OWORD *)(a2 + 42);
    *(_OWORD *)(v4 + 184) = *(_OWORD *)(a2 + 46);
    *(_OWORD *)(v4 + 168) = v10;
    *(_OWORD *)(v4 + 152) = v9;
    *(_OWORD *)(v4 + 136) = v8;
    if (!v2)
    {
      v11 = g_negationCount++;
      if (v11 >= 1)
        g_isTrivial = 0;
    }
    v12 = *(double **)(a1 + 32);
    v13 = *(_DWORD *)v12;
    if (*(_DWORD *)v12 == 1)
    {
      v17 = *a2;
      if (*a2 == 1)
      {
        v18 = *((double *)a2 + 4);
      }
      else if (v17 == 2)
      {
        if (my_rnd_mode)
          v26 = 4;
        else
          v26 = 0;
        v18 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v26, &my_fpsf);
      }
      else
      {
        v18 = 0.0;
        if (v17 == 4)
        {
          v19 = *((_QWORD *)a2 + 8);
          v20 = (uint64_t)rint(1.79769313e308);
          v21 = (uint64_t)rint(2.22507386e-308) < v19 && v20 > v19;
          v18 = (double)v19;
          if (!v21)
            v18 = NAN;
        }
      }
      v12[4] = -v18;
    }
    else if (v13 == 2)
    {
      v22 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v27 = 4;
        else
          v27 = 0;
        v23 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
        v29 = v28;
      }
      else if (v22 == 2)
      {
        v23 = *((_QWORD *)a2 + 6);
        v29 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v22 == 4)
          v23 = *((_QWORD *)a2 + 8);
        else
          v23 = 0;
        v29 = 0x3040000000000000;
      }
      *((_QWORD *)v12 + 6) = v23;
      *((_QWORD *)v12 + 7) = v29 ^ 0x8000000000000000;
    }
    else if (v13 == 4)
    {
      v14 = *a2;
      if (*a2 == 1)
      {
        v15 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v14 == 2)
      {
        v24 = *((_QWORD *)a2 + 6);
        v25 = *((_QWORD *)a2 + 7);
        v30 = 0;
        v15 = __bid128_to_uint64_int(v24, v25, &v30);
      }
      else if (v14 == 4)
      {
        v15 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v15 = 0;
      }
      *((_QWORD *)v12 + 8) = -(uint64_t)v15;
    }
  }
}

void functionPercent(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionPercent_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionPercent_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  int *v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  int v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v31;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v6 = *(int **)(a1 + 32);
    v7 = *v6;
    if (*v6 == 1)
    {
      v10 = *a2;
      if (*a2 == 1)
      {
        v11 = *((double *)a2 + 4);
      }
      else if (v10 == 2)
      {
        v19 = *((_QWORD *)a2 + 6);
        v20 = *((_QWORD *)a2 + 7);
        if (my_rnd_mode)
          v21 = 4;
        else
          v21 = 0;
        v11 = __bid128_to_binary64(v19, v20, v21, &my_fpsf);
      }
      else
      {
        v11 = 0.0;
        if (v10 == 4)
        {
          v12 = *((_QWORD *)a2 + 8);
          v13 = (uint64_t)rint(1.79769313e308);
          v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
          v11 = (double)v12;
          if (!v14)
            v11 = NAN;
        }
      }
      *((double *)v6 + 4) = v11 / 100.0;
    }
    else if (v7 == 2)
    {
      v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v16 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a2 + 6);
        v23 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v15 == 4)
          v16 = *((_QWORD *)a2 + 8);
        else
          v16 = 0;
        v23 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      *((_QWORD *)v6 + 6) = __bid128_div(v16, v23, 0x64uLL, 0x3040000000000000uLL, v24, &my_fpsf);
      *((_QWORD *)v6 + 7) = v25;
      v6 = *(int **)(a1 + 32);
    }
    else if (v7 == 4)
    {
      v8 = *a2;
      if (*a2 == 1)
      {
        v9 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v8 == 2)
      {
        v17 = *((_QWORD *)a2 + 6);
        v18 = *((_QWORD *)a2 + 7);
        v31 = 0;
        v9 = __bid128_to_uint64_int(v17, v18, &v31);
      }
      else if (v8 == 4)
      {
        v9 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v9 = 0;
      }
      *((_QWORD *)v6 + 8) = v9 / 0x64;
    }
    v26 = *(_OWORD *)(a2 + 18);
    v27 = *(_OWORD *)(a2 + 22);
    v28 = *(_OWORD *)(a2 + 26);
    *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
    *(_OWORD *)(v6 + 26) = v28;
    *(_OWORD *)(v6 + 22) = v27;
    *(_OWORD *)(v6 + 18) = v26;
    result = *(__n128 *)(a2 + 34);
    v29 = *(_OWORD *)(a2 + 38);
    v30 = *(_OWORD *)(a2 + 42);
    *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
    *(_OWORD *)(v6 + 42) = v30;
    *(_OWORD *)(v6 + 38) = v29;
    *(__n128 *)(v6 + 34) = result;
  }
  return result;
}

void functionPercentIncrease(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionPercentIncrease_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionPercentIncrease_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v4;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  BOOL v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int v58;
  int v59;
  int v60;

  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    v4 = 10;
LABEL_5:
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v6 + 204) = v4;
    *(_QWORD *)(v6 + 48) = 0;
    *(_QWORD *)(v6 + 56) = 0x7C00000000000000;
    return;
  }
  if (a3[19])
  {
LABEL_4:
    v4 = 9;
    goto LABEL_5;
  }
  v8 = -1;
  v9 = 21;
  while (v8 != 14)
  {
    v10 = a3[v9];
    ++v8;
    v9 += 2;
    if (v10)
    {
      if (v8 <= 0xE)
        goto LABEL_4;
      break;
    }
  }
  g_isTrivial = 0;
  v11 = *(int **)(a1 + 32);
  v12 = *v11;
  if (*v11 == 1)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      v29 = *((_QWORD *)a2 + 6);
      v30 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v31 = 4;
      else
        v31 = 0;
      v16 = __bid128_to_binary64(v29, v30, v31, &my_fpsf);
    }
    else
    {
      v16 = 0.0;
      if (v15 == 4)
      {
        v17 = *((_QWORD *)a2 + 8);
        v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17)
          v16 = (double)v17;
        else
          v16 = NAN;
      }
    }
    v32 = *a3;
    if (*a3 == 1)
    {
      v33 = *((double *)a3 + 4);
    }
    else if (v32 == 2)
    {
      if (my_rnd_mode)
        v49 = 4;
      else
        v49 = 0;
      v33 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v49, &my_fpsf);
    }
    else
    {
      v33 = 0.0;
      if (v32 == 4)
      {
        v34 = *((_QWORD *)a3 + 8);
        v35 = (uint64_t)rint(1.79769313e308);
        v36 = (uint64_t)rint(2.22507386e-308) < v34 && v35 > v34;
        v33 = (double)v34;
        if (!v36)
          v33 = NAN;
      }
    }
    *((double *)v11 + 4) = v16 * (v33 + 1.0);
    goto LABEL_80;
  }
  if (v12 == 2)
  {
    v20 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v37 = 4;
      else
        v37 = 0;
      v21 = __binary64_to_bid128(v37, &my_fpsf, *((double *)a3 + 4));
      v39 = v38;
    }
    else if (v20 == 2)
    {
      v21 = *((_QWORD *)a3 + 6);
      v39 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v20 == 4)
        v21 = *((_QWORD *)a3 + 8);
      else
        v21 = 0;
      v39 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v40 = 4;
    else
      v40 = 0;
    v41 = 0x3040000000000000;
    v42 = __bid128_add(1uLL, 0x3040000000000000, v21, v39, v40, &my_fpsf);
    v44 = v43;
    v45 = *a2;
    if (*a2 == 1)
    {
      v46 = __binary64_to_bid128(v40, &my_fpsf, *((double *)a2 + 4));
      v41 = v50;
    }
    else if (v45 == 2)
    {
      v46 = *((_QWORD *)a2 + 6);
      v41 = *((_QWORD *)a2 + 7);
    }
    else if (v45 == 4)
    {
      v46 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v46 = 0;
    }
    *((_QWORD *)v11 + 6) = __bid128_mul(v46, v41, v42, v44, v40, &my_fpsf);
    *((_QWORD *)v11 + 7) = v51;
    v11 = *(int **)(a1 + 32);
    goto LABEL_80;
  }
  if (v12 == 4)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      v14 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else
    {
      if (v13 == 2)
      {
        v23 = *((_QWORD *)a2 + 6);
        v24 = *((_QWORD *)a2 + 7);
        v58 = 0;
        v14 = __bid128_to_uint64_int(v23, v24, &v58);
        v25 = *((_QWORD *)a2 + 6);
        v26 = *((_QWORD *)a2 + 7);
        v59 = 0;
        v22 = __bid128_to_uint64_int(v25, v26, &v59);
        goto LABEL_34;
      }
      if (v13 != 4)
      {
        v14 = 0;
        v22 = 0;
        goto LABEL_34;
      }
      v14 = *((_QWORD *)a2 + 8);
    }
    v22 = v14;
LABEL_34:
    v27 = *a3;
    if (*a3 == 1)
    {
      v28 = (uint64_t)rint(*((double *)a3 + 4));
    }
    else if (v27 == 2)
    {
      v47 = *((_QWORD *)a3 + 6);
      v48 = *((_QWORD *)a3 + 7);
      v60 = 0;
      v28 = __bid128_to_uint64_int(v47, v48, &v60);
    }
    else if (v27 == 4)
    {
      v28 = *((_QWORD *)a3 + 8);
    }
    else
    {
      v28 = 0;
    }
    *((_QWORD *)v11 + 8) = v14 + v28 * v22;
  }
LABEL_80:
  v52 = *(_OWORD *)(a2 + 18);
  v53 = *(_OWORD *)(a2 + 22);
  v54 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v11 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v11 + 26) = v54;
  *(_OWORD *)(v11 + 22) = v53;
  *(_OWORD *)(v11 + 18) = v52;
  v55 = *(_OWORD *)(a2 + 34);
  v56 = *(_OWORD *)(a2 + 38);
  v57 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v11 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v11 + 42) = v57;
  *(_OWORD *)(v11 + 38) = v56;
  *(_OWORD *)(v11 + 34) = v55;
}

void functionPercentDecrease(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionPercentDecrease_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionPercentDecrease_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v4;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int v12;
  int v13;
  unint64_t v14;
  int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  BOOL v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int v58;
  int v59;
  int v60;

  if ((g_GeneratingConvertTerm & 1) != 0)
  {
    v4 = 10;
LABEL_5:
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v6 + 204) = v4;
    *(_QWORD *)(v6 + 48) = 0;
    *(_QWORD *)(v6 + 56) = 0x7C00000000000000;
    return;
  }
  if (a3[19])
  {
LABEL_4:
    v4 = 9;
    goto LABEL_5;
  }
  v8 = -1;
  v9 = 21;
  while (v8 != 14)
  {
    v10 = a3[v9];
    ++v8;
    v9 += 2;
    if (v10)
    {
      if (v8 <= 0xE)
        goto LABEL_4;
      break;
    }
  }
  g_isTrivial = 0;
  v11 = *(int **)(a1 + 32);
  v12 = *v11;
  if (*v11 == 1)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      v29 = *((_QWORD *)a2 + 6);
      v30 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v31 = 4;
      else
        v31 = 0;
      v16 = __bid128_to_binary64(v29, v30, v31, &my_fpsf);
    }
    else
    {
      v16 = 0.0;
      if (v15 == 4)
      {
        v17 = *((_QWORD *)a2 + 8);
        v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17)
          v16 = (double)v17;
        else
          v16 = NAN;
      }
    }
    v32 = *a3;
    if (*a3 == 1)
    {
      v33 = *((double *)a3 + 4);
    }
    else if (v32 == 2)
    {
      if (my_rnd_mode)
        v49 = 4;
      else
        v49 = 0;
      v33 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v49, &my_fpsf);
    }
    else
    {
      v33 = 0.0;
      if (v32 == 4)
      {
        v34 = *((_QWORD *)a3 + 8);
        v35 = (uint64_t)rint(1.79769313e308);
        v36 = (uint64_t)rint(2.22507386e-308) < v34 && v35 > v34;
        v33 = (double)v34;
        if (!v36)
          v33 = NAN;
      }
    }
    *((double *)v11 + 4) = v16 * (1.0 - v33);
    goto LABEL_80;
  }
  if (v12 == 2)
  {
    v20 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v37 = 4;
      else
        v37 = 0;
      v21 = __binary64_to_bid128(v37, &my_fpsf, *((double *)a3 + 4));
      v39 = v38;
    }
    else if (v20 == 2)
    {
      v21 = *((_QWORD *)a3 + 6);
      v39 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v20 == 4)
        v21 = *((_QWORD *)a3 + 8);
      else
        v21 = 0;
      v39 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v40 = 4;
    else
      v40 = 0;
    v41 = 0x3040000000000000;
    v42 = __bid128_sub(1uLL, 0x3040000000000000, v21, v39, v40, &my_fpsf);
    v44 = v43;
    v45 = *a2;
    if (*a2 == 1)
    {
      v46 = __binary64_to_bid128(v40, &my_fpsf, *((double *)a2 + 4));
      v41 = v50;
    }
    else if (v45 == 2)
    {
      v46 = *((_QWORD *)a2 + 6);
      v41 = *((_QWORD *)a2 + 7);
    }
    else if (v45 == 4)
    {
      v46 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v46 = 0;
    }
    *((_QWORD *)v11 + 6) = __bid128_mul(v46, v41, v42, v44, v40, &my_fpsf);
    *((_QWORD *)v11 + 7) = v51;
    v11 = *(int **)(a1 + 32);
    goto LABEL_80;
  }
  if (v12 == 4)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      v14 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else
    {
      if (v13 == 2)
      {
        v23 = *((_QWORD *)a2 + 6);
        v24 = *((_QWORD *)a2 + 7);
        v58 = 0;
        v14 = __bid128_to_uint64_int(v23, v24, &v58);
        v25 = *((_QWORD *)a2 + 6);
        v26 = *((_QWORD *)a2 + 7);
        v59 = 0;
        v22 = __bid128_to_uint64_int(v25, v26, &v59);
        goto LABEL_34;
      }
      if (v13 != 4)
      {
        v14 = 0;
        v22 = 0;
        goto LABEL_34;
      }
      v14 = *((_QWORD *)a2 + 8);
    }
    v22 = v14;
LABEL_34:
    v27 = *a3;
    if (*a3 == 1)
    {
      v28 = (uint64_t)rint(*((double *)a3 + 4));
    }
    else if (v27 == 2)
    {
      v47 = *((_QWORD *)a3 + 6);
      v48 = *((_QWORD *)a3 + 7);
      v60 = 0;
      v28 = __bid128_to_uint64_int(v47, v48, &v60);
    }
    else if (v27 == 4)
    {
      v28 = *((_QWORD *)a3 + 8);
    }
    else
    {
      v28 = 0;
    }
    *((_QWORD *)v11 + 8) = v14 - v28 * v22;
  }
LABEL_80:
  v52 = *(_OWORD *)(a2 + 18);
  v53 = *(_OWORD *)(a2 + 22);
  v54 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v11 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v11 + 26) = v54;
  *(_OWORD *)(v11 + 22) = v53;
  *(_OWORD *)(v11 + 18) = v52;
  v55 = *(_OWORD *)(a2 + 34);
  v56 = *(_OWORD *)(a2 + 38);
  v57 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v11 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v11 + 42) = v57;
  *(_OWORD *)(v11 + 38) = v56;
  *(_OWORD *)(v11 + 34) = v55;
}

void functionImplicitAdd(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = ___functionAdd_block_invoke;
  v2[3] = &__block_descriptor_41_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  v3 = 1;
  evaluateBinary(a1, a2, v2);
}

void functionSqrRootInline(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSqrRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionSqrRoot_block_invoke(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int *v7;
  unint64_t v8;
  int v9;
  __int128 *v10;
  int *v11;
  int v12;
  int v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  int v18;
  unint64_t v19;
  int v20;
  double v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  if (!a2[19])
  {
    v7 = a2 + 21;
    v8 = -1;
    while (v8 != 14)
    {
      v9 = *v7;
      v7 += 2;
      ++v8;
      if (v9)
        goto LABEL_16;
    }
    v8 = 15;
LABEL_16:
    v3 = g_GeneratingConvertTerm;
    if (v8 < 0xF || g_GeneratingConvertTerm)
      goto LABEL_3;
LABEL_18:
    v10 = (__int128 *)(a2 + 18);
    g_isTrivial = 0;
    v11 = *(int **)(a1 + 32);
    v12 = *v11;
    if (*v11 == 4)
      goto LABEL_21;
    if (v12 == 2)
    {
      v18 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v19 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        v24 = v23;
      }
      else if (v18 == 2)
      {
        v19 = *((_QWORD *)a2 + 6);
        v24 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v18 == 4)
          v19 = *((_QWORD *)a2 + 8);
        else
          v19 = 0;
        v24 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v25 = 4;
      else
        v25 = 0;
      *((_QWORD *)v11 + 6) = __bid128_sqrt(v19, v24, v25);
      *((_QWORD *)v11 + 7) = v26;
      v11 = *(int **)(a1 + 32);
    }
    else if (v12 == 1)
    {
LABEL_21:
      v13 = *a2;
      if (*a2 == 1)
      {
        v14 = *((double *)a2 + 4);
      }
      else if (v13 == 2)
      {
        if (my_rnd_mode)
          v20 = 4;
        else
          v20 = 0;
        v14 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v20, &my_fpsf);
      }
      else
      {
        v14 = 0.0;
        if (v13 == 4)
        {
          v15 = *((_QWORD *)a2 + 8);
          v16 = (uint64_t)rint(1.79769313e308);
          v17 = (uint64_t)rint(2.22507386e-308) < v15 && v16 > v15;
          v14 = (double)v15;
          if (!v17)
            v14 = NAN;
        }
      }
      v21 = sqrt(v14);
      *((double *)v11 + 4) = v21;
      *((_QWORD *)v11 + 8) = (uint64_t)rint(v21);
    }
    v27 = 0;
    v28 = *v10;
    v29 = v10[1];
    v30 = v10[2];
    *(_OWORD *)(v11 + 30) = v10[3];
    *(_OWORD *)(v11 + 26) = v30;
    *(_OWORD *)(v11 + 22) = v29;
    *(_OWORD *)(v11 + 18) = v28;
    v31 = v10[4];
    v32 = v10[5];
    v33 = v10[6];
    *(_OWORD *)(v11 + 46) = v10[7];
    *(_OWORD *)(v11 + 42) = v33;
    *(_OWORD *)(v11 + 38) = v32;
    *(_OWORD *)(v11 + 34) = v31;
    v34 = *(_QWORD *)(a1 + 32) + 76;
    do
    {
      *(int *)(v34 + v27) /= 2;
      v27 += 8;
    }
    while (v27 != 128);
    return;
  }
  v3 = g_GeneratingConvertTerm;
LABEL_3:
  v4 = 0;
  while ((a2[v4 + 19] & 1) == 0)
  {
    v4 += 2;
    if (v4 == 32)
      goto LABEL_18;
  }
  v5 = *(_QWORD *)(a1 + 32);
  if (v3)
    v6 = 10;
  else
    v6 = 9;
  *(_DWORD *)(v5 + 204) = v6;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0x7C00000000000000;
}

void functionSqrRoot(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSqrRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionCubeRootInline(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionCubeRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionCubeRoot_block_invoke(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int *v8;
  unint64_t v9;
  int v10;
  __int128 *v11;
  double *v12;
  int v13;
  int v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  double v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  double v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  double v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59[2];
  __n128 v60;
  _QWORD v61[4];
  int8x8_t v62[3];
  int8x8_t v63[3];
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int8x8_t v67[3];
  _QWORD v68[4];

  v68[3] = *MEMORY[0x1E0C80C00];
  if (!a2[19])
  {
    v8 = a2 + 21;
    v9 = -1;
    while (v9 != 14)
    {
      v10 = *v8;
      v8 += 2;
      ++v9;
      if (v10)
        goto LABEL_16;
    }
    v9 = 15;
LABEL_16:
    v4 = g_GeneratingConvertTerm;
    if (v9 < 0xF || g_GeneratingConvertTerm)
      goto LABEL_3;
LABEL_18:
    v11 = (__int128 *)(a2 + 18);
    g_isTrivial = 0;
    v12 = *(double **)(a1 + 32);
    v13 = *(_DWORD *)v12;
    if (*(_DWORD *)v12 == 4)
      goto LABEL_21;
    if (v13 != 2)
    {
      if (v13 == 1)
      {
LABEL_21:
        v14 = *a2;
        if (*a2 == 1)
        {
          v15 = *((double *)a2 + 4);
        }
        else if (v14 == 2)
        {
          v21 = *((_QWORD *)a2 + 6);
          v22 = *((_QWORD *)a2 + 7);
          if (my_rnd_mode)
            v23 = 4;
          else
            v23 = 0;
          v15 = __bid128_to_binary64(v21, v22, v23, &my_fpsf);
        }
        else
        {
          v15 = 0.0;
          if (v14 == 4)
          {
            v16 = *((_QWORD *)a2 + 8);
            v17 = (uint64_t)rint(1.79769313e308);
            v18 = (uint64_t)rint(2.22507386e-308) < v16 && v17 > v16;
            v15 = (double)v16;
            if (!v18)
              v15 = NAN;
          }
        }
        v24 = cbrt(v15);
        v12[4] = v24;
        *((_QWORD *)v12 + 8) = (uint64_t)rint(v24);
      }
LABEL_98:
      v50 = 0;
      v51 = *(_QWORD *)(a1 + 32);
      v52 = *v11;
      v53 = v11[1];
      v54 = v11[2];
      *(_OWORD *)(v51 + 120) = v11[3];
      *(_OWORD *)(v51 + 104) = v54;
      *(_OWORD *)(v51 + 88) = v53;
      *(_OWORD *)(v51 + 72) = v52;
      v55 = v11[4];
      v56 = v11[5];
      v57 = v11[6];
      *(_OWORD *)(v51 + 184) = v11[7];
      *(_OWORD *)(v51 + 168) = v57;
      *(_OWORD *)(v51 + 152) = v56;
      *(_OWORD *)(v51 + 136) = v55;
      v58 = *(_QWORD *)(a1 + 32) + 76;
      do
      {
        *(int *)(v58 + v50) /= 3;
        v50 += 8;
      }
      while (v50 != 128);
      return;
    }
    v19 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v25 = 4;
      else
        v25 = 0;
      v20 = __binary64_to_bid128(v25, &my_fpsf, *((double *)a2 + 4));
      v27 = v26;
    }
    else if (v19 == 2)
    {
      v20 = *((_QWORD *)a2 + 6);
      v27 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v19 == 4)
        v20 = *((_QWORD *)a2 + 8);
      else
        v20 = 0;
      v27 = 0x3040000000000000;
    }
    if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v20, v27, &my_fpsf))
    {
      v12[6] = 0.0;
      v12[7] = 2.76357394e-76;
      goto LABEL_98;
    }
    v28 = *a2;
    if (*a2 == 1)
    {
      v30 = *((double *)a2 + 4);
      if (my_rnd_mode)
        v31 = 4;
      else
        v31 = 0;
      v29 = __binary64_to_bid128(v31, &my_fpsf, v30);
    }
    else
    {
      if (v28 != 2)
      {
        if (v28 == 4)
          v29 = *((_QWORD *)a2 + 8);
        else
          v29 = 0;
        v33 = 0;
        v36 = 0;
        if (my_rnd_mode)
          v31 = 4;
        else
          v31 = 0;
        v32 = 0x3040000000000000;
        goto LABEL_73;
      }
      v29 = *((_QWORD *)a2 + 6);
      v32 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v31 = 4;
      else
        v31 = 0;
    }
    v33 = v32 & 0x8000000000000000;
    if (((v32 >> 61) & 3) == 3)
    {
      if ((v32 & 0x7800000000000000) == 0x7800000000000000)
      {
        v34 = 0xFE00000000000000;
        if ((v32 & 0x3FFFFFFFFFFFLL) <= 0x314DC6448D93)
        {
          if ((v32 & 0x3FFFFFFFFFFFLL) != 0x314DC6448D93 || v29 < 0x38C15B0A00000000)
          {
            v34 = 0xFE003FFFFFFFFFFFLL;
            v35 = v29;
          }
          else
          {
            v35 = 0;
          }
        }
        else
        {
          v35 = 0;
        }
        if ((v32 & 0x7C00000000000000) == 0x7800000000000000)
        {
          v34 = 0xF800000000000000;
          v29 = 0;
        }
        else
        {
          v29 = v35;
        }
        if ((v32 & 0x7C00000000000000) != 0x7C00000000000000)
        {
          v29 = 0;
          v47 = v33 | 0x7800000000000000;
          goto LABEL_97;
        }
        v36 = v34 & v32;
LABEL_94:
        if ((~v32 & 0x7E00000000000000) == 0)
          my_fpsf |= 1u;
        v47 = v36 & 0xFDFFFFFFFFFFFFFFLL;
        goto LABEL_97;
      }
      v36 = 0;
      v29 = 0;
LABEL_78:
      if ((~v32 & 0x7C00000000000000) != 0)
      {
        v47 = v36 | v33;
LABEL_97:
        *((_QWORD *)v12 + 6) = v29;
        *((_QWORD *)v12 + 7) = v47;
        goto LABEL_98;
      }
      goto LABEL_94;
    }
    v36 = v32 & 0x1FFFFFFFFFFFFLL;
    if ((v32 & 0x1FFFFFFFFFFFFLL) > 0x1ED09BEAD87C0
      || (v32 & 0x1FFFFFFFFFFFFLL) == 0x1ED09BEAD87C0 && v29 >= 0x378D8E6400000000)
    {
      v29 = 0;
      v36 = 0;
    }
LABEL_73:
    if (v36 | v29)
    {
      v60 = 0uLL;
      v37 = (v32 >> 49) & 0x3FFF;
      v38 = (21846 * v37 + 21846) >> 16;
      v39 = v38 + 30709;
      v59[0] = __bid128_to_binary128(v29, v33 | ((unint64_t)(v37 + 32765 * v38 + 6177) << 49) | v36, v31, &my_fpsf);
      v59[1] = v40;
      v64 = 0;
      v65 = 0;
      v66 = 0;
      memset(v62, 0, sizeof(v62));
      if ((uint64_t)__dpml_bid_unpack_x_or_y__(v59, 0, (uint64_t)&v64, (uint64_t *)&__dpml_bid_cbrt_x_table, (uint64_t)&v60, v61) >= 1)
      {
        v41 = (v65 >> 11) | 0x3FE0000000000000;
        v42 = HIDWORD(v64);
        v43 = 43691 * (HIDWORD(v64) + 16496);
        v44 = *(double *)&v41
            * (*(double *)&v41
             * (*(double *)&v41 * (*(double *)&v41 * (*(double *)&v41 * -0.0523843233 + 0.472479471) + -1.76634183)
              + 3.52535754)
             + -4.04499731)
            + 2.86586987;
        v45 = *((double *)&__dpml_bid_cbrt_x_table + HIDWORD(v64) + -3 * (v43 >> 17) + 16503)
            * (*(double *)&v41 * -0.777777778 * (*(double *)&v41 * *(double *)&v41) * (v44 * v44 * (v44 * v44))
             + *(double *)&v41 * 1.55555556 * v44
             + v44
             * v44
             * (v44
              * v44)
             * (v44
              * (v44
               * v44))
             * (*(double *)&v41
              * 0.222222222
              * (*(double *)&v41
               * *(double *)&v41
               * (*(double *)&v41
                * *(double *)&v41))));
        v63[0].i32[0] = v64;
        v63[0].i32[1] = (*(_QWORD *)&v45 >> 52) + (v43 >> 17) - 6521;
        v63[1] = (int8x8_t)((*(_QWORD *)&v45 << 11) | 0x8000000000000000);
        v63[2] = 0;
        __dpml_bid_multiply__(v63, v63, v62);
        __dpml_bid_multiply__(v63, v62, v62);
        HIDWORD(v64) = v42 + 1;
        __dpml_bid_addsub__((uint64_t)v62, &v64, 0, (uint64_t)v67);
        HIDWORD(v64) = v42 - 1;
        __dpml_bid_addsub__((uint64_t)v62, &v64, 0, (uint64_t)v68);
        __dpml_bid_divide__((uint64_t)v67, v68, 2, (uint64_t)v67);
        __dpml_bid_multiply__(v63, v67, v63);
        --v63[0].i32[1];
        __dpml_bid_pack__((unsigned int *)v63, &v60, 0, 0);
      }
      v29 = __binary128_to_bid128(v60.n128_u64[0], v60.n128_u64[1], v31, &my_fpsf);
      v47 = v46 + (v39 << 49);
      goto LABEL_97;
    }
    goto LABEL_78;
  }
  v4 = g_GeneratingConvertTerm;
LABEL_3:
  v5 = 0;
  while ((715827882 - 1431655765 * a2[v5 + 19]) < 0x55555555)
  {
    v5 += 2;
    if (v5 == 32)
      goto LABEL_18;
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v4)
    v7 = 10;
  else
    v7 = 9;
  *(_DWORD *)(v6 + 204) = v7;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = 0x7C00000000000000;
}

void functionCubeRoot(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionCubeRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionExp(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionExp_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionExp_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int *v9;
  int v10;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_25:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    v4 = 9;
    goto LABEL_25;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v9 = *(int **)(a1 + 32);
  v10 = *v9;
  if (*v9 == 4)
    goto LABEL_14;
  if (v10 == 2)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v21 = 4;
      else
        v21 = 0;
      v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      v23 = v22;
    }
    else if (v17 == 2)
    {
      v18 = *((_QWORD *)a2 + 6);
      v23 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v17 == 4)
        v18 = *((_QWORD *)a2 + 8);
      else
        v18 = 0;
      v23 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v24 = 4;
    else
      v24 = 0;
    *((_QWORD *)v9 + 6) = __bid128_exp(v18, v23, v24, &my_fpsf);
    *((_QWORD *)v9 + 7) = v25;
    v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v20 = exp(v12);
    *((double *)v9 + 4) = v20;
    *((_QWORD *)v9 + 8) = (uint64_t)rint(v20);
  }
  v26 = *v5;
  v27 = v5[1];
  v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  result = (__n128)v5[4];
  v29 = v5[5];
  v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLn(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionLn_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionLn_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int *v9;
  int v10;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_25:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    v4 = 9;
    goto LABEL_25;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v9 = *(int **)(a1 + 32);
  v10 = *v9;
  if (*v9 == 4)
    goto LABEL_14;
  if (v10 == 2)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v21 = 4;
      else
        v21 = 0;
      v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      v23 = v22;
    }
    else if (v17 == 2)
    {
      v18 = *((_QWORD *)a2 + 6);
      v23 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v17 == 4)
        v18 = *((_QWORD *)a2 + 8);
      else
        v18 = 0;
      v23 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v24 = 4;
    else
      v24 = 0;
    *((_QWORD *)v9 + 6) = __bid128_log(v18, v23, v24);
    *((_QWORD *)v9 + 7) = v25;
    v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v20 = log(v12);
    *((double *)v9 + 4) = v20;
    *((_QWORD *)v9 + 8) = (uint64_t)rint(v20);
  }
  v26 = *v5;
  v27 = v5[1];
  v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  result = (__n128)v5[4];
  v29 = v5[5];
  v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLog(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionLog_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionLog_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int *v9;
  int v10;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_25:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    v4 = 9;
    goto LABEL_25;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v9 = *(int **)(a1 + 32);
  v10 = *v9;
  if (*v9 == 4)
    goto LABEL_14;
  if (v10 == 2)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v21 = 4;
      else
        v21 = 0;
      v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      v23 = v22;
    }
    else if (v17 == 2)
    {
      v18 = *((_QWORD *)a2 + 6);
      v23 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v17 == 4)
        v18 = *((_QWORD *)a2 + 8);
      else
        v18 = 0;
      v23 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v24 = 4;
    else
      v24 = 0;
    *((_QWORD *)v9 + 6) = __bid128_log10(v18, v23, v24, &my_fpsf);
    *((_QWORD *)v9 + 7) = v25;
    v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v20 = log10(v12);
    *((double *)v9 + 4) = v20;
    *((_QWORD *)v9 + 8) = (uint64_t)rint(v20);
  }
  v26 = *v5;
  v27 = v5[1];
  v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  result = (__n128)v5[4];
  v29 = v5[5];
  v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLogBase(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionLogBase_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionLogBase_block_invoke(uint64_t a1, int *a2, int *a3)
{
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int *v15;
  int v16;
  int v17;
  double v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  double v27;
  int v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  BOOL v32;
  int v33;
  double v34;
  int v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  if (!a3[19])
  {
    v5 = (__int128 *)(a3 + 18);
    v6 = -1;
    v7 = 21;
    while (v6 != 14)
    {
      v8 = a3[v7];
      ++v6;
      v7 += 2;
      if (v8)
      {
        if (v6 < 0xF)
          goto LABEL_7;
        break;
      }
    }
    if (!a2[19])
    {
      v12 = -1;
      v13 = 21;
      while (v12 != 14)
      {
        v14 = a2[v13];
        ++v12;
        v13 += 2;
        if (v14)
          goto LABEL_17;
      }
      v12 = 15;
LABEL_17:
      v9 = g_GeneratingConvertTerm;
      if (v12 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
        goto LABEL_8;
      g_isTrivial = 0;
      v15 = *(int **)(a1 + 32);
      v16 = *v15;
      if (*v15 == 4)
        goto LABEL_22;
      if (v16 == 2)
      {
        v22 = *a3;
        if (*a3 == 1)
        {
          if (my_rnd_mode)
            v35 = 4;
          else
            v35 = 0;
          v23 = __binary64_to_bid128(v35, &my_fpsf, *((double *)a3 + 4));
        }
        else if (v22 == 2)
        {
          v23 = *((_QWORD *)a3 + 6);
          v36 = *((_QWORD *)a3 + 7);
        }
        else
        {
          if (v22 == 4)
            v23 = *((_QWORD *)a3 + 8);
          else
            v23 = 0;
          v36 = 0x3040000000000000;
        }
        if (my_rnd_mode)
          v37 = 4;
        else
          v37 = 0;
        v38 = __bid128_log10(v23, v36, v37, &my_fpsf);
        v40 = v39;
        v41 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode)
            v43 = 4;
          else
            v43 = 0;
          v42 = __binary64_to_bid128(v43, &my_fpsf, *((double *)a2 + 4));
        }
        else if (v41 == 2)
        {
          v42 = *((_QWORD *)a2 + 6);
          v44 = *((_QWORD *)a2 + 7);
        }
        else
        {
          if (v41 == 4)
            v42 = *((_QWORD *)a2 + 8);
          else
            v42 = 0;
          v44 = 0x3040000000000000;
        }
        if (my_rnd_mode)
          v45 = 4;
        else
          v45 = 0;
        v47 = __bid128_log10(v42, v44, v45, &my_fpsf);
        if (my_rnd_mode)
          v48 = 4;
        else
          v48 = 0;
        *((_QWORD *)v15 + 6) = __bid128_div(v38, v40, v47, v46, v48, &my_fpsf);
        *((_QWORD *)v15 + 7) = v49;
        v15 = *(int **)(a1 + 32);
      }
      else if (v16 == 1)
      {
LABEL_22:
        v17 = *a3;
        if (*a3 == 1)
        {
          v18 = *((double *)a3 + 4);
        }
        else if (v17 == 2)
        {
          v24 = *((_QWORD *)a3 + 6);
          v25 = *((_QWORD *)a3 + 7);
          if (my_rnd_mode)
            v26 = 4;
          else
            v26 = 0;
          v18 = __bid128_to_binary64(v24, v25, v26, &my_fpsf);
        }
        else
        {
          v18 = 0.0;
          if (v17 == 4)
          {
            v19 = *((_QWORD *)a3 + 8);
            v20 = (uint64_t)rint(1.79769313e308);
            v21 = (uint64_t)rint(2.22507386e-308) < v19 && v20 > v19;
            v18 = (double)v19;
            if (!v21)
              v18 = NAN;
          }
        }
        v27 = log10(v18);
        v28 = *a2;
        if (*a2 == 1)
        {
          v29 = *((double *)a2 + 4);
        }
        else if (v28 == 2)
        {
          if (my_rnd_mode)
            v33 = 4;
          else
            v33 = 0;
          v29 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v33, &my_fpsf);
        }
        else
        {
          v29 = 0.0;
          if (v28 == 4)
          {
            v30 = *((_QWORD *)a2 + 8);
            v31 = (uint64_t)rint(1.79769313e308);
            v32 = (uint64_t)rint(2.22507386e-308) < v30 && v31 > v30;
            v29 = (double)v30;
            if (!v32)
              v29 = NAN;
          }
        }
        v34 = v27 / log10(v29);
        *((double *)v15 + 4) = v34;
        *((_QWORD *)v15 + 8) = (uint64_t)rint(v34);
      }
      v50 = *v5;
      v51 = v5[1];
      v52 = v5[2];
      *(_OWORD *)(v15 + 30) = v5[3];
      *(_OWORD *)(v15 + 26) = v52;
      *(_OWORD *)(v15 + 22) = v51;
      *(_OWORD *)(v15 + 18) = v50;
      v53 = v5[4];
      v54 = v5[5];
      v55 = v5[6];
      *(_OWORD *)(v15 + 46) = v5[7];
      *(_OWORD *)(v15 + 42) = v55;
      *(_OWORD *)(v15 + 38) = v54;
      *(_OWORD *)(v15 + 34) = v53;
      return;
    }
  }
LABEL_7:
  v9 = g_GeneratingConvertTerm;
LABEL_8:
  v10 = *(_QWORD *)(a1 + 32);
  if (v9)
    v11 = 10;
  else
    v11 = 9;
  *(_DWORD *)(v10 + 204) = v11;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0x7C00000000000000;
}

void functionSine(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionSinD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionSine_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionSinD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  int *v22;
  int v23;
  int v24;
  double v25;
  double v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v39 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireDegrees(v6, v10, v4, &v39);
    v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      v14 = DecimalToRadians_to_radians_0;
      v15 = *(_QWORD *)algn_1EF1B7B18;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      v40 = 0;
      if (DecimalPi_initialized == 1)
      {
        v16 = DecimalPi_pi_0;
        v17 = *(_QWORD *)algn_1EF1B7AF8;
      }
      else
      {
        DecimalPi_initialized = 1;
        v41 = 0;
        v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v41);
        DecimalPi_pi_0 = v16;
        *(_QWORD *)algn_1EF1B7AF8 = v17;
      }
      v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v40);
      v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(_QWORD *)algn_1EF1B7B18 = v18;
    }
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    v22 = *(int **)(a1 + 32);
    if (v39)
    {
      v22[51] = v39;
      *((_QWORD *)v22 + 6) = 0;
      *((_QWORD *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      v26 = sin(v25);
      *((double *)v22 + 4) = v26;
      *((_QWORD *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1)
        return;
      goto LABEL_32;
    }
    if (my_rnd_mode)
      v27 = 4;
    else
      v27 = 0;
    v28 = __bid128_sin(v20, v21, v27);
    v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      v32 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v41 = 0;
      v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v41);
      v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(_QWORD *)algn_1EF1B7A78 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v41 = 0,
           v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v41),
           v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(_QWORD *)algn_1EF1B7A98 = v36)
        : (v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      v37 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v37 + 48) = 0;
      *(_QWORD *)(v37 + 56) = 0x3040000000000000;
    }
    else
    {
      v38 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v38 + 48) = v28;
      *(_QWORD *)(v38 + 56) = v30;
    }
  }
}

void __functionSine_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int *v13;
  int v14;
  int v15;
  double v16;
  double v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v30 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireRadians(v6, v10, v4, &v30);
    v13 = *(int **)(a1 + 32);
    if (v30)
    {
      v13[51] = v30;
      *((_QWORD *)v13 + 6) = 0;
      *((_QWORD *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode)
        v15 = 4;
      else
        v15 = 0;
      v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      v17 = sin(v16);
      *((double *)v13 + 4) = v17;
      *((_QWORD *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1)
        return;
      goto LABEL_23;
    }
    if (my_rnd_mode)
      v18 = 4;
    else
      v18 = 0;
    v19 = __bid128_sin(v11, v12, v18);
    v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      v23 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v31 = 0;
      v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v31);
      v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(_QWORD *)algn_1EF1B7A78 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v32 = 0,
           v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v32),
           v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(_QWORD *)algn_1EF1B7A98 = v27)
        : (v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      v28 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v28 + 48) = 0;
      *(_QWORD *)(v28 + 56) = 0x3040000000000000;
    }
    else
    {
      v29 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v29 + 48) = v19;
      *(_QWORD *)(v29 + 56) = v21;
    }
  }
}

void functionSinD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSinD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionCos(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionCosD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionCos_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionCosD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  int *v22;
  int v23;
  int v24;
  double v25;
  double v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v39 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireDegrees(v6, v10, v4, &v39);
    v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      v14 = DecimalToRadians_to_radians_0;
      v15 = *(_QWORD *)algn_1EF1B7B18;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      v40 = 0;
      if (DecimalPi_initialized == 1)
      {
        v16 = DecimalPi_pi_0;
        v17 = *(_QWORD *)algn_1EF1B7AF8;
      }
      else
      {
        DecimalPi_initialized = 1;
        v41 = 0;
        v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v41);
        DecimalPi_pi_0 = v16;
        *(_QWORD *)algn_1EF1B7AF8 = v17;
      }
      v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v40);
      v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(_QWORD *)algn_1EF1B7B18 = v18;
    }
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    v22 = *(int **)(a1 + 32);
    if (v39)
    {
      v22[51] = v39;
      *((_QWORD *)v22 + 6) = 0;
      *((_QWORD *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      v26 = cos(v25);
      *((double *)v22 + 4) = v26;
      *((_QWORD *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1)
        return;
      goto LABEL_32;
    }
    if (my_rnd_mode)
      v27 = 4;
    else
      v27 = 0;
    v28 = __bid128_cos(v20, v21, v27);
    v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      v32 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v41 = 0;
      v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v41);
      v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(_QWORD *)algn_1EF1B7A78 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v41 = 0,
           v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v41),
           v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(_QWORD *)algn_1EF1B7A98 = v36)
        : (v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      v37 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v37 + 48) = 0;
      *(_QWORD *)(v37 + 56) = 0x3040000000000000;
    }
    else
    {
      v38 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v38 + 48) = v28;
      *(_QWORD *)(v38 + 56) = v30;
    }
  }
}

void __functionCos_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int *v13;
  int v14;
  int v15;
  double v16;
  double v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v30 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireRadians(v6, v10, v4, &v30);
    v13 = *(int **)(a1 + 32);
    if (v30)
    {
      v13[51] = v30;
      *((_QWORD *)v13 + 6) = 0;
      *((_QWORD *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode)
        v15 = 4;
      else
        v15 = 0;
      v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      v17 = cos(v16);
      *((double *)v13 + 4) = v17;
      *((_QWORD *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1)
        return;
      goto LABEL_23;
    }
    if (my_rnd_mode)
      v18 = 4;
    else
      v18 = 0;
    v19 = __bid128_cos(v11, v12, v18);
    v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      v23 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v31 = 0;
      v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v31);
      v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(_QWORD *)algn_1EF1B7A78 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v32 = 0,
           v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v32),
           v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(_QWORD *)algn_1EF1B7A98 = v27)
        : (v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      v28 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v28 + 48) = 0;
      *(_QWORD *)(v28 + 56) = 0x3040000000000000;
    }
    else
    {
      v29 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v29 + 48) = v19;
      *(_QWORD *)(v29 + 56) = v21;
    }
  }
}

void functionCosD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionCosD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionTan(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionTanD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionTan_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionTanD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  int *v22;
  int v23;
  int v24;
  double v25;
  double v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v45 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireDegrees(v6, v10, v4, &v45);
    v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      v14 = DecimalToRadians_to_radians_0;
      v15 = *(_QWORD *)algn_1EF1B7B18;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      v46 = 0;
      if (DecimalPi_initialized == 1)
      {
        v16 = DecimalPi_pi_0;
        v17 = *(_QWORD *)algn_1EF1B7AF8;
      }
      else
      {
        DecimalPi_initialized = 1;
        v47 = 0;
        v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v47);
        DecimalPi_pi_0 = v16;
        *(_QWORD *)algn_1EF1B7AF8 = v17;
      }
      v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v46);
      v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(_QWORD *)algn_1EF1B7B18 = v18;
    }
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    v22 = *(int **)(a1 + 32);
    if (v45)
    {
      v22[51] = v45;
      *((_QWORD *)v22 + 6) = 0;
      *((_QWORD *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      v26 = tan(v25);
      *((double *)v22 + 4) = v26;
      *((_QWORD *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1)
        return;
      goto LABEL_32;
    }
    if (my_rnd_mode)
      v27 = 4;
    else
      v27 = 0;
    v28 = __bid128_tan(v20, v21, v27);
    v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      v32 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v47 = 0;
      v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v47);
      v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(_QWORD *)algn_1EF1B7A78 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v47 = 0,
           v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v47),
           v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(_QWORD *)algn_1EF1B7A98 = v36)
        : (v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      v37 = *(_QWORD *)(a1 + 32);
      v38 = 0x3040000000000000;
    }
    else
    {
      if (DecimalTrigInfThresholdNegative_initialized == 1)
      {
        v39 = DecimalTrigInfThresholdNegative_threshold_0;
        v40 = *(_QWORD *)algn_1EF1B7AB8;
      }
      else
      {
        DecimalTrigInfThresholdNegative_initialized = 1;
        v47 = 0;
        v39 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0x3040000000000000uLL, 4u, &v47);
        v40 = v41;
        DecimalTrigInfThresholdNegative_threshold_0 = v39;
        *(_QWORD *)algn_1EF1B7AB8 = v41;
      }
      if (!__bid128_quiet_less_equal(v28, v30, v39, v40, &my_fpsf))
      {
        v42 = DecimalTrigInfThresholdPositive();
        if (!__bid128_quiet_greater_equal(v28, v30, v42, v43, &my_fpsf))
        {
          v44 = *(_QWORD *)(a1 + 32);
          *(_QWORD *)(v44 + 48) = v28;
          *(_QWORD *)(v44 + 56) = v30;
          return;
        }
      }
      v37 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v37 + 204) = 4;
      v38 = 0x7C00000000000000;
    }
    *(_QWORD *)(v37 + 48) = 0;
    *(_QWORD *)(v37 + 56) = v38;
  }
}

void __functionTan_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int *v13;
  int v14;
  int v15;
  double v16;
  double v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  int v37;

  v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (g_GeneratingConvertTerm)
      v8 = 10;
    else
      v8 = 9;
    *(_DWORD *)(v7 + 204) = v8;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v36 = 0;
    v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      v6 = *((_QWORD *)a2 + 6);
      v10 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v5 == 4)
        v6 = *((_QWORD *)a2 + 8);
      else
        v6 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = UnitCountRequireRadians(v6, v10, v4, &v36);
    v13 = *(int **)(a1 + 32);
    if (v36)
    {
      v13[51] = v36;
      *((_QWORD *)v13 + 6) = 0;
      *((_QWORD *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode)
        v15 = 4;
      else
        v15 = 0;
      v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      v17 = tan(v16);
      *((double *)v13 + 4) = v17;
      *((_QWORD *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1)
        return;
      goto LABEL_23;
    }
    if (my_rnd_mode)
      v18 = 4;
    else
      v18 = 0;
    v19 = __bid128_tan(v11, v12, v18);
    v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      v23 = *(_QWORD *)algn_1EF1B7A78;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      v37 = 0;
      v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v37);
      v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(_QWORD *)algn_1EF1B7A78 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           v37 = 0,
           v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v37),
           v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(_QWORD *)algn_1EF1B7A98 = v27)
        : (v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(_QWORD *)algn_1EF1B7A98),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      v28 = *(_QWORD *)(a1 + 32);
      v29 = 0x3040000000000000;
    }
    else
    {
      if (DecimalTrigInfThresholdNegative_initialized == 1)
      {
        v30 = DecimalTrigInfThresholdNegative_threshold_0;
        v31 = *(_QWORD *)algn_1EF1B7AB8;
      }
      else
      {
        DecimalTrigInfThresholdNegative_initialized = 1;
        v37 = 0;
        v30 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0x3040000000000000uLL, 4u, &v37);
        v31 = v32;
        DecimalTrigInfThresholdNegative_threshold_0 = v30;
        *(_QWORD *)algn_1EF1B7AB8 = v32;
      }
      if (!__bid128_quiet_less_equal(v19, v21, v30, v31, &my_fpsf))
      {
        v33 = DecimalTrigInfThresholdPositive();
        if (!__bid128_quiet_greater_equal(v19, v21, v33, v34, &my_fpsf))
        {
          v35 = *(_QWORD *)(a1 + 32);
          *(_QWORD *)(v35 + 48) = v19;
          *(_QWORD *)(v35 + 56) = v21;
          return;
        }
      }
      v28 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v28 + 204) = 4;
      v29 = 0x7C00000000000000;
    }
    *(_QWORD *)(v28 + 48) = 0;
    *(_QWORD *)(v28 + 56) = v29;
  }
}

uint64_t DecimalTrigInfThresholdPositive()
{
  uint64_t result;
  uint64_t v1;
  int v2;

  if (DecimalTrigInfThresholdPositive_initialized == 1)
    return DecimalTrigInfThresholdPositive_threshold_0;
  DecimalTrigInfThresholdPositive_initialized = 1;
  v2 = 0;
  result = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0x3040000000000000uLL, 4u, &v2);
  DecimalTrigInfThresholdPositive_threshold_0 = result;
  *(_QWORD *)algn_1EF1B7AD8 = v1;
  return result;
}

void functionTanD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionTanD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionASin(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionASinD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionASin_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionASinD_block_invoke(uint64_t a1, int *a2)
{
  int v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  double *v8;
  int v9;
  int v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  double v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  uint64_t v41;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_25:
      v15 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(_QWORD *)(v15 + 48) = 0;
      *(_QWORD *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v3 = 9;
    goto LABEL_25;
  }
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
      goto LABEL_9;
  }
  v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v8 = *(double **)(a1 + 32);
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 == 4)
    goto LABEL_14;
  if (v9 != 2)
  {
    if (v9 != 1)
      return;
LABEL_14:
    v10 = *a2;
    if (*a2 == 1)
    {
      v11 = *((double *)a2 + 4);
    }
    else if (v10 == 2)
    {
      v18 = *((_QWORD *)a2 + 6);
      v19 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v20 = 4;
      else
        v20 = 0;
      v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
    }
    else
    {
      v11 = 0.0;
      if (v10 == 4)
      {
        v12 = *((_QWORD *)a2 + 8);
        v13 = (uint64_t)rint(1.79769313e308);
        v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
        v11 = (double)v12;
        if (!v14)
          v11 = NAN;
      }
    }
    v21 = asin(v11) * 180.0 / 3.14159265;
    v8[4] = v21;
    *((_QWORD *)v8 + 8) = (uint64_t)rint(v21);
    return;
  }
  v16 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
    v24 = v23;
  }
  else if (v16 == 2)
  {
    v17 = *((_QWORD *)a2 + 6);
    v24 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v16 == 4)
      v17 = *((_QWORD *)a2 + 8);
    else
      v17 = 0;
    v24 = 0x3040000000000000;
  }
  v25 = 0x3040000000000000;
  if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v17, v24, &my_fpsf)
    || ((v26 = *a2, *a2 == 1)
      ? (!my_rnd_mode ? (v28 = 0) : (v28 = 4), v27 = __binary64_to_bid128(v28, &my_fpsf, *((double *)a2 + 4)), v30 = v29)
      : v26 == 2
      ? (v27 = *((_QWORD *)a2 + 6), v30 = *((_QWORD *)a2 + 7))
      : (v26 != 4 ? (v27 = 0) : (v27 = *((_QWORD *)a2 + 8)), v30 = 0x3040000000000000),
        v25 = 0xB040000000000000,
        __bid128_quiet_equal(1uLL, 0xB040000000000000, v27, v30, &my_fpsf)))
  {
    *((_QWORD *)v8 + 6) = 90;
    *((_QWORD *)v8 + 7) = v25;
  }
  else
  {
    v31 = treeDecimalValue((double *)a2);
    if (my_rnd_mode)
      v33 = 4;
    else
      v33 = 0;
    v34 = __bid128_asin(v31, v32, v33);
    v36 = v35;
    v37 = *(_QWORD *)(a1 + 32);
    v39 = DecimalToDegrees();
    if (my_rnd_mode)
      v40 = 4;
    else
      v40 = 0;
    *(_QWORD *)(v37 + 48) = __bid128_mul(v34, v36, v39, v38, v40, &my_fpsf);
    *(_QWORD *)(v37 + 56) = v41;
  }
}

void __functionASin_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  double v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 == 2)
    {
      v14 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v18 = 4;
        else
          v18 = 0;
        v15 = __binary64_to_bid128(v18, &my_fpsf, *((double *)a2 + 4));
        v20 = v19;
      }
      else if (v14 == 2)
      {
        v15 = *((_QWORD *)a2 + 6);
        v20 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v14 == 4)
          v15 = *((_QWORD *)a2 + 8);
        else
          v15 = 0;
        v20 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v21 = 4;
      else
        v21 = 0;
      *((_QWORD *)v6 + 6) = __bid128_asin(v15, v20, v21);
      *((_QWORD *)v6 + 7) = v22;
      return;
    }
    if (v7 != 1)
      return;
  }
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v16 = 4;
    else
      v16 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v16, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v17 = asin(v9);
  *((double *)v6 + 4) = v17;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v17);
}

uint64_t DecimalToDegrees()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  if (DecimalToDegrees_initialized == 1)
    return DecimalToDegrees_toDegrees_0;
  DecimalToDegrees_initialized = 1;
  v5 = 0;
  if (DecimalPi_initialized == 1)
  {
    v1 = DecimalPi_pi_0;
    v2 = *(_QWORD *)algn_1EF1B7AF8;
  }
  else
  {
    DecimalPi_initialized = 1;
    v6 = 0;
    v1 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v6);
    v2 = v3;
    DecimalPi_pi_0 = v1;
    *(_QWORD *)algn_1EF1B7AF8 = v3;
  }
  result = __bid128_div(0xB4uLL, 0x3040000000000000uLL, v1, v2, 4, &v5);
  DecimalToDegrees_toDegrees_0 = result;
  *(_QWORD *)algn_1EF1B7B38 = v4;
  return result;
}

void functionASinD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionASinD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionACos(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionACosD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionACos_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionACosD_block_invoke(uint64_t a1, int *a2)
{
  int v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int *v8;
  int v9;
  int v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  double v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_25:
      v15 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(_QWORD *)(v15 + 48) = 0;
      *(_QWORD *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v3 = 9;
    goto LABEL_25;
  }
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
      goto LABEL_9;
  }
  v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v8 = *(int **)(a1 + 32);
  v9 = *v8;
  if (*v8 != 4)
  {
    if (v9 == 2)
    {
      v16 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        v24 = v23;
      }
      else if (v16 == 2)
      {
        v17 = *((_QWORD *)a2 + 6);
        v24 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v16 == 4)
          v17 = *((_QWORD *)a2 + 8);
        else
          v17 = 0;
        v24 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v17, v24, &my_fpsf))
      {
        *((_QWORD *)v8 + 6) = 0;
        *((_QWORD *)v8 + 7) = 0x3040000000000000;
      }
      else
      {
        v25 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode)
            v27 = 4;
          else
            v27 = 0;
          v26 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
          v29 = v28;
        }
        else if (v25 == 2)
        {
          v26 = *((_QWORD *)a2 + 6);
          v29 = *((_QWORD *)a2 + 7);
        }
        else
        {
          if (v25 == 4)
            v26 = *((_QWORD *)a2 + 8);
          else
            v26 = 0;
          v29 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0xB040000000000000, v26, v29, &my_fpsf))
        {
          *((_QWORD *)v8 + 6) = 180;
          *((_QWORD *)v8 + 7) = 0x3040000000000000;
        }
        else
        {
          v30 = treeDecimalValue((double *)a2);
          if (my_rnd_mode)
            v32 = 4;
          else
            v32 = 0;
          v33 = __bid128_acos(v30, v31, v32);
          v35 = v34;
          v36 = *(_QWORD *)(a1 + 32);
          v38 = DecimalToDegrees();
          if (my_rnd_mode)
            v39 = 4;
          else
            v39 = 0;
          *(_QWORD *)(v36 + 48) = __bid128_mul(v33, v35, v38, v37, v39, &my_fpsf);
          *(_QWORD *)(v36 + 56) = v40;
        }
      }
      return;
    }
    if (v9 != 1)
      return;
  }
  v10 = *a2;
  if (*a2 == 1)
  {
    v11 = *((double *)a2 + 4);
  }
  else if (v10 == 2)
  {
    v18 = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
    if (my_rnd_mode)
      v20 = 4;
    else
      v20 = 0;
    v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
  }
  else
  {
    v11 = 0.0;
    if (v10 == 4)
    {
      v12 = *((_QWORD *)a2 + 8);
      v13 = (uint64_t)rint(1.79769313e308);
      v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
      v11 = (double)v12;
      if (!v14)
        v11 = NAN;
    }
  }
  v21 = acos(v11) * 180.0 / 3.14159265;
  *((double *)v8 + 4) = v21;
  *((_QWORD *)v8 + 8) = (uint64_t)rint(v21);
}

void __functionACos_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int *v7;
  int v8;
  int v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  double v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  int v34;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v14 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v2;
      *(_QWORD *)(v14 + 48) = 0;
      *(_QWORD *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v7 = *(int **)(a1 + 32);
  v8 = *v7;
  if (*v7 != 4)
  {
    if (v8 == 2)
    {
      v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v21 = 4;
        else
          v21 = 0;
        v16 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
        v23 = v22;
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a2 + 6);
        v23 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v15 == 4)
          v16 = *((_QWORD *)a2 + 8);
        else
          v16 = 0;
        v23 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v16, v23, &my_fpsf))
      {
        *((_QWORD *)v7 + 6) = 0;
        *((_QWORD *)v7 + 7) = 0x3040000000000000;
      }
      else
      {
        v24 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode)
            v26 = 4;
          else
            v26 = 0;
          v25 = __binary64_to_bid128(v26, &my_fpsf, *((double *)a2 + 4));
          v28 = v27;
        }
        else if (v24 == 2)
        {
          v25 = *((_QWORD *)a2 + 6);
          v28 = *((_QWORD *)a2 + 7);
        }
        else
        {
          if (v24 == 4)
            v25 = *((_QWORD *)a2 + 8);
          else
            v25 = 0;
          v28 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0xB040000000000000, v25, v28, &my_fpsf))
        {
          if (DecimalPi_initialized == 1)
          {
            v29 = DecimalPi_pi_0;
            v30 = *(_QWORD *)algn_1EF1B7AF8;
          }
          else
          {
            DecimalPi_initialized = 1;
            v34 = 0;
            v29 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v34);
            DecimalPi_pi_0 = v29;
            *(_QWORD *)algn_1EF1B7AF8 = v30;
          }
        }
        else
        {
          v31 = treeDecimalValue((double *)a2);
          if (my_rnd_mode)
            v33 = 4;
          else
            v33 = 0;
          v29 = __bid128_acos(v31, v32, v33);
        }
        *((_QWORD *)v7 + 6) = v29;
        *((_QWORD *)v7 + 7) = v30;
      }
      return;
    }
    if (v8 != 1)
      return;
  }
  v9 = *a2;
  if (*a2 == 1)
  {
    v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    v17 = *((_QWORD *)a2 + 6);
    v18 = *((_QWORD *)a2 + 7);
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v10 = __bid128_to_binary64(v17, v18, v19, &my_fpsf);
  }
  else
  {
    v10 = 0.0;
    if (v9 == 4)
    {
      v11 = *((_QWORD *)a2 + 8);
      v12 = (uint64_t)rint(1.79769313e308);
      v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      v10 = (double)v11;
      if (!v13)
        v10 = NAN;
    }
  }
  v20 = acos(v10);
  *((double *)v7 + 4) = v20;
  *((_QWORD *)v7 + 8) = (uint64_t)rint(v20);
}

void functionACosD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionACosD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionATan(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD v3[5];
  _QWORD v4[5];

  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __functionATanD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __functionATan_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionATanD_block_invoke(uint64_t a1, int *a2)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  double *v7;
  int v8;
  int v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  int v36;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_25:
      v14 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v3;
      *(_QWORD *)(v14 + 48) = 0;
      *(_QWORD *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v3 = 9;
    goto LABEL_25;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v7 = *(double **)(a1 + 32);
  v8 = *(_DWORD *)v7;
  if (*(_DWORD *)v7 != 4)
  {
    if (v8 == 2)
    {
      v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v19 = 4;
        else
          v19 = 0;
        v16 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
        v21 = v20;
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a2 + 6);
        v21 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v15 == 4)
          v16 = *((_QWORD *)a2 + 8);
        else
          v16 = 0;
        v21 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v23 = __bid128_atan(v16, v21, v22);
      v25 = v24;
      v26 = *(_QWORD *)(a1 + 32);
      if (DecimalToDegrees_initialized == 1)
      {
        v27 = DecimalToDegrees_toDegrees_0;
        v28 = *(_QWORD *)algn_1EF1B7B38;
      }
      else
      {
        DecimalToDegrees_initialized = 1;
        v35 = 0;
        if (DecimalPi_initialized == 1)
        {
          v29 = DecimalPi_pi_0;
          v30 = *(_QWORD *)algn_1EF1B7AF8;
        }
        else
        {
          DecimalPi_initialized = 1;
          v36 = 0;
          v29 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v36);
          v30 = v31;
          DecimalPi_pi_0 = v29;
          *(_QWORD *)algn_1EF1B7AF8 = v31;
        }
        v27 = __bid128_div(0xB4uLL, 0x3040000000000000uLL, v29, v30, 4, &v35);
        v28 = v32;
        DecimalToDegrees_toDegrees_0 = v27;
        *(_QWORD *)algn_1EF1B7B38 = v32;
      }
      if (my_rnd_mode)
        v33 = 4;
      else
        v33 = 0;
      *(_QWORD *)(v26 + 48) = __bid128_mul(v23, v25, v27, v28, v33, &my_fpsf);
      *(_QWORD *)(v26 + 56) = v34;
      return;
    }
    if (v8 != 1)
      return;
  }
  v9 = *a2;
  if (*a2 == 1)
  {
    v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    if (my_rnd_mode)
      v17 = 4;
    else
      v17 = 0;
    v10 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    v10 = 0.0;
    if (v9 == 4)
    {
      v11 = *((_QWORD *)a2 + 8);
      v12 = (uint64_t)rint(1.79769313e308);
      v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      v10 = (double)v11;
      if (!v13)
        v10 = NAN;
    }
  }
  v18 = atan(v10) * 180.0 / 3.14159265;
  v7[4] = v18;
  *((_QWORD *)v7 + 8) = (uint64_t)rint(v18);
}

void __functionATan_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  double v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 == 2)
    {
      v14 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v18 = 4;
        else
          v18 = 0;
        v15 = __binary64_to_bid128(v18, &my_fpsf, *((double *)a2 + 4));
        v20 = v19;
      }
      else if (v14 == 2)
      {
        v15 = *((_QWORD *)a2 + 6);
        v20 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v14 == 4)
          v15 = *((_QWORD *)a2 + 8);
        else
          v15 = 0;
        v20 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v21 = 4;
      else
        v21 = 0;
      *((_QWORD *)v6 + 6) = __bid128_atan(v15, v20, v21);
      *((_QWORD *)v6 + 7) = v22;
      return;
    }
    if (v7 != 1)
      return;
  }
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v16 = 4;
    else
      v16 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v16, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v17 = atan(v9);
  *((double *)v6 + 4) = v17;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v17);
}

void functionATanD(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionATanD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionSinH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionSinH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionSinH_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  __n128 v57;
  __n128 v58;
  uint64_t v59[2];
  __n128 v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66[2];
  int v67;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1)
        return;
      goto LABEL_14;
    }
    v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      v16 = v20;
    }
    else if (v14 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        v15 = 0;
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v16 = 0x3040000000000000;
        goto LABEL_58;
      }
      v15 = *((_QWORD *)a2 + 8);
      v16 = 0x3040000000000000;
    }
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0)
        my_fpsf |= 1u;
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (v21 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        v15 = 0;
        v21 = v16 & 0xFC00000000000000;
      }
      goto LABEL_67;
    }
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    if ((~v16 & 0x7800000000000000) == 0)
    {
      v15 = 0;
      v21 = v16 & 0x8000000000000000 | 0x7800000000000000;
LABEL_67:
      *((_QWORD *)v6 + 6) = v15;
      *((_QWORD *)v6 + 7) = v21;
      return;
    }
LABEL_58:
    v60 = 0uLL;
    v59[0] = 0;
    v59[1] = 0;
    v58 = 0uLL;
    v61 = __bid128_to_binary128(v15, v16, v22, &my_fpsf);
    v62 = v23;
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __dpml_bid_unpack_x_or_y__((uint64_t *)&v61, 0, (uint64_t)&v63, &qword_1B891D780, (uint64_t)v59, v66);
    if (bid_f128_cmp(v59, (uint64_t *)&c_1em40_1127, 3u))
    {
      v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v15, v16, 1uLL, 0x2FF0000000000000, v15, v16, v22, &my_fpsf);
    }
    else
    {
      if (bid_f128_cmp(v59, (uint64_t *)&c_one_1128, 3u))
      {
        if (v62 >= 0)
          v25 = 100;
        else
          v25 = 101;
        __dpml_bid_C_ux_hyperbolic__(&v60, (uint64_t *)&v61, &qword_1B891DF00, 0x2C06uLL, v25, v66);
        v27 = v60.n128_u64[1];
        v26 = v60.n128_u64[0];
      }
      else
      {
        if (bid_f128_cmp(v59, (uint64_t *)&c_64_1129, 3u))
        {
          if (bid_f128_cmp((uint64_t *)&c_zero_1130, (uint64_t *)&v61, 3u))
          {
            v28 = __bid128_exp(v15, v16, v22, &my_fpsf);
            v30 = v29;
            v31 = __bid128_div(1uLL, 0x3040000000000000uLL, v28, v29, v22, &my_fpsf);
            v33 = __bid128_mul(5uLL, 0xB03E000000000000, v31, v32, v22, &my_fpsf);
            v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v28, v30, 5uLL, 0x303E000000000000, v33, v34, v22, &my_fpsf);
          }
          else
          {
            v49 = __bid128_exp(v15, v16 & 0x7FFFFFFFFFFFFFFFLL, v22, &my_fpsf);
            v51 = v50;
            v52 = __bid128_div(1uLL, 0x3040000000000000uLL, v49, v50, v22, &my_fpsf);
            v54 = __bid128_mul(5uLL, 0x303E000000000000, v52, v53, v22, &my_fpsf);
            v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v49, v51, 5uLL, 0xB03E000000000000, v54, v55, v22, &my_fpsf);
          }
          goto LABEL_66;
        }
        v66[0] = 0uLL;
        v35 = v16 & 0x7FFFFFFFFFFFFFFFLL;
        v36 = __bid128_add(v15, v35, 0xBE00000000000000, 0x3040363BF3B1CEEELL, v22, &my_fpsf);
        v38 = __bid128_add(v36, v37, 0xBE00000000000000, 0xB040363BF3B1CEEELL, v22, &my_fpsf);
        v40 = v39;
        v41 = __bid128_sub(v15, v35, v38, v39, v22, &my_fpsf);
        v43 = v42;
        v57.n128_u64[0] = __bid128_to_binary128(v38, v40, v22, &my_fpsf);
        v57.n128_u64[1] = v44;
        v63 = __bid128_to_binary128(v41, v43, v22, &my_fpsf);
        v64 = v45;
        if (bid_f128_cmp((uint64_t *)&v57, (uint64_t *)&c_11000_1131, 4u))
        {
          bid_f128_sub(&v57, (uint64_t *)&v57, (uint64_t *)&c_11000_1131);
          bid_f128_exp(v66, (uint64_t *)&v57);
          bid_f128_exp(&v58, (uint64_t *)&v63);
          bid_f128_mul(v66, (uint64_t *)v66, (uint64_t *)&v58);
          if (bid_f128_cmp((uint64_t *)&v61, (uint64_t *)&c_zero_1130, 1u))
            v46 = (uint64_t *)&c_minus_half;
          else
            v46 = (uint64_t *)&c_half_1132;
          bid_f128_mul(v66, v46, (uint64_t *)v66);
          v47 = __binary128_to_bid128(v66[0].n128_u64[0], v66[0].n128_u64[1], v22, &my_fpsf);
          v24 = __bid128_mul(v47, v48, 0xD43EDE775707FD0ALL, 0x5550558ADA285F8BLL, v22, &my_fpsf);
          goto LABEL_66;
        }
        bid_f128_exp(v66, (uint64_t *)&v57);
        bid_f128_exp(&v58, (uint64_t *)&v63);
        bid_f128_mul(v66, (uint64_t *)v66, (uint64_t *)&v58);
        if (bid_f128_cmp((uint64_t *)&v61, (uint64_t *)&c_zero_1130, 1u))
          v56 = (uint64_t *)&c_minus_half;
        else
          v56 = (uint64_t *)&c_half_1132;
        bid_f128_mul(v66, v56, (uint64_t *)v66);
        v27 = v66[0].n128_u64[1];
        v26 = v66[0].n128_u64[0];
      }
      v24 = __binary128_to_bid128(v26, v27, v22, &my_fpsf);
    }
LABEL_66:
    v15 = v24;
    goto LABEL_67;
  }
LABEL_14:
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v17 = 4;
    else
      v17 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v18 = sinh(v9);
  *((double *)v6 + 4) = v18;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
}

void functionCosH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionCosH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionCosH_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51[2];
  __n128 v52;
  uint64_t v53[2];
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57[2];
  int v58;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1)
        return;
      goto LABEL_14;
    }
    v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      v16 = v20;
    }
    else if (v14 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        v15 = 0;
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v16 = 0x3040000000000000;
        goto LABEL_58;
      }
      v15 = *((_QWORD *)a2 + 8);
      v16 = 0x3040000000000000;
    }
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0)
        my_fpsf |= 1u;
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (v21 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        v15 = 0;
        v21 = v16 & 0xFC00000000000000;
      }
      goto LABEL_71;
    }
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    v21 = 0x7800000000000000;
    if ((~v16 & 0x7800000000000000) == 0)
    {
      v15 = 0;
LABEL_71:
      *((_QWORD *)v6 + 6) = v15;
      *((_QWORD *)v6 + 7) = v21;
      return;
    }
LABEL_58:
    v52 = 0uLL;
    v51[0] = 0;
    v51[1] = 0;
    v50 = 0uLL;
    v53[0] = __bid128_to_binary128(v15, v16, v22, &my_fpsf);
    v53[1] = v23;
    v54 = 0;
    v55 = 0;
    v56 = 0;
    __dpml_bid_unpack_x_or_y__(v53, 0, (uint64_t)&v54, &qword_1B891D780, (uint64_t)v51, v57);
    if (bid_f128_cmp(v51, (uint64_t *)&c_1em40_1057, 3u))
    {
      v24 = __bid128_add(1uLL, 0x3040000000000000, 1uLL, 0x2FF0000000000000, v22, &my_fpsf);
    }
    else
    {
      if (bid_f128_cmp(v51, (uint64_t *)&c_one_1058, 3u))
      {
        __dpml_bid_C_ux_hyperbolic__(&v52, v53, &qword_1B891DF08, 0x4440uLL, 19, v57);
        v26 = v52.n128_u64[1];
        v25 = v52.n128_u64[0];
      }
      else
      {
        if (bid_f128_cmp(v51, (uint64_t *)&c_64, 3u))
        {
          if (bid_f128_cmp((uint64_t *)&c_zero_1059, v53, 3u))
          {
            v27 = v15;
            v28 = v16;
          }
          else
          {
            v28 = v16 & 0x7FFFFFFFFFFFFFFFLL;
            v27 = v15;
          }
          v42 = __bid128_exp(v27, v28, v22, &my_fpsf);
          v44 = v43;
          v45 = __bid128_div(1uLL, 0x3040000000000000uLL, v42, v43, v22, &my_fpsf);
          v47 = __bid128_mul(5uLL, 0x303E000000000000, v45, v46, v22, &my_fpsf);
          v24 = bid128_ext_fma((int *)v57, (int *)&v54, (int *)&v49, &v58, v42, v44, 5uLL, 0x303E000000000000, v47, v48, v22, &my_fpsf);
          goto LABEL_70;
        }
        v57[0] = 0uLL;
        v29 = v16 & 0x7FFFFFFFFFFFFFFFLL;
        v30 = __bid128_add(v15, v29, 0xBE00000000000000, 0x3040363BF3B1CEEELL, v22, &my_fpsf);
        v32 = __bid128_add(v30, v31, 0xBE00000000000000, 0xB040363BF3B1CEEELL, v22, &my_fpsf);
        v34 = v33;
        v35 = __bid128_sub(v15, v29, v32, v33, v22, &my_fpsf);
        v37 = v36;
        v49.n128_u64[0] = __bid128_to_binary128(v32, v34, v22, &my_fpsf);
        v49.n128_u64[1] = v38;
        v54 = __bid128_to_binary128(v35, v37, v22, &my_fpsf);
        v55 = v39;
        if (bid_f128_cmp((uint64_t *)&v49, (uint64_t *)&c_11000, 4u))
        {
          bid_f128_sub(&v49, (uint64_t *)&v49, (uint64_t *)&c_11000);
          bid_f128_exp(&v50, (uint64_t *)&v49);
          bid_f128_mul(v57, (uint64_t *)&c_half_1060, (uint64_t *)&v50);
          bid_f128_exp(&v50, (uint64_t *)&v54);
          bid_f128_mul(v57, (uint64_t *)v57, (uint64_t *)&v50);
          v40 = __binary128_to_bid128(v57[0].n128_u64[0], v57[0].n128_u64[1], v22, &my_fpsf);
          v24 = __bid128_mul(v40, v41, 0xD43EDE775707FD0ALL, 0x5550558ADA285F8BLL, v22, &my_fpsf);
          goto LABEL_70;
        }
        bid_f128_exp(&v50, (uint64_t *)&v49);
        bid_f128_mul(v57, (uint64_t *)&c_half_1060, (uint64_t *)&v50);
        bid_f128_exp(&v50, (uint64_t *)&v54);
        bid_f128_mul(v57, (uint64_t *)v57, (uint64_t *)&v50);
        v26 = v57[0].n128_u64[1];
        v25 = v57[0].n128_u64[0];
      }
      v24 = __binary128_to_bid128(v25, v26, v22, &my_fpsf);
    }
LABEL_70:
    v15 = v24;
    goto LABEL_71;
  }
LABEL_14:
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v17 = 4;
    else
      v17 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v18 = cosh(v9);
  *((double *)v6 + 4) = v18;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
}

void functionTanH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionTanH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionTanH_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25[2];
  __n128 v26;
  uint64_t v27[2];
  _QWORD v28[3];
  int v29;
  int v30;
  int v31[8];

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1)
        return;
      goto LABEL_14;
    }
    v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      v16 = v20;
    }
    else if (v14 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        v15 = 0;
        if (my_rnd_mode)
          v21 = 4;
        else
          v21 = 0;
        v16 = 0x3040000000000000;
        goto LABEL_56;
      }
      v15 = *((_QWORD *)a2 + 8);
      v16 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v21 = 4;
    else
      v21 = 0;
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0)
        my_fpsf |= 1u;
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (v22 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        v15 = 0;
        v22 = v16 & 0xFC00000000000000;
      }
      goto LABEL_62;
    }
LABEL_56:
    v26 = 0uLL;
    v25[0] = 0;
    v25[1] = 0;
    v27[0] = __bid128_to_binary128(v15, v16, v21, &my_fpsf);
    v27[1] = v23;
    memset(v28, 0, sizeof(v28));
    __dpml_bid_unpack_x_or_y__(v27, 0, (uint64_t)v28, &qword_1B891D780, (uint64_t)v25, v31);
    if (bid_f128_cmp(v25, (uint64_t *)&c_1em40_1148, 1u))
    {
      if (__bid128_isZero(v15, v16))
        v24 = __bid128_mul(v15, v16, 1uLL, 0x3040000000000000, v21, &my_fpsf);
      else
        v24 = bid128_ext_fma(v31, (int *)v28, &v30, &v29, v15, v16, 1uLL, 0xAFF0000000000000, v15, v16, v21, &my_fpsf);
    }
    else
    {
      __dpml_bid_C_ux_hyperbolic__(&v26, v27, qword_1B891DF10, 0x11846uLL, 0, v31);
      v24 = __binary128_to_bid128(v26.n128_u64[0], v26.n128_u64[1], v21, &my_fpsf);
    }
    v15 = v24;
LABEL_62:
    *((_QWORD *)v6 + 6) = v15;
    *((_QWORD *)v6 + 7) = v22;
    return;
  }
LABEL_14:
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v17 = 4;
    else
      v17 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v18 = tanh(v9);
  *((double *)v6 + 4) = v18;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
}

void functionASinH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionASinH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionASinH_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int *v7;
  int v8;
  int v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  double v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v14 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v2;
      *(_QWORD *)(v14 + 48) = 0;
      *(_QWORD *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v7 = *(int **)(a1 + 32);
  v8 = *v7;
  if (*v7 != 4)
  {
    if (v8 == 2)
    {
      v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v21 = 4;
        else
          v21 = 0;
        v16 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
        v23 = v22;
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a2 + 6);
        v23 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v15 == 4)
          v16 = *((_QWORD *)a2 + 8);
        else
          v16 = 0;
        v23 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v16, v23, &my_fpsf))
      {
        *((_QWORD *)v7 + 6) = 0;
        *((_QWORD *)v7 + 7) = 0x3040000000000000;
      }
      else
      {
        v24 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode)
            v26 = 4;
          else
            v26 = 0;
          v25 = __binary64_to_bid128(v26, &my_fpsf, *((double *)a2 + 4));
        }
        else if (v24 == 2)
        {
          v25 = *((_QWORD *)a2 + 6);
          v27 = *((_QWORD *)a2 + 7);
        }
        else
        {
          if (v24 == 4)
            v25 = *((_QWORD *)a2 + 8);
          else
            v25 = 0;
          v27 = 0x3040000000000000;
        }
        if (my_rnd_mode)
          v28 = 4;
        else
          v28 = 0;
        *((_QWORD *)v7 + 6) = __bid128_asinh(v25, v27, v28);
        *((_QWORD *)v7 + 7) = v29;
      }
      return;
    }
    if (v8 != 1)
      return;
  }
  v9 = *a2;
  if (*a2 == 1)
  {
    v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    v17 = *((_QWORD *)a2 + 6);
    v18 = *((_QWORD *)a2 + 7);
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v10 = __bid128_to_binary64(v17, v18, v19, &my_fpsf);
  }
  else
  {
    v10 = 0.0;
    if (v9 == 4)
    {
      v11 = *((_QWORD *)a2 + 8);
      v12 = (uint64_t)rint(1.79769313e308);
      v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      v10 = (double)v11;
      if (!v13)
        v10 = NAN;
    }
  }
  v20 = asinh(v10);
  *((double *)v7 + 4) = v20;
  *((_QWORD *)v7 + 8) = (uint64_t)rint(v20);
}

void functionACosH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionACosH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionACosH_block_invoke(uint64_t a1, int *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  unint64_t v20;
  int v21;
  unint64_t v22;
  _BOOL4 v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  int v51;
  int v52;
  int v53[8];
  int8x8_t v54[3];
  int8x8_t v55[3];
  _DWORD v56[2];
  unint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v2 = 10;
LABEL_25:
      v13 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(_QWORD *)(v13 + 48) = 0;
      *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v2 = 9;
    goto LABEL_25;
  }
  v3 = -1;
  v4 = 21;
  while (v3 != 14)
  {
    v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5)
      goto LABEL_9;
  }
  v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1)
        return;
      goto LABEL_14;
    }
    v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      v16 = v20;
    }
    else if (v14 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        v15 = 0;
        v31 = 0;
        v32 = 0;
        if (my_rnd_mode)
          v21 = 4;
        else
          v21 = 0;
        v16 = 0x3040000000000000;
        goto LABEL_82;
      }
      v15 = *((_QWORD *)a2 + 8);
      v16 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v21 = 4;
    else
      v21 = 0;
    if (((v16 >> 61) & 3) == 3)
    {
      if ((v16 & 0x7800000000000000) == 0x7800000000000000)
      {
        v22 = v16 & 0x3FFFFFFFFFFFLL;
        v24 = (v16 & 0x3FFFFFFFFFFFLL) != 0x314DC6448D93 || v15 < 0x38C15B0A00000000;
        v25 = !v24;
        v26 = 0xFE003FFFFFFFFFFFLL;
        if (v25)
          v26 = 0xFE00000000000000;
        if (v25)
          v27 = 0;
        else
          v27 = v15;
        v28 = v22 > 0x314DC6448D93;
        if (v22 <= 0x314DC6448D93)
          v29 = v26;
        else
          v29 = 0xFE00000000000000;
        if (v28)
          v30 = 0;
        else
          v30 = v27;
        if ((v16 & 0x7C00000000000000) == 0x7800000000000000)
        {
          v29 = 0xF800000000000000;
          v31 = 0;
        }
        else
        {
          v31 = v30;
        }
        if ((v16 & 0x7C00000000000000) == 0x7C00000000000000)
        {
          v32 = v29 & v16;
LABEL_84:
          if ((~v16 & 0x7E00000000000000) == 0)
            my_fpsf |= 1u;
          v34 = v32 & 0xFDFFFFFFFFFFFFFFLL;
          goto LABEL_103;
        }
        if ((v16 & 0x8000000000000000) == 0)
        {
          v31 = 0;
          v34 = 0x7800000000000000;
LABEL_103:
          *((_QWORD *)v6 + 6) = v31;
          *((_QWORD *)v6 + 7) = v34;
          return;
        }
LABEL_89:
        v31 = 0;
        my_fpsf |= 1u;
        v34 = 0x7C00000000000000;
        goto LABEL_103;
      }
      v32 = 0;
      v31 = 0;
      v33 = (v16 >> 47) & 0x3FFF;
LABEL_83:
      if ((~v16 & 0x7C00000000000000) == 0)
        goto LABEL_84;
LABEL_87:
      v50 = 0uLL;
      v48 = 0uLL;
      v47 = 0uLL;
      if (__bid128_quiet_less(v15, v16, 0x192D5uLL, 0x3036000000000000, &my_fpsf))
      {
        if (__bid128_quiet_greater(1uLL, 0x3040000000000000, v15, v16, &my_fpsf))
          goto LABEL_89;
        v39 = bid128_ext_fma((int *)v54, v53, &v52, &v51, v15, v16, v15, v16, 1uLL, 0xB040000000000000, v21, &my_fpsf);
        v41 = __bid128_sqrt(v39, v40, v21);
        v49.n128_u64[0] = __bid128_to_binary128(v41, v42, v21, &my_fpsf);
        v49.n128_u64[1] = v43;
        bid_f128_asinh(&v50, (uint64_t *)&v49);
        v37 = v50.n128_u64[1];
        v36 = v50.n128_u64[0];
        v38 = v21;
      }
      else if (v33 < 0x1843)
      {
        v49.n128_u64[0] = __bid128_to_binary128(v15, v16, v21, &my_fpsf);
        v49.n128_u64[1] = v44;
        if ((__dpml_bid_unpack_x_or_y__((uint64_t *)&v49, 0, (uint64_t)v56, qword_1B891E448, (uint64_t)&v50, v53) & 0x8000000000000000) == 0)
        {
          v45 = v56[1];
          v46 = v57;
          __dpml_bid_addsub__((uint64_t)v56, dword_1B891E480, 2, (uint64_t)v54);
          if (v55[0].i32[0])
          {
            v54[0].i32[1] = 0x8000;
          }
          else if (v45 == 1 && v46 <= 0x87C3B666FB66CB63)
          {
            __dpml_bid_divide__((uint64_t)v55, v54, 2, (uint64_t)v54);
            __dpml_bid_ux_sqrt_evaluation__(v54, v55);
            __dpml_bid_evaluate_rational__(v55, (uint64_t)&unk_1B891EE08, 17, 6uLL, (uint64_t)v54);
            __dpml_bid_multiply__(v54, qword_1B891EF60, v54);
          }
          else
          {
            __dpml_bid_multiply__(v55, v54, v54);
            __dpml_bid_ffs_and_shift__((uint64_t)v54, 0);
            __dpml_bid_ux_sqrt_evaluation__(v54, v54);
            __dpml_bid_addsub__((uint64_t)v54, v56, 0, (uint64_t)v54);
            __dpml_bid_ux_log__((uint64_t)v54, qword_1B891E498, v54);
          }
          __dpml_bid_pack__((unsigned int *)v54, &v50, 0, 2);
        }
        v37 = v50.n128_u64[1];
        v36 = v50.n128_u64[0];
        v38 = v21;
      }
      else
      {
        v49.n128_u64[0] = __bid128_to_binary128(v31, v32 | 0x3040000000000000, v21, &my_fpsf);
        v49.n128_u64[1] = v35;
        bid_f128_add(&v49, (uint64_t *)&v49, (uint64_t *)&v49);
        bid_f128_itof(&v48, v33 - 6176);
        bid_f128_log(&v50, (uint64_t *)&v49);
        bid_f128_mul(&v47, (uint64_t *)&v48, (uint64_t *)&c_log10);
        bid_f128_add(&v50, (uint64_t *)&v50, (uint64_t *)&v47);
        v37 = v50.n128_u64[1];
        v36 = v50.n128_u64[0];
        v38 = v21;
      }
      v31 = __binary128_to_bid128(v36, v37, v38, &my_fpsf);
      goto LABEL_103;
    }
    v32 = v16 & 0x1FFFFFFFFFFFFLL;
    if ((v16 & 0x1FFFFFFFFFFFFLL) > 0x1ED09BEAD87C0
      || (v16 & 0x1FFFFFFFFFFFFLL) == 0x1ED09BEAD87C0 && v15 >= 0x378D8E6400000000)
    {
      v31 = 0;
      v32 = 0;
    }
    else
    {
      v31 = v15;
    }
LABEL_82:
    v33 = (v16 >> 49) & 0x3FFF;
    if (v32 | v31)
      goto LABEL_87;
    goto LABEL_83;
  }
LABEL_14:
  v8 = *a2;
  if (*a2 == 1)
  {
    v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode)
      v17 = 4;
    else
      v17 = 0;
    v9 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    v9 = 0.0;
    if (v8 == 4)
    {
      v10 = *((_QWORD *)a2 + 8);
      v11 = (uint64_t)rint(1.79769313e308);
      v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      v9 = (double)v10;
      if (!v12)
        v9 = NAN;
    }
  }
  v18 = acosh(v9);
  *((double *)v6 + 4) = v18;
  *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
}

void functionATanH(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionATanH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionATanH_block_invoke(uint64_t a1, int *a2)
{
  int v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int *v8;
  int v9;
  int v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  double v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_25:
      v15 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(_QWORD *)(v15 + 48) = 0;
      *(_QWORD *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v3 = 9;
    goto LABEL_25;
  }
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
      goto LABEL_9;
  }
  v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v8 = *(int **)(a1 + 32);
  v9 = *v8;
  if (*v8 != 4)
  {
    if (v9 == 2)
    {
      v16 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v22 = 4;
        else
          v22 = 0;
        v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        v24 = v23;
      }
      else if (v16 == 2)
      {
        v17 = *((_QWORD *)a2 + 6);
        v24 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v16 == 4)
          v17 = *((_QWORD *)a2 + 8);
        else
          v17 = 0;
        v24 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v17, v24, &my_fpsf))
      {
        *((_QWORD *)v8 + 6) = 0;
        *((_QWORD *)v8 + 7) = 0x3040000000000000;
      }
      else
      {
        v25 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode)
            v27 = 4;
          else
            v27 = 0;
          v26 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
          v29 = v28;
        }
        else if (v25 == 2)
        {
          v26 = *((_QWORD *)a2 + 6);
          v29 = *((_QWORD *)a2 + 7);
        }
        else
        {
          if (v25 == 4)
            v26 = *((_QWORD *)a2 + 8);
          else
            v26 = 0;
          v29 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v26, v29, &my_fpsf))
        {
          *((_QWORD *)v8 + 6) = 0;
          *((_QWORD *)v8 + 7) = 0x7C00000000000000;
        }
        else
        {
          v30 = treeDecimalValue((double *)a2);
          v32 = __bid128_quiet_equal(1uLL, 0xB040000000000000, v30, v31, &my_fpsf);
          v33 = *(_QWORD *)(a1 + 32);
          if (v32)
          {
            *(_QWORD *)(v33 + 48) = 0;
            *(_QWORD *)(v33 + 56) = 0x7C00000000000000;
          }
          else
          {
            v34 = treeDecimalValue((double *)a2);
            if (my_rnd_mode)
              v36 = 4;
            else
              v36 = 0;
            *(_QWORD *)(v33 + 48) = __bid128_atanh(v34, v35, v36);
            *(_QWORD *)(v33 + 56) = v37;
          }
        }
      }
      return;
    }
    if (v9 != 1)
      return;
  }
  v10 = *a2;
  if (*a2 == 1)
  {
    v11 = *((double *)a2 + 4);
  }
  else if (v10 == 2)
  {
    v18 = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
    if (my_rnd_mode)
      v20 = 4;
    else
      v20 = 0;
    v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
  }
  else
  {
    v11 = 0.0;
    if (v10 == 4)
    {
      v12 = *((_QWORD *)a2 + 8);
      v13 = (uint64_t)rint(1.79769313e308);
      v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
      v11 = (double)v12;
      if (!v14)
        v11 = NAN;
    }
  }
  v21 = atanh(v11);
  *((double *)v8 + 4) = v21;
  *((_QWORD *)v8 + 8) = (uint64_t)rint(v21);
}

void functionCsc(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  _QWORD v10[6];

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionSine(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionSec(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  _QWORD v10[6];

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionCos(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionCot(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  _QWORD v10[6];

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionTan(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionCscH(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  v10 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 3221225472;
  v13 = __functionSinH_block_invoke;
  v14 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v15 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v11);
  v11 = v10;
  v12 = 3221225472;
  v13 = __functionDivide_block_invoke;
  v14 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v15 = a2;
  v16 = v9;
  evaluateBinary((uint64_t)v9, a2, &v11);
  freeTree(v9);
}

void functionSecH(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  v10 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 3221225472;
  v13 = __functionCosH_block_invoke;
  v14 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v15 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v11);
  v11 = v10;
  v12 = 3221225472;
  v13 = __functionDivide_block_invoke;
  v14 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v15 = a2;
  v16 = v9;
  evaluateBinary((uint64_t)v9, a2, &v11);
  freeTree(v9);
}

void functionCotH(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  double *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode)
    v5 = 4;
  else
    v5 = 0;
  v6 = __bid128_from_string("1", v5, &my_fpsf);
  v8 = newDecimalNode(v6, v7);
  v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  v10 = MEMORY[0x1E0C809B0];
  v11 = MEMORY[0x1E0C809B0];
  v12 = 3221225472;
  v13 = __functionTanH_block_invoke;
  v14 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v15 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v11);
  v11 = v10;
  v12 = 3221225472;
  v13 = __functionDivide_block_invoke;
  v14 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v15 = a2;
  v16 = v9;
  evaluateBinary((uint64_t)v9, a2, &v11);
  freeTree(v9);
}

void functionCeil(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionCeil_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionCeil_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  double v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned __int128 v65;
  _BOOL4 v66;
  uint64_t v67;
  unint64_t v68;
  int v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 == 4)
    goto LABEL_6;
  if (v7 == 2)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v20 = 4;
      else
        v20 = 0;
      v14 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      v14 = *((_QWORD *)a2 + 6);
      v15 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v13 != 4)
      {
        v21 = 0;
        v14 = 0;
        v22 = 0;
        v23 = 0;
        v15 = 0x3040000000000000;
        v24 = 0x3040000000000000;
        goto LABEL_51;
      }
      v14 = *((_QWORD *)a2 + 8);
      v15 = 0x3040000000000000;
    }
    if ((~v15 & 0x7800000000000000) == 0)
    {
      if ((~v15 & 0x7C00000000000000) != 0)
      {
        v14 = 0;
        if (v15 < 0)
          v15 = 0xF800000000000000;
        else
          v15 = 0x7800000000000000;
      }
      else
      {
        if ((v15 & 0x3FFFFFFFFFFFuLL) > 0x314DC6448D93
          || v14 >= 0x38C15B0A00000000 && (v15 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
        {
          v14 = 0;
          v15 &= 0xFFFFC00000000000;
        }
        if ((~v15 & 0x7E00000000000000) == 0)
          my_fpsf |= 1u;
        v15 &= 0xFC003FFFFFFFFFFFLL;
      }
      goto LABEL_109;
    }
    v21 = v15 & 0x8000000000000000;
    if ((~v15 & 0x6000000000000000) != 0)
    {
      v22 = v15 & 0x1FFFFFFFFFFFFLL;
      if ((v15 & 0x1FFFFFFFFFFFFuLL) > 0x1ED09BEAD87C0 || v14 >= 0x378D8E6400000000 && v22 == 0x1ED09BEAD87C0)
      {
        v22 = 0;
        v23 = 0;
      }
      else
      {
        v23 = v14;
      }
      v24 = v15;
    }
    else
    {
      v22 = 0;
      v23 = 0;
      v24 = 4 * v15;
    }
LABEL_51:
    v25 = v24 & 0x7FFE000000000000;
    if (!(v23 | v22))
    {
      v14 = 0;
      v27 = 0x3040000000000000;
      if (v25 > 0x3040000000000000)
        v27 = v25;
      v15 = v27 | v21;
      goto LABEL_109;
    }
    if (v25 <= 0x2FFC000000000000)
      goto LABEL_53;
    v28 = HIDWORD(v23);
    if (v23 >> 53)
      v29 = HIDWORD(v23);
    else
      v29 = v23;
    if (v23 >> 53)
      v30 = -990;
    else
      v30 = -1022;
    if (v22)
      v29 = v22;
    v31 = (COERCE_UNSIGNED_INT64((double)v29) >> 52) & 0x7FF;
    if (v22)
      v30 = -958;
    v32 = (v31 + v30 - 1);
    v33 = *((_DWORD *)&__bid_nr_digits + 8 * v32);
    if (!v33)
    {
      v34 = (char *)&__bid_nr_digits + 32 * v32;
      v33 = *((_DWORD *)v34 + 6);
      v35 = *((_QWORD *)v34 + 1);
      if (v22 > v35 || v22 == v35 && v23 >= *((_QWORD *)&__bid_nr_digits + 4 * v32 + 2))
        ++v33;
    }
    v36 = v25 >> 49;
    if ((v25 >> 49) >> 5 > 0xC0)
      goto LABEL_109;
    if ((int)v36 + v33 - 6176 < 1)
    {
LABEL_53:
      v14 = v21 == 0;
      v26 = 0x3040000000000000;
LABEL_108:
      v15 = v21 | v26;
LABEL_109:
      *((_QWORD *)v6 + 6) = v14;
      *((_QWORD *)v6 + 7) = v15;
      v6 = *(int **)(a1 + 32);
      goto LABEL_110;
    }
    v37 = v23;
    v38 = (6175 - v36);
    v39 = __bid_ten2mk128[2 * v38];
    v40 = __bid_ten2mk128[2 * v38 + 1];
    v41 = v40 * (unint64_t)HIDWORD(v23);
    v42 = HIDWORD(v41) + HIDWORD(v40) * (unint64_t)HIDWORD(v23);
    v43 = HIDWORD(v40) * (unint64_t)v23
        + v41
        + ((v40 * (unint64_t)v23) >> 32);
    v44 = (v40 * v23) | ((unint64_t)v43 << 32);
    v45 = v39 * (unint64_t)HIDWORD(v23);
    v46 = v39 * (unint64_t)v23;
    v47 = HIDWORD(v39) * (unint64_t)v37 + v45 + HIDWORD(v46);
    v48 = v46 | ((unint64_t)v47 << 32);
    v50 = v44 + HIDWORD(v45) + HIDWORD(v39) * (unint64_t)v28 + HIDWORD(v47);
    v49 = (__PAIR128__(v42, v44)
         + __PAIR128__(HIDWORD(v43), HIDWORD(v45) + HIDWORD(v39) * (unint64_t)v28 + HIDWORD(v47))) >> 64;
    v51 = HIDWORD(v22);
    v52 = v22;
    v53 = v40 * (unint64_t)HIDWORD(v22);
    v54 = HIDWORD(v53) + HIDWORD(v40) * (unint64_t)HIDWORD(v22);
    v55 = HIDWORD(v40) * (unint64_t)v22
        + v53
        + ((v40 * (unint64_t)v22) >> 32);
    v56 = HIDWORD(v55);
    v57 = (v40 * v22) | ((unint64_t)v55 << 32);
    v58 = v39 * (unint64_t)HIDWORD(v22);
    v59 = v39 * (unint64_t)v22;
    v60 = HIDWORD(v58) + HIDWORD(v39) * (unint64_t)v51;
    v61 = HIDWORD(v39) * (unint64_t)v52 + v58 + HIDWORD(v59);
    v62 = v59 | ((unint64_t)v61 << 32);
    v64 = v57 + v60 + HIDWORD(v61);
    v63 = (__PAIR128__(v54, v57) + __PAIR128__(v56, v60 + HIDWORD(v61))) >> 64;
    v65 = __PAIR128__(v64, v50) + v62;
    v66 = __CFADD__(__CFADD__(v50, v62), v64);
    v14 = v49 + *((_QWORD *)&v65 + 1);
    v67 = __CFADD__(v49, *((_QWORD *)&v65 + 1)) || v66;
    v68 = v63 + v67;
    if (v36 >= 0x181D)
    {
      if (!v21 && ((unint64_t)v65 > v40 || (_QWORD)v65 == v40 && v48 >= v39) && __CFADD__(v14++, 1))
        ++v68;
      goto LABEL_107;
    }
    v70 = __bid_shiftright128[v38];
    if (v36 >> 1 >= 0xC05)
    {
      v71 = v68 >> v70;
      v72 = (v68 << -(char)v70) | (v14 >> v70);
      if (v21)
      {
LABEL_90:
        v68 = v71;
        v14 = v72;
LABEL_107:
        v26 = v68 | 0x3040000000000000;
        goto LABEL_108;
      }
      if ((__bid_maskhigh128[v38] & v14) == 0 && (unint64_t)v65 <= v40)
      {
        if ((_QWORD)v65 != v40)
          goto LABEL_90;
        v68 = v71;
        v14 = v72;
        if (v48 < v39)
          goto LABEL_107;
      }
      v14 = v72 + 1;
      if (v72 == -1)
        v68 = v71 + 1;
      else
        v68 = v71;
      goto LABEL_107;
    }
    v73 = v68 >> v70;
    if (v21)
    {
      v68 = 0;
LABEL_93:
      v14 = v73;
      goto LABEL_107;
    }
    if ((__bid_maskhigh128[v38] & v68) == 0 && !v14 && (unint64_t)v65 <= v40)
    {
      v68 = 0;
      if ((_QWORD)v65 != v40)
        goto LABEL_93;
      v14 = v73;
      if (v48 < v39)
        goto LABEL_107;
    }
    v68 = 0;
    v14 = v73 + 1;
    goto LABEL_107;
  }
  if (v7 == 1)
  {
LABEL_6:
    v8 = *a2;
    if (*a2 == 1)
    {
      v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      v16 = *((_QWORD *)a2 + 6);
      v17 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v18 = 4;
      else
        v18 = 0;
      v9 = __bid128_to_binary64(v16, v17, v18, &my_fpsf);
    }
    else
    {
      v9 = 0.0;
      if (v8 == 4)
      {
        v10 = *((_QWORD *)a2 + 8);
        v11 = (uint64_t)rint(1.79769313e308);
        v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        v9 = (double)v10;
        if (!v12)
          v9 = NAN;
      }
    }
    v19 = ceil(v9);
    *((double *)v6 + 4) = v19;
    *((_QWORD *)v6 + 8) = (uint64_t)rint(v19);
  }
LABEL_110:
  v74 = *(_OWORD *)(a2 + 18);
  v75 = *(_OWORD *)(a2 + 22);
  v76 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v76;
  *(_OWORD *)(v6 + 22) = v75;
  *(_OWORD *)(v6 + 18) = v74;
  result = *(__n128 *)(a2 + 34);
  v77 = *(_OWORD *)(a2 + 38);
  v78 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v78;
  *(_OWORD *)(v6 + 38) = v77;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionFloor(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionFloor_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionFloor_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 == 4)
    goto LABEL_6;
  if (v7 == 2)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      v14 = *((_QWORD *)a2 + 6);
      v20 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v13 == 4)
        v14 = *((_QWORD *)a2 + 8);
      else
        v14 = 0;
      v20 = 0x3040000000000000;
    }
    *((_QWORD *)v6 + 6) = __bid128_round_integral_negative(v14, v20, &my_fpsf);
    *((_QWORD *)v6 + 7) = v21;
    v6 = *(int **)(a1 + 32);
  }
  else if (v7 == 1)
  {
LABEL_6:
    v8 = *a2;
    if (*a2 == 1)
    {
      v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v17 = 4;
      else
        v17 = 0;
      v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
    }
    else
    {
      v9 = 0.0;
      if (v8 == 4)
      {
        v10 = *((_QWORD *)a2 + 8);
        v11 = (uint64_t)rint(1.79769313e308);
        v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        v9 = (double)v10;
        if (!v12)
          v9 = NAN;
      }
    }
    v18 = floor(v9);
    *((double *)v6 + 4) = v18;
    *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
  }
  v22 = *(_OWORD *)(a2 + 18);
  v23 = *(_OWORD *)(a2 + 22);
  v24 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v24;
  *(_OWORD *)(v6 + 22) = v23;
  *(_OWORD *)(v6 + 18) = v22;
  result = *(__n128 *)(a2 + 34);
  v25 = *(_OWORD *)(a2 + 38);
  v26 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v26;
  *(_OWORD *)(v6 + 38) = v25;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionRound(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRound_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionRound_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 == 4)
    goto LABEL_6;
  if (v7 == 2)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      v14 = *((_QWORD *)a2 + 6);
      v20 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v13 == 4)
        v14 = *((_QWORD *)a2 + 8);
      else
        v14 = 0;
      v20 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v21 = 4;
    else
      v21 = 0;
    *((_QWORD *)v6 + 6) = __bid128_round_integral_exact(v14, v20, v21, &my_fpsf);
    *((_QWORD *)v6 + 7) = v22;
    v6 = *(int **)(a1 + 32);
  }
  else if (v7 == 1)
  {
LABEL_6:
    v8 = *a2;
    if (*a2 == 1)
    {
      v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v17 = 4;
      else
        v17 = 0;
      v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
    }
    else
    {
      v9 = 0.0;
      if (v8 == 4)
      {
        v10 = *((_QWORD *)a2 + 8);
        v11 = (uint64_t)rint(1.79769313e308);
        v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        v9 = (double)v10;
        if (!v12)
          v9 = NAN;
      }
    }
    v18 = round(v9);
    *((double *)v6 + 4) = v18;
    *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
  }
  v23 = *(_OWORD *)(a2 + 18);
  v24 = *(_OWORD *)(a2 + 22);
  v25 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v25;
  *(_OWORD *)(v6 + 22) = v24;
  *(_OWORD *)(v6 + 18) = v23;
  result = *(__n128 *)(a2 + 34);
  v26 = *(_OWORD *)(a2 + 38);
  v27 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v27;
  *(_OWORD *)(v6 + 38) = v26;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionRoundNearest(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRoundNearest_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionRoundNearest_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v4;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int *v10;
  int v11;
  int v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  BOOL v28;
  double v29;
  double v30;
  int v31;
  double v32;
  int v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  unint64_t v38;
  int v39;
  double v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  if (a3[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_25:
      v17 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v17 + 204) = v4;
      *(_QWORD *)(v17 + 48) = 0;
      *(_QWORD *)(v17 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    v4 = 9;
    goto LABEL_25;
  }
  v7 = -1;
  v8 = 21;
  while (v7 != 14)
  {
    v9 = a3[v8];
    ++v7;
    v8 += 2;
    if (v9)
      goto LABEL_9;
  }
  v7 = 15;
LABEL_9:
  if (v7 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_24;
  }
  g_isTrivial = 0;
  v10 = *(int **)(a1 + 32);
  v11 = *v10;
  if (*v10 == 4)
    goto LABEL_14;
  if (v11 == 2)
  {
    v18 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v34 = 4;
      else
        v34 = 0;
      v19 = __binary64_to_bid128(v34, &my_fpsf, *((double *)a2 + 4));
      v36 = v35;
    }
    else if (v18 == 2)
    {
      v19 = *((_QWORD *)a2 + 6);
      v36 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v18 == 4)
        v19 = *((_QWORD *)a2 + 8);
      else
        v19 = 0;
      v36 = 0x3040000000000000;
    }
    v37 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v41 = 4;
      else
        v41 = 0;
      v38 = __binary64_to_bid128(v41, &my_fpsf, *((double *)a3 + 4));
      v43 = v42;
    }
    else if (v37 == 2)
    {
      v38 = *((_QWORD *)a3 + 6);
      v43 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v37 == 4)
        v38 = *((_QWORD *)a3 + 8);
      else
        v38 = 0;
      v43 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v44 = 4;
    else
      v44 = 0;
    v45 = __bid128_div(v19, v36, v38, v43, v44, &my_fpsf);
    v47 = __bid128_round_integral_exact(v45, v46, v44, &my_fpsf);
    v49 = v48;
    v50 = *a3;
    if (*a3 == 1)
    {
      v51 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a3 + 4));
      v53 = v52;
    }
    else if (v50 == 2)
    {
      v51 = *((_QWORD *)a3 + 6);
      v53 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v50 == 4)
        v51 = *((_QWORD *)a3 + 8);
      else
        v51 = 0;
      v53 = 0x3040000000000000;
    }
    *((_QWORD *)v10 + 6) = __bid128_mul(v47, v49, v51, v53, v44, &my_fpsf);
    *((_QWORD *)v10 + 7) = v54;
    v10 = *(int **)(a1 + 32);
    goto LABEL_96;
  }
  if (v11 == 1)
  {
LABEL_14:
    v12 = *a2;
    if (*a2 == 1)
    {
      v13 = *((double *)a2 + 4);
    }
    else if (v12 == 2)
    {
      v20 = *((_QWORD *)a2 + 6);
      v21 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v13 = __bid128_to_binary64(v20, v21, v22, &my_fpsf);
    }
    else
    {
      v13 = 0.0;
      if (v12 == 4)
      {
        v14 = *((_QWORD *)a2 + 8);
        v15 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v14 && v15 > v14)
          v13 = (double)v14;
        else
          v13 = NAN;
      }
    }
    v23 = *a3;
    if (*a3 == 1)
    {
      v27 = *((double *)a3 + 4);
      v30 = round(v13 / v27);
    }
    else
    {
      if (v23 == 2)
      {
        if (my_rnd_mode)
          v31 = 4;
        else
          v31 = 0;
        v32 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v31, &my_fpsf);
        v23 = *a3;
      }
      else
      {
        if (v23 == 4)
        {
          v24 = *((_QWORD *)a3 + 8);
          v25 = (uint64_t)rint(1.79769313e308);
          v26 = (uint64_t)rint(2.22507386e-308);
          v27 = (double)v24;
          v28 = v26 < v24 && v25 > v24;
          v29 = NAN;
          if (v28)
            v29 = (double)v24;
          v30 = round(v13 / v29);
          goto LABEL_54;
        }
        v32 = 0.0;
      }
      v30 = round(v13 / v32);
      if (v23 == 1)
      {
        v27 = *((double *)a3 + 4);
      }
      else
      {
        if (v23 == 2)
        {
          if (my_rnd_mode)
            v39 = 4;
          else
            v39 = 0;
          v27 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v39, &my_fpsf);
          goto LABEL_76;
        }
        v27 = 0.0;
        if (v23 == 4)
        {
          v24 = *((_QWORD *)a3 + 8);
          v25 = (uint64_t)rint(1.79769313e308);
          v26 = (uint64_t)rint(2.22507386e-308);
          v27 = (double)v24;
LABEL_54:
          if (v26 >= v24 || v25 <= v24)
            v27 = NAN;
        }
      }
    }
LABEL_76:
    v40 = v30 * v27;
    *((double *)v10 + 4) = v40;
    *((_QWORD *)v10 + 8) = (uint64_t)rint(v40);
  }
LABEL_96:
  v55 = *(_OWORD *)(a2 + 18);
  v56 = *(_OWORD *)(a2 + 22);
  v57 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v10 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v10 + 26) = v57;
  *(_OWORD *)(v10 + 22) = v56;
  *(_OWORD *)(v10 + 18) = v55;
  v58 = *(_OWORD *)(a2 + 34);
  v59 = *(_OWORD *)(a2 + 38);
  v60 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v10 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v10 + 42) = v60;
  *(_OWORD *)(v10 + 38) = v59;
  *(_OWORD *)(v10 + 34) = v58;
}

void functionFabs(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionFabs_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionFabs_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  int *v6;
  int v7;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  v6 = *(int **)(a1 + 32);
  v7 = *v6;
  if (*v6 == 4)
    goto LABEL_6;
  if (v7 == 2)
  {
    v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      v14 = *((_QWORD *)a2 + 6);
      v20 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v13 == 4)
        v14 = *((_QWORD *)a2 + 8);
      else
        v14 = 0;
      v20 = 0x3040000000000000;
    }
    *((_QWORD *)v6 + 6) = v14;
    *((_QWORD *)v6 + 7) = v20 & 0x7FFFFFFFFFFFFFFFLL;
    v6 = *(int **)(a1 + 32);
  }
  else if (v7 == 1)
  {
LABEL_6:
    v8 = *a2;
    if (*a2 == 1)
    {
      v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      v15 = *((_QWORD *)a2 + 6);
      v16 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v17 = 4;
      else
        v17 = 0;
      v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
    }
    else
    {
      v9 = 0.0;
      if (v8 == 4)
      {
        v10 = *((_QWORD *)a2 + 8);
        v11 = (uint64_t)rint(1.79769313e308);
        v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        v9 = (double)v10;
        if (!v12)
          v9 = NAN;
      }
    }
    v18 = fabs(v9);
    *((double *)v6 + 4) = v18;
    *((_QWORD *)v6 + 8) = (uint64_t)rint(v18);
  }
  v21 = *(_OWORD *)(a2 + 18);
  v22 = *(_OWORD *)(a2 + 22);
  v23 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v23;
  *(_OWORD *)(v6 + 22) = v22;
  *(_OWORD *)(v6 + 18) = v21;
  result = *(__n128 *)(a2 + 34);
  v24 = *(_OWORD *)(a2 + 38);
  v25 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v25;
  *(_OWORD *)(v6 + 38) = v24;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionJ0(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionJ0_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

unint64_t __functionJ0_block_invoke(unint64_t result, int *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  double v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v2 = result;
  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_22:
      v12 = *(_QWORD *)(result + 32);
      *(_DWORD *)(v12 + 204) = v3;
      *(_QWORD *)(v12 + 48) = 0;
      *(_QWORD *)(v12 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_21:
    v3 = 9;
    goto LABEL_22;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_21;
  }
  g_isTrivial = 0;
  v7 = *a2;
  if (*a2 == 1)
  {
    v8 = *((double *)a2 + 4);
  }
  else if (v7 == 2)
  {
    if (my_rnd_mode)
      v13 = 4;
    else
      v13 = 0;
    v8 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v13, &my_fpsf);
  }
  else
  {
    v8 = 0.0;
    if (v7 == 4)
    {
      v9 = *((_QWORD *)a2 + 8);
      v10 = (uint64_t)rint(1.79769313e308);
      v11 = (uint64_t)rint(2.22507386e-308) < v9 && v10 > v9;
      v8 = (double)v9;
      if (!v11)
        v8 = NAN;
    }
  }
  v14 = j0(v8);
  v15 = *(_QWORD *)(v2 + 32);
  *(double *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 64) = (uint64_t)rint(v14);
  if (my_rnd_mode)
    v16 = 4;
  else
    v16 = 0;
  result = __binary64_to_bid128(v16, &my_fpsf, v14);
  *(_QWORD *)(v15 + 48) = result;
  *(_QWORD *)(v15 + 56) = v17;
  return result;
}

void functionJ1(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionJ1_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

unint64_t __functionJ1_block_invoke(unint64_t result, int *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  double v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v2 = result;
  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_22:
      v12 = *(_QWORD *)(result + 32);
      *(_DWORD *)(v12 + 204) = v3;
      *(_QWORD *)(v12 + 48) = 0;
      *(_QWORD *)(v12 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_21:
    v3 = 9;
    goto LABEL_22;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_21;
  }
  g_isTrivial = 0;
  v7 = *a2;
  if (*a2 == 1)
  {
    v8 = *((double *)a2 + 4);
  }
  else if (v7 == 2)
  {
    if (my_rnd_mode)
      v13 = 4;
    else
      v13 = 0;
    v8 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v13, &my_fpsf);
  }
  else
  {
    v8 = 0.0;
    if (v7 == 4)
    {
      v9 = *((_QWORD *)a2 + 8);
      v10 = (uint64_t)rint(1.79769313e308);
      v11 = (uint64_t)rint(2.22507386e-308) < v9 && v10 > v9;
      v8 = (double)v9;
      if (!v11)
        v8 = NAN;
    }
  }
  v14 = j1(v8);
  v15 = *(_QWORD *)(v2 + 32);
  *(double *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 64) = (uint64_t)rint(v14);
  if (my_rnd_mode)
    v16 = 4;
  else
    v16 = 0;
  result = __binary64_to_bid128(v16, &my_fpsf, v14);
  *(_QWORD *)(v15 + 48) = result;
  *(_QWORD *)(v15 + 56) = v17;
  return result;
}

void functionY0(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionY0_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

unint64_t __functionY0_block_invoke(unint64_t result, int *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  double v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v2 = result;
  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_22:
      v12 = *(_QWORD *)(result + 32);
      *(_DWORD *)(v12 + 204) = v3;
      *(_QWORD *)(v12 + 48) = 0;
      *(_QWORD *)(v12 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_21:
    v3 = 9;
    goto LABEL_22;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_21;
  }
  g_isTrivial = 0;
  v7 = *a2;
  if (*a2 == 1)
  {
    v8 = *((double *)a2 + 4);
  }
  else if (v7 == 2)
  {
    if (my_rnd_mode)
      v13 = 4;
    else
      v13 = 0;
    v8 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v13, &my_fpsf);
  }
  else
  {
    v8 = 0.0;
    if (v7 == 4)
    {
      v9 = *((_QWORD *)a2 + 8);
      v10 = (uint64_t)rint(1.79769313e308);
      v11 = (uint64_t)rint(2.22507386e-308) < v9 && v10 > v9;
      v8 = (double)v9;
      if (!v11)
        v8 = NAN;
    }
  }
  v14 = y0(v8);
  v15 = *(_QWORD *)(v2 + 32);
  *(double *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 64) = (uint64_t)rint(v14);
  if (my_rnd_mode)
    v16 = 4;
  else
    v16 = 0;
  result = __binary64_to_bid128(v16, &my_fpsf, v14);
  *(_QWORD *)(v15 + 48) = result;
  *(_QWORD *)(v15 + 56) = v17;
  return result;
}

void functionY1(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionY1_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

unint64_t __functionY1_block_invoke(unint64_t result, int *a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  double v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v2 = result;
  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v3 = 10;
LABEL_22:
      v12 = *(_QWORD *)(result + 32);
      *(_DWORD *)(v12 + 204) = v3;
      *(_QWORD *)(v12 + 48) = 0;
      *(_QWORD *)(v12 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_21:
    v3 = 9;
    goto LABEL_22;
  }
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
      goto LABEL_9;
  }
  v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_21;
  }
  g_isTrivial = 0;
  v7 = *a2;
  if (*a2 == 1)
  {
    v8 = *((double *)a2 + 4);
  }
  else if (v7 == 2)
  {
    if (my_rnd_mode)
      v13 = 4;
    else
      v13 = 0;
    v8 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v13, &my_fpsf);
  }
  else
  {
    v8 = 0.0;
    if (v7 == 4)
    {
      v9 = *((_QWORD *)a2 + 8);
      v10 = (uint64_t)rint(1.79769313e308);
      v11 = (uint64_t)rint(2.22507386e-308) < v9 && v10 > v9;
      v8 = (double)v9;
      if (!v11)
        v8 = NAN;
    }
  }
  v14 = y1(v8);
  v15 = *(_QWORD *)(v2 + 32);
  *(double *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 64) = (uint64_t)rint(v14);
  if (my_rnd_mode)
    v16 = 4;
  else
    v16 = 0;
  result = __binary64_to_bid128(v16, &my_fpsf, v14);
  *(_QWORD *)(v15 + 48) = result;
  *(_QWORD *)(v15 + 56) = v17;
  return result;
}

void functionRInt(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRInt_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionRInt_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  uint64_t v4;
  uint64_t v6;
  int v8;
  double v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  double v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    v6 = *(_QWORD *)(a1 + 32);
    if (*(_DWORD *)v6 == 4 || *(_DWORD *)v6 == 1)
    {
      v8 = *a2;
      if (*a2 == 1)
      {
        v9 = *((double *)a2 + 4);
      }
      else if (v8 == 2)
      {
        v15 = *((_QWORD *)a2 + 6);
        v16 = *((_QWORD *)a2 + 7);
        if (my_rnd_mode)
          v17 = 4;
        else
          v17 = 0;
        v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
      }
      else
      {
        v9 = 0.0;
        if (v8 == 4)
        {
          v10 = *((_QWORD *)a2 + 8);
          v11 = (uint64_t)rint(1.79769313e308);
          v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
          v9 = (double)v10;
          if (!v12)
            v9 = NAN;
        }
      }
      v18 = rint(v9);
      *(double *)(v6 + 32) = v18;
      *(_QWORD *)(v6 + 64) = (uint64_t)rint(v18);
    }
    else
    {
      v13 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v19 = 4;
        else
          v19 = 0;
        v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v13 == 2)
      {
        v14 = *((_QWORD *)a2 + 6);
        v20 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v13 == 4)
          v14 = *((_QWORD *)a2 + 8);
        else
          v14 = 0;
        v20 = 0x3040000000000000;
      }
      *(_QWORD *)(v6 + 48) = __bid128_round_integral_exact(v14, v20, 0, &my_fpsf);
      *(_QWORD *)(v6 + 56) = v21;
      v6 = *(_QWORD *)(a1 + 32);
    }
    v22 = *(_OWORD *)(a2 + 18);
    v23 = *(_OWORD *)(a2 + 22);
    v24 = *(_OWORD *)(a2 + 26);
    *(_OWORD *)(v6 + 120) = *(_OWORD *)(a2 + 30);
    *(_OWORD *)(v6 + 104) = v24;
    *(_OWORD *)(v6 + 88) = v23;
    *(_OWORD *)(v6 + 72) = v22;
    result = *(__n128 *)(a2 + 34);
    v25 = *(_OWORD *)(a2 + 38);
    v26 = *(_OWORD *)(a2 + 42);
    *(_OWORD *)(v6 + 184) = *(_OWORD *)(a2 + 46);
    *(_OWORD *)(v6 + 168) = v26;
    *(_OWORD *)(v6 + 152) = v25;
    *(__n128 *)(v6 + 136) = result;
  }
  return result;
}

void functionLGamma(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionLGamma_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionLGamma_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  double v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_27:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_26:
    v4 = 9;
    goto LABEL_27;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_26;
  }
  g_isTrivial = 0;
  v9 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v9 == 4 || *(_DWORD *)v9 == 1)
  {
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v19 = 4;
      else
        v19 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v20 = lgamma(v12);
    v21 = *(_QWORD *)(a1 + 32);
    *(double *)(v21 + 32) = v20;
    *(_QWORD *)(v21 + 64) = (uint64_t)rint(v20);
  }
  else
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v18 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
      v24 = v23;
    }
    else if (v17 == 2)
    {
      v18 = *((_QWORD *)a2 + 6);
      v24 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v17 == 4)
        v18 = *((_QWORD *)a2 + 8);
      else
        v18 = 0;
      v24 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v25 = 4;
    else
      v25 = 0;
    *(_QWORD *)(v9 + 48) = __bid128_lgamma(v18, v24, v25);
    *(_QWORD *)(v9 + 56) = v26;
    v21 = *(_QWORD *)(a1 + 32);
  }
  v27 = *v5;
  v28 = v5[1];
  v29 = v5[2];
  *(_OWORD *)(v21 + 120) = v5[3];
  *(_OWORD *)(v21 + 104) = v29;
  *(_OWORD *)(v21 + 88) = v28;
  *(_OWORD *)(v21 + 72) = v27;
  result = (__n128)v5[4];
  v30 = v5[5];
  v31 = v5[6];
  *(_OWORD *)(v21 + 184) = v5[7];
  *(_OWORD *)(v21 + 168) = v31;
  *(_OWORD *)(v21 + 152) = v30;
  *(__n128 *)(v21 + 136) = result;
  return result;
}

void functionERF(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionERF_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionERF_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  double v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33[2];
  __n128 v34;
  uint64_t v35[3];
  _QWORD v36[3];
  _QWORD v37[4];

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_27:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_26:
    v4 = 9;
    goto LABEL_27;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_26;
  }
  g_isTrivial = 0;
  v9 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v9 == 4 || *(_DWORD *)v9 == 1)
  {
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v20 = 4;
      else
        v20 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v20, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v21 = erf(v12);
    *(double *)(v9 + 32) = v21;
    *(_QWORD *)(v9 + 64) = (uint64_t)rint(v21);
    goto LABEL_62;
  }
  v17 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    v18 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
    v19 = v23;
  }
  else if (v17 == 2)
  {
    v18 = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v17 != 4)
    {
      v18 = 0;
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      v19 = 0x3040000000000000;
      goto LABEL_57;
    }
    v18 = *((_QWORD *)a2 + 8);
    v19 = 0x3040000000000000;
  }
  if (my_rnd_mode)
    v24 = 4;
  else
    v24 = 0;
  if ((~v19 & 0x7C00000000000000) == 0)
  {
    if ((~v19 & 0x7E00000000000000) == 0)
      my_fpsf |= 1u;
    if ((v19 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
      || (v25 = v19 & 0xFC003FFFFFFFFFFFLL, v18 >= 0x38C15B0A00000000) && (v19 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
    {
      v18 = 0;
      v25 = v19 & 0xFC00000000000000;
    }
    goto LABEL_61;
  }
LABEL_57:
  v34 = 0uLL;
  v33[0] = 0;
  v33[1] = 0;
  v35[0] = __bid128_to_binary128(v18, v19, v24, &my_fpsf);
  v35[1] = v26;
  memset(v36, 0, sizeof(v36));
  __dpml_bid_unpack_x_or_y__(v35, 0, (uint64_t)v36, &qword_1B891D780, (uint64_t)v33, v37);
  if (bid_f128_cmp(v33, (uint64_t *)&c_1em2000, 1u))
  {
    v27 = __bid128_mul(0xF009A099F5C1B689, 0x2FFE37A225BAA150, v18, v19, v24, &my_fpsf);
  }
  else
  {
    __dpml_bid_C_ux_erf__(v35, 0x1A9uLL, &v34, v37);
    v27 = __binary128_to_bid128(v34.n128_u64[0], v34.n128_u64[1], v24, &my_fpsf);
  }
  v18 = v27;
LABEL_61:
  *(_QWORD *)(v9 + 48) = v18;
  *(_QWORD *)(v9 + 56) = v25;
  v9 = *(_QWORD *)(a1 + 32);
LABEL_62:
  v28 = *v5;
  v29 = v5[1];
  v30 = v5[2];
  *(_OWORD *)(v9 + 120) = v5[3];
  *(_OWORD *)(v9 + 104) = v30;
  *(_OWORD *)(v9 + 88) = v29;
  *(_OWORD *)(v9 + 72) = v28;
  result = (__n128)v5[4];
  v31 = v5[5];
  v32 = v5[6];
  *(_OWORD *)(v9 + 184) = v5[7];
  *(_OWORD *)(v9 + 168) = v32;
  *(_OWORD *)(v9 + 152) = v31;
  *(__n128 *)(v9 + 136) = result;
  return result;
}

void functionERFC(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionERFC_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionERFC_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  double v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __n128 v53;
  __n128 v54;
  uint64_t v55[2];
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  uint64_t v61[2];
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67[8];

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_27:
      v16 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(_QWORD *)(v16 + 48) = 0;
      *(_QWORD *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_26:
    v4 = 9;
    goto LABEL_27;
  }
  v5 = (__int128 *)(a2 + 18);
  v6 = -1;
  v7 = 21;
  while (v6 != 14)
  {
    v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8)
      goto LABEL_9;
  }
  v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_26;
  }
  g_isTrivial = 0;
  v9 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v9 == 4 || *(_DWORD *)v9 == 1)
  {
    v11 = *a2;
    if (*a2 == 1)
    {
      v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode)
        v20 = 4;
      else
        v20 = 0;
      v12 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v20, &my_fpsf);
    }
    else
    {
      v12 = 0.0;
      if (v11 == 4)
      {
        v13 = *((_QWORD *)a2 + 8);
        v14 = (uint64_t)rint(1.79769313e308);
        v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        v12 = (double)v13;
        if (!v15)
          v12 = NAN;
      }
    }
    v21 = erfc(v12);
    *(double *)(v9 + 32) = v21;
    *(_QWORD *)(v9 + 64) = (uint64_t)rint(v21);
    goto LABEL_72;
  }
  v17 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v22 = 4;
    else
      v22 = 0;
    v18 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
    v19 = v23;
  }
  else if (v17 == 2)
  {
    v18 = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v17 != 4)
    {
      v18 = 0;
      if (my_rnd_mode)
        v24 = 4;
      else
        v24 = 0;
      v19 = 0x3040000000000000;
      goto LABEL_57;
    }
    v18 = *((_QWORD *)a2 + 8);
    v19 = 0x3040000000000000;
  }
  if (my_rnd_mode)
    v24 = 4;
  else
    v24 = 0;
  if ((~v19 & 0x7C00000000000000) == 0)
  {
    if ((~v19 & 0x7E00000000000000) == 0)
      my_fpsf |= 1u;
    if ((v19 & 0x3FFFFFFFFFFFuLL) > 0x314DC6448D93
      || (v25 = v19 & 0xFC003FFFFFFFFFFFLL, (v19 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93) && v18 >= 0x38C15B0A00000000)
    {
      v18 = 0;
      v25 = v19 & 0xFC00000000000000;
    }
    goto LABEL_71;
  }
LABEL_57:
  if (!__bid128_isZero(v18, v19))
  {
    v61[0] = 0;
    v61[1] = 0;
    v60 = 0uLL;
    v59 = 0uLL;
    v58 = 0uLL;
    v57 = 0uLL;
    v56 = 0uLL;
    v55[0] = 0;
    v55[1] = 0;
    v62 = __bid128_to_binary128(v18, v19, v24, &my_fpsf);
    v63 = v26;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    __dpml_bid_unpack_x_or_y__((uint64_t *)&v62, 0, (uint64_t)&v64, &qword_1B891D780, (uint64_t)v55, v67);
    if (bid_f128_cmp(v55, (uint64_t *)&c_1em40_1067, 1u))
    {
      v27 = __bid128_sub(1uLL, 0x3040000000000000, v18, v19, v24, &my_fpsf);
    }
    else
    {
      if (v19 < 0)
      {
        v62 = __bid128_to_binary128(v18, v19, v24, &my_fpsf);
        v63 = v31;
        __dpml_bid_C_ux_erf__((uint64_t *)&v62, 0x8000FE56uLL, &v60, v67);
        v29 = v60.n128_u64[1];
        v28 = v60.n128_u64[0];
        v30 = v24;
      }
      else
      {
        if (!bid_f128_cmp((uint64_t *)&v62, (uint64_t *)&c_105, 1u))
        {
          if (bid_f128_cmp((uint64_t *)&v62, (uint64_t *)&c_120, 4u))
          {
            v32 = 1;
            v33 = 0x160000000000000;
            v34 = 1;
            v35 = 0x160000000000000;
          }
          else
          {
            v36 = __bid128_mul(v18, v19, v18, v19, v24, &my_fpsf);
            v38 = v37 ^ 0x8000000000000000;
            v39 = bid128_ext_fma(v67, (int *)&v64, (int *)&v54, (int *)&v53, v18, v19, v18, v19, v36, v37 ^ 0x8000000000000000, v24, &my_fpsf);
            v41 = v40 ^ 0x8000000000000000;
            v42 = __bid128_exp(v36, v38, v24, &my_fpsf);
            v44 = bid128_ext_fma(v67, (int *)&v64, (int *)&v54, (int *)&v53, v42, v43, v39, v41, v42, v43, v24, &my_fpsf);
            v46 = v45;
            bid_f128_div(&v59, (uint64_t *)&c_one_1068, (uint64_t *)&v62);
            bid_f128_mul(&v58, (uint64_t *)&v59, (uint64_t *)&v59);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&c12);
            bid_f128_add(&v57, (uint64_t *)&c11, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c10, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c9, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c8, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c7, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c6, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c5, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c4, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c3, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c2, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c1, (uint64_t *)&v57);
            bid_f128_mul(&v57, (uint64_t *)&v58, (uint64_t *)&v57);
            bid_f128_add(&v57, (uint64_t *)&c_one_1068, (uint64_t *)&v57);
            bid_f128_mul(&v56, (uint64_t *)&v59, (uint64_t *)&c_1_ov_sqrt_pi);
            bid_f128_mul(&v57, (uint64_t *)&v56, (uint64_t *)&v57);
            v34 = __binary128_to_bid128(v57.n128_u64[0], v57.n128_u64[1], v24, &my_fpsf);
            v35 = v47;
            v32 = v44;
            v33 = v46;
          }
          v27 = __bid128_mul(v32, v33, v34, v35, v24, &my_fpsf);
          goto LABEL_70;
        }
        v54 = 0uLL;
        v53 = 0uLL;
        bid128_to_binary128_2part(&v62, (unint64_t *)v61, v18, v19);
        bid_f128_mul(&v54, (uint64_t *)&v62, (uint64_t *)&v62);
        v64 = 0;
        v65 = 0;
        v66 = 0;
        __dpml_bid_unpack_x_or_y__((uint64_t *)&v54, 0, (uint64_t)&v64, &__dpml_bid_bid_x_table, (uint64_t)&v54, v67);
        bid_f128_exp(&v54, (uint64_t *)&v54);
        bid_f128_mul(&v54, (uint64_t *)&c_2_ov_sqrt_pi, (uint64_t *)&v54);
        bid_f128_mul(&v54, (uint64_t *)&v54, v61);
        __dpml_bid_C_ux_erf__((uint64_t *)&v62, 0x8000FE56uLL, &v53, v67);
        bid_f128_sub(&v60, (uint64_t *)&v53, (uint64_t *)&v54);
        v29 = v60.n128_u64[1];
        v28 = v60.n128_u64[0];
        v30 = v24;
      }
      v27 = __binary128_to_bid128(v28, v29, v30, &my_fpsf);
    }
LABEL_70:
    v18 = v27;
    goto LABEL_71;
  }
  v25 = 0x3040000000000000;
  v18 = 1;
LABEL_71:
  *(_QWORD *)(v9 + 48) = v18;
  *(_QWORD *)(v9 + 56) = v25;
  v9 = *(_QWORD *)(a1 + 32);
LABEL_72:
  v48 = *v5;
  v49 = v5[1];
  v50 = v5[2];
  *(_OWORD *)(v9 + 120) = v5[3];
  *(_OWORD *)(v9 + 104) = v50;
  *(_OWORD *)(v9 + 88) = v49;
  *(_OWORD *)(v9 + 72) = v48;
  result = (__n128)v5[4];
  v51 = v5[5];
  v52 = v5[6];
  *(_OWORD *)(v9 + 184) = v5[7];
  *(_OWORD *)(v9 + 168) = v52;
  *(_OWORD *)(v9 + 152) = v51;
  *(__n128 *)(v9 + 136) = result;
  return result;
}

void functionFactorial(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionFactorial_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionFactorial_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  int v4;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  int v27;
  unint64_t v28;
  int v29;
  double v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  int *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;

  if (a2[19])
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
    {
LABEL_3:
      v4 = 10;
LABEL_17:
      v12 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v12 + 204) = v4;
      *(_QWORD *)(v12 + 48) = 0;
      *(_QWORD *)(v12 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_16:
    v4 = 9;
    goto LABEL_17;
  }
  v6 = (__int128 *)(a2 + 18);
  v7 = -1;
  v8 = 21;
  while (v7 != 14)
  {
    v9 = a2[v8];
    ++v7;
    v8 += 2;
    if (v9)
      goto LABEL_9;
  }
  v7 = 15;
LABEL_9:
  if (v7 < 0xF || g_GeneratingConvertTerm)
  {
    if ((g_GeneratingConvertTerm & 1) != 0)
      goto LABEL_3;
    goto LABEL_16;
  }
  v10 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v13 = 4;
    else
      v13 = 0;
    v11 = __binary64_to_bid128(v13, &my_fpsf, *((double *)a2 + 4));
  }
  else if (v10 == 2)
  {
    v11 = *((_QWORD *)a2 + 6);
    v14 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v10 == 4)
      v11 = *((_QWORD *)a2 + 8);
    else
      v11 = 0;
    v14 = 0x3040000000000000;
  }
  if (__bid128_quiet_greater(v11, v14, 0x67uLL, 0x3040000000000000, &my_fpsf))
  {
    my_fpsf |= 8u;
    v15 = *(_QWORD *)(a1 + 32);
    v16 = 3;
LABEL_40:
    *(_DWORD *)(v15 + 204) = v16;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 56) = 0x7C00000000000000;
    return result;
  }
  v17 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode)
      v19 = 4;
    else
      v19 = 0;
    v18 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
  }
  else if (v17 == 2)
  {
    v18 = *((_QWORD *)a2 + 6);
    v20 = *((_QWORD *)a2 + 7);
  }
  else
  {
    if (v17 == 4)
      v18 = *((_QWORD *)a2 + 8);
    else
      v18 = 0;
    v20 = 0x3040000000000000;
  }
  if (__bid128_quiet_equal(v18, v20, 1uLL, 0xB040000000000000, &my_fpsf))
  {
    v15 = *(_QWORD *)(a1 + 32);
    v16 = 4;
    goto LABEL_40;
  }
  g_isTrivial = 0;
  v21 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v21 == 4 || *(_DWORD *)v21 == 1)
  {
    v22 = *a2;
    if (*a2 == 1)
    {
      v23 = *((double *)a2 + 4);
    }
    else if (v22 == 2)
    {
      if (my_rnd_mode)
        v29 = 4;
      else
        v29 = 0;
      v23 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v29, &my_fpsf);
    }
    else
    {
      v23 = 0.0;
      if (v22 == 4)
      {
        v24 = *((_QWORD *)a2 + 8);
        v25 = (uint64_t)rint(1.79769313e308);
        v26 = (uint64_t)rint(2.22507386e-308) < v24 && v25 > v24;
        v23 = (double)v24;
        if (!v26)
          v23 = NAN;
      }
    }
    v30 = tgamma(v23 + 1.0);
    *(double *)(v21 + 32) = v30;
    *(_QWORD *)(v21 + 64) = (uint64_t)rint(v30);
  }
  else
  {
    v27 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v31 = 4;
      else
        v31 = 0;
      v28 = __binary64_to_bid128(v31, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v27 == 2)
    {
      v28 = *((_QWORD *)a2 + 6);
      v32 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v27 == 4)
        v28 = *((_QWORD *)a2 + 8);
      else
        v28 = 0;
      v32 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v33 = 4;
    else
      v33 = 0;
    v34 = 0x3040000000000000;
    v35 = __bid128_add(v28, v32, 1uLL, 0x3040000000000000, v33, &my_fpsf);
    v37 = __bid128_tgamma(v35, v36, v33);
    v39 = v38;
    v40 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v42 = 4;
      else
        v42 = 0;
      v41 = __binary64_to_bid128(v42, &my_fpsf, *((double *)a2 + 4));
      v34 = v43;
    }
    else if (v40 == 2)
    {
      v44 = a2 + 12;
      v41 = *((_QWORD *)a2 + 6);
      v34 = *((_QWORD *)v44 + 1);
    }
    else if (v40 == 4)
    {
      v41 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v41 = 0;
    }
    v55 = 0;
    v45 = __bid128_round_integral_exact(v41, v34, 4, &v55);
    if (__bid128_quiet_equal(v41, v34, v45, v46, &v55))
    {
      if (my_rnd_mode)
        v47 = 4;
      else
        v47 = 0;
      v37 = __bid128_round_integral_exact(v37, v39, v47, &my_fpsf);
      v39 = v48;
    }
    v49 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v49 + 48) = v37;
    *(_QWORD *)(v49 + 56) = v39;
    v21 = *(_QWORD *)(a1 + 32);
  }
  v50 = *v6;
  v51 = v6[1];
  v52 = v6[2];
  *(_OWORD *)(v21 + 120) = v6[3];
  *(_OWORD *)(v21 + 104) = v52;
  *(_OWORD *)(v21 + 88) = v51;
  *(_OWORD *)(v21 + 72) = v50;
  result = (__n128)v6[4];
  v53 = v6[5];
  v54 = v6[6];
  *(_OWORD *)(v21 + 184) = v6[7];
  *(_OWORD *)(v21 + 168) = v54;
  *(_OWORD *)(v21 + 152) = v53;
  *(__n128 *)(v21 + 136) = result;
  return result;
}

void functionRoot(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionRoot_block_invoke(uint64_t a1, int *a2, int *a3)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  int v28;
  double v29;
  double v30;
  double v31;
  double v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  int *v41;
  unint64_t v42;
  unint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  unint64_t v46;
  _BOOL4 v47;
  unint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  long double v57;
  int v58;

  if (a2[19])
    goto LABEL_7;
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
    {
      if (v4 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v7 = g_GeneratingConvertTerm;
LABEL_8:
    v8 = *(_QWORD *)(a1 + 32);
    if (v7)
      v9 = 10;
    else
      v9 = 9;
    *(_DWORD *)(v8 + 204) = v9;
    *(_QWORD *)(v8 + 48) = 0;
    *(_QWORD *)(v8 + 56) = 0x7C00000000000000;
    return;
  }
  v10 = -1;
  v11 = 21;
  while (v10 != 14)
  {
    v12 = a3[v11];
    ++v10;
    v11 += 2;
    if (v12)
      goto LABEL_17;
  }
  v10 = 15;
LABEL_17:
  v7 = g_GeneratingConvertTerm;
  if (v10 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v13 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v13 == 4 || *(_DWORD *)v13 == 1)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v16 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v22, &my_fpsf);
    }
    else
    {
      v16 = 0.0;
      if (v15 == 4)
      {
        v17 = *((_QWORD *)a2 + 8);
        v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17)
          v16 = (double)v17;
        else
          v16 = NAN;
      }
    }
    v23 = *a3;
    if (*a3 == 1)
    {
      v24 = *((double *)a3 + 4);
    }
    else if (v23 == 2)
    {
      if (my_rnd_mode)
        v28 = 4;
      else
        v28 = 0;
      v24 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v28, &my_fpsf);
    }
    else
    {
      v24 = 0.0;
      if (v23 == 4)
      {
        v25 = *((_QWORD *)a3 + 8);
        v26 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v25 && v26 > v25)
          v24 = (double)v25;
        else
          v24 = NAN;
      }
    }
    v29 = modf(v24, &v57);
    if (v16 >= 0.0)
    {
      v32 = pow(v16, 1.0 / v24);
    }
    else
    {
      v30 = v29;
      v31 = fmod(v24, 2.0);
      v32 = NAN;
      if (v31 != 0.0 && v30 == 0.0)
        v32 = -pow(-v16, 1.0 / v24);
    }
    *(double *)(v13 + 32) = v32;
    *(_QWORD *)(v13 + 64) = (uint64_t)rint(v32);
  }
  else
  {
    v20 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v33 = 4;
      else
        v33 = 0;
      v21 = __binary64_to_bid128(v33, &my_fpsf, *((double *)a2 + 4));
      v35 = v34;
    }
    else if (v20 == 2)
    {
      v21 = *((_QWORD *)a2 + 6);
      v35 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v20 == 4)
        v21 = *((_QWORD *)a2 + 8);
      else
        v21 = 0;
      v35 = 0x3040000000000000;
    }
    v36 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v38 = 4;
      else
        v38 = 0;
      v37 = __binary64_to_bid128(v38, &my_fpsf, *((double *)a3 + 4));
      v40 = v39;
    }
    else if (v36 == 2)
    {
      v41 = a3 + 12;
      v37 = *((_QWORD *)a3 + 6);
      v40 = *((_QWORD *)v41 + 1);
    }
    else
    {
      if (v36 == 4)
        v37 = *((_QWORD *)a3 + 8);
      else
        v37 = 0;
      v40 = 0x3040000000000000;
    }
    if (__bid128_quiet_less(v21, v35, 0, 0x3040000000000000, &my_fpsf))
    {
      v58 = 0;
      v42 = __bid128_round_integral_exact(v37, v40, 4, &v58);
      v44 = __bid128_quiet_equal(v37, v40, v42, v43, &v58);
      v45 = __bid128_fmod(v37, v40, 2uLL, 0x3040000000000000uLL, &my_fpsf);
      v47 = __bid128_quiet_equal(v45, v46, 0, 0x3040000000000000uLL, &my_fpsf);
      if (!v44 || v47)
      {
        *(_DWORD *)(v13 + 204) = 4;
        *(_QWORD *)(v13 + 48) = 0;
        *(_QWORD *)(v13 + 56) = 0x7C00000000000000;
      }
      else
      {
        v48 = v35 ^ 0x8000000000000000;
        if (my_rnd_mode)
          v49 = 4;
        else
          v49 = 0;
        v50 = __bid128_div(1uLL, 0x3040000000000000uLL, v37, v40, v49, &my_fpsf);
        *(_QWORD *)(v13 + 48) = __bid128_pow(v21, v48, v50, v51, v49, &my_fpsf);
        *(_QWORD *)(v13 + 56) = v52 ^ 0x8000000000000000;
      }
    }
    else
    {
      if (my_rnd_mode)
        v53 = 4;
      else
        v53 = 0;
      v54 = __bid128_div(1uLL, 0x3040000000000000uLL, v37, v40, v53, &my_fpsf);
      *(_QWORD *)(v13 + 48) = __bid128_pow(v21, v35, v54, v55, v53, &my_fpsf);
      *(_QWORD *)(v13 + 56) = v56;
    }
  }
}

void functionFMod(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionFMod_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionFMod_block_invoke(uint64_t a1, int *a2, int *a3)
{
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  double v18;
  unint64_t v19;
  unint64_t v20;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v35;
  int v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  int *v59;
  int v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  int v82;

  if (a2[19])
    goto LABEL_7;
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
    {
      if (v5 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v8 = g_GeneratingConvertTerm;
LABEL_8:
    v9 = *(_QWORD *)(a1 + 32);
    if (v8)
      v10 = 10;
    else
      v10 = 9;
    *(_DWORD *)(v9 + 204) = v10;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0x7C00000000000000;
    return;
  }
  v11 = -1;
  v12 = 21;
  while (v11 != 14)
  {
    v13 = a3[v12];
    ++v11;
    v12 += 2;
    if (v13)
      goto LABEL_17;
  }
  v11 = 15;
LABEL_17:
  v8 = g_GeneratingConvertTerm;
  if (v11 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v14 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v14 == 1)
  {
    v17 = *a2;
    if (*a2 == 1)
    {
      v18 = *((double *)a2 + 4);
    }
    else if (v17 == 2)
    {
      v28 = *((_QWORD *)a2 + 6);
      v29 = *((_QWORD *)a2 + 7);
      if (my_rnd_mode)
        v30 = 4;
      else
        v30 = 0;
      v18 = __bid128_to_binary64(v28, v29, v30, &my_fpsf);
    }
    else
    {
      v18 = 0.0;
      if (v17 == 4)
      {
        v19 = *((_QWORD *)a2 + 8);
        v20 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v19 && v20 > v19)
          v18 = (double)v19;
        else
          v18 = NAN;
      }
    }
    v31 = *a3;
    if (*a3 == 1)
    {
      v32 = *((double *)a3 + 4);
    }
    else if (v31 == 2)
    {
      if (my_rnd_mode)
        v42 = 4;
      else
        v42 = 0;
      v32 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v42, &my_fpsf);
    }
    else
    {
      v32 = 0.0;
      if (v31 == 4)
      {
        v33 = *((_QWORD *)a3 + 8);
        v34 = (uint64_t)rint(1.79769313e308);
        v35 = (uint64_t)rint(2.22507386e-308) < v33 && v34 > v33;
        v32 = NAN;
        if (v35)
          v32 = (double)v33;
      }
    }
    *(long double *)(v14 + 32) = fmod(v18, v32);
  }
  else if (*(_DWORD *)v14 == 4)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v15 == 2)
    {
      v24 = *((_QWORD *)a2 + 6);
      v25 = *((_QWORD *)a2 + 7);
      v81 = 0;
      v16 = __bid128_to_uint64_int(v24, v25, &v81);
    }
    else if (v15 == 4)
    {
      v16 = *((_QWORD *)a2 + 8);
    }
    else
    {
      v16 = 0;
    }
    v26 = *a3;
    if (*a3 == 1)
    {
      v27 = (uint64_t)rint(*((double *)a3 + 4));
    }
    else if (v26 == 2)
    {
      v40 = *((_QWORD *)a3 + 6);
      v41 = *((_QWORD *)a3 + 7);
      v82 = 0;
      v27 = __bid128_to_uint64_int(v40, v41, &v82);
    }
    else if (v26 == 4)
    {
      v27 = *((_QWORD *)a3 + 8);
    }
    else
    {
      v27 = 0;
    }
    *(_QWORD *)(v14 + 64) = v16 % v27;
  }
  else
  {
    v22 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v36 = 4;
      else
        v36 = 0;
      v23 = __binary64_to_bid128(v36, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v22 == 2)
    {
      v23 = *((_QWORD *)a2 + 6);
      v37 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v22 == 4)
        v23 = *((_QWORD *)a2 + 8);
      else
        v23 = 0;
      v37 = 0x3040000000000000;
    }
    if (__bid128_quiet_less(v23, v37, 0, 0x3040000000000000, &my_fpsf)
      || ((v38 = *a3, *a3 == 1)
        ? (!my_rnd_mode ? (v43 = 0) : (v43 = 4), v39 = __binary64_to_bid128(v43, &my_fpsf, *((double *)a3 + 4)))
        : v38 == 2
        ? (v39 = *((_QWORD *)a3 + 6), v44 = *((_QWORD *)a3 + 7))
        : (v38 != 4 ? (v39 = 0) : (v39 = *((_QWORD *)a3 + 8)), v44 = 0x3040000000000000),
          __bid128_quiet_less(v39, v44, 0, 0x3040000000000000, &my_fpsf)))
    {
      v45 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v46 = 4;
        else
          v46 = 0;
        v80 = __binary64_to_bid128(v46, &my_fpsf, *((double *)a2 + 4));
        v48 = v47;
      }
      else if (v45 == 2)
      {
        v48 = *((_QWORD *)a2 + 7);
        v80 = *((_QWORD *)a2 + 6);
      }
      else
      {
        if (v45 == 4)
          v80 = *((_QWORD *)a2 + 8);
        else
          v80 = 0;
        v48 = 0x3040000000000000;
      }
      v49 = *a3;
      if (*a3 == 1)
      {
        if (my_rnd_mode)
          v51 = 4;
        else
          v51 = 0;
        v50 = __binary64_to_bid128(v51, &my_fpsf, *((double *)a3 + 4));
        v53 = v52;
      }
      else if (v49 == 2)
      {
        v50 = *((_QWORD *)a3 + 6);
        v53 = *((_QWORD *)a3 + 7);
      }
      else
      {
        if (v49 == 4)
          v50 = *((_QWORD *)a3 + 8);
        else
          v50 = 0;
        v53 = 0x3040000000000000;
      }
      v54 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v56 = 4;
        else
          v56 = 0;
        v55 = __binary64_to_bid128(v56, &my_fpsf, *((double *)a2 + 4));
        v58 = v57;
      }
      else if (v54 == 2)
      {
        v59 = a2 + 12;
        v55 = *((_QWORD *)a2 + 6);
        v58 = *((_QWORD *)v59 + 1);
      }
      else
      {
        if (v54 == 4)
          v55 = *((_QWORD *)a2 + 8);
        else
          v55 = 0;
        v58 = 0x3040000000000000;
      }
      v60 = *a3;
      if (*a3 == 1)
      {
        if (my_rnd_mode)
          v62 = 4;
        else
          v62 = 0;
        v61 = __binary64_to_bid128(v62, &my_fpsf, *((double *)a3 + 4));
        v64 = v63;
      }
      else if (v60 == 2)
      {
        v61 = *((_QWORD *)a3 + 6);
        v64 = *((_QWORD *)a3 + 7);
      }
      else
      {
        if (v60 == 4)
          v61 = *((_QWORD *)a3 + 8);
        else
          v61 = 0;
        v64 = 0x3040000000000000;
      }
      if (my_rnd_mode)
        v65 = 4;
      else
        v65 = 0;
      v66 = __bid128_div(v55, v58, v61, v64, v65, &my_fpsf);
      v68 = __bid128_round_integral_negative(v66, v67, &my_fpsf);
      v71 = __bid128_mul(v50, v53, v68, v69, v65, &my_fpsf);
      if (my_rnd_mode)
        v72 = 4;
      else
        v72 = 0;
      v73 = __bid128_sub(v80, v48, v71, v70, v72, &my_fpsf);
    }
    else
    {
      v75 = treeDecimalValue((double *)a2);
      v77 = v76;
      v78 = treeDecimalValue((double *)a3);
      v73 = __bid128_fmod(v75, v77, v78, v79, &my_fpsf);
    }
    *(_QWORD *)(v14 + 48) = v73;
    *(_QWORD *)(v14 + 56) = v74;
  }
}

void functionHypot(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionHypot_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionHypot_block_invoke(uint64_t a1, int *a2, int *a3)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  int v28;
  double v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;

  if (a2[19])
    goto LABEL_7;
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
    {
      if (v4 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v7 = g_GeneratingConvertTerm;
LABEL_8:
    v8 = *(_QWORD *)(a1 + 32);
    if (v7)
      v9 = 10;
    else
      v9 = 9;
    *(_DWORD *)(v8 + 204) = v9;
    *(_QWORD *)(v8 + 48) = 0;
    *(_QWORD *)(v8 + 56) = 0x7C00000000000000;
    return;
  }
  v10 = -1;
  v11 = 21;
  while (v10 != 14)
  {
    v12 = a3[v11];
    ++v10;
    v11 += 2;
    if (v12)
      goto LABEL_17;
  }
  v10 = 15;
LABEL_17:
  v7 = g_GeneratingConvertTerm;
  if (v10 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v13 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v13 == 4 || *(_DWORD *)v13 == 1)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v16 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v22, &my_fpsf);
    }
    else
    {
      v16 = 0.0;
      if (v15 == 4)
      {
        v17 = *((_QWORD *)a2 + 8);
        v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17)
          v16 = (double)v17;
        else
          v16 = NAN;
      }
    }
    v23 = *a3;
    if (*a3 == 1)
    {
      v24 = *((double *)a3 + 4);
    }
    else if (v23 == 2)
    {
      if (my_rnd_mode)
        v28 = 4;
      else
        v28 = 0;
      v24 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v28, &my_fpsf);
    }
    else
    {
      v24 = 0.0;
      if (v23 == 4)
      {
        v25 = *((_QWORD *)a3 + 8);
        v26 = (uint64_t)rint(1.79769313e308);
        v27 = (uint64_t)rint(2.22507386e-308) < v25 && v26 > v25;
        v24 = NAN;
        if (v27)
          v24 = (double)v25;
      }
    }
    v29 = hypot(v16, v24);
    *(double *)(v13 + 32) = v29;
    *(_QWORD *)(v13 + 64) = (uint64_t)rint(v29);
  }
  else
  {
    v20 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v30 = 4;
      else
        v30 = 0;
      v21 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
      v32 = v31;
    }
    else if (v20 == 2)
    {
      v21 = *((_QWORD *)a2 + 6);
      v32 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v20 == 4)
        v21 = *((_QWORD *)a2 + 8);
      else
        v21 = 0;
      v32 = 0x3040000000000000;
    }
    v33 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v35 = 4;
      else
        v35 = 0;
      v34 = __binary64_to_bid128(v35, &my_fpsf, *((double *)a3 + 4));
      v37 = v36;
    }
    else if (v33 == 2)
    {
      v34 = *((_QWORD *)a3 + 6);
      v37 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v33 == 4)
        v34 = *((_QWORD *)a3 + 8);
      else
        v34 = 0;
      v37 = 0x3040000000000000;
    }
    if (my_rnd_mode)
      v38 = 4;
    else
      v38 = 0;
    *(_QWORD *)(v13 + 48) = __bid128_hypot(v21, v32, v34, v37, v38);
    *(_QWORD *)(v13 + 56) = v39;
  }
}

void functionRem(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRem_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionRem_block_invoke(uint64_t a1, int *a2, int *a3)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  int v28;
  double v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;

  if (a2[19])
    goto LABEL_7;
  v4 = -1;
  v5 = 21;
  while (v4 != 14)
  {
    v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6)
    {
      if (v4 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v7 = g_GeneratingConvertTerm;
LABEL_8:
    v8 = *(_QWORD *)(a1 + 32);
    if (v7)
      v9 = 10;
    else
      v9 = 9;
    *(_DWORD *)(v8 + 204) = v9;
    *(_QWORD *)(v8 + 48) = 0;
    *(_QWORD *)(v8 + 56) = 0x7C00000000000000;
    return;
  }
  v10 = -1;
  v11 = 21;
  while (v10 != 14)
  {
    v12 = a3[v11];
    ++v10;
    v11 += 2;
    if (v12)
      goto LABEL_17;
  }
  v10 = 15;
LABEL_17:
  v7 = g_GeneratingConvertTerm;
  if (v10 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v13 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)v13 == 4 || *(_DWORD *)v13 == 1)
  {
    v15 = *a2;
    if (*a2 == 1)
    {
      v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      if (my_rnd_mode)
        v22 = 4;
      else
        v22 = 0;
      v16 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v22, &my_fpsf);
    }
    else
    {
      v16 = 0.0;
      if (v15 == 4)
      {
        v17 = *((_QWORD *)a2 + 8);
        v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17)
          v16 = (double)v17;
        else
          v16 = NAN;
      }
    }
    v23 = *a3;
    if (*a3 == 1)
    {
      v24 = *((double *)a3 + 4);
    }
    else if (v23 == 2)
    {
      if (my_rnd_mode)
        v28 = 4;
      else
        v28 = 0;
      v24 = __bid128_to_binary64(*((_QWORD *)a3 + 6), *((_QWORD *)a3 + 7), v28, &my_fpsf);
    }
    else
    {
      v24 = 0.0;
      if (v23 == 4)
      {
        v25 = *((_QWORD *)a3 + 8);
        v26 = (uint64_t)rint(1.79769313e308);
        v27 = (uint64_t)rint(2.22507386e-308) < v25 && v26 > v25;
        v24 = NAN;
        if (v27)
          v24 = (double)v25;
      }
    }
    v29 = remainder(v16, v24);
    *(double *)(v13 + 32) = v29;
    *(_QWORD *)(v13 + 64) = (uint64_t)rint(v29);
  }
  else
  {
    v20 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode)
        v30 = 4;
      else
        v30 = 0;
      v21 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
      v32 = v31;
    }
    else if (v20 == 2)
    {
      v21 = *((_QWORD *)a2 + 6);
      v32 = *((_QWORD *)a2 + 7);
    }
    else
    {
      if (v20 == 4)
        v21 = *((_QWORD *)a2 + 8);
      else
        v21 = 0;
      v32 = 0x3040000000000000;
    }
    v33 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v35 = 4;
      else
        v35 = 0;
      v34 = __binary64_to_bid128(v35, &my_fpsf, *((double *)a3 + 4));
      v37 = v36;
    }
    else if (v33 == 2)
    {
      v34 = *((_QWORD *)a3 + 6);
      v37 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v33 == 4)
        v34 = *((_QWORD *)a3 + 8);
      else
        v34 = 0;
      v37 = 0x3040000000000000;
    }
    *(_QWORD *)(v13 + 48) = __bid128_rem(v21, v32, v34, v37);
    *(_QWORD *)(v13 + 56) = v38;
  }
}

void functionMin(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionMin_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionMin_block_invoke(uint64_t a1, int *a2, int *a3)
{
  uint64_t v4;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  __int128 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  int *v22;
  unint64_t v23;
  int v24;
  __int128 *v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double *v36;
  int v37;
  int v38;
  unint64_t v39;
  int v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  BOOL v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  double *v54;
  int v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  _OWORD v64[8];
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    memset(v64, 0, sizeof(v64));
    v62 = 0;
    v7 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v8 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a3 + 4));
    }
    else if (v7 == 2)
    {
      v8 = *((_QWORD *)a3 + 6);
      v10 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v7 == 4)
        v8 = *((_QWORD *)a3 + 8);
      else
        v8 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = (uint64_t)(a3 + 18);
    v12 = (__int128 *)(a2 + 18);
    v13 = UnitCountConvert(v8, v10, v11, (uint64_t)(a2 + 18), v64, &v62);
    v15 = v13;
    v16 = v14;
    if ((~v14 & 0x7C00000000000000) != 0)
    {
      v18 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v20 = 4;
        else
          v20 = 0;
        v19 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v18 == 2)
      {
        v19 = *((_QWORD *)a2 + 6);
        v21 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v18 == 4)
          v19 = *((_QWORD *)a2 + 8);
        else
          v19 = 0;
        v21 = 0x3040000000000000;
      }
      if (__bid128_quiet_less(v19, v21, v15, v16, &my_fpsf))
      {
        if (!a2[19])
        {
          v22 = a2 + 21;
          v23 = -1;
          do
          {
            if (v23 == 14)
            {
              v12 = v64;
              goto LABEL_43;
            }
            v24 = *v22;
            v22 += 2;
            ++v23;
          }
          while (!v24);
          if (v23 >= 0xF)
            v12 = v64;
        }
LABEL_43:
        v29 = *(_QWORD *)(a1 + 32);
        v30 = *v12;
        v31 = v12[1];
        v32 = v12[2];
        *(_OWORD *)(v29 + 120) = v12[3];
        *(_OWORD *)(v29 + 104) = v32;
        *(_OWORD *)(v29 + 88) = v31;
        *(_OWORD *)(v29 + 72) = v30;
        v33 = v12[4];
        v34 = v12[5];
        v35 = v12[6];
        *(_OWORD *)(v29 + 184) = v12[7];
        *(_OWORD *)(v29 + 168) = v35;
        *(_OWORD *)(v29 + 152) = v34;
        *(_OWORD *)(v29 + 136) = v33;
        v36 = *(double **)(a1 + 32);
        v37 = *(_DWORD *)v36;
        if (*(_DWORD *)v36 == 1)
        {
          v40 = *a2;
          if (*a2 == 1)
          {
            v41 = *((double *)a2 + 4);
          }
          else if (v40 == 2)
          {
            if (my_rnd_mode)
              v59 = 4;
            else
              v59 = 0;
            v41 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v59, &my_fpsf);
          }
          else
          {
            v41 = 0.0;
            if (v40 == 4)
            {
              v42 = *((_QWORD *)a2 + 8);
              v43 = (uint64_t)rint(1.79769313e308);
              v44 = (uint64_t)rint(2.22507386e-308) < v42 && v43 > v42;
              v41 = (double)v42;
              if (!v44)
                v41 = NAN;
            }
          }
          v36[4] = v41;
        }
        else if (v37 == 2)
        {
          v45 = *a2;
          if (*a2 == 1)
          {
            if (my_rnd_mode)
              v60 = 4;
            else
              v60 = 0;
            v46 = __binary64_to_bid128(v60, &my_fpsf, *((double *)a2 + 4));
          }
          else if (v45 == 2)
          {
            v46 = *((_QWORD *)a2 + 6);
            v61 = *((_QWORD *)a2 + 7);
          }
          else
          {
            if (v45 == 4)
              v46 = *((_QWORD *)a2 + 8);
            else
              v46 = 0;
            v61 = 0x3040000000000000;
          }
          *((_QWORD *)v36 + 6) = v46;
          *((_QWORD *)v36 + 7) = v61;
        }
        else if (v37 == 4)
        {
          v38 = *a2;
          if (*a2 == 1)
          {
            v39 = (uint64_t)rint(*((double *)a2 + 4));
          }
          else if (v38 == 2)
          {
            v57 = *((_QWORD *)a2 + 6);
            v58 = *((_QWORD *)a2 + 7);
            v63 = 0;
            v39 = __bid128_to_uint64_int(v57, v58, &v63);
          }
          else if (v38 == 4)
          {
            v39 = *((_QWORD *)a2 + 8);
          }
          else
          {
            v39 = 0;
          }
          *((_QWORD *)v36 + 8) = v39;
        }
      }
      else
      {
        v25 = v64;
        if (!DWORD1(v64[0]))
        {
          v26 = -1;
          v27 = 12;
          do
          {
            if (v26 == 14)
            {
              v25 = (__int128 *)(a2 + 18);
              goto LABEL_64;
            }
            v28 = *(_DWORD *)((char *)v64 + v27);
            ++v26;
            v27 += 8;
          }
          while (!v28);
          v25 = v64;
          if (v26 >= 0xF)
            v25 = (__int128 *)(a2 + 18);
        }
LABEL_64:
        v47 = *(_QWORD *)(a1 + 32);
        v48 = *v25;
        v49 = v25[1];
        v50 = v25[2];
        *(_OWORD *)(v47 + 120) = v25[3];
        *(_OWORD *)(v47 + 104) = v50;
        *(_OWORD *)(v47 + 88) = v49;
        *(_OWORD *)(v47 + 72) = v48;
        v51 = v25[4];
        v52 = v25[5];
        v53 = v25[6];
        *(_OWORD *)(v47 + 184) = v25[7];
        *(_OWORD *)(v47 + 168) = v53;
        *(_OWORD *)(v47 + 152) = v52;
        *(_OWORD *)(v47 + 136) = v51;
        v54 = *(double **)(a1 + 32);
        v55 = *(_DWORD *)v54;
        if (*(_DWORD *)v54 == 1)
        {
          if (my_rnd_mode)
            v56 = 4;
          else
            v56 = 0;
          v54[4] = __bid128_to_binary64(v15, v16, v56, &my_fpsf);
        }
        else if (v55 == 2)
        {
          *((_QWORD *)v54 + 6) = v15;
          *((_QWORD *)v54 + 7) = v16;
        }
        else if (v55 == 4)
        {
          v63 = 0;
          *((_QWORD *)v54 + 8) = __bid128_to_uint64_int(v15, v16, &v63);
        }
      }
    }
    else
    {
      v17 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v17 + 204) = v62;
      *(_QWORD *)(v17 + 48) = v13;
      *(_QWORD *)(v17 + 56) = v14;
    }
  }
}

void functionMax(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionMax_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionMax_block_invoke(uint64_t a1, int *a2, int *a3)
{
  uint64_t v4;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  __int128 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  int *v22;
  unint64_t v23;
  int v24;
  __int128 *v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  double *v36;
  int v37;
  int v38;
  unint64_t v39;
  int v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  BOOL v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  double *v54;
  int v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  _OWORD v64[8];
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  if (g_GeneratingConvertTerm == 1)
  {
    v4 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 10;
    *(_QWORD *)(v4 + 48) = 0;
    *(_QWORD *)(v4 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    memset(v64, 0, sizeof(v64));
    v62 = 0;
    v7 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode)
        v9 = 4;
      else
        v9 = 0;
      v8 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a3 + 4));
    }
    else if (v7 == 2)
    {
      v8 = *((_QWORD *)a3 + 6);
      v10 = *((_QWORD *)a3 + 7);
    }
    else
    {
      if (v7 == 4)
        v8 = *((_QWORD *)a3 + 8);
      else
        v8 = 0;
      v10 = 0x3040000000000000;
    }
    v11 = (uint64_t)(a3 + 18);
    v12 = (__int128 *)(a2 + 18);
    v13 = UnitCountConvert(v8, v10, v11, (uint64_t)(a2 + 18), v64, &v62);
    v15 = v13;
    v16 = v14;
    if ((~v14 & 0x7C00000000000000) != 0)
    {
      v18 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode)
          v20 = 4;
        else
          v20 = 0;
        v19 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v18 == 2)
      {
        v19 = *((_QWORD *)a2 + 6);
        v21 = *((_QWORD *)a2 + 7);
      }
      else
      {
        if (v18 == 4)
          v19 = *((_QWORD *)a2 + 8);
        else
          v19 = 0;
        v21 = 0x3040000000000000;
      }
      if (__bid128_quiet_greater(v19, v21, v15, v16, &my_fpsf))
      {
        if (!a2[19])
        {
          v22 = a2 + 21;
          v23 = -1;
          do
          {
            if (v23 == 14)
            {
              v12 = v64;
              goto LABEL_43;
            }
            v24 = *v22;
            v22 += 2;
            ++v23;
          }
          while (!v24);
          if (v23 >= 0xF)
            v12 = v64;
        }
LABEL_43:
        v29 = *(_QWORD *)(a1 + 32);
        v30 = *v12;
        v31 = v12[1];
        v32 = v12[2];
        *(_OWORD *)(v29 + 120) = v12[3];
        *(_OWORD *)(v29 + 104) = v32;
        *(_OWORD *)(v29 + 88) = v31;
        *(_OWORD *)(v29 + 72) = v30;
        v33 = v12[4];
        v34 = v12[5];
        v35 = v12[6];
        *(_OWORD *)(v29 + 184) = v12[7];
        *(_OWORD *)(v29 + 168) = v35;
        *(_OWORD *)(v29 + 152) = v34;
        *(_OWORD *)(v29 + 136) = v33;
        v36 = *(double **)(a1 + 32);
        v37 = *(_DWORD *)v36;
        if (*(_DWORD *)v36 == 1)
        {
          v40 = *a2;
          if (*a2 == 1)
          {
            v41 = *((double *)a2 + 4);
          }
          else if (v40 == 2)
          {
            if (my_rnd_mode)
              v59 = 4;
            else
              v59 = 0;
            v41 = __bid128_to_binary64(*((_QWORD *)a2 + 6), *((_QWORD *)a2 + 7), v59, &my_fpsf);
          }
          else
          {
            v41 = 0.0;
            if (v40 == 4)
            {
              v42 = *((_QWORD *)a2 + 8);
              v43 = (uint64_t)rint(1.79769313e308);
              v44 = (uint64_t)rint(2.22507386e-308) < v42 && v43 > v42;
              v41 = (double)v42;
              if (!v44)
                v41 = NAN;
            }
          }
          v36[4] = v41;
        }
        else if (v37 == 2)
        {
          v45 = *a2;
          if (*a2 == 1)
          {
            if (my_rnd_mode)
              v60 = 4;
            else
              v60 = 0;
            v46 = __binary64_to_bid128(v60, &my_fpsf, *((double *)a2 + 4));
          }
          else if (v45 == 2)
          {
            v46 = *((_QWORD *)a2 + 6);
            v61 = *((_QWORD *)a2 + 7);
          }
          else
          {
            if (v45 == 4)
              v46 = *((_QWORD *)a2 + 8);
            else
              v46 = 0;
            v61 = 0x3040000000000000;
          }
          *((_QWORD *)v36 + 6) = v46;
          *((_QWORD *)v36 + 7) = v61;
        }
        else if (v37 == 4)
        {
          v38 = *a2;
          if (*a2 == 1)
          {
            v39 = (uint64_t)rint(*((double *)a2 + 4));
          }
          else if (v38 == 2)
          {
            v57 = *((_QWORD *)a2 + 6);
            v58 = *((_QWORD *)a2 + 7);
            v63 = 0;
            v39 = __bid128_to_uint64_int(v57, v58, &v63);
          }
          else if (v38 == 4)
          {
            v39 = *((_QWORD *)a2 + 8);
          }
          else
          {
            v39 = 0;
          }
          *((_QWORD *)v36 + 8) = v39;
        }
      }
      else
      {
        v25 = v64;
        if (!DWORD1(v64[0]))
        {
          v26 = -1;
          v27 = 12;
          do
          {
            if (v26 == 14)
            {
              v25 = (__int128 *)(a2 + 18);
              goto LABEL_64;
            }
            v28 = *(_DWORD *)((char *)v64 + v27);
            ++v26;
            v27 += 8;
          }
          while (!v28);
          v25 = v64;
          if (v26 >= 0xF)
            v25 = (__int128 *)(a2 + 18);
        }
LABEL_64:
        v47 = *(_QWORD *)(a1 + 32);
        v48 = *v25;
        v49 = v25[1];
        v50 = v25[2];
        *(_OWORD *)(v47 + 120) = v25[3];
        *(_OWORD *)(v47 + 104) = v50;
        *(_OWORD *)(v47 + 88) = v49;
        *(_OWORD *)(v47 + 72) = v48;
        v51 = v25[4];
        v52 = v25[5];
        v53 = v25[6];
        *(_OWORD *)(v47 + 184) = v25[7];
        *(_OWORD *)(v47 + 168) = v53;
        *(_OWORD *)(v47 + 152) = v52;
        *(_OWORD *)(v47 + 136) = v51;
        v54 = *(double **)(a1 + 32);
        v55 = *(_DWORD *)v54;
        if (*(_DWORD *)v54 == 1)
        {
          if (my_rnd_mode)
            v56 = 4;
          else
            v56 = 0;
          v54[4] = __bid128_to_binary64(v15, v16, v56, &my_fpsf);
        }
        else if (v55 == 2)
        {
          *((_QWORD *)v54 + 6) = v15;
          *((_QWORD *)v54 + 7) = v16;
        }
        else if (v55 == 4)
        {
          v63 = 0;
          *((_QWORD *)v54 + 8) = __bid128_to_uint64_int(v15, v16, &v63);
        }
      }
    }
    else
    {
      v17 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)(v17 + 204) = v62;
      *(_QWORD *)(v17 + 48) = v13;
      *(_QWORD *)(v17 + 56) = v14;
    }
  }
}

void functionAND(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionAND_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionAND_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;

  v3 = result;
  if (a2[19])
    goto LABEL_7;
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
    {
      if (v5 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v8 = g_GeneratingConvertTerm;
LABEL_8:
    v9 = *(_QWORD *)(result + 32);
    if (v8)
      v10 = 10;
    else
      v10 = 9;
    *(_DWORD *)(v9 + 204) = v10;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0x7C00000000000000;
    return result;
  }
  v11 = -1;
  v12 = 21;
  while (v11 != 14)
  {
    v13 = a3[v12];
    ++v11;
    v12 += 2;
    if (v13)
      goto LABEL_18;
  }
  v11 = 15;
LABEL_18:
  v8 = g_GeneratingConvertTerm;
  if (v11 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v14 = *a2;
  if (*a2 == 1)
  {
    v15 = (uint64_t)rint(*((double *)a2 + 4));
  }
  else if (v14 == 2)
  {
    v16 = *((_QWORD *)a2 + 6);
    v17 = *((_QWORD *)a2 + 7);
    v22 = 0;
    v15 = __bid128_to_uint64_int(v16, v17, &v22);
  }
  else if (v14 == 4)
  {
    v15 = *((_QWORD *)a2 + 8);
  }
  else
  {
    v15 = 0;
  }
  v18 = *a3;
  if (*a3 == 1)
  {
    result = (uint64_t)rint(*((double *)a3 + 4));
  }
  else if (v18 == 2)
  {
    v19 = *((_QWORD *)a3 + 6);
    v20 = *((_QWORD *)a3 + 7);
    v23 = 0;
    result = __bid128_to_uint64_int(v19, v20, &v23);
  }
  else if (v18 == 4)
  {
    result = *((_QWORD *)a3 + 8);
  }
  else
  {
    result = 0;
  }
  v21 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)v21 = 4;
  *(_QWORD *)(v21 + 64) = result & v15;
  return result;
}

void functionOR(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionOR_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionOR_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;

  v3 = result;
  if (a2[19])
    goto LABEL_7;
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
    {
      if (v5 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v8 = g_GeneratingConvertTerm;
LABEL_8:
    v9 = *(_QWORD *)(result + 32);
    if (v8)
      v10 = 10;
    else
      v10 = 9;
    *(_DWORD *)(v9 + 204) = v10;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0x7C00000000000000;
    return result;
  }
  v11 = -1;
  v12 = 21;
  while (v11 != 14)
  {
    v13 = a3[v12];
    ++v11;
    v12 += 2;
    if (v13)
      goto LABEL_18;
  }
  v11 = 15;
LABEL_18:
  v8 = g_GeneratingConvertTerm;
  if (v11 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v14 = *a2;
  if (*a2 == 1)
  {
    v15 = (uint64_t)rint(*((double *)a2 + 4));
  }
  else if (v14 == 2)
  {
    v16 = *((_QWORD *)a2 + 6);
    v17 = *((_QWORD *)a2 + 7);
    v22 = 0;
    v15 = __bid128_to_uint64_int(v16, v17, &v22);
  }
  else if (v14 == 4)
  {
    v15 = *((_QWORD *)a2 + 8);
  }
  else
  {
    v15 = 0;
  }
  v18 = *a3;
  if (*a3 == 1)
  {
    result = (uint64_t)rint(*((double *)a3 + 4));
  }
  else if (v18 == 2)
  {
    v19 = *((_QWORD *)a3 + 6);
    v20 = *((_QWORD *)a3 + 7);
    v23 = 0;
    result = __bid128_to_uint64_int(v19, v20, &v23);
  }
  else if (v18 == 4)
  {
    result = *((_QWORD *)a3 + 8);
  }
  else
  {
    result = 0;
  }
  v21 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)v21 = 4;
  *(_QWORD *)(v21 + 64) = result | v15;
  return result;
}

void functionNOR(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionNOR_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionNOR_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;

  v3 = result;
  if (a2[19])
    goto LABEL_7;
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
    {
      if (v5 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v8 = g_GeneratingConvertTerm;
LABEL_8:
    v9 = *(_QWORD *)(result + 32);
    if (v8)
      v10 = 10;
    else
      v10 = 9;
    *(_DWORD *)(v9 + 204) = v10;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0x7C00000000000000;
    return result;
  }
  v11 = -1;
  v12 = 21;
  while (v11 != 14)
  {
    v13 = a3[v12];
    ++v11;
    v12 += 2;
    if (v13)
      goto LABEL_18;
  }
  v11 = 15;
LABEL_18:
  v8 = g_GeneratingConvertTerm;
  if (v11 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v14 = *a2;
  if (*a2 == 1)
  {
    v15 = (uint64_t)rint(*((double *)a2 + 4));
  }
  else if (v14 == 2)
  {
    v16 = *((_QWORD *)a2 + 6);
    v17 = *((_QWORD *)a2 + 7);
    v22 = 0;
    v15 = __bid128_to_uint64_int(v16, v17, &v22);
  }
  else if (v14 == 4)
  {
    v15 = *((_QWORD *)a2 + 8);
  }
  else
  {
    v15 = 0;
  }
  v18 = *a3;
  if (*a3 == 1)
  {
    result = (uint64_t)rint(*((double *)a3 + 4));
  }
  else if (v18 == 2)
  {
    v19 = *((_QWORD *)a3 + 6);
    v20 = *((_QWORD *)a3 + 7);
    v23 = 0;
    result = __bid128_to_uint64_int(v19, v20, &v23);
  }
  else if (v18 == 4)
  {
    result = *((_QWORD *)a3 + 8);
  }
  else
  {
    result = 0;
  }
  v21 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)v21 = 4;
  *(_QWORD *)(v21 + 64) = ~(result | v15);
  return result;
}

void functionXOR(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionXOR_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionXOR_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  int v23;

  v3 = result;
  if (a2[19])
    goto LABEL_7;
  v5 = -1;
  v6 = 21;
  while (v5 != 14)
  {
    v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7)
    {
      if (v5 < 0xF)
        goto LABEL_7;
      break;
    }
  }
  if (a3[19])
  {
LABEL_7:
    v8 = g_GeneratingConvertTerm;
LABEL_8:
    v9 = *(_QWORD *)(result + 32);
    if (v8)
      v10 = 10;
    else
      v10 = 9;
    *(_DWORD *)(v9 + 204) = v10;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0x7C00000000000000;
    return result;
  }
  v11 = -1;
  v12 = 21;
  while (v11 != 14)
  {
    v13 = a3[v12];
    ++v11;
    v12 += 2;
    if (v13)
      goto LABEL_18;
  }
  v11 = 15;
LABEL_18:
  v8 = g_GeneratingConvertTerm;
  if (v11 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
    goto LABEL_8;
  g_isTrivial = 0;
  v14 = *a2;
  if (*a2 == 1)
  {
    v15 = (uint64_t)rint(*((double *)a2 + 4));
  }
  else if (v14 == 2)
  {
    v16 = *((_QWORD *)a2 + 6);
    v17 = *((_QWORD *)a2 + 7);
    v22 = 0;
    v15 = __bid128_to_uint64_int(v16, v17, &v22);
  }
  else if (v14 == 4)
  {
    v15 = *((_QWORD *)a2 + 8);
  }
  else
  {
    v15 = 0;
  }
  v18 = *a3;
  if (*a3 == 1)
  {
    result = (uint64_t)rint(*((double *)a3 + 4));
  }
  else if (v18 == 2)
  {
    v19 = *((_QWORD *)a3 + 6);
    v20 = *((_QWORD *)a3 + 7);
    v23 = 0;
    result = __bid128_to_uint64_int(v19, v20, &v23);
  }
  else if (v18 == 4)
  {
    result = *((_QWORD *)a3 + 8);
  }
  else
  {
    result = 0;
  }
  v21 = *(_QWORD *)(v3 + 32);
  *(_DWORD *)v21 = 4;
  *(_QWORD *)(v21 + 64) = result ^ v15;
  return result;
}

void functionLeftShift(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionLeftShift_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionLeftShift_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;

  v3 = result;
  if (!a2[19])
  {
    v6 = -1;
    v7 = 21;
    while (v6 != 14)
    {
      v8 = a2[v7];
      ++v6;
      v7 += 2;
      if (v8)
      {
        if (v6 < 0xF)
          goto LABEL_7;
        break;
      }
    }
    if (!a3[19])
    {
      v12 = -1;
      v13 = 21;
      while (v12 != 14)
      {
        v14 = a3[v13];
        ++v12;
        v13 += 2;
        if (v14)
          goto LABEL_18;
      }
      v12 = 15;
LABEL_18:
      v9 = g_GeneratingConvertTerm;
      if (v12 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
        goto LABEL_8;
      g_isTrivial = 0;
      v15 = *a3;
      if (*a3 == 1)
      {
        result = (uint64_t)rint(*((double *)a3 + 4));
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a3 + 6);
        v17 = *((_QWORD *)a3 + 7);
        v26 = 0;
        result = __bid128_to_uint64_int(v16, v17, &v26);
      }
      else
      {
        if (v15 != 4)
          goto LABEL_27;
        result = *((_QWORD *)a3 + 8);
      }
      if (result > 0x3F)
      {
        v20 = 0;
LABEL_43:
        v25 = *(_QWORD *)(v3 + 32);
        *(_DWORD *)v25 = 4;
        *(_QWORD *)(v25 + 64) = v20;
        return result;
      }
LABEL_27:
      v18 = *a2;
      if (*a2 == 1)
      {
        v19 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v18 == 2)
      {
        v21 = *((_QWORD *)a2 + 6);
        v22 = *((_QWORD *)a2 + 7);
        v27 = 0;
        v19 = __bid128_to_uint64_int(v21, v22, &v27);
      }
      else if (v18 == 4)
      {
        v19 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v19 = 0;
      }
      switch(v15)
      {
        case 1:
          result = (uint64_t)rint(*((double *)a3 + 4));
          break;
        case 2:
          v23 = *((_QWORD *)a3 + 6);
          v24 = *((_QWORD *)a3 + 7);
          v28 = 0;
          result = __bid128_to_uint64_int(v23, v24, &v28);
          break;
        case 4:
          result = *((_QWORD *)a3 + 8);
          break;
        default:
          result = 0;
          break;
      }
      v20 = v19 << result;
      goto LABEL_43;
    }
  }
LABEL_7:
  v9 = g_GeneratingConvertTerm;
LABEL_8:
  v10 = *(_QWORD *)(result + 32);
  if (v9)
    v11 = 10;
  else
    v11 = 9;
  *(_DWORD *)(v10 + 204) = v11;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0x7C00000000000000;
  return result;
}

void functionRightShift(uint64_t a1, uint64_t a2)
{
  _QWORD v2[5];

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __functionRightShift_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

unint64_t __functionRightShift_block_invoke(unint64_t result, int *a2, int *a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;

  v3 = result;
  if (!a2[19])
  {
    v6 = -1;
    v7 = 21;
    while (v6 != 14)
    {
      v8 = a2[v7];
      ++v6;
      v7 += 2;
      if (v8)
      {
        if (v6 < 0xF)
          goto LABEL_7;
        break;
      }
    }
    if (!a3[19])
    {
      v12 = -1;
      v13 = 21;
      while (v12 != 14)
      {
        v14 = a3[v13];
        ++v12;
        v13 += 2;
        if (v14)
          goto LABEL_18;
      }
      v12 = 15;
LABEL_18:
      v9 = g_GeneratingConvertTerm;
      if (v12 < 0xF || (g_GeneratingConvertTerm & 1) != 0)
        goto LABEL_8;
      g_isTrivial = 0;
      v15 = *a3;
      if (*a3 == 1)
      {
        result = (uint64_t)rint(*((double *)a3 + 4));
      }
      else if (v15 == 2)
      {
        v16 = *((_QWORD *)a3 + 6);
        v17 = *((_QWORD *)a3 + 7);
        v26 = 0;
        result = __bid128_to_uint64_int(v16, v17, &v26);
      }
      else
      {
        if (v15 != 4)
          goto LABEL_27;
        result = *((_QWORD *)a3 + 8);
      }
      if (result > 0x3F)
      {
        v20 = 0;
LABEL_43:
        v25 = *(_QWORD *)(v3 + 32);
        *(_DWORD *)v25 = 4;
        *(_QWORD *)(v25 + 64) = v20;
        return result;
      }
LABEL_27:
      v18 = *a2;
      if (*a2 == 1)
      {
        v19 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v18 == 2)
      {
        v21 = *((_QWORD *)a2 + 6);
        v22 = *((_QWORD *)a2 + 7);
        v27 = 0;
        v19 = __bid128_to_uint64_int(v21, v22, &v27);
      }
      else if (v18 == 4)
      {
        v19 = *((_QWORD *)a2 + 8);
      }
      else
      {
        v19 = 0;
      }
      switch(v15)
      {
        case 1:
          result = (uint64_t)rint(*((double *)a3 + 4));
          break;
        case 2:
          v23 = *((_QWORD *)a3 + 6);
          v24 = *((_QWORD *)a3 + 7);
          v28 = 0;
          result = __bid128_to_uint64_int(v23, v24, &v28);
          break;
        case 4:
          result = *((_QWORD *)a3 + 8);
          break;
        default:
          result = 0;
          break;
      }
      v20 = v19 >> result;
      goto LABEL_43;
    }
  }
LABEL_7:
  v9 = g_GeneratingConvertTerm;
LABEL_8:
  v10 = *(_QWORD *)(result + 32);
  if (v9)
    v11 = 10;
  else
    v11 = 9;
  *(_DWORD *)(v10 + 204) = v11;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v10 + 56) = 0x7C00000000000000;
  return result;
}

