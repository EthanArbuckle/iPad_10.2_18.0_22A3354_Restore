uint64_t static FluidTouchGestureEvent.dispatch(report:platform:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for FluidTouchGesture();
  *(_BYTE *)(swift_initStackObject() + 16) = v5;
  return FluidTouchGesture.dispatch(report:)(a1, a2);
}

uint64_t FluidTouchGesture.__allocating_init(platform:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for FluidTouchGesture()
{
  return objc_opt_self();
}

#error "2498C8D30: call analysis failed (funcsize=167)"

void FluidTouchGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t FluidTouchGesture.init(platform:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t FluidTouchGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FluidTouchGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2498C8F04(_QWORD *a1)
{
  return FluidTouchGesture.dispatch(report:)(*a1, a1[1]);
}

void sub_2498C8F2C(char a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;

  v3 = a3 >> 62;
  if ((a1 & 7) != 0)
    __asm { BR              X13 }
  __asm { BR              X12 }
}

uint64_t sub_2498C9250@<X0>(unsigned int a1@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498C926CLL);
  }
  if (__OFADD__(8 * v4, v2))
  {
    __break(1u);
    JUMPOUT(0x2498C9304);
  }
  return ((uint64_t (*)(void))((char *)&loc_2498C90CC + *((int *)qword_2498C93A8 + a1)))();
}

uint64_t _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_18();
  return OUTLINED_FUNCTION_9(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_18();
  return OUTLINED_FUNCTION_8(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_2498C9430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_12();
  v50 = v38;
  OUTLINED_FUNCTION_7();
  v42 = HIWORD(v41);
  v43 = HIBYTE(v37);
  v44 = v36 >> 8;
  v45 = v36 >> 16;
  v46 = v36 >> 24;
  v47 = HIDWORD(v36);
  v48 = v36 >> 40;
  if ((v39 & 7) != 0)
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498C94B8 + *((int *)qword_2498C99C8 + v40)))(v39, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             v50,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  else
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498C9778 + *((int *)qword_2498C99E8 + v40)))(v39, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             v50,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
}

void _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0()
{
  unint64_t v0;
  unint64_t v1;
  char v2;

  OUTLINED_FUNCTION_17();
  v1 = v0 >> 62;
  if ((v2 & 7) != 0)
    __asm { BR              X10 }
  __asm { BR              X10 }
}

uint64_t sub_2498CA00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_12();
  v50 = v38;
  OUTLINED_FUNCTION_7();
  v42 = HIWORD(v41);
  v43 = HIBYTE(v37);
  v44 = v36 >> 8;
  v45 = v36 >> 16;
  v46 = v36 >> 24;
  v47 = HIDWORD(v36);
  v48 = v36 >> 40;
  if ((v39 & 7) == 0)
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498CA344 + *((int *)qword_2498CA5B0 + v40)))(v39, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             v50,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  LODWORD(a28) = 1;
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498CA09C + *((int *)qword_2498CA590 + v40)))(v39, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v50,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_2498CA5D0(char a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;

  v3 = a3 >> 62;
  if ((a1 & 7) != 0)
    __asm { BR              X10 }
  __asm { BR              X10 }
}

uint64_t OUTLINED_FUNCTION_15()
{
  return 0;
}

void sub_2498CAC70(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2498CAC78(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2498CACBC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

double sub_2498CAD04(char a1, uint64_t a2, unint64_t a3)
{
  unsigned __int8 v3;
  double v5;

  sub_2498C8F2C(a1, a2, a3);
  if ((v3 & 0x80) == 0)
    return (double)v3 / 127.0;
  v5 = OUTLINED_FUNCTION_13(~v3);
  return OUTLINED_FUNCTION_14(-0.0078125, v5);
}

#error "2498CAD54: call analysis failed (funcsize=18)"

double sub_2498CAD94(char a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  double result;

  sub_2498CA5D0(a1, a2, a3);
  result = OUTLINED_FUNCTION_14(1.08420217e-19, (double)v3);
  if (v4 < 0)
    return ((double)(unint64_t)~v4 + 1.0) * -1.08420217e-19;
  return result;
}

#error "2498CADE0: call analysis failed (funcsize=15)"

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCFB8EC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_UNKNOWN **sub_2498CAE54()
{
  return &protocol witness table for FluidTouchGestureReport;
}

_UNKNOWN **sub_2498CAE60()
{
  return &protocol witness table for FluidTouchGestureReport;
}

uint64_t method lookup function for FluidTouchGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FluidTouchGesture.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2498CAEA8(a1, &qword_2578A08E8);
}

void type metadata accessor for IOHIDEvent(uint64_t a1)
{
  sub_2498CAEA8(a1, &qword_2578A08F0);
}

void sub_2498CAEA8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0()
{
  char v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_18();
  sub_2498C8F2C(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return sub_2498C9430(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void OUTLINED_FUNCTION_4(char a1)
{
  unint64_t v1;
  uint64_t v2;

  sub_2498C8F2C(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_6()
{
  return 0;
}

void OUTLINED_FUNCTION_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
}

uint64_t OUTLINED_FUNCTION_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_2498C9430(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t OUTLINED_FUNCTION_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_2498CA00C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t OUTLINED_FUNCTION_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_2498CAD4C(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_11()
{
  return sub_24995555C();
}

double OUTLINED_FUNCTION_13@<D0>(unsigned int a1@<W8>)
{
  return (double)a1 + 1.0;
}

double OUTLINED_FUNCTION_14@<D0>(double a1@<X8>, double a2@<D0>)
{
  return a2 * a1;
}

uint64_t OUTLINED_FUNCTION_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t OUTLINED_FUNCTION_19()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_20()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_24()
{
  return sub_24995555C();
}

uint64_t OUTLINED_FUNCTION_25()
{
  return sub_249955574();
}

uint64_t AppleVendorUsage.init(rawValue:)(unsigned __int8 a1)
{
  return a1 | ((a1 == 0) << 8);
}

uint64_t sub_2498CB0C0@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = AppleVendorUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void sub_2498CB0F0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_2498CB0FC()
{
  unsigned __int8 *v0;

  return sub_2499327A4(*v0);
}

void sub_2498CB104()
{
  sub_2499328E8();
}

uint64_t sub_2498CB10C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2499329E4(a1, *v1);
}

BOOL sub_2498CB114(char *a1, char *a2)
{
  return sub_24991D314(*a1, *a2);
}

uint64_t static AppleVendorUsage.usagePage.getter()
{
  return 65280;
}

uint64_t sub_2498CB128()
{
  return 65280;
}

uint64_t static AppleVendorUsage.nxTranslated.getter()
{
  return 24;
}

unint64_t sub_2498CB138(uint64_t a1)
{
  unint64_t result;

  result = sub_2498CB15C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2498CB15C()
{
  unint64_t result;

  result = qword_2578A08F8;
  if (!qword_2578A08F8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorUsage, &type metadata for AppleVendorUsage);
    atomic_store(result, (unint64_t *)&qword_2578A08F8);
  }
  return result;
}

unint64_t sub_2498CB19C()
{
  unint64_t result;

  result = qword_2578A0900;
  if (!qword_2578A0900)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorUsage, &type metadata for AppleVendorUsage);
    atomic_store(result, (unint64_t *)&qword_2578A0900);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorUsage()
{
  return &type metadata for AppleVendorUsage;
}

uint64_t OUTLINED_FUNCTION_27()
{
  return 1;
}

uint64_t static HIDUsagePageProtocol.usageMinimum.getter()
{
  return 1;
}

uint64_t sub_2498CB1F8()
{
  return 0xFFFFLL;
}

uint64_t static HIDUsagePageProtocol.usageMaximum.getter()
{
  return 0xFFFFLL;
}

uint64_t sub_2498CB208()
{
  return sub_2498CB128();
}

uint64_t sub_2498CB210()
{
  return 65306;
}

uint64_t sub_2498CB218()
{
  return 9;
}

uint64_t sub_2498CB220()
{
  return 12;
}

uint64_t sub_2498CB228()
{
  return 7;
}

uint64_t sub_2498CB230()
{
  return 255;
}

uint64_t sub_2498CB238()
{
  return 65281;
}

uint64_t HIDUsagePageProtocol<>.page.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2498CB264()
{
  unsigned __int8 *v0;

  return sub_2498D0CF4(*v0);
}

uint64_t HIDUsageProtocol<>.usage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_18_0();
  v57 = v0;
  v58 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 24) + 16);
  swift_getAssociatedTypeWitness();
  v50 = v3;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8]();
  v49 = (char *)&v47 - v4;
  swift_checkMetadataState();
  MEMORY[0x24BDAC7A8]();
  v48 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8]();
  v51 = (char *)&v47 - v6;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8]();
  v54 = (uint64_t)&v47 - v7;
  OUTLINED_FUNCTION_28();
  v8 = MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v47 - v9;
  ((void (*)(uint64_t))MEMORY[0x24BDAC7A8])(v8);
  v53 = (uint64_t)&v47 - v11;
  OUTLINED_FUNCTION_28();
  v12 = MEMORY[0x24BDAC7A8]();
  v14 = (char *)&v47 - v13;
  v15 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(v12);
  v17 = (char *)&v47 - v16;
  ((void (*)(uint64_t))MEMORY[0x24BDAC7A8])(v15);
  v19 = (char *)&v47 - v18;
  v21 = v20;
  sub_249955904();
  v22 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_0((uint64_t)v17);
  v52 = v21;
  if ((v22 & 1) == 0)
  {
    v24 = (uint64_t)v17;
    goto LABEL_7;
  }
  v23 = OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_0((uint64_t)v17);
  if (v23 <= 64)
    goto LABEL_8;
  OUTLINED_FUNCTION_9_0((uint64_t)v14);
  v56 = 0x8000000000000000;
  if ((OUTLINED_FUNCTION_2_0() & 1) != 0)
  {
    if (OUTLINED_FUNCTION_3_0() < 64)
    {
LABEL_27:
      v41 = OUTLINED_FUNCTION_7_0();
      result = OUTLINED_FUNCTION_1_0((uint64_t)v14);
      if (v41 < v56)
        goto LABEL_33;
LABEL_8:
      v25 = OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_9_0((uint64_t)v10);
      if (v25 < 65)
      {
        v26 = OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_1_0((uint64_t)v10);
        if (v26 != 64 || (OUTLINED_FUNCTION_2_0() & 1) != 0)
          goto LABEL_20;
      }
      else
      {
        OUTLINED_FUNCTION_1_0((uint64_t)v10);
      }
      v27 = v54;
      OUTLINED_FUNCTION_9_0(v54);
      v56 = 0x7FFFFFFFFFFFFFFFLL;
      v28 = OUTLINED_FUNCTION_2_0();
      v29 = OUTLINED_FUNCTION_3_0();
      if ((v28 & 1) != 0)
      {
        if (v29 > 64)
        {
          sub_2498CB760();
          v30 = v53;
          OUTLINED_FUNCTION_8_0();
          v31 = sub_2499557FC();
          OUTLINED_FUNCTION_1_0(v30);
          for (i = v27; ; i = v34)
          {
            OUTLINED_FUNCTION_1_0(i);
            if ((v31 & 1) == 0)
              break;
LABEL_17:
            __break(1u);
LABEL_18:
            v55 = 0x7FFFFFFFFFFFFFFFLL;
            v34 = v53;
            OUTLINED_FUNCTION_25_0(v53, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
            sub_2498CB760();
            v27 = (uint64_t)v51;
            OUTLINED_FUNCTION_8_0();
            v31 = sub_2499557FC();
            OUTLINED_FUNCTION_1_0(v27);
          }
          goto LABEL_20;
        }
      }
      else if (v29 > 63)
      {
        goto LABEL_18;
      }
      v33 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_1_0(v27);
      if (v56 < v33)
        goto LABEL_17;
LABEL_20:
      v35 = OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_1_0((uint64_t)v19);
      return v35;
    }
    goto LABEL_23;
  }
  v37 = OUTLINED_FUNCTION_2_0();
  v38 = OUTLINED_FUNCTION_3_0();
  if ((v37 & 1) == 0)
  {
    if (v38 < 64)
      goto LABEL_27;
    v24 = (uint64_t)v14;
LABEL_7:
    OUTLINED_FUNCTION_1_0(v24);
    goto LABEL_8;
  }
  if (v38 > 64)
  {
LABEL_23:
    sub_2498CB760();
    v39 = v53;
    OUTLINED_FUNCTION_8_0();
    v40 = OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_1_0(v39);
    result = OUTLINED_FUNCTION_1_0((uint64_t)v14);
    if ((v40 & 1) == 0)
      goto LABEL_8;
    goto LABEL_33;
  }
  swift_getAssociatedConformanceWitness();
  sub_249955F34();
  v42 = v53;
  sub_249955F10();
  v43 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_1_0(v42);
  v44 = v48;
  OUTLINED_FUNCTION_25_0(v48, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32));
  if ((v43 & 1) == 0)
  {
    v45 = v56;
    v46 = OUTLINED_FUNCTION_7_0();
    result = OUTLINED_FUNCTION_1_0(v44);
    if (v46 < v45)
      goto LABEL_33;
    goto LABEL_8;
  }
  result = OUTLINED_FUNCTION_1_0(v44);
LABEL_33:
  __break(1u);
  return result;
}

unint64_t sub_2498CB760()
{
  unint64_t result;

  result = qword_2578A0908;
  if (!qword_2578A0908)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2578A0908);
  }
  return result;
}

void sub_2498CB79C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_24991C8C8(a1, a2);
  OUTLINED_FUNCTION_5_0(v2);
  OUTLINED_FUNCTION_6_0();
}

void HIDUsagePageProtocol<>.init(page:usage:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v16[2];

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_249955AD8();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v16 - v13;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v3, v1) == v7)
  {
    v16[1] = v5;
    sub_2498CB760();
    HIDUsageProtocol<>.init<A>(_:)();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v3) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v9, v14, v3);
      v15 = 0;
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  v15 = 1;
LABEL_6:
  __swift_storeEnumTagSinglePayload(v9, v15, 1, v3);
  OUTLINED_FUNCTION_4_0();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_2498CB8DC()
{
  OUTLINED_FUNCTION_0_0();
}

void HIDUsageProtocol.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = OUTLINED_FUNCTION_27_0(v10);
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - v14;
  v16 = OUTLINED_FUNCTION_24_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
  v17 = OUTLINED_FUNCTION_24_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v16, v17, v7, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    v18 = 1;
    v19 = v22;
  }
  else
  {
    v20 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v22, v15, v7);
    v18 = 0;
    v19 = v20;
  }
  __swift_storeEnumTagSinglePayload(v19, v18, 1, v7);
  OUTLINED_FUNCTION_4_0();
}

void sub_2498CBA0C()
{
  HIDUsageProtocol.init<A>(_:)();
}

void HIDUsageProtocol<>.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_18_0();
  v41 = v1;
  v42 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = OUTLINED_FUNCTION_27_0(v10);
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  OUTLINED_FUNCTION_17_0();
  v12 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v40 = (char *)&v35 - v13;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_16_0();
  v17 = v16 - v15;
  v39 = v3;
  v18 = OUTLINED_FUNCTION_26();
  v19 = sub_249955AD8();
  v37 = *(_QWORD *)(v19 - 8);
  v38 = v19;
  OUTLINED_FUNCTION_17_0();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v35 - v22;
  v24 = *(_QWORD *)(v18 - 8);
  v25 = MEMORY[0x24BDAC7A8](v21);
  v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v35 - v28;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v43 = v9;
  v30(v17, v9, v5);
  sub_2499559D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v18) == 1)
  {
    OUTLINED_FUNCTION_21_0();
    v32 = v37;
    v31 = v38;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v23, v18);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v18);
    v23 = v40;
    sub_249955910();
    OUTLINED_FUNCTION_21_0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v18);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v7) != 1)
    {
      v34 = v44;
      OUTLINED_FUNCTION_25_0(v44, (uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
      v33 = 0;
      goto LABEL_7;
    }
    v32 = v35;
    v31 = v36;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v31);
  v33 = 1;
  v34 = v44;
LABEL_7:
  __swift_storeEnumTagSinglePayload(v34, v33, 1, v7);
  OUTLINED_FUNCTION_4_0();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t HIDUsage._usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.page.getter(uint64_t result)
{
  return (unsigned __int16)result;
}

uint64_t HIDUsage.usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.init(page:usage:)(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 | (a2 << 16);
}

uint64_t HIDUsage.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int16 v6;

  v3 = a3;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  LOWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(a2, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6 | ((unsigned __int16)v3 << 16);
}

void HIDUsage.hash(into:)()
{
  sub_249955FDC();
  sub_249955FDC();
  OUTLINED_FUNCTION_6_0();
}

BOOL static HIDUsage.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

BOOL sub_2498CBD44(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2498CBD54()
{
  return sub_249955FC4();
}

uint64_t sub_2498CBD78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656761705FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_249955F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676173755FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_249955F28();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2498CBE54()
{
  return 2;
}

uint64_t sub_2498CBE5C()
{
  sub_249955FB8();
  sub_249955FC4();
  return sub_249956000();
}

uint64_t OUTLINED_FUNCTION_71()
{
  return 0;
}

uint64_t sub_2498CBEAC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65676173755FLL;
  else
    return 0x656761705FLL;
}

BOOL sub_2498CBEDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498CBD44(*a1, *a2);
}

uint64_t sub_2498CBEE8()
{
  return sub_2498CBE5C();
}

uint64_t sub_2498CBEF0()
{
  return sub_2498CBD54();
}

uint64_t sub_2498CBEF8()
{
  sub_249955FB8();
  sub_249955FC4();
  return sub_249956000();
}

uint64_t sub_2498CBF38()
{
  char *v0;

  return sub_2498CBEAC(*v0);
}

uint64_t sub_2498CBF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2498CBD78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498CBF64()
{
  return OUTLINED_FUNCTION_71();
}

uint64_t sub_2498CBF80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2498CBE54();
  *a1 = result;
  return result;
}

uint64_t sub_2498CBFA4()
{
  sub_2498CC10C();
  return sub_249956024();
}

uint64_t sub_2498CBFCC()
{
  sub_2498CC10C();
  return sub_249956030();
}

uint64_t HIDUsage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0910);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_16_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2498CC10C();
  sub_249956018();
  OUTLINED_FUNCTION_15_1();
  if (!v1)
    OUTLINED_FUNCTION_15_1();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2498CC10C()
{
  unint64_t result;

  result = qword_2578A0918;
  if (!qword_2578A0918)
  {
    result = MEMORY[0x24BCFB904](&unk_249956CC4, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A0918);
  }
  return result;
}

void HIDUsage.hashValue.getter()
{
  sub_249955FB8();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_22_0();
  sub_249956000();
  OUTLINED_FUNCTION_14_0();
}

uint64_t HIDUsage.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;
  unsigned __int16 v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0920);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_16_0();
  v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_2498CC10C();
  sub_24995600C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v5 = OUTLINED_FUNCTION_19_0();
    v6 = OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_20_0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5 | (v6 << 16);
  }
  return v4;
}

uint64_t sub_2498CC2A0()
{
  unsigned int *v0;

  return HIDUsage.page.getter(*v0);
}

uint64_t sub_2498CC2A8()
{
  unsigned int *v0;

  return HIDUsage.usage.getter(*v0);
}

uint64_t sub_2498CC2B0@<X0>(unsigned __int16 a1@<W0>, unsigned __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = HIDUsage.init(page:usage:)(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = 0;
  return result;
}

uint64_t sub_2498CC2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = HIDUsage.init<A>(_:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(_BYTE *)(a4 + 4) = 0;
  return result;
}

uint64_t sub_2498CC300@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = HIDUsage.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2498CC328(_QWORD *a1)
{
  return HIDUsage.encode(to:)(a1);
}

void sub_2498CC340()
{
  HIDUsage.hashValue.getter();
}

void sub_2498CC348()
{
  HIDUsage.hash(into:)();
}

void sub_2498CC350()
{
  sub_249955FB8();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_22_0();
  sub_249956000();
  OUTLINED_FUNCTION_14_0();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

BOOL sub_2498CC3AC(int *a1, int *a2)
{
  return static HIDUsage.== infix(_:_:)(*a1, *a2);
}

uint64_t HIDUsage.description.getter()
{
  uint64_t v0;

  sub_2498CB760();
  v0 = OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11_0();
  sub_2499558A4();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2498CC450()
{
  return HIDUsage.description.getter();
}

BOOL static HIDUsage.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 >= (unsigned __int16)a1 && HIWORD(a1) < HIWORD(a2);
}

unint64_t sub_2498CC474(uint64_t a1)
{
  unint64_t result;

  result = sub_2498CC498();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2498CC498()
{
  unint64_t result;

  result = qword_2578A0928;
  if (!qword_2578A0928)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDUsage, &type metadata for HIDUsage);
    atomic_store(result, (unint64_t *)&qword_2578A0928);
  }
  return result;
}

unint64_t sub_2498CC4D8()
{
  unint64_t result;

  result = qword_2578A0930;
  if (!qword_2578A0930)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDUsage, &type metadata for HIDUsage);
    atomic_store(result, (unint64_t *)&qword_2578A0930);
  }
  return result;
}

BOOL sub_2498CC514(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.< infix(_:_:)(*a1, *a2);
}

BOOL sub_2498CC520(unsigned int *a1, unsigned int *a2)
{
  return sub_249948348(*a1, *a2);
}

BOOL sub_2498CC52C(unsigned int *a1, unsigned int *a2)
{
  return sub_249948464(*a1, *a2);
}

BOOL sub_2498CC538(unsigned int *a1, unsigned int *a2)
{
  return sub_24994868C(*a1, *a2);
}

uint64_t dispatch thunk of HIDUsageProtocol.init(page:usage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of HIDUsageProtocol.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of static HIDUsagePageProtocol.usageMinimum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

_DWORD *__swift_memcpy4_2(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HIDUsage(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDUsage(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage()
{
  return &type metadata for HIDUsage;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HIDUsage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDUsage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2498CC6B4 + 4 * byte_249956A65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2498CC6E8 + 4 * asc_249956A60[v4]))();
}

uint64_t sub_2498CC6E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498CC6F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498CC6F8);
  return result;
}

uint64_t sub_2498CC704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498CC70CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2498CC710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498CC718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498CC724(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2498CC730(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage.CodingKeys()
{
  return &type metadata for HIDUsage.CodingKeys;
}

unint64_t sub_2498CC750()
{
  unint64_t result;

  result = qword_2578A0938;
  if (!qword_2578A0938)
  {
    result = MEMORY[0x24BCFB904](&unk_249956C9C, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A0938);
  }
  return result;
}

unint64_t sub_2498CC790()
{
  unint64_t result;

  result = qword_2578A0940;
  if (!qword_2578A0940)
  {
    result = MEMORY[0x24BCFB904](&unk_249956C0C, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A0940);
  }
  return result;
}

unint64_t sub_2498CC7D0()
{
  unint64_t result;

  result = qword_2578A0948;
  if (!qword_2578A0948)
  {
    result = MEMORY[0x24BCFB904](&unk_249956C34, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A0948);
  }
  return result;
}

uint64_t sub_2498CC80C()
{
  return sub_2498CB218();
}

uint64_t sub_2498CC814()
{
  unsigned __int8 *v0;

  return sub_2498D0BAC(*v0);
}

void sub_2498CC81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_24991C930(a1, a2);
  OUTLINED_FUNCTION_5_0(v2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498CC83C()
{
  return sub_2498CB238();
}

void sub_2498CC844()
{
  uint64_t v0;

  sub_24991C7B4();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498CC864()
{
  return sub_2498CB220();
}

uint64_t sub_2498CC86C()
{
  unsigned __int16 *v0;

  return sub_2498D0CF8(*v0);
}

void sub_2498CC874(uint64_t a1@<X8>)
{
  __int16 v2;
  char v3;

  sub_24991C86C();
  *(_WORD *)a1 = v2;
  *(_BYTE *)(a1 + 2) = v3 & 1;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498CC89C()
{
  return sub_2498CB230();
}

void sub_2498CC8A4()
{
  uint64_t v0;

  sub_24991C824();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498CC8C4()
{
  return sub_2498CB228();
}

void sub_2498CC8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_24991C8A0(a1, a2);
  OUTLINED_FUNCTION_5_0(v2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498CC8EC()
{
  return sub_2498CB210();
}

uint64_t sub_2498CC8F4()
{
  unsigned __int16 *v0;

  return sub_2498D0BB4(*v0);
}

void sub_2498CC8FC(uint64_t a1@<X8>)
{
  __int16 v2;
  char v3;

  sub_24991C8F0();
  *(_WORD *)a1 = v2;
  *(_BYTE *)(a1 + 2) = v3 & 1;
  OUTLINED_FUNCTION_6_0();
}

void OUTLINED_FUNCTION_0_0()
{
  HIDUsageProtocol.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_1_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_5_0(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  v1[1] = BYTE1(result) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return sub_249955B14();
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return sub_2499557FC();
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return sub_2499558C8();
}

uint64_t OUTLINED_FUNCTION_12_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return sub_249955ED4();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_249955E50();
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 96), v0);
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return sub_249955FDC();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return sub_249955FDC();
}

uint64_t OUTLINED_FUNCTION_24_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_25_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_26()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_27_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_249955AD8();
}

void static Platform.current.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL Platform.isiOSPlatformClass.getter()
{
  unsigned __int8 *v0;

  return *v0 != 1;
}

BOOL static Platform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Platform.hash(into:)()
{
  return sub_249955FC4();
}

uint64_t Platform.hashValue.getter()
{
  sub_249955FB8();
  sub_249955FC4();
  return sub_249956000();
}

unint64_t sub_2498CCB74()
{
  unint64_t result;

  result = qword_2578A0950;
  if (!qword_2578A0950)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Platform, &type metadata for Platform);
    atomic_store(result, (unint64_t *)&qword_2578A0950);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Platform(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Platform(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2498CCC84 + 4 * byte_249956D25[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2498CCCB8 + 4 * byte_249956D20[v4]))();
}

uint64_t sub_2498CCCB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498CCCC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498CCCC8);
  return result;
}

uint64_t sub_2498CCCD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498CCCDCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2498CCCE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498CCCE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2498CCCF4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

uint64_t FluidTouchGestureFilter.eventMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void FluidTouchGestureFilter.__allocating_init(service:)()
{
  char v0;

  v0 = 0;
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_54(&v0);
  OUTLINED_FUNCTION_37();
}

uint64_t FluidTouchGestureFilter.__allocating_init(platform:service:)(char *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_54(a1);
  return v2;
}

_QWORD *FluidTouchGestureFilter.init(platform:service:)(char *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  char v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  v5 = *a1;
  v6 = MEMORY[0x24BEE4AF8];
  v3[4] = sub_2498CF460(MEMORY[0x24BEE4AF8]);
  v3[5] = sub_2498CF460(v6);
  v3[2] = sub_2498CCE1C(v5);
  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  v3[3] = v8;
  return v3;
}

uint64_t sub_2498CCE1C(char a1)
{
  char v1;

  if (a1 == 1)
    v1 = 11;
  else
    v1 = 17;
  return 1 << v1;
}

uint64_t FluidTouchGestureFilter.filterEvent(_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v3 = (_BYTE *)v2;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = a2[3];
  v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if ((HIDEventType.maskValue.getter(v9) & v6) == 0)
  {
    sub_2498CF8CC((uint64_t)a2, a1);
    v15 = 0;
    return v15 & 1;
  }
  v90 = a1;
  v104 = MEMORY[0x24BEE4AF8];
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v13 = v12;
  v14 = *(_QWORD *)(v12 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v15 = 0;
    goto LABEL_56;
  }
  v15 = 0;
  v16 = 0;
  v17 = v12 + 32;
  HIDWORD(v84) = 1769474;
  v86 = (uint64_t)v3;
  v88 = *(_QWORD *)(v12 + 16);
  v92 = v12 + 32;
  do
  {
    sub_2498CF6F0(v16, 1, v13);
    sub_2498CF8CC(v17 + 40 * v16, (uint64_t)&v99);
    v18 = v102;
    v19 = v103;
    __swift_project_boxed_opaque_existential_1(&v99, v102);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
    if ((_DWORD)v20 == 4)
    {
      OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
      v44 = (void *)sub_2498CE61C(&v94);
      if ((v15 & 1) == 0)
      {
        v63 = v44;
        sub_2498CE6BC();

      }
      if (qword_2578A0748 != -1)
        swift_once();
      OUTLINED_FUNCTION_27_1();
      HIDReportDescriptor.reportBitCount(for:)();
      v65 = HIDReport.init(bitCount:id:)(v64, 17);
      v67 = v66;
      v94 = v65;
      v95 = v66;
      OUTLINED_FUNCTION_12_1();
      __asm { BR              X9 }
    }
    switch((_DWORD)v20)
    {
      case 5:
        OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
        __swift_project_boxed_opaque_existential_1(&v94, v97);
        if (OUTLINED_FUNCTION_30() == 5)
        {
          __swift_project_boxed_opaque_existential_1(&v94, v97);
          v51 = OUTLINED_FUNCTION_29();
          OUTLINED_FUNCTION_56(v51, v52, v53, v54, v55, v56);
          if ((v15 & 1) == 0)
          {
            v76 = v3;
            sub_2498CE6BC();

          }
          if (qword_2578A07E8 != -1)
            swift_once();
          OUTLINED_FUNCTION_27_1();
          HIDReportDescriptor.reportBitCount(for:)();
          v78 = HIDReport.init(bitCount:id:)(v77, 16);
          v80 = v79;
          v94 = v78;
          v95 = v79;
          OUTLINED_FUNCTION_12_1();
          __asm { BR              X8 }
        }
LABEL_63:
        __break(1u);
        JUMPOUT(0x2498CDEB8);
      case 7:
        OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
        __swift_project_boxed_opaque_existential_1(&v94, v97);
        if (OUTLINED_FUNCTION_30() == 7)
        {
          __swift_project_boxed_opaque_existential_1(&v94, v97);
          v45 = OUTLINED_FUNCTION_29();
          OUTLINED_FUNCTION_56(v45, v46, v47, v48, v49, v50);
          if ((v15 & 1) == 0)
          {
            OUTLINED_FUNCTION_17_1();
            OUTLINED_FUNCTION_26_0();
          }
          if (qword_2578A0808 != -1)
            swift_once();
          OUTLINED_FUNCTION_27_1();
          HIDReportDescriptor.reportBitCount(for:)();
          v73 = HIDReport.init(bitCount:id:)(v72, 15);
          v75 = v74;
          v94 = v73;
          v95 = v74;
          OUTLINED_FUNCTION_12_1();
          __asm { BR              X8 }
        }
        __break(1u);
        goto LABEL_63;
      case 0x10:
        OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
        sub_2498CE57C(&v94);
        if ((v15 & 1) == 0)
        {
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_26_0();
        }
        if (qword_2578A0790 != -1)
          swift_once();
        OUTLINED_FUNCTION_27_1();
        HIDReportDescriptor.reportBitCount(for:)();
        v94 = HIDReport.init(bitCount:id:)(v57, 13);
        v95 = v58;
        OUTLINED_FUNCTION_17_1();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_58();
        __asm { BR              X10 }
        break;
    }
    v17 = v92;
    if ((_DWORD)v20 == 22)
    {
      if (qword_2578A0738 != -1)
        swift_once();
      OUTLINED_FUNCTION_27_1();
      HIDReportDescriptor.reportBitCount(for:)();
      HIDReport.init(bitCount:id:)(v26, 14);
      v27 = sub_2498CF620((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_249907A30);
      v35 = OUTLINED_FUNCTION_49(v27, v28, v29, v30, v31, v32, v33, v34, v82, v84, v86, v88, v90, v92, v94, v95, v96, v97, v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104);
      v36 = sub_2498CF680(v35, (uint64_t (*)(BOOL))sub_249907A30);
      OUTLINED_FUNCTION_34(v36, v37, v38, v39, v40, v41, v42, v43, v83, v85, v87, v89, v91, v93, v94, v95, v96, v97, v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104);
      v15 = 1;
      v14 = v88;
      v17 = v92;
    }
    else
    {
      if ((_DWORD)v20 == 27)
      {
        OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
        sub_2498CE4DC(&v94);
        if ((v15 & 1) == 0)
        {
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_26_0();
        }
        if (qword_2578A0780 != -1)
          swift_once();
        OUTLINED_FUNCTION_27_1();
        HIDReportDescriptor.reportBitCount(for:)();
        v94 = HIDReport.init(bitCount:id:)(v60, 12);
        v95 = v61;
        OUTLINED_FUNCTION_17_1();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_58();
        __asm { BR              X10 }
      }
      if ((_DWORD)v20 == 23)
      {
        OUTLINED_FUNCTION_16_1(v20, v21, v22, v23, v24, v25);
        sub_2498CE43C(&v94);
        if ((v15 & 1) == 0)
        {
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_26_0();
        }
        if (qword_2578A0788 != -1)
          swift_once();
        OUTLINED_FUNCTION_27_1();
        HIDReportDescriptor.reportBitCount(for:)();
        v69 = HIDReport.init(bitCount:id:)(v68, 11);
        v71 = v70;
        v94 = v69;
        v95 = v70;
        OUTLINED_FUNCTION_17_1();
        sub_2498CAC78(v69, v71);
        sub_2498C8F2C(8, v69, v71);
        sub_2498CACBC(v69, v71);
        __asm { BR              X10 }
      }
    }
    ++v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
  }
  while (v16 != v14);
  swift_bridgeObjectRelease();
LABEL_56:
  if ((v3[41] & 8) != 0)
  {
    *(_QWORD *)(v90 + 32) = 0;
    *(_OWORD *)v90 = 0u;
    *(_OWORD *)(v90 + 16) = 0u;
  }
  else
  {
    sub_2498CF8CC((uint64_t)a2, v90);
  }
  if ((v3[33] & 8) == 0)
    swift_bridgeObjectRelease();
  return v15 & 1;
}

void sub_2498CDFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 7)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 2)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 6)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 17)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 3)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 5)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 9)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 11)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 23)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 22)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 4)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 1)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE32C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 35)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 39)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 16)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

void sub_2498CE3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v3[3];

  OUTLINED_FUNCTION_5_1(a1, a2);
  if (OUTLINED_FUNCTION_1_1(v3) == 27)
  {
    v2 = OUTLINED_FUNCTION_0_1((uint64_t)v3);
    OUTLINED_FUNCTION_4_1(v2);
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2498CE43C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_2498CF8CC((uint64_t)a1, (uint64_t)v8);
  v2 = v9;
  v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if ((_DWORD)result == 23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498CE4DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_2498CF8CC((uint64_t)a1, (uint64_t)v8);
  v2 = v9;
  v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if ((_DWORD)result == 27)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498CE57C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_2498CF8CC((uint64_t)a1, (uint64_t)v8);
  v2 = v9;
  v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if ((_DWORD)result == 16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498CE61C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_2498CF8CC((uint64_t)a1, (uint64_t)v8);
  v2 = v9;
  v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if ((_DWORD)result == 4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498CE6BC()
{
  return IOHIDEventGetPhase() & 0xFFFFFF8FLL;
}

uint64_t sub_2498CE6D4(double a1, double a2)
{
  double v3;

  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
    a1 = 0.0;
  sub_2498CF514(120, a1);
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
    v3 = a2;
  else
    v3 = 0.0;
  return sub_2498CF514(136, v3);
}

uint64_t sub_2498CE724(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v1 = objc_msgSend(a1, sel_children);
  if (v1)
  {
    v2 = v1;
    sub_2498CF944();
    v3 = sub_249955934();

    v4 = sub_249911E64(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
  }
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + 32;
    while (1)
    {
      sub_2498CF8CC(v6, (uint64_t)v19);
      v7 = v20;
      v8 = v21;
      __swift_project_boxed_opaque_existential_1(v19, v20);
      HIDEventProtocol.first(where:)((uint64_t (*)(uint64_t *))sub_2498CF52C, 0, v7, v8, (uint64_t *)&v13);
      if (v14)
        break;
      sub_2498CF980((uint64_t)&v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      v6 += 40;
      if (!--v5)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    sub_2498CF9C0(&v13, (uint64_t)v15);
    sub_2498CF9C0(v15, (uint64_t)&v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    if (*((_QWORD *)&v17 + 1))
    {
      sub_2498CF9C0(&v16, (uint64_t)v19);
      sub_2498CF8CC((uint64_t)v19, (uint64_t)&v16);
      sub_2498CE194((uint64_t)&v16, v11);
      v9 = v12;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return v9;
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
  }
  sub_2498CF980((uint64_t)&v16);
  return 0;
}

void sub_2498CE8AC(double a1, double a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = HIDFixed.init(doubleValue:)(a1);
  if ((v3 & 0x100000000) != 0)
    v3 = 0;
  else
    v3 = v3;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v3, 56);
  v4 = HIDFixed.init(doubleValue:)(a2);
  if ((v4 & 0x100000000) != 0)
    v4 = 0;
  else
    v4 = v4;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v4, 88);
}

uint64_t FluidTouchGestureFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t FluidTouchGestureFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t FluidTouchGestureFilter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FluidTouchGestureFilter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2498CE928()
{
  return FluidTouchGestureFilter.eventMask.getter();
}

uint64_t sub_2498CE948(uint64_t a1, _QWORD *a2)
{
  return FluidTouchGestureFilter.filterEvent(_:)(a1, a2) & 1;
}

uint64_t sub_2498CE96C(uint64_t a1, uint64_t a2)
{
  FluidTouchGestureFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2498CE994(uint64_t a1, uint64_t a2)
{
  FluidTouchGestureFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

void sub_2498CE9C4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8) >> 62;
  if ((a2 & 7) != 0)
    __asm { BR              X11 }
  __asm { BR              X11 }
}

void sub_2498CEAC0()
{
  char v0;

  OUTLINED_FUNCTION_2_1();
  if (!v0)
    __break(1u);
  JUMPOUT(0x2498CEA10);
}

void sub_2498CEAD8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_2_1();
  if (v2)
    v1 *= 8;
  else
    __break(1u);
  if (!__OFADD__(v1, v0))
    JUMPOUT(0x2498CEAB8);
  __break(1u);
  JUMPOUT(0x2498CEB10);
}

void sub_2498CEAF0()
{
  char v0;

  OUTLINED_FUNCTION_2_1();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x2498CEB08);
  }
  JUMPOUT(0x2498CEA4CLL);
}

void _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(uint64_t a1, char a2)
{
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_10_1();
    __asm { BR              X11 }
  }
  OUTLINED_FUNCTION_36();
  __asm { BR              X11 }
}

void sub_2498CED0C()
{
  char v0;

  OUTLINED_FUNCTION_2_1();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x2498CED24);
  }
  JUMPOUT(0x2498CEBD4);
}

void sub_2498CED94(uint64_t a1, char a2)
{
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_10_1();
    __asm { BR              X11 }
  }
  OUTLINED_FUNCTION_15_2();
  __asm { BR              X12 }
}

void sub_2498CEFC0(uint64_t a1, char a2)
{
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_10_1();
    __asm { BR              X11 }
  }
  OUTLINED_FUNCTION_36();
  __asm { BR              X11 }
}

void sub_2498CF174()
{
  char v0;

  OUTLINED_FUNCTION_2_1();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x2498CF18CLL);
  }
  JUMPOUT(0x2498CF03CLL);
}

void sub_2498CF1FC(uint64_t a1, char a2)
{
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_10_1();
    __asm { BR              X11 }
  }
  OUTLINED_FUNCTION_15_2();
  __asm { BR              X12 }
}

void sub_2498CF3D8()
{
  char v0;

  OUTLINED_FUNCTION_2_1();
  if (!v0)
  {
    __break(1u);
    JUMPOUT(0x2498CF3F0);
  }
  JUMPOUT(0x2498CF278);
}

uint64_t sub_2498CF460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (unsigned int *)(a1 + 32);
    while (1)
    {
      v5 = *v3++;
      v4 = v5;
      if (v5 >= 0x40)
        break;
      if (v4 == 63)
      {
        OUTLINED_FUNCTION_50();
        result = sub_249955D60();
        __break(1u);
        return result;
      }
      v6 = 1 << v4;
      if ((v6 & v2) == 0)
        goto LABEL_7;
LABEL_8:
      if (!--v1)
        goto LABEL_11;
    }
    v6 = 0;
LABEL_7:
    v2 |= v6;
    goto LABEL_8;
  }
  v2 = 0;
LABEL_11:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2498CF514(uint64_t a1, double a2)
{
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
    return sub_24992A420(a1, a2);
  __break(1u);
  return a1;
}

BOOL sub_2498CF530(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(unsigned int (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) == 9;
}

uint64_t sub_2498CF578(uint64_t a1)
{
  return sub_2498CF590(a1);
}

uint64_t sub_2498CF584(uint64_t a1)
{
  return sub_2498CF590(a1);
}

uint64_t sub_2498CF590(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_249955958();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2498CF614()
{
  return sub_2498CF620((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_249907B88);
}

uint64_t sub_2498CF620(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_2498CF674(uint64_t a1)
{
  return sub_2498CF680(a1, (uint64_t (*)(BOOL))sub_249907B88);
}

uint64_t sub_2498CF680(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_2498CF6C0(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_24995594C();
  return result;
}

unint64_t sub_2498CF6F0(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_2498CF710(unint64_t a1, unint64_t a2)
{
  sub_2498CF944();
  if (a2 >> 62)
  {
    sub_249955D9C();
    objc_opt_self();
    if (OUTLINED_FUNCTION_51())
      goto LABEL_7;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!OUTLINED_FUNCTION_51())
        goto LABEL_10;
LABEL_7:
      OUTLINED_FUNCTION_37();
      return;
    }
    __break(1u);
  }
LABEL_10:
  sub_249955C34();
  sub_2499558A4();
  sub_24995603C();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_24995603C();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_249955D78();
  __break(1u);
}

uint64_t sub_2498CF8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for FluidTouchGestureFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for FluidTouchGestureFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FluidTouchGestureFilter.__allocating_init(platform:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t sub_2498CF944()
{
  unint64_t result;

  result = qword_2578A2650;
  if (!qword_2578A2650)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578A2650);
  }
  return result;
}

uint64_t sub_2498CF980(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498CF9C0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_1(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 352))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_1_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_4_1(uint64_t a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_5_1(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_2498CF8CC(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 328))(v1, v2);
}

void OUTLINED_FUNCTION_13_1(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    a1 = 0;
  else
    a1 = a1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 56);
}

void OUTLINED_FUNCTION_14_1(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    a1 = 0;
  else
    a1 = a1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 88);
}

uint64_t OUTLINED_FUNCTION_16_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  return sub_2498CF8CC((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return IOHIDEventGetPhase();
}

double OUTLINED_FUNCTION_19_1()
{
  void *v0;
  double result;

  return result;
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return IOHIDEventGetFloatValue();
}

void OUTLINED_FUNCTION_25_1()
{
  unint64_t v0;
  uint64_t v1;

  sub_2498C8F2C(8, v1, v0);
}

id OUTLINED_FUNCTION_28_0()
{
  void *v0;

  return j_j__objc_retain(v0);
}

uint64_t OUTLINED_FUNCTION_29()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 352))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_30()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
}

void OUTLINED_FUNCTION_31(uint64_t a1)
{
  sub_2498CE9C4(a1, 24);
}

uint64_t OUTLINED_FUNCTION_32()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_33()
{
  return sub_24995561C();
}

void OUTLINED_FUNCTION_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(a25 + 16) = v27 + 1;
  v28 = a25 + 16 * v27;
  *(_QWORD *)(v28 + 32) = v25;
  *(_QWORD *)(v28 + 40) = v26;
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  return sub_2498CAC78(a15, a16);
}

uint64_t OUTLINED_FUNCTION_38()
{
  double v0;

  return sub_2498CF514(16, v0);
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_allocObject();
}

unint64_t OUTLINED_FUNCTION_40()
{
  return HIDFixed.init(doubleValue:)(0.0);
}

uint64_t OUTLINED_FUNCTION_41()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

void OUTLINED_FUNCTION_42()
{
  uint64_t v0;
  unint64_t v1;

  sub_2498C8F2C(8, v0, v1);
}

uint64_t OUTLINED_FUNCTION_43()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

double OUTLINED_FUNCTION_44()
{
  void *v0;
  double result;

  return result;
}

id OUTLINED_FUNCTION_46(id a1)
{
  return j_j__objc_retain(a1);
}

uint64_t OUTLINED_FUNCTION_48()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);

  return sub_2498CF620(v0);
}

uint64_t OUTLINED_FUNCTION_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return *(_QWORD *)(a25 + 16);
}

uint64_t OUTLINED_FUNCTION_51()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_52(double a1, double a2)
{
  return sub_2498CE6D4(a1, a2);
}

_QWORD *OUTLINED_FUNCTION_54(char *a1)
{
  uint64_t v1;
  uint64_t v2;

  return FluidTouchGestureFilter.init(platform:service:)(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_55(uint64_t a1)
{
  uint64_t (*v1)(BOOL);

  return sub_2498CF680(a1, v1);
}

uint64_t OUTLINED_FUNCTION_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_57()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_58()
{
  char v0;
  unsigned int v1;

  return v0 & 0x70 | v1;
}

uint64_t static GameControllerEvent.eventType.getter()
{
  return 35;
}

uint64_t GameControllerEvent.init(time:controllerType:dpadUp:dpadDown:dpadLeft:dpadRight:faceX:faceY:faceA:faceB:joystickLeft:thumbstickLeft:joystickRight:thumbstickRight:shoulderL1:shoulderL2:shoulderR1:shoulderR2:flags:)()
{
  uint64_t v0;

  v0 = IOHIDEventCreate();
  IOHIDEventSetIntegerValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetEventFlags();
  return v0;
}

uint64_t GameControllerEvent.init(event:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 35)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t GameControllerEvent.controllerType.getter()
{
  unint64_t result;

  result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  return result;
}

uint64_t GameControllerEvent.controllerType.setter()
{
  return OUTLINED_FUNCTION_10_2();
}

void GameControllerEvent.controllerType.modify(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = GameControllerEvent.controllerType.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0154()
{
  return OUTLINED_FUNCTION_10_2();
}

uint64_t GameControllerEvent.dpadUp.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadUp.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.dpadUp.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D01A4()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadDown.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadDown.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.dpadDown.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D01F8()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadLeft.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadLeft.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.dpadLeft.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D024C()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadRight.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadRight.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.dpadRight.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D02A0()
{
  return OUTLINED_FUNCTION_0_2();
}

double GameControllerEvent.joystickLeft.getter()
{
  return OUTLINED_FUNCTION_8_2();
}

void sub_2498D02C8(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GameControllerEvent.joystickLeft.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_2498D02F4()
{
  return GameControllerEvent.joystickLeft.setter();
}

uint64_t GameControllerEvent.joystickLeft.setter()
{
  return OUTLINED_FUNCTION_9_2();
}

void GameControllerEvent.joystickLeft.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  a1[3] = a2;
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_12_2();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = 0;
  OUTLINED_FUNCTION_13_2();
}

uint64_t sub_2498D0368()
{
  return OUTLINED_FUNCTION_11_2();
}

double GameControllerEvent.joystickRight.getter()
{
  return OUTLINED_FUNCTION_8_2();
}

double sub_2498D0390()
{
  double v0;
  double v1;

  IOHIDEventGetDoubleValue();
  v1 = v0;
  IOHIDEventGetDoubleValue();
  return v1;
}

void sub_2498D03D8(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GameControllerEvent.joystickRight.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_2498D0404()
{
  return GameControllerEvent.joystickRight.setter();
}

uint64_t GameControllerEvent.joystickRight.setter()
{
  return OUTLINED_FUNCTION_9_2();
}

uint64_t sub_2498D0424()
{
  IOHIDEventSetDoubleValue();
  return OUTLINED_FUNCTION_7_2();
}

void GameControllerEvent.joystickRight.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  a1[3] = a2;
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_12_2();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = 0;
  OUTLINED_FUNCTION_13_2();
}

uint64_t sub_2498D04AC()
{
  return OUTLINED_FUNCTION_11_2();
}

uint64_t sub_2498D04C0()
{
  IOHIDEventSetDoubleValue();
  return OUTLINED_FUNCTION_7_2();
}

uint64_t GameControllerEvent.buttonX.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonX.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonX.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D053C()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonY.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonY.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonY.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0590()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonA.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonA.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonA.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D05E4()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonB.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonB.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonB.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0638()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder1.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder1.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonLeftShoulder1.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D068C()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder2.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder2.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonLeftShoulder2.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D06E0()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonRightShoulder1.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonRightShoulder1.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonRightShoulder1.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0734()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonRightShoulder2.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonRightShoulder2.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonRightShoulder2.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0788()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonThumbstickLeft.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonThumbstickLeft.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonThumbstickLeft.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D07DC()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonThumbstickRight.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonThumbstickRight.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

void GameControllerEvent.buttonThumbstickRight.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_2();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0830()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t sub_2498D0844()
{
  return 35;
}

uint64_t sub_2498D084C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = GameControllerEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2498D0870@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_2498D0878()
{
  id *v0;

  return *v0;
}

void sub_2498D0880(uint64_t a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = GameControllerEvent.controllerType.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D08A0()
{
  return GameControllerEvent.controllerType.setter();
}

void sub_2498D08AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.dpadUp.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D08CC()
{
  return GameControllerEvent.dpadUp.setter();
}

void sub_2498D08D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.dpadDown.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D08F8()
{
  return GameControllerEvent.dpadDown.setter();
}

void sub_2498D0904(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.dpadLeft.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0924()
{
  return GameControllerEvent.dpadLeft.setter();
}

void sub_2498D0930(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.dpadRight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0950()
{
  return GameControllerEvent.dpadRight.setter();
}

void sub_2498D096C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonX.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D098C()
{
  return GameControllerEvent.buttonX.setter();
}

void sub_2498D0998(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonY.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D09B8()
{
  return GameControllerEvent.buttonY.setter();
}

void sub_2498D09C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonA.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D09E4()
{
  return GameControllerEvent.buttonA.setter();
}

void sub_2498D09F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonB.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0A10()
{
  return GameControllerEvent.buttonB.setter();
}

void sub_2498D0A1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonLeftShoulder1.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0A3C()
{
  return GameControllerEvent.buttonLeftShoulder1.setter();
}

void sub_2498D0A48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonLeftShoulder2.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0A68()
{
  return GameControllerEvent.buttonLeftShoulder2.setter();
}

void sub_2498D0A74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonRightShoulder1.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0A94()
{
  return GameControllerEvent.buttonRightShoulder1.setter();
}

void sub_2498D0AA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonRightShoulder2.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0AC0()
{
  return GameControllerEvent.buttonRightShoulder2.setter();
}

void sub_2498D0ACC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonThumbstickLeft.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0AEC()
{
  return GameControllerEvent.buttonThumbstickLeft.setter();
}

void sub_2498D0AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  GameControllerEvent.buttonThumbstickRight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D0B18()
{
  return GameControllerEvent.buttonThumbstickRight.setter();
}

ValueMetadata *type metadata accessor for GameControllerEvent()
{
  return &type metadata for GameControllerEvent;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return IOHIDEventSetDoubleValue();
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t OUTLINED_FUNCTION_2_2(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_6_2(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return IOHIDEventSetDoubleValue();
}

double OUTLINED_FUNCTION_8_2()
{
  return sub_2498D0390();
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return sub_2498D0424();
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_2498D04C0();
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t sub_2498D0BAC(uint64_t result)
{
  return result;
}

uint64_t sub_2498D0BB4(uint64_t result)
{
  return (unsigned __int16)result;
}

uint64_t ButtonUsage.init(rawValue:)(unsigned __int8 a1)
{
  unsigned __int8 v1;

  if (a1 <= 2u)
    v1 = a1;
  else
    v1 = 0;
  return v1 | ((a1 > 2u) << 8);
}

uint64_t static ButtonUsage.usageMinimum.getter()
{
  return 0;
}

uint64_t static ButtonUsage.usageMaximum.getter()
{
  return 2;
}

uint64_t sub_2498D0BF4@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = ButtonUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t static ButtonUsage.usagePage.getter()
{
  return 9;
}

uint64_t static ButtonUsage.primary.getter()
{
  return 0;
}

uint64_t static ButtonUsage.tertiary.getter()
{
  return 2;
}

uint64_t static ButtonUsage.secondary.getter()
{
  return 1;
}

unint64_t sub_2498D0C44(uint64_t a1)
{
  unint64_t result;

  result = sub_2498D0C68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2498D0C68()
{
  unint64_t result;

  result = qword_2578A0A18;
  if (!qword_2578A0A18)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonUsage, &type metadata for ButtonUsage);
    atomic_store(result, (unint64_t *)&qword_2578A0A18);
  }
  return result;
}

unint64_t sub_2498D0CA8()
{
  unint64_t result;

  result = qword_2578A0A20;
  if (!qword_2578A0A20)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonUsage, &type metadata for ButtonUsage);
    atomic_store(result, (unint64_t *)&qword_2578A0A20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonUsage()
{
  return &type metadata for ButtonUsage;
}

uint64_t static UInt8.logicalMaximum.getter()
{
  return 255;
}

void sub_2498D0D08(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_2498D0D10(_BYTE *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt16.logicalMaximum.getter()
{
  return 0xFFFFLL;
}

void sub_2498D0D28(_WORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_2498D0D30(_WORD *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt32.logicalMaximum.getter()
{
  return 0xFFFFFFFFLL;
}

void sub_2498D0D48(_DWORD *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt64.logicalMinimum.getter()
{
  return 0;
}

uint64_t static UInt64.logicalMaximum.getter()
{
  return -1;
}

void sub_2498D0D64(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_2498D0D6C(_QWORD *a1@<X8>)
{
  *a1 = -1;
}

double HIDReport.scaledValue<A>(as:atIndex:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  double v37;

  v33 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v35 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  swift_getAssociatedConformanceWitness();
  v36 = v17;
  HIDReport.subscript.getter(a2, a3, v33, AssociatedTypeWitness, (uint64_t)v17);
  OUTLINED_FUNCTION_21_2();
  v18 = OUTLINED_FUNCTION_19_2();
  v34 = v7;
  if (v18 < 65)
  {
    v20 = OUTLINED_FUNCTION_13_3();
    v21 = OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_14_2((uint64_t)v15);
    if ((v20 & 1) != 0)
      v19 = (double)v21;
    else
      v19 = (double)(unint64_t)v21;
  }
  else
  {
    sub_2498D1070();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_14_2((uint64_t)v15);
    v19 = v37;
  }
  OUTLINED_FUNCTION_21_2();
  v22 = OUTLINED_FUNCTION_19_2();
  v23 = (uint64_t)v35;
  if (v22 <= 64)
  {
    v25 = OUTLINED_FUNCTION_13_3();
    v26 = OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_14_2((uint64_t)v12);
    if ((v25 & 1) != 0)
      v24 = (double)v26;
    else
      v24 = (double)(unint64_t)v26;
  }
  else
  {
    sub_2498D1070();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_14_2((uint64_t)v12);
    v24 = v37;
  }
  v27 = (uint64_t)v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v23, v36, AssociatedTypeWitness);
  if (OUTLINED_FUNCTION_19_2() <= 64)
  {
    v29 = OUTLINED_FUNCTION_13_3();
    v30 = OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_14_2(v23);
    if ((v29 & 1) != 0)
      v28 = (double)v30;
    else
      v28 = (double)(unint64_t)v30;
  }
  else
  {
    sub_2498D1070();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_14_2(v23);
    v28 = v37;
  }
  OUTLINED_FUNCTION_14_2(v27);
  return (v28 - v19) / (v24 - v19);
}

unint64_t sub_2498D1070()
{
  unint64_t result;

  result = qword_2578A0A28;
  if (!qword_2578A0A28)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_2578A0A28);
  }
  return result;
}

unint64_t sub_2498D10AC()
{
  unint64_t result;

  result = qword_2578A0A30;
  if (!qword_2578A0A30)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2578A0A30);
  }
  return result;
}

void HIDReport.setScaledValue<A>(_:as:atIndex:)(double a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v31 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v22 = (char *)&v31 - v21;
  if (a4 == MEMORY[0x24BEE4260])
  {
    sub_2498D1964(0, 255, v15, v16, v17, v18, v19, v20, v31, v32, v33, SHIBYTE(v33), v35, v36, v37, v38, v39, v40, v41,
      v42,
      v43);
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_11_3();
    _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v23, v24);
  }
  else if (a4 == MEMORY[0x24BEE4478])
  {
    sub_2498D1874(0, 0xFFFFLL, v15, v16, v17, v18, v19, v20, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
      v42,
      v43);
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_11_3();
    _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(v25, v26);
  }
  else if (a4 == MEMORY[0x24BEE44F0])
  {
    sub_2498D16C0(0, 0xFFFFFFFFLL, a1);
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_11_3();
    _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v27, v28);
  }
  else if (a4 == MEMORY[0x24BEE4568])
  {
    sub_2498D150C(0, 0xFFFFFFFFFFFFFFFFLL, a1);
    OUTLINED_FUNCTION_26_1();
    OUTLINED_FUNCTION_11_3();
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v29, v30);
  }
  else
  {
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_24_2();
    swift_getAssociatedConformanceWitness();
    FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)((uint64_t)v14, (uint64_t)v11, AssociatedTypeWitness, (uint64_t)v22, a1);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v22, AssociatedTypeWitness);
    HIDReport.subscript.setter((uint64_t)v14, a3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v22, AssociatedTypeWitness);
    OUTLINED_FUNCTION_11_3();
  }
}

#error "2498D1370: call analysis failed (funcsize=52)"

#error "2498D1458: call analysis failed (funcsize=53)"

uint64_t sub_2498D150C(unint64_t a1, unint64_t a2, double a3)
{
  unint64_t v3;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;

  v3 = a2;
  v5 = (double)a1;
  v6 = (double)a2;
  v7 = (double)a2 - (double)a1;
  v8 = v7 * a3 + (double)a1;
  if (v8 > (double)a1)
    v9 = v7 * a3 + (double)a1;
  else
    v9 = (double)a1;
  if (v9 > v6)
    v9 = (double)a2;
  if (sub_2498D2050((uint64_t)&v15, v9) && (v16 & 1) == 0)
    return v15;
  v10 = 0.0 - v6;
  if (0.0 - v6 < INFINITY)
    *(_QWORD *)&v10 = ((COERCE__INT64(0.0 - v6) >> 63) | 1) + COERCE__INT64(0.0 - v6);
  v11 = -v10;
  if (v8 > v11)
    return v3;
  *(_QWORD *)&v12 = ((*(uint64_t *)&v5 >> 63) | 1) + *(_QWORD *)&v5;
  v13 = v12;
  v3 = a1;
  if (v8 < v12)
    return v3;
  if (v8 > v12)
    v13 = v8;
  if (v13 <= v11)
    v11 = v13;
  sub_2498D2050((uint64_t)&v15, v11);
  if ((v16 & 1) == 0)
    return v15;
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_249955C34();
  sub_2499558A4();
  sub_2499558A4();
  sub_2499558A4();
  sub_2499558A4();
  result = sub_249955D6C();
  __break(1u);
  return result;
}

uint64_t sub_2498D16C0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t result;
  _QWORD v15[2];

  v3 = a2;
  v5 = (double)a1;
  v6 = (double)a2;
  v7 = (double)a2 - (double)a1;
  v8 = v7 * a3 + (double)a1;
  if (v8 > (double)a1)
    v9 = v7 * a3 + (double)a1;
  else
    v9 = (double)a1;
  if (v9 > v6)
    v9 = (double)a2;
  if (sub_2498D2168((uint64_t)v15, v9) && (v15[0] & 0x100000000) == 0)
    return LODWORD(v15[0]);
  v10 = 0.0 - v6;
  if (0.0 - v6 < INFINITY)
    *(_QWORD *)&v10 = ((COERCE__INT64(0.0 - v6) >> 63) | 1) + COERCE__INT64(0.0 - v6);
  v11 = -v10;
  if (v8 > v11)
    return v3;
  *(_QWORD *)&v12 = ((*(uint64_t *)&v5 >> 63) | 1) + *(_QWORD *)&v5;
  v13 = v12;
  v3 = a1;
  if (v8 < v12)
    return v3;
  if (v8 > v12)
    v13 = v8;
  if (v13 <= v11)
    v11 = v13;
  sub_2498D2168((uint64_t)v15, v11);
  if ((v15[0] & 0x100000000) == 0)
    return LODWORD(v15[0]);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_249955C34();
  sub_2499558A4();
  sub_2499558A4();
  sub_2499558A4();
  sub_2499558A4();
  result = sub_249955D6C();
  __break(1u);
  return result;
}

void sub_2498D1874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  unsigned __int16 v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  char v31;
  char v32;
  char v33;
  char v34;
  double v35;
  double v36;

  OUTLINED_FUNCTION_27_2();
  a20 = v21;
  a21 = v24;
  OUTLINED_FUNCTION_23_2();
  v27 = OUTLINED_FUNCTION_16_2(v25, v26);
  if (v27 > v23)
    v27 = v23;
  if (sub_2498D22C0((uint64_t)&a11, v27) && (a12 & 1) == 0)
    goto LABEL_16;
  v28 = OUTLINED_FUNCTION_17_2();
  *(_QWORD *)&v30 = ((v29 >> 63) | 1) + v29;
  if (v31)
    v28 = v30;
  OUTLINED_FUNCTION_18_2(v28);
  if (!(v31 ^ v32 | v34))
    goto LABEL_16;
  OUTLINED_FUNCTION_2_3();
  if (v31)
    goto LABEL_16;
  if (!v34 & v33)
    v36 = v22;
  if (v36 <= v35)
    v35 = v36;
  sub_2498D22C0((uint64_t)&a11, v35);
  if ((a12 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_2();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_1_3();
    sub_2499558A4();
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_4_2();
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_5_2();
  }
}

void sub_2498D1964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  unsigned __int8 v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  char v31;
  char v32;
  char v33;
  char v34;
  double v35;
  double v36;

  OUTLINED_FUNCTION_27_2();
  a20 = v21;
  a21 = v24;
  OUTLINED_FUNCTION_23_2();
  v27 = OUTLINED_FUNCTION_16_2(v25, v26);
  if (v27 > v23)
    v27 = v23;
  if (sub_2498D241C(&a11, v27) && (a12 & 1) == 0)
    goto LABEL_16;
  v28 = OUTLINED_FUNCTION_17_2();
  *(_QWORD *)&v30 = ((v29 >> 63) | 1) + v29;
  if (v31)
    v28 = v30;
  OUTLINED_FUNCTION_18_2(v28);
  if (!(v31 ^ v32 | v34))
    goto LABEL_16;
  OUTLINED_FUNCTION_2_3();
  if (v31)
    goto LABEL_16;
  if (!v34 & v33)
    v36 = v22;
  if (v36 <= v35)
    v35 = v36;
  sub_2498D241C(&a11, v35);
  if ((a12 & 1) != 0)
  {
    OUTLINED_FUNCTION_3_2();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_4_2();
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_5_2();
  }
}

#error "2498D1A7C: call analysis failed (funcsize=50)"

uint64_t sub_2498D1B30()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  char v18;
  char v19;
  char v20;
  char v21;
  double v22;
  double v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_27_2();
  v29 = v0;
  v30 = v2;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_9_3();
  v15 = OUTLINED_FUNCTION_15_3(v7, v8, v9, v10, v11, v12, v13, v14, v25, v26, v27);
  if (sub_2498D2720((uint64_t)v15, v16) && (v28 & 1) == 0)
    return v27;
  v17 = OUTLINED_FUNCTION_8_3();
  if (v18)
    v17 = OUTLINED_FUNCTION_10_3(v17);
  OUTLINED_FUNCTION_18_2(v17);
  if (!(v18 ^ v19 | v21))
    return v4;
  OUTLINED_FUNCTION_2_3();
  v4 = v6;
  if (v18)
    return v4;
  if (!v21 & v20)
    v23 = v1;
  if (v23 <= v22)
    v22 = v23;
  sub_2498D2720((uint64_t)&v27, v22);
  if ((v28 & 1) == 0)
    return v27;
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_7_3();
  result = OUTLINED_FUNCTION_4_2();
  __break(1u);
  return result;
}

unint64_t sub_2498D1C28()
{
  unint64_t result;

  result = qword_2578A0A38;
  if (!qword_2578A0A38)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE42A0], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2578A0A38);
  }
  return result;
}

unint64_t sub_2498D1C68()
{
  unint64_t result;

  result = qword_2578A0A68;
  if (!qword_2578A0A68)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE44C0], MEMORY[0x24BEE4478]);
    atomic_store(result, (unint64_t *)&qword_2578A0A68);
  }
  return result;
}

unint64_t sub_2498D1CA8()
{
  unint64_t result;

  result = qword_2578A0A98;
  if (!qword_2578A0A98)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4540], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_2578A0A98);
  }
  return result;
}

BOOL sub_2498D1CE8(uint64_t a1, double a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v4 = LODWORD(a2);
  v5 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v6 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v7 = v5 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOWORD(v15) = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (v8 = sub_2499559AC(), v8 > 15))
  {
LABEL_38:
    LOWORD(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_249955994();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit64(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 15)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          LOWORD(v13) = 0;
        else
          v13 = v6 >> (v12 - v9);
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOWORD(v13) = 0;
      }
      else
      {
        v13 = v6 << v13;
      }
    }
    else
    {
      LOWORD(v13) = 0;
    }
LABEL_20:
    if (v9 != 15)
    {
      if (v9 < 0)
      {
        LOWORD(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_WORD)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -16 && v13 <= 16)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF0)
        goto LABEL_8;
      LODWORD(v13) = (unsigned __int16)v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x10)
        goto LABEL_8;
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 15)
    goto LABEL_37;
  LOWORD(v14) = 0;
  LOWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v15 = (__int16)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v7) = 0;
    LOWORD(v15) = 0x8000;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_29:
  *(_WORD *)a1 = v15;
  *(_BYTE *)(a1 + 2) = v7;
  return result;
}

BOOL sub_2498D1E9C(_BYTE *a1, double a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v4 = LODWORD(a2);
  v5 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v6 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v7 = v5 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v15) = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (v8 = sub_2499559AC(), v8 > 7))
  {
LABEL_38:
    LOBYTE(v15) = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_249955994();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit64(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 7)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          LOBYTE(v13) = 0;
        else
          v13 = v6 >> (v12 - v9);
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOBYTE(v13) = 0;
      }
      else
      {
        v13 = v6 << v13;
      }
    }
    else
    {
      LOBYTE(v13) = 0;
    }
LABEL_20:
    if (v9 != 7)
    {
      if (v9 < 0)
      {
        LOBYTE(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_BYTE)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -8 && v13 <= 8)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF8)
        goto LABEL_8;
      LODWORD(v13) = v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 8)
        goto LABEL_8;
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 7)
    goto LABEL_37;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v15 = (char)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v7) = 0;
    LOBYTE(v15) = 0x80;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_29:
  *a1 = v15;
  a1[1] = v7;
  return result;
}

BOOL sub_2498D2050(uint64_t a1, double a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v4 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v5 = v3 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (v5)
  {
    if (v3 != 2047 && a2 > -1.0)
    {
      v9 = sub_2499559AC();
      if (v9 <= 63)
      {
        v10 = v9;
        v11 = sub_249955994();
        v12 = v11 + __clz(__rbit64(v4));
        v13 = v10 - v12;
        if (__OFSUB__(v10, v12))
        {
          __break(1u);
        }
        else
        {
          if (v13 < -64 || v13 > 64)
          {
LABEL_12:
            v14 = 0;
            v15 = 0;
            if ((v10 & 0x8000000000000000) == 0)
              goto LABEL_22;
LABEL_23:
            LOBYTE(v5) = 0;
            v7 = v14 | v15;
            result = v10 >= v11;
            goto LABEL_24;
          }
          if ((v13 & 0x8000000000000000) == 0)
          {
            if ((unint64_t)v13 >= 0x40)
              goto LABEL_12;
            v14 = v4 << v13;
            if (v10 < 0)
              goto LABEL_17;
            goto LABEL_22;
          }
        }
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          goto LABEL_12;
        v14 = v4 >> (v12 - v10);
        if (v10 < 0)
        {
LABEL_17:
          v15 = 0;
          goto LABEL_23;
        }
LABEL_22:
        v15 = 1 << v10;
        goto LABEL_23;
      }
    }
    v7 = 0;
    result = 0;
    LOBYTE(v5) = 1;
  }
  else
  {
    v7 = 0;
    result = 1;
  }
LABEL_24:
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

BOOL sub_2498D2168(uint64_t a1, double a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_2499559AC();
    if (v10 <= 31)
    {
      v11 = v10;
      v12 = sub_249955994();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 31)
        {
          if (v14 < -32 || v14 > 32)
          {
LABEL_13:
            LODWORD(v14) = 0;
            v15 = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFE0)
              goto LABEL_13;
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x20)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          v15 = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LODWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LODWORD(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LODWORD(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_DWORD *)a1 = v8;
  *(_BYTE *)(a1 + 4) = v6;
  return result;
}

BOOL sub_2498D22C0(uint64_t a1, double a2)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int16 v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_2499559AC();
    if (v10 <= 15)
    {
      v11 = v10;
      v12 = sub_249955994();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 15)
        {
          if (v14 < -16 || v14 > 16)
          {
LABEL_13:
            LOWORD(v14) = 0;
            LOWORD(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF0)
              goto LABEL_13;
            LODWORD(v14) = (unsigned __int16)v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x10)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          LOWORD(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LOWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LOWORD(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LOWORD(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = v6;
  return result;
}

BOOL sub_2498D241C(_BYTE *a1, double a2)
{
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v3 = LODWORD(a2);
  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v8 = 0;
    result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    v10 = sub_2499559AC();
    if (v10 <= 7)
    {
      v11 = v10;
      v12 = sub_249955994();
      v13 = v12 + __clz(__rbit64(v5));
      v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 7)
        {
          if (v14 < -8 || v14 > 8)
          {
LABEL_13:
            LOBYTE(v14) = 0;
            LOBYTE(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0)
              goto LABEL_26;
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF8)
              goto LABEL_13;
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 8)
              goto LABEL_13;
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            v15 = 1 << v11;
            goto LABEL_27;
          }
          LOBYTE(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          v8 = v14 | v15;
          result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LOBYTE(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40)
            LOBYTE(v14) = 0;
          else
            v14 = v5 << v14;
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0)
        LOBYTE(v14) = 0;
      else
        v14 = v5 >> (v13 - v11);
      goto LABEL_24;
    }
  }
  v8 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *a1 = v8;
  a1[1] = v6;
  return result;
}

BOOL sub_2498D2578(uint64_t a1, double a2)
{
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v4 = LODWORD(a2);
  v5 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v6 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v7 = v5 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    v15 = 0;
    result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (v8 = sub_2499559AC(), v8 > 31))
  {
LABEL_38:
    v15 = 0;
    result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  v9 = v8;
  v10 = sub_249955994();
  result = v9 >= v10;
  v12 = v10 + __clz(__rbit64(v6));
  v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 31)
  {
    if ((unint64_t)(v13 - 65) > 0xFFFFFFFFFFFFFF7ELL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0)
          LODWORD(v13) = 0;
        else
          v13 = v6 >> (v12 - v9);
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LODWORD(v13) = 0;
      }
      else
      {
        v13 = v6 << v13;
      }
    }
    else
    {
      LODWORD(v13) = 0;
    }
LABEL_20:
    if (v9 != 31)
    {
      if (v9 < 0)
      {
        v14 = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_DWORD)v13)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v13 >= -32 && v13 <= 32)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFE0)
        goto LABEL_8;
      LODWORD(v13) = v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x20)
        goto LABEL_8;
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 31)
    goto LABEL_37;
  v14 = 0;
  LODWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0)
LABEL_23:
    v14 = 1 << v9;
LABEL_24:
  v15 = v13 | v14;
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    LOBYTE(v7) = 0;
    v15 = 0x80000000;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  v15 = -v15;
LABEL_29:
  *(_DWORD *)a1 = v15;
  *(_BYTE *)(a1 + 4) = v7;
  return result;
}

BOOL sub_2498D2720(uint64_t a1, double a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  unint64_t v14;

  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v12 = 0;
    result = 1;
    goto LABEL_22;
  }
  if (v4 != 2047)
  {
    v7 = sub_2499559AC();
    if (v7 <= 63)
    {
      v8 = v7;
      v9 = sub_249955994();
      result = v8 >= v9;
      v11 = v9 + __clz(__rbit64(v5));
      v12 = v8 - v11;
      if (__OFSUB__(v8, v11))
      {
        __break(1u);
      }
      else
      {
        if (v12 >= -64 && v12 <= 64)
        {
          if (v12 < 0)
            goto LABEL_29;
          if ((unint64_t)v12 < 0x40)
          {
            v14 = v5 << v12;
            goto LABEL_13;
          }
        }
LABEL_7:
        if (v8 != 63)
        {
          i = 0;
          v14 = 0;
          if (v8 < 0)
            goto LABEL_17;
LABEL_16:
          for (i = 1 << v8; ; i = 0)
          {
LABEL_17:
            v12 = v14 | i;
            if (a2 >= 0.0)
            {
              if ((v12 & 0x8000000000000000) == 0)
              {
                LOBYTE(v6) = 0;
                goto LABEL_22;
              }
            }
            else
            {
              if ((v12 & 0x8000000000000000) == 0)
              {
                LOBYTE(v6) = 0;
                v12 = -v12;
                goto LABEL_22;
              }
              __break(1u);
            }
            __break(1u);
LABEL_29:
            if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0)
              goto LABEL_7;
            v14 = v5 >> -(char)v12;
LABEL_13:
            if (v8 == 63)
              break;
            if ((v8 & 0x8000000000000000) == 0)
              goto LABEL_16;
          }
          if (a2 < 0.0 && !v14)
            goto LABEL_33;
          goto LABEL_25;
        }
      }
      if (a2 < 0.0)
      {
LABEL_33:
        LOBYTE(v6) = 0;
        v12 = 0x8000000000000000;
        goto LABEL_22;
      }
    }
  }
LABEL_25:
  v12 = 0;
  result = 0;
  LOBYTE(v6) = 1;
LABEL_22:
  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return sub_2499558A4();
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return sub_2499558A4();
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return sub_249955C34();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return sub_249955D6C();
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return sub_2499558A4();
}

double OUTLINED_FUNCTION_8_3()
{
  double v0;

  return 0.0 - v0;
}

double OUTLINED_FUNCTION_10_3(double a1)
{
  double result;

  *(_QWORD *)&result = ((*(uint64_t *)&a1 >> 63) | 1) + *(_QWORD *)&a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return sub_249955790();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_14_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

char *OUTLINED_FUNCTION_15_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

double OUTLINED_FUNCTION_16_2@<D0>(unsigned int a1@<W8>, double a2@<D0>)
{
  unsigned int v2;
  double v3;

  v3 = ((double)a1 - (double)v2) * a2;
  if (v3 + (double)v2 > (double)v2)
    return v3 + (double)v2;
  else
    return (double)v2;
}

double OUTLINED_FUNCTION_17_2()
{
  double v0;

  return 0.0 - v0;
}

double OUTLINED_FUNCTION_18_2(double a1)
{
  return -a1;
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return sub_2499558A4();
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

unint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_2498D10AC();
}

void static RotationEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for RotationGesture();
  *(_BYTE *)(swift_initStackObject() + 16) = v5;
  RotationGesture.dispatch(report:)(a1, a2);
}

uint64_t RotationGesture.__allocating_init(platform:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for RotationGesture()
{
  return objc_opt_self();
}

void RotationGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  sub_2498CAD4C(16, a1, a2);
  sub_2498C8F2C(8, a1, a2);
  mach_absolute_time();
  IOHIDEventCreateRotationEvent();
  __asm { BR              X10 }
}

uint64_t sub_2498D2BE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  uint64_t v18;
  uint64_t v19;

  if (((unint64_t)BYTE6(v2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498D2DB8);
  }
  if (BYTE6(v2) >= 0xCuLL)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    if (v3)
    {
      v18 = v3;
      v4 = sub_2498D3100((uint64_t)&v18, (uint64_t)&v19);
      v6 = v5;
      sub_2498CAC78(v4, v5);
      v7 = mach_absolute_time();
      sub_2498D2E30(v7, 16973568, 0, v4, v6);
      v9 = v8;
      IOHIDEventAppendEvent();

      sub_2498CACBC(v4, v6);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2499568A0;
  v11 = *(unsigned __int8 *)(v1 + 16);
  v12 = v0;
  v13 = mach_absolute_time();
  if (v11 == 1)
  {
    v14 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v13, 3, 0, 0, 0, 0);
    v15 = &protocol witness table for DigitizerEvent;
    v16 = &type metadata for DigitizerEvent;
  }
  else
  {
    v14 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v13, 0, 0);
    v15 = &protocol witness table for PointerEvent;
    v16 = &type metadata for PointerEvent;
  }
  IOHIDEventAppendEvent();

  *(_QWORD *)(v10 + 56) = v16;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v14;

  return v10;
}

void RotationGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t RotationGesture.init(platform:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t RotationGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RotationGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_2498D2E08(uint64_t a1)
{
  RotationGesture.dispatch(report:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_2498D2E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

_QWORD *sub_2498D2E80()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v2 = sub_2498D6F04(v1, v0 & 0xFFFFFFFFFFFFLL, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *, char *))sub_2498D3678, (uint64_t)&v4, BYTE6(v0));
  sub_2498CACBC(v1, v0);
  return v2;
}

uint64_t sub_2498D2F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if ((a5 & 0x8000000000000000) == 0 && !HIDWORD(a5))
  {
    if (a1)
      return IOHIDEventCreateVendorDefinedEvent();
    __break(1u);
  }
  result = sub_249955D60();
  __break(1u);
  return result;
}

uint64_t sub_2498D3060(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BB8);
  v10 = sub_2498D35C4();
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = *v2 + 32;
  v4 = v3 + *(_QWORD *)(*v2 + 16);
  swift_bridgeObjectRetain();
  sub_2498D3550(v3, v4, &v7);
  swift_bridgeObjectRelease();
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_2498D3100(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x24BEE0F88];
  v8[4] = MEMORY[0x24BDCFB90];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x24BEE0F88]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_2499555B0();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x24BCFA7D0]();
    }
    else
    {
      v6 = MEMORY[0x24BCFA7E8]();
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

void sub_2498D31B8(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[5];

  v3[3] = MEMORY[0x24BDCDDE8];
  v3[4] = MEMORY[0x24BDCDDC8];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_2498D320C
     + *((int *)qword_2498D3328 + (__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x24BDCDDE8])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_2498D321C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_4();
  sub_2498D33F4(BYTE6(v2), &v5);
  sub_2498CACBC(v1, v0);
  v3 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  return v3;
}

_UNKNOWN **sub_2498D3338()
{
  return &protocol witness table for RotationReport;
}

_UNKNOWN **sub_2498D3344()
{
  return &protocol witness table for RotationReport;
}

uint64_t method lookup function for RotationGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RotationGesture.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2498D3364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_24995555C();
  v7 = result;
  if (result)
  {
    result = sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_249955568();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return sub_2498D3550(v7, v13, a3);
}

uint64_t sub_2498D33F4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  if (a1)
  {
    if (a1 <= 14)
    {
      result = sub_2499555B0();
      v6 = v7 & 0xFFFFFFFFFFFFFFLL;
    }
    else
    {
      sub_249955580();
      swift_allocObject();
      v4 = sub_249955550();
      if ((unint64_t)a1 >= 0x7FFFFFFF)
      {
        sub_2499555F8();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = a1;
        v6 = v4 | 0x8000000000000000;
      }
      else
      {
        result = a1 << 32;
        v6 = v4 | 0x4000000000000000;
      }
    }
  }
  else
  {
    result = 0;
    v6 = 0xC000000000000000;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2498D3550@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_2499555B0();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x24BCFA7D0]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x24BCFA7E8]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

unint64_t sub_2498D35C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A0BC0;
  if (!qword_2578A0BC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A0BB8);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDCFBE0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A0BC0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCFB8F8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2498D364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int *a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;

  result = sub_2498D2F78(a1, a2, a3, *a4, a5);
  if (!v6)
    *a6 = result;
  return result;
}

uint64_t sub_2498D3678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_2498D364C(a1, a2, *(_QWORD *)(v3 + 16), *(unsigned int **)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t static GenericGestureReport.initialReportBitCount.getter()
{
  return 48;
}

uint64_t static GenericGestureReport.reportID.getter()
{
  return 20;
}

uint64_t sub_2498D36B4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498D36D4();
  *(_QWORD *)&xmmword_2578A0BC8 = result;
  *((_QWORD *)&xmmword_2578A0BC8 + 1) = v1;
  return result;
}

uint64_t sub_2498D36D4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 1);
  v13 = v0;
  v14 = v1;
  v2 = sub_2498D37DC();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4B60);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for ApplicationCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_2498D37DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  _QWORD v112[2];
  char v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  _QWORD v117[2];
  _BYTE v118[5];
  _QWORD v119[3];

  LOBYTE(v119[0]) = 5;
  sub_2498FCA34((uint64_t)v119, 0xFF1AuLL);
  v74 = v1;
  v75 = v0;
  LOBYTE(v119[0]) = 17;
  sub_2498FCA34((uint64_t)v119, 0xE0F5uLL);
  v91 = v3;
  v92 = v2;
  LOBYTE(v119[0]) = 6;
  sub_2498FC7A0((uint64_t)v119, 0);
  v5 = v4;
  v64 = v4;
  v90 = v6;
  LOBYTE(v119[0]) = 7;
  sub_2498FC7A0((uint64_t)v119, 255);
  v8 = v7;
  v63 = v7;
  v10 = v9;
  LOBYTE(v119[0]) = 12;
  sub_2498FCA34((uint64_t)v119, 8uLL);
  v83 = v12;
  v84 = v11;
  LOBYTE(v119[0]) = 14;
  sub_2498FC7A0((uint64_t)v119, 1);
  v81 = v14;
  v82 = v13;
  LOBYTE(v117[0]) = 0;
  LOBYTE(v114) = 1;
  LOBYTE(v112[0]) = 0;
  *(_WORD *)&v118[3] = 0;
  *(_WORD *)&v118[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v117, &v114, v112, &v118[4], &v118[3], &v118[2], &v118[1], v119);
  LOBYTE(v117[0]) = 5;
  sub_2498FCA34((uint64_t)v117, 0xFF1AuLL);
  v79 = v16;
  v80 = v15;
  LOBYTE(v117[0]) = 17;
  sub_2498FCA34((uint64_t)v117, 0xE0F6uLL);
  v77 = v18;
  v78 = v17;
  LOBYTE(v117[0]) = 6;
  sub_2498FC7A0((uint64_t)v117, 0);
  v76 = v19;
  v111 = v20;
  LOBYTE(v117[0]) = 7;
  sub_2498FC7A0((uint64_t)v117, 255);
  v109 = v22;
  v110 = v21;
  LOBYTE(v117[0]) = 12;
  sub_2498FCA34((uint64_t)v117, 8uLL);
  v107 = v24;
  v108 = v23;
  LOBYTE(v117[0]) = 14;
  sub_2498FC7A0((uint64_t)v117, 1);
  v105 = v26;
  v106 = v25;
  LOBYTE(v114) = 0;
  LOBYTE(v112[0]) = 1;
  memset(v118, 0, sizeof(v118));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v114, v112, &v118[4], &v118[3], &v118[2], &v118[1], v118, v117);
  LOBYTE(v114) = 5;
  sub_2498FCA34((uint64_t)&v114, 0xFF1AuLL);
  v103 = v28;
  v104 = v27;
  LOBYTE(v114) = 17;
  sub_2498FCA34((uint64_t)&v114, 0xE0F7uLL);
  v101 = v30;
  v102 = v29;
  LOBYTE(v114) = 6;
  sub_2498FC7A0((uint64_t)&v114, 0);
  v99 = v32;
  v100 = v31;
  LOBYTE(v114) = 7;
  sub_2498FC7A0((uint64_t)&v114, 255);
  v97 = v34;
  v98 = v33;
  LOBYTE(v114) = 12;
  sub_2498FCA34((uint64_t)&v114, 8uLL);
  v95 = v36;
  v96 = v35;
  LOBYTE(v114) = 14;
  sub_2498FC7A0((uint64_t)&v114, 1);
  v93 = v38;
  v94 = v37;
  LOBYTE(v112[0]) = 0;
  v118[4] = 1;
  *(_WORD *)&v118[2] = 0;
  *(_WORD *)v118 = 0;
  v116 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v112, &v118[4], &v118[3], &v118[2], &v118[1], v118, &v116, &v114);
  LOBYTE(v112[0]) = 5;
  sub_2498FCA34((uint64_t)v112, 0xFF1AuLL);
  v88 = v40;
  v89 = v39;
  LOBYTE(v112[0]) = 17;
  sub_2498FCA34((uint64_t)v112, 0xE0F8uLL);
  v86 = v42;
  v87 = v41;
  LOBYTE(v112[0]) = 6;
  sub_2498FC7A0((uint64_t)v112, 0);
  v85 = v43;
  v73 = v44;
  LOBYTE(v112[0]) = 7;
  sub_2498FC7A0((uint64_t)v112, 0xFFFFLL);
  v71 = v46;
  v72 = v45;
  LOBYTE(v112[0]) = 12;
  sub_2498FCA34((uint64_t)v112, 0x10uLL);
  v69 = v48;
  v70 = v47;
  LOBYTE(v112[0]) = 14;
  sub_2498FC7A0((uint64_t)v112, 1);
  v67 = v50;
  v68 = v49;
  *(_WORD *)&v118[3] = 1;
  *(_WORD *)&v118[1] = 0;
  v118[0] = 0;
  v116 = 0;
  v113 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v118[4], &v118[3], &v118[2], &v118[1], v118, &v116, &v113, v112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_249957010;
  *(_QWORD *)(v51 + 56) = &type metadata for ReportID;
  *(_QWORD *)(v51 + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(v51 + 32) = 20;
  *(_QWORD *)(v51 + 96) = &type metadata for UsagePage;
  *(_QWORD *)(v51 + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(v51 + 72) = v75;
  *(_QWORD *)(v51 + 80) = v74;
  *(_QWORD *)(v51 + 136) = &type metadata for Usage;
  *(_QWORD *)(v51 + 144) = &protocol witness table for Usage;
  *(_QWORD *)(v51 + 112) = v92;
  *(_QWORD *)(v51 + 120) = v91;
  *(_QWORD *)(v51 + 176) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v51 + 184) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(v51 + 152) = v5;
  *(_QWORD *)(v51 + 160) = v90;
  *(_QWORD *)(v51 + 216) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v51 + 224) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v51 + 192) = v8;
  *(_QWORD *)(v51 + 200) = v10;
  *(_QWORD *)(v51 + 656) = &type metadata for UsagePage;
  *(_QWORD *)(v51 + 936) = &type metadata for UsagePage;
  *(_QWORD *)(v51 + 376) = &type metadata for UsagePage;
  *(_QWORD *)(v51 + 384) = &protocol witness table for UsagePage;
  *(_QWORD *)(v51 + 664) = &protocol witness table for UsagePage;
  *(_QWORD *)(v51 + 944) = &protocol witness table for UsagePage;
  *(_QWORD *)(v51 + 256) = &type metadata for ReportSize;
  *(_QWORD *)(v51 + 264) = &protocol witness table for ReportSize;
  *(_QWORD *)(v51 + 232) = v84;
  *(_QWORD *)(v51 + 240) = v83;
  *(_QWORD *)(v51 + 696) = &type metadata for Usage;
  *(_QWORD *)(v51 + 976) = &type metadata for Usage;
  *(_QWORD *)(v51 + 416) = &type metadata for Usage;
  *(_QWORD *)(v51 + 424) = &protocol witness table for Usage;
  *(_QWORD *)(v51 + 704) = &protocol witness table for Usage;
  *(_QWORD *)(v51 + 984) = &protocol witness table for Usage;
  *(_QWORD *)(v51 + 296) = &type metadata for ReportCount;
  *(_QWORD *)(v51 + 304) = &protocol witness table for ReportCount;
  *(_QWORD *)(v51 + 272) = v82;
  *(_QWORD *)(v51 + 280) = v81;
  *(_QWORD *)(v51 + 456) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v51 + 464) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(v51 + 736) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v51 + 744) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(v51 + 1016) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v51 + 1024) = &protocol witness table for LogicalMinimum;
  v65 = v119[0];
  v52 = v119[0];
  v66 = v119[1];
  *(_QWORD *)(v51 + 776) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v51 + 1056) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v51 + 496) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v51 + 504) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v51 + 784) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v51 + 1064) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v51 + 336) = &type metadata for Input;
  *(_QWORD *)(v51 + 344) = &protocol witness table for Input;
  *(_QWORD *)(v51 + 312) = v52;
  *(_QWORD *)(v51 + 320) = v66;
  *(_QWORD *)(v51 + 352) = v80;
  *(_QWORD *)(v51 + 360) = v79;
  *(_QWORD *)(v51 + 392) = v78;
  *(_QWORD *)(v51 + 400) = v77;
  *(_QWORD *)(v51 + 432) = v76;
  *(_QWORD *)(v51 + 440) = v111;
  *(_QWORD *)(v51 + 472) = v110;
  *(_QWORD *)(v51 + 480) = v109;
  *(_QWORD *)(v51 + 536) = &type metadata for ReportSize;
  *(_QWORD *)(v51 + 544) = &protocol witness table for ReportSize;
  *(_QWORD *)(v51 + 512) = v108;
  *(_QWORD *)(v51 + 520) = v107;
  *(_QWORD *)(v51 + 576) = &type metadata for ReportCount;
  *(_QWORD *)(v51 + 584) = &protocol witness table for ReportCount;
  *(_QWORD *)(v51 + 552) = v106;
  *(_QWORD *)(v51 + 560) = v105;
  *(_QWORD *)(v51 + 816) = &type metadata for ReportSize;
  *(_QWORD *)(v51 + 824) = &protocol witness table for ReportSize;
  *(_QWORD *)(v51 + 1096) = &type metadata for ReportSize;
  *(_QWORD *)(v51 + 1104) = &protocol witness table for ReportSize;
  v61 = v117[0];
  v53 = v117[0];
  v62 = v117[1];
  *(_QWORD *)(v51 + 616) = &type metadata for Input;
  *(_QWORD *)(v51 + 624) = &protocol witness table for Input;
  *(_QWORD *)(v51 + 592) = v53;
  *(_QWORD *)(v51 + 600) = v62;
  *(_QWORD *)(v51 + 632) = v104;
  *(_QWORD *)(v51 + 640) = v103;
  *(_QWORD *)(v51 + 672) = v102;
  *(_QWORD *)(v51 + 680) = v101;
  *(_QWORD *)(v51 + 712) = v100;
  *(_QWORD *)(v51 + 720) = v99;
  *(_QWORD *)(v51 + 752) = v98;
  *(_QWORD *)(v51 + 760) = v97;
  *(_QWORD *)(v51 + 792) = v96;
  *(_QWORD *)(v51 + 800) = v95;
  *(_QWORD *)(v51 + 856) = &type metadata for ReportCount;
  *(_QWORD *)(v51 + 864) = &protocol witness table for ReportCount;
  *(_QWORD *)(v51 + 832) = v94;
  *(_QWORD *)(v51 + 840) = v93;
  *(_QWORD *)(v51 + 1136) = &type metadata for ReportCount;
  *(_QWORD *)(v51 + 1144) = &protocol witness table for ReportCount;
  v59 = v115;
  v54 = v115;
  v60 = v114;
  *(_QWORD *)(v51 + 896) = &type metadata for Input;
  *(_QWORD *)(v51 + 904) = &protocol witness table for Input;
  *(_QWORD *)(v51 + 872) = v60;
  *(_QWORD *)(v51 + 880) = v54;
  *(_QWORD *)(v51 + 912) = v89;
  *(_QWORD *)(v51 + 920) = v88;
  *(_QWORD *)(v51 + 952) = v87;
  *(_QWORD *)(v51 + 960) = v86;
  *(_QWORD *)(v51 + 992) = v85;
  *(_QWORD *)(v51 + 1000) = v73;
  *(_QWORD *)(v51 + 1032) = v72;
  *(_QWORD *)(v51 + 1040) = v71;
  *(_QWORD *)(v51 + 1072) = v70;
  *(_QWORD *)(v51 + 1080) = v69;
  *(_QWORD *)(v51 + 1112) = v68;
  *(_QWORD *)(v51 + 1120) = v67;
  *(_QWORD *)(v51 + 1176) = &type metadata for Input;
  *(_QWORD *)(v51 + 1184) = &protocol witness table for Input;
  v56 = v112[0];
  v57 = v112[1];
  *(_QWORD *)(v51 + 1152) = v112[0];
  *(_QWORD *)(v51 + 1160) = v57;
  sub_2498CAC78(v75, v74);
  sub_2498CAC78(v92, v91);
  sub_2498CAC78(v64, v90);
  sub_2498CAC78(v63, v10);
  sub_2498CAC78(v84, v83);
  sub_2498CAC78(v82, v81);
  sub_2498CAC78(v65, v66);
  sub_2498CAC78(v80, v79);
  sub_2498CAC78(v78, v77);
  sub_2498CAC78(v76, v111);
  sub_2498CAC78(v110, v109);
  sub_2498CAC78(v108, v107);
  sub_2498CAC78(v106, v105);
  sub_2498CAC78(v61, v62);
  sub_2498CAC78(v104, v103);
  sub_2498CAC78(v102, v101);
  sub_2498CAC78(v100, v99);
  sub_2498CAC78(v98, v97);
  sub_2498CAC78(v96, v95);
  sub_2498CAC78(v94, v93);
  sub_2498CAC78(v60, v59);
  sub_2498CAC78(v89, v88);
  sub_2498CAC78(v87, v86);
  sub_2498CAC78(v85, v73);
  sub_2498CAC78(v72, v71);
  sub_2498CAC78(v70, v69);
  sub_2498CAC78(v68, v67);
  sub_2498CAC78(v56, v57);
  v58 = static HIDReportDescriptor.Builder.buildBlock(_:)(v51);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v56, v57);
  sub_2498CACBC(v68, v67);
  sub_2498CACBC(v70, v69);
  sub_2498CACBC(v72, v71);
  sub_2498CACBC(v85, v73);
  sub_2498CACBC(v87, v86);
  sub_2498CACBC(v89, v88);
  sub_2498CACBC(v60, v59);
  sub_2498CACBC(v94, v93);
  sub_2498CACBC(v96, v95);
  sub_2498CACBC(v98, v97);
  sub_2498CACBC(v100, v99);
  sub_2498CACBC(v102, v101);
  sub_2498CACBC(v104, v103);
  sub_2498CACBC(v61, v62);
  sub_2498CACBC(v106, v105);
  sub_2498CACBC(v108, v107);
  sub_2498CACBC(v110, v109);
  sub_2498CACBC(v76, v111);
  sub_2498CACBC(v78, v77);
  sub_2498CACBC(v80, v79);
  sub_2498CACBC(v65, v66);
  sub_2498CACBC(v82, v81);
  sub_2498CACBC(v84, v83);
  sub_2498CACBC(v63, v10);
  sub_2498CACBC(v64, v90);
  sub_2498CACBC(v92, v91);
  sub_2498CACBC(v75, v74);
  return v58;
}

uint64_t static GenericGestureReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0730 != -1)
    swift_once();
  v2 = xmmword_2578A0BC8;
  *a1 = xmmword_2578A0BC8;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498D40A0()
{
  return 48;
}

uint64_t sub_2498D40AC()
{
  return 20;
}

void GenericGestureReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t GenericGestureReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*GenericGestureReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498D4124()
{
  uint64_t v0;

  sub_2498CAC78(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D4150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*sub_2498D4184())()
{
  return nullsub_1;
}

void sub_2498D4194(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = GenericGestureReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D41B4()
{
  uint64_t v0;

  sub_2499507C0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_2498D41C0(_QWORD *a1, _QWORD *a2)
{
  static GenericGestureReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void GenericGestureReport.phaseBits.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_2498D41E4(_BYTE *a1@<X8>)
{
  char v2;

  GenericGestureReport.phaseBits.getter();
  *a1 = v2;
}

uint64_t GenericGestureReport.phaseBits.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

void GenericGestureReport.phaseBits.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_1_4();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D4248(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 8);
  OUTLINED_FUNCTION_6_0();
}

uint64_t GenericGestureReport.phase.getter()
{
  int v0;

  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return v0 & 0xFFFFFF8F;
}

uint64_t sub_2498D4290@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = GenericGestureReport.phase.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.phase.setter()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_4();
  v1 = OUTLINED_FUNCTION_3_3(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

void GenericGestureReport.phase.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_1_4();
  *(_BYTE *)(a1 + 8) = v3 & 0x8F;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D4314()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_4();
  v1 = OUTLINED_FUNCTION_3_3(v0);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

unint64_t GenericGestureReport.gestureType.getter()
{
  unsigned __int8 v0;

  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return GenericGestureType.init(rawValue:)(v0);
}

unint64_t sub_2498D4360@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result;

  result = GenericGestureReport.gestureType.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.gestureType.setter(uint64_t a1)
{
  if (a1 >= 0xFF)
    a1 = 255;
  else
    a1 = a1;
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 16);
}

void GenericGestureReport.gestureType.modify(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v3;

  *(_QWORD *)a1 = v1;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_DWORD *)(a1 + 8) = GenericGestureType.init(rawValue:)(v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D43E0(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 0xFF)
    v2 = 255;
  else
    v2 = v1;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 16);
  OUTLINED_FUNCTION_6_0();
}

void GenericGestureReport.tapCount.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_2498D4420(_BYTE *a1@<X8>)
{
  char v2;

  GenericGestureReport.tapCount.getter();
  *a1 = v2;
}

uint64_t GenericGestureReport.tapCount.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 24);
}

void GenericGestureReport.tapCount.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D448C(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 24);
  OUTLINED_FUNCTION_6_0();
}

#error "2498D44C4: call analysis failed (funcsize=13)"

void sub_2498D44E4(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = GenericGestureReport.swipeProgress.getter(*a1, a1[1]);
}

#error "2498D4534: call analysis failed (funcsize=13)"

#error "2498D4560: call analysis failed (funcsize=18)"

void sub_2498D4590(double *a1)
{
  GenericGestureReport.swipeProgress.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D45B4(unsigned __int8 *a1)
{
  GenericGestureReport.phaseBits.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D45D8()
{
  GenericGestureReport.phase.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D45FC(unsigned int *a1)
{
  GenericGestureReport.gestureType.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D4620(unsigned __int8 *a1)
{
  GenericGestureReport.tapCount.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D4644(double *a1)
{
  GenericGestureReport.swipeProgress.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for HIDReport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_2498CAC78(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for HIDReport(uint64_t a1)
{
  return sub_2498CACBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for HIDReport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_2498CAC78(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2498CACBC(v5, v6);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *assignWithTake for HIDReport(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2498CACBC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDReport(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for HIDReport(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericGestureReport()
{
  return &type metadata for GenericGestureReport;
}

void OUTLINED_FUNCTION_1_4()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_3_3(unsigned int a1)
{
  int v1;

  return v1 & 0xFFFFFF8F | (16 * ((a1 >> 4) & 7));
}

uint64_t HIDScrollMomentum.rawValue.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDScrollMomentum.rawValue.modify())()
{
  return nullsub_1;
}

void *static HIDScrollMomentum.allCases.getter()
{
  return &unk_251AC4BD8;
}

unint64_t HIDScrollMomentum.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || result >= 0x100)
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  return result;
}

uint64_t static HIDScrollMomentum.start.getter()
{
  return 2;
}

uint64_t static HIDScrollMomentum.continue.getter()
{
  return 1;
}

uint64_t static HIDScrollMomentum.end.getter()
{
  return 4;
}

uint64_t static HIDScrollMomentum.interrupted.getter()
{
  return 16;
}

_BYTE *sub_2498D48DC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2498D48E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AC4BD8;
}

void sub_2498D48F8(_BYTE *a1@<X8>)
{
  *a1 = j__OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D4918(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_249914570(*a1, *v1);
}

uint64_t sub_2498D4924@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = j__OUTLINED_FUNCTION_52_4(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_2498D4950(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;

  *a2 = j__OUTLINED_FUNCTION_55_3(*a1, *v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D4978(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;

  *a2 = j__OUTLINED_FUNCTION_54_3(*a1, *v2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D49A0(uint64_t a1, unsigned __int8 *a2)
{
  return sub_24991451C(a1, *a2);
}

uint64_t sub_2498D49A8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2499509C8(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2498D49D8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_249950A5C(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2498D4A08(unsigned __int8 *a1)
{
  return sub_2499145C0(*a1);
}

uint64_t sub_2498D4A10(unsigned __int8 *a1)
{
  return sub_249914520(*a1);
}

uint64_t sub_2498D4A18(unsigned __int8 *a1)
{
  return sub_249914534(*a1);
}

uint64_t sub_2498D4A20@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_249955068(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2498D4A4C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_249914578(*a1, *v1);
}

uint64_t sub_2498D4A58(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_24995506C(*a1, *v1);
}

BOOL sub_2498D4A64()
{
  char *v0;

  return sub_2498D4AF8(*v0);
}

void sub_2498D4A6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_3();
  if (qword_2578A07D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  HIDReport.init(bitCount:id:)(v0, 6);
  OUTLINED_FUNCTION_4_3();
}

BOOL sub_2498D4AE0(uint64_t a1)
{
  return a1 == 0;
}

BOOL sub_2498D4AEC(int a1)
{
  return a1 == 0;
}

BOOL sub_2498D4AF8(char a1)
{
  return a1 == 0;
}

void sub_2498D4B04()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_3();
  if (qword_2578A0768 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  HIDReport.init(bitCount:id:)(v0, 2);
  OUTLINED_FUNCTION_4_3();
}

void sub_2498D4B78()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_3();
  if (qword_2578A0750 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  HIDReport.init(bitCount:id:)(v0, 1);
  OUTLINED_FUNCTION_4_3();
}

void sub_2498D4BEC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_3();
  if (qword_2578A0740 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  HIDReport.init(bitCount:id:)(v0, 4);
  OUTLINED_FUNCTION_4_3();
}

void sub_2498D4C60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_3();
  if (qword_2578A0758 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  HIDReport.init(bitCount:id:)(v0, 3);
  OUTLINED_FUNCTION_4_3();
}

uint64_t sub_2498D4CD4()
{
  return sub_249955BEC();
}

uint64_t sub_2498D4CEC(unsigned __int8 *a1)
{
  return sub_2499145D0(*a1);
}

unsigned __int8 *sub_2498D4CF4@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2498D4D04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249950610();
  *a1 = result;
  return result;
}

uint64_t HIDScrollMomentum.description.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = MEMORY[0x24BEE4AF8];
  if ((a1 & 2) != 0)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_2498D5E0C();
    v3 = v16;
    OUTLINED_FUNCTION_25_3();
    if (v4)
    {
      OUTLINED_FUNCTION_9_4();
      v3 = v16;
    }
    OUTLINED_FUNCTION_23_3();
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    if ((OUTLINED_FUNCTION_27_3() & 1) == 0)
      OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_25_3();
    if (v4)
      OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_23_3();
  }
  if ((a1 & 4) != 0)
  {
    if ((OUTLINED_FUNCTION_27_3() & 1) == 0)
      OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_25_3();
    if (v4)
      OUTLINED_FUNCTION_9_4();
    OUTLINED_FUNCTION_23_3();
  }
  if ((a1 & 0x10) != 0)
  {
    if ((OUTLINED_FUNCTION_27_3() & 1) == 0)
      OUTLINED_FUNCTION_8_4();
    v5 = *(_QWORD *)(v3 + 16);
    v6 = v5 + 1;
    if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      sub_2498D5E0C();
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + v5 + 32) = 16;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (!v6)
      goto LABEL_38;
  }
  sub_2498D5D6C(0, v6, 0);
  v7 = 0;
  do
  {
    if ((*(_BYTE *)(v3 + v7 + 32) & 2) != 0)
    {
      v10 = 0xE500000000000000;
      v8 = 0x7472617473;
    }
    else if ((*(_BYTE *)(v3 + v7 + 32) & 1) != 0)
    {
      v10 = 0xE800000000000000;
      v8 = 0x65756E69746E6F63;
    }
    else if ((*(_BYTE *)(v3 + v7 + 32) & 4) != 0)
    {
      v10 = 0xE300000000000000;
      v8 = 6581861;
    }
    else if ((*(_BYTE *)(v3 + v7 + 32) & 0x10) != 0)
    {
      v10 = 0xEB00000000646574;
      v8 = 0x7075727265746E69;
    }
    else
    {
      v8 = sub_249955EF8();
      v10 = v9;
    }
    v12 = *(_QWORD *)(v2 + 16);
    v11 = *(_QWORD *)(v2 + 24);
    if (v12 >= v11 >> 1)
      sub_2498D5D6C(v11 > 1, v12 + 1, 1);
    ++v7;
    *(_QWORD *)(v2 + 16) = v12 + 1;
    v13 = v2 + 16 * v12;
    *(_QWORD *)(v13 + 32) = v8;
    *(_QWORD *)(v13 + 40) = v10;
  }
  while (v6 != v7);
LABEL_38:
  OUTLINED_FUNCTION_14_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BE0);
  sub_2498D5EDC((unint64_t *)&qword_2578A0BE8, &qword_2578A0BE0, MEMORY[0x24BEE12B0]);
  v14 = sub_2499557E4();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2498D5014()
{
  char *v0;

  return HIDScrollMomentum.description.getter(*v0);
}

char *sub_2498D501C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2498D5074(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2498D50D0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2498D5134(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_50();
    __src = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_2498D5194(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_249955DCC();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_2498D5218(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2498D5274(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

uint64_t sub_2498D52D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_249955DCC();
    __break(1u);
  }
  else if (a3 < a1
         || (result = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80);
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_2498D53D8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_249955DCC();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_2498D5458(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[144 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

uint64_t sub_2498D54B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249955DCC();
  __break(1u);
  return result;
}

void *sub_2498D5580(char *a1, size_t a2, char *a3)
{
  void *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    if (&a3[a2] <= a1 || &a1[a2] <= a3)
      return OUTLINED_FUNCTION_7_4(a3, a1, a2);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_10_4();
  }
  result = (void *)OUTLINED_FUNCTION_3_4();
  __break(1u);
  return result;
}

void *sub_2498D5610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  const void *v4;
  void *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_21_3();
    if (!v8 && v7)
    {
      v7 = v6 >= v3;
      v8 = v6 == v3;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
      return OUTLINED_FUNCTION_7_4(v5, v4, 4 * v2);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_10_4();
  }
  result = (void *)OUTLINED_FUNCTION_3_4();
  __break(1u);
  return result;
}

uint64_t sub_2498D5698(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_19_3();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2330);
      return swift_arrayInitWithCopy();
    }
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_10_4();
  }
  result = OUTLINED_FUNCTION_3_4();
  __break(1u);
  return result;
}

uint64_t sub_2498D5754(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    if (a3 + 8 * a2 <= a1 || a1 + 8 * a2 <= a3)
      return swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_10_4();
  }
  result = OUTLINED_FUNCTION_3_4();
  __break(1u);
  return result;
}

uint64_t sub_2498D57F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249955DCC();
  __break(1u);
  return result;
}

void *sub_2498D58BC(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    if (&a3[8 * a2] <= a1 || &a1[8 * a2] <= a3)
      return OUTLINED_FUNCTION_7_4(a3, a1, 8 * a2);
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_10_4();
  }
  result = (void *)OUTLINED_FUNCTION_3_4();
  __break(1u);
  return result;
}

uint64_t sub_2498D5950(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80) - 8) + 72) * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_249955DCC();
  __break(1u);
  return result;
}

uint64_t sub_2498D5A48(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249955DCC();
  __break(1u);
  return result;
}

void *sub_2498D5B14(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_249955DCC();
  __break(1u);
  return result;
}

uint64_t sub_2498D5BD8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249955DCC();
  __break(1u);
  return result;
}

void *sub_2498D5CA4(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[16 * a2] <= __src || &__src[16 * a2] <= __dst))
    return memcpy(__dst, __src, 16 * a2);
  result = (void *)sub_249955DCC();
  __break(1u);
  return result;
}

void sub_2498D5D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2498D632C(a1, a2, a3, *v3, &qword_2578A2660, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D501C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D54B4);
  *v3 = v4;
}

void sub_2498D5DA0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D6148();
  *v0 = v1;
}

void sub_2498D5DC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D6148();
  *v0 = v1;
}

void sub_2498D5DE8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D61E8();
  *v0 = v1;
}

void sub_2498D5E0C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D61E8();
  *v0 = v1;
}

unint64_t sub_2498D5E34()
{
  unint64_t result;

  result = qword_2578A0BF0;
  if (!qword_2578A0BF0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578A0BF0);
  }
  return result;
}

unint64_t sub_2498D5E74()
{
  unint64_t result;

  result = qword_2578A0BF8;
  if (!qword_2578A0BF8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578A0BF8);
  }
  return result;
}

uint64_t sub_2498D5EB0()
{
  return sub_2498D5EDC(&qword_2578A0C00, &qword_2578A0C08, MEMORY[0x24BEE12E0]);
}

uint64_t sub_2498D5EDC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BCFB904](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498D5F20()
{
  unint64_t result;

  result = qword_2578A0C10;
  if (!qword_2578A0C10)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578A0C10);
  }
  return result;
}

unint64_t sub_2498D5F60()
{
  unint64_t result;

  result = qword_2578A0C18;
  if (!qword_2578A0C18)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578A0C18);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDScrollMomentum()
{
  return &type metadata for HIDScrollMomentum;
}

void sub_2498D5FAC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D6148();
  *v0 = v1;
}

void sub_2498D5FD0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_2498D627C();
  *v0 = v1;
}

void sub_2498D5FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2498D632C(a1, a2, a3, *v3, &qword_2578A0C50, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5194, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D57F0);
  *v3 = v4;
}

size_t sub_2498D6020(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_2498D6494(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_2498D603C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2498D632C(a1, a2, a3, *v3, &qword_2578A0C88, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5194, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5A48);
  *v3 = v4;
}

char *sub_2498D6070(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2498D65DC(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_2498D608C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2498D632C(a1, a2, a3, *v3, &qword_2578A0C48, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5194, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5BD8);
  *v3 = v4;
}

void sub_2498D60C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2498D632C(a1, a2, a3, *v3, &qword_2578A0C40, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5194, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5CA4);
  *v3 = v4;
}

uint64_t sub_2498D60F4(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2498D66B0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_2498D6110(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2498D6790(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_2498D612C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2498D632C(a1, a2, a3, a4, &qword_2578A2660, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D501C, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D54B4);
}

void sub_2498D6148()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  char *v16;

  OUTLINED_FUNCTION_29_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_22_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v3)
  {
    OUTLINED_FUNCTION_26_2(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 4);
  }
  v14 = (char *)OUTLINED_FUNCTION_15_4();
  if ((v1 & 1) != 0)
  {
    sub_2498D5074(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2498D5610((uint64_t)v14, v15);
  }
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_18_3();
}

void sub_2498D61E8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  size_t v15;
  char *v16;

  OUTLINED_FUNCTION_29_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_22_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v3)
  {
    OUTLINED_FUNCTION_26_2(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * v13 - 64;
  }
  v14 = (char *)OUTLINED_FUNCTION_15_4();
  if ((v1 & 1) != 0)
  {
    sub_2498D5134(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2498D5580(v14, v15, v16);
  }
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_18_3();
}

void sub_2498D627C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  OUTLINED_FUNCTION_29_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_22_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
    v7 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 40);
  }
  v9 = (char *)OUTLINED_FUNCTION_15_4();
  if ((v1 & 1) != 0)
  {
    sub_2498D50D0(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2498D5698((uint64_t)v9, v10);
  }
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_20_3();
}

void sub_2498D632C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, _QWORD *), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;
  uint64_t v19;

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_22_3();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    OUTLINED_FUNCTION_26_2(a1, a2, a3, a4, a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  v19 = a4 + 32;
  if ((v10 & 1) != 0)
  {
    a6(v19, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_20_3();
}

void sub_2498D63EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  OUTLINED_FUNCTION_29_0();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_22_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C58);
    v7 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 8);
  }
  v9 = (char *)OUTLINED_FUNCTION_15_4();
  if ((v1 & 1) != 0)
  {
    sub_2498D5218(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_2498D58BC(v9, v10, v11);
  }
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_18_3();
}

size_t sub_2498D6494(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C78);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80) - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_2498D52D4(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498D5950(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

char *sub_2498D65DC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2498D53D8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498D5B14(v13, v8, v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_2498D66B0(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C38);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2498D5074(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498D5610((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

char *sub_2498D6790(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2498D501C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498D5CA4(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void *OUTLINED_FUNCTION_1_5@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_249955DCC();
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_249955DCC();
}

void OUTLINED_FUNCTION_4_3()
{
  JUMPOUT(0x24BCFA854);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

void *OUTLINED_FUNCTION_7_4(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

void OUTLINED_FUNCTION_8_4()
{
  sub_2498D5E0C();
}

void OUTLINED_FUNCTION_9_4()
{
  sub_2498D5E0C();
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_23_3()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + v3 + 32) = v2;
}

uint64_t OUTLINED_FUNCTION_26_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t static VendorDefinedEvent.eventType.getter()
{
  return 1;
}

void VendorDefinedEvent.init<A>(timestamp:usage:version:data:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

_QWORD *sub_2498D6A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v4 = sub_2498D6F04(v3, v2 & 0xFFFFFFFFFFFFLL, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t *, char *))sub_2498D6CEC, (uint64_t)&v6, BYTE6(v2));
  OUTLINED_FUNCTION_1_6();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
  return v4;
}

uint64_t sub_2498D6B8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t *a5@<X8>)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t result;

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if ((v10 & 0x8000000000000000) == 0 && !HIDWORD(v10))
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    if ((v11 & 0x8000000000000000) == 0 && !HIDWORD(v11) && (a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
    {
      if (a1)
      {
        result = IOHIDEventCreateVendorDefinedEvent();
        *a5 = result;
        return result;
      }
      __break(1u);
    }
  }
  result = sub_249955D60();
  __break(1u);
  return result;
}

uint64_t sub_2498D6CEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2498D6B8C(a1, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t VendorDefinedEvent.data.getter(void *a1)
{
  id v1;
  uint64_t IntegerValue;
  uint64_t DataValue;
  uint64_t v4;

  v1 = a1;
  IntegerValue = IOHIDEventGetIntegerValue();
  DataValue = IOHIDEventGetDataValue();
  v4 = sub_2498D3100(DataValue, DataValue + IntegerValue);

  return v4;
}

void VendorDefinedEvent.withUnsafeBytes<A>(_:)(void (*a1)(uint64_t, uint64_t), uint64_t a2, void *a3)
{
  id v4;
  uint64_t IntegerValue;
  uint64_t DataValue;

  v4 = a3;
  IntegerValue = IOHIDEventGetIntegerValue();
  DataValue = IOHIDEventGetDataValue();
  a1(DataValue, DataValue + IntegerValue);

}

uint64_t VendorDefinedEvent.usage.getter(void *a1)
{
  id v1;
  unsigned __int16 IntegerValue;
  unsigned __int16 v3;

  v1 = a1;
  IntegerValue = IOHIDEventGetIntegerValue();
  v3 = IOHIDEventGetIntegerValue();

  return IntegerValue | (v3 << 16);
}

uint64_t VendorDefinedEvent.version.getter()
{
  return IOHIDEventGetIntegerValue();
}

_QWORD *sub_2498D6E5C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, char *))
{
  uint64_t v3;
  _QWORD *result;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  result = (_QWORD *)sub_24995555C();
  v8 = result;
  if (result)
  {
    result = (_QWORD *)sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 = (_QWORD *)((char *)v8 + a1 - (_QWORD)result);
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = sub_249955568();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = (char *)v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  result = a3(&v15, v8, v14);
  if (!v3)
    return (_QWORD *)v15;
  return result;
}

_QWORD *sub_2498D6F04(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  result = a3(&v7, &v8, (char *)&v8 + a5);
  if (!v5)
    return (_QWORD *)v7;
  return result;
}

ValueMetadata *type metadata accessor for VendorDefinedEvent()
{
  return &type metadata for VendorDefinedEvent;
}

_QWORD *OUTLINED_FUNCTION_0_5(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, char *))
{
  return sub_2498D6E5C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t GameControllerFilter.eventMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void GameControllerFilter.__allocating_init(service:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_7();
  GameControllerFilter.init(platform:service:)(v4, a1, a2);
  OUTLINED_FUNCTION_18_3();
}

void GameControllerFilter.__allocating_init(platform:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_1_7();
  GameControllerFilter.init(platform:service:)(v5, a2, a3);
  OUTLINED_FUNCTION_18_3();
}

void GameControllerFilter.init(platform:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v5 = MEMORY[0x24BEE4AF8];
  v3[4] = sub_2498CF460(MEMORY[0x24BEE4AF8]);
  v3[5] = sub_2498CF460(v5);
  v3[2] = sub_2498CF460((uint64_t)&unk_251AC4C28);
  ObjectType = swift_getObjectType();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  v3[3] = v7;
  OUTLINED_FUNCTION_18_3();
}

BOOL GameControllerFilter.filterEvent(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  sub_2498CF8CC(a2, (uint64_t)v10);
  v4 = (void *)GameControllerEvent.init(event:)(v10);
  if (v4)
  {
    if ((*(_BYTE *)(v2 + 44) & 8) != 0)
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    else
    {
      OUTLINED_FUNCTION_2_5();
    }
    if ((*(_BYTE *)(v2 + 36) & 8) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
      v5 = OUTLINED_FUNCTION_1_7();
      *(_OWORD *)(v5 + 16) = xmmword_2499568A0;
      v6 = v4;
      GameControllerReport.init(gameControllerEvent:)();
      *(_QWORD *)(v5 + 32) = v7;
      *(_QWORD *)(v5 + 40) = v8;

    }
    else
    {

    }
  }
  else
  {
    OUTLINED_FUNCTION_2_5();
  }
  return v4 != 0;
}

uint64_t GameControllerFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t GameControllerFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t GameControllerFilter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GameControllerFilter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2498D7204()
{
  return GameControllerFilter.eventMask.getter();
}

BOOL sub_2498D7224(uint64_t a1, uint64_t a2)
{
  return GameControllerFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_2498D7248(uint64_t a1, uint64_t a2)
{
  GameControllerFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2498D7270(uint64_t a1, uint64_t a2)
{
  GameControllerFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for GameControllerFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for GameControllerFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GameControllerFilter.__allocating_init(platform:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CF8CC(v1, v0);
}

uint64_t static ZoomToggleReport.initialReportBitCount.getter()
{
  return 16;
}

uint64_t static ZoomToggleReport.reportID.getter()
{
  return 14;
}

uint64_t sub_2498D72F4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498D7314();
  *(_QWORD *)&xmmword_2578A0D58 = result;
  *((_QWORD *)&xmmword_2578A0D58 + 1) = v1;
  return result;
}

uint64_t sub_2498D7314()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 1);
  v13 = v0;
  v14 = v1;
  v2 = sub_2498D741C();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4A48);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for ApplicationCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_2498D741C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;
  __int16 v14;
  __int16 v15;
  char v16;
  unsigned __int8 v17;
  _QWORD v18[2];

  LOBYTE(v18[0]) = 12;
  sub_2498FCA34((uint64_t)v18, 8uLL);
  v1 = v0;
  v3 = v2;
  LOBYTE(v18[0]) = 14;
  sub_2498FC7A0((uint64_t)v18, 1);
  v5 = v4;
  v7 = v6;
  v17 = 0;
  v16 = 1;
  v15 = 0;
  v14 = 0;
  v13 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v17, &v16, (_BYTE *)&v15 + 1, &v15, (_BYTE *)&v14 + 1, &v14, &v13, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499573B0;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 14;
  *(_QWORD *)(inited + 96) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 104) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 80) = v3;
  *(_QWORD *)(inited + 136) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 144) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 112) = v5;
  *(_QWORD *)(inited + 120) = v7;
  v9 = v18[0];
  v10 = v18[1];
  *(_QWORD *)(inited + 176) = &type metadata for Input;
  *(_QWORD *)(inited + 184) = &protocol witness table for Input;
  *(_QWORD *)(inited + 152) = v9;
  *(_QWORD *)(inited + 160) = v10;
  sub_2498CAC78(v1, v3);
  sub_2498CAC78(v5, v7);
  sub_2498CAC78(v9, v10);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v9, v10);
  sub_2498CACBC(v5, v7);
  sub_2498CACBC(v1, v3);
  return v11;
}

uint64_t static ZoomToggleReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0738 != -1)
    swift_once();
  v2 = xmmword_2578A0D58;
  *a1 = xmmword_2578A0D58;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498D761C()
{
  return 16;
}

uint64_t sub_2498D7628()
{
  return 14;
}

void ZoomToggleReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t ZoomToggleReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ZoomToggleReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498D76A0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = ZoomToggleReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D76C0()
{
  uint64_t v0;

  sub_2499507D8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void ZoomToggleReport.flags.getter(uint64_t a1, unint64_t a2)
{
  sub_2498C8F2C(8, a1, a2);
}

void sub_2498D76D8(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  ZoomToggleReport.flags.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t ZoomToggleReport.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

void ZoomToggleReport.flags.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  sub_2498C8F2C(8, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498D7748(unsigned __int8 *a1)
{
  ZoomToggleReport.flags.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for ZoomToggleReport()
{
  return &type metadata for ZoomToggleReport;
}

void static TranslationEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for TranslationGesture();
  *(_BYTE *)(swift_initStackObject() + 16) = v5;
  TranslationGesture.dispatch(report:)(a1, a2);
}

uint64_t TranslationGesture.__allocating_init(platform:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for TranslationGesture()
{
  return objc_opt_self();
}

void TranslationGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_0_6(16);
  OUTLINED_FUNCTION_0_6(32);
  sub_2498C8F2C(8, a1, a2);
  mach_absolute_time();
  IOHIDEventCreateTranslationEvent();
  __asm { BR              X10 }
}

uint64_t sub_2498D78CC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  uint64_t v18;
  uint64_t v19;

  if (((unint64_t)BYTE6(v2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498D7A9CLL);
  }
  if (BYTE6(v2) >= 0xEuLL)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    if (v3)
    {
      v18 = v3;
      v4 = sub_2498D3100((uint64_t)&v18, (uint64_t)&v19);
      v6 = v5;
      sub_2498CAC78(v4, v5);
      v7 = mach_absolute_time();
      sub_2498D2E30(v7, 16973568, 0, v4, v6);
      v9 = v8;
      IOHIDEventAppendEvent();

      sub_2498CACBC(v4, v6);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2499568A0;
  v11 = *(unsigned __int8 *)(v1 + 16);
  v12 = v0;
  v13 = mach_absolute_time();
  if (v11 == 1)
  {
    v14 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v13, 3, 0, 0, 0, 0);
    v15 = &protocol witness table for DigitizerEvent;
    v16 = &type metadata for DigitizerEvent;
  }
  else
  {
    v14 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v13, 0, 0);
    v15 = &protocol witness table for PointerEvent;
    v16 = &type metadata for PointerEvent;
  }
  IOHIDEventAppendEvent();

  *(_QWORD *)(v10 + 56) = v16;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v14;

  return v10;
}

void TranslationGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t TranslationGesture.init(platform:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t TranslationGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TranslationGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_2498D7AEC(uint64_t a1)
{
  TranslationGesture.dispatch(report:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

_UNKNOWN **sub_2498D7B14()
{
  return &protocol witness table for TranslationReport;
}

_UNKNOWN **sub_2498D7B20()
{
  return &protocol witness table for TranslationReport;
}

uint64_t method lookup function for TranslationGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TranslationGesture.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

double OUTLINED_FUNCTION_0_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_2498CAD4C(a1, v2, v1);
}

uint64_t TranslationEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t TranslationEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_8();
}

uint64_t TranslationEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateTranslationEvent();
}

uint64_t static TranslationEvent.eventType.getter()
{
  return 4;
}

void TranslationEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7BB0()
{
  return OUTLINED_FUNCTION_2_6();
}

uint64_t TranslationEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_7();
}

void TranslationEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7BFC()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t TranslationEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_8();
}

uint64_t TranslationEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_7();
}

void TranslationEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7C54()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t sub_2498D7C68()
{
  return 4;
}

void sub_2498D7C70(_QWORD *a1@<X8>)
{
  uint64_t v2;

  TranslationEvent.x.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7C94(double *a1, _QWORD *a2)
{
  return TranslationEvent.x.setter(*a2, *a1);
}

void sub_2498D7CA0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  TranslationEvent.y.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7CC4()
{
  return TranslationEvent.y.setter();
}

void sub_2498D7CD0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  TranslationEvent.z.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D7CF4()
{
  return TranslationEvent.z.setter();
}

ValueMetadata *type metadata accessor for TranslationEvent()
{
  return &type metadata for TranslationEvent;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return IOHIDEventSetFloatValue();
}

uint64_t EventReportAccumulator.values.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL EventReportAccumulator.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t EventReportAccumulator.target.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2498CF8CC(v1 + 8, a1);
}

uint64_t sub_2498D7D60(uint64_t a1)
{
  uint64_t v2[5];

  sub_2498CF8CC(a1, (uint64_t)v2);
  return EventReportAccumulator.target.setter(v2);
}

uint64_t EventReportAccumulator.target.setter(uint64_t *a1)
{
  uint64_t v1;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v1 + 8), a1);
  EventReportAccumulator.flush(to:)(v1 + 8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall EventReportAccumulator.flush()()
{
  uint64_t v0;

  EventReportAccumulator.flush(to:)(v0 + 8);
}

void (*EventReportAccumulator.target.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  return sub_2498D7F5C;
}

void sub_2498D7F5C(_QWORD *a1, char a2)
{
  if ((a2 & 1) == 0)
    EventReportAccumulator.flush(to:)(*a1 + 8);
}

uint64_t EventReportAccumulator.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  OUTLINED_FUNCTION_73();
  sub_2498E2984(&qword_2578A0E30, (uint64_t (*)(uint64_t))type metadata accessor for EventReportSenderID, (uint64_t)&protocol conformance descriptor for EventReportSenderID);
  result = sub_2499557C0();
  *a1 = result;
  a1[4] = (uint64_t)&type metadata for NullTarget;
  a1[5] = (uint64_t)&off_251AC64B8;
  return result;
}

void EventReportAccumulator.Value.keyboard.getter()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

void EventReportAccumulator.Value.consumer.getter()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

void EventReportAccumulator.Value.appleVendorKeyboard.getter()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

void EventReportAccumulator.Value.appleVendorTopCase.getter()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

void EventReportAccumulator.Value.pointer.getter()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498D8098(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t (**v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v6 = a1[2];
  v18 = a1[8];
  v7 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v3[1];
  v17 = a1[9];
  v8 = v3[8];
  v9 = v3[9];
  v10 = OUTLINED_FUNCTION_96();
  if ((MEMORY[0x24BCFA854](v10) & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v11 = OUTLINED_FUNCTION_96();
    v12(v11);
  }
  v13 = OUTLINED_FUNCTION_93();
  if ((MEMORY[0x24BCFA854](v13) & 1) == 0)
  {
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_36_0(v7[3]);
  }
  v14 = OUTLINED_FUNCTION_93();
  if ((MEMORY[0x24BCFA854](v14) & 1) == 0)
  {
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_36_0(v7[1]);
  }
  v15 = OUTLINED_FUNCTION_93();
  if ((MEMORY[0x24BCFA854](v15) & 1) == 0)
  {
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_36_0(v7[2]);
  }
  result = MEMORY[0x24BCFA854](v8, v9, v18, v17);
  if ((result & 1) == 0)
  {
    OUTLINED_FUNCTION_40_0();
    return v7[5](v8, v9, a3, v6, (uint64_t)v7);
  }
  return result;
}

uint64_t static EventReportAccumulator.Value.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v13 = a1[7];
  v14 = a1[6];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  if ((MEMORY[0x24BCFA854](*a1, a1[1], *a2, a2[1]) & 1) != 0
    && (MEMORY[0x24BCFA854](v2, v3, v6, v7) & 1) != 0
    && (MEMORY[0x24BCFA854](v4, v5, v8, v9) & 1) != 0
    && (MEMORY[0x24BCFA854](v14, v13, v10, v11) & 1) != 0)
  {
    JUMPOUT(0x24BCFA854);
  }
  return 0;
}

uint64_t sub_2498D8320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  if (qword_2578A0750 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  v3 = HIDReport.init(bitCount:id:)(v2, 1);
  v5 = v4;
  if (qword_2578A0768 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  v7 = HIDReport.init(bitCount:id:)(v6, 2);
  v9 = v8;
  if (qword_2578A0758 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  v11 = HIDReport.init(bitCount:id:)(v10, 3);
  v13 = v12;
  if (qword_2578A0740 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  v15 = HIDReport.init(bitCount:id:)(v14, 4);
  v17 = v16;
  if (qword_2578A0810 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v18, 5);
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v7;
  a1[3] = v9;
  a1[4] = v11;
  a1[5] = v13;
  a1[6] = v15;
  a1[7] = v17;
  a1[8] = result;
  a1[9] = v20;
  return result;
}

uint64_t EventReportAccumulator.insert(_:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  _OWORD v5[5];

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    OUTLINED_FUNCTION_105();
    if ((v3 & 1) != 0)
      return 0;
  }
  sub_2498D8320((uint64_t *)v5);
  sub_2498E09DC(v5, a1);
  return 1;
}

uint64_t EventReportAccumulator.dispatchReport(_:from:accumulateOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t *v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t *v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  char *v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  _QWORD *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  unint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  unint64_t v470;
  uint64_t v471;
  uint64_t v472;
  __int128 v473;
  uint64_t v474;
  __int128 v475;
  uint64_t v476;
  uint64_t v477;
  __int128 v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  __int128 v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  unint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  _QWORD *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  unint64_t v537;
  uint64_t v538;
  unint64_t v539;
  uint64_t v540;
  unint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  unint64_t v549;
  unint64_t v550;
  unint64_t v552;
  uint64_t v553;
  uint64_t v554;
  unint64_t v555;
  uint64_t v556;
  uint64_t v557;
  unint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v563;
  uint64_t v564;
  unint64_t v565;
  unint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  uint64_t v584;
  uint64_t v585;

  LODWORD(v388) = a4;
  v5 = *v4;
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_2498DFA3C(a3), (v7 & 1) != 0))
  {
    v8 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 80 * v6);
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v14 = v8[4];
    v13 = v8[5];
    v16 = v8[6];
    v15 = v8[7];
    v18 = v8[8];
    v17 = v8[9];
    *(_QWORD *)&v580 = *v8;
    v9 = v580;
    *((_QWORD *)&v580 + 1) = v10;
    *(_QWORD *)&v581 = v11;
    *((_QWORD *)&v581 + 1) = v12;
    *(_QWORD *)&v582 = v14;
    *((_QWORD *)&v582 + 1) = v13;
    *(_QWORD *)&v583 = v16;
    *((_QWORD *)&v583 + 1) = v15;
    v584 = v18;
    OUTLINED_FUNCTION_14_4(v580);
    OUTLINED_FUNCTION_25_4();
    OUTLINED_FUNCTION_39_0(v14);
    OUTLINED_FUNCTION_19_4(v16);
    OUTLINED_FUNCTION_21_4(v18);
  }
  else
  {
    sub_2498D8320((uint64_t *)&v580);
    v10 = *((_QWORD *)&v580 + 1);
    v9 = v580;
    v12 = *((_QWORD *)&v581 + 1);
    v11 = v581;
    v13 = *((_QWORD *)&v582 + 1);
    v14 = v582;
    v15 = *((_QWORD *)&v583 + 1);
    v16 = v583;
    v18 = v584;
    v17 = v585;
  }
  v526 = v12;
  v572 = v9;
  OUTLINED_FUNCTION_14_4(v9);
  OUTLINED_FUNCTION_39_0(v14);
  OUTLINED_FUNCTION_19_4(v16);
  OUTLINED_FUNCTION_21_4(v18);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_14_4(v9);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_39_0(v14);
  OUTLINED_FUNCTION_19_4(v16);
  OUTLINED_FUNCTION_21_4(v18);
  OUTLINED_FUNCTION_14_4(a1);
  sub_2498E21BC(a1, a2);
  v20 = v19;
  OUTLINED_FUNCTION_27_4(a1);
  if ((v20 & 0x100) != 0)
  {
    v56 = v18;
    v57 = v17;
    OUTLINED_FUNCTION_9_5(v18);
    v58 = v16;
    OUTLINED_FUNCTION_16_4(v16);
    OUTLINED_FUNCTION_12_5(v14);
    OUTLINED_FUNCTION_12_5(v11);
    OUTLINED_FUNCTION_15_5(v572);
    v59 = v56;
    v60 = v14;
LABEL_10:
    OUTLINED_FUNCTION_1_9(v572);
    OUTLINED_FUNCTION_12_5(v11);
    OUTLINED_FUNCTION_16_4(v60);
    OUTLINED_FUNCTION_9_5(v58);
    OUTLINED_FUNCTION_13_5(v59);
    OUTLINED_FUNCTION_1_9(v572);
    OUTLINED_FUNCTION_12_5(v11);
    OUTLINED_FUNCTION_16_4(v60);
    OUTLINED_FUNCTION_9_5(v58);
    v61 = v59;
LABEL_11:
    v62 = v57;
    return sub_2498CACBC(v61, v62);
  }
  else
  {
    v472 = v16;
    switch((char)v20)
    {
      case 1:
        v21 = OUTLINED_FUNCTION_27_4(v9);
        v29 = OUTLINED_FUNCTION_50_0(v21, v22, v23, v24, v25, v26, v27, v28, v338, v355, v17, v388, v14, a3, v11, v13, v16, v15, v18,
                v510,
                v526,
                v10,
                a1);
        sub_2498D9BA4(v29, v30, v31);
        v32 = v580;
        OUTLINED_FUNCTION_39_0(v580);
        OUTLINED_FUNCTION_27_4(v9);
        v580 = v32;
        *(_QWORD *)&v581 = v440;
        *((_QWORD *)&v581 + 1) = v527;
        v33 = v406;
        *(_QWORD *)&v582 = v406;
        *((_QWORD *)&v582 + 1) = v456;
        v34 = v473;
        v583 = v473;
        v35 = v497;
        v36 = v372;
        v584 = v497;
        v585 = v372;
        OUTLINED_FUNCTION_39_0(v32);
        OUTLINED_FUNCTION_14_4(v440);
        OUTLINED_FUNCTION_6_5(v406);
        OUTLINED_FUNCTION_30_0(v473);
        OUTLINED_FUNCTION_28_1(v497);
        OUTLINED_FUNCTION_15_5(v497);
        OUTLINED_FUNCTION_17_4(v473);
        OUTLINED_FUNCTION_2_7(v406);
        OUTLINED_FUNCTION_27_4(v440);
        v37 = sub_2498CACBC(v32, *((unint64_t *)&v32 + 1));
        v38 = v440;
        v39 = v406;
        if ((OUTLINED_FUNCTION_41_0(v37, v40, v41, v42, v43, v44, v45, v46, v339, v356, v372, v389, v406, v423, v440, v456, v473, *((uint64_t *)&v473 + 1), v497,
                v511,
                v527,
                v540,
                *((uint64_t *)&v32 + 1),
                v32,
                v572,
                v572) & 1) == 0)
        {
          sub_2498CAC78(v563, v552);
          OUTLINED_FUNCTION_39_0(v38);
          OUTLINED_FUNCTION_5_3();
          OUTLINED_FUNCTION_30_0(v34);
          OUTLINED_FUNCTION_28_1(v35);
          v219 = v424;
          v119 = v36;
          v220 = OUTLINED_FUNCTION_70(&v580, v424);
          if ((v390 & 1) != 0)
          {
            v227 = v563;
            sub_2498CACBC(v563, v552);
            OUTLINED_FUNCTION_12_5(v38);
            OUTLINED_FUNCTION_2_7(v39);
            OUTLINED_FUNCTION_17_4(v34);
            v228 = OUTLINED_FUNCTION_1_9(v35);
            OUTLINED_FUNCTION_67(v228, v229, v230, v231, v232, v233, v234, v235, v340, v357, v373, v390, v407, v424, v441, v457, v474, v487, v498,
              v512,
              v528,
              v541,
              v552,
              v563,
              v573);
            OUTLINED_FUNCTION_12_5(v38);
            OUTLINED_FUNCTION_2_7(v39);
            OUTLINED_FUNCTION_17_4(v34);
            OUTLINED_FUNCTION_1_9(v35);
            sub_2498CACBC(v227, v558);
            OUTLINED_FUNCTION_12_5(v38);
            OUTLINED_FUNCTION_2_7(v39);
            v145 = *((_QWORD *)&v34 + 1);
            v144 = v34;
            goto LABEL_25;
          }
          v291 = OUTLINED_FUNCTION_98(v220, v512 + 8, v221, v222, v223, v224, v225, v226, v340, v357, v373, v390, v407, v424, v441, v457, v474, v487, v498,
                   v512,
                   v528,
                   v541,
                   v552,
                   v563,
                   v573,
                   v573);
          sub_2498D8098(v291, v292, v219);
          v293 = v570;
          OUTLINED_FUNCTION_15_5(v570);
          OUTLINED_FUNCTION_12_5(v38);
          OUTLINED_FUNCTION_2_7(v39);
          OUTLINED_FUNCTION_17_4(v34);
          v294 = OUTLINED_FUNCTION_1_9(v35);
          OUTLINED_FUNCTION_67(v294, v295, v296, v297, v298, v299, v300, v301, v351, v368, v384, v402, v418, v436, v452, v468, v484, v494, v508,
            v524,
            v538,
            v550,
            v559,
            v570,
            v578);
          OUTLINED_FUNCTION_12_5(v38);
          OUTLINED_FUNCTION_2_7(v39);
          OUTLINED_FUNCTION_17_4(v34);
          OUTLINED_FUNCTION_1_9(v35);
          OUTLINED_FUNCTION_15_5(v293);
          OUTLINED_FUNCTION_12_5(v38);
          OUTLINED_FUNCTION_2_7(v39);
          OUTLINED_FUNCTION_17_4(v34);
          v302 = v35;
          v303 = v36;
          goto LABEL_43;
        }
        OUTLINED_FUNCTION_0_8(v563);
        OUTLINED_FUNCTION_12_5(v38);
        OUTLINED_FUNCTION_2_7(v33);
        OUTLINED_FUNCTION_17_4(v34);
        v47 = OUTLINED_FUNCTION_15_5(v35);
        OUTLINED_FUNCTION_67(v47, v48, v49, v50, v51, v52, v53, v54, v340, v357, v373, v390, v407, v424, v441, v457, v474, v487, v498,
          v512,
          v528,
          v541,
          v552,
          v563,
          v573);
        OUTLINED_FUNCTION_12_5(v38);
        OUTLINED_FUNCTION_2_7(v33);
        OUTLINED_FUNCTION_17_4(v34);
        OUTLINED_FUNCTION_15_5(v35);
        OUTLINED_FUNCTION_0_8(v564);
        OUTLINED_FUNCTION_12_5(v38);
        OUTLINED_FUNCTION_2_7(v33);
        OUTLINED_FUNCTION_17_4(v34);
        return sub_2498CACBC(v35, v36);
      case 2:
        v63 = OUTLINED_FUNCTION_13_5(v11);
        v71 = OUTLINED_FUNCTION_50_0(v63, v64, v65, v66, v67, v68, v69, v70, v338, v355, v17, v388, v14, a3, v11, v13, v16, v15, v18,
                v510,
                v526,
                v10,
                a1);
        sub_2498D99D0(v71, v72, v73);
        v74 = v580;
        OUTLINED_FUNCTION_8_5(v580);
        OUTLINED_FUNCTION_13_5(v11);
        v75 = v9;
        *(_QWORD *)&v580 = v9;
        *((_QWORD *)&v580 + 1) = v542;
        v581 = v74;
        *(_QWORD *)&v582 = v408;
        *((_QWORD *)&v582 + 1) = v458;
        v583 = v475;
        v57 = v374;
        v584 = v499;
        v585 = v374;
        OUTLINED_FUNCTION_39_0(v572);
        OUTLINED_FUNCTION_8_5(v74);
        OUTLINED_FUNCTION_19_4(v408);
        OUTLINED_FUNCTION_21_4(v475);
        OUTLINED_FUNCTION_22_4(v499);
        OUTLINED_FUNCTION_13_5(v499);
        OUTLINED_FUNCTION_9_5(v475);
        OUTLINED_FUNCTION_16_4(v408);
        v76 = v475;
        v77 = v442;
        sub_2498CACBC(v74, *((unint64_t *)&v74 + 1));
        v78 = OUTLINED_FUNCTION_1_9(v572);
        v79 = v408;
        v80 = v475;
        if ((OUTLINED_FUNCTION_41_0(v78, v81, v82, v83, v84, v85, v86, v87, v341, v358, v374, v391, v408, v425, v442, v458, v475, *((uint64_t *)&v475 + 1), v499,
                v513,
                v529,
                v542,
                v74,
                *((uint64_t *)&v74 + 1),
                v572,
                v572) & 1) != 0)
        {
          OUTLINED_FUNCTION_1_9(v75);
          v88 = v500;
          sub_2498CACBC(v553, v565);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_9_5(v80);
          OUTLINED_FUNCTION_13_5(v500);
          OUTLINED_FUNCTION_16_4(v75);
          OUTLINED_FUNCTION_87(v77, v89, v90, v91, v92, v93, v94, v95, v342, v359, v375, v392, v409, v426, v443, v459, v476, v488, v500,
            v514,
            v530);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_9_5(v80);
          OUTLINED_FUNCTION_13_5(v88);
          v96 = OUTLINED_FUNCTION_16_4(v75);
          OUTLINED_FUNCTION_104(v96, v97, v98, v99, v100, v101, v102, v103, v343, v360, v376, v393, v410, v427, v444, v460, v477, v489, v501,
            v515,
            v531,
            v543,
            v553,
            v565);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_9_5(v80);
          v61 = v88;
          goto LABEL_11;
        }
        OUTLINED_FUNCTION_20_4(v75);
        sub_2498CAC78(v553, v565);
        OUTLINED_FUNCTION_6_5(v79);
        sub_2498CAC78(v76, v488);
        OUTLINED_FUNCTION_22_4(v500);
        v236 = v426;
        v237 = OUTLINED_FUNCTION_70(&v580, v426);
        if ((v392 & 1) != 0)
        {
          OUTLINED_FUNCTION_1_9(v75);
          v244 = v77;
          sub_2498CACBC(v553, v565);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_27_4(v80);
          v245 = v500;
          OUTLINED_FUNCTION_13_5(v500);
          OUTLINED_FUNCTION_1_9(v75);
          OUTLINED_FUNCTION_87(v244, v246, v247, v248, v249, v250, v251, v252, v342, v359, v375, v392, v409, v426, v443, v459, v476, v488, v500,
            v514,
            v530);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_27_4(v80);
          OUTLINED_FUNCTION_13_5(v245);
          OUTLINED_FUNCTION_1_9(v75);
          sub_2498CACBC(v553, v565);
          OUTLINED_FUNCTION_2_7(v79);
          OUTLINED_FUNCTION_27_4(v80);
          v61 = v245;
          goto LABEL_11;
        }
        v304 = v500;
        v305 = OUTLINED_FUNCTION_98(v237, v514 + 8, v238, v239, v240, v241, v242, v243, v342, v359, v375, v392, v409, v426, v443, v459, v476, v488, v500,
                 v514,
                 v530,
                 v543,
                 v553,
                 v565,
                 v574,
                 v75);
        sub_2498D8098(v305, v306, v236);
        OUTLINED_FUNCTION_1_9(v579);
        OUTLINED_FUNCTION_15_5(v560);
        OUTLINED_FUNCTION_0_8(v79);
        OUTLINED_FUNCTION_17_4(v80);
        OUTLINED_FUNCTION_13_5(v304);
        OUTLINED_FUNCTION_1_9(v579);
        OUTLINED_FUNCTION_87(v453, v307, v308, v309, v310, v311, v312, v313, v352, v369, v385, v403, v419, v437, v453, v469, v485, v495, v509,
          v525,
          v539);
        OUTLINED_FUNCTION_0_8(v79);
        OUTLINED_FUNCTION_17_4(v80);
        OUTLINED_FUNCTION_13_5(v304);
        OUTLINED_FUNCTION_1_9(v579);
        OUTLINED_FUNCTION_15_5(v560);
        OUTLINED_FUNCTION_0_8(v79);
        OUTLINED_FUNCTION_17_4(v80);
        v302 = v304;
        v303 = v57;
        goto LABEL_43;
      case 3:
        v104 = OUTLINED_FUNCTION_0_8(v14);
        v112 = OUTLINED_FUNCTION_50_0(v104, v105, v106, v107, v108, v109, v110, v111, v338, v355, v17, v388, v14, a3, v11, v13, v16, v15, v18,
                 v510,
                 v526,
                 v10,
                 a1);
        sub_2498D9628(v112, v113, v114);
        v115 = v580;
        OUTLINED_FUNCTION_21_4(v580);
        OUTLINED_FUNCTION_0_8(v14);
        *(_QWORD *)&v580 = v9;
        *((_QWORD *)&v580 + 1) = v544;
        *(_QWORD *)&v581 = v445;
        *((_QWORD *)&v581 + 1) = v532;
        v582 = v115;
        v583 = v478;
        v584 = v502;
        v585 = v377;
        OUTLINED_FUNCTION_28_1(v9);
        OUTLINED_FUNCTION_8_5(v445);
        OUTLINED_FUNCTION_21_4(v115);
        OUTLINED_FUNCTION_30_0(v478);
        OUTLINED_FUNCTION_22_4(v502);
        OUTLINED_FUNCTION_13_5(v502);
        OUTLINED_FUNCTION_17_4(v478);
        v116 = v445;
        sub_2498CACBC(v115, *((unint64_t *)&v115 + 1));
        OUTLINED_FUNCTION_9_5(v445);
        v117 = OUTLINED_FUNCTION_15_5(v9);
        v118 = *((_QWORD *)&v478 + 1);
        v119 = v377;
        if ((OUTLINED_FUNCTION_41_0(v117, v120, v121, v122, v123, v124, v125, v126, v344, v361, v377, v394, v411, v428, v445, v461, v478, *((uint64_t *)&v478 + 1), v502,
                v516,
                v532,
                v544,
                v115,
                *((uint64_t *)&v115 + 1),
                v9,
                v9) & 1) != 0)
        {
          OUTLINED_FUNCTION_16_4(v9);
          OUTLINED_FUNCTION_9_5(v116);
          v127 = v479;
          v35 = v503;
          sub_2498CACBC(v554, v566);
          OUTLINED_FUNCTION_12_5(v479);
          OUTLINED_FUNCTION_1_9(v503);
          OUTLINED_FUNCTION_15_5(v9);
          v128 = OUTLINED_FUNCTION_0_8(v116);
          OUTLINED_FUNCTION_69(v128, v129, v130, v131, v132, v133, v134, v135, v345, v362, v378, v395, v412, v429, v446, v462);
          OUTLINED_FUNCTION_12_5(v479);
          OUTLINED_FUNCTION_1_9(v503);
          OUTLINED_FUNCTION_15_5(v9);
          v136 = OUTLINED_FUNCTION_0_8(v116);
          OUTLINED_FUNCTION_104(v136, v137, v138, v139, v140, v141, v142, v143, v346, v363, v379, v396, v413, v430, v447, v463, v479, v490, v503,
            v517,
            v533,
            v545,
            v554,
            v566);
          v144 = v127;
          v145 = v118;
LABEL_25:
          sub_2498CACBC(v144, v145);
          return sub_2498CACBC(v35, v119);
        }
        OUTLINED_FUNCTION_19_4(v9);
        OUTLINED_FUNCTION_21_4(v116);
        sub_2498CAC78(v554, v566);
        OUTLINED_FUNCTION_39_0(v479);
        v161 = v119;
        OUTLINED_FUNCTION_20_4(v503);
        v253 = v429;
        v254 = OUTLINED_FUNCTION_70(&v580, v429);
        if ((v395 & 1) != 0)
        {
          OUTLINED_FUNCTION_13_5(v9);
          OUTLINED_FUNCTION_9_5(v116);
          OUTLINED_FUNCTION_15_5(v554);
          OUTLINED_FUNCTION_12_5(v479);
          OUTLINED_FUNCTION_16_4(v503);
          OUTLINED_FUNCTION_13_5(v9);
          v261 = OUTLINED_FUNCTION_0_8(v116);
          OUTLINED_FUNCTION_69(v261, v262, v263, v264, v265, v266, v267, v268, v345, v362, v378, v395, v412, v429, v446, v462);
          OUTLINED_FUNCTION_12_5(v479);
          OUTLINED_FUNCTION_16_4(v503);
          OUTLINED_FUNCTION_13_5(v9);
          OUTLINED_FUNCTION_0_8(v116);
          OUTLINED_FUNCTION_15_5(v554);
          OUTLINED_FUNCTION_12_5(v479);
          v61 = v503;
          goto LABEL_33;
        }
        v314 = v479;
        v315 = v503;
        v316 = OUTLINED_FUNCTION_98(v254, v9 + 8, v255, v256, v257, v258, v259, v260, v345, v362, v378, v395, v412, v429, v446, v462, v479, v490, v503,
                 v517,
                 v533,
                 v545,
                 v554,
                 v566,
                 v575,
                 v9);
        sub_2498D8098(v316, v317, v253);
        OUTLINED_FUNCTION_13_5(v9);
        OUTLINED_FUNCTION_9_5(v116);
        OUTLINED_FUNCTION_15_5(v561);
        OUTLINED_FUNCTION_12_5(v314);
        OUTLINED_FUNCTION_16_4(v315);
        OUTLINED_FUNCTION_13_5(v9);
        v318 = OUTLINED_FUNCTION_9_5(v116);
        OUTLINED_FUNCTION_69(v318, v319, v320, v321, v322, v323, v324, v325, v353, v370, v386, v404, v420, v438, v454, v470);
        OUTLINED_FUNCTION_12_5(v314);
        OUTLINED_FUNCTION_16_4(v315);
        OUTLINED_FUNCTION_13_5(v9);
        OUTLINED_FUNCTION_9_5(v116);
        OUTLINED_FUNCTION_15_5(v561);
        OUTLINED_FUNCTION_12_5(v314);
        v302 = v315;
        v303 = v119;
        goto LABEL_43;
      case 4:
        v146 = OUTLINED_FUNCTION_13_5(v16);
        v154 = OUTLINED_FUNCTION_50_0(v146, v147, v148, v149, v150, v151, v152, v153, v338, v355, v17, v388, v14, a3, v11, v13, v16, v15, v18,
                 v510,
                 v526,
                 v10,
                 a1);
        sub_2498D97FC(v154, v155, v156);
        v157 = v580;
        OUTLINED_FUNCTION_14_4(v580);
        OUTLINED_FUNCTION_13_5(v16);
        v158 = v546;
        *(_QWORD *)&v580 = v9;
        *((_QWORD *)&v580 + 1) = v546;
        *(_QWORD *)&v581 = v448;
        *((_QWORD *)&v581 + 1) = v534;
        *(_QWORD *)&v582 = v414;
        *((_QWORD *)&v582 + 1) = v464;
        v583 = v157;
        v584 = v504;
        v585 = v380;
        OUTLINED_FUNCTION_28_1(v9);
        OUTLINED_FUNCTION_8_5(v448);
        OUTLINED_FUNCTION_21_4(v414);
        OUTLINED_FUNCTION_14_4(v157);
        OUTLINED_FUNCTION_22_4(v504);
        OUTLINED_FUNCTION_13_5(v504);
        v159 = v414;
        sub_2498CACBC(v157, *((unint64_t *)&v157 + 1));
        OUTLINED_FUNCTION_9_5(v414);
        OUTLINED_FUNCTION_0_8(v448);
        v160 = OUTLINED_FUNCTION_15_5(v9);
        v161 = v380;
        if ((OUTLINED_FUNCTION_41_0(v160, v162, v163, v164, v165, v166, v167, v168, v347, v364, v380, v397, v414, v431, v448, v464, v480, v491, v504,
                v518,
                v534,
                v546,
                *((uint64_t *)&v157 + 1),
                v157,
                v9,
                v9) & 1) != 0)
        {
          OUTLINED_FUNCTION_12_5(v9);
          v169 = v449;
          OUTLINED_FUNCTION_17_4(v449);
          OUTLINED_FUNCTION_9_5(v159);
          v170 = v505;
          OUTLINED_FUNCTION_27_4(v567);
          OUTLINED_FUNCTION_16_4(v505);
          OUTLINED_FUNCTION_15_5(v9);
          OUTLINED_FUNCTION_0_8(v449);
          v171 = OUTLINED_FUNCTION_9_5(v159);
          OUTLINED_FUNCTION_95(v171, v172, v173, v174, v175, v176, v177, v178, v348, v365, v381, v398, v415, v432, v449, v465, v481, v492);
          OUTLINED_FUNCTION_16_4(v505);
          OUTLINED_FUNCTION_15_5(v9);
          OUTLINED_FUNCTION_0_8(v169);
          OUTLINED_FUNCTION_9_5(v159);
          v179 = v567;
          v180 = v555;
          goto LABEL_32;
        }
        OUTLINED_FUNCTION_39_0(v9);
        OUTLINED_FUNCTION_30_0(v449);
        sub_2498CAC78(v159, v465);
        sub_2498CAC78(v567, v555);
        OUTLINED_FUNCTION_19_4(v505);
        v269 = v432;
        v270 = OUTLINED_FUNCTION_70(&v580, v432);
        if ((v398 & 1) != 0)
        {
          OUTLINED_FUNCTION_12_5(v9);
          v277 = v449;
          OUTLINED_FUNCTION_9_5(v449);
          OUTLINED_FUNCTION_1_9(v159);
          OUTLINED_FUNCTION_15_5(v567);
          v170 = v505;
          OUTLINED_FUNCTION_16_4(v505);
          OUTLINED_FUNCTION_0_8(v9);
          OUTLINED_FUNCTION_9_5(v449);
          v278 = OUTLINED_FUNCTION_1_9(v159);
          OUTLINED_FUNCTION_95(v278, v279, v280, v281, v282, v283, v284, v285, v348, v365, v381, v398, v415, v432, v449, v465, v481, v492);
          OUTLINED_FUNCTION_16_4(v505);
          OUTLINED_FUNCTION_0_8(v9);
          OUTLINED_FUNCTION_9_5(v277);
          OUTLINED_FUNCTION_1_9(v159);
          v179 = v567;
          v180 = v555;
LABEL_32:
          sub_2498CACBC(v179, v180);
          v61 = v170;
LABEL_33:
          v62 = v161;
          return sub_2498CACBC(v61, v62);
        }
        v326 = v449;
        v327 = v505;
        v328 = OUTLINED_FUNCTION_98(v270, v158 + 8, v271, v272, v273, v274, v275, v276, v348, v365, v381, v398, v415, v432, v449, v465, v481, v492, v505,
                 v519,
                 v535,
                 v547,
                 v555,
                 v567,
                 v576,
                 v9);
        sub_2498D8098(v328, v329, v269);
        OUTLINED_FUNCTION_16_4(v9);
        OUTLINED_FUNCTION_9_5(v326);
        OUTLINED_FUNCTION_1_9(v159);
        OUTLINED_FUNCTION_15_5(v571);
        OUTLINED_FUNCTION_2_7(v327);
        OUTLINED_FUNCTION_16_4(v9);
        OUTLINED_FUNCTION_9_5(v326);
        v330 = OUTLINED_FUNCTION_1_9(v159);
        OUTLINED_FUNCTION_95(v330, v331, v332, v333, v334, v335, v336, v337, v354, v371, v387, v405, v421, v439, v455, v471, v486, v496);
        OUTLINED_FUNCTION_2_7(v327);
        OUTLINED_FUNCTION_16_4(v9);
        OUTLINED_FUNCTION_9_5(v326);
        OUTLINED_FUNCTION_1_9(v159);
        OUTLINED_FUNCTION_15_5(v571);
        v302 = v327;
        v303 = v161;
LABEL_43:
        result = sub_2498CACBC(v302, v303);
        break;
      default:
        v59 = v18;
        v57 = v17;
        v181 = OUTLINED_FUNCTION_13_5(v18);
        if (v20 == 5)
        {
          v189 = OUTLINED_FUNCTION_50_0(v181, v182, v183, v184, v185, v186, v187, v188, v338, v355, v17, v388, v14, a3, v11, v13, v472, v15, v18,
                   v510,
                   v526,
                   v10,
                   a1);
          sub_2498D9D78(v189, v190, v191);
          v399 = *((_QWORD *)&v580 + 1);
          v556 = v580;
          PointerReport.reportWithoutMovement.getter();
          v193 = v192;
          v195 = v194;
          sub_2498CAC78(v192, v194);
          OUTLINED_FUNCTION_13_5(v59);
          v196 = v572;
          *(_QWORD *)&v580 = v572;
          *((_QWORD *)&v580 + 1) = v548;
          *(_QWORD *)&v581 = v450;
          *((_QWORD *)&v581 + 1) = v536;
          *(_QWORD *)&v582 = v416;
          *((_QWORD *)&v582 + 1) = v466;
          v197 = v482;
          v583 = v482;
          v584 = v193;
          v585 = v195;
          OUTLINED_FUNCTION_22_4(v572);
          OUTLINED_FUNCTION_18_4();
          OUTLINED_FUNCTION_6_5(v416);
          OUTLINED_FUNCTION_14_4(v482);
          OUTLINED_FUNCTION_21_4(v193);
          v568 = v193;
          v198 = v193;
          v199 = v195;
          v200 = v572;
          OUTLINED_FUNCTION_17_4(v198);
          OUTLINED_FUNCTION_27_4(v482);
          OUTLINED_FUNCTION_2_7(v416);
          OUTLINED_FUNCTION_1_9(v450);
          v201 = OUTLINED_FUNCTION_13_5(v572);
          v209 = OUTLINED_FUNCTION_41_0(v201, v202, v203, v204, v205, v206, v207, v208, v349, v366, v382, v399, v416, v433, v450, v466, v482, *((uint64_t *)&v482 + 1), v506,
                   v520,
                   v536,
                   v548,
                   v556,
                   v568,
                   v572,
                   v572);
          v367 = v199;
          if ((v209 & 1) != 0)
          {
            sub_2498CACBC(v196, v549);
            OUTLINED_FUNCTION_87(v451, v210, v211, v212, v213, v214, v215, v216, v350, v199, v383, v400, v417, v434, v451, v467, v483, v493, v507,
              v521,
              v537);
            OUTLINED_FUNCTION_2_7(v417);
            OUTLINED_FUNCTION_27_4(v197);
            OUTLINED_FUNCTION_17_4(v569);
            v217 = v435;
            v218 = v522;
          }
          else
          {
            v217 = v434;
            OUTLINED_FUNCTION_70(&v580, v434);
            v218 = (_QWORD *)v196;
          }
          v288 = v218[4];
          v289 = v218[5];
          __swift_project_boxed_opaque_existential_1(v218 + 1, v288);
          v290 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v289 + 48);
          OUTLINED_FUNCTION_6_5(v557);
          v290(v557, v400, v217, v288, v289);
          OUTLINED_FUNCTION_0_8(v200);
          OUTLINED_FUNCTION_17_4(v451);
          OUTLINED_FUNCTION_1_9(v417);
          OUTLINED_FUNCTION_15_5(v197);
          sub_2498CACBC(v507, v383);
          OUTLINED_FUNCTION_2_7(v557);
          OUTLINED_FUNCTION_2_7(v557);
          OUTLINED_FUNCTION_0_8(v577);
          OUTLINED_FUNCTION_17_4(v451);
          OUTLINED_FUNCTION_1_9(v417);
          OUTLINED_FUNCTION_15_5(v197);
          return sub_2498CACBC(v569, v367);
        }
        v58 = v472;
        OUTLINED_FUNCTION_9_5(v472);
        v60 = v14;
        OUTLINED_FUNCTION_16_4(v14);
        OUTLINED_FUNCTION_12_5(v11);
        OUTLINED_FUNCTION_1_9(v572);
        if (v20 <= 0x11u && ((1 << v20) & 0x3FA80) != 0)
        {
          v286 = (_QWORD *)(v510 + 8);
          v287 = *(_QWORD *)(v510 + 32);
          v401 = v287;
          v523 = *(_QWORD *)(v510 + 40);
          __swift_project_boxed_opaque_existential_1(v286, v287);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v523 + 48))(a1, a2, a3, v401);
        }
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_2498D9628@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;

  sub_2498CAC78(a1, a2);
  v6 = 8 * sub_249955670();
  v7 = a2;
  result = a1;
  if (v6 < 24)
    goto LABEL_4;
  v9 = HIDReport.init(bitCount:id:)(v6, 3);
  v11 = v10;
  v14 = v10;
  sub_2498CAC78(v9, v10);
  HIDReport.initialize(from:)();
  v13 = v12;
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(v9, v11);
  result = v9;
  v7 = v14;
  if ((v13 & 1) != 0)
  {
    *a3 = v9;
    a3[1] = v14;
  }
  else
  {
LABEL_4:
    sub_2498CACBC(result, v7);
    sub_249955C34();
    swift_bridgeObjectRelease();
    sub_2498CAC78(a1, a2);
    sub_2498E21BC(a1, a2);
    sub_2498CACBC(a1, a2);
    sub_249955EF8();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E90);
    sub_24995585C();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    result = sub_249955D6C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2498D97FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;

  sub_2498CAC78(a1, a2);
  v6 = 8 * sub_249955670();
  v7 = a2;
  result = a1;
  if (v6 < 40)
    goto LABEL_4;
  v9 = HIDReport.init(bitCount:id:)(v6, 4);
  v11 = v10;
  v14 = v10;
  sub_2498CAC78(v9, v10);
  HIDReport.initialize(from:)();
  v13 = v12;
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(v9, v11);
  result = v9;
  v7 = v14;
  if ((v13 & 1) != 0)
  {
    *a3 = v9;
    a3[1] = v14;
  }
  else
  {
LABEL_4:
    sub_2498CACBC(result, v7);
    sub_249955C34();
    swift_bridgeObjectRelease();
    sub_2498CAC78(a1, a2);
    sub_2498E21BC(a1, a2);
    sub_2498CACBC(a1, a2);
    sub_249955EF8();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E98);
    sub_24995585C();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    result = sub_249955D6C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2498D99D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;

  sub_2498CAC78(a1, a2);
  v6 = 8 * sub_249955670();
  v7 = a2;
  result = a1;
  if (v6 < 72)
    goto LABEL_4;
  v9 = HIDReport.init(bitCount:id:)(v6, 2);
  v11 = v10;
  v14 = v10;
  sub_2498CAC78(v9, v10);
  HIDReport.initialize(from:)();
  v13 = v12;
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(v9, v11);
  result = v9;
  v7 = v14;
  if ((v13 & 1) != 0)
  {
    *a3 = v9;
    a3[1] = v14;
  }
  else
  {
LABEL_4:
    sub_2498CACBC(result, v7);
    sub_249955C34();
    swift_bridgeObjectRelease();
    sub_2498CAC78(a1, a2);
    sub_2498E21BC(a1, a2);
    sub_2498CACBC(a1, a2);
    sub_249955EF8();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0EA0);
    sub_24995585C();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    result = sub_249955D6C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2498D9BA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;

  sub_2498CAC78(a1, a2);
  v6 = 8 * sub_249955670();
  v7 = a2;
  result = a1;
  if (v6 < 248)
    goto LABEL_4;
  v9 = HIDReport.init(bitCount:id:)(v6, 1);
  v11 = v10;
  v14 = v10;
  sub_2498CAC78(v9, v10);
  HIDReport.initialize(from:)();
  v13 = v12;
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(v9, v11);
  result = v9;
  v7 = v14;
  if ((v13 & 1) != 0)
  {
    *a3 = v9;
    a3[1] = v14;
  }
  else
  {
LABEL_4:
    sub_2498CACBC(result, v7);
    sub_249955C34();
    swift_bridgeObjectRelease();
    sub_2498CAC78(a1, a2);
    sub_2498E21BC(a1, a2);
    sub_2498CACBC(a1, a2);
    sub_249955EF8();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0EA8);
    sub_24995585C();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    result = sub_249955D6C();
    __break(1u);
  }
  return result;
}

uint64_t sub_2498D9D78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;

  sub_2498CAC78(a1, a2);
  v6 = 8 * sub_249955670();
  v7 = a2;
  result = a1;
  if (v6 < 136)
    goto LABEL_4;
  v9 = HIDReport.init(bitCount:id:)(v6, 5);
  v11 = v10;
  v14 = v10;
  sub_2498CAC78(v9, v10);
  HIDReport.initialize(from:)();
  v13 = v12;
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(v9, v11);
  result = v9;
  v7 = v14;
  if ((v13 & 1) != 0)
  {
    *a3 = v9;
    a3[1] = v14;
  }
  else
  {
LABEL_4:
    sub_2498CACBC(result, v7);
    sub_249955C34();
    swift_bridgeObjectRelease();
    sub_2498CAC78(a1, a2);
    sub_2498E21BC(a1, a2);
    sub_2498CACBC(a1, a2);
    sub_249955EF8();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0EB0);
    sub_24995585C();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    result = sub_249955D6C();
    __break(1u);
  }
  return result;
}

uint64_t EventReportAccumulator.resetValues(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[5];

  OUTLINED_FUNCTION_89();
  sub_2498D8320((uint64_t *)v3);
  sub_2498E09DC(v3, v0);
  sub_2498D9F98(v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498D9F98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE v53[16];
  _QWORD *v54;
  int64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  _BYTE *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t __s1;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v2 = v1;
  v91 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for EventReportSenderID();
  v58 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v57 = &v53[-v8];
  v9 = swift_bridgeObjectRetain();
  v10 = sub_2499512F4(v9);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_2498DF480(v11, v10);
  v60 = 0;
  v13 = *(_QWORD *)(v12 + 56);
  v54 = (_QWORD *)(v12 + 56);
  v59 = v12;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v55 = (unint64_t)(v14 + 63) >> 6;
  v56 = a1;
  v75 = v2 + 1;
  v76 = v7;
  v79 = v2;
  if (v16)
  {
    v17 = __clz(__rbit64(v16));
    v61 = (v16 - 1) & v16;
    v62 = 0;
LABEL_15:
    v21 = v57;
    sub_2498E2300(*(_QWORD *)(v59 + 48) + *(_QWORD *)(v58 + 72) * v17, (uint64_t)v57);
    sub_2498E2344((uint64_t)v21, (uint64_t)v7);
    if (*(_QWORD *)(a1 + 16) && (v22 = sub_2498DFA3C((uint64_t)v7), (v23 & 1) != 0))
    {
      v24 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 80 * v22);
      v25 = v24[1];
      v28 = v24[2];
      v27 = v24[3];
      v30 = v24[4];
      v29 = v24[5];
      v32 = v24[6];
      v31 = v24[7];
      v33 = v24[8];
      v34 = v24[9];
      __s1 = *v24;
      v26 = __s1;
      v82 = v25;
      v83 = v28;
      v84 = v27;
      v85 = v30;
      v86 = v29;
      v87 = v32;
      v88 = v31;
      v89 = v33;
      v71 = v25;
      sub_2498CAC78(__s1, v25);
      v72 = v28;
      v73 = v27;
      v35 = v27;
      v36 = v32;
      sub_2498CAC78(v28, v35);
      v77 = v29;
      sub_2498CAC78(v30, v29);
      v74 = v31;
      sub_2498CAC78(v32, v31);
      v78 = v33;
      v65 = v34;
      sub_2498CAC78(v33, v34);
    }
    else
    {
      sub_2498D8320(&__s1);
      v26 = __s1;
      v71 = v82;
      v72 = v83;
      v30 = v85;
      v73 = v84;
      v36 = v87;
      v74 = v88;
      v77 = v86;
      v78 = v89;
      v65 = v90;
    }
    v37 = *v79;
    v38 = *(_QWORD *)(*v79 + 16);
    v70 = v36;
    v64 = v30;
    if (v38 && (v39 = sub_2498DFA3C((uint64_t)v7), (v40 & 1) != 0))
    {
      v41 = (uint64_t *)(*(_QWORD *)(v37 + 56) + 80 * v39);
      v42 = *v41;
      v43 = v41[1];
      v66 = v26;
      v44 = v41[2];
      v45 = v41[3];
      v46 = v41[4];
      v47 = v41[5];
      v49 = v41[6];
      v48 = v41[7];
      v51 = v41[8];
      v50 = v41[9];
      __s1 = v42;
      v82 = v43;
      v83 = v44;
      v84 = v45;
      v85 = v46;
      v86 = v47;
      v87 = v49;
      v88 = v48;
      sub_2498CAC78(v42, v43);
      v80 = v45;
      sub_2498CAC78(v44, v45);
      v68 = v46;
      sub_2498CAC78(v46, v47);
      v67 = v49;
      v69 = v48;
      sub_2498CAC78(v49, v48);
      v63 = v50;
      sub_2498CAC78(v51, v50);
    }
    else
    {
      sub_2498D8320(&__s1);
      v43 = v82;
      v80 = v84;
      v68 = v85;
      v67 = v87;
      v69 = v88;
      v63 = v90;
    }
    __asm { BR              X8 }
  }
  v18 = 1;
  if (v55 > 1)
  {
    v19 = v54[1];
    if (v19)
    {
LABEL_14:
      v61 = (v19 - 1) & v19;
      v62 = v18;
      v17 = __clz(__rbit64(v19)) + (v18 << 6);
      goto LABEL_15;
    }
    v20 = 2;
    if (v55 > 2)
    {
      v19 = v54[2];
      if (v19)
        goto LABEL_13;
      v20 = 3;
      if (v55 <= 3)
        return swift_release();
      v19 = v54[3];
      if (v19)
      {
LABEL_13:
        v18 = v20;
        goto LABEL_14;
      }
      v20 = 4;
      if (v55 > 4)
      {
        v19 = v54[4];
        if (v19)
          goto LABEL_13;
        while (1)
        {
          v18 = v20 + 1;
          if (__OFADD__(v20, 1))
          {
            __break(1u);
            JUMPOUT(0x2498DC1ACLL);
          }
          if (v18 >= v55)
            break;
          v19 = v54[v18];
          ++v20;
          if (v19)
            goto LABEL_14;
        }
      }
    }
  }
  return swift_release();
}

void EventReportAccumulator.resetValues(matching:)(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t (*v68)(_QWORD);
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  _QWORD *v82;
  uint64_t v83[9];
  uint64_t v84;
  uint64_t v85;

  v4 = v2;
  v59 = OUTLINED_FUNCTION_73();
  v7 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_78();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v58 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v58 - v12;
  v14 = *v4;
  v15 = *(_QWORD *)(*v4 + 64);
  v71 = *v4 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v72 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v19 = 0;
  v70 = v4;
  v69 = a2;
  v68 = a1;
  v67 = v7;
  v66 = v11;
  v65 = v14;
  v64 = v13;
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v81 = v19;
    v21 = v20 | (v19 << 6);
LABEL_29:
    v30 = *(_QWORD *)(v7 + 72);
    sub_2498E2300(*(_QWORD *)(v14 + 48) + v30 * v21, (uint64_t)v13);
    sub_2498E2344((uint64_t)v13, (uint64_t)v11);
    if ((a1(v11) & 1) != 0)
    {
      sub_2498E2300((uint64_t)v11, v3);
      sub_2498D8320(v83);
      v31 = v83[0];
      v32 = v83[1];
      v73 = v83[2];
      v74 = v83[3];
      v75 = v83[4];
      v76 = v83[5];
      v77 = v83[6];
      v78 = v83[7];
      v79 = v83[8];
      v80 = v84;
      swift_isUniquelyReferenced_nonNull_native();
      v82 = (_QWORD *)*v4;
      v33 = v82;
      *v4 = 0x8000000000000000;
      v34 = v3;
      v35 = sub_2498DFA3C(v3);
      if (__OFADD__(v33[2], (v36 & 1) == 0))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v37 = v35;
      v38 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E38);
      if ((sub_249955D3C() & 1) != 0)
      {
        v39 = sub_2498DFA3C(v34);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_45;
        v37 = v39;
      }
      v41 = v82;
      if ((v38 & 1) != 0)
      {
        v42 = (uint64_t *)(v82[7] + 80 * v37);
        v43 = *v42;
        v44 = v42[1];
        v45 = v42[2];
        v46 = v42[4];
        v61 = v42[6];
        v60 = v42[7];
        v63 = v42[8];
        v62 = v42[9];
        sub_2498CACBC(v43, v44);
        OUTLINED_FUNCTION_13_5(v45);
        OUTLINED_FUNCTION_9_5(v46);
        OUTLINED_FUNCTION_53_0(v61, (uint64_t)&v84);
        OUTLINED_FUNCTION_53_0(v63, (uint64_t)&v85);
        *v42 = v31;
        v42[1] = v32;
        v47 = v74;
        v42[2] = v73;
        v42[3] = v47;
        v48 = v76;
        v42[4] = v75;
        v42[5] = v48;
        v49 = v78;
        v42[6] = v77;
        v42[7] = v49;
        v50 = v80;
        v42[8] = v79;
        v42[9] = v50;
        v3 = v34;
      }
      else
      {
        v82[(v37 >> 6) + 8] |= 1 << v37;
        v3 = v34;
        sub_2498E2300(v34, v41[6] + v37 * v30);
        v51 = (uint64_t *)(v41[7] + 80 * v37);
        *v51 = v31;
        v51[1] = v32;
        v52 = v74;
        v51[2] = v73;
        v51[3] = v52;
        v53 = v76;
        v51[4] = v75;
        v51[5] = v53;
        v54 = v78;
        v51[6] = v77;
        v51[7] = v54;
        v55 = v80;
        v51[8] = v79;
        v51[9] = v55;
        v56 = v41[2];
        v26 = __OFADD__(v56, 1);
        v57 = v56 + 1;
        if (v26)
          goto LABEL_43;
        v41[2] = v57;
      }
      v4 = v70;
      *v70 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      sub_2498E2388(v3);
      v11 = v66;
      sub_2498E2388((uint64_t)v66);
      a1 = v68;
      v7 = v67;
      v14 = v65;
      v13 = v64;
      v19 = v81;
    }
    else
    {
      sub_2498E2388((uint64_t)v11);
      v19 = v81;
    }
  }
  v22 = v19 + 1;
  if (__OFADD__(v19, 1))
    goto LABEL_42;
  if (v22 >= v72)
  {
LABEL_40:
    swift_release();
    sub_2498D9F98(v14);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_0();
    return;
  }
  v23 = *(_QWORD *)(v71 + 8 * v22);
  v24 = v19 + 1;
  if (v23)
    goto LABEL_28;
  OUTLINED_FUNCTION_84();
  if (v25 == v26)
    goto LABEL_40;
  OUTLINED_FUNCTION_49_0();
  if (v23)
    goto LABEL_28;
  OUTLINED_FUNCTION_84();
  if (v25 == v26)
    goto LABEL_40;
  OUTLINED_FUNCTION_49_0();
  if (v23)
    goto LABEL_28;
  OUTLINED_FUNCTION_84();
  if (v25 == v26)
    goto LABEL_40;
  OUTLINED_FUNCTION_49_0();
  if (v23)
    goto LABEL_28;
  OUTLINED_FUNCTION_84();
  if (v25 == v26)
    goto LABEL_40;
  OUTLINED_FUNCTION_49_0();
  if (v23)
  {
LABEL_28:
    v18 = (v23 - 1) & v23;
    v81 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    goto LABEL_29;
  }
  v28 = v27 + 5;
  if (v28 >= v72)
    goto LABEL_40;
  v23 = *(_QWORD *)(v71 + 8 * v28);
  if (v23)
  {
    v24 = v28;
    goto LABEL_28;
  }
  while (!__OFADD__(v28, 1))
  {
    OUTLINED_FUNCTION_84();
    if (v25 == v26)
      goto LABEL_40;
    OUTLINED_FUNCTION_49_0();
    v28 = v29 + 1;
    if (v23)
      goto LABEL_28;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  sub_249955F64();
  __break(1u);
}

Swift::Void __swiftcall EventReportAccumulator.resetAllValues()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_2498E1870(v2);
  swift_bridgeObjectRelease();
  *v0 = v3;
  sub_2498D9F98(v1);
  OUTLINED_FUNCTION_7_5();
}

uint64_t EventReportAccumulator.removeValues(_:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  OUTLINED_FUNCTION_89();
  sub_2498E0634(v0, &v3);
  sub_2498E23C4(v3, *((unint64_t *)&v3 + 1), v4, v5, v6, v7, v8, v9, v10, v11);
  sub_2498D9F98(v1);
  return swift_bridgeObjectRelease();
}

uint64_t EventReportAccumulator.removeValues(matching:)(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_2498E1C64(v6, a1, a2);
  swift_bridgeObjectRelease();
  *v2 = v7;
  sub_2498D9F98(v5);
  return OUTLINED_FUNCTION_7_5();
}

void EventReportAccumulator.flush(to:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v15;
  _BOOL4 v16;
  _BOOL4 v17;
  uint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  _BOOL4 v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v33[37];
  _BOOL4 v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  _BOOL4 v38;
  uint64_t v39;
  _BOOL4 v40;
  uint64_t v41;
  _BOOL4 v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;

  v3 = v1;
  v75 = a1;
  v89 = *MEMORY[0x24BDAC8D0];
  v4 = OUTLINED_FUNCTION_73();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_78();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v33 - v7;
  sub_2498D8320(&v79);
  v9 = *v1;
  v10 = 1 << *(_BYTE *)(*v1 + 32);
  v11 = (unint64_t)(v10 + 63) >> 6;
  v68 = v80 >> 62;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v33[21] = HIDWORD(v79);
  v43 = HIDWORD(v79) - (int)v79;
  v13 = v81;
  v65 = BYTE6(v80);
  v33[34] = (int)v79;
  v14 = __OFSUB__(HIDWORD(v79), (_DWORD)v79);
  v42 = v14;
  v33[13] = HIDWORD(v81);
  v41 = HIDWORD(v81) - (int)v81;
  v15 = v87;
  v16 = __OFSUB__(HIDWORD(v81), (_DWORD)v81);
  v40 = v16;
  v33[10] = HIDWORD(v83);
  v39 = HIDWORD(v83) - (int)v83;
  v17 = __OFSUB__(HIDWORD(v83), (_DWORD)v83);
  v38 = v17;
  v33[7] = HIDWORD(v85);
  v37 = HIDWORD(v85) - (int)v85;
  v18 = *(_QWORD *)(v9 + 64);
  v70 = v9 + 64;
  v19 = v12 & v18;
  v20 = __OFSUB__(HIDWORD(v85), (_DWORD)v85);
  v36 = v20;
  v33[4] = HIDWORD(v87);
  v35 = HIDWORD(v87) - (int)v87;
  v47 = v80;
  v33[36] = v80 & 0x3FFFFFFFFFFFFFFFLL;
  v49 = v79;
  v33[20] = v79 >> 32;
  v33[11] = (v79 >> 32) - (int)v79;
  v60 = v82 >> 62;
  v64 = BYTE6(v82);
  v48 = v82;
  v33[35] = v82 & 0x3FFFFFFFFFFFFFFFLL;
  v33[14] = (int)v81;
  v59 = v84 >> 62;
  v63 = BYTE6(v84);
  v46 = v84;
  v33[19] = v84 & 0x3FFFFFFFFFFFFFFFLL;
  v33[9] = (int)v83;
  v52 = v83;
  v33[8] = v83 >> 32;
  v58 = v86 >> 62;
  v62 = BYTE6(v86);
  v45 = v86;
  v33[18] = v86 & 0x3FFFFFFFFFFFFFFFLL;
  v33[6] = (int)v85;
  v51 = v85;
  v33[5] = v85 >> 32;
  v67 = v88 >> 62;
  v21 = __OFSUB__(HIDWORD(v87), (_DWORD)v87);
  v34 = v21;
  v61 = BYTE6(v88);
  v44 = v88;
  v33[33] = v88 & 0x3FFFFFFFFFFFFFFFLL;
  v33[3] = (int)v87;
  v33[2] = v87 >> 32;
  v33[12] = v81 >> 32;
  v33[1] = (v81 >> 32) - (int)v81;
  swift_bridgeObjectRetain_n();
  v22 = 0;
  v69 = 0;
  v57 = v3;
  v56 = v5;
  v55 = v8;
  v66 = v13;
  v50 = v15;
  v54 = v9;
  v53 = v11;
  v78[1] = v2;
  if (!v19)
    goto LABEL_21;
LABEL_20:
  v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    sub_2498E2300(*(_QWORD *)(v9 + 48) + *(_QWORD *)(v5 + 72) * i, (uint64_t)v8);
    sub_2498E2344((uint64_t)v8, v2);
    v28 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v29 = sub_2498DFA3C(v2);
      if ((v30 & 1) != 0)
      {
        v71 = v22;
        v72 = v19;
        v31 = (_QWORD *)(*(_QWORD *)(v28 + 56) + 80 * v29);
        v32 = v31[1];
        v73 = v31[3];
        v78[2] = v31[8];
        __asm { BR              X11 }
      }
    }
    sub_2498E2388(v2);
    if (v19)
      goto LABEL_20;
LABEL_21:
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      JUMPOUT(0x2498DF12CLL);
    }
    if (v22 >= v11)
      goto LABEL_45;
    v26 = *(_QWORD *)(v70 + 8 * v22);
    if (!v26)
      break;
LABEL_35:
    v19 = (v26 - 1) & v26;
  }
  if (v22 + 1 >= v11)
    goto LABEL_45;
  OUTLINED_FUNCTION_51_0();
  if (v26)
    goto LABEL_34;
  if (v22 + 2 >= v11)
    goto LABEL_45;
  OUTLINED_FUNCTION_51_0();
  if (v26)
    goto LABEL_34;
  if (v22 + 3 >= v11)
    goto LABEL_45;
  OUTLINED_FUNCTION_51_0();
  if (v26)
    goto LABEL_34;
  if (v22 + 4 >= v11)
    goto LABEL_45;
  OUTLINED_FUNCTION_51_0();
  if (v26)
    goto LABEL_34;
  if (v22 + 5 >= v11)
    goto LABEL_45;
  OUTLINED_FUNCTION_51_0();
  if (v26)
  {
LABEL_34:
    v22 = v27;
    goto LABEL_35;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      JUMPOUT(0x2498DF19CLL);
    }
    if (v22 >= v11)
      break;
    v26 = *(_QWORD *)(v70 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_35;
  }
LABEL_45:
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53_0(v49, (uint64_t)&v77);
  OUTLINED_FUNCTION_53_0(v66, (uint64_t)v78);
  OUTLINED_FUNCTION_53_0(v52, (uint64_t)&v76);
  OUTLINED_FUNCTION_53_0(v51, (uint64_t)&v75);
  OUTLINED_FUNCTION_53_0(v50, (uint64_t)&v74);
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498DF480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[4];
  unint64_t v54;

  v51 = type metadata accessor for EventReportSenderID();
  v45 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v42 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v42 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v42 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v44 = (uint64_t)&v42 - v16;
  sub_2498E1838(a1, v53);
  v46 = v53[0];
  v42 = v53[1];
  v49 = v53[3];
  v17 = v54;
  v43 = (unint64_t)(v53[2] + 64) >> 6;
  if (!v54)
    goto LABEL_3;
LABEL_2:
  v50 = (v17 - 1) & v17;
  for (i = __clz(__rbit64(v17)) | (v49 << 6); ; i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    v23 = *(_QWORD *)(v45 + 72);
    v24 = v44;
    sub_2498E2300(*(_QWORD *)(v46 + 48) + v23 * i, v44);
    sub_2498E2344(v24, (uint64_t)v15);
    sub_249955FB8();
    v25 = sub_2499556F4();
    v26 = sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v47 = v26;
    v48 = v25;
    sub_2499557D8();
    v27 = *(int *)(v51 + 20);
    sub_249955FF4();
    v28 = sub_249956000();
    v29 = -1 << *(_BYTE *)(a2 + 32);
    v30 = v28 & ~v29;
    if (((*(_QWORD *)(a2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
    {
      v31 = ~v29;
      while (1)
      {
        sub_2498E2300(*(_QWORD *)(a2 + 48) + v30 * v23, (uint64_t)v6);
        if ((sub_2499556C4() & 1) != 0 && *(_QWORD *)&v6[*(int *)(v51 + 20)] == *(_QWORD *)&v15[v27])
          break;
        sub_2498E2388((uint64_t)v6);
        v30 = (v30 + 1) & v31;
        if (((*(_QWORD *)(a2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
          goto LABEL_24;
      }
      sub_2498E2388((uint64_t)v6);
      goto LABEL_38;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2498E2300((uint64_t)v15, (uint64_t)v12);
    v52 = a2;
    if (*(_QWORD *)(a2 + 24) <= *(_QWORD *)(a2 + 16))
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_249946FCC();
LABEL_36:
    a2 = v52;
    *(_QWORD *)(v52 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v30;
    sub_2498E2344((uint64_t)v12, *(_QWORD *)(a2 + 48) + v30 * v23);
    v38 = *(_QWORD *)(a2 + 16);
    v39 = __OFADD__(v38, 1);
    v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    *(_QWORD *)(a2 + 16) = v40;
LABEL_38:
    swift_bridgeObjectRelease();
    sub_2498E2388((uint64_t)v15);
    v17 = v50;
    if (v50)
      goto LABEL_2;
LABEL_3:
    v19 = v49 + 1;
    if (__OFADD__(v49, 1))
      goto LABEL_42;
    if (v19 >= v43)
      goto LABEL_40;
    v20 = *(_QWORD *)(v42 + 8 * v19);
    v21 = v49 + 1;
    if (!v20)
    {
      v21 = v49 + 2;
      if (v49 + 2 >= v43)
        goto LABEL_40;
      v20 = *(_QWORD *)(v42 + 8 * v21);
      if (!v20)
      {
        v21 = v49 + 3;
        if (v49 + 3 >= v43)
          goto LABEL_40;
        v20 = *(_QWORD *)(v42 + 8 * v21);
        if (!v20)
        {
          v21 = v49 + 4;
          if (v49 + 4 >= v43)
            goto LABEL_40;
          v20 = *(_QWORD *)(v42 + 8 * v21);
          if (!v20)
          {
            v21 = v49 + 5;
            if (v49 + 5 >= v43)
              goto LABEL_40;
            v20 = *(_QWORD *)(v42 + 8 * v21);
            if (!v20)
            {
              v22 = v49 + 6;
              while (v22 < v43)
              {
                v20 = *(_QWORD *)(v42 + 8 * v22++);
                if (v20)
                {
                  v21 = v22 - 1;
                  goto LABEL_18;
                }
              }
LABEL_40:
              swift_release();
              return a2;
            }
          }
        }
      }
    }
LABEL_18:
    v49 = v21;
    v50 = (v20 - 1) & v20;
  }
  if (isUniquelyReferenced_nonNull_native)
    sub_2499465EC();
  else
    sub_24994748C();
  v33 = v52;
  sub_249955FB8();
  sub_2499557D8();
  v34 = *(int *)(v51 + 20);
  sub_249955FF4();
  v35 = sub_249956000();
  v36 = -1 << *(_BYTE *)(v33 + 32);
  v30 = v35 & ~v36;
  if (((*(_QWORD *)(v33 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    goto LABEL_36;
  v37 = ~v36;
  while (1)
  {
    sub_2498E2300(*(_QWORD *)(v33 + 48) + v30 * v23, (uint64_t)v9);
    if ((sub_2499556C4() & 1) != 0 && *(_QWORD *)&v9[*(int *)(v51 + 20)] == *(_QWORD *)&v12[v34])
      break;
    sub_2498E2388((uint64_t)v9);
    v30 = (v30 + 1) & v37;
    if (((*(_QWORD *)(v33 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      goto LABEL_36;
  }
LABEL_43:
  sub_2498E2388((uint64_t)v9);
  result = sub_249955F58();
  __break(1u);
  return result;
}

uint64_t sub_2498DF9D0()
{
  return j___s12UniversalHID21HIDVirtualServicePoolC10sendReport_4fromyAA9HIDReportV_AA05EventG8SenderIDVtF();
}

unint64_t sub_2498DF9F0(unsigned __int8 a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  sub_249955FD0();
  v2 = OUTLINED_FUNCTION_79();
  return sub_2498DFCB0(a1, v2);
}

unint64_t sub_2498DFA3C(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  sub_2499556F4();
  sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2499557D8();
  OUTLINED_FUNCTION_73();
  sub_249955FF4();
  v2 = OUTLINED_FUNCTION_79();
  return sub_2498DFD50(a1, v2);
}

unint64_t sub_2498DFACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_45_0();
  sub_249955880();
  v4 = OUTLINED_FUNCTION_79();
  return sub_2498DFE64(a1, a2, v4);
}

unint64_t sub_2498DFB24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249955FAC();
  return sub_2498DFF44(a1, v2);
}

unint64_t sub_2498DFB54(unsigned int a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  sub_249955FDC();
  sub_249955FDC();
  v2 = OUTLINED_FUNCTION_79();
  return sub_2498DFFE0(a1, v2);
}

unint64_t sub_2498DFBB0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24BCFB1A8](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_2498E0060(a1, v3);
}

unint64_t sub_2498DFBE4(uint64_t a1)
{
  uint64_t v2;

  sub_2499556F4();
  sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_2499557CC();
  return sub_2498E00FC(a1, v2);
}

unint64_t sub_2498DFC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_45_0();
  sub_249955FF4();
  sub_249955FC4();
  v4 = OUTLINED_FUNCTION_79();
  return sub_2498E023C(a1, a2, v4);
}

unint64_t sub_2498DFCB0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2498DFD50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_2498E2300(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      if ((sub_2499556C4() & 1) != 0 && *(_QWORD *)&v8[*(int *)(v5 + 20)] == *(_QWORD *)(a1 + *(int *)(v5 + 20)))
        break;
      sub_2498E2388((uint64_t)v8);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_2498E2388((uint64_t)v8);
  }
  return v10;
}

unint64_t sub_2498DFE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_249955F28() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_249955F28() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2498DFF44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2498DFFE0(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned __int16 *v9;
  int v10;
  int v11;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = (unsigned __int16)a1;
    v7 = HIWORD(a1);
    v8 = ~v4;
    do
    {
      v9 = (unsigned __int16 *)(*(_QWORD *)(v2 + 48) + 4 * result);
      v10 = *v9;
      v11 = v9[1];
      if (v10 == v6 && v11 == v7)
        break;
      result = (result + 1) & v8;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2498E0060(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2498E00FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_2499556F4();
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_2498E2984(&qword_2578A0E50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v15 = sub_24995582C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_2498E023C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v8;
      v9 = v8[1];
      if (v10 == a1 && v9 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

void sub_2498E02B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2498E0314(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  BOOL *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  __int16 v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v40 = v37;
  v41 = v38;
  v42 = BYTE2(v38);
  v43 = BYTE3(v38);
  v44 = BYTE4(v38);
  v45 = BYTE5(v38);
  if (!v36)
  {
    __break(1u);
    JUMPOUT(0x2498E0498);
  }
  result = memcmp(v36, &v40, BYTE6(v38));
  *v35 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_2498E04D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_24995555C();
  v11 = result;
  if (result)
  {
    result = sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_249955568();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2498E02B4(v11, v17, a4, a5);
  sub_2498CACBC(a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_2498E0598(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_24995555C();
  v8 = (char *)result;
  if (result)
  {
    result = sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = sub_249955568();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

double sub_2498E0634@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2498DFA3C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E38);
    sub_249955D3C();
    v8 = *(_QWORD *)(v14 + 48);
    v9 = type metadata accessor for EventReportSenderID();
    sub_2498E2388(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6);
    v10 = (_OWORD *)(*(_QWORD *)(v14 + 56) + 80 * v6);
    v11 = v10[1];
    *a2 = *v10;
    a2[1] = v11;
    v12 = v10[3];
    a2[2] = v10[2];
    a2[3] = v12;
    a2[4] = v10[4];
    sub_2498E2984(&qword_2578A0E30, (uint64_t (*)(uint64_t))type metadata accessor for EventReportSenderID, (uint64_t)&protocol conformance descriptor for EventReportSenderID);
    sub_249955D54();
    *v3 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = xmmword_249957580;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
  }
  return result;
}

double sub_2498E07A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  double result;
  uint64_t v11;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2498DFACC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E60);
    sub_249955D3C();
    swift_bridgeObjectRelease();
    sub_2498E29C4((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_249955D54();
    *v4 = v11;
    OUTLINED_FUNCTION_48_0();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_2498E08B8(unsigned int a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v5;

  sub_2498DFB54(a1);
  if ((v2 & 1) == 0)
    return 3;
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_71_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E68);
  OUTLINED_FUNCTION_65();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 56) + v1);
  sub_2498CC498();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_103();
  return v3;
}

uint64_t sub_2498E0948(unsigned int a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v5;

  sub_2498DFBB0(a1);
  if ((v2 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_71_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E58);
  OUTLINED_FUNCTION_65();
  v3 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v1);
  sub_249955730();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_103();
  return v3;
}

uint64_t sub_2498E09DC(_OWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_2498E0B9C(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498E0A48(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_91();
  v6 = sub_2498E0CF4(a1, a2, a3);
  OUTLINED_FUNCTION_47_0((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return OUTLINED_FUNCTION_48_0();
}

uint64_t sub_2498E0A9C()
{
  __int128 *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_77();
  v0 = (__int128 *)OUTLINED_FUNCTION_58_0();
  v2 = sub_2498E0F0C(v0, v1);
  OUTLINED_FUNCTION_47_0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_7_5();
}

uint64_t sub_2498E0AD0(char a1, unsigned int a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_91();
  v4 = sub_2498E111C(a1, a2);
  OUTLINED_FUNCTION_47_0(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return OUTLINED_FUNCTION_7_5();
}

uint64_t sub_2498E0B18()
{
  uint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_77();
  v0 = OUTLINED_FUNCTION_58_0();
  v2 = sub_2498E1210(v0, v1);
  OUTLINED_FUNCTION_47_0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_7_5();
}

uint64_t sub_2498E0B4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_77();
  v15 = *v2;
  *v2 = 0x8000000000000000;
  v5 = sub_2498E130C(v3, a2);
  OUTLINED_FUNCTION_47_0(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return OUTLINED_FUNCTION_7_5();
}

uint64_t *sub_2498E0B9C(_OWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t *result;
  uint64_t v18;

  v3 = (_QWORD **)v2;
  v6 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)*v2;
  v10 = sub_2498DFA3C(a2);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E38);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_5;
  v14 = sub_2498DFA3C(a2);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    result = (uint64_t *)sub_249955F64();
    __break(1u);
    return result;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
    return sub_2498E2A14(a1, (uint64_t *)(v16[7] + 80 * v12));
  sub_2498E2300(a2, (uint64_t)v8);
  return (uint64_t *)sub_2498E14C8(v12, (uint64_t)v8, a1, v16);
}

_OWORD *sub_2498E0CF4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2498DFACC(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E60);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2498DFACC(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_249955F64();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_2498E29C4(a1, v16);
  }
  else
  {
    sub_2498E1568(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

unint64_t sub_2498E0E10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  sub_2498DFB24(a2);
  OUTLINED_FUNCTION_109();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E70);
  result = OUTLINED_FUNCTION_102();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_2498DFB24(a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    result = sub_249955F64();
    __break(1u);
    return result;
  }
  v8 = result;
LABEL_5:
  v12 = *v2;
  if ((v9 & 1) == 0)
    return sub_2498E15D0(v8, a2, a1, v12);
  v13 = *(_QWORD *)(v12 + 56) + 56 * v8;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v13 = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 16) = v14;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v13 + 47) = *(_DWORD *)(a1 + 47);
  return result;
}

uint64_t sub_2498E0F0C(__int128 *a1, char a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_2498DF9F0(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2670);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_2498DF9F0(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_249955F64();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_2498E161C(v9, a2, a1, v13);
  v14 = v13[7] + 40 * v9;
  __swift_destroy_boxed_opaque_existential_1(v14);
  return sub_2498CF9C0(a1, v14);
}

void sub_2498E1014(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = OUTLINED_FUNCTION_73();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_109();
  if (v10)
  {
    __break(1u);
    goto LABEL_10;
  }
  v11 = v8;
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E78);
  if ((OUTLINED_FUNCTION_102() & 1) != 0)
  {
    v13 = OUTLINED_FUNCTION_105();
    if ((v12 & 1) == (v14 & 1))
    {
      v11 = v13;
      goto LABEL_5;
    }
LABEL_10:
    sub_249955F64();
    __break(1u);
    return;
  }
LABEL_5:
  v15 = *v2;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2498E2300(a2, (uint64_t)v7);
    sub_2498E1684(v11, (uint64_t)v7, a1, v15);
  }
  OUTLINED_FUNCTION_4_0();
}

unint64_t sub_2498E111C(char a1, unsigned int a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  _QWORD *v13;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_2498DFB54(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E68);
  result = sub_249955D3C();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_2498DFB54(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_249955F64();
    __break(1u);
    return result;
  }
  v9 = result;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_2498E1714(v9, a2, a1, v13);
  *(_BYTE *)(v13[7] + v9) = a1;
  return result;
}

unint64_t sub_2498E1210(uint64_t a1, unsigned int a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_2498DFBB0(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E58);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_2498DFBB0(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_249955F64();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_2498E1758(v9, a2, a1, v13);
  v14 = v13[7];
  result = swift_release();
  *(_QWORD *)(v14 + 8 * v9) = a1;
  return result;
}

uint64_t sub_2498E130C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = sub_2499556F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  v11 = sub_2498DFBE4(a2);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E40);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_5;
  v15 = sub_2498DFBE4(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    result = sub_249955F64();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 8 * v13) = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    return sub_2498E179C(v13, (uint64_t)v9, a1, v17);
  }
  return result;
}

unint64_t sub_2498E1450(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = OUTLINED_FUNCTION_108(a1, a2, a3, a4);
  *(_BYTE *)(v7 + result) = v6;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * result) = v8;
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    *(_QWORD *)(v5 + 16) = v11;
  return result;
}

unint64_t sub_2498E1480(unint64_t result, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void *sub_2498E14C8(unint64_t a1, uint64_t a2, const void *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for EventReportSenderID();
  sub_2498E2344(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  result = memcpy((void *)(a4[7] + 80 * a1), a3, 0x50uLL);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_2498E1568(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2498E29C4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2498E15D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  result = OUTLINED_FUNCTION_108(a1, a2, a3, a4);
  *(_QWORD *)(v7 + 8 * result) = v6;
  v8 = *(_QWORD *)(v5 + 56) + 56 * result;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_DWORD *)(v8 + 47) = *(_DWORD *)(v9 + 47);
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    *(_QWORD *)(v5 + 16) = v13;
  return result;
}

uint64_t sub_2498E161C(unint64_t a1, char a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_2498CF9C0(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_2498E1684(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for EventReportSenderID();
  result = sub_2498E2344(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_2498E1714(unint64_t result, int a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_2498E1758(unint64_t result, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_2498E179C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2499556F4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2498E1838@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_2498E1870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;

  v2 = type metadata accessor for EventReportSenderID();
  v48 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E88);
  result = sub_249955DA8();
  v5 = (_QWORD *)result;
  v6 = 0;
  v49 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v44 = v8;
  v45 = (unint64_t)(v10 + 63) >> 6;
  v46 = result + 64;
  v47 = (_QWORD *)result;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v50 = (v12 - 1) & v12;
  v51 = v6;
  for (i = __clz(__rbit64(v12)) | (v6 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v18 = *(_QWORD *)(v48 + 72) * i;
    sub_2498E2300(*(_QWORD *)(v49 + 48) + v18, v57);
    if (qword_2578A0750 != -1)
      swift_once();
    v56 = xmmword_2578A0F18;
    HIDReportDescriptor.reportBitCount(for:)();
    v20 = HIDReport.init(bitCount:id:)(v19, 1);
    v54 = v21;
    v55 = v20;
    if (qword_2578A0768 != -1)
      swift_once();
    v56 = xmmword_2578A1350;
    HIDReportDescriptor.reportBitCount(for:)();
    v23 = HIDReport.init(bitCount:id:)(v22, 2);
    v52 = v24;
    v53 = v23;
    if (qword_2578A0758 != -1)
      swift_once();
    v56 = xmmword_2578A0F68;
    HIDReportDescriptor.reportBitCount(for:)();
    v26 = HIDReport.init(bitCount:id:)(v25, 3);
    v28 = v27;
    if (qword_2578A0740 != -1)
      swift_once();
    v56 = xmmword_2578A0EB8;
    HIDReportDescriptor.reportBitCount(for:)();
    v30 = HIDReport.init(bitCount:id:)(v29, 4);
    v32 = v31;
    if (qword_2578A0810 != -1)
      swift_once();
    v56 = xmmword_2578A3278;
    HIDReportDescriptor.reportBitCount(for:)();
    v34 = HIDReport.init(bitCount:id:)(v33, 5);
    v36 = v35;
    v5 = v47;
    *(_QWORD *)(v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = sub_2498E2344(v57, v5[6] + v18);
    v37 = (uint64_t *)(v5[7] + 80 * i);
    v38 = v54;
    *v37 = v55;
    v37[1] = v38;
    v39 = v52;
    v37[2] = v53;
    v37[3] = v39;
    v37[4] = v26;
    v37[5] = v28;
    v37[6] = v30;
    v37[7] = v32;
    v37[8] = v34;
    v37[9] = v36;
    v40 = v5[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v5[2] = v42;
    v12 = v50;
    v6 = v51;
    if (v50)
      goto LABEL_4;
LABEL_5:
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_34;
    if (v14 >= v45)
      return (uint64_t)v5;
    v15 = *(_QWORD *)(v44 + 8 * v14);
    v16 = v6 + 1;
    if (!v15)
    {
      v16 = v6 + 2;
      if (v6 + 2 >= v45)
        return (uint64_t)v5;
      v15 = *(_QWORD *)(v44 + 8 * v16);
      if (!v15)
      {
        v16 = v6 + 3;
        if (v6 + 3 >= v45)
          return (uint64_t)v5;
        v15 = *(_QWORD *)(v44 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v50 = (v15 - 1) & v15;
    v51 = v16;
  }
  v17 = v6 + 4;
  if (v6 + 4 >= v45)
    return (uint64_t)v5;
  v15 = *(_QWORD *)(v44 + 8 * v17);
  if (v15)
  {
    v16 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v45)
      return (uint64_t)v5;
    v15 = *(_QWORD *)(v44 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2498E1C64(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_24994639C(0, v8, v9);
    sub_2498E1DE0((uint64_t)v9, v8, v6, a2, a3);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_24994639C(0, v8, v11);
    sub_2498E1DE0((uint64_t)v11, v8, v6, a2, a3);
    a3 = v12;
    MEMORY[0x24BCFB9B8](v11, -1, -1);
  }
  return a3;
}

void sub_2498E1DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v54 = a4;
  v55 = a5;
  v46[0] = a2;
  v47 = a1;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E80);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (uint64_t)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventReportSenderID();
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v57 = a3;
  v10 = *(_QWORD *)(a3 + 64);
  v48 = 0;
  v49 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v50 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v64 = (v13 - 1) & v13;
      v65 = v9;
      v14 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_20;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v50)
      goto LABEL_24;
    v16 = *(_QWORD *)(v49 + 8 * v15);
    v17 = v9 + 1;
    if (!v16)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v50)
        goto LABEL_24;
      v16 = *(_QWORD *)(v49 + 8 * v17);
      if (!v16)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v50)
          goto LABEL_24;
        v16 = *(_QWORD *)(v49 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_19:
    v64 = (v16 - 1) & v16;
    v65 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_20:
    v19 = v57;
    v20 = v66;
    sub_2498E2300(*(_QWORD *)(v57 + 48) + *(_QWORD *)(v51 + 72) * v14, v66);
    v21 = *(_QWORD *)(v19 + 56);
    v56 = v14;
    v22 = (uint64_t *)(v21 + 80 * v14);
    v23 = *v22;
    v67 = v22[1];
    v25 = v22[2];
    v24 = v22[3];
    v27 = v22[4];
    v26 = v22[5];
    v29 = v22[6];
    v28 = v22[7];
    v31 = v22[8];
    v30 = v22[9];
    v58 = v31;
    v68 = v30;
    v32 = v20;
    v33 = v52;
    sub_2498E2300(v32, v52);
    v34 = (uint64_t *)(v33 + *(int *)(v53 + 48));
    v60 = v27;
    v61 = v23;
    v35 = v67;
    *v34 = v23;
    v34[1] = v35;
    v34[2] = v25;
    v34[3] = v24;
    v34[4] = v27;
    v34[5] = v26;
    v59 = v29;
    v34[6] = v29;
    v34[7] = v28;
    v34[8] = v31;
    v36 = v68;
    v34[9] = v68;
    sub_2498CAC78(v23, v35);
    v37 = v25;
    v38 = v25;
    v62 = v25;
    v39 = v24;
    sub_2498CAC78(v37, v24);
    v63 = v26;
    sub_2498CAC78(v27, v26);
    sub_2498CAC78(v29, v28);
    v40 = v58;
    sub_2498CAC78(v58, v36);
    v41 = v61;
    v42 = v67;
    sub_2498CAC78(v61, v67);
    sub_2498CAC78(v38, v39);
    v43 = v60;
    sub_2498CAC78(v60, v26);
    v44 = v59;
    sub_2498CAC78(v59, v28);
    sub_2498CAC78(v40, v36);
    LOBYTE(v36) = v54(v33);
    sub_2498E29D4(v33);
    sub_2498CACBC(v41, v42);
    sub_2498CACBC(v62, v39);
    sub_2498CACBC(v43, v63);
    sub_2498CACBC(v44, v28);
    sub_2498CACBC(v40, v68);
    sub_2498E2388(v66);
    v13 = v64;
    v9 = v65;
    if ((v36 & 1) == 0)
    {
      *(_QWORD *)(v47 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
      if (__OFADD__(v48++, 1))
      {
        __break(1u);
LABEL_24:
        sub_2498F8088();
        return;
      }
    }
  }
  v18 = v9 + 4;
  if (v9 + 4 >= v50)
    goto LABEL_24;
  v16 = *(_QWORD *)(v49 + 8 * v18);
  if (v16)
  {
    v17 = v9 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v50)
      goto LABEL_24;
    v16 = *(_QWORD *)(v49 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_2498E21BC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_2498E2204(unsigned __int8 a1, uint64_t a2)
{
  unsigned __int8 v2;

  if ((a2 & 0xFF000000000000) != 0)
    v2 = a1;
  else
    v2 = 0;
  return v2 | (((a2 & 0xFF000000000000) == 0) << 8);
}

uint64_t sub_2498E2300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498E2344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498E2388(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498E23C4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a2 >> 60 != 15)
  {
    sub_2498CACBC(result, a2);
    sub_2498CACBC(a3, a4);
    sub_2498CACBC(a5, a6);
    sub_2498CACBC(a7, a8);
    return sub_2498CACBC(a9, a10);
  }
  return result;
}

uint64_t sub_2498E2450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2498CF8CC(a1 + 8, a2);
}

uint64_t dispatch thunk of EventReportDispatcherProtocol.sendReport(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t destroy for EventReportAccumulator(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for EventReportAccumulator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *assignWithCopy for EventReportAccumulator(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EventReportAccumulator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportAccumulator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventReportAccumulator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventReportAccumulator()
{
  return &type metadata for EventReportAccumulator;
}

uint64_t initializeBufferWithCopyOfBuffer for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EventReportAccumulator.Value(uint64_t a1)
{
  sub_2498CACBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_2498CACBC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_2498CACBC(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_2498CACBC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return sub_2498CACBC(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

uint64_t *initializeWithCopy for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  sub_2498CAC78(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  sub_2498CAC78(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  v8 = a2[4];
  v9 = a2[5];
  sub_2498CAC78(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  v10 = a2[6];
  v11 = a2[7];
  sub_2498CAC78(v10, v11);
  a1[6] = v10;
  a1[7] = v11;
  v13 = a2[8];
  v12 = a2[9];
  sub_2498CAC78(v13, v12);
  a1[8] = v13;
  a1[9] = v12;
  return a1;
}

uint64_t *assignWithCopy for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v4 = *a2;
  v5 = a2[1];
  sub_2498CAC78(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2498CACBC(v6, v7);
  v8 = a2[2];
  v9 = a2[3];
  sub_2498CAC78(v8, v9);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_2498CACBC(v10, v11);
  v12 = a2[4];
  v13 = a2[5];
  sub_2498CAC78(v12, v13);
  v14 = a1[4];
  v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_2498CACBC(v14, v15);
  v16 = a2[6];
  v17 = a2[7];
  sub_2498CAC78(v16, v17);
  v18 = a1[6];
  v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_2498CACBC(v18, v19);
  v21 = a2[8];
  v20 = a2[9];
  sub_2498CAC78(v21, v20);
  v22 = a1[8];
  v23 = a1[9];
  a1[8] = v21;
  a1[9] = v20;
  sub_2498CACBC(v22, v23);
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t *assignWithTake for EventReportAccumulator.Value(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2498CACBC(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_2498CACBC(v6, v7);
  v8 = a1[4];
  v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_2498CACBC(v8, v9);
  v10 = a1[6];
  v11 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_2498CACBC(v10, v11);
  v12 = a1[8];
  v13 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_2498CACBC(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportAccumulator.Value(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for EventReportAccumulator.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventReportAccumulator.Value()
{
  return &type metadata for EventReportAccumulator.Value;
}

ValueMetadata *type metadata accessor for NullTarget()
{
  return &type metadata for NullTarget;
}

uint64_t sub_2498E2984(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BCFB904](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_2498E29C4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2498E29D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2498E2A14(_OWORD *a1, uint64_t *a2)
{
  assignWithTake for EventReportAccumulator.Value(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_8(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_9(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_7(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

void OUTLINED_FUNCTION_3_5()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 176) = *(_QWORD *)(v0 - 472);
  *(_BYTE *)(v0 - 175) = *(_QWORD *)(v0 - 720);
  *(_BYTE *)(v0 - 174) = *(_QWORD *)(v0 - 712);
  *(_BYTE *)(v0 - 173) = *(_QWORD *)(v0 - 704);
  *(_BYTE *)(v0 - 172) = *(_QWORD *)(v0 - 728);
  *(_BYTE *)(v0 - 171) = *(_QWORD *)(v0 - 696);
  *(_BYTE *)(v0 - 170) = *(_QWORD *)(v0 - 688);
  *(_BYTE *)(v0 - 169) = *(_QWORD *)(v0 - 680);
  *(_BYTE *)(v0 - 168) = *(_QWORD *)(v0 - 488);
  *(_BYTE *)(v0 - 167) = *(_QWORD *)(v0 - 672);
  *(_BYTE *)(v0 - 166) = *(_QWORD *)(v0 - 664);
  *(_BYTE *)(v0 - 165) = *(_QWORD *)(v0 - 656);
  *(_BYTE *)(v0 - 164) = *(_QWORD *)(v0 - 648);
  *(_BYTE *)(v0 - 163) = *(_QWORD *)(v0 - 640);
}

uint64_t OUTLINED_FUNCTION_4_4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  return sub_2498E0598(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_9_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  uint64_t v0;

  return sub_2498CAC78(*(_QWORD *)(v0 - 440), *(_QWORD *)(v0 - 272));
}

uint64_t OUTLINED_FUNCTION_12_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_13_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_15_5(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_19_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_20_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

void OUTLINED_FUNCTION_23_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 304) = v0;
}

uint64_t OUTLINED_FUNCTION_24_4@<X0>(char a1@<W8>)
{
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(v7 - 192) = v6;
  *(_BYTE *)(v7 - 191) = v5;
  *(_BYTE *)(v7 - 190) = *(_QWORD *)(v7 - 504);
  *(_BYTE *)(v7 - 189) = v4;
  *(_BYTE *)(v7 - 188) = v3;
  *(_BYTE *)(v7 - 187) = v2;
  *(_BYTE *)(v7 - 186) = v1;
  *(_BYTE *)(v7 - 185) = a1;
  return memcmp((const void *)(v7 - 176), (const void *)(v7 - 198), *(_QWORD *)(v7 - 360));
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_4(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CACBC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_28_1(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

_QWORD *OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 - 248), *(_QWORD *)(*(_QWORD *)(v0 - 248) + 24));
}

uint64_t OUTLINED_FUNCTION_30_0(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 600) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v3 - 640) = *(_QWORD *)(v0 + 24);
  return sub_2498CAC78(v2, v1);
}

uint64_t OUTLINED_FUNCTION_32_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_2498E04D0(a1, a2, a3, v3, v4);
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_0@<X0>(char a1@<W8>)
{
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 189) = v4;
  *(_BYTE *)(v5 - 188) = v3;
  *(_BYTE *)(v5 - 187) = v2;
  *(_BYTE *)(v5 - 186) = v1;
  *(_BYTE *)(v5 - 185) = a1;
  return v5 - 176;
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t a1)
{
  uint64_t v1;

  return sub_2498CAC78(a1, *(_QWORD *)(v1 - 256));
}

uint64_t OUTLINED_FUNCTION_36_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return a1(v3, v5, v4, v1, v2);
}

uint64_t OUTLINED_FUNCTION_38_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_2498E04D0(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_39_0(uint64_t a1)
{
  unint64_t v1;

  return sub_2498CAC78(a1, v1);
}

_QWORD *OUTLINED_FUNCTION_40_0()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_41_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;

  return static EventReportAccumulator.Value.== infix(_:_:)((_QWORD *)(v26 - 168), &a26);
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_43_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  return a4(a1, a2, a3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return sub_249955FB8();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_47_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return a23;
}

uint64_t OUTLINED_FUNCTION_52_0@<X0>(const void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return memcmp(a1, a2, *(_QWORD *)(a3 - 256));
}

uint64_t OUTLINED_FUNCTION_53_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2498CACBC(a1, *(_QWORD *)(a2 - 256));
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56_0(uint64_t a1, uint64_t a2, size_t a3)
{
  const void *v3;
  uint64_t v4;

  return memcmp((const void *)(v4 - 176), v3, a3);
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_59()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_63()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_65()
{
  return sub_249955D3C();
}

uint64_t OUTLINED_FUNCTION_67(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_2498CACBC(a25, a22);
}

uint64_t OUTLINED_FUNCTION_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  return sub_2498CACBC(a13, a16);
}

uint64_t OUTLINED_FUNCTION_70(_OWORD *a1, uint64_t a2)
{
  return sub_2498E09DC(a1, a2);
}

void OUTLINED_FUNCTION_71_0()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

void OUTLINED_FUNCTION_72()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 656) = v2;
  *(_QWORD *)(v3 - 648) = v1;
  *(_QWORD *)(v3 - 640) = v0;
}

uint64_t OUTLINED_FUNCTION_73()
{
  return type metadata accessor for EventReportSenderID();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_79()
{
  return sub_249956000();
}

uint64_t OUTLINED_FUNCTION_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t OUTLINED_FUNCTION_85()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  return sub_2498CACBC(a1, a21);
}

uint64_t OUTLINED_FUNCTION_88()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_91()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_92()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v0, *(_QWORD *)(v1 - 488));
}

uint64_t OUTLINED_FUNCTION_93()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_95(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18)
{
  return sub_2498CACBC(a17, a18);
}

uint64_t OUTLINED_FUNCTION_96()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_97(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2498E02B4(a1, a2, a3, a4);
}

char *OUTLINED_FUNCTION_98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return &a26;
}

uint64_t OUTLINED_FUNCTION_99()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_100()
{
  return sub_24995555C();
}

uint64_t OUTLINED_FUNCTION_101()
{
  return sub_249955568();
}

uint64_t OUTLINED_FUNCTION_102()
{
  return sub_249955D3C();
}

uint64_t OUTLINED_FUNCTION_103()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  uint64_t v24;

  return sub_2498CACBC(v24, a24);
}

unint64_t OUTLINED_FUNCTION_105()
{
  uint64_t v0;

  return sub_2498DFA3C(v0);
}

uint64_t OUTLINED_FUNCTION_106()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v0, *(_QWORD *)(v1 - 224));
}

uint64_t OUTLINED_FUNCTION_107()
{
  return sub_249955D54();
}

unint64_t OUTLINED_FUNCTION_108(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

void OUTLINED_FUNCTION_110()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 440) = v0;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_112()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v0, *(_QWORD *)(v1 - 232));
}

uint64_t OUTLINED_FUNCTION_113()
{
  return swift_release();
}

void HIDReport.subscript.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_0_9(a1, a2);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(v2 + 16) = v3;
  OUTLINED_FUNCTION_6_0();
}

{
  uint64_t v2;
  uint64_t v4;

  a1[1] = a2;
  a1[2] = v2;
  _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
  *a1 = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E3194(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 16), *(_QWORD *)a1);
  OUTLINED_FUNCTION_6_0();
}

#error "2498E31CC: call analysis failed (funcsize=10)"

void sub_2498E31E8(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(*(unsigned __int16 *)(a1 + 16), *(_QWORD *)a1);
  OUTLINED_FUNCTION_6_0();
}

#error "2498E3220: call analysis failed (funcsize=10)"

void sub_2498E323C(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(*(unsigned int *)(a1 + 16), *(_QWORD *)a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E32A0(_QWORD *a1)
{
  _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(*a1, a1[1]);
  OUTLINED_FUNCTION_6_0();
}

uint64_t OUTLINED_FUNCTION_0_9(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return a2;
}

uint64_t static AppleVendorTopCaseReport.initialReportBitCount.getter()
{
  return 40;
}

uint64_t static AppleVendorTopCaseReport.reportID.getter()
{
  return 4;
}

uint64_t sub_2498E32EC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498E330C();
  *(_QWORD *)&xmmword_2578A0EB8 = result;
  *((_QWORD *)&xmmword_2578A0EB8 + 1) = v1;
  return result;
}

uint64_t sub_2498E330C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[2];
  char v61;
  __int16 v62;
  __int16 v63;
  __int16 v64;
  _QWORD v65[3];

  LOBYTE(v65[0]) = 5;
  sub_2498FCA34((uint64_t)v65, 0xFFuLL);
  v49 = v1;
  v50 = v0;
  LOBYTE(v65[0]) = 18;
  sub_2498FCA34((uint64_t)v65, 3uLL);
  v3 = v2;
  v5 = v4;
  LOBYTE(v65[0]) = 19;
  sub_2498FCA34((uint64_t)v65, 0xC0uLL);
  v7 = v6;
  v9 = v8;
  LOBYTE(v65[0]) = 14;
  sub_2498FC7A0((uint64_t)v65, 4);
  v11 = v10;
  v55 = v12;
  LOBYTE(v65[0]) = 12;
  sub_2498FCA34((uint64_t)v65, 8uLL);
  v53 = v14;
  v54 = v13;
  LOBYTE(v65[0]) = 6;
  sub_2498FC7A0((uint64_t)v65, 0);
  v51 = v16;
  v52 = v15;
  LOBYTE(v65[0]) = 7;
  sub_2498FC7A0((uint64_t)v65, 255);
  v46 = v18;
  v47 = v17;
  LOBYTE(v60[0]) = 0;
  v64 = 0;
  v63 = 0;
  v62 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v60, (_BYTE *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, v65);
  LOBYTE(v60[0]) = 5;
  sub_2498FCA34((uint64_t)v60, 0xFF00uLL);
  v39 = v19;
  v59 = v20;
  LOBYTE(v60[0]) = 17;
  sub_2498FCA34((uint64_t)v60, 0x102uLL);
  v57 = v22;
  v58 = v21;
  LOBYTE(v60[0]) = 6;
  sub_2498FC7A0((uint64_t)v60, 0);
  v56 = v23;
  v48 = v24;
  LOBYTE(v60[0]) = 7;
  sub_2498FC7A0((uint64_t)v60, 255);
  v44 = v26;
  v45 = v25;
  LOBYTE(v60[0]) = 12;
  sub_2498FCA34((uint64_t)v60, 8uLL);
  v42 = v28;
  v43 = v27;
  LOBYTE(v60[0]) = 14;
  sub_2498FC7A0((uint64_t)v60, 8);
  v40 = v30;
  v41 = v29;
  v64 = 1;
  v63 = 0;
  v62 = 0;
  v61 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, &v61, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249957590;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 4;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v50;
  *(_QWORD *)(inited + 80) = v49;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v3;
  *(_QWORD *)(inited + 120) = v5;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(_QWORD *)(inited + 152) = v7;
  *(_QWORD *)(inited + 160) = v9;
  *(_QWORD *)(inited + 216) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 416) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 424) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 456) = &type metadata for Usage;
  *(_QWORD *)(inited + 192) = v11;
  *(_QWORD *)(inited + 200) = v55;
  *(_QWORD *)(inited + 464) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 296) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 496) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 536) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 336) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 256) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 232) = v54;
  *(_QWORD *)(inited + 240) = v53;
  *(_QWORD *)(inited + 272) = v52;
  *(_QWORD *)(inited + 280) = v51;
  *(_QWORD *)(inited + 312) = v47;
  *(_QWORD *)(inited + 320) = v46;
  *(_QWORD *)(inited + 576) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 584) = &protocol witness table for ReportSize;
  v37 = v65[0];
  v32 = v65[0];
  v38 = v65[1];
  *(_QWORD *)(inited + 616) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 624) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v32;
  *(_QWORD *)(inited + 360) = v38;
  *(_QWORD *)(inited + 392) = v39;
  *(_QWORD *)(inited + 400) = v59;
  *(_QWORD *)(inited + 432) = v58;
  *(_QWORD *)(inited + 440) = v57;
  *(_QWORD *)(inited + 472) = v56;
  *(_QWORD *)(inited + 480) = v48;
  *(_QWORD *)(inited + 512) = v45;
  *(_QWORD *)(inited + 520) = v44;
  *(_QWORD *)(inited + 552) = v43;
  *(_QWORD *)(inited + 560) = v42;
  *(_QWORD *)(inited + 592) = v41;
  *(_QWORD *)(inited + 600) = v40;
  *(_QWORD *)(inited + 656) = &type metadata for Input;
  *(_QWORD *)(inited + 664) = &protocol witness table for Input;
  v34 = v60[0];
  v35 = v60[1];
  *(_QWORD *)(inited + 632) = v60[0];
  *(_QWORD *)(inited + 640) = v35;
  sub_2498CAC78(v50, v49);
  sub_2498CAC78(v3, v5);
  sub_2498CAC78(v7, v9);
  sub_2498CAC78(v11, v55);
  sub_2498CAC78(v54, v53);
  sub_2498CAC78(v52, v51);
  sub_2498CAC78(v47, v46);
  sub_2498CAC78(v37, v38);
  sub_2498CAC78(v39, v59);
  sub_2498CAC78(v58, v57);
  sub_2498CAC78(v56, v48);
  sub_2498CAC78(v45, v44);
  sub_2498CAC78(v43, v42);
  sub_2498CAC78(v41, v40);
  sub_2498CAC78(v34, v35);
  v36 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v34, v35);
  sub_2498CACBC(v41, v40);
  sub_2498CACBC(v43, v42);
  sub_2498CACBC(v45, v44);
  sub_2498CACBC(v56, v48);
  sub_2498CACBC(v58, v57);
  sub_2498CACBC(v39, v59);
  sub_2498CACBC(v37, v38);
  sub_2498CACBC(v47, v46);
  sub_2498CACBC(v52, v51);
  sub_2498CACBC(v54, v53);
  sub_2498CACBC(v11, v55);
  sub_2498CACBC(v7, v9);
  sub_2498CACBC(v3, v5);
  sub_2498CACBC(v50, v49);
  return v36;
}

uint64_t static AppleVendorTopCaseReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0740 != -1)
    swift_once();
  v2 = xmmword_2578A0EB8;
  *a1 = xmmword_2578A0EB8;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498E388C()
{
  return 40;
}

unint64_t AppleVendorTopCaseReport.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t i;
  char v5;

  sub_2498CAC78(a1, a2);
  for (i = 0; i < 4; ++i)
  {
    sub_2498C8F2C(8 * i + 8, a1, a2);
    if ((v5 - 3) < 3u)
    {
      sub_2498CB760();
      sub_2499558C8();
      sub_2499558A4();
      sub_2499558A4();
      swift_bridgeObjectRelease();
    }
  }
  sub_2498CACBC(a1, a2);
  swift_bridgeObjectRetain();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

uint64_t AppleVendorTopCaseReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2498CAC78(a1, a2);
}

void AppleVendorTopCaseReport.Iterator.next()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  v1 = v0[2];
  if (v1 <= 3)
  {
    v2 = *v0;
    v3 = v0[1];
    v4 = 8 * v1;
    while ((unint64_t)(v1 - 0x1000000000000000) >> 61 == 7)
    {
      if (__OFADD__(v4, 8))
        goto LABEL_10;
      sub_2498C8F2C(v4 + 8, v2, v3);
      v0[2] = ++v1;
      if ((v5 - 6) <= 0xFCu)
      {
        v4 += 8;
        if (v1 != 4)
          continue;
      }
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

unint64_t sub_2498E3A80()
{
  uint64_t v0;

  return AppleVendorTopCaseReport.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t AppleVendorTopCaseReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  return a1;
}

uint64_t AppleVendorTopCaseReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AppleVendorTopCaseReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2498E3AFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2498CAC78(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void sub_2498E3B2C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = AppleVendorTopCaseReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E3B4C()
{
  uint64_t v0;

  AppleVendorTopCaseReport.Iterator.next()();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498E3B6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  AppleVendorTopCaseReport.makeIterator()(v2, v3, a1);
  return OUTLINED_FUNCTION_3_6(v2, v3);
}

uint64_t sub_2498E3B98()
{
  return j__OUTLINED_FUNCTION_15();
}

void sub_2498E3BA0()
{
  sub_2499186B0();
}

uint64_t sub_2498E3BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_249920098(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_2498E3BB0()
{
  return sub_2499558F8();
}

void AppleVendorTopCaseReport.update(with:)()
{
  uint64_t v1;

  v1 = sub_249955688();
  MEMORY[0x24BDAC7A8](v1);
  __asm { BR              X10 }
}

uint64_t sub_2498E3C64()
{
  unsigned __int8 v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  char *v10;

  v5 = (int)v1 + 4;
  if (__OFADD__((int)v1, 4))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < (int)v1 + 1)
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x2498E3F7CLL);
  }
  *(_QWORD *)(v4 - 240) = (int)v1;
  sub_2498CAC78(v1, v2);
  v6 = sub_2498E3FC4((int)v1 + 1, v5, v1, v2);
  v8 = v7;
  sub_2498CACBC(v1, v2);
  sub_2498CAC78(v6, v8);
  sub_2499555EC();
  OUTLINED_FUNCTION_5_4();
  sub_2498E498C();
  do
  {
    sub_249955AE4();
    v9 = *(unsigned __int8 *)(v4 - 109);
    if ((v9 & 1) != 0)
    {
      OUTLINED_FUNCTION_6_6();
      *(_QWORD *)(v4 - 232) = 0;
      *(_QWORD *)(v4 - 248) = v3;
      v10 = (char *)&loc_2498E3D2C + dword_2498E3FA4[v8 >> 62];
      *(_QWORD *)(v4 - 128) = (int)v6;
      __asm { BR              X9 }
    }
  }
  while (*(unsigned __int8 *)(v4 - 110) != v0);
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_5_4();
  return v0 | (v9 << 8);
}

uint64_t sub_2498E3FC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_2498E3FD4 + *((int *)qword_2498E4030 + (a4 >> 62))))();
}

uint64_t sub_2498E3FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (BYTE6(a4) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 + 1 < a1)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x2498E4030);
  }
  return sub_249955610();
}

void AppleVendorTopCaseReport.remove(_:)()
{
  __asm { BR              X10 }
}

void sub_2498E409C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (__OFADD__((int)v0, 4))
  {
    __break(1u);
  }
  else if ((int)v0 + 4 >= (int)v0 + 1)
  {
    sub_2498CAC78(v0, v1);
    sub_2498E3FC4((int)v0 + 1, (int)v0 + 4, v0, v1);
    v3 = v2;
    sub_2498CACBC(v0, v1);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x2498E4360);
}

void sub_2498E43AC(char *a1)
{
  uint64_t *v1;

  sub_249932B24(*a1, *v1, v1[1]);
}

uint64_t sub_2498E43B8()
{
  return sub_2498E43DC();
}

uint64_t sub_2498E43C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_24991101C);
}

uint64_t sub_2498E43D0()
{
  return sub_2498E43DC();
}

uint64_t sub_2498E43DC()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;

  v2 = *v0;
  v1 = v0[1];
  v3 = OUTLINED_FUNCTION_4_5();
  v4(v3);
  sub_2498CACBC(v2, v1);
  v5 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v5, v6);
}

void sub_2498E4420(uint64_t a1, unsigned __int8 *a2)
{
  sub_24995187C(a1, *a2);
}

void sub_2498E4428()
{
  uint64_t v0;

  AppleVendorTopCaseReport.remove(_:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E444C()
{
  uint64_t v0;

  AppleVendorTopCaseReport.update(with:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498E4470()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = OUTLINED_FUNCTION_4_5();
  sub_24991897C(v0, v1);
  v2 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v2, v3);
}

void sub_2498E4498(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  sub_24991123C(*a1, a1[1], a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_2498E44A4()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_4_5();
  sub_249911878();
  v0 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v0, v1);
}

uint64_t sub_2498E44CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249950AD0);
}

uint64_t sub_2498E44D8(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, uint64_t, unint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v5 = *v4;
  v6 = v4[1];
  a4(*a1, a1[1], v5, v6);
  return OUTLINED_FUNCTION_3_6(v5, v6);
}

void sub_2498E4510()
{
  sub_249910A44();
}

void sub_2498E4520(uint64_t *a1)
{
  uint64_t v1;

  sub_249950DF4(*a1, a1[1], *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_2498E4530()
{
  return sub_249910BD0();
}

void sub_2498E4540()
{
  sub_2498D4BEC();
}

void sub_2498E4548()
{
  sub_2498E4C40();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_2498E45B8(_QWORD *a1)
{
  return sub_249910C34(*a1, a1[1]);
}

void sub_2498E45C4(_QWORD *a1, _QWORD *a2)
{
  static AppleVendorTopCaseReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void AppleVendorTopCaseReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_2498E4610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498E4678);
  }
  if (BYTE6(a3) >= 0xDuLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2498E4690(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  AppleVendorTopCaseReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_2498E46C4()
{
  return AppleVendorTopCaseReport.remoteTimestamp.setter();
}

uint64_t AppleVendorTopCaseReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2498E4700 + *((int *)qword_2498E4770 + (*(_QWORD *)(v0 + 8) >> 62))))();
}

void sub_2498E4710()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E4768);
  }
  if (v2 >= 13)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 40);
  }
}

void AppleVendorTopCaseReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void (*sub_2498E47BC())(uint64_t a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x2498E4830);
  }
  if (v1 >= 13)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  return sub_2498E4848;
}

void sub_2498E4848(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  AppleVendorTopCaseReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E4898()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E48CCLL);
  }
  if (v2 >= 13)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 40);
  }
  JUMPOUT(0x2498E4870);
}

void sub_2498E4900()
{
  uint64_t *v0;

  AppleVendorTopCaseReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_2498E491C()
{
  return AppleVendorTopCaseReport.remoteTimestamp.setter();
}

void (*sub_2498E4924(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  AppleVendorTopCaseReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_2498E4964;
}

void sub_2498E4964()
{
  AppleVendorTopCaseReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2498E498C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A0EC8;
  if (!qword_2578A0EC8)
  {
    v1 = sub_249955688();
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDCDD80], v1);
    atomic_store(result, (unint64_t *)&qword_2578A0EC8);
  }
  return result;
}

unint64_t sub_2498E49D0()
{
  unint64_t result;

  result = qword_2578A0ED0;
  if (!qword_2578A0ED0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseReport.Iterator, &type metadata for AppleVendorTopCaseReport.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A0ED0);
  }
  return result;
}

unint64_t sub_2498E4A10()
{
  unint64_t result;

  result = qword_2578A0ED8;
  if (!qword_2578A0ED8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseReport, &type metadata for AppleVendorTopCaseReport);
    atomic_store(result, (unint64_t *)&qword_2578A0ED8);
  }
  return result;
}

unint64_t sub_2498E4A50()
{
  unint64_t result;

  result = qword_2578A0EE0;
  if (!qword_2578A0EE0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseReport, &type metadata for AppleVendorTopCaseReport);
    atomic_store(result, (unint64_t *)&qword_2578A0EE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseReport()
{
  return &type metadata for AppleVendorTopCaseReport;
}

uint64_t *sub_2498E4AA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_2498CAC78(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for AppleVendorTopCaseReport.Iterator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_2498CAC78(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2498CACBC(v6, v7);
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for AppleVendorTopCaseReport.Iterator(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2498CACBC(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleVendorTopCaseReport.Iterator(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AppleVendorTopCaseReport.Iterator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseReport.Iterator()
{
  return &type metadata for AppleVendorTopCaseReport.Iterator;
}

unint64_t sub_2498E4C40()
{
  unint64_t result;

  result = qword_2578A0EE8;
  if (!qword_2578A0EE8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseReport, &type metadata for AppleVendorTopCaseReport);
    atomic_store(result, (unint64_t *)&qword_2578A0EE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_10(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_3_6(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t TranslationReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2498E4CD8 + *((int *)qword_2498E4D48 + (*(_QWORD *)(v0 + 8) >> 62))))();
}

void sub_2498E4CE8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E4D40);
  }
  if (v2 >= 14)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 48);
  }
}

uint64_t TranslationReport.phase.setter()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10();
  v1 = OUTLINED_FUNCTION_3_3(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

uint64_t TranslationReport.x.setter(double a1)
{
  return sub_2498CF514(16, a1);
}

uint64_t TranslationReport.y.setter(double a1)
{
  return sub_2498CF514(32, a1);
}

double TranslationReport.x.getter(uint64_t a1, uint64_t a2)
{
  return sub_2498CAD4C(16, a1, a2);
}

double TranslationReport.y.getter(uint64_t a1, uint64_t a2)
{
  return sub_2498CAD4C(32, a1, a2);
}

uint64_t TranslationReport.phase.getter(uint64_t a1, unint64_t a2)
{
  int v2;

  sub_2498C8F2C(8, a1, a2);
  return v2 & 0xFFFFFF8F;
}

uint64_t static TranslationReport.initialReportBitCount.getter()
{
  return 48;
}

uint64_t static TranslationReport.reportID.getter()
{
  return 17;
}

uint64_t sub_2498E4DE0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498E4E00();
  *(_QWORD *)&xmmword_2578A0EF0 = result;
  *((_QWORD *)&xmmword_2578A0EF0 + 1) = v1;
  return result;
}

uint64_t sub_2498E4E00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t inited;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  char v54;
  uint64_t v55;
  unint64_t v56;
  __int16 v57;
  __int16 v58;
  __int16 v59;
  _QWORD v60[3];

  LOBYTE(v60[0]) = 12;
  sub_2498FCA34((uint64_t)v60, 8uLL);
  v49 = v0;
  v50 = v1;
  LOBYTE(v60[0]) = 14;
  sub_2498FC7A0((uint64_t)v60, 1);
  v3 = v2;
  v5 = v4;
  LOBYTE(v55) = 0;
  LOBYTE(v53[0]) = 1;
  v59 = 0;
  v58 = 0;
  HIBYTE(v57) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v55, v53, (_BYTE *)&v59 + 1, &v59, (_BYTE *)&v58 + 1, &v58, (_BYTE *)&v57 + 1, v60);
  LOBYTE(v55) = 12;
  sub_2498FCA34((uint64_t)&v55, 0x10uLL);
  v51 = v7;
  v52 = v6;
  LOBYTE(v55) = 14;
  sub_2498FC7A0((uint64_t)&v55, 2);
  v48 = v8;
  v10 = v9;
  LOBYTE(v53[0]) = 0;
  v59 = 257;
  v58 = 0;
  v57 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v53, (_BYTE *)&v59 + 1, &v59, (_BYTE *)&v58 + 1, &v58, (_BYTE *)&v57 + 1, &v57, &v55);
  LOBYTE(v53[0]) = 5;
  sub_2498FCA34((uint64_t)v53, 0xFF00uLL);
  v43 = v11;
  v13 = v12;
  v34 = v12;
  LOBYTE(v53[0]) = 17;
  sub_2498FCA34((uint64_t)v53, 0x102uLL);
  v41 = v15;
  v42 = v14;
  LOBYTE(v53[0]) = 6;
  sub_2498FC7A0((uint64_t)v53, 0);
  v17 = v16;
  v30 = v16;
  v40 = v18;
  LOBYTE(v53[0]) = 7;
  sub_2498FC7A0((uint64_t)v53, 255);
  v38 = v19;
  v39 = v20;
  LOBYTE(v53[0]) = 12;
  sub_2498FCA34((uint64_t)v53, 8uLL);
  v46 = v22;
  v47 = v21;
  LOBYTE(v53[0]) = 14;
  sub_2498FC7A0((uint64_t)v53, 8);
  v44 = v24;
  v45 = v23;
  v59 = 1;
  v58 = 0;
  v57 = 0;
  v54 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v59 + 1, &v59, (_BYTE *)&v58 + 1, &v58, (_BYTE *)&v57 + 1, &v57, &v54, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499577F0;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 17;
  *(_QWORD *)(inited + 96) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 104) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 72) = v49;
  *(_QWORD *)(inited + 80) = v50;
  *(_QWORD *)(inited + 136) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 144) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 112) = v3;
  *(_QWORD *)(inited + 120) = v5;
  *(_QWORD *)(inited + 336) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 344) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 376) = &type metadata for Usage;
  *(_QWORD *)(inited + 384) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 416) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 424) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 456) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 464) = &protocol witness table for LogicalMaximum;
  v27 = v60[1];
  v37 = v60[0];
  v26 = v60[0];
  *(_QWORD *)(inited + 496) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 216) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 504) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 176) = &type metadata for Input;
  *(_QWORD *)(inited + 184) = &protocol witness table for Input;
  *(_QWORD *)(inited + 152) = v26;
  *(_QWORD *)(inited + 160) = v27;
  *(_QWORD *)(inited + 192) = v52;
  *(_QWORD *)(inited + 200) = v51;
  *(_QWORD *)(inited + 256) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 232) = v48;
  *(_QWORD *)(inited + 240) = v10;
  *(_QWORD *)(inited + 536) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 544) = &protocol witness table for ReportCount;
  v35 = v56;
  v28 = v56;
  v36 = v55;
  *(_QWORD *)(inited + 296) = &type metadata for Input;
  *(_QWORD *)(inited + 304) = &protocol witness table for Input;
  *(_QWORD *)(inited + 272) = v36;
  *(_QWORD *)(inited + 280) = v28;
  *(_QWORD *)(inited + 312) = v43;
  *(_QWORD *)(inited + 320) = v13;
  *(_QWORD *)(inited + 352) = v42;
  *(_QWORD *)(inited + 360) = v41;
  *(_QWORD *)(inited + 392) = v17;
  *(_QWORD *)(inited + 400) = v40;
  *(_QWORD *)(inited + 432) = v38;
  *(_QWORD *)(inited + 440) = v39;
  *(_QWORD *)(inited + 472) = v47;
  *(_QWORD *)(inited + 480) = v46;
  *(_QWORD *)(inited + 512) = v45;
  *(_QWORD *)(inited + 520) = v44;
  *(_QWORD *)(inited + 576) = &type metadata for Input;
  *(_QWORD *)(inited + 584) = &protocol witness table for Input;
  v31 = v53[0];
  v32 = v53[1];
  *(_QWORD *)(inited + 552) = v53[0];
  *(_QWORD *)(inited + 560) = v32;
  sub_2498CAC78(v49, v50);
  sub_2498CAC78(v3, v5);
  sub_2498CAC78(v37, v27);
  sub_2498CAC78(v52, v51);
  sub_2498CAC78(v48, v10);
  sub_2498CAC78(v36, v35);
  sub_2498CAC78(v43, v34);
  sub_2498CAC78(v42, v41);
  sub_2498CAC78(v30, v40);
  sub_2498CAC78(v38, v39);
  sub_2498CAC78(v47, v46);
  sub_2498CAC78(v45, v44);
  sub_2498CAC78(v31, v32);
  v33 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v31, v32);
  sub_2498CACBC(v45, v44);
  sub_2498CACBC(v47, v46);
  sub_2498CACBC(v38, v39);
  sub_2498CACBC(v30, v40);
  sub_2498CACBC(v42, v41);
  sub_2498CACBC(v43, v34);
  sub_2498CACBC(v36, v35);
  sub_2498CACBC(v48, v10);
  sub_2498CACBC(v52, v51);
  sub_2498CACBC(v37, v27);
  sub_2498CACBC(v3, v5);
  sub_2498CACBC(v49, v50);
  return v33;
}

uint64_t static TranslationReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0748 != -1)
    swift_once();
  v2 = xmmword_2578A0EF0;
  *a1 = xmmword_2578A0EF0;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498E5314()
{
  return 17;
}

void TranslationReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t TranslationReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*TranslationReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498E538C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = TranslationReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E53AC()
{
  uint64_t v0;

  sub_2499507F0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void TranslationReport.flags.getter(uint64_t a1, unint64_t a2)
{
  sub_2498C8F2C(8, a1, a2);
}

void sub_2498E53C4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  TranslationReport.flags.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t TranslationReport.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

void TranslationReport.flags.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_1_10();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498E5428@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = TranslationReport.phase.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

void TranslationReport.phase.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_1_10();
  *(_BYTE *)(a1 + 8) = v3 & 0x8F;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5488()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10();
  v1 = OUTLINED_FUNCTION_3_3(v0);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E54B0(uint64_t *a1@<X0>, double *a2@<X8>)
{
  *a2 = TranslationReport.x.getter(*a1, a1[1]);
}

void TranslationReport.x.modify(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = sub_2498CAD4C(16, *v1, v1[1]);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5514(double *a1)
{
  OUTLINED_FUNCTION_4_6(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5534(uint64_t *a1@<X0>, double *a2@<X8>)
{
  *a2 = TranslationReport.y.getter(*a1, a1[1]);
}

void TranslationReport.y.modify(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 8) = v1;
  *(double *)a1 = sub_2498CAD4C(32, *v1, v1[1]);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5598(double *a1)
{
  sub_2498CF514(32, *a1);
  OUTLINED_FUNCTION_6_0();
}

double TranslationReport.delta.getter()
{
  double v0;

  v0 = OUTLINED_FUNCTION_6_7(16);
  OUTLINED_FUNCTION_6_7(32);
  return v0;
}

void sub_2498E5604(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = TranslationReport.delta.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_2498E5634(double *a1)
{
  return TranslationReport.delta.setter(*a1, a1[1]);
}

uint64_t TranslationReport.delta.setter(double a1, double a2)
{
  OUTLINED_FUNCTION_4_6(a1);
  return sub_2498CF514(32, a2);
}

uint64_t (*TranslationReport.delta.modify(uint64_t a1))(double *a1)
{
  uint64_t v1;
  double v3;
  double v4;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = OUTLINED_FUNCTION_5_5(16);
  v4 = OUTLINED_FUNCTION_5_5(32);
  *(double *)a1 = v3;
  *(double *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = 0;
  return sub_2498E56DC;
}

uint64_t sub_2498E56DC(double *a1)
{
  double v1;

  v1 = a1[1];
  OUTLINED_FUNCTION_4_6(*a1);
  return sub_2498CF514(32, v1);
}

void TranslationReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_2498E5748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498E57B0);
  }
  if (BYTE6(a3) >= 0xEuLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2498E57C8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  TranslationReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_2498E57FC()
{
  return TranslationReport.remoteTimestamp.setter();
}

void TranslationReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void sub_2498E5864()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x2498E58D4);
  }
  if (v1 >= 14)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E58EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  TranslationReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E593C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E5970);
  }
  if (v2 >= 14)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 48);
  }
  JUMPOUT(0x2498E5914);
}

void sub_2498E59A4()
{
  uint64_t *v0;

  TranslationReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_2498E59C0()
{
  return TranslationReport.remoteTimestamp.setter();
}

void (*sub_2498E59C8(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  TranslationReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_2498E5A08;
}

void sub_2498E5A08()
{
  TranslationReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5A34(unsigned __int8 *a1)
{
  TranslationReport.flags.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5A58()
{
  TranslationReport.phase.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5A7C(double *a1)
{
  TranslationReport.x.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E5AA0(double *a1)
{
  TranslationReport.y.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for TranslationReport()
{
  return &type metadata for TranslationReport;
}

void OUTLINED_FUNCTION_1_10()
{
  uint64_t v0;

  sub_2498C8F2C(8, *(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_4_6(double a1)
{
  return sub_2498CF514(16, a1);
}

double OUTLINED_FUNCTION_5_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_2498CAD4C(a1, v1, v2);
}

double OUTLINED_FUNCTION_6_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_2498CAD4C(a1, v2, v1);
}

BOOL static HIDEventType.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t HIDEventType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventType.rawValue.modify())()
{
  return nullsub_1;
}

unint64_t HIDEventType.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventType.null.getter()
{
  return 0;
}

uint64_t static HIDEventType.vendorDefined.getter()
{
  return 1;
}

uint64_t static HIDEventType.button.getter()
{
  return 2;
}

uint64_t static HIDEventType.keyboard.getter()
{
  return 3;
}

uint64_t static HIDEventType.translation.getter()
{
  return 4;
}

uint64_t static HIDEventType.rotation.getter()
{
  return 5;
}

uint64_t static HIDEventType.scroll.getter()
{
  return 6;
}

uint64_t static HIDEventType.scale.getter()
{
  return 7;
}

uint64_t static HIDEventType.zoom.getter()
{
  return 8;
}

uint64_t static HIDEventType.velocity.getter()
{
  return 9;
}

uint64_t static HIDEventType.orientation.getter()
{
  return 10;
}

uint64_t static HIDEventType.digitizer.getter()
{
  return 11;
}

uint64_t static HIDEventType.ambientLightSensor.getter()
{
  return 12;
}

uint64_t static HIDEventType.accelerometer.getter()
{
  return 13;
}

uint64_t static HIDEventType.proximity.getter()
{
  return 14;
}

uint64_t static HIDEventType.temperature.getter()
{
  return 15;
}

uint64_t static HIDEventType.navigationSwipe.getter()
{
  return 16;
}

uint64_t static HIDEventType.pointer.getter()
{
  return 17;
}

uint64_t static HIDEventType.progress.getter()
{
  return 18;
}

uint64_t static HIDEventType.multiAxisPointer.getter()
{
  return 19;
}

uint64_t static HIDEventType.gyro.getter()
{
  return 20;
}

uint64_t static HIDEventType.compass.getter()
{
  return 21;
}

uint64_t static HIDEventType.zoomToggle.getter()
{
  return 22;
}

uint64_t static HIDEventType.dockSwipe.getter()
{
  return 23;
}

uint64_t static HIDEventType.symbolicHotKey.getter()
{
  return 24;
}

uint64_t static HIDEventType.power.getter()
{
  return 25;
}

uint64_t static HIDEventType.led.getter()
{
  return 26;
}

uint64_t static HIDEventType.fluidTouchGesture.getter()
{
  return 27;
}

uint64_t static HIDEventType.boundaryScroll.getter()
{
  return 28;
}

uint64_t static HIDEventType.biometric.getter()
{
  return 29;
}

uint64_t static HIDEventType.unicode.getter()
{
  return 30;
}

uint64_t static HIDEventType.atmosphericPressure.getter()
{
  return 31;
}

uint64_t static HIDEventType.force.getter()
{
  return 32;
}

uint64_t static HIDEventType.motionActivity.getter()
{
  return 33;
}

uint64_t static HIDEventType.motionGesture.getter()
{
  return 34;
}

uint64_t static HIDEventType.gameController.getter()
{
  return 35;
}

uint64_t static HIDEventType.humidity.getter()
{
  return 36;
}

uint64_t static HIDEventType.collection.getter()
{
  return 37;
}

uint64_t static HIDEventType.brightness.getter()
{
  return 38;
}

uint64_t static HIDEventType.genericGesture.getter()
{
  return 39;
}

void *static HIDEventType.allCases.getter()
{
  return &unk_251AC4C50;
}

uint64_t HIDEventType.hash(into:)()
{
  return sub_249955FE8();
}

uint64_t HIDEventType.hashValue.getter()
{
  sub_249955FB8();
  sub_249955FE8();
  return sub_249956000();
}

void sub_2498E5D7C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AC4C50;
}

BOOL sub_2498E5D8C(int *a1, int *a2)
{
  return static HIDEventType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_2498E5D98()
{
  return HIDEventType.hashValue.getter();
}

uint64_t sub_2498E5DA0()
{
  return HIDEventType.hash(into:)();
}

uint64_t sub_2498E5DA8()
{
  sub_249955FB8();
  sub_249955FE8();
  return sub_249956000();
}

uint64_t HIDEventType.description.getter(int a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = 1819047278;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      return 0x6544726F646E6576;
    case 2:
      return 0x6E6F74747562;
    case 3:
      return 0x6472616F6279656BLL;
    case 4:
      v3 = 0x6C736E617274;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 5:
      return 0x6E6F697461746F72;
    case 6:
      return 0x6C6C6F726373;
    case 7:
      v4 = 1818321779;
      goto LABEL_37;
    case 8:
      return 1836019578;
    case 9:
      v5 = 0x69636F6C6576;
      goto LABEL_42;
    case 10:
      v3 = 0x746E6569726FLL;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 11:
      return 0x657A697469676964;
    case 12:
      return 0xD000000000000012;
    case 13:
      return 0x6F72656C65636361;
    case 14:
      return 0x74696D69786F7270;
    case 15:
      return 0x74617265706D6574;
    case 16:
      v6 = 0x61676976616ELL;
      goto LABEL_44;
    case 17:
      return 0x7265746E696F70;
    case 18:
      return 0x73736572676F7270;
    case 19:
      return 0xD000000000000010;
    case 20:
      return 1869773159;
    case 21:
      return 0x737361706D6F63;
    case 22:
      return 0x67676F546D6F6F7ALL;
    case 23:
      return 0x706977536B636F64;
    case 24:
      return 0x63696C6F626D7973;
    case 25:
      return 0x7265776F70;
    case 26:
      return 6579564;
    case 27:
      return 0xD000000000000011;
    case 28:
      return 0x797261646E756F62;
    case 29:
      return 0x697274656D6F6962;
    case 30:
      return 0x65646F63696E75;
    case 31:
      return 0xD000000000000013;
    case 32:
      v4 = 1668444006;
LABEL_37:
      result = v4 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    case 33:
      result = 0x63416E6F69746F6DLL;
      break;
    case 34:
      result = 0x65476E6F69746F6DLL;
      break;
    case 35:
      result = 0x746E6F43656D6167;
      break;
    case 36:
      v5 = 0x6964696D7568;
LABEL_42:
      result = v5 & 0xFFFFFFFFFFFFLL | 0x7974000000000000;
      break;
    case 37:
      v6 = 0x63656C6C6F63;
LABEL_44:
      result = v6 & 0xFFFFFFFFFFFFLL | 0x6974000000000000;
      break;
    case 38:
      result = 0x656E746867697262;
      break;
    case 39:
      result = 0x47636972656E6567;
      break;
    default:
      result = sub_249955EF8();
      break;
  }
  return result;
}

unint64_t sub_2498E6274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A0F00;
  if (!qword_2578A0F00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A0F08);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A0F00);
  }
  return result;
}

unint64_t sub_2498E62BC()
{
  unint64_t result;

  result = qword_2578A0F10;
  if (!qword_2578A0F10)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDEventType, &type metadata for HIDEventType);
    atomic_store(result, (unint64_t *)&qword_2578A0F10);
  }
  return result;
}

uint64_t sub_2498E62F8()
{
  int *v0;

  return HIDEventType.description.getter(*v0);
}

ValueMetadata *type metadata accessor for HIDEventType()
{
  return &type metadata for HIDEventType;
}

uint64_t static KeyboardReport.initialReportBitCount.getter()
{
  return 248;
}

uint64_t sub_2498E6320()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498E6340();
  *(_QWORD *)&xmmword_2578A0F18 = result;
  *((_QWORD *)&xmmword_2578A0F18 + 1) = v1;
  return result;
}

uint64_t sub_2498E6340()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  _BYTE v73[5];
  unsigned __int8 v74;
  _QWORD v75[3];

  LOBYTE(v75[0]) = 5;
  sub_2498FCA34((uint64_t)v75, 7uLL);
  v50 = v1;
  v51 = v0;
  LOBYTE(v75[0]) = 18;
  sub_2498FCA34((uint64_t)v75, 1uLL);
  v3 = v2;
  v68 = v4;
  LOBYTE(v75[0]) = 19;
  sub_2498FCA34((uint64_t)v75, 0xE7uLL);
  v59 = v6;
  v60 = v5;
  LOBYTE(v75[0]) = 14;
  sub_2498FC7A0((uint64_t)v75, 232);
  v55 = v8;
  v56 = v7;
  LOBYTE(v75[0]) = 12;
  sub_2498FCA34((uint64_t)v75, 1uLL);
  v57 = v10;
  v58 = v9;
  LOBYTE(v75[0]) = 6;
  sub_2498FC7A0((uint64_t)v75, 1);
  v53 = v12;
  v54 = v11;
  LOBYTE(v75[0]) = 7;
  sub_2498FC7A0((uint64_t)v75, 231);
  v52 = v13;
  v69 = v14;
  LOBYTE(v70) = 0;
  v74 = 1;
  memset(v73, 0, sizeof(v73));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v70, &v74, &v73[4], &v73[3], &v73[2], &v73[1], v73, v75);
  LOBYTE(v70) = 3;
  sub_2498FC7A0((uint64_t)&v70, 2);
  v70 = v15;
  v71 = v16;
  v17 = sub_2498E6908();
  v19 = v18;
  sub_24995567C();
  sub_2498CACBC(v17, v19);
  v20 = sub_2498D3060((uint64_t)&unk_251AC49F8);
  v22 = v21;
  sub_24995567C();
  sub_2498CACBC(v20, v22);
  v66 = v71;
  v67 = v70;
  LOBYTE(v70) = 5;
  sub_2498FCA34((uint64_t)&v70, 0xFF00uLL);
  v64 = v24;
  v65 = v23;
  LOBYTE(v70) = 17;
  sub_2498FCA34((uint64_t)&v70, 0x102uLL);
  v62 = v26;
  v63 = v25;
  LOBYTE(v70) = 6;
  sub_2498FC7A0((uint64_t)&v70, 0);
  v61 = v27;
  v49 = v28;
  LOBYTE(v70) = 7;
  sub_2498FC7A0((uint64_t)&v70, 255);
  v47 = v30;
  v48 = v29;
  LOBYTE(v70) = 12;
  sub_2498FCA34((uint64_t)&v70, 8uLL);
  v45 = v32;
  v46 = v31;
  LOBYTE(v70) = 14;
  sub_2498FC7A0((uint64_t)&v70, 8);
  v43 = v34;
  v44 = v33;
  v74 = 0;
  v73[4] = 1;
  *(_WORD *)&v73[2] = 0;
  *(_WORD *)v73 = 0;
  v72 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v74, &v73[4], &v73[3], &v73[2], &v73[1], v73, &v72, &v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499579B0;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v51;
  *(_QWORD *)(inited + 80) = v50;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v3;
  *(_QWORD *)(inited + 120) = v68;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(_QWORD *)(inited + 416) = &type metadata for LogicalCollection;
  *(_QWORD *)(inited + 152) = v60;
  *(_QWORD *)(inited + 160) = v59;
  *(_QWORD *)(inited + 424) = &protocol witness table for LogicalCollection;
  *(_QWORD *)(inited + 216) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 192) = v56;
  *(_QWORD *)(inited + 200) = v55;
  *(_QWORD *)(inited + 456) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 464) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 496) = &type metadata for Usage;
  *(_QWORD *)(inited + 504) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 536) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 296) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 544) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 576) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 336) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 584) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 256) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 232) = v58;
  *(_QWORD *)(inited + 240) = v57;
  *(_QWORD *)(inited + 272) = v54;
  *(_QWORD *)(inited + 280) = v53;
  *(_QWORD *)(inited + 312) = v52;
  *(_QWORD *)(inited + 320) = v69;
  *(_QWORD *)(inited + 616) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 624) = &protocol witness table for ReportSize;
  v41 = v75[0];
  v36 = v75[0];
  v42 = v75[1];
  *(_QWORD *)(inited + 656) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 664) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v36;
  *(_QWORD *)(inited + 360) = v42;
  *(_QWORD *)(inited + 392) = v67;
  *(_QWORD *)(inited + 400) = v66;
  *(_QWORD *)(inited + 432) = v65;
  *(_QWORD *)(inited + 440) = v64;
  *(_QWORD *)(inited + 472) = v63;
  *(_QWORD *)(inited + 480) = v62;
  *(_QWORD *)(inited + 512) = v61;
  *(_QWORD *)(inited + 520) = v49;
  *(_QWORD *)(inited + 552) = v48;
  *(_QWORD *)(inited + 560) = v47;
  *(_QWORD *)(inited + 592) = v46;
  *(_QWORD *)(inited + 600) = v45;
  *(_QWORD *)(inited + 632) = v44;
  *(_QWORD *)(inited + 640) = v43;
  *(_QWORD *)(inited + 696) = &type metadata for Input;
  *(_QWORD *)(inited + 704) = &protocol witness table for Input;
  v38 = v70;
  v39 = v71;
  *(_QWORD *)(inited + 672) = v70;
  *(_QWORD *)(inited + 680) = v39;
  sub_2498CAC78(v51, v50);
  sub_2498CAC78(v3, v68);
  sub_2498CAC78(v60, v59);
  sub_2498CAC78(v56, v55);
  sub_2498CAC78(v58, v57);
  sub_2498CAC78(v54, v53);
  sub_2498CAC78(v52, v69);
  sub_2498CAC78(v41, v42);
  sub_2498CAC78(v67, v66);
  sub_2498CAC78(v65, v64);
  sub_2498CAC78(v63, v62);
  sub_2498CAC78(v61, v49);
  sub_2498CAC78(v48, v47);
  sub_2498CAC78(v46, v45);
  sub_2498CAC78(v44, v43);
  sub_2498CAC78(v38, v39);
  v40 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v38, v39);
  sub_2498CACBC(v44, v43);
  sub_2498CACBC(v46, v45);
  sub_2498CACBC(v48, v47);
  sub_2498CACBC(v61, v49);
  sub_2498CACBC(v63, v62);
  sub_2498CACBC(v65, v64);
  sub_2498CACBC(v67, v66);
  sub_2498CACBC(v41, v42);
  sub_2498CACBC(v52, v69);
  sub_2498CACBC(v54, v53);
  sub_2498CACBC(v58, v57);
  sub_2498CACBC(v56, v55);
  sub_2498CACBC(v60, v59);
  sub_2498CACBC(v3, v68);
  sub_2498CACBC(v51, v50);
  return v40;
}

uint64_t sub_2498E6908()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t inited;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int16 v33;
  __int16 v34;
  __int16 v35;
  unsigned __int8 v36;
  _QWORD v37[3];

  LOBYTE(v37[0]) = 5;
  sub_2498FCA34((uint64_t)v37, 0xFF1AuLL);
  v31 = v1;
  v32 = v0;
  LOBYTE(v37[0]) = 17;
  sub_2498FCA34((uint64_t)v37, 0xE0F1uLL);
  v3 = v2;
  v5 = v4;
  LOBYTE(v37[0]) = 18;
  sub_2498FCA34((uint64_t)v37, 0);
  v7 = v6;
  v28 = v6;
  v9 = v8;
  LOBYTE(v37[0]) = 19;
  sub_2498FCA34((uint64_t)v37, 0);
  v11 = v10;
  v13 = v12;
  LOBYTE(v37[0]) = 12;
  sub_2498FCA34((uint64_t)v37, 8uLL);
  v15 = v14;
  v27 = v14;
  v17 = v16;
  LOBYTE(v37[0]) = 14;
  sub_2498FC7A0((uint64_t)v37, 1);
  v30 = v18;
  v20 = v19;
  v26 = v19;
  v36 = 1;
  v35 = 0;
  v34 = 0;
  v33 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v36, (_BYTE *)&v35 + 1, &v35, (_BYTE *)&v34 + 1, &v34, (_BYTE *)&v33 + 1, &v33, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499579C0;
  *(_QWORD *)(inited + 56) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 64) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 32) = v32;
  *(_QWORD *)(inited + 40) = v31;
  *(_QWORD *)(inited + 96) = &type metadata for Usage;
  *(_QWORD *)(inited + 104) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  v29 = v13;
  *(_QWORD *)(inited + 152) = v11;
  *(_QWORD *)(inited + 160) = v13;
  *(_QWORD *)(inited + 216) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 200) = v17;
  *(_QWORD *)(inited + 256) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 232) = v30;
  *(_QWORD *)(inited + 240) = v20;
  v22 = v37[0];
  v23 = v37[1];
  *(_QWORD *)(inited + 296) = &type metadata for Input;
  *(_QWORD *)(inited + 304) = &protocol witness table for Input;
  *(_QWORD *)(inited + 272) = v22;
  *(_QWORD *)(inited + 280) = v23;
  sub_2498CAC78(v32, v31);
  sub_2498CAC78(v3, v5);
  sub_2498CAC78(v28, v9);
  sub_2498CAC78(v11, v13);
  sub_2498CAC78(v27, v17);
  sub_2498CAC78(v30, v26);
  sub_2498CAC78(v22, v23);
  v24 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v22, v23);
  sub_2498CACBC(v30, v26);
  sub_2498CACBC(v27, v17);
  sub_2498CACBC(v11, v29);
  sub_2498CACBC(v28, v9);
  sub_2498CACBC(v3, v5);
  sub_2498CACBC(v32, v31);
  return v24;
}

uint64_t static KeyboardReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0750 != -1)
    swift_once();
  v2 = xmmword_2578A0F18;
  *a1 = xmmword_2578A0F18;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498E6C30()
{
  return 248;
}

uint64_t KeyboardFlags.rawValue.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*KeyboardFlags.rawValue.modify())()
{
  return nullsub_1;
}

void KeyboardReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t KeyboardReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*KeyboardReport.report.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardReport.init<A>(usages:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v13 - v8;
  if (qword_2578A0750 != -1)
    swift_once();
  v18 = xmmword_2578A0F18;
  HIDReportDescriptor.reportBitCount(for:)();
  *(_QWORD *)&v18 = HIDReport.init(bitCount:id:)(v10, 1);
  *((_QWORD *)&v18 + 1) = v11;
  v14 = v4;
  v15 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  sub_2499558E0();
  v16 = a2;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_11_6();
  if ((v17 & 1) == 0)
    __asm { BR              X13 }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, AssociatedTypeWitness);
  return v18;
}

void KeyboardReport.update(with:)()
{
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_19_5();
  sub_24995561C();
  OUTLINED_FUNCTION_7_6();
}

uint64_t KeyboardReport.index(for:)(unsigned __int8 a1)
{
  return a1 + 8;
}

uint64_t KeyboardReport.modifiers.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  sub_2498C8F2C(232, a1, a2);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4B08];
  v3 = (uint64_t *)(v2 + 16);
  OUTLINED_FUNCTION_0_11(227);
  OUTLINED_FUNCTION_0_11(224);
  OUTLINED_FUNCTION_0_11(226);
  OUTLINED_FUNCTION_0_11(225);
  OUTLINED_FUNCTION_0_11(231);
  OUTLINED_FUNCTION_0_11(228);
  OUTLINED_FUNCTION_0_11(230);
  OUTLINED_FUNCTION_0_11(229);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  swift_release();
  return v4;
}

uint64_t sub_2498E721C(uint64_t result, unsigned __int8 a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[25];
  uint64_t v7;

  if (((result - a3) & 0xFFFFFF00) != 0)
  {
    __break(1u);
  }
  else if ((result - a3) <= 7u && ((a2 >> (result - a3)) & 1) != 0)
  {
    *(_QWORD *)&v6[17] = v3;
    v7 = v4;
    v5 = result;
    swift_beginAccess();
    sub_2499463B8(v6, v5);
    return swift_endAccess();
  }
  return result;
}

void KeyboardReport.keyboardState.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_2498E72A8(_BYTE *a1@<X8>)
{
  char v2;

  KeyboardReport.keyboardState.getter();
  *a1 = v2;
}

uint64_t KeyboardReport.keyboardState.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 240);
}

void KeyboardReport.keyboardState.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E7314(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 240);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E7338(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = KeyboardReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void KeyboardReport.description.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  sub_2498CAC78(a1, a2);
  __asm { BR              X10 }
}

uint64_t KeyboardReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 1;
  return sub_2498CAC78(a1, a2);
}

uint64_t KeyboardReport.Iterator.next()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 <= 231)
  {
    do
    {
      if ((v1 & 0x8000000000000000) == 0 && (_BYTE)v1)
        __asm { BR              X13 }
      *(_QWORD *)(v0 + 16) = ++v1;
    }
    while (v1 != 232);
  }
  return 256;
}

void sub_2498E78EC()
{
  uint64_t v0;

  KeyboardReport.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_2498E78F4(_BYTE *a1@<X8>)
{
  __int16 v2;

  v2 = KeyboardReport.Iterator.next()();
  *a1 = v2;
  a1[1] = HIBYTE(v2) & 1;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498E791C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  KeyboardReport.makeIterator()(v2, v3, a1);
  return OUTLINED_FUNCTION_3_6(v2, v3);
}

void sub_2498E7948()
{
  sub_2499186D8();
}

uint64_t sub_2498E7950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_249920090(a1, a2, a3, *v3, v3[1]);
}

void KeyboardReport.remove(_:)()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_17_5();
  v0 = OUTLINED_FUNCTION_13_6();
  if ((OUTLINED_FUNCTION_20_5() & v0) != 0)
  {
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_20_5();
    sub_24995561C();
  }
  OUTLINED_FUNCTION_7_6();
}

void KeyboardReport.formUnion(_:)(uint64_t a1, unint64_t a2)
{
  sub_2498E7BC8(a1, a2);
}

char *sub_2498E79F8(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;

  if (result)
  {
    v4 = 0;
    if (a2)
      goto LABEL_6;
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      v6 = *result++;
      v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3)
          goto LABEL_16;
        *(_BYTE *)(a3 + v4) |= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2)
          return result;
      }
    }
    __break(1u);
LABEL_16:
    result = (char *)sub_249955DCC();
    __break(1u);
  }
  else if (a2)
  {
    v4 = 0;
    result = 0;
    goto LABEL_8;
  }
  return result;
}

void KeyboardReport.formIntersection(_:)(uint64_t a1, unint64_t a2)
{
  sub_2498E7BC8(a1, a2);
}

char *sub_2498E7AE0(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;

  if (result)
  {
    v4 = 0;
    if (a2)
      goto LABEL_6;
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      v6 = *result++;
      v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3)
          goto LABEL_16;
        *(_BYTE *)(a3 + v4) &= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2)
          return result;
      }
    }
    __break(1u);
LABEL_16:
    result = (char *)sub_249955DCC();
    __break(1u);
  }
  else if (a2)
  {
    v4 = 0;
    result = 0;
    goto LABEL_8;
  }
  return result;
}

void KeyboardReport.formSymmetricDifference(_:)(uint64_t a1, unint64_t a2)
{
  sub_2498E7BC8(a1, a2);
}

void sub_2498E7BC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_2498CAC78(a1, a2);
  sub_2498E8858(v2, a1, a2);
}

char *sub_2498E7C30(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;

  if (result)
  {
    v4 = 0;
    if (a2)
      goto LABEL_6;
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      v6 = *result++;
      v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3)
          goto LABEL_16;
        *(_BYTE *)(a3 + v4) ^= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2)
          return result;
      }
    }
    __break(1u);
LABEL_16:
    result = (char *)sub_249955DCC();
    __break(1u);
  }
  else if (a2)
  {
    v4 = 0;
    result = 0;
    goto LABEL_8;
  }
  return result;
}

void sub_2498E7D00(char *a1)
{
  uint64_t *v1;

  sub_249932B38(*a1, *v1, v1[1]);
}

uint64_t sub_2498E7D0C()
{
  return sub_2498E43DC();
}

uint64_t sub_2498E7D18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249911028);
}

uint64_t sub_2498E7D24()
{
  return sub_2498E43DC();
}

void sub_2498E7D30(uint64_t a1, unsigned __int8 *a2)
{
  sub_2499518A0(a1, *a2);
}

void sub_2498E7D38(_BYTE *a1@<X8>)
{
  char v2;
  char v3;

  KeyboardReport.remove(_:)();
  *a1 = v2;
  a1[1] = v3 & 1;
}

void sub_2498E7D68(_BYTE *a1@<X8>)
{
  char v2;
  char v3;

  KeyboardReport.update(with:)();
  *a1 = v2;
  a1[1] = v3 & 1;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498E7D94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = OUTLINED_FUNCTION_4_5();
  KeyboardReport.formUnion(_:)(v0, v1);
  v2 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v2, v3);
}

void sub_2498E7DBC(uint64_t a1)
{
  KeyboardReport.formIntersection(_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_2498E7DC8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = OUTLINED_FUNCTION_4_5();
  KeyboardReport.formSymmetricDifference(_:)(v0, v1);
  v2 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v2, v3);
}

uint64_t sub_2498E7DF0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249950BC8);
}

uint64_t sub_2498E7DFC()
{
  return sub_2499109D4();
}

void sub_2498E7E0C()
{
  sub_249950E7C();
}

void sub_2498E7E1C(uint64_t a1)
{
  uint64_t v1;

  sub_249910B58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

void sub_2498E7E2C()
{
  sub_2498D4B78();
}

void sub_2498E7E34()
{
  sub_2498E8DF0();
  EventReportProtocol<>.init<A>(_:)();
}

void sub_2498E7EA4(uint64_t a1)
{
  sub_249910CD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_2498E7EB0(_QWORD *a1, _QWORD *a2)
{
  static KeyboardReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void KeyboardReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_2498E7EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498E7F64);
  }
  if (BYTE6(a3) >= 0x27uLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2498E7F7C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  KeyboardReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_2498E7FB0()
{
  return KeyboardReport.remoteTimestamp.setter();
}

uint64_t KeyboardReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2498E7FEC + dword_2498E805C[*(_QWORD *)(v0 + 8) >> 62]))();
}

void sub_2498E7FFC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E8054);
  }
  if (v2 >= 39)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 248);
  }
}

void KeyboardReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void sub_2498E80A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x2498E8118);
  }
  if (v1 >= 39)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E8130(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  KeyboardReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E8180()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498E81B4);
  }
  if (v2 >= 39)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 248);
  }
  JUMPOUT(0x2498E8158);
}

void sub_2498E81E8()
{
  uint64_t *v0;

  KeyboardReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_2498E8204()
{
  return KeyboardReport.remoteTimestamp.setter();
}

void (*sub_2498E820C(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  KeyboardReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_2498E824C;
}

void sub_2498E824C()
{
  KeyboardReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498E8274(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;

  v8 = a1 + 14;
  sub_2498CAC78(a3, a4);
  sub_2498E9750(a1, v8, a2, a3, a4);
  sub_2498CACBC(a3, a4);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_2498E8304()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2498E8328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = sub_24995555C();
  if (v11)
  {
    v12 = sub_249955574();
    if (__OFSUB__(a1, v12))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v11 += a1 - v12;
  }
  v13 = __OFSUB__(a2, a1);
  v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = sub_249955568();
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  v17 = v11 + v16;
  if (v11)
    v18 = v17;
  else
    v18 = 0;
  a6(v11, v18, a4, a5);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_2498E83C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t i;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = result;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  if (a3)
  {
    for (i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL)
        __break(1u);
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          result = sub_249955DCC();
          __break(1u);
          return result;
        }
        *(_BYTE *)(a4 + i) |= *((_BYTE *)&v6 + i);
      }
    }
  }
  return result;
}

uint64_t sub_2498E8510(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t i;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = result;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  if (a3)
  {
    for (i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL)
        __break(1u);
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          result = sub_249955DCC();
          __break(1u);
          return result;
        }
        *(_BYTE *)(a4 + i) &= *((_BYTE *)&v6 + i);
      }
    }
  }
  return result;
}

uint64_t sub_2498E8658(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t i;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = result;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  if (a3)
  {
    for (i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL)
        __break(1u);
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          result = sub_249955DCC();
          __break(1u);
          return result;
        }
        *(_BYTE *)(a4 + i) ^= *((_BYTE *)&v6 + i);
      }
    }
  }
  return result;
}

void sub_2498E87A0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2498E8858(a1, a2, a3);
  OUTLINED_FUNCTION_23_5();
}

void sub_2498E87FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2498E8858(a1, a2, a3);
  OUTLINED_FUNCTION_23_5();
}

void sub_2498E8858(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2498CAC78(a2, a3);
  OUTLINED_FUNCTION_2_8();
  __asm { BR              X11 }
}

uint64_t sub_2498E88D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v2;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v3 = BYTE6(a1);
  v10 = BYTE6(a1);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_8_7((uint64_t)&v6, v3);
  OUTLINED_FUNCTION_1_11();
  v4 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v1 = v6;
  v1[1] = v4;
  OUTLINED_FUNCTION_1_11();
  return OUTLINED_FUNCTION_1_11();
}

void sub_2498E8B84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2498E8858(a1, a2, a3);
  OUTLINED_FUNCTION_23_5();
}

unint64_t sub_2498E8BE4()
{
  unint64_t result;

  result = qword_2578A0F28;
  if (!qword_2578A0F28)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardFlags, &type metadata for KeyboardFlags);
    atomic_store(result, (unint64_t *)&qword_2578A0F28);
  }
  return result;
}

unint64_t sub_2498E8C24()
{
  unint64_t result;

  result = qword_2578A0F30;
  if (!qword_2578A0F30)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardFlags, &type metadata for KeyboardFlags);
    atomic_store(result, (unint64_t *)&qword_2578A0F30);
  }
  return result;
}

unint64_t sub_2498E8C64()
{
  unint64_t result;

  result = qword_2578A0F38;
  if (!qword_2578A0F38)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardFlags, &type metadata for KeyboardFlags);
    atomic_store(result, (unint64_t *)&qword_2578A0F38);
  }
  return result;
}

unint64_t sub_2498E8CA4()
{
  unint64_t result;

  result = qword_2578A0F40;
  if (!qword_2578A0F40)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardFlags, &type metadata for KeyboardFlags);
    atomic_store(result, (unint64_t *)&qword_2578A0F40);
  }
  return result;
}

unint64_t sub_2498E8CE4()
{
  unint64_t result;

  result = qword_2578A0F48;
  if (!qword_2578A0F48)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardReport.Iterator, &type metadata for KeyboardReport.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A0F48);
  }
  return result;
}

unint64_t sub_2498E8D24()
{
  unint64_t result;

  result = qword_2578A0F50;
  if (!qword_2578A0F50)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardReport, &type metadata for KeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F50);
  }
  return result;
}

unint64_t sub_2498E8D64()
{
  unint64_t result;

  result = qword_2578A0F58;
  if (!qword_2578A0F58)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardReport, &type metadata for KeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F58);
  }
  return result;
}

void sub_2498E8DA4(unsigned __int8 *a1)
{
  KeyboardReport.keyboardState.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void type metadata accessor for KeyboardFlags()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for KeyboardReport()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for KeyboardReport.Iterator()
{
  OUTLINED_FUNCTION_21_5();
}

unint64_t sub_2498E8DF0()
{
  unint64_t result;

  result = qword_2578A0F60;
  if (!qword_2578A0F60)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardReport, &type metadata for KeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F60);
  }
  return result;
}

void sub_2498E8E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_24995555C())
  {
    if (__OFSUB__(a1, sub_249955574()))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_249955568();
      __asm { BR              X11 }
    }
    __break(1u);
    JUMPOUT(0x2498E90B0);
  }
  __break(1u);
  JUMPOUT(0x2498E90B8);
}

void sub_2498E9138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_24995555C())
  {
    if (__OFSUB__(a1, sub_249955574()))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_249955568();
      __asm { BR              X11 }
    }
    __break(1u);
    JUMPOUT(0x2498E93BCLL);
  }
  __break(1u);
  JUMPOUT(0x2498E93C4);
}

void sub_2498E9444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_24995555C())
  {
    if (__OFSUB__(a1, sub_249955574()))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_249955568();
      __asm { BR              X11 }
    }
    __break(1u);
    JUMPOUT(0x2498E96C8);
  }
  __break(1u);
  JUMPOUT(0x2498E96D0);
}

void sub_2498E9750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

void sub_2498E97A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  a6(v6, v7 & 0xFFFFFFFFFFFFLL, BYTE6(v7), v8, v9);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_3_7();
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_2498E721C(a1, v1, 0xE0u);
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

void OUTLINED_FUNCTION_8_7(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  sub_2498E8274(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return sub_249955AE4();
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  Swift::Int v0;

  return HIDReport.mask(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  Swift::Int v0;

  return HIDReport.mask(for:)(v0);
}

Swift::Int OUTLINED_FUNCTION_14_5()
{
  Swift::Int v0;

  return HIDReport.offset(for:)(v0);
}

void OUTLINED_FUNCTION_15_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_2498E8328(a1, a2, a3, v3, v4, v5);
}

Swift::Int OUTLINED_FUNCTION_17_5()
{
  Swift::Int v0;

  return HIDReport.offset(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_24995555C();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return sub_249955574();
}

uint64_t sub_2498E99E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0808 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 15);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2498E9A54(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2578A07D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  *a1 = HIDReport.init(bitCount:id:)(v2, 6);
  a1[1] = v3;
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_2498E9ABC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0798 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 7);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9B30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0810 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 5);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2498E9BA4(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2578A0768 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  *a1 = HIDReport.init(bitCount:id:)(v2, 2);
  a1[1] = v3;
  OUTLINED_FUNCTION_11_7();
}

void sub_2498E9C0C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2578A0750 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  *a1 = HIDReport.init(bitCount:id:)(v2, 1);
  a1[1] = v3;
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_2498E9C74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A07E8 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 16);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2498E9CE8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_2578A07B0 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  v3 = HIDReport.init(bitCount:id:)(v2, 9);
  DigitizerReport.init(_report:)(v3, v4);
  *a1 = v5;
  a1[1] = v6;
}

uint64_t sub_2498E9D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0788 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 11);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0738 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 14);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9E48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0748 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 17);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9EBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0800 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 18);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9F30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0730 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 20);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498E9FA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0760 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 19);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498EA018@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0790 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 13);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2498EA08C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_2578A0780 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  result = HIDReport.init(bitCount:id:)(v2, 12);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2498EA100(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2578A0740 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  *a1 = HIDReport.init(bitCount:id:)(v2, 4);
  a1[1] = v3;
  OUTLINED_FUNCTION_11_7();
}

void sub_2498EA168(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2578A0758 != -1)
    swift_once();
  OUTLINED_FUNCTION_24_3();
  HIDReportDescriptor.reportBitCount(for:)();
  *a1 = HIDReport.init(bitCount:id:)(v2, 3);
  a1[1] = v3;
  OUTLINED_FUNCTION_11_7();
}

uint64_t EventReportProtocol<>.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;

  v6 = static EventReportProtocol<>.reportBitCount.getter(a1, a2);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v8 = HIDReport.init(bitCount:id:)(v6, v7);
  return (*(uint64_t (**)(uint64_t))(a3 + 40))(v8);
}

uint64_t sub_2498EA250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA840(a1, a2, 20, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EA268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA288 + *((int *)qword_2498EA310 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA298(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 15)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = OUTLINED_FUNCTION_25_5(8 * BYTE6(v12), a2, a3);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

void sub_2498EA320(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498EA360()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;

  if (8 * BYTE6(v1) > 103)
  {
    v5 = HIDReport.init(bitCount:id:)(8 * BYTE6(v1), 7);
    v7 = v6;
    v10 = v6;
    sub_2498CAC78(v5, v6);
    HIDReport.initialize(from:)();
    v9 = v8;
    sub_2498CACBC(v2, v1);
    sub_2498CACBC(v5, v7);
    result = v5;
    v4 = v10;
    if ((v9 & 1) != 0)
    {
      *v0 = v5;
      v0[1] = v10;
      return result;
    }
  }
  else
  {
    result = v2;
    v4 = v1;
  }
  result = sub_2498CACBC(result, v4);
  *(_OWORD *)v0 = xmmword_249957580;
  return result;
}

uint64_t sub_2498EA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA454 + *((int *)qword_2498EA4E0 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 135)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = HIDReport.init(bitCount:id:)(8 * BYTE6(v12), 5);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

uint64_t sub_2498EA4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA510 + dword_2498EA59C[v10]))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 71)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = HIDReport.init(bitCount:id:)(8 * BYTE6(v12), 2);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

uint64_t sub_2498EA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA5CC + *((int *)qword_2498EA658 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 247)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = HIDReport.init(bitCount:id:)(8 * BYTE6(v12), 1);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

uint64_t sub_2498EA668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA688 + *((int *)qword_2498EA710 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA698(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 31)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = OUTLINED_FUNCTION_25_5(8 * BYTE6(v12), a2, a3);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

void sub_2498EA720(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498EA760()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  if (8 * BYTE6(v1) > 319)
  {
    v5 = HIDReport.init(bitCount:id:)(8 * BYTE6(v1), 9);
    v7 = v6;
    sub_2498CAC78(v5, v6);
    DigitizerReport.init(_report:)(v5, v7);
    v12 = v8;
    v13 = v9;
    HIDReport.initialize(from:)();
    v11 = v10;
    sub_2498CACBC(v2, v1);
    sub_2498CACBC(v5, v7);
    result = v12;
    v4 = v13;
    if ((v11 & 1) != 0)
    {
      *v0 = v12;
      v0[1] = v13;
      return result;
    }
  }
  else
  {
    result = v2;
    v4 = v1;
  }
  result = sub_2498CACBC(result, v4);
  *(_OWORD *)v0 = xmmword_249957580;
  return result;
}

uint64_t sub_2498EA840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EA860 + *((int *)qword_2498EA8E8 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EA870(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 47)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = OUTLINED_FUNCTION_25_5(8 * BYTE6(v12), a2, a3);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

void sub_2498EA8F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498EA938()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;

  if (8 * BYTE6(v1) > 303)
  {
    v5 = HIDReport.init(bitCount:id:)(8 * BYTE6(v1), 18);
    v7 = v6;
    v10 = v6;
    sub_2498CAC78(v5, v6);
    HIDReport.initialize(from:)();
    v9 = v8;
    sub_2498CACBC(v2, v1);
    sub_2498CACBC(v5, v7);
    result = v5;
    v4 = v10;
    if ((v9 & 1) != 0)
    {
      *v0 = v5;
      v0[1] = v10;
      return result;
    }
  }
  else
  {
    result = v2;
    v4 = v1;
  }
  result = sub_2498CACBC(result, v4);
  *(_OWORD *)v0 = xmmword_249957580;
  return result;
}

uint64_t sub_2498EAA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EAA2C + dword_2498EAAB4[v10]))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EAA3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 151)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = OUTLINED_FUNCTION_25_5(8 * BYTE6(v12), a2, a3);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

uint64_t sub_2498EAAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EAAE4 + *((int *)qword_2498EAB70 + v10)))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EAAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 39)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = HIDReport.init(bitCount:id:)(8 * BYTE6(v12), 4);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

uint64_t sub_2498EAB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_4_7();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_2498EABA0 + dword_2498EAC2C[v10]))(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

void sub_2498EABB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if (8 * BYTE6(v12) <= 23)
  {
    v13 = OUTLINED_FUNCTION_9_6();
LABEL_5:
    sub_2498CACBC(v13, v14);
    *(_OWORD *)v10 = xmmword_249957580;
    goto LABEL_6;
  }
  v15 = HIDReport.init(bitCount:id:)(8 * BYTE6(v12), 3);
  OUTLINED_FUNCTION_1_12(v15, v16);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_6_9();
  v13 = a9;
  v14 = a10;
  if ((v11 & 1) == 0)
    goto LABEL_5;
  *(_QWORD *)v10 = a9;
  *(_QWORD *)(v10 + 8) = a10;
LABEL_6:
  OUTLINED_FUNCTION_0_12();
}

void EventReportProtocol<>.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(_BYTE *, _QWORD);
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[32];

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v6 - 8);
  v30 = v0;
  v31 = v10;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_22_5();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - v13;
  v15 = 8 * sub_249955670();
  if (v15 >= (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v5))
  {
    v29 = v9;
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v7, v5);
    v18 = HIDReport.init(bitCount:id:)(v15, v17);
    v20 = v19;
    v21 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 40);
    sub_2498CAC78(v18, v19);
    v21(v18, v20, v7, v3);
    v22 = v31;
    v23 = v1;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    v24(v14, v23, v7);
    v25 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 24))(v32, v7, v3);
    HIDReport.initialize(from:)();
    v27 = v26;
    v25(v32, 0);
    OUTLINED_FUNCTION_5_4();
    sub_2498CACBC(v18, v20);
    if ((v27 & 1) != 0)
    {
      v9 = v29;
      v24((char *)v29, (uint64_t)v14, v7);
      v16 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v7);
      v16 = 1;
      v9 = v29;
    }
  }
  else
  {
    OUTLINED_FUNCTION_5_4();
    v16 = 1;
  }
  __swift_storeEnumTagSinglePayload(v9, v16, 1, v7);
  OUTLINED_FUNCTION_4_0();
}

uint64_t EventReportProtocol<>.description.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_15_7();
  sub_24995603C();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  v0 = OUTLINED_FUNCTION_9_6();
  v2 = v1(v0);
  v4 = v3;
  HIDReport.description.getter(v2, v3);
  sub_2498CACBC(v2, v4);
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  return 60;
}

uint64_t sub_2498EAEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA268(a1, a2, 14, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t EventReportProtocol<>.union(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  return sub_2498EAF44(a1, a2, a3, MEMORY[0x24BEE2270], a4);
}

uint64_t EventReportProtocol<>.intersection(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
  return sub_249955BBC();
}

uint64_t EventReportProtocol<>.symmetricDifference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X8>)
{
  return sub_2498EAF44(a1, a2, a3, MEMORY[0x24BEE2228], a4);
}

uint64_t sub_2498EAF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t (*a4)(char *, uint64_t, uint64_t)@<X5>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;

  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14(a5, v5, a2);
  v14(v12, a1, a2);
  return a4(v12, a2, a3);
}

BOOL EventReportProtocol<>.insert(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BOOL8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_18_0();
  v14 = v0;
  v15 = v1;
  v13 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v12 - v4;
  v6 = sub_249955AD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  OUTLINED_FUNCTION_33_1((uint64_t)v5);
  OUTLINED_FUNCTION_30_1();
  sub_249955BE0();
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness) == 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  OUTLINED_FUNCTION_33_1(v13);
  return v10;
}

void EventReportProtocol<>.formUnion(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t, _BYTE *, uint64_t);
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_18_0();
  v25 = v2;
  v26 = v0;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_29_2(v5, v3, v7);
  v8 = OUTLINED_FUNCTION_32_1();
  v27 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_10_6();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v23[-v11];
  sub_249955AD8();
  OUTLINED_FUNCTION_8_8();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v23[-v15];
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v19 = &v23[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = *(_QWORD *)(OUTLINED_FUNCTION_32_1() - 8);
  OUTLINED_FUNCTION_8_8();
  MEMORY[0x24BDAC7A8](v20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v19, v6, v4);
  OUTLINED_FUNCTION_19_6();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_7_7((uint64_t)v16);
  if (!v21)
  {
    v22 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v27 + 32);
    do
    {
      v22(v1, v16, v8);
      OUTLINED_FUNCTION_30_1();
      sub_249955BC8();
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v12, v8);
      OUTLINED_FUNCTION_18_6();
      OUTLINED_FUNCTION_7_7((uint64_t)v16);
    }
    while (!v21);
  }
  OUTLINED_FUNCTION_28_2(v24);
  OUTLINED_FUNCTION_4_0();
}

void EventReportProtocol<>.formIntersection(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char v30;
  char v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t AssociatedConformanceWitness;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_18_0();
  v48 = v0;
  v52 = v5;
  v7 = v6;
  AssociatedConformanceWitness = v8;
  OUTLINED_FUNCTION_29_2(v8, v6, v9);
  v10 = OUTLINED_FUNCTION_34_1();
  v51 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_10_6();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_36_1();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_16_5();
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_35_1();
  v45 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v40 - v18;
  v41 = OUTLINED_FUNCTION_34_1();
  v43 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_8_8();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v40 = (char *)&v40 - v22;
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_22_5();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v40 - v24;
  v42 = v26;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27((char *)&v40 - v24, AssociatedConformanceWitness, v7);
  v53 = v7;
  v27(v4, v48, v7);
  v28 = v40;
  v29 = v41;
  OUTLINED_FUNCTION_19_6();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_249955AE4();
  OUTLINED_FUNCTION_7_7((uint64_t)v19);
  if (!v30)
  {
    v49 = *(_QWORD *)(v51 + 32);
    v44 = v10;
    do
    {
      OUTLINED_FUNCTION_37_0(v3, (uint64_t)v19);
      OUTLINED_FUNCTION_24_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
      OUTLINED_FUNCTION_30_1();
      v31 = sub_249955BC8();
      OUTLINED_FUNCTION_23_6(v2);
      if ((v31 & 1) != 0)
      {
        v32 = v19;
        v33 = v25;
        v34 = v28;
        v35 = v2;
        v36 = v1;
        v37 = v29;
        v38 = v45;
        sub_249955BD4();
        v39 = v38;
        v29 = v37;
        v1 = v36;
        v2 = v35;
        v28 = v34;
        v25 = v33;
        v19 = v32;
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v47);
      }
      OUTLINED_FUNCTION_23_6(v3);
      sub_249955AE4();
      OUTLINED_FUNCTION_7_7((uint64_t)v19);
    }
    while (!v30);
  }
  OUTLINED_FUNCTION_28_2(v43);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v53);
  OUTLINED_FUNCTION_4_0();
}

void EventReportProtocol<>.formSymmetricDifference(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  char v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t AssociatedConformanceWitness;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_18_0();
  v52 = v5;
  v53 = v0;
  AssociatedConformanceWitness = v6;
  OUTLINED_FUNCTION_29_2(v6, v7, v8);
  v10 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  OUTLINED_FUNCTION_10_6();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_36_1();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_16_5();
  v48 = *(_QWORD *)(v15 - 8);
  v49 = v15;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_35_1();
  v47 = v17;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v43 - v20;
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_27_5();
  v24 = v23;
  v54 = v23;
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v44 = v25;
  v45 = v26;
  OUTLINED_FUNCTION_8_8();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v43 - v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v1, AssociatedConformanceWitness, v24);
  v30 = v44;
  OUTLINED_FUNCTION_19_6();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_249955AE4();
  OUTLINED_FUNCTION_7_7((uint64_t)v21);
  if (!v31)
  {
    v50 = *(_QWORD *)(v12 + 32);
    v46 = AssociatedTypeWitness;
    do
    {
      OUTLINED_FUNCTION_37_0(v4, (uint64_t)v21);
      OUTLINED_FUNCTION_24_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
      OUTLINED_FUNCTION_30_1();
      v32 = sub_249955BC8();
      OUTLINED_FUNCTION_23_6(v3);
      if ((v32 & 1) == 0)
      {
        v33 = v21;
        v34 = v29;
        v35 = v30;
        v36 = v3;
        v37 = v2;
        v38 = v12;
        v39 = v47;
        sub_249955BD4();
        v40 = v39;
        v12 = v38;
        v2 = v37;
        v3 = v36;
        v30 = v35;
        v29 = v34;
        v21 = v33;
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v40, v49);
      }
      OUTLINED_FUNCTION_23_6(v4);
      sub_249955AE4();
      OUTLINED_FUNCTION_7_7((uint64_t)v21);
    }
    while (!v31);
  }
  v41 = OUTLINED_FUNCTION_9_6();
  v42(v41);
  OUTLINED_FUNCTION_4_0();
}

void EventReportProtocol<>.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_18_0();
  v32 = v0;
  v28 = v3;
  v29 = v2;
  v30 = v4;
  v36 = v5;
  v7 = v6;
  v34 = v8;
  v10 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_17_6();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  sub_249955AD8();
  OUTLINED_FUNCTION_8_8();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - v19;
  v33 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_27_5();
  v22 = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_8_8();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v28 - v24;
  v26 = *(void (**)(uint64_t))(v30 + 32);
  v35 = v10;
  v26(v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v1, v34, v7);
  sub_2499558E0();
  v32 = v7;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_20_6();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, AssociatedTypeWitness) != 1)
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    do
    {
      v27(v15, v20, AssociatedTypeWitness);
      sub_249955BC8();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, AssociatedTypeWitness);
      OUTLINED_FUNCTION_20_6();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v22);
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498EBA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA840(a1, a2, 17, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t static EventReportProtocol<>.reportBitCount.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  (*(void (**)(void))(a2 + 24))();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v7, a1, a2);
  HIDReportDescriptor.reportBitCount(for:)();
  v5 = v4;
  sub_2498CACBC(v7[0], v7[1]);
  return v5;
}

uint64_t sub_2498EBAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EAA0C(a1, a2, 19, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EBB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EAA0C(a1, a2, 12, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EBB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EAA0C(a1, a2, 11, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EBB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EAA0C(a1, a2, 13, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EBB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA268(a1, a2, 6, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t dispatch thunk of static EventReportDescriptorProtocol.descriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static EventReportDescriptorProtocol.reportID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventReportProtocol.report.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of EventReportProtocol.report.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EventReportProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventReportProtocol.init(_report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of EventReportProtocol.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_2498EBBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA668(a1, a2, 16, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_2498EBBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  return sub_2498EA668(a1, a2, 15, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t OUTLINED_FUNCTION_1_12(uint64_t a1, unint64_t a2)
{
  return sub_2498CAC78(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

void OUTLINED_FUNCTION_3_8()
{
  HIDReport.initialize(from:)();
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return sub_249955AD8();
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return sub_249955AE4();
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return sub_2499558E0();
}

uint64_t OUTLINED_FUNCTION_20_6()
{
  return sub_249955AE4();
}

uint64_t OUTLINED_FUNCTION_21_6(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t OUTLINED_FUNCTION_23_6(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_24_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t a1, uint64_t a2, char a3)
{
  return HIDReport.init(bitCount:id:)(a1, a3);
}

uint64_t OUTLINED_FUNCTION_28_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_29_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;

  result = 0;
  *(_QWORD *)(v3 - 120) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_33_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_37_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 120))(a1, a2, v2);
}

uint64_t static AppleVendorKeyboardReport.initialReportBitCount.getter()
{
  return 24;
}

uint64_t static AppleVendorKeyboardReport.reportID.getter()
{
  return 3;
}

uint64_t sub_2498EBE54()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498EBE74();
  *(_QWORD *)&xmmword_2578A0F68 = result;
  *((_QWORD *)&xmmword_2578A0F68 + 1) = v1;
  return result;
}

uint64_t sub_2498EBE74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[2];
  char v61;
  __int16 v62;
  __int16 v63;
  __int16 v64;
  _QWORD v65[3];

  LOBYTE(v65[0]) = 5;
  sub_2498FCA34((uint64_t)v65, 0xFF01uLL);
  v48 = v1;
  v49 = v0;
  LOBYTE(v65[0]) = 18;
  sub_2498FCA34((uint64_t)v65, 1uLL);
  v55 = v2;
  v4 = v3;
  LOBYTE(v65[0]) = 19;
  sub_2498FCA34((uint64_t)v65, 0x30uLL);
  v6 = v5;
  v8 = v7;
  LOBYTE(v65[0]) = 14;
  sub_2498FC7A0((uint64_t)v65, 2);
  v10 = v9;
  v54 = v11;
  LOBYTE(v65[0]) = 12;
  sub_2498FCA34((uint64_t)v65, 8uLL);
  v52 = v13;
  v53 = v12;
  LOBYTE(v65[0]) = 6;
  sub_2498FC7A0((uint64_t)v65, 0);
  v50 = v15;
  v51 = v14;
  LOBYTE(v65[0]) = 7;
  sub_2498FC7A0((uint64_t)v65, 255);
  v45 = v17;
  v46 = v16;
  LOBYTE(v60[0]) = 0;
  v64 = 0;
  v63 = 0;
  v62 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v60, (_BYTE *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, v65);
  LOBYTE(v60[0]) = 5;
  sub_2498FCA34((uint64_t)v60, 0xFF00uLL);
  v38 = v18;
  v59 = v19;
  LOBYTE(v60[0]) = 17;
  sub_2498FCA34((uint64_t)v60, 0x102uLL);
  v57 = v21;
  v58 = v20;
  LOBYTE(v60[0]) = 6;
  sub_2498FC7A0((uint64_t)v60, 0);
  v47 = v22;
  v56 = v23;
  LOBYTE(v60[0]) = 7;
  sub_2498FC7A0((uint64_t)v60, 255);
  v43 = v25;
  v44 = v24;
  LOBYTE(v60[0]) = 12;
  sub_2498FCA34((uint64_t)v60, 8uLL);
  v41 = v27;
  v42 = v26;
  LOBYTE(v60[0]) = 14;
  sub_2498FC7A0((uint64_t)v60, 8);
  v39 = v29;
  v40 = v28;
  v64 = 1;
  v63 = 0;
  v62 = 0;
  v61 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, &v61, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249957590;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v49;
  *(_QWORD *)(inited + 80) = v48;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v55;
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(_QWORD *)(inited + 152) = v6;
  *(_QWORD *)(inited + 160) = v8;
  *(_QWORD *)(inited + 216) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 416) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 424) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 456) = &type metadata for Usage;
  *(_QWORD *)(inited + 192) = v10;
  *(_QWORD *)(inited + 200) = v54;
  *(_QWORD *)(inited + 464) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 296) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 496) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 536) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 336) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 256) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 232) = v53;
  *(_QWORD *)(inited + 240) = v52;
  *(_QWORD *)(inited + 272) = v51;
  *(_QWORD *)(inited + 280) = v50;
  *(_QWORD *)(inited + 312) = v46;
  *(_QWORD *)(inited + 320) = v45;
  *(_QWORD *)(inited + 576) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 584) = &protocol witness table for ReportSize;
  v36 = v65[0];
  v31 = v65[0];
  v37 = v65[1];
  *(_QWORD *)(inited + 616) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 624) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v31;
  *(_QWORD *)(inited + 360) = v37;
  *(_QWORD *)(inited + 392) = v38;
  *(_QWORD *)(inited + 400) = v59;
  *(_QWORD *)(inited + 432) = v58;
  *(_QWORD *)(inited + 440) = v57;
  *(_QWORD *)(inited + 472) = v47;
  *(_QWORD *)(inited + 480) = v56;
  *(_QWORD *)(inited + 512) = v44;
  *(_QWORD *)(inited + 520) = v43;
  *(_QWORD *)(inited + 552) = v42;
  *(_QWORD *)(inited + 560) = v41;
  *(_QWORD *)(inited + 592) = v40;
  *(_QWORD *)(inited + 600) = v39;
  *(_QWORD *)(inited + 656) = &type metadata for Input;
  *(_QWORD *)(inited + 664) = &protocol witness table for Input;
  v33 = v60[0];
  v34 = v60[1];
  *(_QWORD *)(inited + 632) = v60[0];
  *(_QWORD *)(inited + 640) = v34;
  sub_2498CAC78(v49, v48);
  sub_2498CAC78(v55, v4);
  sub_2498CAC78(v6, v8);
  sub_2498CAC78(v10, v54);
  sub_2498CAC78(v53, v52);
  sub_2498CAC78(v51, v50);
  sub_2498CAC78(v46, v45);
  sub_2498CAC78(v36, v37);
  sub_2498CAC78(v38, v59);
  sub_2498CAC78(v58, v57);
  sub_2498CAC78(v47, v56);
  sub_2498CAC78(v44, v43);
  sub_2498CAC78(v42, v41);
  sub_2498CAC78(v40, v39);
  sub_2498CAC78(v33, v34);
  v35 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v33, v34);
  sub_2498CACBC(v40, v39);
  sub_2498CACBC(v42, v41);
  sub_2498CACBC(v44, v43);
  sub_2498CACBC(v47, v56);
  sub_2498CACBC(v58, v57);
  sub_2498CACBC(v38, v59);
  sub_2498CACBC(v36, v37);
  sub_2498CACBC(v46, v45);
  sub_2498CACBC(v51, v50);
  sub_2498CACBC(v53, v52);
  sub_2498CACBC(v10, v54);
  sub_2498CACBC(v6, v8);
  sub_2498CACBC(v55, v4);
  sub_2498CACBC(v49, v48);
  return v35;
}

uint64_t static AppleVendorKeyboardReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0758 != -1)
    swift_once();
  v2 = xmmword_2578A0F68;
  *a1 = xmmword_2578A0F68;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498EC400()
{
  return 24;
}

uint64_t sub_2498EC40C()
{
  return 3;
}

uint64_t AppleVendorKeyboardReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  return a1;
}

uint64_t AppleVendorKeyboardReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AppleVendorKeyboardReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498EC488(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = AppleVendorKeyboardReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

unint64_t AppleVendorKeyboardReport.description.getter(uint64_t a1, unint64_t a2)
{
  char v4;
  char v5;
  char v6;
  unsigned __int8 v7;

  sub_2498CAC78(a1, a2);
  v4 = 8;
  v5 = 1;
  do
  {
    v6 = v5;
    sub_2498C8F2C(v4, a1, a2);
    if ((v7 - 49) > 0xCFu && v7 <= 0x21u && ((1 << v7) & 0x30003001ELL) != 0)
    {
      sub_2498CB760();
      sub_2499558C8();
      sub_2499558A4();
      sub_2499558A4();
      swift_bridgeObjectRelease();
    }
    v5 = 0;
    v4 = 16;
  }
  while ((v6 & 1) != 0);
  sub_2498CACBC(a1, a2);
  swift_bridgeObjectRetain();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t AppleVendorKeyboardReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2498CAC78(a1, a2);
}

void AppleVendorKeyboardReport.Iterator.next()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = v0[2];
  if (v1 <= 1)
  {
    v2 = *v0;
    v3 = v0[1];
    v4 = 8 * v1;
    while ((unint64_t)(v1 - 0x1000000000000000) >> 61 == 7)
    {
      if (__OFADD__(v4, 8))
        goto LABEL_12;
      sub_2498C8F2C(v4 + 8, v2, v3);
      if ((v5 - 49) >= 0xD0u && v5 <= 0x21u && ((1 << v5) & 0x30003001ELL) != 0)
      {
        v0[2] = v1 + 1;
        return;
      }
      v0[2] = ++v1;
      v4 += 8;
      if (v1 == 2)
        return;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

unint64_t sub_2498EC6E8()
{
  uint64_t v0;

  return AppleVendorKeyboardReport.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_2498EC6F0()
{
  uint64_t v0;

  AppleVendorKeyboardReport.Iterator.next()();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498EC710@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  AppleVendorKeyboardReport.makeIterator()(v2, v3, a1);
  return OUTLINED_FUNCTION_3_6(v2, v3);
}

void sub_2498EC73C()
{
  sub_249918700();
}

uint64_t sub_2498EC744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_24992009C(a1, a2, a3, *v3, v3[1]);
}

void AppleVendorKeyboardReport.update(with:)()
{
  uint64_t v1;

  v1 = sub_249955688();
  MEMORY[0x24BDAC7A8](v1);
  __asm { BR              X10 }
}

uint64_t sub_2498EC7E0()
{
  unsigned __int8 v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  char *v10;

  v5 = (int)v1 + 2;
  if (__OFADD__((int)v1, 2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < (int)v1 + 1)
  {
LABEL_9:
    __break(1u);
    JUMPOUT(0x2498ECAF8);
  }
  *(_QWORD *)(v4 - 240) = (int)v1;
  sub_2498CAC78(v1, v2);
  v6 = sub_2498E3FC4((int)v1 + 1, v5, v1, v2);
  v8 = v7;
  sub_2498CACBC(v1, v2);
  sub_2498CAC78(v6, v8);
  sub_2499555EC();
  OUTLINED_FUNCTION_5_4();
  sub_2498E498C();
  do
  {
    sub_249955AE4();
    v9 = *(unsigned __int8 *)(v4 - 109);
    if ((v9 & 1) != 0)
    {
      OUTLINED_FUNCTION_6_6();
      *(_QWORD *)(v4 - 232) = 0;
      *(_QWORD *)(v4 - 248) = v3;
      v10 = (char *)&loc_2498EC8A8 + *((int *)qword_2498ECB20 + (v8 >> 62));
      *(_QWORD *)(v4 - 128) = (int)v6;
      __asm { BR              X9 }
    }
  }
  while (*(unsigned __int8 *)(v4 - 110) != v0);
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_5_4();
  return v0 | (v9 << 8);
}

void AppleVendorKeyboardReport.remove(_:)()
{
  __asm { BR              X10 }
}

void sub_2498ECB9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (__OFADD__((int)v0, 2))
  {
    __break(1u);
  }
  else if ((int)v0 + 2 >= (int)v0 + 1)
  {
    sub_2498CAC78(v0, v1);
    sub_2498E3FC4((int)v0 + 1, (int)v0 + 2, v0, v1);
    v3 = v2;
    sub_2498CACBC(v0, v1);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x2498ECE60);
}

void sub_2498ECEA8(char *a1)
{
  uint64_t *v1;

  sub_249932B4C(*a1, *v1, v1[1]);
}

uint64_t sub_2498ECEB4()
{
  return sub_2498E43DC();
}

uint64_t sub_2498ECEC0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249911010);
}

uint64_t sub_2498ECECC()
{
  return sub_2498E43DC();
}

void sub_2498ECED8(uint64_t a1, unsigned __int8 *a2)
{
  sub_249951858(a1, *a2);
}

void sub_2498ECEE0()
{
  uint64_t v0;

  AppleVendorKeyboardReport.remove(_:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498ECF04()
{
  uint64_t v0;

  AppleVendorKeyboardReport.update(with:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498ECF28()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = OUTLINED_FUNCTION_4_5();
  sub_249918A04(v0, v1);
  v2 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v2, v3);
}

uint64_t sub_2498ECF50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return sub_2499112D0(*a1, a1[1], a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_2498ECF5C()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_4_5();
  sub_249911904();
  v0 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v0, v1);
}

uint64_t sub_2498ECF84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249950C34);
}

void sub_2498ECF90()
{
  sub_249910A50();
}

void sub_2498ECFA0(uint64_t *a1)
{
  uint64_t v1;

  sub_249950F2C(*a1, a1[1], *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_2498ECFB0()
{
  return sub_249910BF8();
}

void sub_2498ECFC0()
{
  sub_2498D4C60();
}

void sub_2498ECFC8()
{
  sub_2498ED4F4();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_2498ED038()
{
  return sub_249910C20();
}

void sub_2498ED044(_QWORD *a1, _QWORD *a2)
{
  static AppleVendorKeyboardReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void AppleVendorKeyboardReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_2498ED090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498ED0F8);
  }
  if (BYTE6(a3) >= 0xBuLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2498ED110(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  AppleVendorKeyboardReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_2498ED144()
{
  return AppleVendorKeyboardReport.remoteTimestamp.setter();
}

uint64_t AppleVendorKeyboardReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2498ED180 + *((int *)qword_2498ED1F0 + (*(_QWORD *)(v0 + 8) >> 62))))();
}

void sub_2498ED190()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498ED1E8);
  }
  if (v2 >= 11)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 24);
  }
}

void AppleVendorKeyboardReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void (*sub_2498ED23C())(uint64_t a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x2498ED2B0);
  }
  if (v1 >= 11)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  return sub_2498ED2C8;
}

void sub_2498ED2C8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  AppleVendorKeyboardReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498ED318()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498ED34CLL);
  }
  if (v2 >= 11)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 24);
  }
  JUMPOUT(0x2498ED2F0);
}

void sub_2498ED380()
{
  uint64_t *v0;

  AppleVendorKeyboardReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_2498ED39C()
{
  return AppleVendorKeyboardReport.remoteTimestamp.setter();
}

void (*sub_2498ED3A4(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  AppleVendorKeyboardReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_2498ED3E4;
}

void sub_2498ED3E4()
{
  AppleVendorKeyboardReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2498ED410()
{
  unint64_t result;

  result = qword_2578A0F78;
  if (!qword_2578A0F78)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardReport.Iterator, &type metadata for AppleVendorKeyboardReport.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A0F78);
  }
  return result;
}

unint64_t sub_2498ED450()
{
  unint64_t result;

  result = qword_2578A0F80;
  if (!qword_2578A0F80)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardReport, &type metadata for AppleVendorKeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F80);
  }
  return result;
}

unint64_t sub_2498ED490()
{
  unint64_t result;

  result = qword_2578A0F88;
  if (!qword_2578A0F88)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardReport, &type metadata for AppleVendorKeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F88);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardReport()
{
  return &type metadata for AppleVendorKeyboardReport;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardReport.Iterator()
{
  return &type metadata for AppleVendorKeyboardReport.Iterator;
}

unint64_t sub_2498ED4F4()
{
  unint64_t result;

  result = qword_2578A0F90;
  if (!qword_2578A0F90)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardReport, &type metadata for AppleVendorKeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A0F90);
  }
  return result;
}

void HIDVirtualServicePool.sendReport(_:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;

  OUTLINED_FUNCTION_18_0();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_16_6();
  v10 = OUTLINED_FUNCTION_7_8(v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_1_13();
  v23 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OUTLINED_FUNCTION_73();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v22[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2498E2300(v4, (uint64_t)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v2;
  sub_2498E2344((uint64_t)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  v20 = (uint64_t *)(v19 + ((v17 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v20 = v8;
  v20[1] = v6;
  v27 = sub_2498EDCD0;
  v28 = v19;
  v25 = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v21 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  swift_retain();
  sub_2498CAC78(v8, v6);
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_19_7(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_17_7();
  MEMORY[0x24BCFAC5C](0, v14, v1, v21);
  _Block_release(v21);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_11_8(v23);
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498ED6FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  __int16 v21;
  __int16 v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  __int16 v43;
  __int16 v44;
  char v45;
  uint8_t *v46;
  uint8_t *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v8 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - v15;
  v17 = sub_2498F24C8(a2);
  if (v17)
  {
    v18 = v17;
    v19 = (uint64_t *)(v17 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
    swift_beginAccess();
    v20 = *v19;
    swift_bridgeObjectRetain();
    sub_2498CAC78(a3, a4);
    sub_2498E21BC(a3, a4);
    v22 = v21;
    sub_2498CACBC(a3, a4);
    if ((v22 & 0x100) != 0)
      v23 = 0;
    else
      v23 = v22;
    sub_2498F03FC(v23, v20, (uint64_t)&v49);
    swift_bridgeObjectRelease();
    if (v50)
    {
      sub_2498CF9C0(&v49, (uint64_t)&v52);
      v24 = v54;
      v25 = v55;
      v26 = (uint8_t *)__swift_project_boxed_opaque_existential_1(&v52, v54);
      sub_2498EDD14(a3, a4, v26, a2, v18, v24, v25);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    }
    sub_2498F01AC((uint64_t)&v49, &qword_2578A0FA8);
    sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v14);
    v30 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v30) == 1)
    {
      swift_release();
      v29 = (uint64_t)v14;
      return sub_2498F01AC(v29, (uint64_t *)&unk_2578A2350);
    }
    sub_2498CAC78(a3, a4);
    sub_2498CAC78(a3, a4);
    v40 = sub_249955700();
    v41 = sub_249955A18();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v42 = 16777472;
      sub_2498CAC78(a3, a4);
      sub_2498E21BC(a3, a4);
      v44 = v43;
      sub_2498CACBC(a3, a4);
      sub_2498CACBC(a3, a4);
      if ((v44 & 0x100) != 0)
        v45 = 0;
      else
        v45 = v44;
      LOBYTE(v52) = v45;
      sub_249955AFC();
      sub_2498CACBC(a3, a4);
      _os_log_impl(&dword_2498C7000, v40, v41, "unexpected report ID: 0x%hhx", v42, 5u);
      MEMORY[0x24BCFB9B8](v42, -1, -1);
      swift_release();

    }
    else
    {
      sub_2498CACBC(a3, a4);
      swift_release();

      sub_2498CACBC(a3, a4);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v14, v30);
  }
  else
  {
    sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v16);
    v28 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v28) == 1)
    {
      v29 = (uint64_t)v16;
      return sub_2498F01AC(v29, (uint64_t *)&unk_2578A2350);
    }
    sub_2498E2300(a2, (uint64_t)v10);
    v31 = sub_249955700();
    v32 = sub_249955A18();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_QWORD *)&v49 = v48;
      *(_DWORD *)v33 = 136315138;
      v46 = v33 + 4;
      v47 = v33;
      sub_2499556B8();
      v34 = sub_2499026FC(8);
      v35 = MEMORY[0x24BCFAA7C](v34);
      v37 = v36;
      swift_bridgeObjectRelease();
      v52 = v35;
      v53 = v37;
      sub_2499558A4();
      v51 = *(_QWORD *)&v10[*(int *)(v8 + 20)];
      sub_2498F0128();
      sub_2499558C8();
      sub_2499558A4();
      swift_bridgeObjectRelease();
      v52 = sub_2498F7698(v52, v53, (uint64_t *)&v49);
      sub_249955AFC();
      swift_bridgeObjectRelease();
      sub_2498E2388((uint64_t)v10);
      v38 = v47;
      _os_log_impl(&dword_2498C7000, v31, v32, "%s: no virtual service; dropping events", v47, 0xCu);
      v39 = v48;
      swift_arrayDestroy();
      MEMORY[0x24BCFB9B8](v39, -1, -1);
      MEMORY[0x24BCFB9B8](v38, -1, -1);

    }
    else
    {

      sub_2498E2388((uint64_t)v10);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v16, v28);
  }
}

uint64_t sub_2498EDC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_12_7();
  v3 = (v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v4 = OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_10_7(v4);
  sub_2498CACBC(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8));
  return swift_deallocObject();
}

uint64_t sub_2498EDCD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_73() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_2498ED6FC(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_2498EDD14(uint64_t a1, unint64_t a2, uint8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  void (*v27)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v34 = a4;
  v35 = a5;
  v33 = a3;
  v37 = a6;
  v38 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_249955AD8();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - v13;
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = sub_249955778();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = v7;
  v21 = *(void **)(v7 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v22 = v21;
  LOBYTE(v21) = sub_249955784();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    v25 = v37;
    v24 = v38;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v27 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
    sub_2498CAC78(a1, a2);
    v27(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v14, v31);
    }
    else
    {
      v28 = v32;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v16, v14, AssociatedTypeWitness);
      sub_2498EEA88((uint64_t)v16, v33, v34, v35, v25, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, AssociatedTypeWitness);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498EDF40(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = OUTLINED_FUNCTION_33_0();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_2498EDF80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A2630;
  if (!qword_2578A2630)
  {
    v1 = sub_249955748();
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2578A2630);
  }
  return result;
}

unint64_t sub_2498EDFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A2640;
  if (!qword_2578A2640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A0F98);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2578A2640);
  }
  return result;
}

void HIDVirtualServicePool.sendReport<A>(_:from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  char *v37;

  OUTLINED_FUNCTION_18_0();
  v27 = v2;
  v28 = v3;
  v5 = v4;
  v26 = v6;
  v8 = v7;
  v31 = OUTLINED_FUNCTION_16_6();
  v9 = OUTLINED_FUNCTION_7_8(v31);
  MEMORY[0x24BDAC7A8](v9);
  v29 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24995576C();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_5_6();
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v16 = OUTLINED_FUNCTION_73();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2498E2300(v26, (uint64_t)v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v5);
  v20 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = (v18 + *(unsigned __int8 *)(v13 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (char *)swift_allocObject();
  v23 = v27;
  *((_QWORD *)v22 + 2) = v5;
  *((_QWORD *)v22 + 3) = v23;
  *((_QWORD *)v22 + 4) = v28;
  *((_QWORD *)v22 + 5) = v0;
  sub_2498E2344((uint64_t)v19, (uint64_t)&v22[v20]);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v21], (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v36 = sub_2498EE7D4;
  v37 = v22;
  v34 = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v24 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_19_7(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  OUTLINED_FUNCTION_18_7();
  v25 = v29;
  OUTLINED_FUNCTION_17_7();
  MEMORY[0x24BCFAC5C](0, v1, v25, v24);
  _Block_release(v24);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_11_8(v32);
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498EE234(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint8_t *v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v46 = a3;
  v47 = a6;
  v10 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v45 - v17;
  v19 = sub_2498F24C8(a2);
  if (v19)
  {
    v20 = v19;
    v21 = (uint64_t *)(v19 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
    swift_beginAccess();
    v22 = *v21;
    v23 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
    swift_bridgeObjectRetain();
    v24 = v23(a4, a5);
    sub_2498F03FC(v24, v22, (uint64_t)&v48);
    swift_bridgeObjectRelease();
    if (v49)
    {
      sub_2498CF9C0(&v48, (uint64_t)&v51);
      v25 = v53;
      v26 = v54;
      v27 = (uint8_t *)__swift_project_boxed_opaque_existential_1(&v51, v53);
      sub_2498EE840((uint64_t)v46, v27, a2, v20, v25, a4, v26);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    }
    sub_2498F01AC((uint64_t)&v48, &qword_2578A0FA8);
    sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v15);
    v31 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v31) == 1)
    {
      swift_release();
      v30 = (uint64_t)v15;
      return sub_2498F01AC(v30, (uint64_t *)&unk_2578A2350);
    }
    v41 = sub_249955700();
    v42 = sub_249955A18();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      LODWORD(v47) = v43;
      v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v44 = 16777472;
      v46 = v44 + 4;
      LOBYTE(v51) = v23(a4, a5);
      sub_249955AFC();
      _os_log_impl(&dword_2498C7000, v41, (os_log_type_t)v47, "unexpected report ID: 0x%hhx", v44, 5u);
      MEMORY[0x24BCFB9B8](v44, -1, -1);
    }
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v15, v31);
  }
  else
  {
    sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v18);
    v29 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v29) == 1)
    {
      v30 = (uint64_t)v18;
      return sub_2498F01AC(v30, (uint64_t *)&unk_2578A2350);
    }
    sub_2498E2300(a2, (uint64_t)v12);
    v32 = sub_249955700();
    v33 = sub_249955A18();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_QWORD *)&v48 = v47;
      *(_DWORD *)v34 = 136315138;
      v45 = v34 + 4;
      v46 = v34;
      sub_2499556B8();
      v35 = sub_2499026FC(8);
      v36 = MEMORY[0x24BCFAA7C](v35);
      v38 = v37;
      swift_bridgeObjectRelease();
      v51 = v36;
      v52 = v38;
      sub_2499558A4();
      v50 = *(_QWORD *)&v12[*(int *)(v10 + 20)];
      sub_2498F0128();
      sub_2499558C8();
      sub_2499558A4();
      swift_bridgeObjectRelease();
      v51 = sub_2498F7698(v51, v52, (uint64_t *)&v48);
      sub_249955AFC();
      swift_bridgeObjectRelease();
      sub_2498E2388((uint64_t)v12);
      v39 = v46;
      _os_log_impl(&dword_2498C7000, v32, v33, "%s: no virtual service; dropping events", v46, 0xCu);
      v40 = v47;
      swift_arrayDestroy();
      MEMORY[0x24BCFB9B8](v40, -1, -1);
      MEMORY[0x24BCFB9B8](v39, -1, -1);

    }
    else
    {

      sub_2498E2388((uint64_t)v12);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v18, v29);
  }
}

uint64_t sub_2498EE72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OUTLINED_FUNCTION_73();
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  v5 = OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_11_8(*(_QWORD *)(v5 - 8));
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

uint64_t sub_2498EE7D4()
{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 4);
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_73() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_2498EE234(*((_QWORD *)v0 + 5), (uint64_t)&v0[v5], &v0[(v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6], v1, v2, v3);
}

uint64_t sub_2498EE840(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a3;
  v36 = a4;
  v34 = a2;
  v40 = a1;
  v37 = a5;
  v38 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_249955AD8();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - v11;
  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v17);
  v30 = (char *)&v29 - v18;
  v19 = sub_249955778();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = v7;
  v24 = *(void **)(v7 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v20 + 104))(v23, *MEMORY[0x24BEE5610], v19, v21);
  v25 = v24;
  LOBYTE(v24) = sub_249955784();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 8))(v23, v19);
  if ((v24 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v40, a6);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      v28 = (uint64_t)v30;
      v27 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v12, AssociatedTypeWitness);
      sub_2498EEA88(v28, v34, v35, v36, v37, v38);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, AssociatedTypeWitness);
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v33);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498EEA88(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t result;
  uint64_t v30;
  void (*v31)(char *, uint8_t *, uint64_t);
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v7 = v6;
  v53 = a3;
  v61 = a1;
  v62 = a2;
  v52 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v52);
  v54 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v58 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v59 = AssociatedTypeWitness;
  v15 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17 = (char *)&v51 - v16;
  v18 = *(_QWORD *)(a5 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15);
  v55 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - v21;
  v23 = sub_249955778();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t *)((char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = v7;
  v27 = *(void **)(v7 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BEE5610], v23);
  v28 = v27;
  LOBYTE(v27) = sub_249955784();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v30 = *(_QWORD *)(a4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (!v30)
  {
    v34 = v60;
    sub_2498EFFC8(v57 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, v60);
    v35 = sub_249955718();
    if (__swift_getEnumTagSinglePayload(v34, 1, v35) == 1)
      return sub_2498F01AC(v34, (uint64_t *)&unk_2578A2350);
    v42 = v54;
    sub_2498E2300(v53, v54);
    v43 = sub_249955700();
    v44 = sub_249955A18();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v66 = v46;
      *(_DWORD *)v45 = 136315138;
      v62 = v45 + 4;
      sub_2499556B8();
      v47 = sub_2499026FC(8);
      v48 = MEMORY[0x24BCFAA7C](v47);
      v50 = v49;
      swift_bridgeObjectRelease();
      v64 = v48;
      v65 = v50;
      sub_2499558A4();
      v63 = *(_QWORD *)(v42 + *(int *)(v52 + 20));
      sub_2498F0128();
      sub_2499558C8();
      sub_2499558A4();
      swift_bridgeObjectRelease();
      v64 = sub_2498F7698(v64, v65, &v66);
      sub_249955AFC();
      v34 = v60;
      swift_bridgeObjectRelease();
      sub_2498E2388(v42);
      _os_log_impl(&dword_2498C7000, v43, v44, "%s: no active virtual service; dropping events", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BCFB9B8](v46, -1, -1);
      MEMORY[0x24BCFB9B8](v45, -1, -1);

    }
    else
    {

      sub_2498E2388(v42);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
  }
  v31 = *(void (**)(char *, uint8_t *, uint64_t))(v18 + 16);
  v32 = v62;
  v31(v22, v62, a5);
  type metadata accessor for ScrollGesture();
  swift_retain();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    v33 = v61;
    if (*(_BYTE *)(v30 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_shouldDispatchScrollEvents) != 1)
      return swift_release();
  }
  else
  {
    v33 = v61;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v17, v33, v59);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_19;
  v37 = v64;
  v36 = v65;
  v31(v55, v32, a5);
  type metadata accessor for KeyboardGesture(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_2498CACBC(v37, v36);
LABEL_19:
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 32))(v33, a5);
    goto LABEL_20;
  }
  v38 = v64;
  v39 = *(void **)(a4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  if (!v39)
  {
    swift_release();
    goto LABEL_18;
  }
  v40 = v39;
  v41 = sub_2498EF068(v37, v36, v40, v38, v30);
  sub_2498CACBC(v37, v36);

  swift_release();
LABEL_20:
  if (*(_QWORD *)(v41 + 16))
  {
    sub_24992BA08(v41, (void (*)(void **__return_ptr, _BYTE *))sub_2498EF2F4);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498EF068(unint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];
  unsigned __int8 v19;

  v17 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v8);
  v19 = 0;
  v9 = *(NSObject **)(a5 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_queue);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = &v19;
  *(_QWORD *)(v10 + 24) = a5;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_2498F020C;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_2498F0224;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2498EF368;
  aBlock[3] = &block_descriptor_24;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = KeyboardGesture.dispatch(keyboardReport:localCapsLockState:)(a1, a2, v19);
    v16 = v15 & 1;
    if (v19 != (_DWORD)v16)
      HIDVirtualService.setClientCapsLockEnaged(_:client:)(v16, v17);
    swift_release();
    return v14;
  }
  return result;
}

uint64_t sub_2498EF2F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 352))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_2498EF33C(BOOL *a1)
{
  uint64_t result;

  result = BKSHIDServicesIsCapsLockLightOn();
  *a1 = (_DWORD)result != 0;
  return result;
}

uint64_t sub_2498EF368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

unint64_t sub_2498EF388()
{
  return 0xD000000000000019;
}

void sub_2498EF3A4()
{
  HIDVirtualServicePool.sendReport(_:from:)();
}

Swift::Void __swiftcall HIDVirtualServicePool.resetGestureState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_18_0();
  v1 = OUTLINED_FUNCTION_16_6();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = OUTLINED_FUNCTION_1_13();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_5_6();
  v5 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_19_7(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_4_8();
  v6 = OUTLINED_FUNCTION_22_6();
  MEMORY[0x24BCFAC5C](v6);
  _Block_release(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  OUTLINED_FUNCTION_20_7(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_4_0();
}

void sub_2498EF4D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v4);
  v5 = sub_249955718();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_2498F01AC((uint64_t)v4, (uint64_t *)&unk_2578A2350);
  }
  else
  {
    v6 = sub_249955700();
    v7 = sub_249955A24();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_2498C7000, v6, v7, "Reset gestures for each service", v8, 2u);
      MEMORY[0x24BCFB9B8](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  swift_retain();
  sub_2498F2544();
}

void sub_2498EF61C()
{
  uint64_t v0;

  sub_2498EF4D4(v0);
}

void sub_2498EF624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  _QWORD v35[2];
  os_log_t v36;
  uint8_t *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_5_6();
  if (!v3)
    goto LABEL_34;
  sub_2498EFFC8(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, v1);
  v11 = sub_249955718();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v11);
  v39 = v3;
  if (EnumTagSinglePayload == 1)
  {
    swift_retain();
    sub_2498F01AC(v1, (uint64_t *)&unk_2578A2350);
  }
  else
  {
    sub_2498E2300(v5, (uint64_t)v9);
    swift_retain();
    v13 = sub_249955700();
    v14 = sub_249955A24();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc();
      LODWORD(v38) = v15;
      v17 = (uint8_t *)v16;
      v40 = swift_slowAlloc();
      *(_QWORD *)&v42 = v40;
      v36 = v13;
      v37 = v17;
      *(_DWORD *)v17 = 136446210;
      v35[1] = v17 + 12;
      v35[0] = v17 + 4;
      sub_2499556B8();
      v18 = sub_2499026FC(8);
      v19 = MEMORY[0x24BCFAA7C](v18);
      v21 = v20;
      swift_bridgeObjectRelease();
      v45 = v19;
      *(_QWORD *)&v46 = v21;
      sub_2499558A4();
      v41 = *(_QWORD *)&v9[*(int *)(v6 + 20)];
      sub_2498F0128();
      sub_2499558C8();
      sub_2499558A4();
      swift_bridgeObjectRelease();
      v45 = sub_2498F7698(v45, v46, (uint64_t *)&v42);
      sub_249955AFC();
      swift_bridgeObjectRelease();
      sub_2498E2388((uint64_t)v9);
      _os_log_impl(&dword_2498C7000, v36, (os_log_type_t)v38, "%{public}s: Reset Gestures", v37, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_23_7();
    }

    sub_2498E2388((uint64_t)v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v1, v11);
  }
  v22 = *(_QWORD *)(v3 + 16);
  v23 = *(_QWORD *)(v22 + 64);
  v40 = v22 + 64;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v27 = (unint64_t)(v24 + 63) >> 6;
  v38 = v27 - 1;
  swift_bridgeObjectRetain();
  v28 = 0;
  if (!v26)
    goto LABEL_12;
LABEL_10:
  v29 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  v30 = v29 | (v28 << 6);
  while (2)
  {
    v31 = *(_QWORD *)(v22 + 56);
    LOBYTE(v42) = *(_BYTE *)(*(_QWORD *)(v22 + 48) + v30);
    sub_2498CF8CC(v31 + 40 * v30, (uint64_t)&v42 + 8);
    while (1)
    {
      sub_2498F0164((uint64_t)&v42, (uint64_t)&v45);
      if (!v47)
      {
        swift_release();
        swift_release();
LABEL_34:
        OUTLINED_FUNCTION_4_0();
        return;
      }
      sub_2498CF9C0(&v46, (uint64_t)&v42);
      __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
      sub_2498F0010();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
      if (v26)
        goto LABEL_10;
LABEL_12:
      v32 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      if (v32 < v27)
      {
        v33 = *(_QWORD *)(v40 + 8 * v32);
        if (v33)
          goto LABEL_15;
        v34 = v28 + 2;
        ++v28;
        if (v32 + 1 < v27)
        {
          v33 = *(_QWORD *)(v40 + 8 * v34);
          if (v33)
            goto LABEL_18;
          v28 = v32 + 1;
          if (v32 + 2 < v27)
          {
            v33 = *(_QWORD *)(v40 + 8 * (v32 + 2));
            if (v33)
            {
              v32 += 2;
              goto LABEL_15;
            }
            v34 = v32 + 3;
            v28 = v32 + 2;
            if (v32 + 3 < v27)
              break;
          }
        }
      }
LABEL_29:
      v26 = 0;
      v43 = 0u;
      v44 = 0u;
      v42 = 0u;
    }
    v33 = *(_QWORD *)(v40 + 8 * v34);
    if (v33)
    {
LABEL_18:
      v32 = v34;
LABEL_15:
      v26 = (v33 - 1) & v33;
      v30 = __clz(__rbit64(v33)) + (v32 << 6);
      v28 = v32;
      continue;
    }
    break;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v27)
    {
      v28 = v38;
      goto LABEL_29;
    }
    v33 = *(_QWORD *)(v40 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_15;
  }
LABEL_36:
  __break(1u);
}

void HIDVirtualServicePool.resetGestureState(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v14[10];

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_16_6();
  v4 = OUTLINED_FUNCTION_7_8(v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_1_13();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = OUTLINED_FUNCTION_73();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v14[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2498E2300(v2, (uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v0;
  sub_2498E2344((uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  v14[8] = sub_2498EFF9C;
  v14[9] = v11;
  v14[4] = MEMORY[0x24BDAC760];
  v14[5] = 1107296256;
  v12 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_19_7(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_4_8();
  v13 = OUTLINED_FUNCTION_22_6();
  MEMORY[0x24BCFAC5C](v13);
  _Block_release(v12);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_20_7(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498EFC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2498F24C8(a2))
  {
    swift_retain();
    sub_2498EF624();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v9);
    v11 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11) == 1)
    {
      return sub_2498F01AC((uint64_t)v9, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      sub_2498E2300(a2, (uint64_t)v6);
      v12 = sub_249955700();
      v13 = sub_249955A18();
      v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        v23 = v14;
        v15 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v27 = v22;
        *(_DWORD *)v15 = 136446210;
        v21[1] = v15 + 4;
        sub_2499556B8();
        v16 = sub_2499026FC(8);
        v17 = MEMORY[0x24BCFAA7C](v16);
        v19 = v18;
        swift_bridgeObjectRelease();
        v25 = v17;
        v26 = v19;
        sub_2499558A4();
        v24 = *(_QWORD *)&v6[*(int *)(v4 + 20)];
        sub_2498F0128();
        sub_2499558C8();
        sub_2499558A4();
        swift_bridgeObjectRelease();
        v25 = sub_2498F7698(v25, v26, &v27);
        sub_249955AFC();
        swift_bridgeObjectRelease();
        sub_2498E2388((uint64_t)v6);
        _os_log_impl(&dword_2498C7000, v12, (os_log_type_t)v23, "%{public}s: Failed to reset gestures", v15, 0xCu);
        v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x24BCFB9B8](v20, -1, -1);
        MEMORY[0x24BCFB9B8](v15, -1, -1);

      }
      else
      {

        sub_2498E2388((uint64_t)v6);
      }
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    }
  }
}

uint64_t sub_2498EFF4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_12_7();
  swift_release();
  v0 = OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_10_7(v0);
  return swift_deallocObject();
}

uint64_t sub_2498EFF9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_73() - 8) + 80);
  return sub_2498EFC24(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_2498EFFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498F0010()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v6 - v2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_getAssociatedConformanceWitness();
  HIDVirtualServicePool.sendReport<A>(_:from:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

unint64_t sub_2498F0128()
{
  unint64_t result;

  result = qword_2578A2400;
  if (!qword_2578A2400)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2578A2400);
  }
  return result;
}

uint64_t sub_2498F0164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498F01AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2498F01E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2498F020C()
{
  uint64_t v0;

  return sub_2498EF33C(*(BOOL **)(v0 + 16));
}

uint64_t sub_2498F0214()
{
  return swift_deallocObject();
}

uint64_t sub_2498F0224()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_2498F0244()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  return sub_24995576C();
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_249955BF8();
}

void *OUTLINED_FUNCTION_6_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_7_8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_10_7(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_11_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return sub_249955754();
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return sub_249955748();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return sub_249955BF8();
}

unint64_t OUTLINED_FUNCTION_18_7()
{
  return sub_2498EDFC0();
}

unint64_t OUTLINED_FUNCTION_19_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return sub_2498EDF80();
}

uint64_t OUTLINED_FUNCTION_20_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return sub_2499556F4();
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return 0;
}

void OUTLINED_FUNCTION_23_7()
{
  JUMPOUT(0x24BCFB9B8);
}

uint64_t sub_2498F03B8(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_2498DF9F0(a1), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v3);
  else
    return 0;
}

double sub_2498F03FC@<D0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_2498DF9F0(a1), (v6 & 1) != 0))
  {
    sub_2498CF8CC(*(_QWORD *)(a2 + 56) + 40 * v5, a3);
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_2498F0454@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_2498DFACC(a1, a2), (v7 & 1) != 0))
  {
    sub_2498F23FC(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_2498F04A4(unsigned int a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_2498DFBB0(a1), (v2 & 1) != 0))
    return swift_retain();
  else
    return 0;
}

void HIDReportDescriptor.reportBitCount(for:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  *(_BYTE *)(swift_allocObject() + 16) = 0;
  v3 = OUTLINED_FUNCTION_10_8();
  sub_2498F2308();
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_9_7();
  v4 = OUTLINED_FUNCTION_10_8();
  *(_QWORD *)(v4 + 16) = OUTLINED_FUNCTION_9_7();
  sub_2498CAC78(v1, v2);
  OUTLINED_FUNCTION_3_10();
  __asm { BR              X8 }
}

uint64_t sub_2498F0AB0(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_2498F0AD4 + 4 * byte_249958080[a2 >> 62]))();
}

BOOL sub_2498F0AD4(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

uint64_t sub_2498F0AFC(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_2498F0B0C + *((int *)qword_2498F0B80 + (a2 >> 62))))();
}

BOOL sub_2498F0B20(uint64_t a1, uint64_t a2)
{
  if (((unint64_t)BYTE6(a2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2498F0B7CLL);
  }
  return 8 * BYTE6(a2) == 0;
}

uint64_t HIDReportDescriptor.Iterator.data.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_28_1(*v0);
  return v1;
}

uint64_t HIDReportDescriptor.Iterator.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*HIDReportDescriptor.Iterator.data.modify())()
{
  return nullsub_1;
}

void HIDReportDescriptor.Iterator.next()()
{
  __asm { BR              X10 }
}

void sub_2498F0C40()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;

  if ((v3 & 0xFF000000000000) != 0)
  {
    OUTLINED_FUNCTION_14_7();
    sub_2498F0D0C(v2, v3);
    v5 = v4;
    v7 = v6;
    OUTLINED_FUNCTION_14_7();
    sub_2498CAC78(v5, v7);
    v8 = sub_249955670();
    sub_2498CACBC(v5, v7);
    sub_2498F0F1C(v8, v2, v3);
    OUTLINED_FUNCTION_27_4(v2);
    *v1 = v9;
    *(_QWORD *)(v0 + 24) = &unk_251AC8AA8;
    *(_QWORD *)(v0 + 32) = &off_251AC8AC8;
    *(_QWORD *)v0 = v5;
    *(_QWORD *)(v0 + 8) = v7;
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    *(_OWORD *)v0 = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
}

void sub_2498F0D0C(uint64_t a1, unint64_t a2)
{
  if ((sub_2498F0AB0(a1, a2) & 1) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x2498F0ECCLL);
}

void sub_2498F0F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x2498F1058);
}

uint64_t HIDReportDescriptor.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2498CAC78(v2, v3);
}

uint64_t sub_2498F1098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  HIDReportDescriptor.makeIterator()(a1);
  return sub_2498CACBC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

void sub_2498F10B0()
{
  sub_249918790();
}

uint64_t sub_2498F10B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_249920094(a1, a2, a3, *v3, v3[1]);
}

void sub_2498F10C0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 40))();
  __asm { BR              X10 }
}

uint64_t sub_2498F1120(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  OUTLINED_FUNCTION_15_9(a1, a2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
  v6 = v5 + 1;
  if (__OFADD__(1, v5))
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v4(v3, v2);
  if (v6 < 1)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x2498F1454);
  }
  v9 = v7;
  v10 = v8;
  v11 = sub_249955610();
  v13 = v12;
  sub_2498CACBC(v9, v10);
  OUTLINED_FUNCTION_1_14();
  sub_2498F1494(v11, v13);
  LOWORD(v9) = v14;
  OUTLINED_FUNCTION_27_4(v11);
  if ((v9 & 0x100) == 0)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_27_4(v11);
  return 0;
}

void sub_2498F1494(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_2498F1668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v6;
  unsigned __int8 *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;

  v6 = (_QWORD **)(a1 + 16);
  v7 = (unsigned __int8 *)(a2 + 16);
  swift_beginAccess();
  v8 = *(_BYTE *)(a2 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  v10 = sub_2498DF9F0(v8);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC0);
  if ((sub_249955D3C() & 1) != 0)
  {
    v14 = sub_2498DF9F0(v8);
    if ((v13 & 1) != (v15 & 1))
      goto LABEL_20;
    v12 = v14;
  }
  *v6 = v9;
  swift_bridgeObjectRelease();
  v16 = (uint64_t)*v6;
  if ((v13 & 1) == 0)
    sub_2498E1480(v12, v8, 0, 0, *v6);
  v17 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v12);
  v19 = *v17;
  v18 = v17[1];
  v20 = v19 * v18;
  if ((unsigned __int128)(v19 * (__int128)v18) >> 64 != (v19 * v18) >> 63)
    goto LABEL_17;
  v21 = (uint64_t *)(a3 + 16);
  swift_endAccess();
  swift_beginAccess();
  v22 = *v7;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v23 = *v21;
  v36 = *v21;
  *v21 = 0x8000000000000000;
  v24 = sub_2498DF9F0(v22);
  if (__OFADD__(*(_QWORD *)(v23 + 16), (v25 & 1) == 0))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v26 = v24;
  v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC8);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_12;
  v28 = sub_2498DF9F0(v22);
  if ((v27 & 1) == (v29 & 1))
  {
    v26 = v28;
LABEL_12:
    *v21 = v36;
    swift_bridgeObjectRelease();
    v30 = *v21;
    if ((v27 & 1) == 0)
      sub_2498E1450(v26, v22, 0, *v21);
    v31 = *(_QWORD *)(v30 + 56);
    v32 = *(_QWORD *)(v31 + 8 * v26);
    v33 = __OFADD__(v32, v20);
    v34 = v32 + v20;
    if (!v33)
    {
      *(_QWORD *)(v31 + 8 * v26) = v34;
      return swift_endAccess();
    }
    goto LABEL_19;
  }
LABEL_20:
  result = sub_249955F64();
  __break(1u);
  return result;
}

uint64_t sub_2498F18D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v6;
  unsigned __int8 *v7;
  char v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;

  v6 = (_QWORD **)(a1 + 16);
  v7 = (unsigned __int8 *)(a2 + 16);
  swift_beginAccess();
  v8 = *(_BYTE *)(a2 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  v10 = sub_2498DF9F0(v8);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC0);
  if ((sub_249955D3C() & 1) != 0)
  {
    v14 = sub_2498DF9F0(v8);
    if ((v13 & 1) != (v15 & 1))
      goto LABEL_18;
    v12 = v14;
  }
  v16 = (uint64_t *)(a3 + 16);
  *v6 = v9;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    sub_2498E1480(v12, v8, 0, 0, *v6);
  swift_endAccess();
  swift_beginAccess();
  v17 = *v7;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v18 = *v16;
  v31 = *v16;
  *v16 = 0x8000000000000000;
  v19 = sub_2498DF9F0(v17);
  if (__OFADD__(*(_QWORD *)(v18 + 16), (v20 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = v19;
  v22 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC8);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_11;
  v23 = sub_2498DF9F0(v17);
  if ((v22 & 1) == (v24 & 1))
  {
    v21 = v23;
LABEL_11:
    *v16 = v31;
    swift_bridgeObjectRelease();
    v25 = *v16;
    if ((v22 & 1) == 0)
      sub_2498E1450(v21, v17, 0, *v16);
    v26 = *(_QWORD *)(v25 + 56);
    v27 = *(_QWORD *)(v26 + 8 * v21);
    v28 = __OFADD__(v27, 8);
    v29 = v27 + 8;
    if (!v28)
    {
      *(_QWORD *)(v26 + 8 * v21) = v29;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  result = sub_249955F64();
  __break(1u);
  return result;
}

uint64_t sub_2498F1B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t, uint64_t))
{
  _QWORD **v9;
  unsigned __int8 *v10;
  char v11;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v37;

  v9 = (_QWORD **)(a1 + 16);
  v10 = (unsigned __int8 *)(a2 + 16);
  OUTLINED_FUNCTION_3_10();
  v11 = *(_BYTE *)(a2 + 16);
  OUTLINED_FUNCTION_3_10();
  swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  v13 = sub_2498DF9F0(v11);
  if (__OFADD__(v12[2], (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  v15 = v13;
  v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC0);
  if ((sub_249955D3C() & 1) != 0)
  {
    v17 = sub_2498DF9F0(v11);
    if ((v16 & 1) != (v18 & 1))
      goto LABEL_18;
    v15 = v17;
  }
  v19 = (uint64_t *)(a3 + 16);
  *v9 = v12;
  swift_bridgeObjectRelease();
  v20 = (uint64_t)*v9;
  if ((v16 & 1) == 0)
    sub_2498E1480(v15, v11, 0, 0, *v9);
  v21 = a5(*(_QWORD *)(v20 + 56) + 16 * v15, a4);
  swift_endAccess();
  OUTLINED_FUNCTION_3_10();
  v22 = *v10;
  OUTLINED_FUNCTION_3_10();
  swift_isUniquelyReferenced_nonNull_native();
  v23 = *v19;
  v37 = *v19;
  *v19 = 0x8000000000000000;
  v24 = sub_2498DF9F0(v22);
  if (__OFADD__(*(_QWORD *)(v23 + 16), (v25 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = v24;
  v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC8);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_11;
  v28 = sub_2498DF9F0(v22);
  if ((v27 & 1) == (v29 & 1))
  {
    v26 = v28;
LABEL_11:
    *v19 = v37;
    swift_bridgeObjectRelease();
    v30 = *v19;
    if ((v27 & 1) == 0)
      sub_2498E1450(v26, v22, 0, *v19);
    v31 = *(_QWORD *)(v30 + 56);
    v32 = *(_QWORD *)(v31 + 8 * v26);
    v33 = __OFADD__(v32, v21);
    v34 = v32 + v21;
    if (!v33)
    {
      *(_QWORD *)(v31 + 8 * v26) = v34;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  result = sub_249955F64();
  __break(1u);
  return result;
}

uint64_t sub_2498F1D78(uint64_t (*a1)(unint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD **v8;
  unsigned __int8 *v9;
  char v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v36;

  v8 = (_QWORD **)(a3 + 16);
  v9 = (unsigned __int8 *)(a4 + 16);
  swift_beginAccess();
  v10 = *(_BYTE *)(a4 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v11 = *(_QWORD **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = 0x8000000000000000;
  v12 = sub_2498DF9F0(v10);
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC0);
  if ((sub_249955D3C() & 1) != 0)
  {
    v16 = sub_2498DF9F0(v10);
    if ((v15 & 1) != (v17 & 1))
      goto LABEL_18;
    v14 = v16;
  }
  v18 = (uint64_t *)(a5 + 16);
  *v8 = v11;
  swift_bridgeObjectRelease();
  v19 = (uint64_t)*v8;
  if ((v15 & 1) == 0)
    sub_2498E1480(v14, v10, 0, 0, *v8);
  v20 = a1(*(_QWORD *)(v19 + 56) + 16 * v14);
  swift_endAccess();
  swift_beginAccess();
  v21 = *v9;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v22 = *v18;
  v36 = *v18;
  *v18 = 0x8000000000000000;
  v23 = sub_2498DF9F0(v21);
  if (__OFADD__(*(_QWORD *)(v22 + 16), (v24 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v25 = v23;
  v26 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FC8);
  if ((sub_249955D3C() & 1) == 0)
    goto LABEL_11;
  v27 = sub_2498DF9F0(v21);
  if ((v26 & 1) == (v28 & 1))
  {
    v25 = v27;
LABEL_11:
    *v18 = v36;
    swift_bridgeObjectRelease();
    v29 = *v18;
    if ((v26 & 1) == 0)
      sub_2498E1450(v25, v21, 0, *v18);
    v30 = *(_QWORD *)(v29 + 56);
    v31 = *(_QWORD *)(v30 + 8 * v25);
    v32 = __OFADD__(v31, v20);
    v33 = v31 + v20;
    if (!v32)
    {
      *(_QWORD *)(v30 + 8 * v25) = v33;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  result = sub_249955F64();
  __break(1u);
  return result;
}

uint64_t sub_2498F1FE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  sub_2498F10C0(v3, v4);
  *(_QWORD *)(a1 + 8) = v5;
  return 0;
}

uint64_t sub_2498F2034(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  sub_2498F10C0(v3, v4);
  *a1 = v5;
  return 0;
}

uint64_t sub_2498F2084(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  sub_2498CF614();
  v5 = *(_QWORD *)(*a2 + 16);
  sub_2498CF674(v5);
  v6 = *a2;
  *(_QWORD *)(v6 + 16) = v5 + 1;
  v7 = v6 + 16 * v5;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v4;
  *a2 = v6;
  return 0;
}

uint64_t sub_2498F20DC(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v2)
    v3 = *(_OWORD *)(*(_QWORD *)a2 + 16 * v2 + 16);
  else
    v3 = 0uLL;
  *a1 = v3;
  return 0;
}

uint64_t sub_2498F2104(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x2498F2160);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_2498F211C + dword_2498F2164[a4 >> 62]))(v5);
}

uint64_t sub_2498F2174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;

  v9 = sub_2498F21F8(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_2498F2104(a1, a2, a4, a5);
}

uint64_t sub_2498F21F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_2498F220C + dword_2498F22B4[a4 >> 62]))();
}

uint64_t sub_2498F2228(uint64_t a1)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;

  if (v1 >= a1)
  {
    v5 = __OFSUB__(0, a1);
    v3 = a1 == 0;
    v4 = -a1 < 0;
  }
  else
  {
    v5 = 0;
    v3 = 0;
    v4 = 0;
  }
  if (!(v4 ^ v5 | v3))
  {
    __break(1u);
    JUMPOUT(0x2498F22ACLL);
  }
  return ((uint64_t (*)(void))((char *)&loc_2498F2260 + dword_2498F22C4[v2]))();
}

uint64_t sub_2498F22D4()
{
  return swift_deallocObject();
}

uint64_t sub_2498F22E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2498F2308()
{
  unint64_t result;

  result = qword_2578A0FB0;
  if (!qword_2578A0FB0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ReportID, &type metadata for ReportID);
    atomic_store(result, (unint64_t *)&qword_2578A0FB0);
  }
  return result;
}

uint64_t sub_2498F2344(_QWORD *a1)
{
  uint64_t v1;

  return sub_2498F2034(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_2498F234C(uint64_t a1)
{
  uint64_t v1;

  return sub_2498F1FE4(a1, *(_QWORD **)(v1 + 16));
}

unint64_t sub_2498F2358()
{
  unint64_t result;

  result = qword_2578A0FB8;
  if (!qword_2578A0FB8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReportDescriptor.Iterator, &type metadata for HIDReportDescriptor.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A0FB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDReportDescriptor.Iterator()
{
  return &type metadata for HIDReportDescriptor.Iterator;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_2498F23FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return sub_2499557C0();
}

uint64_t OUTLINED_FUNCTION_10_8()
{
  return swift_allocObject();
}

_QWORD *OUTLINED_FUNCTION_12_8()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 200), v0);
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_15_9(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2498CACBC(v2, a2);
}

uint64_t sub_2498F24C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  OUTLINED_FUNCTION_3_10();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_2498DFA3C(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  return v7;
}

void sub_2498F2544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_18_0();
  v2 = v1;
  v33 = *(_QWORD *)(OUTLINED_FUNCTION_73() - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_16_0();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FE8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_17_8();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - v9;
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  OUTLINED_FUNCTION_6_12();
  v12 = *v11;
  v31 = v12 + 64;
  OUTLINED_FUNCTION_16_7();
  v15 = v14 & v13;
  v32 = (unint64_t)(v16 + 63) >> 6;
  v30 = v32 - 1;
  swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_4;
LABEL_2:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v19 = v18 | (v17 << 6);
  while (2)
  {
    sub_2498E2300(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v33 + 72) * v19, v0);
    v20 = *(_QWORD *)(v12 + 56);
    v21 = OUTLINED_FUNCTION_27_6();
    *(_QWORD *)(v0 + *(int *)(v21 + 48)) = *(_QWORD *)(v20 + 8 * v19);
    OUTLINED_FUNCTION_26_4(v21, v22, v23, v21);
    swift_retain();
    while (1)
    {
      sub_2498F9D70(v0, (uint64_t)v10, &qword_2578A0FE8);
      v28 = OUTLINED_FUNCTION_27_6();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v28) == 1)
      {
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_4_0();
        return;
      }
      sub_2498E2344((uint64_t)v10, v6);
      OUTLINED_FUNCTION_48_1();
      sub_2498EF624();
      OUTLINED_FUNCTION_36_2();
      swift_release();
      sub_2498E2388(v6);
      if (v15)
        goto LABEL_2;
LABEL_4:
      v24 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v24 < v32)
      {
        v25 = *(_QWORD *)(v31 + 8 * v24);
        if (v25)
          goto LABEL_7;
        v26 = v17 + 2;
        ++v17;
        if (v24 + 1 < v32)
        {
          v25 = *(_QWORD *)(v31 + 8 * v26);
          if (v25)
            goto LABEL_10;
          v17 = v24 + 1;
          if (v24 + 2 < v32)
          {
            v25 = *(_QWORD *)(v31 + 8 * (v24 + 2));
            if (v25)
            {
              v24 += 2;
              goto LABEL_7;
            }
            v26 = v24 + 3;
            v17 = v24 + 2;
            if (v24 + 3 < v32)
              break;
          }
        }
      }
LABEL_21:
      v27 = OUTLINED_FUNCTION_27_6();
      OUTLINED_FUNCTION_14_8(v27);
      v15 = 0;
    }
    v25 = *(_QWORD *)(v31 + 8 * v26);
    if (v25)
    {
LABEL_10:
      v24 = v26;
LABEL_7:
      v15 = (v25 - 1) & v25;
      v19 = __clz(__rbit64(v25)) + (v24 << 6);
      v17 = v24;
      continue;
    }
    break;
  }
  while (1)
  {
    v24 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v24 >= v32)
    {
      v17 = v30;
      goto LABEL_21;
    }
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v26;
    if (v25)
      goto LABEL_7;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_2498F2804(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_249955FB8();
    sub_249955FC4();
    result = sub_249956000();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == v16)
      goto LABEL_7;
  }
}

uint64_t HIDVirtualServicePool.__allocating_init(logger:queue:workloop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  HIDVirtualServicePool.init(logger:queue:workloop:)(a1, a2, a3);
  return v6;
}

uint64_t HIDVirtualServicePool.init(logger:queue:workloop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices;
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_46_1();
  sub_2498F98AC(&qword_2578A0E30, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
  *(_QWORD *)(v3 + v7) = sub_2499557C0();
  v8 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FE0);
  v9 = OUTLINED_FUNCTION_17_3();
  *(_DWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 16) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + v8) = v9;
  v10 = (_QWORD *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  *v10 = nullsub_1;
  v10[1] = 0;
  sub_2498F9D70(a1, v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t *)&unk_2578A2350);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue) = a2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_workloop) = a3;
  return v3;
}

uint64_t type metadata accessor for HIDVirtualServicePool.VirtualService(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A1118);
}

uint64_t sub_2498F2B70(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v8 = *(_QWORD *)(v4 + *a1);
  OUTLINED_FUNCTION_3_10();
  v11[3] = a2(0);
  v11[4] = a3;
  v11[0] = v8;
  swift_retain();
  sub_24992B8F0((uint64_t)v11, a4, v9);
  return swift_endAccess();
}

uint64_t sub_2498F2BFC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + *a2) = a1;
  swift_retain();
  OUTLINED_FUNCTION_38_1();
  sub_2498F2B70(a2, a3, a4, a5);
  return swift_release();
}

void sub_2498F2C6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char v70[16];

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v64 = v2;
  v4 = v3;
  v68 = v5;
  v69 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_16_0();
  v61 = v9 - v8;
  v66 = sub_249955A3C();
  v62 = *(_QWORD *)(v66 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_16_0();
  v13 = v12 - v11;
  sub_249955A30();
  v14 = (void (*)(uint64_t))MEMORY[0x24BEE5688];
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_16_0();
  sub_24995576C();
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_16_0();
  v17 = (_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service) = 0;
  v18 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
  *v18 = nullsub_1;
  v18[1] = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) = 0;
  sub_2498E2300(v6, v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id);
  sub_2498EFFC8(v4, v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger);
  sub_2498F9DE8(0, &qword_2578A1230);
  sub_249955760();
  *(_QWORD *)v70 = MEMORY[0x24BEE4AF8];
  sub_2498F98AC(&qword_2578A1238, v14);
  OUTLINED_FUNCTION_27_6();
  sub_2498F98E0(&qword_2578A1248, &qword_2578A1240);
  sub_249955BF8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 104))(v13, *MEMORY[0x24BEE5758], v66);
  v67 = v64;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_queue) = sub_249955A60();
  v70[0] = 0;
  v19 = type metadata accessor for DigitizerGesture();
  OUTLINED_FUNCTION_17_3();
  v20 = DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(v70, 1, 1);
  v21 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture) = v20;
  v65 = type metadata accessor for ScrollGesture();
  ScrollGesture.__allocating_init(useRemoteAcceleration:dispatchScrollEvents:)(1, 0);
  v63 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture) = v22;
  OUTLINED_FUNCTION_30_2(v69);
  v23 = type metadata accessor for PointerGesture();
  OUTLINED_FUNCTION_15_10();
  v24 = PointerGesture.init(logger:useRemoteAcceleration:)(v61, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1250);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499579B0;
  *(_BYTE *)(inited + 32) = 19;
  OUTLINED_FUNCTION_30_2(v69);
  v26 = type metadata accessor for AbsolutePointerGesture();
  OUTLINED_FUNCTION_15_10();
  v27 = AbsolutePointerGesture.init(logger:pointerGesture:)(v61, v24);
  *(_QWORD *)(inited + 64) = v26;
  *(_QWORD *)(inited + 72) = &protocol witness table for AbsolutePointerGesture;
  *(_QWORD *)(inited + 40) = v27;
  *(_BYTE *)(inited + 80) = 4;
  v28 = type metadata accessor for AppleVendorTopCaseGesture(0);
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_48_1();
  _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0();
  v30 = v29;
  *(_QWORD *)(inited + 112) = v28;
  *(_QWORD *)(inited + 120) = sub_2498F9914();
  *(_QWORD *)(inited + 88) = v30;
  *(_BYTE *)(inited + 128) = 3;
  v31 = type metadata accessor for AppleVendorKeyboardGesture(0);
  OUTLINED_FUNCTION_17_3();
  _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0();
  v33 = v32;
  *(_QWORD *)(inited + 160) = v31;
  *(_QWORD *)(inited + 168) = sub_2498F9A1C();
  *(_QWORD *)(inited + 136) = v33;
  *(_BYTE *)(inited + 176) = 2;
  v34 = type metadata accessor for ConsumerGesture(0);
  OUTLINED_FUNCTION_17_3();
  _s12UniversalHID15ConsumerGestureCACycfc_0();
  v36 = v35;
  *(_QWORD *)(inited + 208) = v34;
  *(_QWORD *)(inited + 216) = sub_2498F9B24();
  *(_QWORD *)(inited + 184) = v36;
  *(_BYTE *)(inited + 224) = 9;
  v37 = *(_QWORD *)(v1 + v21);
  *(_QWORD *)(inited + 256) = v19;
  *(_QWORD *)(inited + 264) = &protocol witness table for DigitizerGesture;
  *(_QWORD *)(inited + 232) = v37;
  *(_BYTE *)(inited + 272) = 18;
  v38 = type metadata accessor for GameControllerGesture();
  v39 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(inited + 304) = v38;
  *(_QWORD *)(inited + 312) = &protocol witness table for GameControllerGesture;
  *(_QWORD *)(inited + 280) = v39;
  *(_BYTE *)(inited + 320) = 20;
  v40 = type metadata accessor for GenericGestureGesture();
  v41 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(inited + 352) = v40;
  *(_QWORD *)(inited + 360) = &protocol witness table for GenericGestureGesture;
  *(_QWORD *)(inited + 328) = v41;
  *(_BYTE *)(inited + 368) = 1;
  v42 = type metadata accessor for KeyboardGesture(0);
  OUTLINED_FUNCTION_30_2(v69);
  OUTLINED_FUNCTION_33_0();
  KeyboardGesture.__allocating_init(logger:)(v61);
  v44 = v43;
  *(_QWORD *)(inited + 400) = v42;
  *(_QWORD *)(inited + 408) = sub_2498F9C68();
  *(_QWORD *)(inited + 376) = v44;
  *(_BYTE *)(inited + 416) = 5;
  *(_QWORD *)(inited + 448) = v23;
  *(_QWORD *)(inited + 456) = &protocol witness table for PointerGesture;
  *(_QWORD *)(inited + 424) = v24;
  *(_BYTE *)(inited + 464) = 7;
  v45 = *(_QWORD *)(v1 + v63);
  *(_QWORD *)(inited + 496) = v65;
  *(_QWORD *)(inited + 504) = &protocol witness table for ScrollGesture;
  *(_QWORD *)(inited + 472) = v45;
  *(_BYTE *)(inited + 512) = 11;
  v46 = type metadata accessor for DockSwipeGesture();
  v47 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v47 + 16) = 0;
  *(_QWORD *)(inited + 544) = v46;
  *(_QWORD *)(inited + 552) = &protocol witness table for DockSwipeGesture;
  *(_QWORD *)(inited + 520) = v47;
  *(_BYTE *)(inited + 560) = 13;
  v48 = type metadata accessor for NavigationSwipeGesture();
  v49 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v49 + 16) = 0;
  *(_QWORD *)(inited + 592) = v48;
  *(_QWORD *)(inited + 600) = &protocol witness table for NavigationSwipeGesture;
  *(_QWORD *)(inited + 568) = v49;
  *(_BYTE *)(inited + 608) = 17;
  v50 = type metadata accessor for TranslationGesture();
  v51 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v51 + 16) = 0;
  *(_QWORD *)(inited + 640) = v50;
  *(_QWORD *)(inited + 648) = &protocol witness table for TranslationGesture;
  *(_QWORD *)(inited + 616) = v51;
  *(_BYTE *)(inited + 656) = 12;
  v52 = type metadata accessor for FluidTouchGesture();
  v53 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v53 + 16) = 0;
  *(_QWORD *)(inited + 688) = v52;
  *(_QWORD *)(inited + 696) = &protocol witness table for FluidTouchGesture;
  *(_QWORD *)(inited + 664) = v53;
  *(_BYTE *)(inited + 704) = 15;
  v54 = type metadata accessor for ScaleGesture();
  v55 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v55 + 16) = 0;
  *(_QWORD *)(inited + 736) = v54;
  *(_QWORD *)(inited + 744) = &protocol witness table for ScaleGesture;
  *(_QWORD *)(inited + 712) = v55;
  *(_BYTE *)(inited + 752) = 16;
  v56 = type metadata accessor for RotationGesture();
  v57 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v57 + 16) = 0;
  *(_QWORD *)(inited + 784) = v56;
  *(_QWORD *)(inited + 792) = &protocol witness table for RotationGesture;
  *(_QWORD *)(inited + 760) = v57;
  *(_BYTE *)(inited + 800) = 14;
  v58 = type metadata accessor for ZoomToggleGesture();
  v59 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(inited + 832) = v58;
  *(_QWORD *)(inited + 840) = &protocol witness table for ZoomToggleGesture;
  *(_QWORD *)(inited + 808) = v59;
  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A23E0);
  sub_2498F2308();
  v60 = sub_2499557C0();
  swift_release();

  sub_2498F9DB0(v69, (uint64_t *)&unk_2578A2350);
  sub_2498E2388(v68);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures) = v60;
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498F3394()
{
  uint64_t v0;

  sub_2498E2388(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id);
  sub_2498F9DB0(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_25_6(OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_queue);

  OUTLINED_FUNCTION_25_6(OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_24_7();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_40_1();
  return v0;
}

uint64_t sub_2498F343C()
{
  return sub_2498F7674((void (*)(void))sub_2498F3394);
}

uint64_t sub_2498F344C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[3];
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_249955748();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_24995576C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  result = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (v14)
  {
    v35 = v6;
    *(_QWORD *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service) = 0;
    sub_2498EFFC8(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v13);
    v15 = sub_249955718();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
    v34 = v7;
    if (EnumTagSinglePayload == 1)
    {
      sub_2498F9DB0((uint64_t)v13, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
      v17 = sub_249955700();
      v18 = sub_249955A24();
      v33 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v32 = v3;
        v20 = v19;
        v31 = swift_slowAlloc();
        aBlock[0] = v31;
        *(_DWORD *)v20 = 136446466;
        v30 = v17;
        v21 = EventReportSenderID.description.getter();
        v36 = sub_2498F7698(v21, v22, aBlock);
        v29[2] = aBlock;
        sub_249955AFC();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2082;
        v29[1] = v20 + 14;
        swift_retain();
        v23 = HIDVirtualService.description.getter();
        v25 = v24;
        swift_release();
        v36 = sub_2498F7698(v23, v25, aBlock);
        sub_249955AFC();
        swift_release_n();
        swift_bridgeObjectRelease();
        v17 = v30;
        _os_log_impl(&dword_2498C7000, v30, (os_log_type_t)v33, "%{public}s: Canceling Service: %{public}s", (uint8_t *)v20, 0x16u);
        v26 = v31;
        swift_arrayDestroy();
        MEMORY[0x24BCFB9B8](v26, -1, -1);
        v27 = v20;
        v3 = v32;
        MEMORY[0x24BCFB9B8](v27, -1, -1);
      }
      else
      {
        swift_release_n();
        swift_release_n();
      }

      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
    aBlock[4] = (uint64_t)j___s12UniversalHID17HIDVirtualServiceC6cancelyyF;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2498EDF40;
    aBlock[3] = (uint64_t)&block_descriptor_11;
    v28 = _Block_copy(aBlock);
    swift_retain();
    sub_249955754();
    v36 = MEMORY[0x24BEE4AF8];
    sub_2498F98AC(&qword_2578A2630, (void (*)(uint64_t))MEMORY[0x24BEE5458]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
    sub_2498F98E0(&qword_2578A2640, &qword_2578A0F98);
    sub_249955BF8();
    MEMORY[0x24BCFAC5C](0, v9, v5, v28);
    _Block_release(v28);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    return swift_release();
  }
  return result;
}

void sub_2498F3894(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void *v18;
  int v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id *v52;
  id v53;
  id v54;
  id v55;
  char v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  void *v75;
  int v76;
  _BOOL4 v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unsigned __int8 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_35_1();
  v78 = v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v74 - v10;
  v84 = 0xD000000000000015;
  v85 = 0x800000024995E570;
  v12 = sub_249955F40();
  v80 = a2;
  v13 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, v12);
  v14 = swift_unknownObjectRelease();
  if (v13)
  {
    OUTLINED_FUNCTION_50_1();
    v14 = swift_unknownObjectRelease();
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  OUTLINED_FUNCTION_20_8(v14, v15, &qword_2578A1280);
  if (v86)
  {
    if ((OUTLINED_FUNCTION_18_8() & 1) != 0)
    {
      v17 = v81;
      goto LABEL_9;
    }
  }
  else
  {
    OUTLINED_FUNCTION_52_1(v16, &qword_2578A1280);
  }
  v17 = 0;
LABEL_9:
  v79 = a1;
  v18 = v80;
  v19 = HIDServiceProperties.primaryUsagePair.getter(a1, v80);
  v77 = v19 != 262157;
  v84 = 0xD000000000000014;
  v85 = 0x800000024995E7C0;
  v20 = objc_msgSend(v18, sel___swift_objectForKeyedSubscript_, sub_249955F40());
  v21 = swift_unknownObjectRelease();
  if (v20)
  {
    sub_249955BA4();
    v21 = swift_unknownObjectRelease();
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  OUTLINED_FUNCTION_20_8(v21, v22, &qword_2578A1280);
  if (!v86)
  {
    OUTLINED_FUNCTION_52_1(v23, &qword_2578A1280);
    goto LABEL_16;
  }
  if ((OUTLINED_FUNCTION_18_8() & 1) == 0)
  {
LABEL_16:
    v24 = 0;
    goto LABEL_17;
  }
  v24 = v81;
LABEL_17:
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture);
  if (v17 != *(unsigned __int8 *)(v25 + 17) || (((v19 == 262157) ^ *(unsigned __int8 *)(v25 + 18)) & 1) == 0)
  {
    LOBYTE(v84) = 0;
    type metadata accessor for DigitizerGesture();
    swift_allocObject();
    v26 = DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)((char *)&v84, v17, v77);
    sub_2498F2BFC(v26, &OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture, (uint64_t (*)(_QWORD))type metadata accessor for DigitizerGesture, (uint64_t)&protocol witness table for DigitizerGesture, 9);
    sub_2498EFFC8(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v11);
    v27 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v27) == 1)
    {
      sub_2498F9DB0((uint64_t)v11, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      OUTLINED_FUNCTION_55_1();
      v28 = sub_249955700();
      v29 = sub_249955A24();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = OUTLINED_FUNCTION_28_3();
        v76 = v24;
        v31 = v30;
        v75 = (void *)OUTLINED_FUNCTION_28_3();
        v84 = (uint64_t)v75;
        *(_DWORD *)v31 = 136446722;
        v32 = EventReportSenderID.description.getter();
        v34 = OUTLINED_FUNCTION_47_1(v32, v33);
        OUTLINED_FUNCTION_37_1(v34);
        sub_249955AFC();
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_56_1();
        *(_WORD *)(v31 + 12) = 1026;
        LODWORD(v82) = v17;
        OUTLINED_FUNCTION_11_9();
        *(_WORD *)(v31 + 18) = 1026;
        LODWORD(v82) = v77;
        OUTLINED_FUNCTION_11_9();
        _os_log_impl(&dword_2498C7000, v28, v29, "%{public}s: Updated Digitizer Gesture: RA '%{BOOL,public}d', PE '%{BOOL,public}d'", (uint8_t *)v31, 0x18u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_23_7();
      }
      OUTLINED_FUNCTION_12_9();

      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v11, v27);
    }
  }
  v35 = *(_QWORD *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture);
  if (v17 != *(unsigned __int8 *)(v35 + 17) || v24 != *(unsigned __int8 *)(v35 + 18))
  {
    type metadata accessor for ScrollGesture();
    ScrollGesture.__allocating_init(useRemoteAcceleration:dispatchScrollEvents:)(v17, v24);
    sub_2498F2BFC(v36, &OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture, (uint64_t (*)(_QWORD))type metadata accessor for ScrollGesture, (uint64_t)&protocol witness table for ScrollGesture, 7);
    v37 = v78;
    sub_2498EFFC8(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, v78);
    v38 = sub_249955718();
    if (__swift_getEnumTagSinglePayload(v37, 1, v38) == 1)
    {
      sub_2498F9DB0(v37, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      v76 = v24;
      OUTLINED_FUNCTION_55_1();
      v39 = sub_249955700();
      v40 = sub_249955A24();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = OUTLINED_FUNCTION_28_3();
        v84 = OUTLINED_FUNCTION_28_3();
        *(_DWORD *)v41 = 136446722;
        v42 = EventReportSenderID.description.getter();
        v44 = OUTLINED_FUNCTION_47_1(v42, v43);
        OUTLINED_FUNCTION_37_1(v44);
        sub_249955AFC();
        OUTLINED_FUNCTION_12_9();
        OUTLINED_FUNCTION_56_1();
        *(_WORD *)(v41 + 12) = 1026;
        LODWORD(v82) = v17;
        OUTLINED_FUNCTION_11_9();
        *(_WORD *)(v41 + 18) = 1026;
        LODWORD(v82) = v76;
        OUTLINED_FUNCTION_11_9();
        _os_log_impl(&dword_2498C7000, v39, v40, "%{public}s: Updated Scroll Gesture: RA '%{BOOL,public}d', SE '%{BOOL,public}d'", (uint8_t *)v41, 0x18u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_23_7();
      }
      OUTLINED_FUNCTION_12_9();

      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
    }
  }
  v45 = v80;
  v46 = sub_2499338EC(v45);

  sub_249933818(v46);
  v48 = HIDServiceProperties.init(serviceID:properties:)(v79, v47);
  if (!v3)
  {
    v50 = v48;
    v51 = v49;
    v52 = (id *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties);
    swift_beginAccess();
    v53 = v52[1];
    if (v53 && *v52 == v50)
    {
      sub_2498F9DE8(0, &qword_2578A1290);
      v54 = v51;
      v55 = v53;
      v56 = sub_249955AC0();

      if ((v56 & 1) != 0)
      {
LABEL_55:

        return;
      }
      v53 = v52[1];
    }
    *v52 = v50;
    v52[1] = v51;
    v57 = v51;

    *(_QWORD *)&v82 = 0xD000000000000010;
    *((_QWORD *)&v82 + 1) = 0x800000024995E7E0;
    v58 = objc_msgSend(v57, sel___swift_objectForKeyedSubscript_, sub_249955F40());
    v59 = swift_unknownObjectRelease();
    if (v58)
    {
      OUTLINED_FUNCTION_50_1();
      v59 = swift_unknownObjectRelease();
    }
    else
    {
      v82 = 0u;
      v83 = 0u;
    }
    OUTLINED_FUNCTION_20_8(v59, v60, &qword_2578A1280);
    if (v86)
    {
      sub_2498F9DE8(0, &qword_2578A1288);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v69 = v87;
        sub_249933AF8((uint64_t)v87, v62, v63, v64, v65, v66, v67, v68, v74, v75);

      }
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v61, &qword_2578A1280);
    }
    if ((OUTLINED_FUNCTION_22_7(0x5000Du) & 1) != 0)
      v70 = 1;
    else
      v70 = OUTLINED_FUNCTION_22_7(0x4000Du);
    v71 = OUTLINED_FUNCTION_22_7(0x60001u);
    v72 = OUTLINED_FUNCTION_22_7(0x20001u);
    v73 = OUTLINED_FUNCTION_22_7(0x50001u);
    OUTLINED_FUNCTION_56_1();
    if ((v70 & 1) != *(_BYTE *)(v4
                               + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage))
      *(_BYTE *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) = v70 & 1;
    if ((v71 & 1) != *(_BYTE *)(v4
                               + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage))
      *(_BYTE *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) = v71 & 1;
    if ((v72 & 1) != *(_BYTE *)(v4
                               + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage))
      *(_BYTE *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) = v72 & 1;
    if ((v73 & 1) != *(_BYTE *)(v4
                               + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage))
      *(_BYTE *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) = v73 & 1;
    sub_2498F4164();
    sub_2498F4320();
    sub_2498F43EC();
    goto LABEL_55;
  }
}

uint64_t sub_2498F4164()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
  swift_beginAccess();
  v2 = *(void **)(v1 + 8);
  if (v2)
  {
    *(_QWORD *)&v11[0] = 0xD000000000000014;
    *((_QWORD *)&v11[0] + 1) = 0x800000024995E880;
    v3 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_249955F40());
    swift_unknownObjectRelease();
    if (v3)
    {
      sub_249955BA4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v11, 0, sizeof(v11));
    }
    sub_2498F9D70((uint64_t)v11, (uint64_t)v12, &qword_2578A1280);
    if (v13)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_endAccess();
        if (v10 >= 3)
          v4 = 2;
        else
          v4 = v10;
        goto LABEL_12;
      }
    }
    else
    {
      sub_2498F9DB0((uint64_t)v12, &qword_2578A1280);
    }
  }
  swift_endAccess();
  v4 = 2;
LABEL_12:
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
  swift_beginAccess();
  v6 = sub_24992BE10(*v5);
  if (!v6)
    return swift_endAccess();
  v7 = v6;
  swift_endAccess();
  v8 = (char *)(v7 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode);
  swift_beginAccess();
  *v8 = v4;
  return swift_release();
}

void sub_2498F4320()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) == 1
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) & 1) != 0
    || *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) == 1
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) & 1) != 0
    || *(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) == 1
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
    goto LABEL_8;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) & 1) == 0)
  {
    if (!*(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service))
      return;
LABEL_13:
    sub_2498F344C();
    return;
  }
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) != 1)
  {
    if (!v1)
      return;
    goto LABEL_13;
  }
LABEL_8:
  if (!v1)
    sub_2498F4A90();
}

void sub_2498F43EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  int v11;
  uint64_t v12;
  char v13;
  id v14;
  int v15;
  uint64_t v16;
  char v17;
  id v18;
  int v19;
  uint64_t v20;
  char v21;
  id v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  if (v5)
  {
    v6 = v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
    swift_beginAccess();
    v7 = *(void **)(v6 + 8);
    if (v7)
    {
      v41 = 0xD000000000000014;
      v42 = 0x800000024995E800;
      v8 = v5;
      v9 = v7;
      v10 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_249955F40());
      swift_unknownObjectRelease();
      if (v10)
      {
        sub_249955BA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
      }
      sub_2498F9D70((uint64_t)&v39, (uint64_t)&v41, &qword_2578A1280);
      if (v43)
      {
        v11 = swift_dynamicCast();
        if (v11)
          v12 = v38;
        else
          v12 = 0;
        v13 = v11 ^ 1;
      }
      else
      {
        sub_2498F9DB0((uint64_t)&v41, &qword_2578A1280);
        v12 = 0;
        v13 = 1;
      }
      sub_2499446EC(v12, v13);
      v41 = 0xD00000000000001ALL;
      v42 = 0x800000024995E820;
      v14 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_249955F40());
      swift_unknownObjectRelease();
      if (v14)
      {
        sub_249955BA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
      }
      sub_2498F9D70((uint64_t)&v39, (uint64_t)&v41, &qword_2578A1280);
      if (v43)
      {
        v15 = swift_dynamicCast();
        if (v15)
          v16 = v38;
        else
          v16 = 0;
        v17 = v15 ^ 1;
      }
      else
      {
        sub_2498F9DB0((uint64_t)&v41, &qword_2578A1280);
        v16 = 0;
        v17 = 1;
      }
      sub_2499446EC(v16, v17);
      v41 = 0xD000000000000017;
      v42 = 0x800000024995E840;
      v18 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_249955F40());
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_249955BA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
      }
      sub_2498F9D70((uint64_t)&v39, (uint64_t)&v41, &qword_2578A1280);
      if (v43)
      {
        v19 = swift_dynamicCast();
        if (v19)
          v20 = v38;
        else
          v20 = 0;
        v21 = v19 ^ 1;
      }
      else
      {
        sub_2498F9DB0((uint64_t)&v41, &qword_2578A1280);
        v20 = 0;
        v21 = 1;
      }
      sub_2499446EC(v20, v21);
      v41 = 0xD00000000000001DLL;
      v42 = 0x800000024995E860;
      v22 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_249955F40());
      swift_unknownObjectRelease();
      if (v22)
      {
        sub_249955BA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v39 = 0u;
        v40 = 0u;
      }
      sub_2498F9D70((uint64_t)&v39, (uint64_t)&v41, &qword_2578A1280);
      if (v43)
      {
        v23 = swift_dynamicCast();
        if (v23)
          v24 = v38;
        else
          v24 = 0;
        v25 = v23 ^ 1;
      }
      else
      {
        sub_2498F9DB0((uint64_t)&v41, &qword_2578A1280);
        v24 = 0;
        v25 = 1;
      }
      sub_2499446EC(v24, v25);
      sub_2498EFFC8(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v4);
      v26 = sub_249955718();
      if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v26) == 1)
      {

        sub_2498F9DB0((uint64_t)v4, (uint64_t *)&unk_2578A2350);
      }
      else
      {
        v27 = v8;
        swift_retain_n();
        v28 = v27;
        v29 = sub_249955700();
        v30 = sub_249955A24();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc();
          v37 = swift_slowAlloc();
          v41 = v37;
          *(_DWORD *)v31 = 136446466;
          v32 = EventReportSenderID.description.getter();
          *(_QWORD *)&v39 = sub_2498F7698(v32, v33, &v41);
          sub_249955AFC();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v31 + 12) = 2082;
          *(_QWORD *)&v39 = objc_msgSend(v28, sel_serviceID);
          sub_2498F0128();
          v34 = sub_2499558C8();
          *(_QWORD *)&v39 = sub_2498F7698(v34, v35, &v41);
          sub_249955AFC();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2498C7000, v29, v30, "%{public}s: Updated Client: %{public}s", (uint8_t *)v31, 0x16u);
          v36 = v37;
          swift_arrayDestroy();
          MEMORY[0x24BCFB9B8](v36, -1, -1);
          MEMORY[0x24BCFB9B8](v31, -1, -1);

        }
        else
        {
          swift_release_n();

        }
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v4, v26);
      }
    }
  }
}

void sub_2498F4A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)();
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v29[-v6];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) & 1) != 0
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) & 1) != 0
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) & 1) != 0
    || *(_BYTE *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) == 1)
  {
    v8 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service))
    {
      v9 = v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
      swift_beginAccess();
      v10 = *(void **)(v9 + 8);
      if (v10)
      {
        v31 = v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger;
        sub_2498EFFC8(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v7);
        v11 = *(void **)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_queue);
        swift_beginAccess();
        type metadata accessor for HIDVirtualService(0);
        swift_allocObject();
        v12 = v10;
        v13 = v11;
        swift_bridgeObjectRetain();
        sub_24992CF4C();
        v15 = v14;
        *(_QWORD *)(v1 + v8) = v14;
        swift_retain();
        swift_release();
        v16 = swift_allocObject();
        swift_weakInit();
        v17 = (uint64_t (**)())(v15 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_terminationWasRequestedHandler);
        *v17 = sub_2498F97BC;
        v17[1] = (uint64_t (*)())v16;
        swift_release();
        HIDVirtualService.activate()();
        sub_2498EFFC8(v31, (uint64_t)v5);
        v18 = sub_249955718();
        if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v18) == 1)
        {
          swift_release();

          sub_2498F9DB0((uint64_t)v5, (uint64_t *)&unk_2578A2350);
        }
        else
        {
          swift_retain_n();
          swift_retain_n();
          v19 = sub_249955700();
          v20 = sub_249955A24();
          v21 = v20;
          if (os_log_type_enabled(v19, v20))
          {
            v22 = swift_slowAlloc();
            v31 = swift_slowAlloc();
            v33 = v31;
            *(_DWORD *)v22 = 136446466;
            v30 = v21;
            v23 = EventReportSenderID.description.getter();
            v32 = sub_2498F7698(v23, v24, &v33);
            sub_249955AFC();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v22 + 12) = 2082;
            swift_retain();
            v25 = HIDVirtualService.description.getter();
            v27 = v26;
            swift_release();
            v32 = sub_2498F7698(v25, v27, &v33);
            sub_249955AFC();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2498C7000, v19, (os_log_type_t)v30, "%{public}s: Activated Service: %{public}s", (uint8_t *)v22, 0x16u);
            v28 = v31;
            swift_arrayDestroy();
            MEMORY[0x24BCFB9B8](v28, -1, -1);
            MEMORY[0x24BCFB9B8](v22, -1, -1);
            swift_release();
          }
          else
          {
            swift_release_n();
            swift_release_n();
          }

          (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v5, v18);
        }
      }
    }
  }
}

uint64_t sub_2498F4EC8()
{
  uint64_t result;
  void (*v1)(uint64_t);
  uint64_t v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(void (**)(uint64_t))(result
                                        + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
    swift_retain();
    v2 = swift_release();
    v1(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2498F4F44()
{
  return sub_2498F3448();
}

uint64_t sub_2498F4F64@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2498E2300(*v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id, a1);
}

uint64_t sub_2498F4F7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

void HIDVirtualServicePool.enabledDeviceTypes.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes)
                          + 24);
  os_unfair_lock_lock(v1);
  OUTLINED_FUNCTION_58_1();
  os_unfair_lock_unlock(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498F500C()
{
  swift_bridgeObjectRetain();
  HIDVirtualServicePool.enabledDeviceTypes.setter();
}

void HIDVirtualServicePool.enabledDeviceTypes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_type_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26[12];
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_18_0();
  v27 = v1;
  v28 = v2;
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_16_0();
  v9 = v8 - v7;
  v10 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes);
  v11 = (uint64_t *)&v10[4];
  v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_2498F54C4(v11, v5, (char *)v26);
  os_unfair_lock_unlock(v12);
  if (LOBYTE(v26[0]) != 1)
  {
    swift_bridgeObjectRelease();
    return;
  }
  OUTLINED_FUNCTION_30_2(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger);
  v13 = sub_249955718();
  if (__swift_getEnumTagSinglePayload(v9, 1, v13) != 1)
  {
    swift_bridgeObjectRetain();
    v14 = sub_249955700();
    v15 = sub_249955A24();
    if (!os_log_type_enabled(v14, v15))
    {
      OUTLINED_FUNCTION_41_1();

      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
      goto LABEL_14;
    }
    v23 = v15;
    v24 = v14;
    v16 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)v16 = 136446210;
    v17 = *(_QWORD *)(v5 + 16);
    if (!v17)
    {
      v25 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_58_1();
      sub_2498F87F8(&v25);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_1();
      OUTLINED_FUNCTION_61_0(&qword_2578A0BE8);
      v20 = sub_2499557E4();
      v22 = v21;
      swift_release();
      v25 = sub_2498F7698(v20, v22, v26);
      sub_249955AFC();
      OUTLINED_FUNCTION_41_1();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2498C7000, v24, v23, "Enabled Device Types: %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_23_7();
    }
    v25 = MEMORY[0x24BEE4AF8];
    sub_2498D5D6C(0, v17, 0);
    v18 = sub_2498F9310(v5);
    if (v18 < 0 || v18 >= 1 << *(_BYTE *)(v5 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v5 + 56 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      if (*(_DWORD *)(v5 + 36) == v19)
        __asm { BR              X9 }
LABEL_17:
      __break(1u);
      OUTLINED_FUNCTION_49_1();
      swift_release();
      __break(1u);
      JUMPOUT(0x2498F54ACLL);
    }
    __break(1u);
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_49_1();
  sub_2498F9DB0(v9, (uint64_t *)&unk_2578A2350);
LABEL_14:
  sub_2498F5538();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498F54C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t result;
  char v7;

  result = sub_2498F2804(a2, *a1);
  if ((result & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *a1 = a2;
    result = swift_bridgeObjectRetain();
    v7 = 1;
  }
  *a3 = v7;
  return result;
}

uint64_t sub_2498F5538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_249955748();
  v3 = (void (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24995576C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  aBlock[4] = sub_2498F9E1C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2498EDF40;
  aBlock[3] = &block_descriptor_29;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_249955754();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_2498F98AC(&qword_2578A2630, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  sub_2498F98E0(&qword_2578A2640, &qword_2578A0F98);
  sub_249955BF8();
  MEMORY[0x24BCFAC5C](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void HIDVirtualServicePool.enabledDeviceTypes.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  HIDVirtualServicePool.enabledDeviceTypes.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498F5744(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_54_1();
    HIDVirtualServicePool.enabledDeviceTypes.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    HIDVirtualServicePool.enabledDeviceTypes.setter();
  }
}

uint64_t sub_2498F5784@<X0>(_QWORD *a1@<X0>, void (**a2)(uint64_t a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_2498F9790;
  a2[1] = (void (*)(uint64_t))v6;
  return swift_retain();
}

uint64_t sub_2498F5804(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(uint64_t);

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (void (**)(uint64_t))(*a2
                                     + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  *v6 = sub_2498F9790;
  v6[1] = (void (*)(uint64_t))v5;
  swift_retain();
  return swift_release();
}

uint64_t HIDVirtualServicePool.terminationWasRequestedHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  OUTLINED_FUNCTION_6_12();
  v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t HIDVirtualServicePool.terminationWasRequestedHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  OUTLINED_FUNCTION_3_10();
  *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

void HIDVirtualServicePool.terminationWasRequestedHandler.modify()
{
  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498F5978()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  HIDVirtualServicePool.enabledDeviceTypes.getter();
  v1 = v0;
  sub_24992C148(0, v0);
  if ((v2 & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    sub_24992C148(1u, v1);
    v3 = v4;
  }
  swift_bridgeObjectRelease();
  return v3 & 1;
}

BOOL sub_2498F59CC()
{
  uint64_t v0;
  char v1;

  HIDVirtualServicePool.enabledDeviceTypes.getter();
  v1 = sub_2498F912C((uint64_t)&unk_251AC4D98, v0);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

void sub_2498F5A10()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (**v50)();
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  OUTLINED_FUNCTION_18_0();
  v62 = v0;
  v2 = v1;
  v69 = v3;
  v54 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_17_6();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_43_1();
  v58 = v9;
  v10 = OUTLINED_FUNCTION_73();
  v63 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v61 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_43_1();
  v67 = v13;
  v57 = v14;
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_43_1();
  v71 = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_54_1();
    v21 = sub_249955D90();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v22 = MEMORY[0x24BEE4AF8];
  v68 = v10;
  v59 = v8;
  if (v21)
  {
    v73 = MEMORY[0x24BEE4AF8];
    sub_2498D6020(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
      return;
    }
    v23 = 0;
    v22 = v73;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v24 = MEMORY[0x24BCFAE54](v23, v2);
      }
      else
      {
        v24 = *(_QWORD *)(v2 + 8 * v23 + 32);
        swift_retain();
      }
      v25 = *(int *)(v17 + 48);
      sub_2498E2300(v24 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id, (uint64_t)v20);
      *(_QWORD *)&v20[v25] = v24;
      v73 = v22;
      v27 = *(_QWORD *)(v22 + 16);
      v26 = *(_QWORD *)(v22 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_2498D6020(v26 > 1, v27 + 1, 1);
        v22 = v73;
      }
      ++v23;
      *(_QWORD *)(v22 + 16) = v27 + 1;
      sub_2498F9D70((uint64_t)v20, v22+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v27, &qword_2578A0C80);
    }
    while (v21 != v23);
  }
  sub_24993382C(v22);
  v29 = v28;
  v30 = v54;
  v31 = *(_QWORD *)(v54 + 16);
  if (v31)
  {
    v66 = v62 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger;
    v56 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_workloop;
    v32 = (uint64_t *)(v62 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
    OUTLINED_FUNCTION_54_1();
    v55 = v32;
    OUTLINED_FUNCTION_6_12();
    v33 = OUTLINED_FUNCTION_21_7();
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    v65 = v33;
    v34 = (void **)(v30 + 40);
    do
    {
      v70 = v31;
      v36 = (uint64_t)*(v34 - 1);
      v35 = *v34;
      v37 = v71;
      v64(v71, v69, v65);
      *(_QWORD *)(v37 + *(int *)(v68 + 20)) = v36;
      v38 = v35;
      swift_bridgeObjectRetain();
      v39 = sub_2498DFA3C(v37);
      LOBYTE(v37) = v40;
      swift_bridgeObjectRelease();
      if ((v37 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v72 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E78);
        sub_249955D3C();
        v29 = v72;
        sub_2498E2388(*(_QWORD *)(v72 + 48) + *(_QWORD *)(v63 + 72) * v39);
        v41 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v39);
        OUTLINED_FUNCTION_46_1();
        sub_2498F98AC(&qword_2578A0E30, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
        sub_249955D54();
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = 0;
      }
      v42 = v67;
      OUTLINED_FUNCTION_60(v71);
      if (!v41)
      {
        sub_2498E2300(v42, v61);
        sub_2498EFFC8(v66, v58);
        v43 = *(void **)(v62 + v56);
        OUTLINED_FUNCTION_46_1();
        v41 = OUTLINED_FUNCTION_15_10();
        v44 = v43;
        sub_2498F2C6C();
      }
      sub_2498E2388(v42);
      sub_2498F3894(v36, v38);
      v45 = OUTLINED_FUNCTION_17_3();
      swift_weakInit();
      v60 = v38;
      v46 = v71;
      v47 = v61;
      OUTLINED_FUNCTION_60(v71);
      v48 = (*(unsigned __int8 *)(v63 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      v49 = swift_allocObject();
      *(_QWORD *)(v49 + 16) = v45;
      sub_2498E2344(v47, v49 + v48);
      v50 = (uint64_t (**)())(v41
                           + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
      *v50 = sub_2498F9854;
      v50[1] = (uint64_t (*)())v49;
      swift_release();
      OUTLINED_FUNCTION_60(v41 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id);
      v51 = *v55;
      swift_retain();
      OUTLINED_FUNCTION_58_1();
      swift_isUniquelyReferenced_nonNull_native();
      v72 = v51;
      sub_2498E1014(v41, v47);
      v52 = v72;
      swift_bridgeObjectRelease();
      sub_2498E2388(v47);
      sub_2498F4F7C(v52);
      OUTLINED_FUNCTION_36_2();

      sub_2498E2388(v46);
      v34 += 2;
      v31 = v70 - 1;
    }
    while (v70 != 1);
    swift_bridgeObjectRelease();
  }
  v53 = swift_bridgeObjectRetain();
  sub_249922020(v53);
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498F607C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  void (**v22)(uint64_t);
  void (*v23)(uint64_t);
  _QWORD v24[3];
  uint8_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    sub_2498EFFC8(result + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v8);
    v11 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
    {
      sub_2498F9DB0((uint64_t)v8, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      sub_2498E2300(a2, (uint64_t)v5);
      v12 = sub_249955700();
      v13 = sub_249955A24();
      v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        v27 = v14;
        v15 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v29 = v26;
        *(_DWORD *)v15 = 136446210;
        v24[2] = v15 + 12;
        v25 = v15;
        v24[1] = v15 + 4;
        sub_2499556B8();
        v16 = sub_2499026FC(8);
        v17 = MEMORY[0x24BCFAA7C](v16);
        v19 = v18;
        swift_bridgeObjectRelease();
        v30 = v17;
        v31 = v19;
        sub_2499558A4();
        v28 = *(_QWORD *)&v5[*(int *)(v3 + 20)];
        sub_2498F0128();
        sub_2499558C8();
        sub_2499558A4();
        swift_bridgeObjectRelease();
        v30 = sub_2498F7698(v30, v31, &v29);
        sub_249955AFC();
        swift_bridgeObjectRelease();
        sub_2498E2388((uint64_t)v5);
        v20 = v25;
        _os_log_impl(&dword_2498C7000, v12, (os_log_type_t)v27, "%{public}s: Termination Requested", v25, 0xCu);
        v21 = v26;
        swift_arrayDestroy();
        MEMORY[0x24BCFB9B8](v21, -1, -1);
        MEMORY[0x24BCFB9B8](v20, -1, -1);

      }
      else
      {

        sub_2498E2388((uint64_t)v5);
      }
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
    }
    v22 = (void (**)(uint64_t))(v10
                                        + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
    swift_beginAccess();
    v23 = *v22;
    swift_retain();
    v23(a2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2498F63B0()
{
  uint64_t v0;
  uint64_t v2;

  v2 = sub_249955F04();
  sub_2499558A4();
  sub_2499556B8();
  v0 = sub_2499026FC(8);
  MEMORY[0x24BCFAA7C](v0);
  swift_bridgeObjectRelease();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  return v2;
}

uint64_t HIDVirtualServicePool.updateInputDevices(inputDevices:for:useRemoteAcceleration:)(uint64_t a1)
{
  uint64_t v1;
  id *v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_2498D603C(0, v1, 0);
    v3 = (id *)(a1 + 40);
    do
    {
      v4 = (uint64_t)*(v3 - 1);
      v5 = *v3;
      v6 = (void *)sub_24995597C();
      objc_msgSend(v5, sel___swift_setObject_forKeyedSubscript_, v6, sub_249955F40());

      swift_unknownObjectRelease();
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_2498D603C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v5;
      v3 += 2;
      --v1;
    }
    while (v1);
  }
  HIDVirtualServicePool.updateInputDevices(inputDevices:for:)();
  return OUTLINED_FUNCTION_49_1();
}

void HIDVirtualServicePool.updateInputDevices(inputDevices:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[12];

  OUTLINED_FUNCTION_18_0();
  v2 = v0;
  v4 = v3;
  v19[0] = v5;
  v19[4] = *(_QWORD *)(sub_249955748() - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_1_13();
  v19[2] = *(_QWORD *)(v7 - 8);
  v19[3] = v7;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OUTLINED_FUNCTION_21_7();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v4, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  *(_QWORD *)(v17 + v16) = v19[0];
  v19[10] = sub_2498F9404;
  v19[11] = v17;
  v19[6] = MEMORY[0x24BDAC760];
  v19[7] = 1107296256;
  v18 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_249955754();
  v19[5] = MEMORY[0x24BEE4AF8];
  sub_2498F98AC(&qword_2578A2630, (void (*)(uint64_t))MEMORY[0x24BEE5458]);
  OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_61_0(&qword_2578A2640);
  OUTLINED_FUNCTION_17_7();
  MEMORY[0x24BCFAC5C](0, v10, v1, v18);
  _Block_release(v18);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_31_1();
  swift_release();
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2498F67DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t i;

  sub_2498F68E4(a2);
  sub_2498F5A10();
  v3 = v2;
  result = swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_2498F6980();
  }
  swift_bridgeObjectRetain();
  v5 = sub_249955D90();
  result = swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_9;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        MEMORY[0x24BCFAE54](i, v3);
      else
        swift_retain();
      sub_2498F344C();
      swift_release();
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498F68E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  v4 = *v3;
  v7[2] = a1;
  v7[3] = &v8;
  swift_bridgeObjectRetain();
  v5 = sub_2498F7CBC((uint64_t)sub_2498F97C4, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  sub_2498F4F7C(v5);
  return v8;
}

uint64_t sub_2498F6980()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  char v17;
  BOOL v18;
  char v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;

  v1 = sub_2498F5978();
  HIDVirtualServicePool.enabledDeviceTypes.getter();
  sub_24992C148(3u, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = sub_2498F59CC();
  HIDVirtualServicePool.enabledDeviceTypes.getter();
  sub_24992C148(2u, v6);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  v10 = *v9;
  v11 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v10 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v16 = v1 & 1;
  v17 = v4 & 1;
  v18 = v5;
  v19 = v8 & 1;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    v27 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * i);
    *(_BYTE *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) = v16;
    swift_retain();
    sub_2498F4320();
    *(_BYTE *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) = v17;
    sub_2498F4320();
    *(_BYTE *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) = v18;
    sub_2498F4320();
    *(_BYTE *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) = v19;
    sub_2498F4320();
    result = swift_release();
    if (v14)
      goto LABEL_4;
LABEL_5:
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v15)
      return swift_release();
    v25 = *(_QWORD *)(v11 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v15)
        return swift_release();
      v25 = *(_QWORD *)(v11 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v15)
          return swift_release();
        v25 = *(_QWORD *)(v11 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v15)
            return swift_release();
          v25 = *(_QWORD *)(v11 + 8 * v21);
          if (!v25)
            break;
        }
      }
    }
LABEL_20:
    v14 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v15)
    return swift_release();
  v25 = *(_QWORD *)(v11 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v15)
      return swift_release();
    v25 = *(_QWORD *)(v11 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL sub_2498F6BB0(uint64_t a1, uint64_t *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _QWORD *v24;

  v24 = a4;
  v6 = sub_2499556F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v23 - v14;
  v16 = *a2;
  sub_2498E2300(a1, (uint64_t)&v23 - v14);
  v17 = *(int *)(v10 + 48);
  *(_QWORD *)&v15[v17] = v16;
  sub_2498E2300((uint64_t)v15, (uint64_t)v13);
  *(_QWORD *)&v13[v17] = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  swift_retain_n();
  sub_2498E2388((uint64_t)v13);
  sub_2498F98AC(&qword_2578A0E50, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v18 = sub_24995582C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v18 & 1) != 0)
  {
    v19 = *(int *)(v10 + 48);
    v20 = sub_2498E2300((uint64_t)v15, (uint64_t)v13);
    *(_QWORD *)&v13[v19] = v16;
    v21 = v24;
    MEMORY[0x24BCFAB24](v20);
    sub_2498CF6C0(*(_QWORD *)((*v21 & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_249955964();
    sub_249955940();
    sub_2498F9DB0((uint64_t)v15, &qword_2578A0FF0);
    sub_2498E2388((uint64_t)v13);
  }
  else
  {
    sub_2498F9DB0((uint64_t)v15, &qword_2578A0FF0);
    swift_release();
  }
  return (v18 & 1) == 0;
}

void HIDVirtualServicePool.removeInputDevices(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[12];

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  v15[4] = *(_QWORD *)(sub_249955748() - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_1_13();
  v15[2] = *(_QWORD *)(v5 - 8);
  v15[3] = v5;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_21_7();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v15[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v15[10] = sub_2498F94A8;
  v15[11] = v13;
  v15[6] = MEMORY[0x24BDAC760];
  v15[7] = 1107296256;
  v14 = OUTLINED_FUNCTION_6_10((uint64_t)sub_2498EDF40);
  swift_retain();
  sub_249955754();
  v15[5] = MEMORY[0x24BEE4AF8];
  sub_2498F98AC(&qword_2578A2630, (void (*)(uint64_t))MEMORY[0x24BEE5458]);
  OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_61_0(&qword_2578A2640);
  OUTLINED_FUNCTION_17_7();
  MEMORY[0x24BCFAC5C](0, v8, v1, v14);
  _Block_release(v14);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_31_1();
  swift_release();
  OUTLINED_FUNCTION_4_0();
}

char *sub_2498F6FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  uint8_t *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_2499556F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498EFFC8(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v10);
  v11 = sub_249955718();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_2498F9DB0((uint64_t)v10, (uint64_t *)&unk_2578A2350);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v12 = sub_249955700();
    v13 = sub_249955A24();
    v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      v35 = a2;
      v15 = swift_slowAlloc();
      v33 = v14;
      v16 = (uint8_t *)v15;
      v34 = swift_slowAlloc();
      v38 = v34;
      v36 = a1;
      *(_DWORD *)v16 = 136446210;
      v31 = v16 + 4;
      v32 = v16;
      sub_2499556B8();
      v17 = sub_2499026FC(8);
      v18 = MEMORY[0x24BCFAA7C](v17);
      v20 = v19;
      swift_bridgeObjectRelease();
      v37 = sub_2498F7698(v18, v20, &v38);
      sub_249955AFC();
      a2 = v35;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v21 = v32;
      _os_log_impl(&dword_2498C7000, v12, (os_log_type_t)v33, "Device %{public}s: Remove Input Devices", v32, 0xCu);
      v22 = v34;
      swift_arrayDestroy();
      MEMORY[0x24BCFB9B8](v22, -1, -1);
      MEMORY[0x24BCFB9B8](v21, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v23 = sub_2498F68E4(a2);
  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24)
      goto LABEL_9;
LABEL_19:
    swift_bridgeObjectRelease();
    return (char *)sub_2498F6980();
  }
  v24 = sub_249955D90();
  if (!v24)
    goto LABEL_19;
LABEL_9:
  v38 = MEMORY[0x24BEE4AF8];
  result = sub_2498D6070(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    v26 = 0;
    v27 = v38;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
        MEMORY[0x24BCFAE54](v26, v23);
      else
        swift_retain();
      sub_2498F344C();
      swift_release();
      v38 = v27;
      v29 = *(_QWORD *)(v27 + 16);
      v28 = *(_QWORD *)(v27 + 24);
      v30 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        sub_2498D6070((char *)(v28 > 1), v29 + 1, 1);
        v27 = v38;
      }
      ++v26;
      *(_QWORD *)(v27 + 16) = v30;
    }
    while (v24 != v26);
    swift_bridgeObjectRelease();
    swift_release();
    return (char *)sub_2498F6980();
  }
  __break(1u);
  return result;
}

void HIDVirtualServicePool.addServiceClient(_:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  int64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_18_0();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FE8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_17_8();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - v6;
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  OUTLINED_FUNCTION_6_12();
  v9 = *v8;
  v35 = *v8 + 64;
  OUTLINED_FUNCTION_16_7();
  v12 = v11 & v10;
  v14 = (unint64_t)(v13 + 63) >> 6;
  v34 = v14 - 1;
  swift_bridgeObjectRetain();
  v15 = 0;
  if (!v12)
    goto LABEL_4;
LABEL_2:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v17 = v16 | (v15 << 6);
LABEL_3:
  v18 = *(_QWORD *)(v9 + 48);
  v19 = OUTLINED_FUNCTION_73();
  sub_2498E2300(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v1);
  v20 = *(_QWORD *)(v9 + 56);
  v21 = OUTLINED_FUNCTION_42_1();
  *(_QWORD *)(v1 + *(int *)(v21 + 48)) = *(_QWORD *)(v20 + 8 * v17);
  OUTLINED_FUNCTION_26_4(v21, v22, v23, v21);
  OUTLINED_FUNCTION_33_0();
  while (1)
  {
    sub_2498F9D70(v1, (uint64_t)v7, &qword_2578A0FE8);
    v28 = OUTLINED_FUNCTION_42_1();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v28) == 1)
    {
      swift_release();
      goto LABEL_29;
    }
    v29 = *(_QWORD *)&v7[*(int *)(v28 + 48)];
    v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
    if (v30)
    {
      OUTLINED_FUNCTION_6_12();
      v31 = *(id *)(v30 + 48);
      if (v31 == objc_msgSend(v3, sel_serviceID))
        break;
    }
    OUTLINED_FUNCTION_38_1();
    sub_2498E2388((uint64_t)v7);
    if (v12)
      goto LABEL_2;
LABEL_4:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 < v14)
    {
      v25 = *(_QWORD *)(v35 + 8 * v24);
      if (v25)
        goto LABEL_7;
      v26 = v15 + 2;
      ++v15;
      if (v24 + 1 < v14)
      {
        v25 = *(_QWORD *)(v35 + 8 * v26);
        if (v25)
          goto LABEL_10;
        v15 = v24 + 1;
        if (v24 + 2 < v14)
        {
          v25 = *(_QWORD *)(v35 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_7;
          }
          v26 = v24 + 3;
          v15 = v24 + 2;
          if (v24 + 3 < v14)
          {
            v25 = *(_QWORD *)(v35 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                v24 = v26 + 1;
                if (__OFADD__(v26, 1))
                  break;
                if (v24 >= v14)
                {
                  v15 = v34;
                  goto LABEL_21;
                }
                v25 = *(_QWORD *)(v35 + 8 * v24);
                ++v26;
                if (v25)
                  goto LABEL_7;
              }
LABEL_31:
              __break(1u);
              return;
            }
LABEL_10:
            v24 = v26;
LABEL_7:
            v12 = (v25 - 1) & v25;
            v17 = __clz(__rbit64(v25)) + (v24 << 6);
            v15 = v24;
            goto LABEL_3;
          }
        }
      }
    }
LABEL_21:
    v27 = OUTLINED_FUNCTION_42_1();
    OUTLINED_FUNCTION_14_8(v27);
    v12 = 0;
  }
  swift_release();
  v32 = *(void **)(v29 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  *(_QWORD *)(v29 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client) = v3;

  v33 = v3;
  OUTLINED_FUNCTION_38_1();
  sub_2498E2388((uint64_t)v7);
LABEL_29:
  OUTLINED_FUNCTION_4_0();
}

uint64_t HIDVirtualServicePool.deinit()
{
  uint64_t v0;

  sub_2498F9DB0(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_25_6(OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  OUTLINED_FUNCTION_25_6(OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_workloop);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_40_1();
  return v0;
}

uint64_t HIDVirtualServicePool.__deallocating_deinit()
{
  return sub_2498F7674((void (*)(void))HIDVirtualServicePool.deinit);
}

uint64_t sub_2498F7674(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_2498F7698(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_2498F7768(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2498F23FC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2498F23FC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2498F7768(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_2498F78BC((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_249955B08();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_2498F7980(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_249955C7C();
    if (!v8)
    {
      result = sub_249955D60();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_2498F78BC(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_249955DCC();
  __break(1u);
  return result;
}

uint64_t sub_2498F7980(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2498F7A14(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_2498F7BE8(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_2498F7BE8((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2498F7A14(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_2499558BC();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_2498F7B84(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_249955C40();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_249955DCC();
  __break(1u);
LABEL_14:
  result = sub_249955D60();
  __break(1u);
  return result;
}

_QWORD *sub_2498F7B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1298);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_2498F7BE8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2498D53D8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498D5B14(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2498F7CBC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(char *, uint64_t *);
  char v7;
  unint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(char *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_24994639C(0, v8, v9);
    v10 = sub_2498F7E38(v9, v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (unint64_t *)swift_slowAlloc();
    sub_24994639C(0, v8, v11);
    a2 = sub_2498F7E38(v11, v8, a3, v6);
    MEMORY[0x24BCFB9B8](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_2498F7E38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t *);
  uint64_t v29;

  v28 = a4;
  v22 = a2;
  v23 = a1;
  v6 = type metadata accessor for EventReportSenderID();
  v27 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v24 = 0;
  v25 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    sub_2498E2300(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v27 + 72) * v16, (uint64_t)v9);
    v29 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v16);
    swift_retain();
    v20 = v28(v9, &v29);
    swift_release();
    result = sub_2498E2388((uint64_t)v9);
    if (v4)
      return result;
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v24++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v26)
    return sub_2498F84A4(v23, v22, v24, (_QWORD *)a3);
  v18 = *(_QWORD *)(v25 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v26)
    return sub_2498F84A4(v23, v22, v24, (_QWORD *)a3);
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v26)
    return sub_2498F84A4(v23, v22, v24, (_QWORD *)a3);
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v26)
    return sub_2498F84A4(v23, v22, v24, (_QWORD *)a3);
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v26)
      return sub_2498F84A4(v23, v22, v24, (_QWORD *)a3);
    v18 = *(_QWORD *)(v25 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_2498F8088()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v42 = v4;
  v41 = v5;
  v45 = *(_QWORD *)(OUTLINED_FUNCTION_73() - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_35_1();
  v53 = v7;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_43_1();
  v44 = v9;
  if (!v3)
    goto LABEL_39;
  if (v1[2] == v3)
  {
    swift_retain();
LABEL_39:
    OUTLINED_FUNCTION_4_0();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E88);
  v54 = sub_249955DC0();
  if (v42 < 1)
    v10 = 0;
  else
    v10 = *v41;
  v11 = 0;
  v12 = v54 + 64;
  v43 = v1;
  while (1)
  {
    v52 = v3;
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v47 = v11;
      v13 = __clz(__rbit64(v10)) | (v11 << 6);
      goto LABEL_28;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_42;
    if (v14 >= v42)
      goto LABEL_39;
    v15 = v41[v14];
    v16 = v11 + 1;
    if (!v15)
    {
      OUTLINED_FUNCTION_34_2();
      if (v17 == v18)
        goto LABEL_39;
      OUTLINED_FUNCTION_33_2();
      if (!v15)
      {
        OUTLINED_FUNCTION_34_2();
        if (v17 == v18)
          goto LABEL_39;
        OUTLINED_FUNCTION_33_2();
        if (!v15)
          break;
      }
    }
LABEL_27:
    v46 = (v15 - 1) & v15;
    v47 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_28:
    v48 = *(_QWORD *)(v45 + 72);
    sub_2498E2300(v1[6] + v48 * v13, v44);
    v22 = (uint64_t *)(v1[7] + 80 * v13);
    v24 = *v22;
    v23 = v22[1];
    v25 = v22[2];
    v26 = v22[3];
    v27 = v22[4];
    v28 = v22[5];
    v29 = v22[8];
    v50 = v22[7];
    v51 = v22[6];
    v30 = v22[9];
    sub_2498E2344(v44, v53);
    sub_249955FB8();
    sub_2498CAC78(v24, v23);
    v49 = v25;
    sub_2498CAC78(v25, v26);
    sub_2498CAC78(v27, v28);
    sub_2498CAC78(v51, v50);
    sub_2498CAC78(v29, v30);
    OUTLINED_FUNCTION_21_7();
    sub_2498F98AC(&qword_2578A0E48, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    sub_2499557D8();
    sub_249955FF4();
    v31 = sub_249956000();
    v32 = -1 << *(_BYTE *)(v54 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) == 0)
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v32) >> 6;
      while (++v34 != v37 || (v36 & 1) == 0)
      {
        v38 = v34 == v37;
        if (v34 == v37)
          v34 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v12 + 8 * v34);
        if (v39 != -1)
        {
          v35 = __clz(__rbit64(~v39)) + (v34 << 6);
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v35 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
    *(_QWORD *)(v12 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    sub_2498E2344(v53, *(_QWORD *)(v54 + 48) + v35 * v48);
    v40 = (uint64_t *)(*(_QWORD *)(v54 + 56) + 80 * v35);
    *v40 = v24;
    v40[1] = v23;
    v40[2] = v49;
    v40[3] = v26;
    v40[4] = v27;
    v40[5] = v28;
    v40[6] = v51;
    v40[7] = v50;
    v40[8] = v29;
    v40[9] = v30;
    ++*(_QWORD *)(v54 + 16);
    v3 = v52 - 1;
    if (__OFSUB__(v52, 1))
      goto LABEL_41;
    v1 = v43;
    v10 = v46;
    v11 = v47;
    if (v52 == 1)
      goto LABEL_39;
  }
  v20 = v19 + 3;
  if (v20 >= v42)
    goto LABEL_39;
  v15 = v41[v20];
  if (v15)
  {
    v16 = v20;
    goto LABEL_27;
  }
  while (!__OFADD__(v20, 1))
  {
    OUTLINED_FUNCTION_34_2();
    if (v17 == v18)
      goto LABEL_39;
    OUTLINED_FUNCTION_33_2();
    v20 = v21 + 1;
    if (v15)
      goto LABEL_27;
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_2498F84A4(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  unint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v8 = type metadata accessor for EventReportSenderID();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v39 = (uint64_t)&v36 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1228);
  result = sub_249955DC0();
  v14 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v38 = a4;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v42 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v37)
        return v14;
      v21 = v36[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v37)
          return v14;
        v21 = v36[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v37)
            return v14;
          v21 = v36[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v37)
              return v14;
            v21 = v36[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v37)
                  return v14;
                v21 = v36[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v42 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v39;
    v25 = *(_QWORD *)(v40 + 72);
    sub_2498E2300(a4[6] + v25 * v19, v39);
    v26 = *(_QWORD *)(a4[7] + 8 * v19);
    sub_2498E2344(v24, (uint64_t)v11);
    sub_249955FB8();
    sub_2499556F4();
    sub_2498F98AC(&qword_2578A0E48, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    swift_retain();
    sub_2499557D8();
    sub_249955FF4();
    result = sub_249956000();
    v27 = -1 << *(_BYTE *)(v14 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) == 0)
      break;
    v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v17 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = sub_2498E2344((uint64_t)v11, *(_QWORD *)(v14 + 48) + v30 * v25);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v30) = v26;
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_39;
    a4 = v38;
    v16 = v42;
    if (!a3)
      return v14;
  }
  v31 = 0;
  v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    v33 = v29 == v32;
    if (v29 == v32)
      v29 = 0;
    v31 |= v33;
    v34 = *(_QWORD *)(v17 + 8 * v29);
    if (v34 != -1)
    {
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_2498F87F8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24990F560(v2);
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_2498F8860(v5);
  *a1 = v2;
}

void sub_2498F8860(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;

  v3 = a1[1];
  v4 = sub_249955EEC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_2498F8EC4(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  v100 = sub_2498CF578(v3 / 2);
  v101 = v3;
  v102 = v6;
  v98 = a1;
  if (v3 <= 0)
  {
    v103 = MEMORY[0x24BEE4AF8];
    v32 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    if (v32 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v100 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v89 = *v98;
    while (1)
    {
      v90 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v89)
        goto LABEL_153;
      v91 = v103;
      v92 = *(_QWORD *)(v103 + 32 + 16 * v90);
      v93 = *(_QWORD *)(v103 + 32 + 16 * (v32 - 1) + 8);
      sub_2498F8F88((char *)(v89 + 16 * v92), (char *)(v89 + 16 * *(_QWORD *)(v103 + 32 + 16 * (v32 - 1))), v89 + 16 * v93, v102);
      if (v1)
        goto LABEL_106;
      if (v93 < v92)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24990F538(v103);
        v91 = v96;
      }
      if (v90 >= *(_QWORD *)(v91 + 16))
        goto LABEL_140;
      v94 = (_QWORD *)(v91 + 32 + 16 * v90);
      *v94 = v92;
      v94[1] = v93;
      v95 = *(_QWORD *)(v91 + 16);
      if (v32 > v95)
        goto LABEL_141;
      memmove((void *)(v91 + 32 + 16 * (v32 - 1)), (const void *)(v91 + 32 + 16 * v32), 16 * (v95 - v32));
      v103 = v91;
      *(_QWORD *)(v91 + 16) = v95 - 1;
      v32 = v95 - 1;
      v3 = v101;
      if (v95 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v99 = v5;
  v7 = 0;
  v8 = *a1;
  v97 = *a1 + 8;
  v103 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v9 = v7++;
    if (v7 >= v3)
      goto LABEL_32;
    v10 = (uint64_t *)(v8 + 16 * v7);
    v11 = *v10;
    v12 = v10[1];
    v13 = (_QWORD *)(v8 + 16 * v9);
    if (v11 == *v13 && v12 == v13[1])
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v3)
        goto LABEL_31;
      v15 = 0;
LABEL_13:
      v17 = (_QWORD *)(v97 + 16 * v16);
      do
      {
        v18 = (_QWORD *)(v8 + 16 * v7);
        if (*(v17 - 1) == *v18 && *v17 == v18[1])
        {
          if ((v15 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v15 ^ sub_249955F28()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v17 += 2;
        v20 = v16 + 1;
        v7 = v16;
        v16 = v20;
      }
      while (v20 < v3);
      v16 = v20;
      goto LABEL_23;
    }
    v15 = sub_249955F28();
    v16 = v9 + 2;
    if (v9 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v7 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v16 < v9)
      goto LABEL_148;
    if (v9 < v16)
    {
      v21 = 16 * v16;
      v22 = 16 * v9;
      v23 = v16;
      v24 = v9;
      do
      {
        if (v24 != --v23)
        {
          if (!v8)
            goto LABEL_152;
          v25 = v8 + v21;
          v26 = *(_QWORD *)(v8 + v22);
          v27 = *(_QWORD *)(v8 + v22 + 8);
          *(_OWORD *)(v8 + v22) = *(_OWORD *)(v8 + v21 - 16);
          *(_QWORD *)(v25 - 16) = v26;
          *(_QWORD *)(v25 - 8) = v27;
        }
        ++v24;
        v21 -= 16;
        v22 += 16;
      }
      while (v24 < v23);
    }
LABEL_31:
    v7 = v16;
LABEL_32:
    if (v7 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v7, v9))
      goto LABEL_143;
    if (v7 - v9 >= v99)
      goto LABEL_41;
    if (__OFADD__(v9, v99))
      goto LABEL_146;
    if (v9 + v99 >= v3)
      v28 = v3;
    else
      v28 = v9 + v99;
    if (v28 < v9)
      goto LABEL_147;
    if (v7 == v28)
    {
LABEL_41:
      v29 = v103;
    }
    else
    {
      v80 = (_QWORD *)(v8 + 16 * v7);
      v29 = v103;
      do
      {
        v81 = (uint64_t *)(v8 + 16 * v7);
        v82 = *v81;
        v83 = v81[1];
        v84 = v9;
        v85 = v80;
        do
        {
          v86 = v82 == *(v85 - 2) && v83 == *(v85 - 1);
          if (v86 || (sub_249955F28() & 1) == 0)
            break;
          if (!v8)
            goto LABEL_150;
          v82 = *v85;
          v83 = v85[1];
          *(_OWORD *)v85 = *((_OWORD *)v85 - 1);
          *(v85 - 1) = v83;
          *(v85 - 2) = v82;
          v85 -= 2;
          ++v84;
        }
        while (v7 != v84);
        ++v7;
        v80 += 2;
      }
      while (v7 != v28);
      v7 = v28;
    }
    if (v7 < v9)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24990F44C(0, *(_QWORD *)(v29 + 16) + 1, 1, (char *)v29);
      v29 = v87;
    }
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    v32 = v31 + 1;
    if (v31 >= v30 >> 1)
    {
      sub_24990F44C(v30 > 1, v31 + 1, 1, (char *)v29);
      v29 = v88;
    }
    *(_QWORD *)(v29 + 16) = v32;
    v33 = v29 + 32;
    v34 = (uint64_t *)(v29 + 32 + 16 * v31);
    *v34 = v9;
    v34[1] = v7;
    v103 = v29;
    if (v31)
      break;
    v32 = 1;
LABEL_90:
    v3 = v101;
    if (v7 >= v101)
      goto LABEL_110;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = v33 + 16 * v32;
      v41 = *(_QWORD *)(v40 - 64);
      v42 = *(_QWORD *)(v40 - 56);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_127;
      v45 = *(_QWORD *)(v40 - 48);
      v44 = *(_QWORD *)(v40 - 40);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_128;
      v47 = v32 - 2;
      v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      v50 = *v48;
      v49 = v48[1];
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_129;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_131;
      if (v52 >= v43)
      {
        v70 = (uint64_t *)(v33 + 16 * v35);
        v72 = *v70;
        v71 = v70[1];
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_137;
        v63 = v38 < v73;
        goto LABEL_79;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *(_QWORD *)(v29 + 32);
        v65 = *(_QWORD *)(v29 + 40);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_73;
      }
      v37 = *(_QWORD *)(v29 + 32);
      v36 = *(_QWORD *)(v29 + 40);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_130;
    v47 = v32 - 2;
    v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    v55 = *v53;
    v54 = v53[1];
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_132;
    v59 = (uint64_t *)(v33 + 16 * v35);
    v61 = *v59;
    v60 = v59[1];
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_134;
    if (__OFADD__(v57, v62))
      goto LABEL_136;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_79:
      if (v63)
        v35 = v47;
      goto LABEL_81;
    }
LABEL_73:
    if ((v58 & 1) != 0)
      goto LABEL_133;
    v66 = (uint64_t *)(v33 + 16 * v35);
    v68 = *v66;
    v67 = v66[1];
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_135;
    if (v69 < v57)
      goto LABEL_90;
LABEL_81:
    v74 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8)
      goto LABEL_151;
    v75 = (uint64_t *)(v33 + 16 * v74);
    v76 = *v75;
    v77 = (_QWORD *)(v33 + 16 * v35);
    v78 = v77[1];
    sub_2498F8F88((char *)(v8 + 16 * *v75), (char *)(v8 + 16 * *v77), v8 + 16 * v78, v102);
    if (v1)
      break;
    if (v78 < v76)
      goto LABEL_124;
    if (v35 > *(_QWORD *)(v103 + 16))
      goto LABEL_125;
    *v75 = v76;
    *(_QWORD *)(v33 + 16 * v74 + 8) = v78;
    v79 = *(_QWORD *)(v103 + 16);
    if (v35 >= v79)
      goto LABEL_126;
    v29 = v103;
    v32 = v79 - 1;
    memmove((void *)(v33 + 16 * v35), v77 + 2, 16 * (v79 - 1 - v35));
    *(_QWORD *)(v103 + 16) = v79 - 1;
    if (v79 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v101 < -1)
    goto LABEL_145;
  *(_QWORD *)(v100 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_2498F8EC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_249955F28();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_2498F8F88(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_2498D501C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_249955F28() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_2498D501C(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_249955F28() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_2498D501C(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

uint64_t sub_2498F912C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v4 = 0;
  v5 = a1 + 32;
  v6 = a2 + 56;
  while (1)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(unsigned __int8 *)(v5 + v4);
      sub_249955FB8();
      sub_249955FC4();
      v8 = sub_249956000();
      v9 = -1 << *(_BYTE *)(a2 + 32);
      v10 = v8 & ~v9;
      if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        break;
    }
LABEL_11:
    if (++v4 == v2)
      return 1;
  }
  v11 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != v7)
  {
    v12 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      if (*(unsigned __int8 *)(v11 + v10) == v7)
        return 0;
    }
    goto LABEL_11;
  }
  return 0;
}

int64_t sub_2498F922C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2498F9310(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2498F9390(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2498F939C()
{
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_32_2();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2498F9404()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_21_7() - 8) + 80);
  return sub_2498F67DC(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2498F945C()
{
  OUTLINED_FUNCTION_21_7();
  OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_32_2();
  return swift_deallocObject();
}

uint64_t sub_2498F94A8()
{
  return sub_2498F9868((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (uint64_t (*)(_QWORD, uint64_t))sub_2498F6FA0);
}

void sub_2498F94BC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDVirtualServicePool.enabledDeviceTypes.getter();
  *a1 = v2;
}

uint64_t sub_2498F94F0()
{
  return type metadata accessor for HIDVirtualServicePool(0);
}

uint64_t type metadata accessor for HIDVirtualServicePool(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A1020);
}

uint64_t sub_2498F950C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2498F953C()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for HIDVirtualServicePool()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HIDVirtualServicePool.__allocating_init(logger:queue:workloop:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_2498F95F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2578A2440)
  {
    sub_249955718();
    v0 = sub_249955AD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2578A2440);
  }
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return type metadata accessor for HIDVirtualServicePool.VirtualService(0);
}

void sub_2498F9650()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for EventReportSenderID();
  if (v0 <= 0x3F)
  {
    sub_2498F95F4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_2498F973C()
{
  sub_2498F98AC(&qword_2578A0E30, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
}

uint64_t sub_2498F976C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2498F9790(uint64_t a1)
{
  uint64_t v1;

  sub_249945108(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_2498F9798()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2498F97BC()
{
  return sub_2498F4EC8();
}

BOOL sub_2498F97C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_2498F6BB0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24));
}

uint64_t sub_2498F97E0()
{
  return sub_2498F63B0();
}

uint64_t sub_2498F97E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_73() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  OUTLINED_FUNCTION_51_1();
  v3 = OUTLINED_FUNCTION_21_7();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_2498F9854()
{
  return sub_2498F9868((uint64_t (*)(_QWORD))type metadata accessor for EventReportSenderID, sub_2498F607C);
}

uint64_t sub_2498F9868(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

void sub_2498F98AC(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_44_1();
  }
  OUTLINED_FUNCTION_6_0();
}

void sub_2498F98E0(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_44_1();
  }
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2498F9914()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_2578A2360;
  if (!qword_2578A2360)
  {
    v1 = type metadata accessor for AppleVendorTopCaseGesture(255);
    v2[0] = sub_2498E4C40();
    v2[1] = sub_2498F99A4();
    v2[2] = &protocol witness table for AppleVendorTopCaseReport;
    v2[3] = &protocol witness table for AppleVendorTopCaseReport;
    v2[4] = sub_2498F99E0();
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for <> GenericKeyboardGesture<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578A2360);
  }
  return result;
}

unint64_t sub_2498F99A4()
{
  unint64_t result;

  result = qword_2578A2370;
  if (!qword_2578A2370)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseReport, &type metadata for AppleVendorTopCaseReport);
    atomic_store(result, (unint64_t *)&qword_2578A2370);
  }
  return result;
}

unint64_t sub_2498F99E0()
{
  unint64_t result;

  result = qword_2578A1258;
  if (!qword_2578A1258)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseUsage, &type metadata for AppleVendorTopCaseUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1258);
  }
  return result;
}

unint64_t sub_2498F9A1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_2578A2380;
  if (!qword_2578A2380)
  {
    v1 = type metadata accessor for AppleVendorKeyboardGesture(255);
    v2[0] = sub_2498ED4F4();
    v2[1] = sub_2498F9AAC();
    v2[2] = &protocol witness table for AppleVendorKeyboardReport;
    v2[3] = &protocol witness table for AppleVendorKeyboardReport;
    v2[4] = sub_2498F9AE8();
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for <> GenericKeyboardGesture<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578A2380);
  }
  return result;
}

unint64_t sub_2498F9AAC()
{
  unint64_t result;

  result = qword_2578A2390;
  if (!qword_2578A2390)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardReport, &type metadata for AppleVendorKeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A2390);
  }
  return result;
}

unint64_t sub_2498F9AE8()
{
  unint64_t result;

  result = qword_2578A1260;
  if (!qword_2578A1260)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardUsage, &type metadata for AppleVendorKeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1260);
  }
  return result;
}

unint64_t sub_2498F9B24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_2578A23A0;
  if (!qword_2578A23A0)
  {
    v1 = type metadata accessor for ConsumerGesture(255);
    v2[0] = sub_2498F9BB4();
    v2[1] = sub_2498F9BF0();
    v2[2] = &protocol witness table for ConsumerReport;
    v2[3] = &protocol witness table for ConsumerReport;
    v2[4] = sub_2498F9C2C();
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for <> GenericKeyboardGesture<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578A23A0);
  }
  return result;
}

unint64_t sub_2498F9BB4()
{
  unint64_t result;

  result = qword_2578A1268;
  if (!qword_2578A1268)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerReport, &type metadata for ConsumerReport);
    atomic_store(result, (unint64_t *)&qword_2578A1268);
  }
  return result;
}

unint64_t sub_2498F9BF0()
{
  unint64_t result;

  result = qword_2578A23B0;
  if (!qword_2578A23B0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerReport, &type metadata for ConsumerReport);
    atomic_store(result, (unint64_t *)&qword_2578A23B0);
  }
  return result;
}

unint64_t sub_2498F9C2C()
{
  unint64_t result;

  result = qword_2578A1270;
  if (!qword_2578A1270)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerUsage, &type metadata for ConsumerUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1270);
  }
  return result;
}

unint64_t sub_2498F9C68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_2578A23C0;
  if (!qword_2578A23C0)
  {
    v1 = type metadata accessor for KeyboardGesture(255);
    v2[0] = sub_2498E8DF0();
    v2[1] = sub_2498F9CF8();
    v2[2] = &protocol witness table for KeyboardReport;
    v2[3] = &protocol witness table for KeyboardReport;
    v2[4] = sub_2498F9D34();
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for <> GenericKeyboardGesture<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_2578A23C0);
  }
  return result;
}

unint64_t sub_2498F9CF8()
{
  unint64_t result;

  result = qword_2578A23D0;
  if (!qword_2578A23D0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardReport, &type metadata for KeyboardReport);
    atomic_store(result, (unint64_t *)&qword_2578A23D0);
  }
  return result;
}

unint64_t sub_2498F9D34()
{
  unint64_t result;

  result = qword_2578A1278;
  if (!qword_2578A1278)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardUsage, &type metadata for KeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1278);
  }
  return result;
}

void sub_2498F9D70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498F9DB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498F9DE8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_6_0();
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  return sub_249955AFC();
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_14_8(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_20_8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_2498F9D70(v3 - 144, v3 - 112, a3);
}

uint64_t OUTLINED_FUNCTION_22_7(unsigned int a1)
{
  uint64_t v1;

  return sub_249932B64(a1, v1);
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  return swift_release();
}

void OUTLINED_FUNCTION_25_6(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_26_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return __swift_storeEnumTagSinglePayload(v4, 0, 1, a4);
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_30_2(uint64_t a1)
{
  uint64_t v1;

  return sub_2498EFFC8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v0, *(_QWORD *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_37_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_44_1()
{
  JUMPOUT(0x24BCFB904);
}

uint64_t OUTLINED_FUNCTION_47_1(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2498F7698(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_249955BA4();
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_52_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2498F9DB0(v2 - 112, a2);
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_60(uint64_t a1)
{
  uint64_t v1;

  return sub_2498E2300(a1, v1);
}

void OUTLINED_FUNCTION_61_0(_QWORD *a1)
{
  uint64_t *v1;

  sub_2498F98E0(a1, v1);
}

uint64_t ReportID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v5;

  sub_249955904();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

void UsagePage.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_2498FA3BC(a1, a2, 5, a3);
}

void Usage.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_2498FA3BC(a1, a2, 17, a3);
}

void LogicalMinimum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 6, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void LogicalMaximum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 7, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void ReportSize.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 12, (uint64_t (*)(char *, uint64_t))sub_2498FCA34, a2);
}

void ReportCount.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 14, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

{
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = 14;
    sub_2498FC7A0((uint64_t)&v5, a1);
    *a2 = v3;
    a2[1] = v4;
    OUTLINED_FUNCTION_11_7();
  }
}

void Input.init(_:_:_:_:_:_:_:_:)(unsigned __int8 *a1@<X0>, _BYTE *a2@<X1>, _BYTE *a3@<X2>, _BYTE *a4@<X3>, _BYTE *a5@<X4>, _BYTE *a6@<X5>, _BYTE *a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v9 = 2;
  if (!*a2)
    v9 = 0;
  v10 = v9 | *a1;
  v11 = 4;
  if (!*a3)
    v11 = 0;
  v12 = 8;
  if (!*a4)
    v12 = 0;
  v13 = v10 | v11 | v12;
  v14 = 16;
  if (!*a5)
    v14 = 0;
  v15 = 32;
  if (!*a6)
    v15 = 0;
  v16 = v14 | v15;
  v17 = 64;
  if (!*a7)
    v17 = 0;
  v20 = 0;
  sub_2498FC7A0((uint64_t)&v20, v13 | v16 | v17);
  *a8 = v18;
  a8[1] = v19;
  OUTLINED_FUNCTION_11_7();
}

uint64_t static HIDReportDescriptor.Builder.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  __int128 v7[2];
  uint64_t v8;
  uint64_t v9[5];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];
  __int128 v14;

  v14 = xmmword_2499579D0;
  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2498CF8CC(v2, (uint64_t)v13);
      sub_2498CF8CC((uint64_t)v13, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A12A8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A12B0);
      if (swift_dynamicCast())
      {
        sub_2498CF9C0(v7, (uint64_t)v10);
        v3 = v11;
        v4 = v12;
        __swift_project_boxed_opaque_existential_1(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
        sub_24995567C();
        OUTLINED_FUNCTION_20_9();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        v5 = v10;
      }
      else
      {
        v8 = 0;
        memset(v7, 0, sizeof(v7));
        sub_2498FD5D4((uint64_t)v7);
        sub_2498CF8CC((uint64_t)v13, (uint64_t)v10);
        if (!swift_dynamicCast())
        {
          result = sub_249955D6C();
          __break(1u);
          return result;
        }
        sub_2498CAC78(v9[0], v9[1]);
        sub_24995567C();
        OUTLINED_FUNCTION_20_9();
        OUTLINED_FUNCTION_20_9();
        v5 = v13;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
  }
  return 0;
}

void ApplicationCollection.init(content:)(_QWORD *a1@<X8>)
{
  sub_2498FCE38((uint64_t (*)(void))sub_2498FCD48, a1);
}

void HIDReportDescriptor.init(content:)(uint64_t (*a1)(void)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = a1();
  a2[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void UsageMinimum.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_2498FA3BC(a1, a2, 18, a3);
}

void UsageMaximum.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_2498FA3BC(a1, a2, 19, a3);
}

void sub_2498FA3BC(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD, _QWORD, _QWORD);
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v41 = a3;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_29_3();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_35_1();
  v38 = v10;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_40_2();
  v43 = v12;
  OUTLINED_FUNCTION_28();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
  v42 = a1;
  v40 = v19;
  v19((char *)&v36 - v17, a1, a2);
  if ((OUTLINED_FUNCTION_27_7() & 1) != 0)
  {
    OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_21_9();
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_34_3();
    v20 = sub_249955808();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, a2);
    if ((v20 & 1) == 0)
      goto LABEL_16;
  }
  if (OUTLINED_FUNCTION_36_3() < 64)
  {
LABEL_15:
    v31 = OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_13_9((uint64_t)v18);
    v44 = v41;
    sub_2498FCA34((uint64_t)&v44, v31);
    v33 = v32;
    v35 = v34;
    OUTLINED_FUNCTION_13_9(v42);
    *a4 = v33;
    a4[1] = v35;
    OUTLINED_FUNCTION_4_0();
    return;
  }
  v39 = v9;
  v37 = a4;
  OUTLINED_FUNCTION_30_3(v43, (uint64_t)v18);
  v45 = -1;
  v21 = OUTLINED_FUNCTION_27_7();
  v22 = OUTLINED_FUNCTION_36_3();
  if ((v21 & 1) == 0)
  {
    if (v22 < 65)
    {
      v29 = v43;
      OUTLINED_FUNCTION_14_9();
      a4 = v37;
      goto LABEL_14;
    }
LABEL_10:
    sub_2498FCE98();
    sub_249955B14();
    OUTLINED_FUNCTION_34_3();
    v29 = v43;
    v30 = sub_2499557FC();
    OUTLINED_FUNCTION_13_9((uint64_t)v16);
    a4 = v37;
    if ((v30 & 1) != 0)
      goto LABEL_16;
    goto LABEL_14;
  }
  if (v22 > 64)
    goto LABEL_10;
  OUTLINED_FUNCTION_26_5();
  OUTLINED_FUNCTION_21_9();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_34_3();
  v23 = v43;
  v24 = sub_2499557F0();
  OUTLINED_FUNCTION_13_9((uint64_t)v16);
  v25 = v45;
  v26 = v38;
  OUTLINED_FUNCTION_30_3(v38, v23);
  a4 = v37;
  if ((v24 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_9(v26);
    v29 = v43;
    goto LABEL_14;
  }
  v27 = OUTLINED_FUNCTION_14_9();
  OUTLINED_FUNCTION_13_9(v26);
  v28 = v25 >= v27;
  v29 = v43;
  if (v28)
  {
LABEL_14:
    OUTLINED_FUNCTION_13_9(v29);
    goto LABEL_15;
  }
LABEL_16:
  OUTLINED_FUNCTION_50();
  sub_249955D60();
  __break(1u);
}

void LogicalCollection.init(content:)(_QWORD *a1@<X8>)
{
  sub_2498FCE38((uint64_t (*)(void))sub_2498FCD94, a1);
}

void sub_2498FA778(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FA7B0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FA808(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FA840()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FA898(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FA8D0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FA928(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FA960()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FA9B8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FA9F0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAA48(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAA80()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAAD8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAB10()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAB68(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FABA0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FABF8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAC30()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAC88(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FACC0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAD18(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAD50()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FADA8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FADE0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAE38(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAE70()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAEC8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAF00()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAF58(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FAF90()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FAFE8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FB020()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FB078(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FB0B0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FB108(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FB140()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FB198(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2498FB1D0()
{
  unint64_t v0;
  uint64_t v1;
  char v2;

  sub_2498CAC78(v1, v0);
  v2 = sub_2499556A0();
  sub_2498CACBC(v1, v0);
  return qword_249958FA8[v2 & 3];
}

void sub_2498FB228(unsigned __int8 a1)
{
  uint64_t v1;
  char v3;
  char v4;

  v4 = 13;
  v1 = a1;
  sub_2498FC7A0((uint64_t)&v4, a1);
  v3 = 13;
  sub_2498FC7A0((uint64_t)&v3, v1);
  __asm { BR              X10 }
}

uint64_t sub_2498FB28C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  sub_2498CACBC(v4, a2);
  v5 = sub_2499556A0();
  sub_2498CACBC(v2, v3);
  return qword_249958FA8[v5 & 3];
}

void HIDReportDescriptorItemProtocol.bSize.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(void);

  v4 = *(void (**)(void))(a2 + 40);
  v4();
  ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  __asm { BR              X10 }
}

uint64_t sub_2498FB354(uint64_t a1, unint64_t a2)
{
  char v2;

  OUTLINED_FUNCTION_18_9(a1, a2);
  v2 = sub_2499556A0();
  OUTLINED_FUNCTION_5_8();
  return qword_249958FA8[v2 & 3];
}

void sub_2498FB3B0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB3F0()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB468);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB478(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB4B8()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB530);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB540(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB580()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB5F8);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB608(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB648()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB6C0);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB6D0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB710()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB788);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB798(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB7D8()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB850);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB860(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB8A0()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB918);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB928(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FB968()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FB9E0);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FB9F0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBA30()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBAA8);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBAB8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBAF8()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBB70);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBB80(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBBC0()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBC38);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBC48(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBC88()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBD00);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBD10(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBD50()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBDC8);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBDD8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBE18()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBE90);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBEA0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBEE0()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FBF58);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FBF68(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FBFA8()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC020);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FC030(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC070()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC0E8);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FC0F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC138()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC1B0);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FC1C0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC200()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC278);
  }
  *v0 = byte_249958FC8[v5];
  return result;
}

void sub_2498FC288(unsigned __int8 a1@<W0>, _BYTE *a2@<X8>)
{
  char v3;

  sub_2498FC3C0(a1);
  *a2 = byte_249958FC8[v3];
}

void HIDReportDescriptorItemProtocol.bType.getter(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(a1 + 32))(&v3);
  *a2 = byte_249958FC8[(char)v3];
  OUTLINED_FUNCTION_11_7();
}

void sub_2498FC304(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC344()
{
  _BYTE *v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v5;

  sub_2498CAC78(v2, v1);
  v3 = sub_2499556A0();
  sub_2498CACBC(v2, v1);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v5 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC3B0);
  }
  *v0 = v5;
  return result;
}

void sub_2498FC3C0(unsigned __int8 a1)
{
  uint64_t v1;
  char v3;
  char v4[2];

  v4[0] = 13;
  v1 = a1;
  sub_2498FC7A0((uint64_t)v4, a1);
  v3 = 13;
  sub_2498FC7A0((uint64_t)&v3, v1);
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC42C(uint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v8;

  sub_2498CACBC(v5, a2);
  v6 = sub_2499556A0();
  sub_2498CACBC(v3, v4);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC4B0);
  }
  *v2 = v8;
  return result;
}

void HIDReportDescriptorItemProtocol.bTag.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(void);

  v4 = *(void (**)(void))(a2 + 40);
  v4();
  ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  __asm { BR              X10 }
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC524(uint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;
  char v7;

  OUTLINED_FUNCTION_18_9(a1, a2);
  v5 = sub_2499556A0();
  sub_2498CACBC(v3, v4);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v5 >> 2).value;
  if (v7 == 28)
  {
    __break(1u);
    JUMPOUT(0x2498FC5A0);
  }
  *v2 = v7;
  return result;
}

void HIDReportDescriptor.init(bytes:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  *a2 = sub_2498D3060(a1);
  a2[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

UniversalHID::HIDReportDescriptor::ItemType_optional __swiftcall HIDReportDescriptor.ItemType.init(rawValue:)(Swift::UInt8 rawValue)
{
  _BYTE *v1;
  UniversalHID::HIDReportDescriptor::ItemType_optional result;

  OUTLINED_FUNCTION_19_8(v1);
  return result;
}

uint64_t HIDReportDescriptor.ItemType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

UniversalHID::HIDReportDescriptor::ItemType_optional sub_2498FC5EC(Swift::UInt8 *a1)
{
  return HIDReportDescriptor.ItemType.init(rawValue:)(*a1);
}

void sub_2498FC5F4(_BYTE *a1@<X8>)
{
  *a1 = HIDReportDescriptor.ItemType.rawValue.getter();
  OUTLINED_FUNCTION_6_0();
}

void HIDReportDescriptor.ItemTag.bType.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_19_8(a1);
}

uint64_t HIDReportDescriptor.ItemTag.rawValue.getter()
{
  char *v0;

  return byte_249958FE4[*v0];
}

UniversalHID::HIDReportDescriptor::ItemTag_optional __swiftcall HIDReportDescriptor.ItemTag.init(rawValue:)(Swift::UInt8 rawValue)
{
  _BYTE *v1;
  UniversalHID::HIDReportDescriptor::ItemTag_optional result;

  OUTLINED_FUNCTION_19_8(v1);
  return result;
}

BOOL sub_2498FC748(char *a1, char *a2)
{
  return sub_249942048(*a1, *a2);
}

void sub_2498FC754()
{
  sub_2499327A8();
}

void sub_2498FC75C()
{
  sub_24993295C();
}

void sub_2498FC764()
{
  sub_249932A60();
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2498FC76C(Swift::UInt8 *a1)
{
  return HIDReportDescriptor.ItemTag.init(rawValue:)(*a1);
}

void sub_2498FC774(_BYTE *a1@<X8>)
{
  *a1 = HIDReportDescriptor.ItemTag.rawValue.getter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FC7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (a2 == (int)a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1298);
    v3 = OUTLINED_FUNCTION_33_3();
    OUTLINED_FUNCTION_32_3(v3, (__n128)xmmword_2499568A0);
    v5 = v4 >> 62;
    if (a2 >> 8 == a2 >> 7)
      __asm { BR              X11 }
    if (a2 >> 15 == a2 >> 16)
      __asm { BR              X11 }
    __asm { BR              X11 }
  }
  __break(1u);
  JUMPOUT(0x2498FC9C4);
}

void sub_2498FCA34(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if (!HIDWORD(a2))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1298);
    v3 = OUTLINED_FUNCTION_33_3();
    OUTLINED_FUNCTION_32_3(v3, (__n128)xmmword_2499568A0);
    v5 = v4 >> 62;
    if (a2 <= 0xFF)
      __asm { BR              X11 }
    if (!(a2 >> 16))
      __asm { BR              X11 }
    __asm { BR              X11 }
  }
  __break(1u);
  JUMPOUT(0x2498FCC3CLL);
}

void sub_2498FCCAC()
{
  uint64_t *v0;

  sub_2498FADA8(*v0, v0[1]);
}

void sub_2498FCCB4()
{
  uint64_t *v0;

  sub_2498FB3B0(*v0, v0[1]);
}

UniversalHID::Input::Bit0_optional __swiftcall Input.Bit0.init(rawValue:)(Swift::UInt8 rawValue)
{
  _BYTE *v1;
  UniversalHID::Input::Bit0_optional result;

  OUTLINED_FUNCTION_19_8(v1);
  return result;
}

uint64_t Input.Bit0.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_2498FCCE0()
{
  unsigned __int8 *v0;

  return sub_2499327DC(*v0);
}

void sub_2498FCCE8()
{
  sub_249932900();
}

uint64_t sub_2498FCCF0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_249932AD0(a1, *v1);
}

UniversalHID::Input::Bit0_optional sub_2498FCCF8(Swift::UInt8 *a1)
{
  return Input.Bit0.init(rawValue:)(*a1);
}

void sub_2498FCD00(_BYTE *a1@<X8>)
{
  *a1 = Input.Bit0.rawValue.getter();
  OUTLINED_FUNCTION_6_0();
}

BOOL sub_2498FCD20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249943048(*a1, *a2);
}

uint64_t sub_2498FCD2C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2499409F8(a1, *v1);
}

void sub_2498FCD34()
{
  uint64_t *v0;

  sub_2498FB078(*v0, v0[1]);
}

void sub_2498FCD3C()
{
  uint64_t *v0;

  sub_2498FB478(*v0, v0[1]);
}

void sub_2498FCD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_8();
  sub_2498FC7A0(v0, 1);
  OUTLINED_FUNCTION_31_2(v1, v2);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  sub_2498D3060((uint64_t)&unk_251AC4BB0);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_37();
}

void sub_2498FCD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_8();
  sub_2498FC7A0(v0, 2);
  OUTLINED_FUNCTION_31_2(v1, v2);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  sub_2498D3060((uint64_t)&unk_251AC4D10);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_37();
}

void sub_2498FCDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_8();
  sub_2498FC7A0(v0, 0);
  OUTLINED_FUNCTION_31_2(v1, v2);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  sub_2498D3060((uint64_t)&unk_251AC4DC0);
  OUTLINED_FUNCTION_1_15();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_37();
}

void PhysicalCollection.init(content:)(_QWORD *a1@<X8>)
{
  sub_2498FCE38((uint64_t (*)(void))sub_2498FCDE0, a1);
}

void sub_2498FCE38(uint64_t (*a1)(void)@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = a1();
  a2[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FCE58()
{
  uint64_t *v0;

  sub_2498FAD18(*v0, v0[1]);
}

void sub_2498FCE60()
{
  uint64_t *v0;

  sub_2498FB540(*v0, v0[1]);
}

void sub_2498FCE68()
{
  uint64_t *v0;

  sub_2498FAE38(*v0, v0[1]);
}

void sub_2498FCE70()
{
  uint64_t *v0;

  sub_2498FB608(*v0, v0[1]);
}

void sub_2498FCE78()
{
  uint64_t *v0;

  sub_2498FAC88(*v0, v0[1]);
}

void sub_2498FCE80()
{
  uint64_t *v0;

  sub_2498FB6D0(*v0, v0[1]);
}

void UsagePage.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 5, (uint64_t (*)(char *, uint64_t))sub_2498FCA34, a2);
}

unint64_t sub_2498FCE98()
{
  unint64_t result;

  result = qword_2578A12A0;
  if (!qword_2578A12A0)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2578A12A0);
  }
  return result;
}

void sub_2498FCED4()
{
  uint64_t *v0;

  sub_2498FB198(*v0, v0[1]);
}

void sub_2498FCEDC()
{
  uint64_t *v0;

  sub_2498FB798(*v0, v0[1]);
}

void LogicalMinimum.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_2498FCF04(a1, a2, a3, 6, a4);
}

void sub_2498FCEEC()
{
  uint64_t *v0;

  sub_2498FAAD8(*v0, v0[1]);
}

void sub_2498FCEF4()
{
  uint64_t *v0;

  sub_2498FB860(*v0, v0[1]);
}

void LogicalMaximum.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_2498FCF04(a1, a2, a3, 7, a4);
}

void sub_2498FCF04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;

  v62 = a4;
  v64 = a5;
  v57[2] = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_29_3();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v57[1] = (char *)v57 - v9;
  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_35_1();
  v57[0] = v11;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_40_2();
  v58 = v13;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_40_2();
  v61 = v15;
  OUTLINED_FUNCTION_28();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v57 - v18;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_2();
  v60 = v20;
  OUTLINED_FUNCTION_28();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v57 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v57 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v57 - v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v63 = a1;
  v30((char *)v57 - v28, a1, a2);
  LOBYTE(a1) = OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_10_9((uint64_t)v27);
  v59 = v10;
  if ((a1 & 1) == 0)
  {
    v32 = (uint64_t)v27;
    goto LABEL_7;
  }
  v31 = OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_14_2((uint64_t)v27);
  if (v31 <= 64)
    goto LABEL_8;
  OUTLINED_FUNCTION_10_9((uint64_t)v24);
  v66 = 0x8000000000000000;
  if ((OUTLINED_FUNCTION_3_11() & 1) != 0)
  {
    if (OUTLINED_FUNCTION_8_9() < 64)
    {
LABEL_26:
      v52 = OUTLINED_FUNCTION_14_9();
      OUTLINED_FUNCTION_14_2((uint64_t)v24);
      if (v52 < v66)
        goto LABEL_33;
      goto LABEL_8;
    }
LABEL_22:
    sub_2498CB760();
    v50 = v60;
    OUTLINED_FUNCTION_12_10();
    v51 = OUTLINED_FUNCTION_7_10();
    OUTLINED_FUNCTION_14_2(v50);
    OUTLINED_FUNCTION_14_2((uint64_t)v24);
    if ((v51 & 1) != 0)
      goto LABEL_33;
LABEL_8:
    v33 = OUTLINED_FUNCTION_8_9();
    OUTLINED_FUNCTION_10_9((uint64_t)v19);
    if (v33 < 65)
    {
      v34 = OUTLINED_FUNCTION_8_9();
      OUTLINED_FUNCTION_14_2((uint64_t)v19);
      if (v34 != 64 || (OUTLINED_FUNCTION_3_11() & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      OUTLINED_FUNCTION_14_2((uint64_t)v19);
    }
    v35 = v61;
    OUTLINED_FUNCTION_10_9(v61);
    v66 = 0x7FFFFFFFFFFFFFFFLL;
    v36 = OUTLINED_FUNCTION_3_11();
    v37 = OUTLINED_FUNCTION_8_9();
    if ((v36 & 1) != 0)
    {
      if (v37 > 64)
      {
        sub_2498CB760();
        v38 = v60;
        OUTLINED_FUNCTION_12_10();
        v39 = OUTLINED_FUNCTION_7_10();
        OUTLINED_FUNCTION_14_2(v38);
        v40 = v35;
LABEL_18:
        OUTLINED_FUNCTION_14_2(v40);
        if ((v39 & 1) == 0)
          goto LABEL_19;
        __break(1u);
        goto LABEL_32;
      }
    }
    else if (v37 > 63)
    {
      v65 = 0x7FFFFFFFFFFFFFFFLL;
      v41 = v60;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v60, v35, a2);
      sub_2498CB760();
      v35 = v58;
      OUTLINED_FUNCTION_12_10();
      OUTLINED_FUNCTION_34_3();
      v39 = sub_2499557FC();
      OUTLINED_FUNCTION_14_2(v35);
      v40 = v41;
      goto LABEL_18;
    }
    OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_14_2(v35);
LABEL_19:
    v42 = OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_14_2((uint64_t)v29);
    LOBYTE(v66) = v62;
    sub_2498FC7A0((uint64_t)&v66, v42);
    v44 = v43;
    v46 = v45;
    OUTLINED_FUNCTION_14_2(v63);
    v47 = v64;
    *v64 = v44;
    v47[1] = v46;
    OUTLINED_FUNCTION_4_0();
    return;
  }
  v48 = OUTLINED_FUNCTION_3_11();
  v49 = OUTLINED_FUNCTION_8_9();
  if ((v48 & 1) == 0)
  {
    if (v49 < 64)
      goto LABEL_26;
    v32 = (uint64_t)v24;
LABEL_7:
    OUTLINED_FUNCTION_14_2(v32);
    goto LABEL_8;
  }
  if (v49 > 64)
    goto LABEL_22;
  swift_getAssociatedConformanceWitness();
  sub_249955F34();
  v53 = v60;
  sub_249955F10();
  v54 = OUTLINED_FUNCTION_7_10();
  OUTLINED_FUNCTION_14_2(v53);
  v35 = v57[0];
  (*(void (**)(_QWORD, char *, uint64_t))(v59 + 32))(v57[0], v24, a2);
  if ((v54 & 1) == 0)
  {
    v55 = v66;
    v56 = OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_14_2(v35);
    if (v56 < v55)
      goto LABEL_33;
    goto LABEL_8;
  }
LABEL_32:
  OUTLINED_FUNCTION_14_2(v35);
LABEL_33:
  __break(1u);
}

void sub_2498FD3C4()
{
  uint64_t *v0;

  sub_2498FAA48(*v0, v0[1]);
}

void sub_2498FD3CC()
{
  uint64_t *v0;

  sub_2498FB928(*v0, v0[1]);
}

void PhysicalMinimum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 8, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void sub_2498FD3E4()
{
  uint64_t *v0;

  sub_2498FABF8(*v0, v0[1]);
}

void sub_2498FD3EC()
{
  uint64_t *v0;

  sub_2498FB9F0(*v0, v0[1]);
}

void PhysicalMaximum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 9, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void sub_2498FD404()
{
  uint64_t *v0;

  sub_2498FAB68(*v0, v0[1]);
}

void sub_2498FD40C()
{
  uint64_t *v0;

  sub_2498FBAB8(*v0, v0[1]);
}

void UnitExponent.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 10, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void sub_2498FD424()
{
  uint64_t *v0;

  sub_2498FA898(*v0, v0[1]);
}

void sub_2498FD42C()
{
  uint64_t *v0;

  sub_2498FBB80(*v0, v0[1]);
}

void Unit.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 11, (uint64_t (*)(char *, uint64_t))sub_2498FC7A0, a2);
}

void sub_2498FD444()
{
  uint64_t *v0;

  sub_2498FAFE8(*v0, v0[1]);
}

void sub_2498FD44C()
{
  uint64_t *v0;

  sub_2498FBC48(*v0, v0[1]);
}

uint64_t ReportID.rawValue.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ReportID.rawValue.modify())()
{
  return nullsub_1;
}

void sub_2498FD470(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_19_8(a1);
}

void ReportID.data.getter(unsigned __int8 a1)
{
  char v1;

  v1 = 13;
  sub_2498FC7A0((uint64_t)&v1, a1);
}

void sub_2498FD4A8()
{
  unsigned __int8 *v0;

  sub_2498FB228(*v0);
}

void sub_2498FD4B0(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;

  sub_2498FC288(*v1, a1);
}

void sub_2498FD4B8()
{
  unsigned __int8 *v0;

  sub_2498FC3C0(*v0);
}

void sub_2498FD4C0()
{
  unsigned __int8 *v0;

  ReportID.data.getter(*v0);
}

void sub_2498FD504()
{
  uint64_t *v0;

  sub_2498FA808(*v0, v0[1]);
}

void sub_2498FD50C()
{
  uint64_t *v0;

  sub_2498FBD10(*v0, v0[1]);
}

void Push.init()(uint64_t *a1@<X8>)
{
  sub_2498FD53C((uint64_t)&unk_251AC4DE8, a1);
}

void sub_2498FD520()
{
  uint64_t *v0;

  sub_2498FAF58(*v0, v0[1]);
}

void sub_2498FD528()
{
  uint64_t *v0;

  sub_2498FBDD8(*v0, v0[1]);
}

void Pop.init()(uint64_t *a1@<X8>)
{
  sub_2498FD53C((uint64_t)&unk_251AC4E10, a1);
}

void sub_2498FD53C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;

  *a2 = sub_2498D3060(a1);
  a2[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FD55C()
{
  uint64_t *v0;

  sub_2498FAEC8(*v0, v0[1]);
}

void sub_2498FD564()
{
  uint64_t *v0;

  sub_2498FBEA0(*v0, v0[1]);
}

uint64_t ReportSize.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2498CAC78(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void sub_2498FD59C()
{
  uint64_t *v0;

  sub_2498FA778(*v0, v0[1]);
}

void sub_2498FD5A4()
{
  uint64_t *v0;

  sub_2498FBF68(*v0, v0[1]);
}

void sub_2498FD5AC()
{
  uint64_t *v0;

  sub_2498FC304(*v0, v0[1]);
}

void Usage.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 17, (uint64_t (*)(char *, uint64_t))sub_2498FCA34, a2);
}

uint64_t sub_2498FD5D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A12B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2498FD614()
{
  uint64_t *v0;

  sub_2498FB108(*v0, v0[1]);
}

void sub_2498FD61C()
{
  uint64_t *v0;

  sub_2498FC030(*v0, v0[1]);
}

void UsageMinimum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 18, (uint64_t (*)(char *, uint64_t))sub_2498FCA34, a2);
}

void sub_2498FD634()
{
  uint64_t *v0;

  sub_2498FA9B8(*v0, v0[1]);
}

void sub_2498FD63C()
{
  uint64_t *v0;

  sub_2498FC0F8(*v0, v0[1]);
}

void UsageMaximum.init(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2498FD654(a1, 19, (uint64_t (*)(char *, uint64_t))sub_2498FCA34, a2);
}

void sub_2498FD654(uint64_t a1@<X0>, char a2@<W1>, uint64_t (*a3)(char *, uint64_t)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  char v6;

  v6 = a2;
  *a4 = a3(&v6, a1);
  a4[1] = v5;
  OUTLINED_FUNCTION_11_7();
}

unint64_t sub_2498FD68C()
{
  unint64_t result;

  result = qword_2578A12C0;
  if (!qword_2578A12C0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReportDescriptor.ItemType, &type metadata for HIDReportDescriptor.ItemType);
    atomic_store(result, (unint64_t *)&qword_2578A12C0);
  }
  return result;
}

unint64_t sub_2498FD6CC()
{
  unint64_t result;

  result = qword_2578A12C8;
  if (!qword_2578A12C8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReportDescriptor.ItemTag, &type metadata for HIDReportDescriptor.ItemTag);
    atomic_store(result, (unint64_t *)&qword_2578A12C8);
  }
  return result;
}

unint64_t sub_2498FD70C()
{
  unint64_t result;

  result = qword_2578A12D0;
  if (!qword_2578A12D0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit0, &type metadata for Input.Bit0);
    atomic_store(result, (unint64_t *)&qword_2578A12D0);
  }
  return result;
}

unint64_t sub_2498FD74C()
{
  unint64_t result;

  result = qword_2578A12D8;
  if (!qword_2578A12D8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit1, &type metadata for Input.Bit1);
    atomic_store(result, (unint64_t *)&qword_2578A12D8);
  }
  return result;
}

unint64_t sub_2498FD78C()
{
  unint64_t result;

  result = qword_2578A12E0;
  if (!qword_2578A12E0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit2, &type metadata for Input.Bit2);
    atomic_store(result, (unint64_t *)&qword_2578A12E0);
  }
  return result;
}

unint64_t sub_2498FD7CC()
{
  unint64_t result;

  result = qword_2578A12E8;
  if (!qword_2578A12E8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit3, &type metadata for Input.Bit3);
    atomic_store(result, (unint64_t *)&qword_2578A12E8);
  }
  return result;
}

unint64_t sub_2498FD80C()
{
  unint64_t result;

  result = qword_2578A12F0;
  if (!qword_2578A12F0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit4, &type metadata for Input.Bit4);
    atomic_store(result, (unint64_t *)&qword_2578A12F0);
  }
  return result;
}

unint64_t sub_2498FD84C()
{
  unint64_t result;

  result = qword_2578A12F8;
  if (!qword_2578A12F8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit5, &type metadata for Input.Bit5);
    atomic_store(result, (unint64_t *)&qword_2578A12F8);
  }
  return result;
}

unint64_t sub_2498FD88C()
{
  unint64_t result;

  result = qword_2578A1300;
  if (!qword_2578A1300)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit6, &type metadata for Input.Bit6);
    atomic_store(result, (unint64_t *)&qword_2578A1300);
  }
  return result;
}

unint64_t sub_2498FD8CC()
{
  unint64_t result;

  result = qword_2578A1308;
  if (!qword_2578A1308)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for Input.Bit8, &type metadata for Input.Bit8);
    atomic_store(result, (unint64_t *)&qword_2578A1308);
  }
  return result;
}

unint64_t sub_2498FD90C()
{
  unint64_t result;

  result = qword_2578A1310;
  if (!qword_2578A1310)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ReportID, &type metadata for ReportID);
    atomic_store(result, (unint64_t *)&qword_2578A1310);
  }
  return result;
}

void sub_2498FD948()
{
  uint64_t *v0;

  sub_2498FA928(*v0, v0[1]);
}

void sub_2498FD950()
{
  uint64_t *v0;

  sub_2498FC1C0(*v0, v0[1]);
}

void type metadata accessor for HIDReportDescriptor()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t getEnumTagSinglePayload for ScrollGesture.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDReportDescriptor.ItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2498FDA44 + 4 * byte_2499582CC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2498FDA78 + 4 * byte_2499582C7[v4]))();
}

uint64_t sub_2498FDA78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDA80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498FDA88);
  return result;
}

uint64_t sub_2498FDA94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498FDA9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2498FDAA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDAA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HIDReportDescriptor.ItemType()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t getEnumTagSinglePayload for HIDReportDescriptor.ItemTag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 27) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v5 = v6 - 28;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDReportDescriptor.ItemTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_2498FDB94 + 4 * byte_2499582D6[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_2498FDBC8 + 4 * byte_2499582D1[v4]))();
}

uint64_t sub_2498FDBC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDBD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498FDBD8);
  return result;
}

uint64_t sub_2498FDBE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498FDBECLL);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_2498FDBF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDBF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HIDReportDescriptor.ItemTag()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.bType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.bTag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void type metadata accessor for Input()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit0()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit1()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit2()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit3()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit4()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit5()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Input.Bit6()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t _s12UniversalHID5InputV4Bit0Owst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2498FDCE0 + 4 * byte_2499582E0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2498FDD14 + 4 * byte_2499582DB[v4]))();
}

uint64_t sub_2498FDD14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDD1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498FDD24);
  return result;
}

uint64_t sub_2498FDD30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498FDD38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2498FDD3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498FDD44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Input.Bit8()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for PhysicalCollection()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for ApplicationCollection()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for LogicalCollection()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for UsagePage()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for LogicalMinimum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for LogicalMaximum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for PhysicalMinimum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for PhysicalMaximum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for UnitExponent()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Unit()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for ReportID()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for ReportCount()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Push()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Pop()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for ReportSize()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for Usage()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for UsageMinimum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for UsageMaximum()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for HIDReportDescriptor.Builder()
{
  OUTLINED_FUNCTION_21_5();
}

void _s12UniversalHID19HIDReportDescriptorVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_2498CAC78(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2498CACBC(v5, v6);
  OUTLINED_FUNCTION_18_3();
}

void type metadata accessor for HIDReportDescriptor.Item()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t sub_2498FDE88(char a1)
{
  _QWORD v3[3];
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1318);
  v5 = sub_2498FDF34();
  LOBYTE(v3[0]) = a1;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  sub_249955604();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

unint64_t sub_2498FDF34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1320;
  if (!qword_2578A1320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1318);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDD06A0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1320);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return sub_24995567C();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  return sub_2499557FC();
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_10_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  return sub_249955B14();
}

uint64_t OUTLINED_FUNCTION_13_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_9()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  return sub_249955F10();
}

uint64_t OUTLINED_FUNCTION_18_9(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2498CACBC(v2, a2);
}

void OUTLINED_FUNCTION_19_8(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return sub_249955F34();
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  char v0;

  return sub_2498FDE88(v0);
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_30_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 128))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_31_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, a2);
}

uint64_t OUTLINED_FUNCTION_32_3(uint64_t a1, __n128 a2)
{
  char v2;

  *(__n128 *)(a1 + 16) = a2;
  *(_BYTE *)(a1 + 32) = v2;
  return sub_2498D3060(a1);
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  __int16 v0;

  return sub_2498FDE88(SHIBYTE(v0));
}

uint64_t static AbsolutePointerReport.initialReportBitCount.getter()
{
  return 152;
}

uint64_t static AbsolutePointerReport.reportID.getter()
{
  return 19;
}

uint64_t sub_2498FE1C8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498FE1E8();
  *(_QWORD *)&xmmword_2578A1328 = result;
  *((_QWORD *)&xmmword_2578A1328 + 1) = v1;
  return result;
}

uint64_t sub_2498FE1E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  LOBYTE(v17) = 17;
  sub_2498FCA34((uint64_t)&v17, 1uLL);
  v1 = v0;
  v3 = v2;
  LOBYTE(v17) = 3;
  sub_2498FC7A0((uint64_t)&v17, 0);
  v17 = v4;
  v18 = v5;
  v6 = sub_2498FE344();
  v8 = v7;
  sub_24995567C();
  sub_2498CACBC(v6, v8);
  v9 = sub_2498D3060((uint64_t)&unk_251AC4B88);
  v11 = v10;
  sub_24995567C();
  sub_2498CACBC(v9, v11);
  v12 = v17;
  v13 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959020;
  *(_QWORD *)(inited + 56) = &type metadata for Usage;
  *(_QWORD *)(inited + 64) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 96) = &type metadata for PhysicalCollection;
  *(_QWORD *)(inited + 104) = &protocol witness table for PhysicalCollection;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  sub_2498CAC78(v1, v3);
  sub_2498CAC78(v12, v13);
  v15 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v12, v13);
  sub_2498CACBC(v1, v3);
  return v15;
}

uint64_t sub_2498FE344()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[2];
  char v86;
  _QWORD v87[2];
  char v88;
  _QWORD v89[2];
  _BYTE v90[5];
  _QWORD v91[3];

  LOBYTE(v91[0]) = 5;
  sub_2498FCA34((uint64_t)v91, 1uLL);
  v66 = v1;
  v67 = v0;
  LOBYTE(v91[0]) = 17;
  sub_2498FCA34((uint64_t)v91, 0x30uLL);
  v80 = v3;
  v81 = v2;
  LOBYTE(v91[0]) = 17;
  sub_2498FCA34((uint64_t)v91, 0x31uLL);
  v5 = v4;
  v51 = v4;
  v79 = v6;
  LOBYTE(v91[0]) = 6;
  sub_2498FC7A0((uint64_t)v91, 0);
  v8 = v7;
  v50 = v7;
  v78 = v9;
  LOBYTE(v91[0]) = 7;
  sub_2498FC7A0((uint64_t)v91, 0xFFFFLL);
  v11 = v10;
  v47 = v10;
  v77 = v12;
  LOBYTE(v91[0]) = 12;
  sub_2498FCA34((uint64_t)v91, 0x20uLL);
  v70 = v14;
  v71 = v13;
  LOBYTE(v91[0]) = 14;
  sub_2498FC7A0((uint64_t)v91, 2);
  v68 = v16;
  v69 = v15;
  LOBYTE(v89[0]) = 0;
  LOBYTE(v87[0]) = 1;
  LOBYTE(v85[0]) = 0;
  *(_WORD *)&v90[3] = 0;
  *(_WORD *)&v90[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v89, v87, v85, &v90[4], &v90[3], &v90[2], &v90[1], v91);
  LOBYTE(v89[0]) = 12;
  sub_2498FCA34((uint64_t)v89, 8uLL);
  v64 = v18;
  v65 = v17;
  LOBYTE(v89[0]) = 14;
  sub_2498FC7A0((uint64_t)v89, 1);
  v84 = v19;
  v63 = v20;
  LOBYTE(v87[0]) = 0;
  LOBYTE(v85[0]) = 1;
  v90[4] = 1;
  *(_WORD *)&v90[2] = 0;
  *(_WORD *)v90 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v87, v85, &v90[4], &v90[3], &v90[2], &v90[1], v90, v89);
  LOBYTE(v87[0]) = 12;
  sub_2498FCA34((uint64_t)v87, 8uLL);
  v83 = v21;
  v55 = v22;
  LOBYTE(v87[0]) = 14;
  sub_2498FC7A0((uint64_t)v87, 1);
  v82 = v23;
  v54 = v24;
  LOBYTE(v85[0]) = 0;
  *(_WORD *)&v90[3] = 257;
  *(_WORD *)&v90[1] = 0;
  v90[0] = 0;
  v88 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v85, &v90[4], &v90[3], &v90[2], &v90[1], v90, &v88, v87);
  LOBYTE(v85[0]) = 5;
  sub_2498FCA34((uint64_t)v85, 0xFF00uLL);
  v75 = v26;
  v76 = v25;
  LOBYTE(v85[0]) = 17;
  sub_2498FCA34((uint64_t)v85, 0x102uLL);
  v73 = v28;
  v74 = v27;
  LOBYTE(v85[0]) = 6;
  sub_2498FC7A0((uint64_t)v85, 0);
  v72 = v29;
  v62 = v30;
  LOBYTE(v85[0]) = 7;
  sub_2498FC7A0((uint64_t)v85, 255);
  v60 = v32;
  v61 = v31;
  LOBYTE(v85[0]) = 12;
  sub_2498FCA34((uint64_t)v85, 8uLL);
  v58 = v34;
  v59 = v33;
  LOBYTE(v85[0]) = 14;
  sub_2498FC7A0((uint64_t)v85, 8);
  v56 = v36;
  v57 = v35;
  *(_WORD *)&v90[3] = 1;
  *(_WORD *)&v90[1] = 0;
  v90[0] = 0;
  v88 = 0;
  v86 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v90[4], &v90[3], &v90[2], &v90[1], v90, &v88, &v86, v85);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959030;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 19;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v67;
  *(_QWORD *)(inited + 80) = v66;
  *(_QWORD *)(inited + 136) = &type metadata for Usage;
  *(_QWORD *)(inited + 144) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 112) = v81;
  *(_QWORD *)(inited + 120) = v80;
  *(_QWORD *)(inited + 176) = &type metadata for Usage;
  *(_QWORD *)(inited + 184) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 152) = v5;
  *(_QWORD *)(inited + 160) = v79;
  *(_QWORD *)(inited + 216) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 192) = v8;
  *(_QWORD *)(inited + 200) = v78;
  *(_QWORD *)(inited + 256) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 232) = v11;
  *(_QWORD *)(inited + 240) = v77;
  *(_QWORD *)(inited + 656) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 664) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 296) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 304) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 696) = &type metadata for Usage;
  *(_QWORD *)(inited + 272) = v71;
  *(_QWORD *)(inited + 280) = v70;
  *(_QWORD *)(inited + 704) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 336) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 344) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 312) = v69;
  *(_QWORD *)(inited + 320) = v68;
  *(_QWORD *)(inited + 736) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 744) = &protocol witness table for LogicalMinimum;
  v52 = v91[0];
  v38 = v91[0];
  v53 = v91[1];
  *(_QWORD *)(inited + 776) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 784) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v38;
  *(_QWORD *)(inited + 360) = v53;
  *(_QWORD *)(inited + 416) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 424) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 392) = v65;
  *(_QWORD *)(inited + 400) = v64;
  *(_QWORD *)(inited + 456) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 464) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 432) = v84;
  *(_QWORD *)(inited + 440) = v63;
  *(_QWORD *)(inited + 536) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 544) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 816) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 824) = &protocol witness table for ReportSize;
  v48 = v89[0];
  v39 = v89[0];
  v49 = v89[1];
  *(_QWORD *)(inited + 496) = &type metadata for Input;
  *(_QWORD *)(inited + 504) = &protocol witness table for Input;
  *(_QWORD *)(inited + 472) = v39;
  *(_QWORD *)(inited + 480) = v49;
  *(_QWORD *)(inited + 512) = v83;
  *(_QWORD *)(inited + 520) = v55;
  *(_QWORD *)(inited + 576) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 584) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 552) = v82;
  *(_QWORD *)(inited + 560) = v54;
  *(_QWORD *)(inited + 856) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 864) = &protocol witness table for ReportCount;
  v45 = v87[0];
  v40 = v87[0];
  v46 = v87[1];
  *(_QWORD *)(inited + 616) = &type metadata for Input;
  *(_QWORD *)(inited + 624) = &protocol witness table for Input;
  *(_QWORD *)(inited + 592) = v40;
  *(_QWORD *)(inited + 600) = v46;
  *(_QWORD *)(inited + 632) = v76;
  *(_QWORD *)(inited + 640) = v75;
  *(_QWORD *)(inited + 672) = v74;
  *(_QWORD *)(inited + 680) = v73;
  *(_QWORD *)(inited + 712) = v72;
  *(_QWORD *)(inited + 720) = v62;
  *(_QWORD *)(inited + 752) = v61;
  *(_QWORD *)(inited + 760) = v60;
  *(_QWORD *)(inited + 792) = v59;
  *(_QWORD *)(inited + 800) = v58;
  *(_QWORD *)(inited + 832) = v57;
  *(_QWORD *)(inited + 840) = v56;
  *(_QWORD *)(inited + 896) = &type metadata for Input;
  *(_QWORD *)(inited + 904) = &protocol witness table for Input;
  v42 = v85[0];
  v43 = v85[1];
  *(_QWORD *)(inited + 872) = v85[0];
  *(_QWORD *)(inited + 880) = v43;
  sub_2498CAC78(v67, v66);
  sub_2498CAC78(v81, v80);
  sub_2498CAC78(v51, v79);
  sub_2498CAC78(v50, v78);
  sub_2498CAC78(v47, v77);
  sub_2498CAC78(v71, v70);
  sub_2498CAC78(v69, v68);
  sub_2498CAC78(v52, v53);
  sub_2498CAC78(v65, v64);
  sub_2498CAC78(v84, v63);
  sub_2498CAC78(v48, v49);
  sub_2498CAC78(v83, v55);
  sub_2498CAC78(v82, v54);
  sub_2498CAC78(v45, v46);
  sub_2498CAC78(v76, v75);
  sub_2498CAC78(v74, v73);
  sub_2498CAC78(v72, v62);
  sub_2498CAC78(v61, v60);
  sub_2498CAC78(v59, v58);
  sub_2498CAC78(v57, v56);
  sub_2498CAC78(v42, v43);
  v44 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v42, v43);
  sub_2498CACBC(v57, v56);
  sub_2498CACBC(v59, v58);
  sub_2498CACBC(v61, v60);
  sub_2498CACBC(v72, v62);
  sub_2498CACBC(v74, v73);
  sub_2498CACBC(v76, v75);
  sub_2498CACBC(v45, v46);
  sub_2498CACBC(v82, v54);
  sub_2498CACBC(v83, v55);
  sub_2498CACBC(v48, v49);
  sub_2498CACBC(v84, v63);
  sub_2498CACBC(v65, v64);
  sub_2498CACBC(v52, v53);
  sub_2498CACBC(v69, v68);
  sub_2498CACBC(v71, v70);
  sub_2498CACBC(v47, v77);
  sub_2498CACBC(v50, v78);
  sub_2498CACBC(v51, v79);
  sub_2498CACBC(v81, v80);
  sub_2498CACBC(v67, v66);
  return v44;
}

uint64_t static AbsolutePointerReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0760 != -1)
    swift_once();
  v2 = xmmword_2578A1328;
  *a1 = xmmword_2578A1328;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t OUTLINED_FUNCTION_14_10()
{
  return 152;
}

uint64_t sub_2498FEA80()
{
  return 19;
}

void AbsolutePointerReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t AbsolutePointerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AbsolutePointerReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498FEAF8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = AbsolutePointerReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FEB18()
{
  uint64_t v0;

  sub_249950808(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

#error "2498FEB34: call analysis failed (funcsize=9)"

void sub_2498FEB44(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = AbsolutePointerReport.x.getter(*a1, a1[1]);
}

void AbsolutePointerReport.x.setter(double a1)
{
  unint64_t v1;

  v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 8);
}

#error "2498FEBA4: call analysis failed (funcsize=11)"

void sub_2498FEBC0(double *a1)
{
  unint64_t v1;

  v1 = OUTLINED_FUNCTION_7_11(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 8);
  OUTLINED_FUNCTION_6_0();
}

#error "2498FEBFC: call analysis failed (funcsize=9)"

void sub_2498FEC0C(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = AbsolutePointerReport.y.getter(*a1, a1[1]);
}

void AbsolutePointerReport.y.setter(double a1)
{
  unint64_t v1;

  v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 40);
}

#error "2498FEC6C: call analysis failed (funcsize=11)"

void sub_2498FEC88(double *a1)
{
  unint64_t v1;

  v1 = OUTLINED_FUNCTION_7_11(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 40);
  OUTLINED_FUNCTION_6_0();
}

void AbsolutePointerReport.buttonMask.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_2498FECC0(_BYTE *a1@<X8>)
{
  char v2;

  AbsolutePointerReport.buttonMask.getter();
  *a1 = v2;
}

uint64_t AbsolutePointerReport.buttonMask.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 72);
}

void AbsolutePointerReport.buttonMask.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FED2C(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 72);
  OUTLINED_FUNCTION_6_0();
}

void AbsolutePointerReport.modifierMask.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_2498FED60(_BYTE *a1@<X8>)
{
  char v2;

  AbsolutePointerReport.modifierMask.getter();
  *a1 = v2;
}

uint64_t AbsolutePointerReport.modifierMask.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 80);
}

void AbsolutePointerReport.modifierMask.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_6_14();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FEDC8(uint64_t a1)
{
  OUTLINED_FUNCTION_5_9(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

#error "2498FEE04: call analysis failed (funcsize=22)"

uint64_t AbsolutePointerReport.modifiers.getter()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_6_14();
  return KeyboardModifierMask.keyboardUsages()(v0);
}

uint64_t sub_2498FEE5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AbsolutePointerReport.modifiers.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2498FEE88()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return AbsolutePointerReport.modifiers.setter(v0);
}

uint64_t AbsolutePointerReport.modifiers.setter(uint64_t a1)
{
  uint64_t v1;

  KeyboardModifierMask.init(usages:)(a1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 80);
}

void AbsolutePointerReport.modifiers.modify(uint64_t a1)
{
  uint64_t *v1;
  unsigned __int8 v2;

  OUTLINED_FUNCTION_3_12(a1);
  OUTLINED_FUNCTION_6_14();
  *v1 = KeyboardModifierMask.keyboardUsages()(v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FEEF8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    KeyboardModifierMask.init(usages:)(v2);
    OUTLINED_FUNCTION_5_9(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    KeyboardModifierMask.init(usages:)(*a1);
    OUTLINED_FUNCTION_5_9(v4);
    OUTLINED_FUNCTION_6_0();
  }
}

void sub_2498FEF44(_QWORD *a1, _QWORD *a2)
{
  static AbsolutePointerReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void AbsolutePointerReport.remoteTimestamp.getter()
{
  _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2498FEF7C(uint64_t a1@<X8>)
{
  uint64_t v2;

  AbsolutePointerReport.remoteTimestamp.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_2498FEFAC(uint64_t a1)
{
  return AbsolutePointerReport.remoteTimestamp.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t AbsolutePointerReport.remoteTimestamp.setter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    a1 = 0;
  return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(a1, 88);
}

void AbsolutePointerReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = v1;
  _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF024(uint64_t *a1)
{
  uint64_t v1;

  if (*((_BYTE *)a1 + 8))
    v1 = 0;
  else
    v1 = *a1;
  _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v1, 88);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF054()
{
  AbsolutePointerReport.remoteTimestamp.getter();
}

uint64_t sub_2498FF070(uint64_t a1, char a2)
{
  return AbsolutePointerReport.remoteTimestamp.setter(a1, a2 & 1);
}

void (*sub_2498FF078(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = v1;
  AbsolutePointerReport.remoteTimestamp.getter();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 0;
  return sub_2498FF0B4;
}

void sub_2498FF0B4(uint64_t a1)
{
  AbsolutePointerReport.remoteTimestamp.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF0E0(double *a1)
{
  AbsolutePointerReport.x.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF104(double *a1)
{
  AbsolutePointerReport.y.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF128(unsigned __int8 *a1)
{
  AbsolutePointerReport.buttonMask.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FF14C(unsigned __int8 *a1)
{
  AbsolutePointerReport.modifierMask.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for AbsolutePointerReport()
{
  return &type metadata for AbsolutePointerReport;
}

double OUTLINED_FUNCTION_2_10(int a1)
{
  double *v1;
  double result;

  result = (double)a1 * 0.0000152587891;
  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_12(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t OUTLINED_FUNCTION_5_9(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 80);
}

void OUTLINED_FUNCTION_6_14()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t OUTLINED_FUNCTION_7_11(double *a1)
{
  return HIDFixed.init(doubleValue:)(*a1);
}

double OUTLINED_FUNCTION_8_10(int a1)
{
  return (double)a1 * 0.0000152587891;
}

UniversalHID::HIDPoint __swiftcall HIDPoint.init()()
{
  double v0;
  double v1;
  double v2;
  UniversalHID::HIDPoint result;

  v0 = 0.0;
  v1 = 0.0;
  v2 = 0.0;
  result.z = v2;
  result.y = v1;
  result.x = v0;
  return result;
}

void HIDPoint.x.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*HIDPoint.x.modify())()
{
  return nullsub_1;
}

double HIDPoint.y.getter(double a1, double a2)
{
  return a2;
}

void HIDPoint.y.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDPoint.y.modify())()
{
  return nullsub_1;
}

double HIDPoint.z.getter(double a1, double a2, double a3)
{
  return a3;
}

void HIDPoint.z.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*HIDPoint.z.modify())()
{
  return nullsub_1;
}

BOOL static HIDPoint.== infix(_:_:)(__n128 a1, double a2, double a3, __n128 a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BOOL8 result;
  _OWORD v10[2];
  _OWORD v11[2];

  v6 = 0;
  a1.n128_f64[1] = a2;
  a4.n128_f64[1] = a5;
LABEL_2:
  v11[0] = a1;
  v11[1] = *(unint64_t *)&a3;
  v7 = 8 * (v6 & 3);
  v8 = *(double *)((char *)v11 + v7);
  v10[0] = a4;
  v10[1] = *(unint64_t *)&a6;
  result = v8 == *(double *)((char *)v10 + v7);
  while (v6 != 2)
  {
    ++v6;
    if (result)
      goto LABEL_2;
    result = 0;
  }
  return result;
}

BOOL sub_2498FF2F0(uint64_t a1, uint64_t a2, __n128 a3, double a4, double a5, __n128 a6)
{
  a3.n128_u64[0] = *(_QWORD *)a1;
  a6.n128_u64[0] = *(_QWORD *)a2;
  return static HIDPoint.== infix(_:_:)(a3, *(double *)(a1 + 8), *(double *)(a1 + 16), a6, *(double *)(a2 + 8), *(double *)(a2 + 16));
}

uint64_t HIDPoint.hash(into:)()
{
  return sub_2498FF314();
}

uint64_t sub_2498FF314()
{
  sub_249955FF4();
  sub_249955FF4();
  return sub_249955FF4();
}

uint64_t HIDPoint.hashValue.getter()
{
  sub_249955FB8();
  sub_2498FF314();
  return sub_249956000();
}

uint64_t sub_2498FF3CC()
{
  return HIDPoint.hashValue.getter();
}

uint64_t sub_2498FF3D8()
{
  return HIDPoint.hash(into:)();
}

uint64_t sub_2498FF3E4()
{
  sub_249955FB8();
  sub_2498FF314();
  return sub_249956000();
}

uint64_t static HIDPoint.+= infix(_:_:)(double *a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;

  v4 = *a1 + a2;
  v5 = a1[1] + a3;
  v6 = a1[2] + a4;
  *a1 = v4;
  a1[1] = v5;
  return OUTLINED_FUNCTION_0_14((uint64_t)a1, v4, v5, v6);
}

uint64_t static HIDPoint.-= infix(_:_:)(double *a1, double a2, double a3, double a4)
{
  double v4;
  double v5;
  double v6;

  v4 = *a1 - a2;
  v5 = a1[1] - a3;
  v6 = a1[2] - a4;
  *a1 = v4;
  a1[1] = v5;
  return OUTLINED_FUNCTION_0_14((uint64_t)a1, v4, v5, v6);
}

uint64_t static HIDPoint.*= infix(_:_:)(float64x2_t *a1, float64x2_t a2, double a3, double a4)
{
  double v4;
  float64x2_t v5;

  v4 = a1[1].f64[0] * a4;
  a2.f64[1] = a3;
  v5 = vmulq_f64(*a1, a2);
  *a1 = v5;
  return OUTLINED_FUNCTION_0_14((uint64_t)a1, v5.f64[0], a3, v4);
}

uint64_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, float64x2_t a2, double a3, double a4)
{
  double v4;
  float64x2_t v5;

  v4 = a1[1].f64[0] / a4;
  a2.f64[1] = a3;
  v5 = vdivq_f64(*a1, a2);
  *a1 = v5;
  return OUTLINED_FUNCTION_0_14((uint64_t)a1, v5.f64[0], a3, v4);
}

float64x2_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64_t v2;
  float64x2_t result;

  v2 = a1[1].f64[0] / a2;
  result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0));
  *a1 = result;
  a1[1].f64[0] = v2;
  return result;
}

float64_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, uint64_t a2)
{
  float64_t result;

  result = a1[1].f64[0] / (double)a2;
  *a1 = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)a2), 0));
  a1[1].f64[0] = result;
  return result;
}

double static HIDPoint.+ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 + a4;
}

double static HIDPoint.- infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 - a4;
}

double static HIDPoint.* infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 * a4;
}

{
  return a1 * a4;
}

double static HIDPoint./ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 / a4;
}

uint64_t HIDPoint.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1338);
  sub_2498FF584();
  return sub_249955F4C();
}

unint64_t sub_2498FF584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1340;
  if (!qword_2578A1340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1338);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4120], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1340);
  }
  return result;
}

unint64_t sub_2498FF5CC()
{
  unint64_t result;

  result = qword_2578A1348;
  if (!qword_2578A1348)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDPoint, &type metadata for HIDPoint);
    atomic_store(result, (unint64_t *)&qword_2578A1348);
  }
  return result;
}

uint64_t sub_2498FF608()
{
  return HIDPoint.description.getter();
}

uint64_t getEnumTagSinglePayload for HIDPoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDPoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDPoint()
{
  return &type metadata for HIDPoint;
}

uint64_t OUTLINED_FUNCTION_0_14(uint64_t result, double a2, double a3, double a4)
{
  *(double *)(result + 16) = a4;
  return result;
}

uint64_t dispatch thunk of HIDServiceProtocol.properties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDServiceProtocol.serviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDServiceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDServiceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t static ConsumerReport.initialReportBitCount.getter()
{
  return 72;
}

uint64_t static ConsumerReport.reportID.getter()
{
  return 2;
}

uint64_t sub_2498FF6AC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2498FF6CC();
  *(_QWORD *)&xmmword_2578A1350 = result;
  *((_QWORD *)&xmmword_2578A1350 + 1) = v1;
  return result;
}

uint64_t sub_2498FF6CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[2];
  char v61;
  __int16 v62;
  __int16 v63;
  __int16 v64;
  _QWORD v65[3];

  LOBYTE(v65[0]) = 5;
  sub_2498FCA34((uint64_t)v65, 0xCuLL);
  v48 = v1;
  v49 = v0;
  LOBYTE(v65[0]) = 18;
  sub_2498FCA34((uint64_t)v65, 1uLL);
  v55 = v2;
  v4 = v3;
  LOBYTE(v65[0]) = 19;
  sub_2498FCA34((uint64_t)v65, 0x514uLL);
  v6 = v5;
  v8 = v7;
  LOBYTE(v65[0]) = 14;
  sub_2498FC7A0((uint64_t)v65, 4);
  v10 = v9;
  v53 = v11;
  LOBYTE(v65[0]) = 12;
  sub_2498FCA34((uint64_t)v65, 0x10uLL);
  v54 = v12;
  v52 = v13;
  LOBYTE(v65[0]) = 6;
  sub_2498FC7A0((uint64_t)v65, 1);
  v50 = v15;
  v51 = v14;
  LOBYTE(v65[0]) = 7;
  sub_2498FC7A0((uint64_t)v65, 1300);
  v45 = v17;
  v46 = v16;
  LOBYTE(v60[0]) = 0;
  v64 = 0;
  v63 = 0;
  v62 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v60, (_BYTE *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, v65);
  LOBYTE(v60[0]) = 5;
  sub_2498FCA34((uint64_t)v60, 0xFF00uLL);
  v38 = v18;
  v59 = v19;
  LOBYTE(v60[0]) = 17;
  sub_2498FCA34((uint64_t)v60, 0x102uLL);
  v57 = v21;
  v58 = v20;
  LOBYTE(v60[0]) = 6;
  sub_2498FC7A0((uint64_t)v60, 0);
  v47 = v22;
  v56 = v23;
  LOBYTE(v60[0]) = 7;
  sub_2498FC7A0((uint64_t)v60, 255);
  v43 = v25;
  v44 = v24;
  LOBYTE(v60[0]) = 12;
  sub_2498FCA34((uint64_t)v60, 8uLL);
  v41 = v27;
  v42 = v26;
  LOBYTE(v60[0]) = 14;
  sub_2498FC7A0((uint64_t)v60, 8);
  v39 = v29;
  v40 = v28;
  v64 = 1;
  v63 = 0;
  v62 = 0;
  v61 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v64 + 1, &v64, (_BYTE *)&v63 + 1, &v63, (_BYTE *)&v62 + 1, &v62, &v61, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249957590;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v49;
  *(_QWORD *)(inited + 80) = v48;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v55;
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(_QWORD *)(inited + 152) = v6;
  *(_QWORD *)(inited + 160) = v8;
  *(_QWORD *)(inited + 216) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 224) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 416) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 424) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 456) = &type metadata for Usage;
  *(_QWORD *)(inited + 192) = v10;
  *(_QWORD *)(inited + 200) = v53;
  *(_QWORD *)(inited + 464) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 296) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 496) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 536) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 336) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 256) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 264) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 232) = v54;
  *(_QWORD *)(inited + 240) = v52;
  *(_QWORD *)(inited + 272) = v51;
  *(_QWORD *)(inited + 280) = v50;
  *(_QWORD *)(inited + 312) = v46;
  *(_QWORD *)(inited + 320) = v45;
  *(_QWORD *)(inited + 576) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 584) = &protocol witness table for ReportSize;
  v36 = v65[0];
  v31 = v65[0];
  v37 = v65[1];
  *(_QWORD *)(inited + 616) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 624) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v31;
  *(_QWORD *)(inited + 360) = v37;
  *(_QWORD *)(inited + 392) = v38;
  *(_QWORD *)(inited + 400) = v59;
  *(_QWORD *)(inited + 432) = v58;
  *(_QWORD *)(inited + 440) = v57;
  *(_QWORD *)(inited + 472) = v47;
  *(_QWORD *)(inited + 480) = v56;
  *(_QWORD *)(inited + 512) = v44;
  *(_QWORD *)(inited + 520) = v43;
  *(_QWORD *)(inited + 552) = v42;
  *(_QWORD *)(inited + 560) = v41;
  *(_QWORD *)(inited + 592) = v40;
  *(_QWORD *)(inited + 600) = v39;
  *(_QWORD *)(inited + 656) = &type metadata for Input;
  *(_QWORD *)(inited + 664) = &protocol witness table for Input;
  v33 = v60[0];
  v34 = v60[1];
  *(_QWORD *)(inited + 632) = v60[0];
  *(_QWORD *)(inited + 640) = v34;
  sub_2498CAC78(v49, v48);
  sub_2498CAC78(v55, v4);
  sub_2498CAC78(v6, v8);
  sub_2498CAC78(v10, v53);
  sub_2498CAC78(v54, v52);
  sub_2498CAC78(v51, v50);
  sub_2498CAC78(v46, v45);
  sub_2498CAC78(v36, v37);
  sub_2498CAC78(v38, v59);
  sub_2498CAC78(v58, v57);
  sub_2498CAC78(v47, v56);
  sub_2498CAC78(v44, v43);
  sub_2498CAC78(v42, v41);
  sub_2498CAC78(v40, v39);
  sub_2498CAC78(v33, v34);
  v35 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v33, v34);
  sub_2498CACBC(v40, v39);
  sub_2498CACBC(v42, v41);
  sub_2498CACBC(v44, v43);
  sub_2498CACBC(v47, v56);
  sub_2498CACBC(v58, v57);
  sub_2498CACBC(v38, v59);
  sub_2498CACBC(v36, v37);
  sub_2498CACBC(v46, v45);
  sub_2498CACBC(v51, v50);
  sub_2498CACBC(v54, v52);
  sub_2498CACBC(v10, v53);
  sub_2498CACBC(v6, v8);
  sub_2498CACBC(v55, v4);
  sub_2498CACBC(v49, v48);
  return v35;
}

uint64_t static ConsumerReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A0768 != -1)
    swift_once();
  v2 = xmmword_2578A1350;
  *a1 = xmmword_2578A1350;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2498FFC64()
{
  return 72;
}

#error "2498FFCD4: call analysis failed (funcsize=73)"

uint64_t ConsumerReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2498CAC78(a1, a2);
}

#error "2498FFE00: call analysis failed (funcsize=40)"

uint64_t sub_2498FFE48()
{
  _QWORD *v0;

  return ConsumerReport.description.getter(*v0, v0[1]);
}

uint64_t ConsumerReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  return a1;
}

uint64_t ConsumerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ConsumerReport.report.modify())()
{
  return nullsub_1;
}

void sub_2498FFEC4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = ConsumerReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2498FFEE4()
{
  uint64_t v0;

  v0 = ConsumerReport.Iterator.next()();
  OUTLINED_FUNCTION_5_10(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2498FFF04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  ConsumerReport.makeIterator()(v2, v3, a1);
  return OUTLINED_FUNCTION_3_6(v2, v3);
}

void sub_2498FFF30()
{
  sub_249918768();
}

uint64_t sub_2498FFF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_24992008C(a1, a2, a3, *v3, v3[1]);
}

#error "2498FFF7C: call analysis failed (funcsize=46)"

#error "249900028: call analysis failed (funcsize=31)"

void sub_249900074(__int16 *a1)
{
  uint64_t *v1;

  sub_249932BAC(*a1, *v1, v1[1]);
}

uint64_t sub_249900080()
{
  return sub_2498E43DC();
}

uint64_t sub_24990008C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249911034);
}

uint64_t sub_249900098()
{
  return sub_2498E43DC();
}

void sub_2499000A4(uint64_t a1, unsigned __int16 *a2)
{
  sub_2499518C4(a1, *a2);
}

void sub_2499000AC(unsigned __int16 *a1)
{
  uint64_t v1;

  v1 = ConsumerReport.remove(_:)(*a1);
  OUTLINED_FUNCTION_5_10(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499000D0(unsigned __int16 *a1)
{
  uint64_t v1;

  v1 = ConsumerReport.update(with:)(*a1);
  OUTLINED_FUNCTION_5_10(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499000F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = OUTLINED_FUNCTION_4_5();
  sub_249918A9C(v0);
  v1 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v1, v2);
}

uint64_t sub_24990011C(_QWORD *a1)
{
  return sub_2499117DC(*a1, a1[1]);
}

uint64_t sub_249900128()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = OUTLINED_FUNCTION_4_5();
  sub_249911DE8(v0);
  v1 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v1, v2);
}

uint64_t sub_249900150(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_2498E44D8(a1, a2, a3, (void (*)(_QWORD, _QWORD, uint64_t, unint64_t))sub_249950D04);
}

void sub_24990015C()
{
  sub_2499109C8();
}

void sub_24990016C(uint64_t *a1)
{
  uint64_t v1;

  sub_249950FB4(*a1, a1[1], *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_24990017C()
{
  return sub_249910B30();
}

void sub_24990018C()
{
  sub_2498D4B04();
}

void sub_249900194()
{
  sub_2498F9BB4();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_249900204(_QWORD *a1)
{
  return sub_249910D40(*a1, a1[1]);
}

void sub_249900210(_QWORD *a1, _QWORD *a2)
{
  static ConsumerReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void ConsumerReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_24990025C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2499002C4);
  }
  if (BYTE6(a3) >= 0x11uLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_2499002DC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  ConsumerReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_249900310()
{
  return ConsumerReport.remoteTimestamp.setter();
}

uint64_t ConsumerReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_24990034C + dword_2499003BC[*(_QWORD *)(v0 + 8) >> 62]))();
}

void sub_24990035C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2499003B4);
  }
  if (v2 >= 17)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 72);
  }
}

void ConsumerReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void (*sub_249900408())(uint64_t a1, char a2)
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x24990047CLL);
  }
  if (v1 >= 17)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  return sub_249900494;
}

void sub_249900494(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  ConsumerReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499004E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x249900518);
  }
  if (v2 >= 17)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 72);
  }
  JUMPOUT(0x2499004BCLL);
}

void sub_24990054C()
{
  uint64_t *v0;

  ConsumerReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_249900568()
{
  return ConsumerReport.remoteTimestamp.setter();
}

void (*sub_249900570(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  ConsumerReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_2499005B0;
}

void sub_2499005B0()
{
  ConsumerReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2499005DC()
{
  unint64_t result;

  result = qword_2578A1360;
  if (!qword_2578A1360)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerReport.Iterator, &type metadata for ConsumerReport.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A1360);
  }
  return result;
}

unint64_t sub_24990061C()
{
  unint64_t result;

  result = qword_2578A1368;
  if (!qword_2578A1368)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerReport, &type metadata for ConsumerReport);
    atomic_store(result, (unint64_t *)&qword_2578A1368);
  }
  return result;
}

unint64_t sub_24990065C()
{
  unint64_t result;

  result = qword_2578A1370;
  if (!qword_2578A1370)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerReport, &type metadata for ConsumerReport);
    atomic_store(result, (unint64_t *)&qword_2578A1370);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsumerReport()
{
  return &type metadata for ConsumerReport;
}

ValueMetadata *type metadata accessor for ConsumerReport.Iterator()
{
  return &type metadata for ConsumerReport.Iterator;
}

uint64_t OUTLINED_FUNCTION_5_10(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)v1 = result;
  *(_BYTE *)(v1 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(a1, v36, v37, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t static AppleVendorKeyboardUsage.usagePage.getter()
{
  return 65281;
}

uint64_t static AppleVendorKeyboardUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static AppleVendorKeyboardUsage.usageMaximum.getter()
{
  return 48;
}

uint64_t AppleVendorKeyboardUsage.init(rawValue:)(unsigned __int8 a1)
{
  int v1;
  int v2;

  v1 = a1;
  if (a1 - 49 >= 0xFFFFFFD0 && a1 <= 0x21u && ((1 << a1) & 0x30003001ELL) != 0)
  {
    v2 = 0;
  }
  else
  {
    v1 = 0;
    v2 = 1;
  }
  return v1 | (v2 << 8);
}

uint64_t sub_24990074C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = AppleVendorKeyboardUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t static AppleVendorKeyboardUsage.spotlight.getter()
{
  return 1;
}

uint64_t static AppleVendorKeyboardUsage.dashboard.getter()
{
  return 2;
}

uint64_t static AppleVendorKeyboardUsage.function.getter()
{
  return 3;
}

uint64_t static AppleVendorKeyboardUsage.launchpad.getter()
{
  return 4;
}

uint64_t static AppleVendorKeyboardUsage.reserved.getter()
{
  return 10;
}

uint64_t static AppleVendorKeyboardUsage.capsLockDelayEnable.getter()
{
  return 11;
}

uint64_t static AppleVendorKeyboardUsage.powerState.getter()
{
  return 12;
}

uint64_t static AppleVendorKeyboardUsage.exposeAll.getter()
{
  return 16;
}

uint64_t static AppleVendorKeyboardUsage.exposeDesktop.getter()
{
  return 17;
}

uint64_t static AppleVendorKeyboardUsage.brightnessUp.getter()
{
  return 32;
}

uint64_t static AppleVendorKeyboardUsage.brightnessDown.getter()
{
  return 33;
}

uint64_t static AppleVendorKeyboardUsage.capsLockState.getter()
{
  return 34;
}

uint64_t static AppleVendorKeyboardUsage.language.getter()
{
  return 48;
}

uint64_t static AppleVendorKeyboardUsage.willReset.getter()
{
  return 64;
}

uint64_t static AppleVendorKeyboardUsage.reset.getter()
{
  return 65;
}

uint64_t static AppleVendorKeyboardUsage.willFactoryReset.getter()
{
  return 66;
}

uint64_t static AppleVendorKeyboardUsage.accessibilityToggle.getter()
{
  return 67;
}

void sub_249900804()
{
  sub_249955D60();
  __break(1u);
}

uint64_t static AppleVendorKeyboardUsage.longPress.getter()
{
  if (qword_2578A0770 != -1)
    swift_once();
  return byte_2578A1378;
}

uint64_t static AppleVendorKeyboardUsage.allCases.getter()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1380);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2499593F0;
  *(_OWORD *)(v0 + 32) = xmmword_249959400;
  *(_BYTE *)(v0 + 48) = 67;
  if (qword_2578A0770 != -1)
    swift_once();
  *(_BYTE *)(v0 + 49) = byte_2578A1378;
  return v0;
}

unint64_t sub_249900920(uint64_t a1)
{
  unint64_t result;

  result = sub_249900944();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249900944()
{
  unint64_t result;

  result = qword_2578A1388;
  if (!qword_2578A1388)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardUsage, &type metadata for AppleVendorKeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1388);
  }
  return result;
}

unint64_t sub_249900984()
{
  unint64_t result;

  result = qword_2578A1390;
  if (!qword_2578A1390)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorKeyboardUsage, &type metadata for AppleVendorKeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1390);
  }
  return result;
}

unint64_t sub_2499009C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1398;
  if (!qword_2578A1398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A13A0);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1398);
  }
  return result;
}

uint64_t sub_249900A08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static AppleVendorKeyboardUsage.allCases.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardUsage()
{
  return &type metadata for AppleVendorKeyboardUsage;
}

uint64_t static ConsumerUsage.usagePage.getter()
{
  return 12;
}

uint64_t static ConsumerUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static ConsumerUsage.usageMaximum.getter()
{
  return 1300;
}

uint64_t ConsumerUsage.init(rawValue:)(unsigned __int16 a1)
{
  int v1;

  v1 = a1;
  if (a1 - 1301 < 0xFFFFFAEC)
    v1 = 0;
  return v1 | ((a1 - 1301 < 0xFFFFFAEC) << 16);
}

unint64_t sub_249900A7C(uint64_t a1)
{
  unint64_t result;

  result = sub_249900AA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249900AA0()
{
  unint64_t result;

  result = qword_2578A13A8;
  if (!qword_2578A13A8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerUsage, &type metadata for ConsumerUsage);
    atomic_store(result, (unint64_t *)&qword_2578A13A8);
  }
  return result;
}

uint64_t sub_249900ADC@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = ConsumerUsage.init(rawValue:)(*a1);
  *(_WORD *)a2 = result;
  *(_BYTE *)(a2 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_249900B0C(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

unint64_t sub_249900B1C()
{
  unint64_t result;

  result = qword_2578A13B0;
  if (!qword_2578A13B0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ConsumerUsage, &type metadata for ConsumerUsage);
    atomic_store(result, (unint64_t *)&qword_2578A13B0);
  }
  return result;
}

uint64_t sub_249900B58()
{
  unsigned __int16 *v0;

  return sub_249932808(*v0);
}

void sub_249900B60()
{
  sub_2499329C8();
}

uint64_t sub_249900B68(uint64_t a1)
{
  unsigned __int16 *v1;

  return sub_2499329E0(a1, *v1);
}

BOOL sub_249900B70(__int16 *a1, __int16 *a2)
{
  return sub_249940184(*a1, *a2);
}

uint64_t sub_249900B7C()
{
  return 1300;
}

ValueMetadata *type metadata accessor for ConsumerUsage()
{
  return &type metadata for ConsumerUsage;
}

uint64_t PointerGesture.__allocating_init(logger:useRemoteAcceleration:)(uint64_t a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PointerGesture.init(logger:useRemoteAcceleration:)(a1, a2);
  return v4;
}

UniversalHID::PointerButtonMode __swiftcall PointerButtonMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if ((unint64_t)rawValue >= 3)
    v2 = 2;
  else
    v2 = rawValue;
  *v1 = v2;
  return (char)rawValue;
}

uint64_t PointerButtonMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_249900BFC()
{
  sub_24993280C();
}

void sub_249900C04()
{
  sub_249932988();
}

void sub_249900C0C()
{
  sub_249932A38();
}

uint64_t sub_249900C14(Swift::Int *a1)
{
  return PointerButtonMode.init(rawValue:)(*a1);
}

uint64_t sub_249900C1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PointerButtonMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t static PointerEvent.dispatch(report:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2499568A0;
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_15_11();
  v1 = OUTLINED_FUNCTION_14_11();
  v2 = OUTLINED_FUNCTION_6_15(v1);
  *(_QWORD *)(v0 + 56) = &type metadata for PointerEvent;
  *(_QWORD *)(v0 + 64) = &protocol witness table for PointerEvent;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t PointerGesture.buttonMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode);
  result = OUTLINED_FUNCTION_3_10();
  *a1 = *v3;
  return result;
}

uint64_t PointerGesture.buttonMode.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode);
  result = OUTLINED_FUNCTION_3_10();
  *v3 = v2;
  return result;
}

uint64_t (*PointerGesture.buttonMode.modify())()
{
  OUTLINED_FUNCTION_3_10();
  return j__swift_endAccess;
}

uint64_t PointerGesture.useRemoteAcceleration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration);
}

void PointerGesture.buttonMask.getter()
{
  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_17_10();
}

uint64_t PointerGesture.init(logger:useRemoteAcceleration:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode) = 2;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers) = 0;
  sub_249901960(a1, v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration) = a2;
  return v2;
}

void sub_249900E54()
{
  OUTLINED_FUNCTION_3_10();
  OUTLINED_FUNCTION_17_10();
}

void PointerGesture.dispatch(report:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_0_15();
  v3 = OUTLINED_FUNCTION_14_11();
  OUTLINED_FUNCTION_6_15(v3);
  __asm { BR              X10 }
}

#error "249901034: call analysis failed (funcsize=133)"

uint64_t sub_249901184(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  unsigned __int8 v13;
  int v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  int64_t v47;
  int64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  unint64_t v59;
  void *ButtonEventWithPressure;
  BOOL v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  ValueMetadata *v77;
  _UNKNOWN **v78;

  v73 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v70 - v9;
  sub_249900E54();
  v70 = OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers;
  v71 = v11;
  v12 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers);
  v13 = a3 & ~(_BYTE)v12;
  v72 = a3;
  v14 = v12 & ~a3;
  v75 = v3;
  if (v13)
  {
    sub_2498EFFC8(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger, (uint64_t)v10);
    v15 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v15) == 1)
    {
      sub_2499019A8((uint64_t)v10);
    }
    else
    {
      v16 = (void *)sub_249955700();
      v17 = sub_249955A0C();
      if (OUTLINED_FUNCTION_9_9(v17))
      {
        *(_DWORD *)OUTLINED_FUNCTION_19_9() = 16777472;
        LOBYTE(v76) = v13;
        OUTLINED_FUNCTION_13_10();
        OUTLINED_FUNCTION_7_13(&dword_2498C7000, v18, v19, "modifiers down: %hhx");
        OUTLINED_FUNCTION_11_10();
      }

      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v10, v15);
    }
    v3 = v75;
  }
  if ((_BYTE)v14)
  {
    sub_2498EFFC8(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger, (uint64_t)v8);
    v20 = sub_249955718();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v20) == 1)
    {
      sub_2499019A8((uint64_t)v8);
    }
    else
    {
      v21 = (void *)sub_249955700();
      v22 = sub_249955A0C();
      if (OUTLINED_FUNCTION_9_9(v22))
      {
        *(_DWORD *)OUTLINED_FUNCTION_19_9() = 16777472;
        LOBYTE(v76) = v14;
        OUTLINED_FUNCTION_13_10();
        OUTLINED_FUNCTION_7_13(&dword_2498C7000, v23, v24, "modifiers up: %hhx");
        OUTLINED_FUNCTION_11_10();
      }

      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v8, v20);
    }
  }
  v74 = v14;
  v25 = KeyboardModifierMask.keyboardUsages()(v13);
  v26 = 0;
  v27 = v25 + 56;
  v28 = 1 << *(_BYTE *)(v25 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & *(_QWORD *)(v25 + 56);
  v31 = MEMORY[0x24BEE4AF8];
  v32 = (unint64_t)(v28 + 63) >> 6;
  v33 = 40;
  if (!v30)
    goto LABEL_18;
LABEL_17:
  OUTLINED_FUNCTION_10_10();
  while (1)
  {
    mach_absolute_time();
    OUTLINED_FUNCTION_18_10();
    v36 = (id)IOHIDEventCreateKeyboardEvent();
    if ((OUTLINED_FUNCTION_16_8() & 1) == 0)
    {
      OUTLINED_FUNCTION_1_16();
      v31 = v38;
    }
    v37 = *(_QWORD *)(v31 + 16);
    if (v37 >= *(_QWORD *)(v31 + 24) >> 1)
    {
      OUTLINED_FUNCTION_1_16();
      v31 = v39;
    }
    v78 = &protocol witness table for KeyboardEvent;
    v77 = &type metadata for KeyboardEvent;
    v76 = (uint64_t)v36;
    *(_QWORD *)(v31 + 16) = v37 + 1;
    OUTLINED_FUNCTION_8_11(v31 + 40 * v37);

    if (v30)
      goto LABEL_17;
LABEL_18:
    v34 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      OUTLINED_FUNCTION_1_16();
      v31 = v68;
      goto LABEL_75;
    }
    if (v34 >= v32)
      goto LABEL_38;
    ++v26;
    if (!*(_QWORD *)(v27 + 8 * v34))
    {
      v26 = v34 + 1;
      if (v34 + 1 >= v32)
        goto LABEL_38;
      if (!*(_QWORD *)(v27 + 8 * v26))
      {
        v26 = v34 + 2;
        if (v34 + 2 >= v32)
          goto LABEL_38;
        if (!*(_QWORD *)(v27 + 8 * v26))
          break;
      }
    }
LABEL_31:
    OUTLINED_FUNCTION_12_11();
  }
  v35 = v34 + 3;
  if (v35 < v32)
  {
    if (!*(_QWORD *)(v27 + 8 * v35))
    {
      while (1)
      {
        v26 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_80;
        if (v26 >= v32)
          goto LABEL_38;
        ++v35;
        if (*(_QWORD *)(v27 + 8 * v26))
          goto LABEL_31;
      }
    }
    v26 = v35;
    goto LABEL_31;
  }
LABEL_38:
  swift_release();
  v40 = KeyboardModifierMask.keyboardUsages()(v74);
  v41 = 0;
  v42 = 1 << *(_BYTE *)(v40 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v40 + 56;
  v45 = v43 & *(_QWORD *)(v40 + 56);
  v46 = (unint64_t)(v42 + 63) >> 6;
  v33 = 40;
  if (!v45)
    goto LABEL_42;
LABEL_41:
  OUTLINED_FUNCTION_10_10();
  while (1)
  {
    mach_absolute_time();
    OUTLINED_FUNCTION_18_10();
    v49 = (id)IOHIDEventCreateKeyboardEvent();
    if ((OUTLINED_FUNCTION_16_8() & 1) == 0)
    {
      OUTLINED_FUNCTION_1_16();
      v31 = v51;
    }
    v50 = *(_QWORD *)(v31 + 16);
    if (v50 >= *(_QWORD *)(v31 + 24) >> 1)
    {
      OUTLINED_FUNCTION_1_16();
      v31 = v52;
    }
    v78 = &protocol witness table for KeyboardEvent;
    v77 = &type metadata for KeyboardEvent;
    v76 = (uint64_t)v49;
    *(_QWORD *)(v31 + 16) = v50 + 1;
    OUTLINED_FUNCTION_8_11(v31 + 40 * v50);

    if (v45)
      goto LABEL_41;
LABEL_42:
    v47 = v41 + 1;
    if (__OFADD__(v41, 1))
      goto LABEL_79;
    if (v47 >= v46)
      break;
    ++v41;
    if (!*(_QWORD *)(v44 + 8 * v47))
    {
      v41 = v47 + 1;
      if (v47 + 1 >= v46)
        break;
      if (!*(_QWORD *)(v44 + 8 * v41))
      {
        v41 = v47 + 2;
        if (v47 + 2 >= v46)
          break;
        if (!*(_QWORD *)(v44 + 8 * v41))
        {
          v48 = v47 + 3;
          if (v48 >= v46)
            break;
          if (!*(_QWORD *)(v44 + 8 * v48))
          {
            while (1)
            {
              v41 = v48 + 1;
              if (__OFADD__(v48, 1))
                goto LABEL_81;
              if (v41 >= v46)
                goto LABEL_62;
              ++v48;
              if (*(_QWORD *)(v44 + 8 * v41))
                goto LABEL_55;
            }
          }
          v41 = v48;
        }
      }
    }
LABEL_55:
    OUTLINED_FUNCTION_12_11();
  }
LABEL_62:
  swift_release();
  v53 = v75;
  v54 = (uint64_t *)(v75 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask);
  OUTLINED_FUNCTION_3_10();
  v55 = *v54;
  v56 = v71;
  v57 = v71 & ~*v54;
  v58 = v73;
  if (v57)
  {
    v59 = v71 & ~*v54;
    do
    {
      if ((v59 & 1) != 0)
      {
        if (HIDWORD(v57))
        {
          result = sub_249955D60();
          __break(1u);
          return result;
        }
        mach_absolute_time();
        ButtonEventWithPressure = (void *)IOHIDEventCreateButtonEventWithPressure();
        IOHIDEventSetIntegerValue();
        OUTLINED_FUNCTION_5_11();

      }
      v61 = v59 > 1;
      v59 >>= 1;
    }
    while (v61);
  }
  v62 = v55 & ~v56;
  if (v62)
  {
    do
    {
      if ((v62 & 1) != 0)
      {
        mach_absolute_time();
        v63 = (void *)IOHIDEventCreateButtonEventWithPressure();
        OUTLINED_FUNCTION_5_11();

      }
      v61 = v62 > 1;
      v62 >>= 1;
    }
    while (v61);
  }
  if (*(_BYTE *)(v53 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration) == 1)
  {
    v64 = mach_absolute_time();
    v65 = (void *)PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v64, 0, 0);
    OUTLINED_FUNCTION_5_11();

  }
  IOHIDEventSetIntegerValue();
  *v54 = v56;
  *(_BYTE *)(v53 + v70) = v72;
  v33 = v58;
  if ((OUTLINED_FUNCTION_16_8() & 1) == 0)
    goto LABEL_82;
LABEL_75:
  v66 = *(_QWORD *)(v31 + 16);
  if (v66 >= *(_QWORD *)(v31 + 24) >> 1)
  {
    OUTLINED_FUNCTION_1_16();
    v31 = v69;
  }
  v77 = &type metadata for PointerEvent;
  v78 = &protocol witness table for PointerEvent;
  v76 = v33;
  *(_QWORD *)(v31 + 16) = v66 + 1;
  OUTLINED_FUNCTION_8_11(v31 + 40 * v66);
  return v31;
}

uint64_t PointerGesture.deinit()
{
  uint64_t v0;

  sub_2499019A8(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  return v0;
}

uint64_t PointerGesture.__deallocating_deinit()
{
  uint64_t v0;

  sub_2499019A8(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  return swift_deallocClassInstance();
}

void sub_249901938(uint64_t *a1)
{
  PointerGesture.dispatch(report:)(*a1, a1[1]);
}

uint64_t sub_249901960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499019A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2499019EC()
{
  unint64_t result;

  result = qword_2578A13C8;
  if (!qword_2578A13C8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for PointerButtonMode, &type metadata for PointerButtonMode);
    atomic_store(result, (unint64_t *)&qword_2578A13C8);
  }
  return result;
}

_UNKNOWN **sub_249901A28()
{
  return &protocol witness table for PointerReport;
}

_UNKNOWN **sub_249901A34()
{
  return &protocol witness table for PointerReport;
}

uint64_t getEnumTagSinglePayload for PointerButtonMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PointerButtonMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249901B14 + 4 * byte_249959625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249901B48 + 4 * asc_249959620[v4]))();
}

uint64_t sub_249901B48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249901B50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249901B58);
  return result;
}

uint64_t sub_249901B64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249901B6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249901B70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249901B78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PointerButtonMode()
{
  return &type metadata for PointerButtonMode;
}

uint64_t sub_249901B94()
{
  return type metadata accessor for PointerGesture();
}

uint64_t type metadata accessor for PointerGesture()
{
  uint64_t result;

  result = qword_2578A1420;
  if (!qword_2578A1420)
    return swift_getSingletonMetadata();
  return result;
}

void sub_249901BD4()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PointerGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PointerGesture.__allocating_init(logger:useRemoteAcceleration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void OUTLINED_FUNCTION_0_15()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void OUTLINED_FUNCTION_1_16()
{
  sub_249907A4C();
}

uint64_t OUTLINED_FUNCTION_2_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

double OUTLINED_FUNCTION_3_13(int a1)
{
  return fabs((double)a1 * 0.0000152587891);
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return IOHIDEventAppendEvent();
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t a1)
{
  return PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(a1, 0, 0);
}

void OUTLINED_FUNCTION_7_13(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 5u);
}

uint64_t OUTLINED_FUNCTION_8_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2498CF9C0((__int128 *)(v1 - 152), a1 + 32);
}

BOOL OUTLINED_FUNCTION_9_9(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_11_10()
{
  JUMPOUT(0x24BCFB9B8);
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  return sub_249955AFC();
}

uint64_t OUTLINED_FUNCTION_14_11()
{
  return mach_absolute_time();
}

void OUTLINED_FUNCTION_15_11()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return swift_slowAlloc();
}

void EventReportSenderID.init(deviceID:serviceID:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_21_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  *(_QWORD *)(a3 + *(int *)(OUTLINED_FUNCTION_73() + 20)) = a2;
  OUTLINED_FUNCTION_18_3();
}

uint64_t type metadata accessor for EventReportSenderID()
{
  uint64_t result;

  result = qword_2578A1550;
  if (!qword_2578A1550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EventReportSenderID.deviceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_4_10(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t EventReportSenderID.deviceID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_4_10(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*EventReportSenderID.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t EventReportSenderID.serviceID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_73() + 20));
}

uint64_t EventReportSenderID.serviceID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_73();
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventReportSenderID.serviceID.modify())()
{
  OUTLINED_FUNCTION_73();
  return nullsub_1;
}

void EventReportSenderID.hash(into:)()
{
  OUTLINED_FUNCTION_21_7();
  sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2499557D8();
  OUTLINED_FUNCTION_73();
  sub_249955FF4();
  OUTLINED_FUNCTION_18_3();
}

BOOL static EventReportSenderID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_2499556C4() & 1) == 0)
    return 0;
  v4 = OUTLINED_FUNCTION_73();
  return *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_249901FCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x4449656369766564 && a2 == 0xE800000000000000;
  if (v2 || (sub_249955F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_249955F28();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2499020C4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4965636976726573;
  else
    return 0x4449656369766564;
}

uint64_t sub_249902100()
{
  char *v0;

  return sub_2499020C4(*v0);
}

uint64_t sub_249902108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249901FCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24990212C()
{
  sub_2499022C4();
  return sub_249956024();
}

uint64_t sub_249902154()
{
  sub_2499022C4();
  return sub_249956030();
}

uint64_t EventReportSenderID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A14C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_16_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2499022C4();
  sub_249956018();
  sub_2499556F4();
  sub_2498E2984(&qword_2578A14D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_249955EC8();
  if (!v1)
  {
    type metadata accessor for EventReportSenderID();
    sub_249955EE0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_2499022C4()
{
  unint64_t result;

  result = qword_2578A14D0;
  if (!qword_2578A14D0)
  {
    result = MEMORY[0x24BCFB904](&unk_249959928, &type metadata for EventReportSenderID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A14D0);
  }
  return result;
}

uint64_t EventReportSenderID.hashValue.getter()
{
  sub_249955FB8();
  OUTLINED_FUNCTION_21_7();
  sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2499557D8();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_6_16();
  return sub_249956000();
}

uint64_t EventReportSenderID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = sub_2499556F4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_16_0();
  v13 = v5 - v4;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A14E0);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_16_0();
  v6 = type metadata accessor for EventReportSenderID();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_16_0();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2499022C4();
  sub_24995600C();
  if (v2)
    return OUTLINED_FUNCTION_7_14();
  sub_2498E2984(&qword_2578A14E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_249955E44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v9, v13, v15);
  v10 = sub_249955E5C();
  OUTLINED_FUNCTION_2_12();
  *(_QWORD *)(v9 + *(int *)(v6 + 20)) = v10;
  sub_2498E2300(v9, a2);
  OUTLINED_FUNCTION_7_14();
  return sub_2498E2388(v9);
}

uint64_t sub_249902594@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventReportSenderID.init(from:)(a1, a2);
}

uint64_t sub_2499025A8(_QWORD *a1)
{
  return EventReportSenderID.encode(to:)(a1);
}

uint64_t sub_2499025C4()
{
  sub_249955FB8();
  OUTLINED_FUNCTION_21_7();
  sub_2498E2984(&qword_2578A0E48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2499557D8();
  OUTLINED_FUNCTION_6_16();
  return sub_249956000();
}

uint64_t EventReportSenderID.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2499556B8();
  v0 = sub_2499026FC(8);
  v1 = MEMORY[0x24BCFAA7C](v0);
  swift_bridgeObjectRelease();
  sub_2499558A4();
  OUTLINED_FUNCTION_73();
  sub_2498F0128();
  sub_2499558C8();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2499026FC(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_249955898();
    v1 = sub_2499558D4();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_2499027B8()
{
  return sub_2498E2984(&qword_2578A14F0, (uint64_t (*)(uint64_t))type metadata accessor for EventReportSenderID, (uint64_t)&protocol conformance descriptor for EventReportSenderID);
}

uint64_t *initializeBufferWithCopyOfBuffer for EventReportSenderID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2499556F4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EventReportSenderID(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2499556F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2499556F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2499556F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2499556F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2499556F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportSenderID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249902A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_21_7();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventReportSenderID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249902A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_21_7();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_249902A90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2499556F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EventReportSenderID.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249902B50 + 4 * byte_249959755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249902B84 + 4 * byte_249959750[v4]))();
}

uint64_t sub_249902B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249902B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249902B94);
  return result;
}

uint64_t sub_249902BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249902BA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249902BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249902BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventReportSenderID.CodingKeys()
{
  return &type metadata for EventReportSenderID.CodingKeys;
}

unint64_t sub_249902BD4()
{
  unint64_t result;

  result = qword_2578A1588;
  if (!qword_2578A1588)
  {
    result = MEMORY[0x24BCFB904](&unk_249959900, &type metadata for EventReportSenderID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A1588);
  }
  return result;
}

unint64_t sub_249902C14()
{
  unint64_t result;

  result = qword_2578A1590;
  if (!qword_2578A1590)
  {
    result = MEMORY[0x24BCFB904](&unk_249959870, &type metadata for EventReportSenderID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A1590);
  }
  return result;
}

unint64_t sub_249902C54()
{
  unint64_t result;

  result = qword_2578A1598;
  if (!qword_2578A1598)
  {
    result = MEMORY[0x24BCFB904](&unk_249959898, &type metadata for EventReportSenderID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A1598);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return sub_249955FF4();
}

uint64_t OUTLINED_FUNCTION_7_14()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t ScaleGesture.__allocating_init(platform:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

void static ScaleEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for ScaleGesture();
  *(_BYTE *)(swift_initStackObject() + 16) = v5;
  ScaleGesture.dispatch(report:)(a1, a2);
}

void ScaleGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  sub_2498CAD4C(16, a1, a2);
  sub_2498C8F2C(8, a1, a2);
  mach_absolute_time();
  IOHIDEventCreateScaleEvent();
  __asm { BR              X10 }
}

uint64_t sub_249902DE8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  uint64_t v18;
  uint64_t v19;

  if (((unint64_t)BYTE6(v2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x249902FB8);
  }
  if (BYTE6(v2) >= 0xCuLL)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    if (v3)
    {
      v18 = v3;
      v4 = sub_2498D3100((uint64_t)&v18, (uint64_t)&v19);
      v6 = v5;
      sub_2498CAC78(v4, v5);
      v7 = mach_absolute_time();
      sub_2498D2E30(v7, 16973568, 0, v4, v6);
      v9 = v8;
      IOHIDEventAppendEvent();

      sub_2498CACBC(v4, v6);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2499568A0;
  v11 = *(unsigned __int8 *)(v1 + 16);
  v12 = v0;
  v13 = mach_absolute_time();
  if (v11 == 1)
  {
    v14 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v13, 3, 0, 0, 0, 0);
    v15 = &protocol witness table for DigitizerEvent;
    v16 = &type metadata for DigitizerEvent;
  }
  else
  {
    v14 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v13, 0, 0);
    v15 = &protocol witness table for PointerEvent;
    v16 = &type metadata for PointerEvent;
  }
  IOHIDEventAppendEvent();

  *(_QWORD *)(v10 + 56) = v16;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 32) = v14;

  return v10;
}

void ScaleGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t ScaleGesture.init(platform:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t type metadata accessor for ScaleGesture()
{
  return objc_opt_self();
}

uint64_t ScaleGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ScaleGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_249903028(uint64_t a1)
{
  ScaleGesture.dispatch(report:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

_UNKNOWN **sub_249903050()
{
  return &protocol witness table for ScaleReport;
}

_UNKNOWN **sub_24990305C()
{
  return &protocol witness table for ScaleReport;
}

uint64_t method lookup function for ScaleGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScaleGesture.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void HIDReport.subscript.getter(uint64_t a1@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[11];
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = a1;
  v30 = *MEMORY[0x24BDAC8D0];
  v27 = *(_QWORD *)(a4 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v26 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v25 = (char *)v18 - v11;
  v24 = *(_QWORD *)(v12 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (OUTLINED_FUNCTION_1_17() < 8)
  {
    __break(1u);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    sub_249955F34();
    v23 = a5;
    sub_249955F10();
    v14 = a3 >> 62;
    v28 = a2;
    v29 = (int)a2;
    v15 = v7;
    v16 = v7 & 7;
    v22 = a3;
    if (v16)
    {
      OUTLINED_FUNCTION_1_17();
      LODWORD(v20) = v15 & 7;
      v21 = 8 - v16;
      v19 = 0xFFuLL >> (8 - v16);
      __asm { BR              X10 }
    }
    v17 = OUTLINED_FUNCTION_1_17();
    v19 = BYTE6(a3);
    v20 = (uint64_t)a2 >> 32;
    v18[10] = a2 >> 8;
    v18[7] = a2 >> 24;
    v18[8] = a2 >> 16;
    v18[5] = a2 >> 40;
    v18[6] = HIDWORD(a2);
    v18[4] = HIWORD(a2);
    v18[3] = HIBYTE(a2);
    v18[2] = a3 >> 8;
    v18[1] = a3 >> 16;
    if (!__OFSUB__(v17, 8))
      __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x249903638);
}

void HIDReport.subscript.setter(uint64_t a1, char a2)
{
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  if (sub_249955D0C() < 8)
  {
    __break(1u);
  }
  else
  {
    v4 = OUTLINED_FUNCTION_2_13();
    if ((a2 & 7) != 0)
      __asm { BR              X11 }
    if (!__OFSUB__(v4, 8))
      __asm { BR              X11 }
  }
  __break(1u);
  JUMPOUT(0x249903AB4);
}

{
  if ((a2 & 7) == 0)
    __asm { BR              X12 }
  OUTLINED_FUNCTION_0_25();
  __break(1u);
  JUMPOUT(0x24991F748);
}

unint64_t sub_249903B1C()
{
  unint64_t result;

  result = qword_2578A1668;
  if (!qword_2578A1668)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4298], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2578A1668);
  }
  return result;
}

void (*HIDReport.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t **a1, char a2)
{
  unint64_t *v6;
  _QWORD *v13;
  uint64_t v14;
  size_t v15;
  void *v16;

  v13 = malloc(0x48uLL);
  *a1 = v13;
  v13[4] = a6;
  v13[5] = v6;
  v13[2] = a4;
  v13[3] = a5;
  *v13 = a2;
  v13[1] = a3;
  v14 = *(_QWORD *)(a4 - 8);
  v13[6] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v13[7] = malloc(v15);
  v16 = malloc(v15);
  v13[8] = v16;
  HIDReport.subscript.getter(a2, *v6, v6[1], a4, (uint64_t)v16);
  return sub_249903C08;
}

void sub_249903C08(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[7];
  v4 = (void *)(*a1)[8];
  if ((a2 & 1) != 0)
  {
    v5 = v2[6];
    v6 = v2[2];
    v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))((*a1)[7], v4, v6);
    HIDReport.subscript.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v5 + 8))(v4, v6);
  }
  else
  {
    HIDReport.subscript.setter((*a1)[8], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  return sub_249955D0C();
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return sub_249955D0C();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  uint64_t v0;

  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  uint64_t v0;

  return v0;
}

void FluidTouchGestureReportProtocol.swipeMask.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_12(a1, a2);
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_26_6(16);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_18_3();
}

void FluidTouchGestureReportProtocol.gestureMotion.getter(uint64_t a1, uint64_t a2)
{
  sub_249903D90(a1, a2, 24);
}

void FluidTouchGestureReportProtocol.flavor.getter(uint64_t a1, uint64_t a2)
{
  sub_249903D90(a1, a2, 32);
}

void sub_249903D90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = OUTLINED_FUNCTION_4_12(a1, a2);
  v6 = v5;
  sub_2498C8F2C(a3, v4, v5);
  sub_2498CACBC(v4, v6);
  OUTLINED_FUNCTION_18_3();
}

double FluidTouchGestureReportProtocol.delta.getter(uint64_t a1, uint64_t a2)
{
  return sub_249903E50(a1, a2, (double (*)(void))FluidTouchGestureReportProtocol.x.getter, FluidTouchGestureReportProtocol.y.getter);
}

void FluidTouchGestureReportProtocol.progress.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_12(a1, a2);
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_19_10(40);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_17_11();
}

uint64_t FluidTouchGestureReportProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  int v2;

  FluidTouchGestureReportProtocol.flags.getter(a1, a2);
  return v2 & 0xFFFFFF8F;
}

double FluidTouchGestureReportProtocol.velocity.getter(uint64_t a1, uint64_t a2)
{
  return sub_249903E50(a1, a2, (double (*)(void))FluidTouchGestureReportProtocol.velocityX.getter, (void (*)(uint64_t, uint64_t))FluidTouchGestureReportProtocol.velocityY.getter);
}

double sub_249903E50(uint64_t a1, uint64_t a2, double (*a3)(void), void (*a4)(uint64_t, uint64_t))
{
  double v7;

  v7 = a3();
  a4(a1, a2);
  return v7;
}

void FluidTouchGestureReportProtocol.phase.setter(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  FluidTouchGestureReportProtocol.flags.getter(a2, a3);
  FluidTouchGestureReportProtocol.flags.setter(a1 & 0xFFFFFF8F | (16 * ((v6 >> 4) & 7)), a2, a3, v7, v8, v9, v10, v11);
}

uint64_t FluidTouchGestureReportProtocol.delta.setter(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_249903FC8(a1, a2, (void (*)(void))FluidTouchGestureReportProtocol.x.setter, FluidTouchGestureReportProtocol.y.setter, a3, a4);
}

void FluidTouchGestureReportProtocol.swipeMask.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >= 0xFF)
    v8 = 255;
  else
    v8 = a1;
  OUTLINED_FUNCTION_11_12(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  v9 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v8, 16);
  OUTLINED_FUNCTION_15_12(v9, v10, v11, v12, v13, v14, v15, v16, v18);
  OUTLINED_FUNCTION_7_16();
}

void FluidTouchGestureReportProtocol.flavor.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_249903F60(a1, a2, a3, 32, a5, a6, a7, a8);
}

uint64_t FluidTouchGestureReportProtocol.progress.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_249905294(a1, a2, 40, a3);
}

void FluidTouchGestureReportProtocol.gestureMotion.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_249903F60(a1, a2, a3, 24, a5, a6, a7, a8);
}

void sub_249903F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  void (*v10)(uint64_t *, _QWORD);
  uint64_t v11[4];

  if ((unsigned __int16)a1 >= 0xFFu)
    v9 = 255;
  else
    v9 = (unsigned __int16)a1;
  v10 = (void (*)(uint64_t *, _QWORD))OUTLINED_FUNCTION_11_12(a1, a2, a3, a4, a5, a6, a7, a8, v11[0]);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v9, a4);
  v10(v11, 0);
  OUTLINED_FUNCTION_7_16();
}

uint64_t FluidTouchGestureReportProtocol.velocity.setter(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_249903FC8(a1, a2, (void (*)(void))FluidTouchGestureReportProtocol.velocityX.setter, (uint64_t (*)(uint64_t, uint64_t, double))FluidTouchGestureReportProtocol.velocityY.setter, a3, a4);
}

uint64_t sub_249903FC8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, double), double a5, double a6)
{
  a3();
  return a4(a1, a2, a6);
}

uint64_t sub_24990401C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_24990403C();
  qword_2578ADE88 = result;
  unk_2578ADE90 = v1;
  return result;
}

uint64_t sub_24990403C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD v83[2];
  char v84;
  _QWORD v85[2];
  char v86;
  _QWORD v87[2];
  char v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  __int16 v97;
  uint64_t v98;
  unint64_t v99;

  LOBYTE(v98) = 12;
  sub_2498FCA34((uint64_t)&v98, 8uLL);
  v72 = v1;
  v73 = v0;
  LOBYTE(v98) = 14;
  sub_2498FC7A0((uint64_t)&v98, 1);
  v67 = v3;
  v68 = v2;
  LOBYTE(v95) = 0;
  LOBYTE(v92) = 1;
  LOBYTE(v89) = 0;
  LOBYTE(v87[0]) = 0;
  LOBYTE(v85[0]) = 0;
  LOBYTE(v83[0]) = 0;
  HIBYTE(v97) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v95, &v92, &v89, v87, v85, v83, (_BYTE *)&v97 + 1, &v98);
  LOBYTE(v95) = 12;
  sub_2498FCA34((uint64_t)&v95, 8uLL);
  v5 = v4;
  v7 = v6;
  v54 = v6;
  LOBYTE(v95) = 14;
  sub_2498FC7A0((uint64_t)&v95, 1);
  v71 = v8;
  v10 = v9;
  v53 = v9;
  LOBYTE(v92) = 0;
  LOBYTE(v89) = 1;
  LOBYTE(v87[0]) = 0;
  LOBYTE(v85[0]) = 0;
  LOBYTE(v83[0]) = 0;
  v97 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v92, &v89, v87, v85, v83, (_BYTE *)&v97 + 1, &v97, &v95);
  LOBYTE(v92) = 12;
  sub_2498FCA34((uint64_t)&v92, 8uLL);
  v66 = v11;
  v82 = v12;
  LOBYTE(v92) = 14;
  sub_2498FC7A0((uint64_t)&v92, 1);
  v14 = v13;
  v49 = v13;
  v65 = v15;
  LOBYTE(v89) = 0;
  LOBYTE(v87[0]) = 1;
  LOBYTE(v85[0]) = 0;
  LOBYTE(v83[0]) = 0;
  v97 = 0;
  v94 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v89, v87, v85, v83, (_BYTE *)&v97 + 1, &v97, &v94, &v92);
  LOBYTE(v89) = 12;
  sub_2498FCA34((uint64_t)&v89, 8uLL);
  v17 = v16;
  v47 = v16;
  v81 = v18;
  LOBYTE(v89) = 14;
  sub_2498FC7A0((uint64_t)&v89, 1);
  v59 = v19;
  v80 = v20;
  LOBYTE(v87[0]) = 0;
  LOBYTE(v85[0]) = 1;
  LOBYTE(v83[0]) = 0;
  v97 = 0;
  v94 = 0;
  v91 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v87, v85, v83, (_BYTE *)&v97 + 1, &v97, &v94, &v91, &v89);
  LOBYTE(v87[0]) = 12;
  sub_2498FCA34((uint64_t)v87, 0x10uLL);
  v78 = v22;
  v79 = v21;
  LOBYTE(v87[0]) = 14;
  sub_2498FC7A0((uint64_t)v87, 1);
  v76 = v24;
  v77 = v23;
  LOBYTE(v85[0]) = 0;
  LOBYTE(v83[0]) = 1;
  v97 = 0;
  v94 = 0;
  v91 = 0;
  v88 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v85, v83, (_BYTE *)&v97 + 1, &v97, &v94, &v91, &v88, v87);
  LOBYTE(v85[0]) = 12;
  sub_2498FCA34((uint64_t)v85, 0x20uLL);
  v74 = v26;
  v75 = v25;
  LOBYTE(v85[0]) = 14;
  sub_2498FC7A0((uint64_t)v85, 2);
  v64 = v27;
  v62 = v28;
  LOBYTE(v83[0]) = 0;
  v97 = 256;
  v94 = 0;
  v91 = 0;
  v88 = 0;
  v86 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v83, (_BYTE *)&v97 + 1, &v97, &v94, &v91, &v88, &v86, v85);
  LOBYTE(v83[0]) = 12;
  sub_2498FCA34((uint64_t)v83, 0x10uLL);
  v51 = v29;
  v52 = v30;
  LOBYTE(v83[0]) = 14;
  sub_2498FC7A0((uint64_t)v83, 2);
  v48 = v31;
  v60 = v32;
  v97 = 1;
  v94 = 0;
  v91 = 0;
  v88 = 0;
  v86 = 0;
  v84 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v97 + 1, &v97, &v94, &v91, &v88, &v86, &v84, v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2499599C0;
  *(_QWORD *)(v33 + 56) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 64) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 32) = v73;
  *(_QWORD *)(v33 + 40) = v72;
  *(_QWORD *)(v33 + 96) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 104) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 72) = v68;
  *(_QWORD *)(v33 + 80) = v67;
  v69 = v99;
  v34 = v99;
  v70 = v98;
  *(_QWORD *)(v33 + 136) = &type metadata for Input;
  *(_QWORD *)(v33 + 144) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 112) = v70;
  *(_QWORD *)(v33 + 120) = v34;
  *(_QWORD *)(v33 + 176) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 184) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 152) = v5;
  *(_QWORD *)(v33 + 160) = v7;
  *(_QWORD *)(v33 + 216) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 224) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 192) = v71;
  *(_QWORD *)(v33 + 200) = v10;
  v61 = v95;
  v35 = v95;
  v63 = v96;
  v36 = v96;
  *(_QWORD *)(v33 + 256) = &type metadata for Input;
  *(_QWORD *)(v33 + 264) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 232) = v35;
  *(_QWORD *)(v33 + 240) = v36;
  *(_QWORD *)(v33 + 296) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 304) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 272) = v66;
  *(_QWORD *)(v33 + 280) = v82;
  *(_QWORD *)(v33 + 336) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 344) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 312) = v14;
  *(_QWORD *)(v33 + 320) = v65;
  v57 = v93;
  v37 = v93;
  v58 = v92;
  *(_QWORD *)(v33 + 376) = &type metadata for Input;
  *(_QWORD *)(v33 + 384) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 352) = v58;
  *(_QWORD *)(v33 + 360) = v37;
  *(_QWORD *)(v33 + 416) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 424) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 392) = v17;
  *(_QWORD *)(v33 + 400) = v81;
  *(_QWORD *)(v33 + 456) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 464) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 432) = v59;
  *(_QWORD *)(v33 + 440) = v80;
  v55 = v90;
  v38 = v90;
  v56 = v89;
  *(_QWORD *)(v33 + 496) = &type metadata for Input;
  *(_QWORD *)(v33 + 504) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 472) = v56;
  *(_QWORD *)(v33 + 480) = v38;
  *(_QWORD *)(v33 + 536) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 544) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 512) = v79;
  *(_QWORD *)(v33 + 520) = v78;
  *(_QWORD *)(v33 + 576) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 584) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 552) = v77;
  *(_QWORD *)(v33 + 560) = v76;
  *(_QWORD *)(v33 + 656) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 664) = &protocol witness table for ReportSize;
  *(_QWORD *)(v33 + 776) = &type metadata for ReportSize;
  *(_QWORD *)(v33 + 784) = &protocol witness table for ReportSize;
  v40 = v87[1];
  v50 = v87[0];
  v39 = v87[0];
  *(_QWORD *)(v33 + 616) = &type metadata for Input;
  *(_QWORD *)(v33 + 624) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 592) = v39;
  *(_QWORD *)(v33 + 600) = v40;
  *(_QWORD *)(v33 + 632) = v75;
  *(_QWORD *)(v33 + 640) = v74;
  *(_QWORD *)(v33 + 696) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 704) = &protocol witness table for ReportCount;
  *(_QWORD *)(v33 + 672) = v64;
  *(_QWORD *)(v33 + 680) = v62;
  *(_QWORD *)(v33 + 816) = &type metadata for ReportCount;
  *(_QWORD *)(v33 + 824) = &protocol witness table for ReportCount;
  v41 = v85[0];
  v43 = v85[1];
  *(_QWORD *)(v33 + 736) = &type metadata for Input;
  *(_QWORD *)(v33 + 744) = &protocol witness table for Input;
  *(_QWORD *)(v33 + 712) = v41;
  *(_QWORD *)(v33 + 720) = v43;
  *(_QWORD *)(v33 + 752) = v51;
  *(_QWORD *)(v33 + 760) = v52;
  *(_QWORD *)(v33 + 792) = v48;
  *(_QWORD *)(v33 + 800) = v60;
  *(_QWORD *)(v33 + 856) = &type metadata for Input;
  *(_QWORD *)(v33 + 864) = &protocol witness table for Input;
  v44 = v83[0];
  v45 = v83[1];
  *(_QWORD *)(v33 + 832) = v83[0];
  *(_QWORD *)(v33 + 840) = v45;
  sub_2498CAC78(v73, v72);
  sub_2498CAC78(v68, v67);
  sub_2498CAC78(v70, v69);
  sub_2498CAC78(v5, v54);
  sub_2498CAC78(v71, v53);
  sub_2498CAC78(v61, v63);
  sub_2498CAC78(v66, v82);
  sub_2498CAC78(v49, v65);
  sub_2498CAC78(v58, v57);
  sub_2498CAC78(v47, v81);
  sub_2498CAC78(v59, v80);
  sub_2498CAC78(v56, v55);
  sub_2498CAC78(v79, v78);
  sub_2498CAC78(v77, v76);
  sub_2498CAC78(v50, v40);
  sub_2498CAC78(v75, v74);
  sub_2498CAC78(v64, v62);
  sub_2498CAC78(v41, v43);
  sub_2498CAC78(v51, v52);
  sub_2498CAC78(v48, v60);
  sub_2498CAC78(v44, v45);
  v46 = static HIDReportDescriptor.Builder.buildBlock(_:)(v33);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v44, v45);
  sub_2498CACBC(v48, v60);
  sub_2498CACBC(v51, v52);
  sub_2498CACBC(v41, v43);
  sub_2498CACBC(v64, v62);
  sub_2498CACBC(v75, v74);
  sub_2498CACBC(v50, v40);
  sub_2498CACBC(v77, v76);
  sub_2498CACBC(v79, v78);
  sub_2498CACBC(v56, v55);
  sub_2498CACBC(v59, v80);
  sub_2498CACBC(v47, v81);
  sub_2498CACBC(v58, v57);
  sub_2498CACBC(v49, v65);
  sub_2498CACBC(v66, v82);
  sub_2498CACBC(v61, v63);
  sub_2498CACBC(v71, v53);
  sub_2498CACBC(v5, v54);
  sub_2498CACBC(v70, v69);
  sub_2498CACBC(v68, v67);
  sub_2498CACBC(v73, v72);
  return v46;
}

uint64_t static FluidTouchGestureReport.reportID.getter()
{
  return 12;
}

uint64_t sub_249904780()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249904900(12);
  *(_QWORD *)&xmmword_2578A1670 = result;
  *((_QWORD *)&xmmword_2578A1670 + 1) = v1;
  return result;
}

uint64_t static FluidTouchGestureReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A0780, (uint64_t)&xmmword_2578A1670, a1);
}

uint64_t (*FluidTouchGestureReport.report.modify())()
{
  return nullsub_1;
}

void sub_2499047D8()
{
  uint64_t v0;

  sub_249950820(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t static DockSwipeReport.reportID.getter()
{
  return 11;
}

uint64_t sub_2499047EC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249904900(11);
  *(_QWORD *)&xmmword_2578A1680 = result;
  *((_QWORD *)&xmmword_2578A1680 + 1) = v1;
  return result;
}

uint64_t static DockSwipeReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A0788, (uint64_t)&xmmword_2578A1680, a1);
}

uint64_t sub_249904830()
{
  return 11;
}

void DockSwipeReport.report.getter(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

uint64_t DockSwipeReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*DockSwipeReport.report.modify())()
{
  return nullsub_1;
}

void sub_2499048A8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = DockSwipeReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499048C8()
{
  uint64_t v0;

  sub_249950838(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t static NavigationSwipeReport.reportID.getter()
{
  return 13;
}

uint64_t sub_2499048DC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249904900(13);
  *(_QWORD *)&xmmword_2578A1690 = result;
  *((_QWORD *)&xmmword_2578A1690 + 1) = v1;
  return result;
}

uint64_t sub_249904900(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;

  if (qword_2578A0778 != -1)
    swift_once();
  v2 = qword_2578ADE88;
  v3 = unk_2578ADE90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959020;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = a1;
  *(_QWORD *)(inited + 96) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(inited + 104) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = v3;
  OUTLINED_FUNCTION_28_5();
  v5 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  return v5;
}

uint64_t static NavigationSwipeReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A0790, (uint64_t)&xmmword_2578A1690, a1);
}

uint64_t sub_2499049FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  unint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = *a2;
  v8 = *a3;
  *a4 = *a2;
  a4[1] = v8;
  return sub_2498CAC78(v7, v8);
}

uint64_t sub_249904A50()
{
  return 13;
}

uint64_t (*NavigationSwipeReport.report.modify())()
{
  return nullsub_1;
}

void sub_249904A68()
{
  uint64_t v0;

  sub_249950850(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void FluidTouchGestureReportProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_12(a1, a2);
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_26_6(8);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_18_3();
}

void sub_249904AA4(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  FluidTouchGestureReportProtocol.flags.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249904AD4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.flags.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4, a5, a6, a7, a8);
}

void FluidTouchGestureReportProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_11_12(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  v9 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
  OUTLINED_FUNCTION_15_12(v9, v10, v11, v12, v13, v14, v15, v16, v18);
  OUTLINED_FUNCTION_7_16();
}

void FluidTouchGestureReportProtocol.flags.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.flags.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249904B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.flags.setter(*(unsigned __int8 *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249904B8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = FluidTouchGestureReportProtocol.phase.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

void sub_249904BBC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  FluidTouchGestureReportProtocol.phase.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void FluidTouchGestureReportProtocol.phase.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  *(_BYTE *)(v3 + 24) = FluidTouchGestureReportProtocol.phase.getter(v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_249904C14(uint64_t a1)
{
  FluidTouchGestureReportProtocol.phase.setter(*(unsigned __int8 *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

void sub_249904C38(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  int v4;

  FluidTouchGestureReportProtocol.swipeMask.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249904C68(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.swipeMask.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4, a5, a6, a7, a8);
}

void FluidTouchGestureReportProtocol.swipeMask.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.swipeMask.getter(v4, v5);
  *(_DWORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249904CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.swipeMask.setter(*(unsigned int *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_6_0();
}

void sub_249904CE4(uint64_t a1@<X1>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  __int16 v4;

  FluidTouchGestureReportProtocol.gestureMotion.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249904D14(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.gestureMotion.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4, a5, a6, a7, a8);
}

void FluidTouchGestureReportProtocol.gestureMotion.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.gestureMotion.getter(v4, v5);
  *(_WORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249904D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.gestureMotion.setter(*(unsigned __int16 *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_6_0();
}

void sub_249904D90(uint64_t a1@<X1>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  __int16 v4;

  FluidTouchGestureReportProtocol.flavor.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249904DC0(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.flavor.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4, a5, a6, a7, a8);
}

void FluidTouchGestureReportProtocol.flavor.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.flavor.getter(v4, v5);
  *(_WORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249904E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FluidTouchGestureReportProtocol.flavor.setter(*(unsigned __int16 *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_6_0();
}

void sub_249904E3C(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  FluidTouchGestureReportProtocol.progress.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

uint64_t sub_249904E6C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.progress.setter(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), *a1);
}

void FluidTouchGestureReportProtocol.progress.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.progress.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249904EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  v1 = OUTLINED_FUNCTION_8_12(a1);
  FluidTouchGestureReportProtocol.progress.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

#error "249904F00: call analysis failed (funcsize=13)"

void sub_249904F18(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  *a3 = FluidTouchGestureReportProtocol.velocityX.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
}

void sub_249904F48(double *a1)
{
  FluidTouchGestureReportProtocol.velocityX.setter(*a1);
}

void FluidTouchGestureReportProtocol.velocityX.setter(double a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = OUTLINED_FUNCTION_24_9(a1);
  OUTLINED_FUNCTION_12_12(v2, v3, v4, v5, v6, v7, v8, v9, v18);
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 56);
  OUTLINED_FUNCTION_22_8(v10, v11, v12, v13, v14, v15, v16, v17, v19);
  OUTLINED_FUNCTION_7_16();
}

void FluidTouchGestureReportProtocol.velocityX.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  *v3 = FluidTouchGestureReportProtocol.velocityX.getter(v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_249904FE0(uint64_t a1)
{
  double v1;

  OUTLINED_FUNCTION_8_12(a1);
  FluidTouchGestureReportProtocol.velocityX.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

#error "249905018: call analysis failed (funcsize=13)"

void sub_249905030(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  *a3 = FluidTouchGestureReportProtocol.velocityY.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
}

void sub_249905060(double *a1)
{
  FluidTouchGestureReportProtocol.velocityY.setter(*a1);
}

void FluidTouchGestureReportProtocol.velocityY.setter(double a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = OUTLINED_FUNCTION_24_9(a1);
  OUTLINED_FUNCTION_12_12(v2, v3, v4, v5, v6, v7, v8, v9, v18);
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 88);
  OUTLINED_FUNCTION_22_8(v10, v11, v12, v13, v14, v15, v16, v17, v19);
  OUTLINED_FUNCTION_7_16();
}

void FluidTouchGestureReportProtocol.velocityY.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  *v3 = FluidTouchGestureReportProtocol.velocityY.getter(v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499050F8(uint64_t a1)
{
  double v1;

  OUTLINED_FUNCTION_8_12(a1);
  FluidTouchGestureReportProtocol.velocityY.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void FluidTouchGestureReportProtocol.x.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_12(a1, a2);
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_19_10(120);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_17_11();
}

void sub_249905148(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  FluidTouchGestureReportProtocol.x.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

uint64_t sub_249905178(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.x.setter(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), *a1);
}

uint64_t FluidTouchGestureReportProtocol.x.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_249905294(a1, a2, 120, a3);
}

void FluidTouchGestureReportProtocol.x.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.x.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499051DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  v1 = OUTLINED_FUNCTION_8_12(a1);
  FluidTouchGestureReportProtocol.x.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

void FluidTouchGestureReportProtocol.y.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_12(a1, a2);
  OUTLINED_FUNCTION_13_11();
  OUTLINED_FUNCTION_19_10(136);
  OUTLINED_FUNCTION_6_8();
  OUTLINED_FUNCTION_17_11();
}

void sub_24990522C(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  FluidTouchGestureReportProtocol.y.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

uint64_t sub_24990525C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.y.setter(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), *a1);
}

uint64_t FluidTouchGestureReportProtocol.y.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_249905294(a1, a2, 136, a3);
}

uint64_t sub_249905294(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[4];

  if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
    v5 = a4;
  else
    v5 = 0.0;
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(a2 + 8) + 24))(v15, a1);
  v6 = sub_2498CF514(a3, v5);
  return OUTLINED_FUNCTION_15_12(v6, v7, v8, v9, v10, v11, v12, v13, v15[0]);
}

void FluidTouchGestureReportProtocol.y.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  FluidTouchGestureReportProtocol.y.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249905338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;

  v1 = OUTLINED_FUNCTION_8_12(a1);
  FluidTouchGestureReportProtocol.y.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

void FluidTouchGestureReportProtocol.velocity.modify()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_20_10();
  v2 = OUTLINED_FUNCTION_18_11(v1);
  *(double *)v0 = FluidTouchGestureReportProtocol.velocity.getter(v2, v3);
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_20_3();
}

void sub_249905390(double **a1, uint64_t a2)
{
  sub_249905440(a1, a2, (void (*)(_QWORD, _QWORD, double, double))FluidTouchGestureReportProtocol.velocity.setter);
}

void sub_24990539C(uint64_t a1@<X1>, uint64_t a2@<X2>, double (*a3)(_QWORD, _QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  *(double *)a4 = a3(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *(_QWORD *)(a4 + 8) = v5;
  *(_QWORD *)(a4 + 16) = 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499053CC(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, double, double))
{
  a5(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), *a1, a1[1]);
  OUTLINED_FUNCTION_6_0();
}

void FluidTouchGestureReportProtocol.delta.modify()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_20_10();
  v2 = OUTLINED_FUNCTION_18_11(v1);
  *(double *)v0 = FluidTouchGestureReportProtocol.delta.getter(v2, v3);
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_20_3();
}

void sub_249905434(double **a1, uint64_t a2)
{
  sub_249905440(a1, a2, (void (*)(_QWORD, _QWORD, double, double))FluidTouchGestureReportProtocol.delta.setter);
}

void sub_249905440(double **a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, double, double))
{
  double *v3;

  v3 = *a1;
  a3(*((_QWORD *)*a1 + 3), *((_QWORD *)*a1 + 4), *v3, v3[1]);
  free(v3);
}

void sub_249905510(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_24990539C(a1, a2, FluidTouchGestureReportProtocol.velocity.getter, a3);
}

void sub_24990552C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2499053CC(a1, a2, a3, a4, (void (*)(_QWORD, _QWORD, double, double))FluidTouchGestureReportProtocol.velocity.setter);
}

void sub_249905550(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_24990539C(a1, a2, FluidTouchGestureReportProtocol.delta.getter, a3);
}

void sub_24990556C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2499053CC(a1, a2, a3, a4, (void (*)(_QWORD, _QWORD, double, double))FluidTouchGestureReportProtocol.delta.setter);
}

void type metadata accessor for FluidTouchGestureReport()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for DockSwipeReport()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t *_s12UniversalHID23FluidTouchGestureReportVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  OUTLINED_FUNCTION_28_5();
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2498CACBC(v5, v6);
  return a1;
}

void type metadata accessor for NavigationSwipeReport()
{
  OUTLINED_FUNCTION_21_5();
}

__n128 OUTLINED_FUNCTION_0_17(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_2_14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_12(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 8))();
}

uint64_t OUTLINED_FUNCTION_8_12(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_10_12@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2499049FC(a1, (uint64_t *)a2, (unint64_t *)(a2 + 8), a3);
}

uint64_t OUTLINED_FUNCTION_11_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)(a3 + 8) + 24))(&a9);
}

uint64_t OUTLINED_FUNCTION_12_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v9 + 8) + 24))(&a9, v10);
}

uint64_t OUTLINED_FUNCTION_15_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *, _QWORD);

  return v9(&a9, 0);
}

uint64_t OUTLINED_FUNCTION_18_11(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *v4 = a1;
  a1[4] = v1;
  a1[5] = v2;
  a1[3] = v3;
  return v3;
}

double OUTLINED_FUNCTION_19_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_2498CAD4C(a1, v1, v2);
}

void *OUTLINED_FUNCTION_20_10()
{
  return malloc(0x30uLL);
}

uint64_t OUTLINED_FUNCTION_22_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *, _QWORD);

  return v9(&a9, 0);
}

unint64_t OUTLINED_FUNCTION_24_9(double a1)
{
  return HIDFixed.init(doubleValue:)(a1);
}

void OUTLINED_FUNCTION_26_6(char a1)
{
  uint64_t v1;
  unint64_t v2;

  sub_2498C8F2C(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_27_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v36, v37, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CAC78(v0, v1);
}

double OUTLINED_FUNCTION_29_4()
{
  int v0;

  return (double)v0 * 0.0000152587891;
}

uint64_t KeyboardGesture.dispatch(keyboardReport:localCapsLockState:)(unint64_t a1, unint64_t a2, int a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69[5];
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;

  v5 = v4;
  v72 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v54 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v54 - v16;
  v68 = MEMORY[0x24BEE4AF8];
  v67 = a3;
  v70 = a1;
  v71 = a2;
  if (*(_BYTE *)(v5 + 32) == 1)
  {
    sub_2498CAC78(a1, a2);
    OUTLINED_FUNCTION_33_4();
    if (((((v18 & 1) == 0) ^ a3) & 1) == 0)
    {
      OUTLINED_FUNCTION_30_4();
      sub_2498EFFC8(v5 + qword_2578A16A0, (uint64_t)v17);
      v19 = OUTLINED_FUNCTION_55_2();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19) == 1)
      {
        sub_2499019A8((uint64_t)v17);
      }
      else
      {
        v65 = v5;
        v25 = sub_249955700();
        v26 = sub_249955A24();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = OUTLINED_FUNCTION_22_9();
          *(_DWORD *)v27 = 67109376;
          OUTLINED_FUNCTION_1_19(a3 & 1);
          *(_WORD *)(v27 + 8) = 1024;
          LODWORD(v69[0]) = v3 & 1;
          OUTLINED_FUNCTION_7_17();
          OUTLINED_FUNCTION_54_2(&dword_2498C7000, v25, v26, "Caps Lock resync: %{BOOL}d -> %{BOOL}d", (uint8_t *)v27);
          OUTLINED_FUNCTION_23_7();
        }

        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
      }
    }
    OUTLINED_FUNCTION_51_2();
    MEMORY[0x24BDAC7A8](v28);
    *(&v54 - 2) = (uint64_t)v69;
    OUTLINED_FUNCTION_20_11();
    OUTLINED_FUNCTION_37_2((uint64_t)sub_2499094E0, (uint64_t)(&v54 - 4));
    v30 = v29;
    OUTLINED_FUNCTION_1_6();
    if ((v30 & 1) != 0)
    {
      OUTLINED_FUNCTION_38_3();
      if ((OUTLINED_FUNCTION_48_2() & 2) != 0)
      {
        OUTLINED_FUNCTION_38_3();
        OUTLINED_FUNCTION_48_2();
        sub_24995561C();
      }
    }
  }
  else
  {
    sub_2498CAC78(a1, a2);
    OUTLINED_FUNCTION_33_4();
    if (((((v20 & 1) == 0) ^ a3) & 1) == 0)
    {
      v65 = v5;
      OUTLINED_FUNCTION_51_2();
      MEMORY[0x24BDAC7A8](v21);
      *(&v54 - 2) = (uint64_t)v69;
      OUTLINED_FUNCTION_20_11();
      OUTLINED_FUNCTION_37_2((uint64_t)sub_249909220, (uint64_t)(&v54 - 4));
      v23 = v22;
      OUTLINED_FUNCTION_1_6();
      if ((v23 & 1) != 0)
      {
        OUTLINED_FUNCTION_30_4();
        sub_2498EFFC8(v65 + qword_2578A16A0, (uint64_t)v15);
        v24 = OUTLINED_FUNCTION_55_2();
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v24) == 1)
        {
          sub_2499019A8((uint64_t)v15);
        }
        else
        {
          v38 = sub_249955700();
          v39 = sub_249955A24();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = OUTLINED_FUNCTION_22_9();
            *(_DWORD *)v40 = 67109376;
            OUTLINED_FUNCTION_1_19(a3 & 1);
            *(_WORD *)(v40 + 8) = 1024;
            LODWORD(v69[0]) = v3 & 1;
            OUTLINED_FUNCTION_7_17();
            OUTLINED_FUNCTION_54_2(&dword_2498C7000, v38, v39, "Caps Lock pressed, toggle state: %{BOOL}d -> %{BOOL}d", (uint8_t *)v40);
            OUTLINED_FUNCTION_23_7();
          }

          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v15, v24);
        }
      }
      else
      {
        v55 = v12;
        v56 = a3;
        OUTLINED_FUNCTION_20_11();
        v57 = 0;
        v66 = (int)a1;
        v63 = BYTE6(a2);
        v64 = (uint64_t)a1 >> 32;
        v61 = a1 >> 16;
        v62 = a1 >> 8;
        v59 = HIDWORD(a1);
        v60 = a1 >> 24;
        v58 = a1 >> 40;
        v31 = 1;
        do
        {
          if ((unint64_t)(v31 - 232) > 0xFFFFFFFFFFFFFF18)
            __asm { BR              X10 }
        }
        while (v31++ <= 230);
        OUTLINED_FUNCTION_1_6();
        v33 = v65;
        v34 = v56;
        v35 = (uint64_t)v55;
        if (v57)
        {
          OUTLINED_FUNCTION_30_4();
          sub_2498EFFC8(v33 + qword_2578A16A0, v35);
          v36 = OUTLINED_FUNCTION_55_2();
          if (__swift_getEnumTagSinglePayload(v35, 1, v36) == 1)
          {
            sub_2499019A8(v35);
            v37 = MEMORY[0x24BEE4AF8];
          }
          else
          {
            v41 = sub_249955700();
            v42 = sub_249955A24();
            if (os_log_type_enabled(v41, v42))
            {
              v43 = OUTLINED_FUNCTION_22_9();
              *(_DWORD *)v43 = 67109376;
              OUTLINED_FUNCTION_1_19(v34 & 1);
              *(_WORD *)(v43 + 8) = 1024;
              LODWORD(v69[0]) = v31 & 1;
              OUTLINED_FUNCTION_7_17();
              OUTLINED_FUNCTION_54_2(&dword_2498C7000, v41, v42, "Caps Lock resync: %{BOOL}d -> %{BOOL}d", (uint8_t *)v43);
              OUTLINED_FUNCTION_23_7();
            }

            OUTLINED_FUNCTION_53_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8));
            v37 = v68;
          }
          mach_absolute_time();
          OUTLINED_FUNCTION_49_2();
          IOHIDEventCreateKeyboardEvent();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249907A4C();
            v37 = v51;
          }
          if (*(_QWORD *)(v37 + 16) >= *(_QWORD *)(v37 + 24) >> 1)
          {
            OUTLINED_FUNCTION_16_9();
            v37 = v52;
          }
          OUTLINED_FUNCTION_13_12();
          mach_absolute_time();
          OUTLINED_FUNCTION_49_2();
          IOHIDEventCreateKeyboardEvent();
          if (*(_QWORD *)(v37 + 16) >= *(_QWORD *)(v37 + 24) >> 1)
          {
            OUTLINED_FUNCTION_16_9();
            v37 = v53;
          }
          OUTLINED_FUNCTION_13_12();
          v68 = v37;
        }
      }
    }
  }
  v44 = v70;
  v45 = v71;
  sub_2499063BC(v69);
  v46 = v69[0];
  v47 = v69[1];
  OUTLINED_FUNCTION_14_7();
  v48 = sub_249906570(v44, v45, v46, v47);
  sub_2498CACBC(v46, v47);
  OUTLINED_FUNCTION_27_9();
  sub_24992C44C(v48);
  v49 = v68;
  OUTLINED_FUNCTION_14_7();
  swift_bridgeObjectRetain();
  sub_24990776C(v44, v45);
  OUTLINED_FUNCTION_27_9();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_7();
  sub_249906444(v44, v45);
  OUTLINED_FUNCTION_27_9();
  OUTLINED_FUNCTION_3_10();
  return v49;
}

void AppleVendorTopCaseGesture.__allocating_init()()
{
  OUTLINED_FUNCTION_17_3();
  _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0();
  OUTLINED_FUNCTION_6_0();
}

void AppleVendorKeyboardGesture.__allocating_init()()
{
  OUTLINED_FUNCTION_17_3();
  _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0();
  OUTLINED_FUNCTION_6_0();
}

void ConsumerGesture.__allocating_init()()
{
  OUTLINED_FUNCTION_17_3();
  _s12UniversalHID15ConsumerGestureCACycfc_0();
  OUTLINED_FUNCTION_6_0();
}

void KeyboardGesture.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_27_5();
  v4 = 0;
  sub_2498EFFC8(a1, v1);
  OUTLINED_FUNCTION_32_4();
  KeyboardGesture.init(platform:logger:)(&v4, v1);
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_18_3();
}

void _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_2578A0740 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  *(_QWORD *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 4);
  *(_QWORD *)(v0 + 24) = v2;
  OUTLINED_FUNCTION_11_7();
}

void _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_2578A0758 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  *(_QWORD *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 3);
  *(_QWORD *)(v0 + 24) = v2;
  OUTLINED_FUNCTION_11_7();
}

void _s12UniversalHID15ConsumerGestureCACycfc_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_2578A0768 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  *(_QWORD *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 2);
  *(_QWORD *)(v0 + 24) = v2;
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_249906298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_2578A0750 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  *(_QWORD *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 1);
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

void GenericKeyboardGesture.init()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_27_5();
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 + 88) + 32))(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 96), v2, v4);
  OUTLINED_FUNCTION_18_3();
}

uint64_t GenericKeyboardGesture.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_2499063BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *a1 = v3;
  a1[1] = v4;
  return sub_2498CAC78(v3, v4);
}

void sub_249906400(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_3_10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 16))(a1, v1);
  OUTLINED_FUNCTION_7_16();
}

uint64_t sub_249906444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return sub_2498CACBC(v5, v6);
}

void sub_249906494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_35_2();
  OUTLINED_FUNCTION_3_10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 40))(v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_7_16();
}

uint64_t ConsumerGesture.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_3();
  return v0;
}

uint64_t _s12UniversalHID26AppleVendorKeyboardGestureCfD_0()
{
  OUTLINED_FUNCTION_40_3();
  return swift_deallocClassInstance();
}

void GenericKeyboardGesture.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  GenericKeyboardGesture.init()(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t GenericKeyboardGesture.__deallocating_deinit()
{
  GenericKeyboardGesture.deinit();
  OUTLINED_FUNCTION_47_2();
  return swift_deallocClassInstance();
}

uint64_t sub_249906570(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v18 = a3;
  v19 = a4;
  sub_2498CAC78(a3, a4);
  sub_2498CAC78(a3, a4);
  sub_2498CAC78(a1, a2);
  sub_2498E87A0((uint64_t)&v18, a1, a2);
  v20 = a3;
  v21 = a4;
  sub_2498E87FC((uint64_t)&v20, v18, v19);
  v8 = v20;
  v9 = v21;
  sub_249906A10(v20, v21);
  v11 = v10;
  sub_2498CACBC(v8, v9);
  v18 = a1;
  v19 = a2;
  sub_2498CAC78(a1, a2);
  sub_2498CAC78(a3, a4);
  sub_2498CAC78(a1, a2);
  sub_2498E87A0((uint64_t)&v18, a3, a4);
  v20 = a1;
  v21 = a2;
  sub_2498E87FC((uint64_t)&v20, v18, v19);
  v12 = v20;
  v13 = v21;
  sub_249906D40(v20, v21);
  v15 = v14;
  sub_2498CACBC(v12, v13);
  v20 = v11;
  sub_24992C340(v15);
  v16 = sub_249911E78(v20);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_2499066C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[16];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v33 = a8;
  v37 = a7;
  v36 = a6;
  v30 = a5;
  v34 = a2;
  v28 = a1;
  v35 = a11;
  v32 = *v11;
  v15 = *(_QWORD *)(a3 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v28 - v19;
  v31 = *(void (**)(char *))(v15 + 16);
  v31(v18);
  sub_249955BB0();
  v29 = *(_QWORD *)(v32 + 80);
  v50 = v29;
  v51 = a3;
  v52 = a4;
  v53 = a5;
  v54 = v36;
  v55 = v37;
  v21 = v33;
  v56 = v33;
  v57 = a9;
  v58 = a10;
  v59 = v35;
  v32 = sub_249907070((void (*)(char *, char *))sub_249909438, (uint64_t)v49, a3, (uint64_t)&type metadata for KeyboardEvent, MEMORY[0x24BEE4078], v33, MEMORY[0x24BEE40A8], v22);
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v20, a3);
  ((void (*)(char *, uint64_t, uint64_t))v31)(v18, v28, a3);
  sub_249955BB0();
  v39 = v29;
  v40 = a3;
  v41 = a4;
  v42 = v30;
  v43 = v36;
  v44 = v37;
  v45 = v21;
  v46 = a9;
  v47 = a10;
  v48 = v35;
  v25 = sub_249907070((void (*)(char *, char *))sub_249909454, (uint64_t)v38, a3, (uint64_t)&type metadata for KeyboardEvent, MEMORY[0x24BEE4078], v21, MEMORY[0x24BEE40A8], v24);
  v23(v20, a3);
  v60 = v32;
  sub_24992C340(v25);
  v26 = sub_249911E78(v60);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_24990696C@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v5 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(AssociatedTypeWitness, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(AssociatedTypeWitness, a4);
  mach_absolute_time();
  result = IOHIDEventCreateKeyboardEvent();
  *a1 = result;
  return result;
}

void sub_249906A10(uint64_t a1, unint64_t a2)
{
  sub_249955CAC();
  sub_2498CAC78(a1, a2);
  __asm { BR              X10 }
}

void sub_249906D40(uint64_t a1, unint64_t a2)
{
  sub_249955CAC();
  sub_2498CAC78(a1, a2);
  __asm { BR              X10 }
}

uint64_t sub_249907070(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  int EnumTagSinglePayload;
  char *v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v38 = a8;
  v39 = a5;
  v9 = v8;
  v52 = a1;
  v53 = a2;
  v37 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v51 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)v36 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v42 = (char *)v36 - v17;
  v18 = sub_249955AD8();
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v36 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v36[1] = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v46 = (char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a6;
  v55 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v49 = (char *)v36 - v28;
  v29 = sub_2499558EC();
  v56 = sub_249955CDC();
  sub_249955CE8();
  sub_249955CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v44, v15);
  v47 = v15;
  result = sub_2499558E0();
  if (v29 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v29)
  {
    swift_getAssociatedConformanceWitness();
    v31 = v49;
    while (1)
    {
      sub_249955AE4();
      result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v52(v23, v51);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v51, v39);
        return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      sub_249955CD0();
      if (!--v29)
      {
        v32 = (uint64_t)v48;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v32 = (uint64_t)v48;
  v31 = v49;
LABEL_9:
  sub_249955AE4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, AssociatedTypeWitness);
  v34 = v42;
  if (EnumTagSinglePayload == 1)
  {
    v35 = (uint64_t)v48;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v41);
    return v56;
  }
  else
  {
    v51 = *(char **)(v54 + 32);
    v35 = (uint64_t)v48;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v51)(v34, v35, AssociatedTypeWitness);
      v52(v34, v50);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
      sub_249955CD0();
      sub_249955AE4();
      if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v50, v39);
  }
}

uint64_t sub_249907580@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v5 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(AssociatedTypeWitness, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(AssociatedTypeWitness, a4);
  mach_absolute_time();
  result = IOHIDEventCreateKeyboardEvent();
  *a1 = result;
  return result;
}

uint64_t GenericKeyboardGesture<>.dispatch(report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a4;
  v27 = a5;
  v11 = *(_QWORD *)(*(_QWORD *)v6 + 80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  sub_249906400((uint64_t)&v25 - v16);
  v24 = a3;
  v18 = a3;
  v19 = v27;
  v20 = sub_2499066C0(a1, (uint64_t)v17, v11, a2, v18, v26, v27, a2, v24, a6, a6);
  v28 = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A16A8);
  v22 = sub_24990923C();
  Sequence<>.addRemoteTimestamp<A>(from:)(a1, v21, v11, v22, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  sub_249906494((uint64_t)v15);
  OUTLINED_FUNCTION_53_1(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  return v20;
}

void sub_24990776C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_2499077C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x2499078C4);
  }
  if (BYTE6(a3) >= 0x27uLL)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    if (v4)
    {
      v10 = v4;
      v5 = sub_2498D3100((uint64_t)&v10, (uint64_t)&v11);
      v7 = v6;
      v8 = *(_QWORD *)(v3 + 16);
      if (v8)
      {
        v9 = (_QWORD *)(v3 + 32);
        swift_bridgeObjectRetain();
        do
        {
          __swift_project_boxed_opaque_existential_1(v9, v9[3]);
          HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
          v9 += 5;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
      }
      sub_2498CACBC(v5, v7);
    }
  }
}

uint64_t sub_2499078E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return GenericKeyboardGesture<>.dispatch(report:)(a1, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), *(_QWORD *)(a3 - 24), *(_QWORD *)(a3 - 32), *(_QWORD *)(a3 - 40));
}

void KeyboardGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

void KeyboardGesture.__allocating_init(platform:logger:)(_BYTE *a1, uint64_t a2)
{
  OUTLINED_FUNCTION_32_4();
  KeyboardGesture.init(platform:logger:)(a1, a2);
  OUTLINED_FUNCTION_18_3();
}

void KeyboardGesture.init(platform:logger:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 32) = *a1;
  sub_2498EFFC8(a2, v2 + qword_2578A16A0);
  sub_249906298();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_6_0();
}

void KeyboardGesture.__allocating_init()()
{
  OUTLINED_FUNCTION_31_3();
  __break(1u);
}

void KeyboardGesture.init()()
{
  OUTLINED_FUNCTION_31_3();
  __break(1u);
}

uint64_t sub_2499079D0()
{
  uint64_t v0;

  return sub_2499019A8(v0 + qword_2578A16A0);
}

uint64_t KeyboardGesture.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_3();
  sub_2499019A8(v0 + qword_2578A16A0);
  return v0;
}

uint64_t KeyboardGesture.__deallocating_deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_40_3();
  sub_2499019A8(v0 + qword_2578A16A0);
  OUTLINED_FUNCTION_47_2();
  return swift_deallocClassInstance();
}

void sub_249907A30(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_249907BA4(a1, a2, a3, a4, &qword_2578A0C98, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_249907F00, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D501C);
}

void sub_249907A4C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_29_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_22_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
    v5 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    OUTLINED_FUNCTION_14_12(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = OUTLINED_FUNCTION_24_10();
    sub_2498D50CC(v6);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_11_13();
    sub_249907FF4(v7, v8, v9, v10);
  }
  OUTLINED_FUNCTION_20_3();
}

void sub_249907AE8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_29_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_22_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AE0);
    v6 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_24_10();
    sub_2498D5130(v8);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_11_13();
    sub_249908110(v9, v10, v11, v12);
  }
  OUTLINED_FUNCTION_18_3();
}

void sub_249907B88(char a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_249907BA4(a1, a2, a3, a4, &qword_2578A1AF8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_2499081FC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498D5270);
}

void sub_249907BA4(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_22_3();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  if ((a1 & 1) != 0)
  {
    a7(a4 + 32, v14, v18);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
  OUTLINED_FUNCTION_20_3();
}

void sub_249907C70()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_29_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_22_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AE8);
    v5 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    OUTLINED_FUNCTION_14_12(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)OUTLINED_FUNCTION_24_10();
    sub_2498D5274(v6, v7, v8);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_11_13();
    sub_2499082EC(v9, v10, v11, v12);
  }
  OUTLINED_FUNCTION_20_3();
}

void sub_249907D0C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_29_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_22_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C38);
    v6 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 4);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_24_10();
    sub_2498D5074(v8, v9, v10);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_11_13();
    sub_249908408(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_18_3();
}

void sub_249907DB8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_29_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_22_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AD8);
    v5 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    OUTLINED_FUNCTION_14_12(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)OUTLINED_FUNCTION_24_10();
    sub_2498D5458(v6, v7, v8);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_11_13();
    sub_2499084F8(v9, v10, v11, v12);
  }
  OUTLINED_FUNCTION_20_3();
}

void sub_249907E54()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_29_0();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_4();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_22_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_12_4();
    }
  }
  OUTLINED_FUNCTION_16_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C58);
    v6 = (_QWORD *)OUTLINED_FUNCTION_17_3();
    v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 8);
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)OUTLINED_FUNCTION_24_10();
    sub_2498D5218(v8, v9, v10);
    OUTLINED_FUNCTION_3_15();
  }
  else
  {
    v11 = OUTLINED_FUNCTION_11_13();
    sub_2499085F0(v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_249907F00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249955DCC();
  __break(1u);
  return result;
}

uint64_t sub_249907FF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2330);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249955DCC();
  __break(1u);
  return result;
}

char *sub_249908110(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249955DCC();
  __break(1u);
  return result;
}

char *sub_2499081FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249955DCC();
  __break(1u);
  return result;
}

uint64_t sub_2499082EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AF0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249955DCC();
  __break(1u);
  return result;
}

char *sub_249908408(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249955DCC();
  __break(1u);
  return result;
}

char *sub_2499084F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 144 * a1 + 32);
    v6 = 9 * v4;
    v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_249955DCC();
  __break(1u);
  return result;
}

char *sub_2499085F0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249955DCC();
  __break(1u);
  return result;
}

void sub_2499086E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  _BYTE v18[7];

  OUTLINED_FUNCTION_2_15(a1, a2, a3, a4);
  v5 = 0;
  for (i = 0; (i - 0x1000000000000000) >> 61 == 7; ++i)
  {
    if (__OFADD__(v5, 8))
      goto LABEL_16;
    OUTLINED_FUNCTION_44_2(v5 + 8);
    if ((v7 - 3) >= 3u)
    {
      if (i > 2)
      {
LABEL_11:
        OUTLINED_FUNCTION_5_4();
        v16 = 0;
LABEL_14:
        OUTLINED_FUNCTION_39_2(v16);
        OUTLINED_FUNCTION_18_12();
        return;
      }
    }
    else
    {
      v15 = OUTLINED_FUNCTION_41_2(v7, v8, v9, v10, v11, v12, v13, v14, v17, *(int *)v18, *(__int16 *)&v18[4], v18[6], v7);
      if (v4)
      {
        OUTLINED_FUNCTION_5_4();
        goto LABEL_14;
      }
      if ((v15 & 1) != 0)
      {
        OUTLINED_FUNCTION_5_4();
        v16 = 1;
        goto LABEL_14;
      }
      if (i >= 3)
        goto LABEL_11;
    }
    v5 += 8;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_24990879C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;

  v4 = a4 >> 62;
  OUTLINED_FUNCTION_12_13(a1, a2, a3, a4);
  __asm { BR              X10 }
}

void sub_249908A80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v16;
  char v17;
  uint64_t v18;
  _BYTE v19[7];

  OUTLINED_FUNCTION_2_15(a1, a2, a3, a4);
  v5 = 0;
  while (1)
  {
    while (1)
    {
      OUTLINED_FUNCTION_44_2(8 * v5 + 8);
      if ((v6 - 49) > 0xCFu && v6 <= 0x21u && ((1 << v6) & 0x30003001ELL) != 0)
        break;
      v14 = v5 < 1;
      v5 = 1;
      if (!v14)
        goto LABEL_12;
    }
    v16 = OUTLINED_FUNCTION_41_2(v6, v7, v8, v9, v10, v11, v12, v13, v18, *(int *)v19, *(__int16 *)&v19[4], v19[6], v6);
    if (v4)
    {
      OUTLINED_FUNCTION_5_4();
      goto LABEL_15;
    }
    if ((v16 & 1) != 0)
      break;
    v14 = v5++ < 1;
    if (!v14)
    {
LABEL_12:
      OUTLINED_FUNCTION_5_4();
      v17 = 0;
      goto LABEL_15;
    }
  }
  OUTLINED_FUNCTION_5_4();
  v17 = 1;
LABEL_15:
  OUTLINED_FUNCTION_39_2(v17);
  OUTLINED_FUNCTION_18_12();
}

void sub_249908B48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;

  v4 = a4 >> 62;
  sub_2498CAC78(a3, a4);
  __asm { BR              X10 }
}

#error "249908E94: call analysis failed (funcsize=54)"

void sub_249908F20(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;

  v4 = a4 >> 62;
  OUTLINED_FUNCTION_12_13(a1, a2, a3, a4);
  __asm { BR              X9 }
}

void sub_249908FF0()
{
  uint64_t v1;

  if (!__OFADD__(*(_QWORD *)(v1 - 120), 1))
    __asm { BR              X8 }
  __break(1u);
  JUMPOUT(0x2499091B8);
}

BOOL sub_249909200(char *a1, char *a2)
{
  return sub_24991D314(*a1, *a2);
}

BOOL sub_249909220(char *a1)
{
  uint64_t v1;

  return sub_249909200(a1, *(char **)(v1 + 16));
}

unint64_t sub_24990923C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A16B0;
  if (!qword_2578A16B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A16A8);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2578A16B0);
  }
  return result;
}

uint64_t sub_249909280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 24);
}

uint64_t sub_249909288(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t type metadata accessor for AppleVendorKeyboardGesture(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A1708);
}

uint64_t type metadata accessor for AppleVendorTopCaseGesture(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A17E0);
}

uint64_t type metadata accessor for ConsumerGesture(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A18B8);
}

uint64_t sub_2499092D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_249909308()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for GenericKeyboardGesture(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GenericKeyboardGesture);
}

uint64_t method lookup function for GenericKeyboardGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenericKeyboardGesture.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for KeyboardGesture(uint64_t a1)
{
  return sub_2498F950C(a1, qword_2578A1A10);
}

void sub_2499093AC()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t method lookup function for KeyboardGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyboardGesture.__allocating_init(platform:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_249909438(uint64_t a1, uint64_t a2)
{
  return sub_249909470(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_24990696C);
}

uint64_t sub_249909454(uint64_t a1, uint64_t a2)
{
  return sub_249909470(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_249907580);
}

uint64_t sub_249909470(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10], v3[11], a2);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BCFB8B0](a1, v6, a5);
}

BOOL sub_2499094E0(char *a1)
{
  return sub_249909220(a1);
}

uint64_t OUTLINED_FUNCTION_1_19@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 152) = a1;
  return sub_249955AFC();
}

uint64_t OUTLINED_FUNCTION_2_15(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2498CAC78(a3, a4);
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return sub_249955AFC();
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_13(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2498CAC78(a3, a4);
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = v4;
  *(_QWORD *)(v6 - 152) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return sub_2498CF9C0((__int128 *)(v6 - 152), v1 + 40 * v5 + 32);
}

size_t OUTLINED_FUNCTION_14_12(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void OUTLINED_FUNCTION_16_9()
{
  sub_249907A4C();
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_24_10()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_26_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23)
{
  uint64_t v23;

  return sub_2498CACBC(v23, a23);
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;

  return sub_2498CACBC(v20, a20);
}

void OUTLINED_FUNCTION_30_4()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 161) = (v0 ^ 1) & 1;
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_33_4()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
}

void OUTLINED_FUNCTION_37_2(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  sub_249908B48(a1, a2, v3, v2);
}

Swift::Int OUTLINED_FUNCTION_38_3()
{
  return HIDReport.offset(for:)(65);
}

uint64_t OUTLINED_FUNCTION_39_2@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  uint64_t v0;

  return sub_2498CACBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_41_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t (*v13)(char *);

  return v13(&a13);
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return sub_249955574();
}

void OUTLINED_FUNCTION_44_2(char a1)
{
  unint64_t v1;
  uint64_t v2;

  sub_2498C8F2C(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  uint64_t v0;

  return sub_2499019A8(v0);
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return sub_249955574();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return 0;
}

void OUTLINED_FUNCTION_51_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 152) = 57;
}

uint64_t OUTLINED_FUNCTION_53_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_54_2(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xEu);
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return sub_249955718();
}

void sub_249909768(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2499097B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (BYTE6(v1) == 16)
  {
    sub_249909900();
    sub_249955538();
    sub_2499556D0();
    OUTLINED_FUNCTION_8_6();
    v2 = sub_2499556F4();
    return __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  }
  else
  {
    OUTLINED_FUNCTION_8_6();
    v4 = sub_2499556F4();
    return __swift_storeEnumTagSinglePayload(v0, 1, 1, v4);
  }
}

unint64_t sub_249909900()
{
  unint64_t result;

  result = qword_2578A1B00;
  if (!qword_2578A1B00)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578A1B00);
  }
  return result;
}

uint64_t PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (!HIDWORD(a2) && !HIDWORD(a3))
    return IOHIDEventCreateRelativePointerEvent();
  result = sub_249955D60();
  __break(1u);
  return result;
}

uint64_t PointerEvent.buttonMask.setter()
{
  return OUTLINED_FUNCTION_5_13();
}

uint64_t static PointerEvent.eventType.getter()
{
  return 17;
}

uint64_t PointerEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

void PointerEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909A18()
{
  return OUTLINED_FUNCTION_7_18();
}

uint64_t PointerEvent.y.getter()
{
  return OUTLINED_FUNCTION_9_11();
}

uint64_t PointerEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_18();
}

void PointerEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_14(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909A68()
{
  return OUTLINED_FUNCTION_0_18();
}

uint64_t PointerEvent.z.getter()
{
  return OUTLINED_FUNCTION_9_11();
}

uint64_t PointerEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_18();
}

void PointerEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909AC0()
{
  return OUTLINED_FUNCTION_0_18();
}

uint64_t PointerEvent.buttonMask.getter()
{
  return IOHIDEventGetIntegerValue();
}

void PointerEvent.buttonMask.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_12_14(a1, a2);
  *v2 = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909B10()
{
  return OUTLINED_FUNCTION_5_13();
}

uint64_t PointerEvent.buttonClickCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t PointerEvent.buttonClickCount.setter()
{
  return OUTLINED_FUNCTION_8_13();
}

void PointerEvent.buttonClickCount.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_2_2(a1, a2);
  *v2 = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909B60()
{
  return OUTLINED_FUNCTION_8_13();
}

uint64_t PointerEvent.buttonNumber.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t PointerEvent.buttonNumber.setter()
{
  return OUTLINED_FUNCTION_3_16();
}

void PointerEvent.buttonNumber.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_11_14(a1, a2);
  *v2 = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909BB4()
{
  return OUTLINED_FUNCTION_3_16();
}

uint64_t PointerEvent.buttonPressure.getter()
{
  return IOHIDEventGetFloatValue();
}

void PointerEvent.buttonPressure.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12_14(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909C00()
{
  return OUTLINED_FUNCTION_6_18();
}

void sub_249909C10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  PointerEvent.x.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909C30(double *a1, _QWORD *a2)
{
  return PointerEvent.x.setter(*a2, *a1);
}

void sub_249909C3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  PointerEvent.y.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909C5C()
{
  return PointerEvent.y.setter();
}

void sub_249909C68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  PointerEvent.z.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909C88()
{
  return PointerEvent.z.setter();
}

void sub_249909C94(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = PointerEvent.buttonMask.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909CB4()
{
  return PointerEvent.buttonMask.setter();
}

void sub_249909CC0(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = PointerEvent.buttonClickCount.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909CE0()
{
  return PointerEvent.buttonClickCount.setter();
}

void sub_249909CEC(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = PointerEvent.buttonNumber.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909D0C()
{
  return PointerEvent.buttonNumber.setter();
}

void sub_249909D18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  PointerEvent.buttonPressure.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909D38(double *a1, _QWORD *a2)
{
  return PointerEvent.buttonPressure.setter(*a2, *a1);
}

ValueMetadata *type metadata accessor for PointerEvent()
{
  return &type metadata for PointerEvent;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_11_14(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_12_14(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = a2;
  return a2;
}

uint64_t KeyboardEvent.init(timestamp:usage:down:flags:)()
{
  return IOHIDEventCreateKeyboardEvent();
}

uint64_t static KeyboardEvent.eventType.getter()
{
  return 3;
}

BOOL KeyboardEvent.down.getter()
{
  return OUTLINED_FUNCTION_2_16() != 0;
}

uint64_t KeyboardEvent.down.setter()
{
  return OUTLINED_FUNCTION_0_19();
}

void KeyboardEvent.down.modify(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = OUTLINED_FUNCTION_2_16() != 0;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909E60()
{
  return OUTLINED_FUNCTION_0_19();
}

uint64_t KeyboardEvent.pressCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t KeyboardEvent.pressCount.setter()
{
  return OUTLINED_FUNCTION_0_19();
}

void KeyboardEvent.pressCount.modify(uint64_t *a1, uint64_t a2)
{
  a1[1] = a2;
  *a1 = OUTLINED_FUNCTION_2_16();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909EC8()
{
  return OUTLINED_FUNCTION_0_19();
}

BOOL KeyboardEvent.repeat.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t KeyboardEvent.repeat.setter()
{
  return OUTLINED_FUNCTION_1_20();
}

void KeyboardEvent.repeat.modify(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = IOHIDEventGetIntegerValue() != 0;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249909F44()
{
  return OUTLINED_FUNCTION_1_20();
}

uint64_t KeyboardEvent.usage.getter(void *a1)
{
  id v1;
  unsigned __int16 IntegerValue;
  unsigned __int16 v3;

  v1 = a1;
  IntegerValue = IOHIDEventGetIntegerValue();
  v3 = OUTLINED_FUNCTION_2_16();

  return IntegerValue | (v3 << 16);
}

BOOL sub_249909FA4()
{
  return KeyboardEvent.repeat.getter();
}

uint64_t sub_249909FAC()
{
  return KeyboardEvent.repeat.setter();
}

uint64_t (*sub_249909FB4(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  *(_BYTE *)(a1 + 8) = KeyboardEvent.repeat.getter();
  return sub_249909FF0;
}

uint64_t sub_249909FF0()
{
  return KeyboardEvent.repeat.setter();
}

void sub_249909FFC(BOOL *a1@<X8>)
{
  *a1 = KeyboardEvent.down.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990A024()
{
  return KeyboardEvent.down.setter();
}

void sub_24990A030(uint64_t *a1@<X8>)
{
  *a1 = KeyboardEvent.pressCount.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990A054()
{
  return KeyboardEvent.pressCount.setter();
}

void sub_24990A060(BOOL *a1@<X8>)
{
  *a1 = KeyboardEvent.repeat.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990A088()
{
  return KeyboardEvent.repeat.setter();
}

ValueMetadata *type metadata accessor for KeyboardEvent()
{
  return &type metadata for KeyboardEvent;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t HIDEventFlags.init(phase:)(int a1)
{
  return (a1 & 0xFFFFFF8F) << 24;
}

uint64_t HIDEventFlags.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventFlags.rawValue.modify())()
{
  return nullsub_1;
}

void *static HIDEventFlags.allCases.getter()
{
  return &unk_251AC4E38;
}

unint64_t HIDEventFlags.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventFlags.absolute.getter()
{
  return 1;
}

uint64_t static HIDEventFlags.accelerated.getter()
{
  return 0x10000;
}

uint64_t static HIDEventFlags.builtin.getter()
{
  return 16;
}

uint64_t static HIDEventFlags.centerOrigin.getter()
{
  return 8;
}

uint64_t static HIDEventFlags.collection.getter()
{
  return 2;
}

uint64_t static HIDEventFlags.ignore.getter()
{
  return 4026531840;
}

uint64_t static HIDEventFlags.interpolated.getter()
{
  return 32;
}

uint64_t static HIDEventFlags.injected.getter()
{
  return 64;
}

uint64_t static HIDEventFlags.pixelUnits.getter()
{
  return 4;
}

uint64_t static HIDEventFlags.zero.getter()
{
  return 0x800000;
}

void sub_24990A1D4(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_2_17(a1);
}

void sub_24990A1DC(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AC4E38;
}

void sub_24990A1EC(_DWORD *a1@<X8>)
{
  *a1 = j__OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990A20C(unsigned int *a1)
{
  unsigned int *v1;

  return sub_249914574(*a1, *v1);
}

uint64_t sub_24990A218@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;
  uint64_t result;

  result = j__OUTLINED_FUNCTION_52_4(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_24990A244(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;

  *a2 = j__OUTLINED_FUNCTION_55_3(*a1, *v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990A26C(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;

  *a2 = j__OUTLINED_FUNCTION_54_3(*a1, *v2);
  OUTLINED_FUNCTION_6_0();
}

BOOL sub_24990A294(_DWORD *a1, int *a2)
{
  return sub_2499108A8(a1, *a2);
}

uint64_t sub_24990A29C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_2499509C4(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_24990A2CC@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_249950A58(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_24990A2FC(int *a1)
{
  sub_2499108E0(*a1);
}

void sub_24990A304(int *a1)
{
  sub_249910904(*a1);
}

void sub_24990A30C(int *a1)
{
  sub_249910928(*a1);
}

uint64_t sub_24990A314@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;
  uint64_t result;

  result = sub_249950CFC(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_24990A340(int *a1)
{
  int *v1;

  return sub_2499109AC(*a1, *v1);
}

BOOL sub_24990A34C(int *a1)
{
  int *v1;

  return sub_24995103C(*a1, *v1);
}

BOOL sub_24990A358(int *a1)
{
  int *v1;

  return sub_249910B14(*a1, *v1);
}

BOOL sub_24990A364()
{
  int *v0;

  return sub_2498D4AEC(*v0);
}

void sub_24990A36C(int *a1)
{
  sub_249910DE0(*a1);
}

_DWORD *sub_24990A374@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_24990A384(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_2_17(a1);
}

BOOL sub_24990A38C(int *a1, int *a2)
{
  return sub_249942024(*a1, *a2);
}

uint64_t sub_24990A398@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_249950624();
  *a1 = result;
  return result;
}

uint64_t HIDEventFlags.momentumMask.getter()
{
  return 7;
}

uint64_t HIDEventFlags.momentumShift.getter()
{
  return 28;
}

uint64_t HIDEventFlags.momentumLowerMask.getter()
{
  return 24;
}

uint64_t HIDEventFlags.momentumLowerShift.getter()
{
  return 6;
}

uint64_t HIDEventFlags.phaseMask.getter()
{
  return 143;
}

uint64_t HIDEventFlags.phaseShift.getter()
{
  return 24;
}

uint64_t HIDEventFlags.init(momentum:)(char a1)
{
  return ((a1 & 0x18) << 6) | ((a1 & 7) << 28);
}

uint64_t HIDEventFlags.momentum.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = *v1 & 0x8FFFF9FF | ((result & 7) << 28) | ((((result & 0x18) >> 3) & 3) << 9);
  return result;
}

uint64_t HIDEventFlags.phase.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = *v1 & 0x70FFFFFF | ((result & 0xFFFFFF8F) << 24);
  return result;
}

uint64_t HIDEventFlags.momentum.getter(unsigned int a1)
{
  return (a1 >> 6) & 0x18 | (a1 >> 28) & 7;
}

void (*HIDEventFlags.momentum.modify(uint64_t a1))(uint64_t a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = (*v1 >> 6) & 0x18 | (*v1 >> 28) & 7;
  return sub_24990A480;
}

void sub_24990A480(uint64_t a1)
{
  HIDEventFlags.momentum.setter(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

uint64_t HIDEventFlags.phase.getter(unsigned int a1)
{
  return HIBYTE(a1) & 0xFFFFFF8F;
}

void (*HIDEventFlags.phase.modify(uint64_t a1))(_DWORD **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 3) & 0x8F;
  return sub_24990A4CC;
}

void sub_24990A4CC(_DWORD **a1)
{
  OUTLINED_FUNCTION_2_17(*a1);
}

uint64_t HIDEventFlags.description.getter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v1 = 9;
  v2 = MEMORY[0x24BEE4AF8];
  v4 = MEMORY[0x24BEE4AF8];
  v5 = &dword_251AC4E58;
  do
  {
    v7 = *v5++;
    v6 = v7;
    if ((v7 & a1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_2498D5DC4();
      v8 = *(_QWORD *)(v4 + 16);
      if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
        sub_2498D5DC4();
      *(_QWORD *)(v4 + 16) = v8 + 1;
      *(_DWORD *)(v4 + 4 * v8 + 32) = v6;
    }
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v4 + 16);
  if (v9)
  {
    v25 = v2;
    sub_2498D5D6C(0, v9, 0);
    v10 = 0;
    v11 = MEMORY[0x24BEE4548];
    do
    {
      v12 = *(_DWORD *)(v4 + 4 * v10 + 32);
      if ((v12 & 1) != 0)
      {
        v17 = 0xE800000000000000;
        v18 = 0x6574756C6F736261;
      }
      else if ((v12 & 0x10000) != 0)
      {
        v17 = 0xEB00000000646574;
        v18 = 0x6172656C65636361;
      }
      else if ((v12 & 0x10) != 0)
      {
        v17 = 0xE700000000000000;
        v18 = 0x6E69746C697562;
      }
      else if ((v12 & 8) != 0)
      {
        v17 = 0xEC0000006E696769;
        v18 = 0x724F7265746E6563;
      }
      else if ((v12 & 2) != 0)
      {
        v18 = 0x697463656C6C6F63;
        v17 = 0xEA00000000006E6FLL;
      }
      else if (v12 >> 28)
      {
        v17 = 0xE600000000000000;
        v18 = 0x65726F6E6769;
      }
      else if ((v12 & 0x20) != 0)
      {
        v17 = 0xEC00000064657461;
        v18 = 0x6C6F707265746E69;
      }
      else if ((v12 & 4) != 0)
      {
        v17 = 0xEA00000000007374;
        v18 = 0x696E556C65786970;
      }
      else if ((v12 & 0x800000) != 0)
      {
        v17 = 0xE400000000000000;
        v18 = 1869768058;
      }
      else
      {
        v13 = v11;
        v14 = (v12 >> 6) & 0x18 | (v12 >> 28);
        if (v14)
        {
          v15 = HIDScrollMomentum.description.getter(v14);
        }
        else
        {
          if ((HIBYTE(v12) & 0xFFFFFF8F) == 0)
          {
            v18 = sub_249955EF8();
            v11 = v13;
            v17 = v22;
            goto LABEL_34;
          }
          v15 = HIDEventPhase.description.getter(HIBYTE(v12) & 0x8F);
        }
        v18 = v15;
        v17 = v16;
        v11 = v13;
      }
LABEL_34:
      v20 = *(_QWORD *)(v25 + 16);
      v19 = *(_QWORD *)(v25 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2498D5D6C(v19 > 1, v20 + 1, 1);
        v11 = MEMORY[0x24BEE4548];
      }
      ++v10;
      *(_QWORD *)(v25 + 16) = v20 + 1;
      v21 = v25 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v18;
      *(_QWORD *)(v21 + 40) = v17;
    }
    while (v9 != v10);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BE0);
  sub_2498D5EDC((unint64_t *)&qword_2578A0BE8, &qword_2578A0BE0, MEMORY[0x24BEE12B0]);
  v23 = sub_2499557E4();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_24990A880()
{
  int *v0;

  return HIDEventFlags.description.getter(*v0);
}

unint64_t sub_24990A88C()
{
  unint64_t result;

  result = qword_2578A1B08;
  if (!qword_2578A1B08)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578A1B08);
  }
  return result;
}

unint64_t sub_24990A8CC()
{
  unint64_t result;

  result = qword_2578A1B10;
  if (!qword_2578A1B10)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578A1B10);
  }
  return result;
}

uint64_t sub_24990A908()
{
  return sub_2498D5EDC(&qword_2578A1B18, &qword_2578A1B20, MEMORY[0x24BEE12E0]);
}

unint64_t sub_24990A938()
{
  unint64_t result;

  result = qword_2578A1B28;
  if (!qword_2578A1B28)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578A1B28);
  }
  return result;
}

unint64_t sub_24990A978()
{
  unint64_t result;

  result = qword_2578A1B30;
  if (!qword_2578A1B30)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578A1B30);
  }
  return result;
}

void sub_24990A9B4(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = HIDEventFlags.momentum.getter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990A9D8(unsigned __int8 *a1)
{
  HIDEventFlags.momentum.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990A9F8(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = HIDEventFlags.phase.getter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990AA1C(unsigned __int8 *a1)
{
  HIDEventFlags.phase.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for HIDEventFlags()
{
  return &type metadata for HIDEventFlags;
}

void OUTLINED_FUNCTION_2_17(_DWORD *a1@<X8>)
{
  int v1;

  *a1 = v1;
}

uint64_t sub_24990AA54()
{
  return IOHIDEventGetScrollMomentum();
}

uint64_t ScrollCollection.init()()
{
  if (qword_2578A07A0 != -1)
    swift_once();
  return HIDReport.init(bitCount:id:)(qword_2578A1B48, 0);
}

uint64_t ScrollCollection.phase.setter()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_17();
  v1 = OUTLINED_FUNCTION_26_8(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

uint64_t static ScrollReport.initialReportBitCount.getter()
{
  return 104;
}

uint64_t static ScrollReport.reportID.getter()
{
  return 7;
}

uint64_t sub_24990AAE0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_24990AB00();
  *(_QWORD *)&xmmword_2578A1B38 = result;
  *((_QWORD *)&xmmword_2578A1B38 + 1) = v1;
  return result;
}

uint64_t sub_24990AB00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 1);
  v13 = v0;
  v14 = v1;
  v2 = sub_24990AC08();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4A98);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for ApplicationCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_24990AC08()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t inited;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  __int16 v38;
  __int16 v39;
  char v40;
  unsigned __int8 v41;
  _QWORD v42[3];

  if (qword_2578A07A8 != -1)
    swift_once();
  v1 = qword_2578A1B50;
  v0 = *(_QWORD *)algn_2578A1B58;
  LOBYTE(v42[0]) = 5;
  sub_2498CAC78(qword_2578A1B50, *(unint64_t *)algn_2578A1B58);
  v30 = v1;
  v31 = v0;
  v2 = v0;
  sub_2498CAC78(v1, v0);
  sub_2498FCA34((uint64_t)v42, 0xFF00uLL);
  v35 = v4;
  v36 = v3;
  LOBYTE(v42[0]) = 17;
  sub_2498FCA34((uint64_t)v42, 0x102uLL);
  v33 = v6;
  v34 = v5;
  LOBYTE(v42[0]) = 6;
  sub_2498FC7A0((uint64_t)v42, 0);
  v8 = v7;
  v10 = v9;
  LOBYTE(v42[0]) = 7;
  sub_2498FC7A0((uint64_t)v42, 255);
  v12 = v11;
  v29 = v11;
  v14 = v13;
  LOBYTE(v42[0]) = 12;
  sub_2498FCA34((uint64_t)v42, 8uLL);
  v16 = v15;
  v28 = v15;
  v18 = v17;
  LOBYTE(v42[0]) = 14;
  sub_2498FC7A0((uint64_t)v42, 8);
  v32 = v19;
  v21 = v20;
  v27 = v20;
  v41 = 0;
  v40 = 1;
  v39 = 0;
  v38 = 0;
  v37 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v41, &v40, (_BYTE *)&v39 + 1, &v39, (_BYTE *)&v38 + 1, &v38, &v37, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959F20;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 7;
  *(_QWORD *)(inited + 96) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(inited + 104) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 80) = v2;
  *(_QWORD *)(inited + 136) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 112) = v36;
  *(_QWORD *)(inited + 120) = v35;
  *(_QWORD *)(inited + 176) = &type metadata for Usage;
  *(_QWORD *)(inited + 184) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 152) = v34;
  *(_QWORD *)(inited + 160) = v33;
  *(_QWORD *)(inited + 216) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 192) = v8;
  *(_QWORD *)(inited + 200) = v10;
  *(_QWORD *)(inited + 256) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 232) = v12;
  *(_QWORD *)(inited + 240) = v14;
  *(_QWORD *)(inited + 296) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 304) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 272) = v16;
  *(_QWORD *)(inited + 280) = v18;
  *(_QWORD *)(inited + 336) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 344) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 312) = v32;
  *(_QWORD *)(inited + 320) = v21;
  v24 = v42[0];
  v23 = v42[1];
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v24;
  *(_QWORD *)(inited + 360) = v23;
  sub_2498CAC78(v36, v35);
  sub_2498CAC78(v34, v33);
  sub_2498CAC78(v8, v10);
  sub_2498CAC78(v29, v14);
  sub_2498CAC78(v28, v18);
  sub_2498CAC78(v32, v27);
  sub_2498CAC78(v24, v23);
  v25 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  sub_2498CACBC(v30, v31);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v24, v23);
  sub_2498CACBC(v32, v27);
  sub_2498CACBC(v28, v18);
  sub_2498CACBC(v29, v14);
  sub_2498CACBC(v8, v10);
  sub_2498CACBC(v34, v33);
  sub_2498CACBC(v36, v35);
  return v25;
}

uint64_t static ScrollReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A0798, (uint64_t)&xmmword_2578A1B38, a1);
}

uint64_t sub_24990AF88()
{
  return 104;
}

uint64_t sub_24990AF94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (qword_2578A07A8 != -1)
    swift_once();
  v0 = qword_2578A1B50;
  v1 = *(_QWORD *)algn_2578A1B58;
  OUTLINED_FUNCTION_22_4(qword_2578A1B50);
  HIDReportDescriptor.reportBitCount(for:)();
  v3 = v2;
  result = sub_2498CACBC(v0, v1);
  qword_2578A1B48 = v3;
  return result;
}

uint64_t static ScrollCollection.bitCount.getter()
{
  if (qword_2578A07A0 != -1)
    swift_once();
  return qword_2578A1B48;
}

uint64_t sub_24990B060()
{
  uint64_t result;
  uint64_t v1;

  result = sub_24990B080();
  qword_2578A1B50 = result;
  *(_QWORD *)algn_2578A1B58 = v1;
  return result;
}

uint64_t sub_24990B080()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 2);
  v13 = v0;
  v14 = v1;
  v2 = sub_24990B188();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4A70);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for LogicalCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for LogicalCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_24990B188()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  char v57;
  _QWORD v58[2];
  int v59;
  __int16 v60;
  _QWORD v61[3];

  LOBYTE(v61[0]) = 12;
  sub_2498FCA34((uint64_t)v61, 8uLL);
  v48 = v1;
  v49 = v0;
  LOBYTE(v61[0]) = 14;
  sub_2498FC7A0((uint64_t)v61, 2);
  v3 = v2;
  v5 = v4;
  LOBYTE(v58[0]) = 0;
  LOBYTE(v56[0]) = 1;
  v60 = 0;
  HIWORD(v59) = 0;
  BYTE1(v59) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v58, v56, (_BYTE *)&v60 + 1, &v60, (_BYTE *)&v59 + 3, (_BYTE *)&v59 + 2, (_BYTE *)&v59 + 1, v61);
  LOBYTE(v58[0]) = 5;
  sub_2498FCA34((uint64_t)v58, 1uLL);
  v51 = v7;
  v52 = v6;
  LOBYTE(v58[0]) = 17;
  sub_2498FCA34((uint64_t)v58, 0x30uLL);
  v9 = v8;
  v11 = v10;
  LOBYTE(v58[0]) = 17;
  sub_2498FCA34((uint64_t)v58, 0x31uLL);
  v13 = v12;
  v15 = v14;
  LOBYTE(v58[0]) = 6;
  sub_2498FC7A0((uint64_t)v58, -127);
  v46 = v17;
  v47 = v16;
  LOBYTE(v58[0]) = 7;
  sub_2498FC7A0((uint64_t)v58, 127);
  v19 = v18;
  v38 = v18;
  v41 = v20;
  LOBYTE(v58[0]) = 12;
  sub_2498FCA34((uint64_t)v58, 8uLL);
  v54 = v22;
  v55 = v21;
  LOBYTE(v58[0]) = 14;
  sub_2498FC7A0((uint64_t)v58, 2);
  v50 = v23;
  v53 = v24;
  LOBYTE(v56[0]) = 0;
  v60 = 257;
  v59 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v56, (_BYTE *)&v60 + 1, &v60, (_BYTE *)&v59 + 3, (_BYTE *)&v59 + 2, (_BYTE *)&v59 + 1, &v59, v58);
  LOBYTE(v56[0]) = 12;
  sub_2498FCA34((uint64_t)v56, 0x20uLL);
  v44 = v26;
  v45 = v25;
  LOBYTE(v56[0]) = 14;
  sub_2498FC7A0((uint64_t)v56, 2);
  v42 = v28;
  v43 = v27;
  v60 = 1;
  v59 = 0x1000000;
  v57 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v60 + 1, &v60, (_BYTE *)&v59 + 3, (_BYTE *)&v59 + 2, (_BYTE *)&v59 + 1, &v59, &v57, v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499577F0;
  *(_QWORD *)(inited + 56) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 32) = v49;
  *(_QWORD *)(inited + 40) = v48;
  *(_QWORD *)(inited + 96) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 104) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 176) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 216) = &type metadata for Usage;
  *(_QWORD *)(inited + 224) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 256) = &type metadata for Usage;
  *(_QWORD *)(inited + 264) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 296) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 336) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 344) = &protocol witness table for LogicalMaximum;
  v39 = v61[0];
  v30 = v61[0];
  v40 = v61[1];
  *(_QWORD *)(inited + 496) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 376) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 384) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 504) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 136) = &type metadata for Input;
  *(_QWORD *)(inited + 144) = &protocol witness table for Input;
  *(_QWORD *)(inited + 112) = v30;
  *(_QWORD *)(inited + 120) = v40;
  *(_QWORD *)(inited + 152) = v52;
  *(_QWORD *)(inited + 160) = v51;
  *(_QWORD *)(inited + 192) = v9;
  *(_QWORD *)(inited + 200) = v11;
  *(_QWORD *)(inited + 232) = v13;
  *(_QWORD *)(inited + 240) = v15;
  *(_QWORD *)(inited + 272) = v47;
  *(_QWORD *)(inited + 280) = v46;
  *(_QWORD *)(inited + 312) = v19;
  *(_QWORD *)(inited + 320) = v41;
  *(_QWORD *)(inited + 352) = v55;
  *(_QWORD *)(inited + 360) = v54;
  *(_QWORD *)(inited + 416) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 424) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 392) = v50;
  *(_QWORD *)(inited + 400) = v53;
  *(_QWORD *)(inited + 536) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 544) = &protocol witness table for ReportCount;
  v33 = v58[0];
  v31 = v58[0];
  v34 = v58[1];
  *(_QWORD *)(inited + 456) = &type metadata for Input;
  *(_QWORD *)(inited + 464) = &protocol witness table for Input;
  *(_QWORD *)(inited + 432) = v31;
  *(_QWORD *)(inited + 440) = v34;
  *(_QWORD *)(inited + 472) = v45;
  *(_QWORD *)(inited + 480) = v44;
  *(_QWORD *)(inited + 512) = v43;
  *(_QWORD *)(inited + 520) = v42;
  *(_QWORD *)(inited + 576) = &type metadata for Input;
  *(_QWORD *)(inited + 584) = &protocol witness table for Input;
  v35 = v56[0];
  v36 = v56[1];
  *(_QWORD *)(inited + 552) = v56[0];
  *(_QWORD *)(inited + 560) = v36;
  sub_2498CAC78(v49, v48);
  sub_2498CAC78(v3, v5);
  sub_2498CAC78(v39, v40);
  sub_2498CAC78(v52, v51);
  sub_2498CAC78(v9, v11);
  sub_2498CAC78(v13, v15);
  sub_2498CAC78(v47, v46);
  sub_2498CAC78(v38, v41);
  sub_2498CAC78(v55, v54);
  sub_2498CAC78(v50, v53);
  sub_2498CAC78(v33, v34);
  sub_2498CAC78(v45, v44);
  sub_2498CAC78(v43, v42);
  sub_2498CAC78(v35, v36);
  v37 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v35, v36);
  sub_2498CACBC(v43, v42);
  sub_2498CACBC(v45, v44);
  sub_2498CACBC(v33, v34);
  sub_2498CACBC(v50, v53);
  sub_2498CACBC(v55, v54);
  sub_2498CACBC(v38, v41);
  sub_2498CACBC(v47, v46);
  sub_2498CACBC(v13, v15);
  sub_2498CACBC(v9, v11);
  sub_2498CACBC(v52, v51);
  sub_2498CACBC(v39, v40);
  sub_2498CACBC(v3, v5);
  sub_2498CACBC(v49, v48);
  return v37;
}

uint64_t static ScrollCollection.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A07A8, (uint64_t)&qword_2578A1B50, a1);
}

void ScrollReport.report.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_28_6(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

void ScrollReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  OUTLINED_FUNCTION_18_3();
}

uint64_t (*ScrollReport.report.modify())()
{
  return nullsub_1;
}

void sub_24990B6D0()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_6_0();
}

void sub_24990B6F4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = ScrollReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990B714()
{
  uint64_t v0;

  sub_249950868(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t (*ScrollCollection.report.modify())()
{
  return nullsub_1;
}

void ScrollCollection.flags.getter(uint64_t a1, unint64_t a2)
{
  sub_2498C8F2C(0, a1, a2);
}

void sub_24990B73C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  ScrollCollection.flags.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t ScrollCollection.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 0);
}

void ScrollCollection.flags.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_3_17();
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990B7A0(uint64_t a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t ScrollCollection.phase.getter(uint64_t a1, unint64_t a2)
{
  int v2;

  sub_2498C8F2C(0, a1, a2);
  return v2 & 0xFFFFFF8F;
}

uint64_t sub_24990B7E8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = ScrollCollection.phase.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

void ScrollCollection.phase.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_3_17();
  *(_BYTE *)(a1 + 8) = v3 & 0x8F;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990B848()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_17();
  v1 = OUTLINED_FUNCTION_26_8(v0);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void ScrollCollection.momentum.getter(uint64_t a1, unint64_t a2)
{
  sub_2498C8F2C(8, a1, a2);
}

void sub_24990B880(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  ScrollCollection.momentum.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t ScrollCollection.momentum.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

void ScrollCollection.momentum.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  sub_2498C8F2C(8, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_BYTE *)(a1 + 8) = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t ScrollCollection.x.getter()
{
  uint64_t result;

  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return (char)result;
}

uint64_t sub_24990B910@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScrollCollection.x.getter();
  *a1 = result;
  return result;
}

uint64_t ScrollCollection.x.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 127;
  if (a1 < 127)
    v1 = a1;
  if (v1 <= -128)
    v2 = -128;
  else
    v2 = v1;
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 16);
}

void ScrollCollection.x.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;

  OUTLINED_FUNCTION_3_12(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990B990()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_12();
  if (v2 == v3)
    v0 = v1;
  if (v0 <= -128)
    v4 = -128;
  else
    v4 = v0;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, 16);
  OUTLINED_FUNCTION_6_0();
}

uint64_t ScrollCollection.y.getter()
{
  uint64_t result;

  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return (char)result;
}

uint64_t sub_24990B9E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ScrollCollection.y.getter();
  *a1 = result;
  return result;
}

uint64_t ScrollCollection.y.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 127;
  if (a1 < 127)
    v1 = a1;
  if (v1 <= -128)
    v2 = -128;
  else
    v2 = v1;
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 24);
}

void ScrollCollection.y.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;

  OUTLINED_FUNCTION_3_12(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990BA68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_12();
  if (v2 == v3)
    v0 = v1;
  if (v0 <= -128)
    v4 = -128;
  else
    v4 = v0;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, 24);
  OUTLINED_FUNCTION_6_0();
}

#error "24990BAB0: call analysis failed (funcsize=9)"

void sub_24990BAC0(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = ScrollCollection.accelX.getter(*a1, a1[1]);
}

void ScrollCollection.accelX.setter(double a1)
{
  unint64_t v1;

  v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 32);
}

#error "24990BB20: call analysis failed (funcsize=11)"

void sub_24990BB3C(double *a1)
{
  unint64_t v1;

  v1 = OUTLINED_FUNCTION_7_11(a1);
  OUTLINED_FUNCTION_4_13(v1);
  OUTLINED_FUNCTION_6_0();
}

#error "24990BB6C: call analysis failed (funcsize=9)"

void sub_24990BB7C(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = ScrollCollection.accelY.getter(*a1, a1[1]);
}

void ScrollCollection.accelY.setter(double a1)
{
  unint64_t v1;

  v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0)
    v1 = 0;
  else
    v1 = v1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 64);
}

#error "24990BBDC: call analysis failed (funcsize=11)"

void sub_24990BBF8(double *a1)
{
  unint64_t v1;

  v1 = OUTLINED_FUNCTION_7_11(a1);
  OUTLINED_FUNCTION_14_13(v1);
  OUTLINED_FUNCTION_6_0();
}

void ScrollCollection.init(scrollEvent:)()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_2578A07A0 != -1)
    swift_once();
  HIDReport.init(bitCount:id:)(qword_2578A1B48, 0);
  v1 = v0;
  IOHIDEventGetScrollMomentum();
  __asm { BR              X11 }
}

void ScrollCollection.delta.setter(double a1, double a2)
{
  double v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = round(a1);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_17_12();
  if (v6 == v7)
    v4 = v5;
  if (v4 <= -128)
    v8 = -128;
  else
    v8 = v4;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v8, 16);
  v9 = round(a2);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
    goto LABEL_21;
  if (v9 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_17_12();
  if (v6 == v7)
    v10 = v11;
  if (v10 <= -128)
    v12 = -128;
  else
    v12 = v10;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v12, 24);
}

void ScrollCollection.accelDelta.setter(double a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = HIDFixed.init(doubleValue:)(a1);
  OUTLINED_FUNCTION_4_13(v1);
  v2 = OUTLINED_FUNCTION_16_10();
  if ((v2 & 0x100000000) != 0)
    v2 = 0;
  else
    v2 = v2;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v2, 64);
}

uint64_t ScrollReport.scrollCollectionRange.getter()
{
  uint64_t result;

  if (qword_2578A07A0 != -1)
    result = swift_once();
  if ((qword_2578A1B48 & 0x8000000000000000) == 0)
    return OUTLINED_FUNCTION_13_13();
  __break(1u);
  return result;
}

void ScrollReport.scrollCollection.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_28_6(a1, a2);
  if (qword_2578A07A0 != -1)
    swift_once();
  if (qword_2578A1B48 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_13_13();
    v4 = sub_249955610();
    v6 = v5;
    sub_2498CACBC(v3, v2);
    sub_2498D31B8(v4, v6);
  }
}

void sub_24990C230(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  ScrollReport.scrollCollection.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

uint64_t sub_24990C25C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_2498CAC78(*a1, v2);
  return ScrollReport.scrollCollection.setter(v1, v2);
}

uint64_t ScrollReport.scrollCollection.setter(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  __int128 v8;

  v5 = *v2;
  v6 = v2[1];
  *(_QWORD *)&v8 = *v2;
  *((_QWORD *)&v8 + 1) = v6;
  result = sub_2498CAC78(*v2, v6);
  if (qword_2578A07A0 != -1)
    result = swift_once();
  if (qword_2578A1B48 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2498CAC78(a1, a2);
    OUTLINED_FUNCTION_12_15(a1, a2);
    OUTLINED_FUNCTION_1_6();
    OUTLINED_FUNCTION_1_6();
    result = sub_2498CACBC(v5, v6);
    *(_OWORD *)v2 = v8;
  }
  return result;
}

void (*ScrollReport.scrollCollection.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  void (*result)(uint64_t *, char);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  a1[2] = v1;
  v4 = *v1;
  v3 = v1[1];
  result = (void (*)(uint64_t *, char))OUTLINED_FUNCTION_22_4(*v1);
  if (qword_2578A07A0 != -1)
    result = (void (*)(uint64_t *, char))swift_once();
  if (qword_2578A1B48 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_13_13();
    v6 = sub_249955610();
    v8 = v7;
    sub_2498CACBC(v4, v3);
    sub_2498D31B8(v6, v8);
    *a1 = v9;
    a1[1] = v10;
    return sub_24990C414;
  }
  return result;
}

void sub_24990C414(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_22_4(*a1);
    OUTLINED_FUNCTION_21_10();
    sub_2498CACBC(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_21_10();
    OUTLINED_FUNCTION_18_3();
  }
}

uint64_t ScrollReport.init(scrollEvent:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;

  if (qword_2578A0798 != -1)
    swift_once();
  HIDReportDescriptor.reportBitCount(for:)();
  v3 = HIDReport.init(bitCount:id:)(v2, 7);
  v5 = v4;
  v6 = a1;
  ScrollCollection.init(scrollEvent:)();
  v8 = v7;
  v10 = v9;
  result = OUTLINED_FUNCTION_25_4();
  if (qword_2578A07A0 != -1)
    result = swift_once();
  if (qword_2578A1B48 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2498CAC78(v8, v10);
    OUTLINED_FUNCTION_12_15(v8, v10);
    OUTLINED_FUNCTION_6_9();
    OUTLINED_FUNCTION_6_9();
    sub_2498CACBC(v3, v5);

    return v3;
  }
  return result;
}

void ScrollCollection.delta.getter()
{
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_17_11();
}

void sub_24990C5C4(double *a1)
{
  ScrollCollection.delta.setter(*a1, a1[1]);
}

void ScrollCollection.delta.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;
  double v4;
  char v5;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_20_12();
  v4 = (double)v3;
  OUTLINED_FUNCTION_20_12();
  *(double *)a1 = v4;
  *(double *)(a1 + 8) = (double)v5;
  *(_QWORD *)(a1 + 16) = 0;
  OUTLINED_FUNCTION_13_2();
}

void sub_24990C644(double *a1)
{
  ScrollCollection.delta.setter(*a1, a1[1]);
  OUTLINED_FUNCTION_6_0();
}

#error "24990C680: call analysis failed (funcsize=20)"

void sub_24990C6B4(_QWORD *a1@<X0>, double (*a2)(_QWORD, _QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  *(double *)a3 = a2(*a1, a1[1]);
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990C6E0(double *a1)
{
  ScrollCollection.accelDelta.setter(*a1);
}

#error "24990C728: call analysis failed (funcsize=24)"

void sub_24990C768(double *a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = HIDFixed.init(doubleValue:)(*a1);
  OUTLINED_FUNCTION_4_13(v1);
  v2 = OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_14_13(v2);
}

void ScrollReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_24990C7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x24990C83CLL);
  }
  if (BYTE6(a3) >= 0x15uLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_24990C854(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  ScrollReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_24990C888()
{
  return ScrollReport.remoteTimestamp.setter();
}

uint64_t ScrollReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_24990C8C4 + dword_24990C934[*(_QWORD *)(v0 + 8) >> 62]))();
}

void sub_24990C8D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x24990C92CLL);
  }
  if (v2 >= 21)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 104);
  }
}

void ScrollReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void sub_24990C980()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x24990C9F0);
  }
  if (v1 >= 21)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CA08(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  ScrollReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CA58()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x24990CA8CLL);
  }
  if (v2 >= 21)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 104);
  }
  JUMPOUT(0x24990CA30);
}

void sub_24990CAC0()
{
  uint64_t *v0;

  ScrollReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_24990CADC()
{
  return ScrollReport.remoteTimestamp.setter();
}

void (*sub_24990CAE4(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  ScrollReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_24990CB24;
}

void sub_24990CB24()
{
  ScrollReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CB50(unsigned __int8 *a1)
{
  ScrollCollection.flags.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CB74()
{
  ScrollCollection.phase.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CB98(unsigned __int8 *a1)
{
  ScrollCollection.momentum.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CBBC(uint64_t *a1)
{
  ScrollCollection.x.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CBE0(uint64_t *a1)
{
  ScrollCollection.y.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CC04(double *a1)
{
  ScrollCollection.accelX.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CC28(double *a1)
{
  ScrollCollection.accelY.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24990CC50(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24990C6B4(a1, (double (*)(_QWORD, _QWORD))ScrollCollection.delta.getter, a2);
}

void sub_24990CC70(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24990C6B4(a1, (double (*)(_QWORD, _QWORD))ScrollCollection.accelDelta.getter, a2);
}

ValueMetadata *type metadata accessor for ScrollReport()
{
  return &type metadata for ScrollReport;
}

uint64_t *_s12UniversalHID12ScrollReportVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  OUTLINED_FUNCTION_22_4(*a2);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2498CACBC(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ScrollCollection()
{
  return &type metadata for ScrollCollection;
}

void OUTLINED_FUNCTION_3_17()
{
  uint64_t v0;

  sub_2498C8F2C(0, *(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void OUTLINED_FUNCTION_4_13(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    a1 = 0;
  else
    a1 = a1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 32);
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_24995561C();
}

void OUTLINED_FUNCTION_12_15(uint64_t a1, uint64_t a2)
{
  sub_249917678(a1, a2);
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return 1;
}

void OUTLINED_FUNCTION_14_13(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
    a1 = 0;
  else
    a1 = a1;
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 64);
}

unint64_t OUTLINED_FUNCTION_16_10()
{
  double v0;

  return HIDFixed.init(doubleValue:)(v0);
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_19_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void OUTLINED_FUNCTION_20_12()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;
  unint64_t v1;

  return ScrollReport.scrollCollection.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_8(unsigned int a1)
{
  int v1;

  return v1 & 0xFFFFFF8F | (16 * ((a1 >> 4) & 7));
}

uint64_t OUTLINED_FUNCTION_28_6(uint64_t a1, unint64_t a2)
{
  return sub_2498CAC78(a1, a2);
}

uint64_t static AppleVendorTopCaseUsage.usagePage.getter()
{
  return 255;
}

uint64_t static AppleVendorTopCaseUsage.usageMinimum.getter()
{
  return 3;
}

uint64_t static AppleVendorTopCaseUsage.usageMaximum.getter()
{
  return 192;
}

uint64_t AppleVendorTopCaseUsage.init(rawValue:)(unsigned __int8 a1)
{
  int v1;

  v1 = a1;
  if (a1 - 6 < 0xFFFFFFFD)
    v1 = 0;
  return v1 | ((a1 - 6 < 0xFFFFFFFD) << 8);
}

uint64_t sub_24990CE14@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = AppleVendorTopCaseUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_24990CE44()
{
  return 192;
}

uint64_t static AppleVendorTopCaseUsage.fnKey.getter()
{
  return 3;
}

uint64_t static AppleVendorTopCaseUsage.brightnessUp.getter()
{
  return 4;
}

uint64_t static AppleVendorTopCaseUsage.brightnessDown.getter()
{
  return 5;
}

uint64_t static AppleVendorTopCaseUsage.videoMirror.getter()
{
  return 6;
}

uint64_t static AppleVendorTopCaseUsage.illuminationToggle.getter()
{
  return 7;
}

uint64_t static AppleVendorTopCaseUsage.illuminationUp.getter()
{
  return 8;
}

uint64_t static AppleVendorTopCaseUsage.illuminationDown.getter()
{
  return 9;
}

uint64_t static AppleVendorTopCaseUsage.clamshellLatched.getter()
{
  return 10;
}

void *static AppleVendorTopCaseUsage.allCases.getter()
{
  return &unk_251AC4EA8;
}

unint64_t sub_24990CE98(uint64_t a1)
{
  unint64_t result;

  result = sub_24990CEBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24990CEBC()
{
  unint64_t result;

  result = qword_2578A1B60;
  if (!qword_2578A1B60)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseUsage, &type metadata for AppleVendorTopCaseUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1B60);
  }
  return result;
}

unint64_t sub_24990CEFC()
{
  unint64_t result;

  result = qword_2578A1B68;
  if (!qword_2578A1B68)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for AppleVendorTopCaseUsage, &type metadata for AppleVendorTopCaseUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1B68);
  }
  return result;
}

unint64_t sub_24990CF3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1B70;
  if (!qword_2578A1B70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1B78);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1B70);
  }
  return result;
}

void sub_24990CF80(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AC4EA8;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseUsage()
{
  return &type metadata for AppleVendorTopCaseUsage;
}

uint64_t static HIDGameControllerType.extended.getter()
{
  return 1;
}

unint64_t HIDGameControllerType.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_50();
    result = sub_249955D60();
    __break(1u);
  }
  return result;
}

uint64_t HIDGameControllerType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDGameControllerType.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t static HIDGameControllerType.standard.getter()
{
  return 0;
}

void *static HIDGameControllerType.allCases.getter()
{
  return &unk_251AC4ED0;
}

BOOL static HIDGameControllerType.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t HIDGameControllerType.hash(into:)()
{
  return sub_249955FE8();
}

uint64_t HIDGameControllerType.hashValue.getter()
{
  sub_249955FB8();
  sub_249955FE8();
  return sub_249956000();
}

void sub_24990D0E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AC4ED0;
}

BOOL sub_24990D0F0(int *a1, int *a2)
{
  return static HIDGameControllerType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_24990D0FC()
{
  return HIDGameControllerType.hashValue.getter();
}

uint64_t sub_24990D104()
{
  return HIDGameControllerType.hash(into:)();
}

unint64_t sub_24990D110()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1B80;
  if (!qword_2578A1B80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1B88);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1B80);
  }
  return result;
}

unint64_t sub_24990D158()
{
  unint64_t result;

  result = qword_2578A1B90;
  if (!qword_2578A1B90)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDGameControllerType, &type metadata for HIDGameControllerType);
    atomic_store(result, (unint64_t *)&qword_2578A1B90);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDGameControllerType()
{
  return &type metadata for HIDGameControllerType;
}

void DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:dispatchPointerEvents:)(char *a1, char a2, char a3)
{
  OUTLINED_FUNCTION_1_21();
  DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(a1, a2, a3);
  OUTLINED_FUNCTION_18_3();
}

void DigitizerGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t DigitizerGesture.useRemoteAcceleration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t DigitizerGesture.dispatchPointerEvents.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t DigitizerGesture.emitFluidGestureEvents.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t DigitizerGesture.emitFluidGestureEvents.setter()
{
  char v0;
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_0_20();
  *(_BYTE *)(v1 + 19) = v0;
  return result;
}

uint64_t (*DigitizerGesture.emitFluidGestureEvents.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DigitizerGesture.enableFluidGestureEventsMode(_:)()
{
  char v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_20();
  *(_BYTE *)(v1 + 19) = v0;
  return MEMORY[0x24BEE4AF8];
}

uint64_t DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:)(char *a1, char a2)
{
  char v3;
  uint64_t v4;
  char v6;

  v3 = *a1 != 1;
  v6 = *a1;
  v4 = OUTLINED_FUNCTION_1_21();
  DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(&v6, a2, v3);
  return v4;
}

uint64_t DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(char *a1, char a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a1;
  *(_BYTE *)(v3 + 19) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v7 = sub_2499557C0();
  v8 = mach_absolute_time();
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = v7;
  *(_QWORD *)(v3 + 64) = v8;
  *(_BYTE *)(v3 + 16) = v6;
  *(_BYTE *)(v3 + 17) = a2;
  *(_BYTE *)(v3 + 18) = a3;
  return v3;
}

uint64_t DigitizerGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_BYTE *)(v2 + 18) == 1)
    v3 = sub_24990D3EC(a1, a2);
  else
    v3 = sub_24990D550(a1, a2);
  v7 = v6;
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = v5;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24990D3EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = mach_absolute_time();
  v5 = (void *)PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v4, 0, 0);
  v6 = sub_24990D550(a1, a2);
  v8 = v6;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v17 = v6;
    v10 = v7 + 32;
    do
    {
      sub_2498CF8CC(v10, (uint64_t)v18);
      v11 = v19;
      v12 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      v13 = v5;
      v14 = (void *)HIDEventProtocol.bridgedValue.getter(v11, v12);
      IOHIDEventAppendEvent();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v8 = v17;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2499568A0;
  *(_QWORD *)(v15 + 56) = &type metadata for PointerEvent;
  *(_QWORD *)(v15 + 64) = &protocol witness table for PointerEvent;
  *(_QWORD *)(v15 + 32) = v5;
  return v8;
}

uint64_t sub_24990D550(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  double v19;
  double v20;
  double v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  double v27;
  double v28;
  double v29;
  int v30;
  int v31;
  void *DigitizerFingerEvent;
  id v33;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[10];

  v43[8] = *MEMORY[0x24BDAC8D0];
  v5 = v2[6];
  v6 = v2[7];
  v7 = v2[8];
  swift_bridgeObjectRetain();
  sub_2498CAC78(a1, a2);
  v8 = sub_24990E0C8(v5, v6, v7, a1, a2);
  v10 = v9;
  v41 = v11;
  v42 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain_n();
  sub_249921FA0(v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  v43[0] = v13;
  sub_24990EC44(v43);
  v35 = a2;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v43[0] + 16);
  v40 = v10;
  if (v14)
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0.0;
    v20 = 0.0;
    v36 = v43[0] + 32;
    v37 = v14 - 1;
    v21 = 0.0;
    v38 = v43[0];
    v39 = v8;
    while (1)
    {
      if (*(_QWORD *)(v10 + 16) && (v22 = sub_2498DFB24(*(_QWORD *)(v36 + 8 * v15)), (v23 & 1) != 0))
      {
        v24 = *(_QWORD *)(v10 + 56) + 56 * v22;
        if ((*(_QWORD *)v24 & 0x8000000000000000) != 0
          || HIDWORD(*(_QWORD *)v24)
          || (v25 = *(_QWORD *)(v24 + 8), (v25 & 0x8000000000000000) != 0)
          || HIDWORD(v25))
        {
          sub_249955D60();
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x24990DE4CLL);
        }
        v26 = *(_DWORD *)(v24 + 16);
        v27 = *(double *)(v24 + 24);
        v28 = *(double *)(v24 + 32);
        v29 = *(double *)(v24 + 40);
        v30 = *(unsigned __int8 *)(v24 + 48);
        v31 = *(unsigned __int8 *)(v24 + 49);
      }
      else
      {
        v26 = 0;
        v30 = 0;
        v31 = 0;
        v27 = 0.0;
        v28 = 0.0;
        v29 = 0.0;
      }
      DigitizerFingerEvent = (void *)IOHIDEventCreateDigitizerFingerEvent();
      if (v8)
        IOHIDEventSetIntegerValue();
      v33 = DigitizerFingerEvent;
      MEMORY[0x24BCFAB24]();
      if (*(_QWORD *)(v42 + 16) >= *(_QWORD *)(v42 + 24) >> 1)
        sub_24995594C();
      v19 = v19 + v27;
      v20 = v20 + v28;
      v21 = v21 + v29;
      sub_249955964();
      sub_249955940();

      v16 |= v26;
      v18 |= v31;
      v17 |= v30;
      if (v37 == v15)
        break;
      ++v15;
      v8 = v39;
      v10 = v40;
      if (v15 >= *(_QWORD *)(v38 + 16))
      {
        __break(1u);
        JUMPOUT(0x24990DD6CLL);
      }
    }
    v8 = v39;
  }
  else
  {
    v16 = 0;
  }
  swift_release();
  if (*(_QWORD *)(v42 + 16))
  {
    DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v41, 3, v16 & 0xFFFFFDFF, v8, 0x400018uLL, 1uLL);
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24990DE5C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_24990DE64()
{
  uint64_t v0;

  sub_249955C34();
  swift_bridgeObjectRelease();
  sub_249955EF8();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  sub_249955EF8();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  DigitizerEventMask.description.getter(*(_DWORD *)(v0 + 16));
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  return 0x3A7865646E69;
}

uint64_t sub_24990E040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_24990DE5C();
  *a1 = result;
  return result;
}

uint64_t sub_24990E088()
{
  return sub_24990DE64();
}

uint64_t sub_24990E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  int v38;
  int v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  int v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  double v50;
  double v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  _BOOL4 v54;
  BOOL v55;
  int v56;
  unsigned int v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  BOOL v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  char v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  char v80;
  unint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double v143;
  double v144;
  uint64_t v145;
  char v146;
  char v147;
  char v148;

  v9 = sub_2499557C0();
  v93 = mach_absolute_time();
  v10 = a1 + 1;
  do
  {
    v11 = v10;
    v10 = 1;
  }
  while (!v11);
  v91 = v11;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  if (v12)
  {
    v13 = v12;
    sub_2498CAC78(a4, a5);
    v17 = sub_249914AD0(0, v13, a4, a5, (uint64_t)&v137, v14, v15, v16);
  }
  else
  {
    v17 = MEMORY[0x24BEE4AF8];
  }
  v121 = v9;
  v89 = 0;
  v99 = a5;
  v101 = a2;
  v18 = *(_QWORD *)(v17 + 16);
  v95 = v17;
  v97 = a4;
  if (!v18)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    v58 = 0;
    v59 = v101;
    v60 = v101 + 64;
    v61 = 1 << *(_BYTE *)(v101 + 32);
    v62 = -1;
    if (v61 < 64)
      v62 = ~(-1 << v61);
    v63 = v62 & *(_QWORD *)(v101 + 64);
    v115 = (unint64_t)(v61 + 63) >> 6;
    v64 = (_QWORD *)v121;
    while (1)
    {
      while (1)
      {
        if (v63)
        {
          v65 = __clz(__rbit64(v63));
          v63 &= v63 - 1;
          v66 = v65 | (v58 << 6);
        }
        else
        {
          v67 = __OFADD__(v58++, 1);
          if (v67)
            goto LABEL_74;
          if (v58 >= v115)
          {
LABEL_72:
            sub_2498CACBC(v97, v99);
            swift_release();
            return v91;
          }
          v68 = *(_QWORD *)(v60 + 8 * v58);
          if (!v68)
          {
            v69 = v58 + 1;
            if (v58 + 1 >= v115)
              goto LABEL_72;
            v68 = *(_QWORD *)(v60 + 8 * v69);
            if (!v68)
            {
              v69 = v58 + 2;
              if (v58 + 2 >= v115)
                goto LABEL_72;
              v68 = *(_QWORD *)(v60 + 8 * v69);
              if (!v68)
              {
                v69 = v58 + 3;
                if (v58 + 3 >= v115)
                  goto LABEL_72;
                v68 = *(_QWORD *)(v60 + 8 * v69);
                if (!v68)
                {
                  while (1)
                  {
                    v58 = v69 + 1;
                    if (__OFADD__(v69, 1))
                      goto LABEL_75;
                    if (v58 >= v115)
                      goto LABEL_72;
                    v68 = *(_QWORD *)(v60 + 8 * v58);
                    ++v69;
                    if (v68)
                      goto LABEL_39;
                  }
                }
              }
            }
            v58 = v69;
          }
LABEL_39:
          v63 = (v68 - 1) & v68;
          v66 = __clz(__rbit64(v68)) + (v58 << 6);
        }
        v70 = *(_QWORD *)(*(_QWORD *)(v59 + 48) + 8 * v66);
        v71 = *(_QWORD *)(v59 + 56) + 56 * v66;
        v72 = *(_QWORD *)v71;
        v73 = *(_QWORD *)(v71 + 8);
        v118 = *(_OWORD *)(v71 + 24);
        v124 = *(_QWORD *)(v71 + 40);
        v74 = *(unsigned __int8 *)(v71 + 48);
        v75 = *(unsigned __int8 *)(v71 + 49);
        if (!v64[2])
          break;
        sub_2498DFB24(v70);
        if ((v76 & 1) == 0 && ((v75 | v74) & 1) != 0)
          goto LABEL_45;
      }
      if ((v75 | v74) == 1)
      {
LABEL_45:
        v77 = 0;
        while (1)
        {
          v78 = 1;
          if (v77 == 2)
            break;
          while (1)
          {
            ++v77;
            if ((v78 & 1) != 0)
              break;
            if (v77 == 2)
            {
              if (v74)
                v74 = 5;
              else
                v74 = 4;
              if ((v75 & 1) != 0)
                goto LABEL_57;
              goto LABEL_58;
            }
            v78 = 0;
          }
        }
        if ((v75 & 1) != 0)
LABEL_57:
          v74 |= 2u;
LABEL_58:
        swift_isUniquelyReferenced_nonNull_native();
        v139 = v64;
        v79 = sub_2498DFB24(v70);
        v112 = v80;
        if (__OFADD__(v64[2], (v80 & 1) == 0))
          goto LABEL_76;
        v81 = v79;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E70);
        v59 = v101;
        v60 = v101 + 64;
        if ((sub_249955D3C() & 1) != 0)
        {
          v82 = sub_2498DFB24(v70);
          if ((v112 & 1) != (v83 & 1))
            goto LABEL_78;
          v81 = v82;
        }
        v64 = v139;
        if ((v112 & 1) != 0)
        {
          v84 = v139[7] + 56 * v81;
          *(_QWORD *)v84 = v72;
          *(_QWORD *)(v84 + 8) = v73;
          *(_DWORD *)(v84 + 16) = v74;
          *(_OWORD *)(v84 + 24) = v118;
          *(_QWORD *)(v84 + 40) = v124;
          *(_WORD *)(v84 + 48) = 0;
          *(_BYTE *)(v84 + 50) = 0;
        }
        else
        {
          v139[(v81 >> 6) + 8] |= 1 << v81;
          *(_QWORD *)(v64[6] + 8 * v81) = v70;
          v85 = v64[7] + 56 * v81;
          *(_QWORD *)v85 = v72;
          *(_QWORD *)(v85 + 8) = v73;
          *(_DWORD *)(v85 + 16) = v74;
          *(_OWORD *)(v85 + 24) = v118;
          *(_QWORD *)(v85 + 40) = v124;
          *(_WORD *)(v85 + 48) = 0;
          *(_BYTE *)(v85 + 50) = 0;
          v86 = v64[2];
          v67 = __OFADD__(v86, 1);
          v87 = v86 + 1;
          if (v67)
            goto LABEL_77;
          v64[2] = v87;
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  v19 = 0;
  v20 = (unint64_t *)(v17 + 40);
  while (v19 != 0x7FFFFFFFFFFFFEC0)
  {
    v22 = *(v20 - 1);
    v21 = *v20;
    v23 = sub_249914D04(v19 + 320, a4, a5);
    sub_2498CAC78(v22, v21);
    _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
    if ((v23 & 1) != 0)
      v105 = v24;
    else
      v105 = v24 & 0x1F;
    sub_2498CAC78(v22, v21);
    _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
    v26 = v25 & 0x1F;
    HIDWORD(v104) = _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(8, v22, v21, v27, v28, v29, v30, v31, v89, v91, v93, v95, v97, v99, v101, v103, v105, v108, v110,
                      v113,
                      v116,
                      v119,
                      v121,
                      v125,
                      v127,
                      v129,
                      v131,
                      v133,
                      v135,
                      v137,
                      v138,
                      (uint64_t)v139,
                      v140,
                      v141,
                      v142,
                      *(uint64_t *)&v143);
    v37 = _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(24, v22, v21, v32, v33, v34, v35, v36, v90, v92, v94, v96, v98, v100, v102, v104, v106, v109, v111,
            v114,
            v117,
            v120,
            v122,
            v126,
            v128,
            v130,
            v132,
            v134,
            v136,
            v137,
            v138,
            (uint64_t)v139,
            v140,
            v141,
            v142,
            *(uint64_t *)&v143);
    HIDReport.subscript.getter(7, v22, v21);
    v39 = v38;
    HIDReport.subscript.getter(6, v22, v21);
    v41 = v40;
    HIDReport.subscript.getter(5, v22, v21);
    LODWORD(v108) = v42;
    sub_2498CACBC(v22, v21);
    v45 = *(_QWORD *)(v101 + 16);
    v46 = 0;
    v113 = v26;
    v116 = v18;
    HIDWORD(v110) = v39;
    if (!v45)
      goto LABEL_16;
    v47 = sub_2498DFB24(v26);
    if ((v48 & 1) == 0)
    {
      v45 = 0;
LABEL_16:
      v52 = 0;
      v53 = 0;
      v50 = 0.0;
      v51 = 0.0;
      goto LABEL_17;
    }
    v49 = *(_QWORD *)(v101 + 56) + 56 * v47;
    v45 = *(_QWORD *)(v49 + 8);
    v46 = *(_QWORD *)(v49 + 24);
    v50 = *(double *)(v49 + 32);
    v51 = *(double *)(v49 + 40);
    v52 = *(_BYTE *)(v49 + 48);
    v53 = *(_BYTE *)(v49 + 49);
LABEL_17:
    v20 += 2;
    v54 = v45 != v107;
    v43.n128_f64[0] = (double)WORD2(v103) / 65535.0;
    v44.n128_u64[0] = v46;
    v55 = static HIDPoint.== infix(_:_:)(v43, (double)v37 / 65535.0, 0.0, v44, v50, v51);
    v56 = (32 * v54) | 4;
    if (v55)
      v56 = 32 * v54;
    v57 = v56 & 0xFFFFFFFE | (BYTE4(v110) ^ v52) & 1;
    v140 = v113;
    v141 = v107;
    if (((v41 ^ v53) & 1) != 0)
      v57 |= 2u;
    if ((v108 & 1) != 0)
      v57 |= 0x200u;
    LODWORD(v142) = v57;
    v143 = (double)WORD2(v103) / 65535.0;
    v144 = (double)v37 / 65535.0;
    v145 = 0;
    v146 = BYTE4(v110) & 1;
    v147 = v41 & 1;
    v148 = v108 & 1;
    swift_isUniquelyReferenced_nonNull_native();
    v139 = (_QWORD *)v123;
    sub_2498E0E10((uint64_t)&v140, v113);
    v121 = (uint64_t)v139;
    swift_bridgeObjectRelease();
    sub_2498CACBC(v22, v21);
    v19 += 8;
    --v18;
    a4 = v97;
    a5 = v99;
    if (v116 == 1)
      goto LABEL_24;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  result = sub_249955F64();
  __break(1u);
  return result;
}

uint64_t sub_24990E77C()
{
  return sub_2499557B4();
}

uint64_t sub_24990E79C()
{
  return sub_24990E77C();
}

uint64_t sub_24990E7A8(double a1, double a2, double a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  double *v6;
  char v10;
  char v11;
  double v12;
  uint64_t result;
  uint64_t FluidTouchGestureEvent;

  sub_2498C8F2C(0, a5, a6);
  if ((v10 & 0x8F) == 0)
    return MEMORY[0x24BEE4AF8];
  v11 = v10;
  if ((v10 & 1) != 0)
  {
    v6[3] = a1;
    v6[4] = a2;
    v12 = a1;
    v6[5] = a3;
  }
  else
  {
    v12 = v6[3];
  }
  static HIDPoint.- infix(_:_:)(a1, a2, a3, v12);
  FluidTouchGestureEvent = IOHIDEventCreateFluidTouchGestureEvent();
  IOHIDEventSetIntegerValue();
  if ((v11 & 0xC) != 0)
  {
    v6[3] = 0.0;
    v6[4] = 0.0;
    v6[5] = 0.0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_2499568A0;
  *(_QWORD *)(result + 56) = &type metadata for FluidTouchGestureEvent;
  *(_QWORD *)(result + 64) = &protocol witness table for FluidTouchGestureEvent;
  *(_QWORD *)(result + 32) = FluidTouchGestureEvent;
  return result;
}

uint64_t DigitizerGesture.description.getter()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  v0 = sub_2499557B4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DigitizerGesture.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DigitizerGesture.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24990E974()
{
  return DigitizerGesture.description.getter();
}

uint64_t sub_24990E994(uint64_t a1)
{
  return DigitizerGesture.dispatch(report:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

_UNKNOWN **sub_24990E9BC()
{
  return &protocol witness table for DigitizerReport;
}

_UNKNOWN **sub_24990E9C8()
{
  return &protocol witness table for DigitizerReport;
}

uint64_t type metadata accessor for DigitizerGesture()
{
  return objc_opt_self();
}

uint64_t method lookup function for DigitizerGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:dispatchPointerEvents:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t destroy for DigitizerGesture.State()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s12UniversalHID16DigitizerGestureC5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DigitizerGesture.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for DigitizerGesture.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitizerGesture.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitizerGesture.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitizerGesture.State()
{
  return &type metadata for DigitizerGesture.State;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigitizerGesture.State.Contact(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 51))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitizerGesture.State.Contact(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitizerGesture.State.Contact()
{
  return &type metadata for DigitizerGesture.State.Contact;
}

uint64_t sub_24990EC38()
{
  return MEMORY[0x24BEE1778];
}

void sub_24990EC44(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24990F54C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_24990ECAC(v5);
  *a1 = v2;
}

void sub_24990ECAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  v3 = a1[1];
  v4 = sub_249955EEC();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_24990F27C(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  v86 = a1;
  v87 = sub_2498CF584(v3 / 2);
  v91 = v6;
  v89 = v3;
  if (v3 <= 0)
  {
    v9 = MEMORY[0x24BEE4AF8];
    v26 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_90:
    if (v26 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v89 >= -1)
      {
        *(_QWORD *)(v87 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v78 = *v86;
    while (1)
    {
      v79 = v26 - 2;
      if (v26 < 2)
        break;
      if (!v78)
        goto LABEL_133;
      v80 = *(_QWORD *)(v9 + 32 + 16 * v79);
      v81 = *(_QWORD *)(v9 + 32 + 16 * (v26 - 1) + 8);
      sub_24990F2D4((char *)(v78 + 8 * v80), (char *)(v78 + 8 * *(_QWORD *)(v9 + 32 + 16 * (v26 - 1))), v78 + 8 * v81, v91);
      if (v1)
        goto LABEL_86;
      if (v81 < v80)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24990F538(v9);
        v9 = v84;
      }
      if (v79 >= *(_QWORD *)(v9 + 16))
        goto LABEL_120;
      v82 = (_QWORD *)(v9 + 32 + 16 * v79);
      *v82 = v80;
      v82[1] = v81;
      v83 = *(_QWORD *)(v9 + 16);
      if (v26 > v83)
        goto LABEL_121;
      memmove((void *)(v9 + 32 + 16 * (v26 - 1)), (const void *)(v9 + 32 + 16 * v26), 16 * (v83 - v26));
      *(_QWORD *)(v9 + 16) = v83 - 1;
      v26 = v83 - 1;
      if (v83 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = *a1;
  v85 = *a1 - 8;
  v9 = MEMORY[0x24BEE4AF8];
  v88 = v5;
  v90 = *a1;
  while (1)
  {
    v10 = v7++;
    if (v7 < v3)
    {
      v11 = *(_QWORD *)(v8 + 8 * v7);
      v12 = *(_QWORD *)(v8 + 8 * v10);
      v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = v11;
        while (1)
        {
          v14 = *(_QWORD *)(v8 + 8 * v7);
          if (v11 < v12 == v14 >= v13)
            break;
          ++v7;
          v13 = v14;
          if (v7 >= v3)
          {
            v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10)
          goto LABEL_126;
        if (v10 < v7)
        {
          v15 = v7 - 1;
          v16 = v10;
          do
          {
            if (v16 != v15)
            {
              if (!v8)
                goto LABEL_132;
              v17 = *(_QWORD *)(v8 + 8 * v16);
              *(_QWORD *)(v8 + 8 * v16) = *(_QWORD *)(v8 + 8 * v15);
              *(_QWORD *)(v8 + 8 * v15) = v17;
            }
            v57 = ++v16 < v15--;
          }
          while (v57);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10))
        goto LABEL_123;
      if (v7 - v10 < v5)
      {
        v18 = v10 + v5;
        if (__OFADD__(v10, v5))
          goto LABEL_127;
        if (v18 >= v3)
          v18 = v3;
        if (v18 < v10)
          goto LABEL_128;
        if (v7 != v18)
        {
          v19 = (uint64_t *)(v85 + 8 * v7);
          do
          {
            v20 = *(_QWORD *)(v8 + 8 * v7);
            v21 = v10;
            v22 = v19;
            do
            {
              v23 = *v22;
              if (v20 >= *v22)
                break;
              if (!v8)
                goto LABEL_130;
              *v22 = v20;
              v22[1] = v23;
              --v22;
              ++v21;
            }
            while (v7 != v21);
            ++v7;
            ++v19;
          }
          while (v7 != v18);
          v7 = v18;
        }
      }
    }
    if (v7 < v10)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24990F44C(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
      v9 = v76;
    }
    v25 = *(_QWORD *)(v9 + 16);
    v24 = *(_QWORD *)(v9 + 24);
    v26 = v25 + 1;
    v8 = v90;
    if (v25 >= v24 >> 1)
    {
      sub_24990F44C(v24 > 1, v25 + 1, 1, (char *)v9);
      v8 = v90;
      v9 = v77;
    }
    *(_QWORD *)(v9 + 16) = v26;
    v27 = v9 + 32;
    v28 = (uint64_t *)(v9 + 32 + 16 * v25);
    *v28 = v10;
    v28[1] = v7;
    if (v25)
      break;
    v26 = 1;
LABEL_81:
    v5 = v88;
    v3 = v89;
    if (v7 >= v89)
      goto LABEL_90;
  }
  while (1)
  {
    v29 = v26 - 1;
    if (v26 >= 4)
    {
      v34 = v27 + 16 * v26;
      v35 = *(_QWORD *)(v34 - 64);
      v36 = *(_QWORD *)(v34 - 56);
      v40 = __OFSUB__(v36, v35);
      v37 = v36 - v35;
      if (v40)
        goto LABEL_107;
      v39 = *(_QWORD *)(v34 - 48);
      v38 = *(_QWORD *)(v34 - 40);
      v40 = __OFSUB__(v38, v39);
      v32 = v38 - v39;
      v33 = v40;
      if (v40)
        goto LABEL_108;
      v41 = v26 - 2;
      v42 = (uint64_t *)(v27 + 16 * (v26 - 2));
      v44 = *v42;
      v43 = v42[1];
      v40 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      if (v40)
        goto LABEL_109;
      v40 = __OFADD__(v32, v45);
      v46 = v32 + v45;
      if (v40)
        goto LABEL_111;
      if (v46 >= v37)
      {
        v64 = (uint64_t *)(v27 + 16 * v29);
        v66 = *v64;
        v65 = v64[1];
        v40 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v40)
          goto LABEL_117;
        v57 = v32 < v67;
        goto LABEL_70;
      }
    }
    else
    {
      if (v26 != 3)
      {
        v58 = *(_QWORD *)(v9 + 32);
        v59 = *(_QWORD *)(v9 + 40);
        v40 = __OFSUB__(v59, v58);
        v51 = v59 - v58;
        v52 = v40;
        goto LABEL_64;
      }
      v31 = *(_QWORD *)(v9 + 32);
      v30 = *(_QWORD *)(v9 + 40);
      v40 = __OFSUB__(v30, v31);
      v32 = v30 - v31;
      v33 = v40;
    }
    if ((v33 & 1) != 0)
      goto LABEL_110;
    v41 = v26 - 2;
    v47 = (uint64_t *)(v27 + 16 * (v26 - 2));
    v49 = *v47;
    v48 = v47[1];
    v50 = __OFSUB__(v48, v49);
    v51 = v48 - v49;
    v52 = v50;
    if (v50)
      goto LABEL_112;
    v53 = (uint64_t *)(v27 + 16 * v29);
    v55 = *v53;
    v54 = v53[1];
    v40 = __OFSUB__(v54, v55);
    v56 = v54 - v55;
    if (v40)
      goto LABEL_114;
    if (__OFADD__(v51, v56))
      goto LABEL_116;
    if (v51 + v56 >= v32)
    {
      v57 = v32 < v56;
LABEL_70:
      if (v57)
        v29 = v41;
      goto LABEL_72;
    }
LABEL_64:
    if ((v52 & 1) != 0)
      goto LABEL_113;
    v60 = (uint64_t *)(v27 + 16 * v29);
    v62 = *v60;
    v61 = v60[1];
    v40 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v40)
      goto LABEL_115;
    if (v63 < v51)
      goto LABEL_81;
LABEL_72:
    v68 = v9;
    v69 = v29 - 1;
    if (v29 - 1 >= v26)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8)
      goto LABEL_131;
    v70 = (uint64_t *)(v27 + 16 * v69);
    v71 = *v70;
    v72 = v27;
    v73 = (_QWORD *)(v27 + 16 * v29);
    v74 = v73[1];
    sub_24990F2D4((char *)(v8 + 8 * *v70), (char *)(v8 + 8 * *v73), v8 + 8 * v74, v91);
    if (v1)
      break;
    if (v74 < v71)
      goto LABEL_104;
    if (v29 > *(_QWORD *)(v68 + 16))
      goto LABEL_105;
    *v70 = v71;
    *(_QWORD *)(v72 + 16 * v69 + 8) = v74;
    v75 = *(_QWORD *)(v68 + 16);
    if (v29 >= v75)
      goto LABEL_106;
    v9 = v68;
    v26 = v75 - 1;
    memmove(v73, v73 + 2, 16 * (v75 - 1 - v29));
    v27 = v72;
    *(_QWORD *)(v68 + 16) = v75 - 1;
    v8 = v90;
    if (v75 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v89 < -1)
    goto LABEL_125;
  *(_QWORD *)(v87 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_24990F27C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 8 * a3);
      v7 = result;
      v8 = (uint64_t *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_24990F2D4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  BOOL v15;
  char *v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2498D5218(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (char *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 8;
      v20 = *((_QWORD *)v6 - 1);
      if (*((_QWORD *)v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = *((_QWORD *)v12 - 1);
        v12 -= 8;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        v6 -= 8;
        if (!v21)
          goto LABEL_35;
      }
      *(_QWORD *)v18 = v20;
LABEL_35:
      v18 -= 8;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_2498D5218(a1, (a2 - a1) / 8, a4);
  v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6;
      if (*(_QWORD *)v6 < *(_QWORD *)v4)
        break;
      v14 = *(_QWORD *)v4;
      v15 = v7 == v4;
      v4 += 8;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6;
    v6 += 8;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(_QWORD *)v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_2498D5218(v4, (v12 - v4) / 8, v6);
  return 1;
}

void sub_24990F44C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1C88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_18_3();
}

void sub_24990F538(uint64_t a1)
{
  sub_24990F44C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_24990F54C()
{
  sub_2498D63EC();
}

void sub_24990F560(uint64_t a1)
{
  sub_2498D612C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return swift_allocObject();
}

void HIDEventProtocol.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_249910708(a1, a2, a3, (uint64_t)MEMORY[0x24BDD8148], a5, a6, a7, a8, a9, a10);
}

uint64_t _HIDEventImpl.init(wrappedValue:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t result;
  uint64_t v8;
  _QWORD v9[4];

  sub_2498CF8CC((uint64_t)a1, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v6 = OUTLINED_FUNCTION_70_0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (v6 == (_DWORD)result)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8 = OUTLINED_FUNCTION_67_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v8, a2, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HIDEventProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_3(a1, a2);
  IOHIDEventGetPhase();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t HIDEventProtocol.first<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];
  __int128 v10;
  uint64_t v11;
  _BYTE v12[40];

  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  HIDEventProtocol.first(where:)((uint64_t (*)(uint64_t *))sub_249913360, (uint64_t)v9, a1, a3, (uint64_t *)&v10);
  if (v11)
  {
    sub_2498CF9C0(&v10, (uint64_t)v12);
    sub_2498CF8CC((uint64_t)v12, (uint64_t)&v10);
    OUTLINED_FUNCTION_63_0((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    v6 = a5;
    v7 = 0;
  }
  else
  {
    sub_2498CF980((uint64_t)&v10);
    v6 = a5;
    v7 = 1;
  }
  return OUTLINED_FUNCTION_62_0(v6, v7);
}

void sub_24990F748(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE32C(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990F768(void *a1)
{
  unint64_t v1;

  if (objc_msgSend(a1, sel_children))
  {
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_91_0();
    OUTLINED_FUNCTION_79_0();
    sub_249911FA4(v1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D6870, (uint64_t (*)(uint64_t, unint64_t))sub_2498CF710);
    OUTLINED_FUNCTION_103_0();
  }
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.children.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)OUTLINED_FUNCTION_43_3(a1, a2);
  v3 = objc_msgSend(v2, sel_children);

  if (v3)
  {
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_91_0();
    OUTLINED_FUNCTION_79_0();
    sub_249911FA4((unint64_t)v2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D6870, (uint64_t (*)(uint64_t, unint64_t))sub_2498CF710);
    OUTLINED_FUNCTION_103_0();
  }
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990F844()
{
  return sub_24990F84C();
}

uint64_t sub_24990F84C()
{
  return 0x800000000;
}

uint64_t sub_24990F854()
{
  return 0x20000;
}

uint64_t sub_24990F85C()
{
  return 8;
}

uint64_t sub_24990F864()
{
  return 0x800000;
}

uint64_t sub_24990F86C()
{
  return 32;
}

uint64_t sub_24990F874()
{
  return 64;
}

uint64_t sub_24990F87C()
{
  return 512;
}

uint64_t sub_24990F884()
{
  return 128;
}

uint64_t sub_24990F88C()
{
  return 2048;
}

uint64_t sub_24990F894()
{
  return 0x8000000000;
}

uint64_t sub_24990F89C()
{
  return 0x400000;
}

uint64_t sub_24990F8A4()
{
  return 0x8000000;
}

uint64_t sub_24990F8AC()
{
  return 0x10000;
}

uint64_t HIDEventProtocol.eventMask.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(void))(a2 + 24))();
  HIDEventType.maskValue.getter(v2);
  return HIDEventType.maskValue.getter(v2);
}

uint64_t sub_24990F8E0()
{
  return sub_2498D0844();
}

uint64_t sub_24990F8E8()
{
  return 6;
}

uint64_t sub_24990F8F0()
{
  return 5;
}

uint64_t sub_24990F8F8()
{
  return 23;
}

uint64_t sub_24990F900()
{
  return 22;
}

uint64_t sub_24990F908()
{
  return 39;
}

uint64_t sub_24990F910()
{
  return 27;
}

void _HIDEventImpl.eventType.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_3(a1, a2);
  IOHIDEventGetEventFlags();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990F964()
{
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_24_11(a1, a2, a3);
  IOHIDEventSetEventFlags();
  OUTLINED_FUNCTION_32_5(v3);
}

void sub_24990F9A4(_QWORD *a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.flags.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  HIDEventProtocol.flags.getter(v4, v5);
  *(_DWORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990F9F8(uint64_t a1)
{
  HIDEventProtocol.flags.setter(*(unsigned int *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

BOOL sub_24990FA1C()
{
  return IOHIDEventIsAbsolute() != 0;
}

void HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  sub_249910110(a1, a2, (void (*)(void))MEMORY[0x24BDD82F0]);
}

uint64_t sub_24990FA44()
{
  OUTLINED_FUNCTION_21_11();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.absolute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  OUTLINED_FUNCTION_40_4();
  OUTLINED_FUNCTION_10_13(v3, v4, v5);
}

void sub_24990FA8C(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_3_18(a1);
  OUTLINED_FUNCTION_2_18(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.absolute.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  HIDEventProtocol.absolute.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FAE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.absolute.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FB00()
{
  return (IOHIDEventGetEventFlags() >> 16) & 1;
}

uint64_t HIDEventProtocol.accelerated.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 16) & 1;
}

uint64_t sub_24990FB30()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.accelerated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFEFFFF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_24990FB8C(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_30_5(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.accelerated.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) >> 16) & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FBE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.accelerated.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FBFC()
{
  return (IOHIDEventGetEventFlags() >> 4) & 1;
}

uint64_t HIDEventProtocol.builtin.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 4) & 1;
}

uint64_t sub_24990FC2C()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.builtin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFFFFEF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_24990FC88(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_29_6(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.builtin.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) & 0x10) != 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FCDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.builtin.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FCF8()
{
  return (IOHIDEventGetEventFlags() >> 3) & 1;
}

uint64_t HIDEventProtocol.centerOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 3) & 1;
}

uint64_t sub_24990FD28()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.centerOrigin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFFFFF7);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_24990FD84(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_28_7(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.centerOrigin.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) & 8) != 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.centerOrigin.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FDF4()
{
  return (IOHIDEventGetEventFlags() >> 1) & 1;
}

uint64_t HIDEventProtocol.collection.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 1) & 1;
}

uint64_t sub_24990FE24()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.collection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFFFFFD);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_24990FE80(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_31_4(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.collection.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) & 2) != 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.collection.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FEF0()
{
  return (IOHIDEventGetEventFlags() >> 5) & 1;
}

uint64_t HIDEventProtocol.interpolated.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 5) & 1;
}

uint64_t sub_24990FF20()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.interpolated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFFFFDF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_24990FF7C(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_27_10(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.interpolated.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) & 0x20) != 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_24990FFD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.interpolated.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24990FFEC()
{
  return (IOHIDEventGetEventFlags() >> 2) & 1;
}

uint64_t HIDEventProtocol.pixelUnits.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_52_2(a1, a2) >> 2) & 1;
}

uint64_t sub_24991001C()
{
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_59_0();
  return OUTLINED_FUNCTION_18_14();
}

void HIDEventProtocol.pixelUnits.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_15(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_34_4(v3 & 0xFFFFFFFB);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void sub_249910078(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_26_9(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.pixelUnits.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_13_14(a1, a2, a3) & 4) != 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499100CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.pixelUnits.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

BOOL sub_2499100E8()
{
  return IOHIDEventIsRepeat() != 0;
}

void HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  sub_249910110(a1, a2, (void (*)(void))MEMORY[0x24BDD82F8]);
}

void sub_249910110(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;

  v4 = (void *)OUTLINED_FUNCTION_43_3(a1, a2);
  a3();

  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249910144(uint64_t result)
{
  if ((result & 1) != 0)
    return IOHIDEventSetRepeat();
  return result;
}

void HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;

  if ((a1 & 1) != 0)
  {
    v3 = (id)OUTLINED_FUNCTION_24_11(a1, a2, a3);
    IOHIDEventSetRepeat();

  }
}

void sub_24991018C(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_7_20(a1);
  OUTLINED_FUNCTION_2_18(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.repeat.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  HIDEventProtocol.repeat.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499101E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.repeat.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_249910200()
{
  uint64_t v0;

  if ((id)IOHIDEventGetParent())
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_81_0(v0, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_44_3();
  }
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.parent.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)OUTLINED_FUNCTION_43_3(a1, a2);
  v3 = (id)IOHIDEventGetParent();

  if (v3)
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_81_0(v4, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_44_3();
  }
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_249910298()
{
  _QWORD *v0;

  return sub_2498CF9DC(*v0);
}

uint64_t sub_2499102A0()
{
  return IOHIDEventSetPhase();
}

void HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_24_11(a1, a2, a3);
  IOHIDEventSetPhase();
  OUTLINED_FUNCTION_32_5(v3);
}

void sub_2499102E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_12_16();
  v2 = OUTLINED_FUNCTION_14_14((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_249910314(v2, v3);
  OUTLINED_FUNCTION_18_3();
}

uint64_t (*sub_249910314(uint64_t a1, uint64_t a2))()
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = IOHIDEventGetPhase() & 0x8F;
  return sub_24991453C;
}

uint64_t (*sub_249910350(uint64_t a1, uint64_t a2))()
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = IOHIDEventGetPhase() & 0x8F;
  return sub_24991038C;
}

uint64_t sub_24991038C()
{
  return IOHIDEventSetPhase();
}

void HIDEventProtocol.phase.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  HIDEventProtocol.phase.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499103C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.phase.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499103E4()
{
  _QWORD *v0;

  return sub_24990CD08(*v0);
}

void HIDEventProtocol.momentum.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_3(a1, a2);
  IOHIDEventGetScrollMomentum();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249910414()
{
  return IOHIDEventSetScrollMomentum();
}

void HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  v3 = (void *)OUTLINED_FUNCTION_24_11(a1, a2, a3);
  IOHIDEventSetScrollMomentum();
  OUTLINED_FUNCTION_32_5(v3);
}

void sub_249910454(_QWORD *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = OUTLINED_FUNCTION_4_14(a1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.momentum.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_2_14(a1, a2, a3);
  HIDEventProtocol.momentum.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499104A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_22_10(a1);
  HIDEventProtocol.momentum.setter(v1, v2, v3);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.sender.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_3(a1, a2);
  IOHIDEventGetSenderID();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499104F0()
{
  return IOHIDEventSetSenderID();
}

void HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2499105C8(a1, a2, a3, (void (*)(id, uint64_t))MEMORY[0x24BDD8340]);
}

void sub_24991050C(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_5_15(a1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.sender.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  HIDEventProtocol.sender.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249910560(uint64_t *a1)
{
  HIDEventProtocol.sender.setter(*a1, a1[1], a1[2]);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.time.getter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_3(a1, a2);
  IOHIDEventGetTimeStamp();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499105AC()
{
  return IOHIDEventSetTimeStamp();
}

void HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2499105C8(a1, a2, a3, (void (*)(id, uint64_t))MEMORY[0x24BDD8348]);
}

void sub_2499105C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  id v6;

  v6 = (id)OUTLINED_FUNCTION_24_11(a1, a2, a3);
  a4(v6, a1);

}

void sub_24991060C(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_6_19(a1);
  OUTLINED_FUNCTION_6_0();
}

void HIDEventProtocol.time.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_3_14(a1, a2, a3);
  HIDEventProtocol.time.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249910660(uint64_t *a1)
{
  HIDEventProtocol.time.setter(*a1, a1[1], a1[2]);
  OUTLINED_FUNCTION_6_0();
}

void sub_249910680(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v20)(id, void *, _QWORD);
  void (*v21)(id, void *, _QWORD);
  void *v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  id v27;
  uint64_t v28;
  void *v29;

  OUTLINED_FUNCTION_78_0();
  v21 = v20;
  v23 = v22;
  v25 = v24[4];
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  v26 = *(uint64_t (**)(uint64_t))(v25 + 352);
  v27 = v23;
  v28 = OUTLINED_FUNCTION_95_0();
  v29 = (void *)v26(v28);
  v21(v27, v29, 0);

}

void HIDEventProtocol.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  sub_249910708(a1, a2, a3, MEMORY[0x24BDD8300], a5, a6, a7, a8, a9, a10);
}

void sub_249910708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void (*v10)(uint64_t);
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_15_7();
  v11 = v10;
  v13 = (_QWORD *)v12;
  v16 = (void *)OUTLINED_FUNCTION_24_11(v12, v14, v15);
  v17 = v13[3];
  v18 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 352))(v17, v18);
  v19 = OUTLINED_FUNCTION_92_0();
  v11(v19);

  OUTLINED_FUNCTION_42_3(a10);
}

void sub_249910768()
{
  uint64_t v0;

  if ((id)IOHIDEventGetEventWithOptions())
  {
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_81_0(v0, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_44_3();
  }
  OUTLINED_FUNCTION_6_0();
}

double HIDEventProtocol.first(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  uint64_t v6;
  double result;

  v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 352))(a3, a4);
  v5 = (id)IOHIDEventGetEventWithOptions();

  if (!v5)
    return OUTLINED_FUNCTION_44_3();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_81_0(v6, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

uint64_t HIDEventProtocol.addRemoteTimestamp<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249912170(a1, a2, a3, a4, a5, (uint64_t (*)(void))HIDEventProtocol.addRemoteTimestamp(_:));
}

uint64_t sub_24991084C@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_249910858(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_249910864@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

uint64_t sub_249910870(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_249910878(unsigned __int8 *a1, unsigned __int8 a2)
{
  _BYTE *v2;
  int v3;

  v3 = (*v2 & a2);
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_2499108A8(_DWORD *a1, int a2)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

void sub_2499108D4(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_73_0(*v1 | a1);
}

void sub_2499108E0(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_41_3(*v1 | a1);
}

void sub_2499108EC(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_72_0(*v1 | a1);
}

void sub_2499108F8(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_73_0(*v1 & a1);
}

void sub_249910904(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_41_3(*v1 & a1);
}

void sub_249910910(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_72_0(*v1 & a1);
}

void sub_24991091C(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_73_0(*v1 ^ a1);
}

void sub_249910928(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_41_3(*v1 ^ a1);
}

void sub_249910934(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_72_0(*v1 ^ a1);
}

void sub_249910940()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_57_2();
  v6 = v2;
  v7 = v3;
  OUTLINED_FUNCTION_12_13(v4, v5, v2, v3);
  sub_249911388(v1, v0);
  OUTLINED_FUNCTION_76_0();
  MEMORY[0x24BCFA854]();
  sub_2498CACBC(v6, v7);
  OUTLINED_FUNCTION_0_12();
}

BOOL sub_2499109A0(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_2499109AC(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_2499109B8(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

void sub_2499109C8()
{
  sub_249910A5C();
}

uint64_t sub_2499109D4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_100_0();
  sub_2498CAC78(v2, v3);
  sub_2498CAC78(v1, v0);
  OUTLINED_FUNCTION_76_0();
  sub_2498E87FC(v4, v5, v6);
  v7 = OUTLINED_FUNCTION_95_0();
  v8 = MEMORY[0x24BCFA854](v7);
  OUTLINED_FUNCTION_27_9();
  return v8 & 1;
}

void sub_249910A44()
{
  sub_249910A5C();
}

void sub_249910A50()
{
  sub_249910A5C();
}

void sub_249910A5C()
{
  void (*v0)(uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t);
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  OUTLINED_FUNCTION_15_7();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = v4;
  v11 = v2;
  OUTLINED_FUNCTION_12_13(v8, v6, v4, v2);
  v1(v9, v7);
  MEMORY[0x24BCFA854](v10, v11, v5, v3);
  OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_0_12();
}

void sub_249910AC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_57_2();
  sub_2498CAC78(v0, v1);
  v2 = OUTLINED_FUNCTION_47_3();
  sub_249911388(v2, v3);
  OUTLINED_FUNCTION_68_0();
}

void sub_249910AF8()
{
  OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_0_12();
}

BOOL sub_249910B08(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_249910B14(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_249910B20(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_249910B30()
{
  char v0;

  OUTLINED_FUNCTION_38_4();
  return v0 & 1;
}

void sub_249910B58(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD v8[2];

  v8[0] = a1;
  v8[1] = a2;
  OUTLINED_FUNCTION_12_13(a1, a2, a3, a4);
  sub_2498CAC78(a1, a2);
  sub_2498E87FC((uint64_t)v8, a3, a4);
  OUTLINED_FUNCTION_68_0();
}

uint64_t sub_249910BB0()
{
  char v0;

  OUTLINED_FUNCTION_46_3();
  return v0 & 1;
}

uint64_t sub_249910BD0()
{
  char v0;

  OUTLINED_FUNCTION_38_4();
  return v0 & 1;
}

uint64_t sub_249910BF8()
{
  char v0;

  OUTLINED_FUNCTION_38_4();
  return v0 & 1;
}

uint64_t sub_249910C20()
{
  return sub_249910E18();
}

#error "249910CB8: call analysis failed (funcsize=40)"

void sub_249910CD4(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *v2;
  v4 = v2[1];
  v8 = *v2;
  sub_2498CAC78(a1, a2);
  sub_2498CAC78(v3, v4);
  OUTLINED_FUNCTION_40_4();
  sub_2498E87A0(v5, v6, v7);
  sub_2498E87FC((uint64_t)v2, v8, v4);
}

#error "249910D80: call analysis failed (funcsize=40)"

void sub_249910DE0(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_41_3(*v1 & ~a1);
}

void sub_249910DEC(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_72_0(*v1 & ~a1);
}

void sub_249910DF8(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_73_0(*v1 & ~a1);
}

uint64_t sub_249910E04()
{
  return sub_249910E18();
}

uint64_t sub_249910E18()
{
  uint64_t *v0;
  void (*v1)(uint64_t, unint64_t);
  void (*v2)(uint64_t, unint64_t);
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  OUTLINED_FUNCTION_15_7();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = *v0;
  v11 = v0[1];
  sub_2498CAC78(*v0, v11);
  v4(v8, v6);
  v2(v10, v11);
  return sub_2498CACBC(v10, v11);
}

void sub_249910E90(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CCA8(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t _HIDEventImpl.init(event:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  OUTLINED_FUNCTION_104_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v8 = OUTLINED_FUNCTION_70_0();
  if (v8 == (*(unsigned int (**)(uint64_t, uint64_t))(v1 + 16))(v3, v1))
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v9 = OUTLINED_FUNCTION_67_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(v9, v3, v1);
    OUTLINED_FUNCTION_62_0(v7, 0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return __swift_storeEnumTagSinglePayload(v7, 1, 1, v3);
  }
}

void sub_249910F8C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE2E8(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249910FAC()
{
  return sub_2498CBE54();
}

uint64_t sub_249910FB4()
{
  return OUTLINED_FUNCTION_27();
}

void sub_249910FBC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CCE0(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249910FDC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE2A4(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249910FFC()
{
  return sub_2498D761C();
}

uint64_t sub_249911004()
{
  return sub_2498D7C68();
}

void sub_249911010(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_2499112D0, a5);
}

void sub_24991101C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_24991123C, a5);
}

void sub_249911028()
{
  sub_249911104();
}

void sub_249911034(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_2499117DC, a5);
}

void sub_249911040(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_249911388, a5);
}

void sub_24991104C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_249911904, a5);
}

void sub_249911058()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  char v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;

  OUTLINED_FUNCTION_104_0();
  *v2 = v0;
  v2[1] = v1;
  OUTLINED_FUNCTION_12_13(v3, v4, v0, v1);
  OUTLINED_FUNCTION_94_0();
  v5 = 0;
  for (i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_88_0();
    if (!v7)
      break;
    if (__OFADD__(v5, 8))
      goto LABEL_13;
    OUTLINED_FUNCTION_69_0(v5 + 8);
    OUTLINED_FUNCTION_50_2();
    if (v7)
    {
      if (i > 2)
        goto LABEL_12;
    }
    else
    {
      AppleVendorTopCaseReport.update(with:)();
      if ((v8 & 0x100) == 0)
        AppleVendorTopCaseReport.remove(_:)();
      if (i >= 3)
      {
LABEL_12:
        v9 = OUTLINED_FUNCTION_47_3();
        OUTLINED_FUNCTION_15_13(v9, v10);
        return;
      }
    }
    v5 += 8;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

void sub_2499110F8()
{
  sub_249911104();
}

void sub_249911104()
{
  void (*v0)(uint64_t *, uint64_t, unint64_t);
  void (*v1)(uint64_t *, uint64_t, unint64_t);
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;

  OUTLINED_FUNCTION_15_7();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  *v10 = v4;
  v10[1] = v2;
  sub_2498CAC78(v8, v6);
  sub_2498CAC78(v5, v3);
  v1(v11, v9, v7);
  OUTLINED_FUNCTION_0_12();
}

#error "24991119C: call analysis failed (funcsize=36)"

void sub_2499111F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_2499111FC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_2499119AC, a5);
}

void sub_2499111FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void (*a5)(uint64_t, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  *a6 = a3;
  a6[1] = a4;
  OUTLINED_FUNCTION_12_13(a1, a2, a3, a4);
  a5(a1, a2);
  OUTLINED_FUNCTION_18_3();
}

void sub_24991123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t i;
  char v14;
  __int16 v15;

  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_45_2(v10, v11);
  OUTLINED_FUNCTION_14_7();
  v12 = 0;
  for (i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_88_0();
    if (!v14)
      break;
    if (__OFADD__(v12, 8))
      goto LABEL_13;
    OUTLINED_FUNCTION_101_0(v12 + 8);
    OUTLINED_FUNCTION_50_2();
    if (v14)
    {
      if (i > 2)
        goto LABEL_12;
    }
    else
    {
      OUTLINED_FUNCTION_86_0();
      if ((v15 & 0x100) != 0)
        AppleVendorTopCaseReport.remove(_:)();
      if (i >= 3)
      {
LABEL_12:
        OUTLINED_FUNCTION_27_9();
        OUTLINED_FUNCTION_23_8(a9, a10);
        return;
      }
    }
    v12 += 8;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

uint64_t sub_2499112D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  BOOL v14;
  __int16 v16;

  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_45_2(v10, v11);
  OUTLINED_FUNCTION_14_7();
  v12 = 0;
  do
  {
    while (1)
    {
      OUTLINED_FUNCTION_101_0(8 * v12 + 8);
      if ((v13 - 49) > 0xCFu && v13 <= 0x21u && ((1 << v13) & 0x30003001ELL) != 0)
        break;
      v14 = v12 < 1;
      v12 = 1;
      if (!v14)
        goto LABEL_12;
    }
    AppleVendorKeyboardReport.update(with:)();
    if ((v16 & 0x100) != 0)
      AppleVendorKeyboardReport.remove(_:)();
    v14 = v12++ < 1;
  }
  while (v14);
LABEL_12:
  OUTLINED_FUNCTION_27_9();
  return OUTLINED_FUNCTION_23_8(a9, a10);
}

void sub_249911388(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  sub_2498CAC78(a1, a2);
  OUTLINED_FUNCTION_14_7();
  __asm { BR              X9 }
}

void sub_249911460()
{
  uint64_t v1;

  if (!__OFADD__(*(_QWORD *)(v1 - 136), 1))
    __asm { BR              X8 }
  __break(1u);
  JUMPOUT(0x249911744);
}

#error "249911820: call analysis failed (funcsize=39)"

void sub_249911878()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t i;
  char v4;
  __int16 v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_60_0(v0, v1);
  v2 = 0;
  for (i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_88_0();
    if (!v4)
      break;
    if (__OFADD__(v2, 8))
      goto LABEL_13;
    OUTLINED_FUNCTION_69_0(v2 + 8);
    OUTLINED_FUNCTION_50_2();
    if (v4)
    {
      if (i > 2)
        goto LABEL_12;
    }
    else
    {
      AppleVendorTopCaseReport.update(with:)();
      if ((v5 & 0x100) == 0)
        AppleVendorTopCaseReport.remove(_:)();
      if (i >= 3)
      {
LABEL_12:
        v6 = OUTLINED_FUNCTION_47_3();
        OUTLINED_FUNCTION_15_13(v6, v7);
        return;
      }
    }
    v2 += 8;
  }
  __break(1u);
LABEL_13:
  __break(1u);
}

uint64_t sub_249911904()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  BOOL v4;
  __int16 v6;
  uint64_t v7;
  unint64_t v8;

  OUTLINED_FUNCTION_104_0();
  OUTLINED_FUNCTION_60_0(v0, v1);
  v2 = 0;
  do
  {
    while (1)
    {
      OUTLINED_FUNCTION_69_0(8 * v2 + 8);
      if ((v3 - 49) > 0xCFu && v3 <= 0x21u && ((1 << v3) & 0x30003001ELL) != 0)
        break;
      v4 = v2 < 1;
      v2 = 1;
      if (!v4)
        goto LABEL_12;
    }
    AppleVendorKeyboardReport.update(with:)();
    if ((v6 & 0x100) == 0)
      AppleVendorKeyboardReport.remove(_:)();
    v4 = v2++ < 1;
  }
  while (v4);
LABEL_12:
  v7 = OUTLINED_FUNCTION_47_3();
  return OUTLINED_FUNCTION_15_13(v7, v8);
}

void sub_2499119AC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  sub_2498CAC78(a1, a2);
  __asm { BR              X9 }
}

void sub_249911A84()
{
  uint64_t v1;

  if (!__OFADD__(*(_QWORD *)(v1 - 120), 1))
    __asm { BR              X8 }
  __break(1u);
  JUMPOUT(0x249911D50);
}

#error "249911E10: call analysis failed (funcsize=31)"

uint64_t sub_249911E64(unint64_t a1)
{
  return sub_249911FA4(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D6870, (uint64_t (*)(uint64_t, unint64_t))sub_2498CF710);
}

uint64_t sub_249911E78(uint64_t a1)
{
  return sub_249911EA0(a1, (uint64_t)&type metadata for KeyboardEvent, (uint64_t)&protocol witness table for KeyboardEvent);
}

uint64_t sub_249911E8C(uint64_t a1)
{
  return sub_249911EA0(a1, (uint64_t)&type metadata for ScrollEvent, (uint64_t)&protocol witness table for ScrollEvent);
}

uint64_t sub_249911EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void **v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2498D5FD0();
    v4 = v17;
    v8 = (void **)(a1 + 32);
    do
    {
      v9 = *v8;
      v17 = v4;
      v10 = *(_QWORD *)(v4 + 16);
      v11 = *(_QWORD *)(v4 + 24);
      v12 = v9;
      if (v10 >= v11 >> 1)
      {
        sub_2498D5FD0();
        v4 = v17;
      }
      v15 = a2;
      v16 = a3;
      *(_QWORD *)&v14 = v12;
      *(_QWORD *)(v4 + 16) = v10 + 1;
      sub_2498CF9C0(&v14, v4 + 40 * v10 + 32);
      ++v8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_249911F90(unint64_t a1)
{
  return sub_249911FA4(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D5FD0, (uint64_t (*)(uint64_t, unint64_t))MEMORY[0x24BEE2658]);
}

uint64_t sub_249911FA4(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  unint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_249955D90();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v23 = MEMORY[0x24BEE4AF8];
  result = a2(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v6 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)a3(v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v11 = OUTLINED_FUNCTION_93_0();
      v21 = v11;
      v22 = &protocol witness table for HIDEvent;
      v20[0] = v10;
      v23 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        a2(v12 > 1, v13 + 1, 1);
        v14 = v21;
      }
      else
      {
        v14 = v11;
      }
      ++v8;
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v14);
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_16_0();
      (*(void (**)(uint64_t))(v18 + 16))(v17 - v16);
      sub_24991432C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      v6 = v23;
    }
    while (v5 != v8);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t Sequence<>.addRemoteTimestamp<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249912170(a1, a2, a3, a4, a5, (uint64_t (*)(void))Sequence<>.addRemoteTimestamp(_:));
}

uint64_t sub_249912170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t result;
  char v7;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  if ((v7 & 1) == 0)
  {
    OUTLINED_FUNCTION_76_0();
    return a6();
  }
  return result;
}

void sub_2499121DC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CD18(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499121FC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE0C8(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991221C()
{
  return sub_24990F854();
}

uint64_t sub_249912224()
{
  return sub_2498E5314();
}

void sub_24991222C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v2 = *v1;
  v3 = a1[3];
  v4 = a1[4];
  v5 = __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_249914394((uint64_t)v5, v2, v3, v4, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_18_3();
}

void sub_249912264(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CD50(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249912284(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE10C(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499122A4()
{
  return sub_24990F85C();
}

uint64_t sub_2499122AC()
{
  return sub_2498EC40C();
}

uint64_t sub_2499122B4(uint64_t a1)
{
  return sub_2499122EC(a1, (void (*)(__int128 *__return_ptr))sub_249912E28, (uint64_t)&type metadata for ScrollEvent, (uint64_t (*)(__int128 *))sub_2498CE084);
}

uint64_t sub_2499122D0(uint64_t a1)
{
  return sub_2499122EC(a1, (void (*)(__int128 *__return_ptr))sub_249912FE0, (uint64_t)&type metadata for PointerEvent, (uint64_t (*)(__int128 *))sub_2498CE0C8);
}

uint64_t sub_2499122EC(uint64_t a1, void (*a2)(__int128 *__return_ptr), uint64_t a3, uint64_t (*a4)(__int128 *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19[40];

  a2(&v15);
  if (v17)
  {
    v5 = sub_2498CF9C0(&v15, (uint64_t)v19);
    OUTLINED_FUNCTION_87_0(v5, v6, v7, v8, v9, v10, v11, v12, v15, *((uint64_t *)&v15 + 1), v16, v17, v18, v19[0]);
    v13 = a4(&v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    sub_2498CF980((uint64_t)&v15);
    return 0;
  }
  return v13;
}

uint64_t HIDEventProtocol.first<A>(_:where:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[8];
  __int128 v12;
  uint64_t v13;
  _BYTE v14[40];

  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  v11[6] = a1;
  v11[7] = a2;
  HIDEventProtocol.first(where:)(sub_249914030, (uint64_t)v11, a3, a5, (uint64_t *)&v12);
  if (v13)
  {
    sub_2498CF9C0(&v12, (uint64_t)v14);
    sub_2498CF8CC((uint64_t)v14, (uint64_t)&v12);
    OUTLINED_FUNCTION_63_0((uint64_t)&v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    v8 = a7;
    v9 = 0;
  }
  else
  {
    sub_2498CF980((uint64_t)&v12);
    v8 = a7;
    v9 = 1;
  }
  return OUTLINED_FUNCTION_62_0(v8, v9);
}

uint64_t (*sub_24991241C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.flags.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_249912480(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.absolute.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_2499124E4(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.accelerated.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_249912548(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.builtin.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_2499125AC(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.centerOrigin.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_249912610(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.collection.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_249912674(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.interpolated.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_2499126D8(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.pixelUnits.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_24991273C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.repeat.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_2499127A4(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.phase.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_249912808(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.momentum.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_24991286C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.sender.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

uint64_t (*sub_2499128D0(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.time.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249910310;
}

void sub_249912938()
{
  IOHIDEventRef.__bridgedValue.getter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24991295C(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  int v4;

  HIDEventProtocol.flags.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24991298C(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.flags.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_2499129B8(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.absolute.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4 & 1;
}

void sub_2499129EC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.absolute.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912A18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.accelerated.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912A4C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.accelerated.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912A78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.builtin.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912AAC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.builtin.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912AD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.centerOrigin.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912B0C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.centerOrigin.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912B38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.collection.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912B6C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.collection.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912B98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.interpolated.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912BCC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.interpolated.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_249912BF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.pixelUnits.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_249912C2C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.pixelUnits.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_249912C58(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.repeat.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4 & 1;
}

void sub_249912C8C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.repeat.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_249912CB8(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.phase.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249912CE8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.phase.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_249912D14(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.momentum.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249912D44(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.momentum.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_249912D70(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  HIDEventProtocol.sender.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249912DA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.sender.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_249912DCC(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  HIDEventProtocol.time.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_249912DFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.time.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

id sub_249912E28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id result;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21[2];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v18 = a1;
  v8 = sub_24991448C(v18, (uint64_t)&type metadata for ScrollEvent, (uint64_t)&protocol witness table for ScrollEvent, v3, v4, v5, v6, v7);

  if ((v8 & 1) != 0)
  {
    *(_QWORD *)(a2 + 24) = &type metadata for ScrollEvent;
    *(_QWORD *)(a2 + 32) = &protocol witness table for ScrollEvent;
    *(_QWORD *)a2 = v18;
    return v18;
  }
  else
  {
    v10 = objc_msgSend(v18, sel_children);
    if (v10)
    {
      v11 = v10;
      sub_2498CF944();
      v12 = sub_249955934();

      v13 = sub_249911FA4(v12, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D6870, (uint64_t (*)(uint64_t, unint64_t))sub_2498CF710);
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = MEMORY[0x24BEE4AF8];
    }
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + 32;
      while (1)
      {
        sub_2498CF8CC(v15, (uint64_t)v22);
        v16 = v23;
        v17 = v24;
        __swift_project_boxed_opaque_existential_1(v22, v23);
        HIDEventProtocol.first(where:)(sub_24991336C, 0, v16, v17, (uint64_t *)&v19);
        if (v20)
          break;
        sub_2498CF980((uint64_t)&v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        v15 += 40;
        if (!--v14)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      sub_2498CF9C0(&v19, (uint64_t)v21);
      sub_2498CF9C0(v21, a2);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
LABEL_10:
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

id sub_249912FE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id result;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21[2];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v18 = a1;
  v8 = sub_24991448C(v18, (uint64_t)&type metadata for PointerEvent, (uint64_t)&protocol witness table for PointerEvent, v3, v4, v5, v6, v7);

  if ((v8 & 1) != 0)
  {
    *(_QWORD *)(a2 + 24) = &type metadata for PointerEvent;
    *(_QWORD *)(a2 + 32) = &protocol witness table for PointerEvent;
    *(_QWORD *)a2 = v18;
    return v18;
  }
  else
  {
    v10 = objc_msgSend(v18, sel_children);
    if (v10)
    {
      v11 = v10;
      sub_2498CF944();
      v12 = sub_249955934();

      v13 = sub_249911FA4(v12, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2498D6870, (uint64_t (*)(uint64_t, unint64_t))sub_2498CF710);
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = MEMORY[0x24BEE4AF8];
    }
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + 32;
      while (1)
      {
        sub_2498CF8CC(v15, (uint64_t)v22);
        v16 = v23;
        v17 = v24;
        __swift_project_boxed_opaque_existential_1(v22, v23);
        HIDEventProtocol.first(where:)(sub_24991340C, 0, v16, v17, (uint64_t *)&v19);
        if (v20)
          break;
        sub_2498CF980((uint64_t)&v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        v15 += 40;
        if (!--v14)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      sub_2498CF9C0(&v19, (uint64_t)v21);
      sub_2498CF9C0(v21, a2);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
LABEL_10:
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

void HIDEventProtocol.first(where:)(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49[2];
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;

  v6 = v5;
  v51 = a3;
  v52 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16);
  v13(boxed_opaque_existential_1, v5, a3);
  v14 = a1(v50);
  v15 = v14;
  OUTLINED_FUNCTION_84_0(v14, v16, v17, v18, v19, v20, v21, v22, v45, v47, *((uint64_t *)&v47 + 1));
  if ((v15 & 1) != 0)
  {
    a5[3] = a3;
    a5[4] = a4;
    v23 = __swift_allocate_boxed_opaque_existential_1(a5);
    v13(v23, v6, a3);
  }
  else
  {
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = v24 + 32;
      while (1)
      {
        sub_2498CF8CC(v26, (uint64_t)v50);
        v27 = v51;
        v28 = v52;
        __swift_project_boxed_opaque_existential_1(v50, v51);
        HIDEventProtocol.first(where:)(&v47, a1, a2, v27, v28);
        if (v48)
          break;
        v29 = sub_2498CF980((uint64_t)&v47);
        OUTLINED_FUNCTION_84_0(v29, v30, v31, v32, v33, v34, v35, v36, v46, v47, *((uint64_t *)&v47 + 1));
        v26 += 40;
        if (!--v25)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      sub_2498CF9C0(&v47, (uint64_t)v49);
      v37 = sub_2498CF9C0(v49, (uint64_t)a5);
      OUTLINED_FUNCTION_84_0(v37, v38, v39, v40, v41, v42, v43, v44, v46, v47, *((uint64_t *)&v47 + 1));
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_3();
    }
  }
}

BOOL sub_2499132F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  return (_DWORD)v7 == (*(unsigned int (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
}

BOOL sub_249913360(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2499132F0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24991336C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  sub_2498CF8CC((uint64_t)a1, (uint64_t)v9);
  if (v4 == 6)
  {
    v5 = v10;
    v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  }
  else
  {
    v7 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_24991340C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  sub_2498CF8CC((uint64_t)a1, (uint64_t)v9);
  if (v4 == 17)
  {
    v5 = v10;
    v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  }
  else
  {
    v7 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_2499134AC(_QWORD *a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  _BYTE v16[40];

  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a5, a7);
  sub_2498CF8CC((uint64_t)a1, (uint64_t)v16);
  if ((_DWORD)v11 == v13)
    v14 = a2(v16);
  else
    v14 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v14 & 1;
}

uint64_t IOHIDEventRef.eventType.getter()
{
  return IOHIDEventGetType();
}

uint64_t sub_249913580()
{
  return IOHIDEventRef.eventType.getter();
}

void sub_2499135A0()
{
  IOHIDEventRef.wrappedValue.getter();
  OUTLINED_FUNCTION_6_0();
}

void UInt32.stringValue.getter()
{
  id v0;

  v0 = (id)IOHIDEventTypeGetName();
  sub_249955844();

  OUTLINED_FUNCTION_18_3();
}

Swift::Void __swiftcall HIDEventProtocol.addRemoteTimestamp(_:)(Swift::UInt64 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[7];
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_15_7();
  v6 = v1;
  v7 = v3;
  v5[0] = *MEMORY[0x24BDAC8D0];
  if (v2)
  {
    v4 = v2;
    sub_2498D3100((uint64_t)&v4, (uint64_t)v5);
    HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
    OUTLINED_FUNCTION_98_0();
  }
  OUTLINED_FUNCTION_0_12();
}

uint64_t HIDEventProtocol.addRemoteTimestampChildEvent(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  _QWORD v8[5];

  OUTLINED_FUNCTION_57_2();
  sub_2498CAC78(v2, v3);
  v4 = mach_absolute_time();
  sub_2498D2E30(v4, 16973568, 0, v1, v0);
  v8[3] = &type metadata for VendorDefinedEvent;
  v8[4] = &protocol witness table for VendorDefinedEvent;
  v8[0] = v5;
  OUTLINED_FUNCTION_40_4();
  v6();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t Sequence<>.addRemoteTimestamp(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_0();
  v8 = v7 - v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (a1)
  {
    v13 = a1;
    sub_2498D3100((uint64_t)&v13, (uint64_t)v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v2, a2);
    sub_2499558E0();
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_249955AE4();
      if (!v16)
        break;
      sub_2498CF9C0(&v15, (uint64_t)v14);
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    v11 = OUTLINED_FUNCTION_47_3();
    v12(v11);
    return OUTLINED_FUNCTION_98_0();
  }
  return result;
}

void sub_2499138D0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE21C(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499138F0()
{
  return sub_24990F864();
}

uint64_t sub_2499138F8()
{
  return sub_24990F8F8();
}

void sub_249913900(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE040(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

#error "249913934: call analysis failed (funcsize=8)"

void sub_249913940(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CE10(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913960(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE150(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913980()
{
  return sub_24990F86C();
}

uint64_t sub_249913988()
{
  return sub_24990F8F0();
}

void sub_249913990(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE084(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499139B0()
{
  return sub_24990F874();
}

uint64_t sub_2499139B8()
{
  return sub_24990F8E8();
}

void sub_2499139C0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CE48(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499139E0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE194(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913A00()
{
  return sub_24990F87C();
}

uint64_t sub_249913A08()
{
  return sub_2498CB218();
}

void sub_249913A10(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CE80(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913A30(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CDFFC(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913A50()
{
  void **v0;

  sub_24990F768(*v0);
}

uint64_t sub_249913A68()
{
  return sub_24990F884();
}

uint64_t sub_249913A70()
{
  return sub_2498CB228();
}

uint64_t sub_249913A78()
{
  _QWORD *v0;

  return j__IOHIDEventGetEventFlags(*v0);
}

uint64_t sub_249913A80()
{
  return sub_24990F964();
}

void sub_249913A88(_QWORD *a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913AB0()
{
  return IOHIDEventSetEventFlags();
}

BOOL sub_249913AC0()
{
  return sub_24990FA1C();
}

uint64_t sub_249913AC8()
{
  return sub_24990FA44();
}

void sub_249913AE0(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_3_18(a1);
  OUTLINED_FUNCTION_2_18(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913B08(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FA44();
}

uint64_t sub_249913B20()
{
  return sub_24990FB00();
}

uint64_t sub_249913B28()
{
  return sub_24990FB30();
}

void sub_249913B40(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_30_5(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913B68(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FB30();
}

uint64_t sub_249913B80()
{
  return sub_24990FBFC();
}

uint64_t sub_249913B88()
{
  return sub_24990FC2C();
}

void sub_249913BA0(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_29_6(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913BC8(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FC2C();
}

uint64_t sub_249913BE0()
{
  return sub_24990FCF8();
}

uint64_t sub_249913BE8()
{
  return sub_24990FD28();
}

void sub_249913C00(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_28_7(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913C28(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FD28();
}

uint64_t sub_249913C40()
{
  return sub_24990FDF4();
}

uint64_t sub_249913C48()
{
  return sub_24990FE24();
}

void sub_249913C60(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_31_4(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913C88(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FE24();
}

uint64_t sub_249913CA0()
{
  return sub_24990FEF0();
}

uint64_t sub_249913CA8()
{
  return sub_24990FF20();
}

void sub_249913CC0(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_27_10(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913CE8(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24990FF20();
}

uint64_t sub_249913D00()
{
  return sub_24990FFEC();
}

uint64_t sub_249913D08()
{
  return sub_24991001C();
}

void sub_249913D20(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_0_21(a1);
  OUTLINED_FUNCTION_26_9(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913D48(uint64_t a1)
{
  OUTLINED_FUNCTION_53_2(a1);
  return sub_24991001C();
}

BOOL sub_249913D60()
{
  return sub_2499100E8();
}

uint64_t sub_249913D68(uint64_t result)
{
  return sub_249910144(result);
}

void sub_249913D70(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_7_20(a1);
  OUTLINED_FUNCTION_2_18(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913D98(uint64_t result)
{
  if (*(_BYTE *)(result + 8) == 1)
    return IOHIDEventSetRepeat();
  return result;
}

void sub_249913DB0()
{
  sub_249910200();
}

uint64_t sub_249913DC8()
{
  return sub_2498CE6BC();
}

uint64_t sub_249913DD0()
{
  return sub_2499102A0();
}

void sub_249913DD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_12_16();
  v2 = OUTLINED_FUNCTION_14_14((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_249910350(v2, v3);
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_249913E08()
{
  return sub_24990AA54();
}

uint64_t sub_249913E10()
{
  return sub_249910414();
}

void sub_249913E18(_QWORD *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = OUTLINED_FUNCTION_4_14(a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913E40()
{
  return IOHIDEventSetScrollMomentum();
}

uint64_t sub_249913E50()
{
  _QWORD *v0;

  return j__IOHIDEventGetSenderID(*v0);
}

uint64_t sub_249913E58()
{
  return sub_2499104F0();
}

void sub_249913E60(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_5_15(a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913E88()
{
  return IOHIDEventSetSenderID();
}

uint64_t sub_249913E94()
{
  _QWORD *v0;

  return j__IOHIDEventGetTimeStamp(*v0);
}

uint64_t sub_249913E9C()
{
  return sub_2499105AC();
}

void sub_249913EA4(uint64_t a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_6_19(a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913ECC()
{
  return IOHIDEventSetTimeStamp();
}

#error "249913EEC: call analysis failed (funcsize=8)"

void sub_249913EF8()
{
  sub_249910768();
}

void sub_249913F10(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CEB8(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913F30(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE1D8(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913F50()
{
  return sub_24990F88C();
}

uint64_t sub_249913F58()
{
  return sub_249904830();
}

void sub_249913F60(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CEF0(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913F80(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE370(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913FA0()
{
  return sub_24990F894();
}

uint64_t sub_249913FA8()
{
  return sub_24990F908();
}

void sub_249913FB0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_24991CF28(a1);
  *a2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249913FD0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE260(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249913FF0()
{
  return sub_24990F89C();
}

uint64_t sub_249913FF8()
{
  return sub_24990F900();
}

void sub_249914000(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE3F8(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249914020()
{
  return sub_24990F8A4();
}

uint64_t sub_249914028()
{
  return sub_24990F910();
}

uint64_t sub_249914030(_QWORD *a1)
{
  uint64_t v1;

  return sub_2499134AC(a1, *(uint64_t (**)(_BYTE *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t dispatch thunk of HIDEventProtocol.children.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDEventProtocol.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of HIDEventProtocol.parent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of HIDEventProtocol.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of HIDEventProtocol.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of HIDEventProtocol.first(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(_wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void sub_2499142D8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_2498CE3B4(a1, a2);
  *a3 = v4;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499142F8()
{
  return sub_24990F8AC();
}

void sub_249914300(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_24991432C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_100_0();
  v8 = v2;
  v9 = v3;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v7);
  OUTLINED_FUNCTION_40_4();
  v4();
  v5 = *v0;
  *(_QWORD *)(v5 + 16) = v1 + 1;
  return sub_2498CF9C0(&v7, v5 + 40 * v1 + 32);
}

void sub_249914394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v10;
  void (*v11)(uint64_t);
  id v12;
  id v13;
  uint64_t v14;

  OUTLINED_FUNCTION_15_7();
  v11 = *(void (**)(uint64_t))(v10 + 352);
  v13 = v12;
  v14 = OUTLINED_FUNCTION_47_3();
  v11(v14);
  OUTLINED_FUNCTION_92_0();
  IOHIDEventAppendEvent();

  OUTLINED_FUNCTION_42_3(a10);
}

uint64_t sub_2499143E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_0();
  v8 = v7 - v6;
  (*(void (**)(uint64_t))(v5 + 32))(v7 - v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3) == 17)
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 352))(a2, a3);
  else
    v9 = 0;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, a2);
  return v9;
}

uint64_t sub_24991448C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v15[3] = a2;
  v15[4] = a3;
  OUTLINED_FUNCTION_87_0((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v12[0], v12[1], v12[2], v13, v14, (char)a1);
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v9 = a1;
  v10 = (IOHIDEventGetEventFlags() >> 16) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v10;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_21(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  return IOHIDEventGetEventFlags();
}

uint64_t OUTLINED_FUNCTION_2_18(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (_DWORD)result != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_18(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  return IOHIDEventIsAbsolute();
}

uint64_t OUTLINED_FUNCTION_4_14(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  return IOHIDEventGetScrollMomentum();
}

uint64_t OUTLINED_FUNCTION_5_15(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 8) = *v1;
  return IOHIDEventGetSenderID();
}

uint64_t OUTLINED_FUNCTION_6_19(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 8) = *v1;
  return IOHIDEventGetTimeStamp();
}

uint64_t OUTLINED_FUNCTION_7_20(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  return IOHIDEventIsRepeat();
}

void OUTLINED_FUNCTION_10_13(uint64_t a1, uint64_t a2, uint64_t a3)
{
  HIDEventProtocol.flags.setter(a1, a2, a3);
}

void OUTLINED_FUNCTION_11_15(uint64_t a1, uint64_t a2, uint64_t a3)
{
  HIDEventProtocol.flags.getter(a2, a3);
}

void *OUTLINED_FUNCTION_12_16()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_13_14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
}

uint64_t OUTLINED_FUNCTION_14_14(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_13(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_18_14()
{
  return IOHIDEventSetEventFlags();
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  Swift::Int v0;

  return HIDReport.mask(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return IOHIDEventGetEventFlags();
}

uint64_t OUTLINED_FUNCTION_22_10(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t OUTLINED_FUNCTION_23_8(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_24_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 352))(a2, a3);
}

uint64_t OUTLINED_FUNCTION_26_9(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (result & 4) != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_10(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (result & 0x20) != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_7(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (result & 8) != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_6(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (result & 0x10) != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_5(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = BYTE2(result) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_31_4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = (result & 2) != 0;
  return result;
}

void OUTLINED_FUNCTION_32_5(id a1)
{

}

uint64_t OUTLINED_FUNCTION_34_4@<X0>(int a1@<W8>)
{
  unsigned int v1;

  return a1 | v1;
}

uint64_t OUTLINED_FUNCTION_35_3(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_36_4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

id OUTLINED_FUNCTION_37_3()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_38_4()
{
  sub_249910A5C();
}

void OUTLINED_FUNCTION_41_3(int a1@<W8>)
{
  _DWORD *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_42_3(id a1)
{

}

uint64_t OUTLINED_FUNCTION_43_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

double OUTLINED_FUNCTION_44_3()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_45_2(uint64_t a1, unint64_t a2)
{
  return sub_2498CAC78(a1, a2);
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_47_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  uint64_t v0;

  return sub_2498CAC78(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_52_2(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t OUTLINED_FUNCTION_53_2(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_54_3(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

uint64_t OUTLINED_FUNCTION_55_3(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_60_0(uint64_t a1, unint64_t a2)
{
  return sub_2498CAC78(a1, a2);
}

uint64_t OUTLINED_FUNCTION_62_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_63_0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 352))(v0, v1);
}

void OUTLINED_FUNCTION_68_0()
{
  JUMPOUT(0x24BCFA854);
}

void OUTLINED_FUNCTION_69_0(char a1)
{
  unint64_t v1;
  uint64_t v2;

  sub_2498C8F2C(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
}

void OUTLINED_FUNCTION_72_0(char a1@<W8>)
{
  _BYTE *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_73_0(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_74()
{
  type metadata accessor for IOHIDEvent(0);
}

uint64_t OUTLINED_FUNCTION_75_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(v38, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void OUTLINED_FUNCTION_79_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_81_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = result;
  v2[4] = a2;
  *v2 = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return ConsumerReport.update(with:)();
}

uint64_t OUTLINED_FUNCTION_84_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_85_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

void OUTLINED_FUNCTION_86_0()
{
  AppleVendorTopCaseReport.update(with:)();
}

uint64_t OUTLINED_FUNCTION_87_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return sub_2498CF8CC((uint64_t)&a14, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return sub_249955934();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_93_0()
{
  return sub_2498CF944();
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CAC78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

void OUTLINED_FUNCTION_101_0(char a1)
{
  uint64_t v1;
  unint64_t v2;

  sub_2498C8F2C(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return sub_24995561C();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_249914AD0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11)
  {
    v8 = a2;
    v9 = a1;
    v10 = v11 & ~(v11 >> 63);
    sub_2498D5FEC(0, v10, 0);
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (qword_2578A07B8 != -1)
        goto LABEL_13;
      while (1)
      {
        if (v8 >= v9)
        {
          if (v10)
            __asm { BR              X10 }
          __break(1u);
          JUMPOUT(0x249914CB8);
        }
LABEL_12:
        __break(1u);
LABEL_13:
        swift_once();
      }
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_14_15(a1, a2, a3, a4, a5, a6, a7, a8, v13, v14, v15, a4);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_249914D04(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return ((uint64_t (*)(void))((char *)&loc_249914D14 + *((int *)qword_249914D80 + (a3 >> 62))))();
}

BOOL sub_249914D24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
    JUMPOUT(0x249914D78);
  }
  if (__OFADD__(v0, 8))
    goto LABEL_5;
  return v0 + 8 <= 8 * v1;
}

void DigitizerReport.scrollCollection.setter(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v5 = *v2;
  v6 = v2[1];
  *(_QWORD *)&v15 = v5;
  *((_QWORD *)&v15 + 1) = v6;
  sub_2498CAC78(v5, v6);
  DigitizerReport.contactRange(forIndex:)(5, v5, v6);
  v8 = v7;
  if (qword_2578A07A0 != -1)
    swift_once();
  v9 = v8 + (qword_2578A1B48 >> 3);
  if (__OFADD__(v8, qword_2578A1B48 >> 3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 < v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >> 60 != 15)
  {
    sub_2498CAC78(a1, a2);
    sub_249917678(a1, a2);
    OUTLINED_FUNCTION_19_13();
    OUTLINED_FUNCTION_19_13();
    goto LABEL_9;
  }
  if (!__OFSUB__(v9, v8))
  {
    v13 = MEMORY[0x24BCFA86C](qword_2578A1B48 >> 3);
    v14 = v10;
    sub_249923708((uint64_t)&v13);
    v11 = v13;
    v12 = v14;
    sub_249917678(v13, v14);
    sub_2498CACBC(v11, v12);
LABEL_9:
    sub_2498CACBC(v5, v6);
    *(_OWORD *)v2 = v15;
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t DigitizerContact.index.getter()
{
  char v0;

  OUTLINED_FUNCTION_17_13();
  return v0 & 0x1F;
}

#error "249914F14: call analysis failed (funcsize=22)"

void DigitizerContact.range.getter(uint64_t a1, uint64_t a2)
{
  HIDReport.subscript.getter(7, a1, a2);
}

void DigitizerContact.touch.getter(uint64_t a1, uint64_t a2)
{
  HIDReport.subscript.getter(6, a1, a2);
}

void DigitizerContact.resting.getter(uint64_t a1, uint64_t a2)
{
  HIDReport.subscript.getter(5, a1, a2);
}

uint64_t DigitizerReport.contacts.getter()
{
  unint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_10_14();
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v3 = v2;
  OUTLINED_FUNCTION_0_4();
  return sub_249914AD0(0, v3, v1, v0, (uint64_t)&v8, v4, v5, v6);
}

Swift::UInt8_optional __swiftcall DigitizerReport.contactIdentity(atIndex:)(Swift::Int atIndex)
{
  if (!__OFADD__(8 * atIndex, 320))
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x2499150A0);
}

void DigitizerReport.scrollCollection.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_28_6(a1, a2);
  DigitizerReport.contactRange(forIndex:)(5, v3, v2);
  v6 = v5;
  if (qword_2578A07A0 != -1)
    swift_once();
  if (__OFADD__(v6, qword_2578A1B48 >> 3))
  {
    __break(1u);
  }
  else if (v6 + (qword_2578A1B48 >> 3) >= v6)
  {
    OUTLINED_FUNCTION_21_12();
    OUTLINED_FUNCTION_8_14();
    OUTLINED_FUNCTION_5_16(v6, v4);
    return;
  }
  __break(1u);
}

uint64_t static DigitizerReport.initialReportBitCount.getter()
{
  return 320;
}

uint64_t static DigitizerReport.reportID.getter()
{
  return 9;
}

uint64_t sub_24991515C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_24991517C();
  *(_QWORD *)&xmmword_2578A1C90 = result;
  *((_QWORD *)&xmmword_2578A1C90 + 1) = v1;
  return result;
}

uint64_t sub_24991517C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 1);
  v13 = v0;
  v14 = v1;
  v2 = sub_249915284();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4B10);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for ApplicationCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_249915284()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  _QWORD v98[2];
  char v99;
  _QWORD v100[2];
  char v101;
  _QWORD v102[2];
  _BYTE v103[5];
  _QWORD v104[3];

  LOBYTE(v104[0]) = 5;
  sub_2498FCA34((uint64_t)v104, 0xDuLL);
  v71 = v0;
  v69 = v1;
  LOBYTE(v104[0]) = 17;
  sub_2498FCA34((uint64_t)v104, 0x54uLL);
  v70 = v2;
  v97 = v3;
  LOBYTE(v104[0]) = 7;
  sub_2498FC7A0((uint64_t)v104, 5);
  v95 = v5;
  v96 = v4;
  LOBYTE(v104[0]) = 12;
  sub_2498FCA34((uint64_t)v104, 8uLL);
  v93 = v7;
  v94 = v6;
  LOBYTE(v104[0]) = 14;
  sub_2498FC7A0((uint64_t)v104, 1);
  v91 = v9;
  v92 = v8;
  LOBYTE(v102[0]) = 0;
  LOBYTE(v100[0]) = 1;
  LOBYTE(v98[0]) = 0;
  *(_WORD *)&v103[3] = 0;
  *(_WORD *)&v103[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v102, v100, v98, &v103[4], &v103[3], &v103[2], &v103[1], v104);
  LOBYTE(v102[0]) = 17;
  sub_2498FCA34((uint64_t)v102, 0x55uLL);
  v89 = v11;
  v90 = v10;
  LOBYTE(v102[0]) = 7;
  sub_2498FC7A0((uint64_t)v102, 5);
  v87 = v13;
  v88 = v12;
  LOBYTE(v102[0]) = 12;
  sub_2498FCA34((uint64_t)v102, 8uLL);
  v85 = v15;
  v86 = v14;
  LOBYTE(v102[0]) = 14;
  sub_2498FC7A0((uint64_t)v102, 1);
  v83 = v17;
  v84 = v16;
  LOBYTE(v100[0]) = 0;
  LOBYTE(v98[0]) = 1;
  memset(v103, 0, sizeof(v103));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v100, v98, &v103[4], &v103[3], &v103[2], &v103[1], v103, v102);
  LOBYTE(v100[0]) = 17;
  sub_2498FCA34((uint64_t)v100, 0x22uLL);
  v81 = v19;
  v82 = v18;
  if (qword_2578A07C0 != -1)
    swift_once();
  v21 = qword_2578A1CA8;
  v20 = qword_2578A1CB0;
  sub_2498CAC78(qword_2578A1CA8, qword_2578A1CB0);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  sub_2498CAC78(v21, v20);
  if (qword_2578A07A8 != -1)
    swift_once();
  v22 = qword_2578A1B50;
  v23 = *(_QWORD *)algn_2578A1B58;
  LOBYTE(v100[0]) = 5;
  sub_2498CAC78(qword_2578A1B50, *(unint64_t *)algn_2578A1B58);
  sub_2498CAC78(v22, v23);
  sub_2498FCA34((uint64_t)v100, 0xFF1AuLL);
  v67 = v24;
  v68 = v25;
  LOBYTE(v100[0]) = 17;
  sub_2498FCA34((uint64_t)v100, 0xE0F4uLL);
  v27 = v26;
  v66 = v28;
  LOBYTE(v100[0]) = 12;
  sub_2498FCA34((uint64_t)v100, 8uLL);
  v61 = v30;
  v62 = v29;
  LOBYTE(v100[0]) = 14;
  sub_2498FC7A0((uint64_t)v100, 5);
  v80 = v31;
  v72 = v32;
  LOBYTE(v98[0]) = 0;
  v103[4] = 1;
  *(_WORD *)&v103[2] = 0;
  *(_WORD *)v103 = 0;
  v101 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v98, &v103[4], &v103[3], &v103[2], &v103[1], v103, &v101, v100);
  LOBYTE(v98[0]) = 5;
  sub_2498FCA34((uint64_t)v98, 0xFF00uLL);
  v78 = v34;
  v79 = v33;
  LOBYTE(v98[0]) = 17;
  sub_2498FCA34((uint64_t)v98, 0x102uLL);
  v76 = v36;
  v77 = v35;
  LOBYTE(v98[0]) = 6;
  sub_2498FC7A0((uint64_t)v98, 0);
  v74 = v38;
  v75 = v37;
  LOBYTE(v98[0]) = 7;
  sub_2498FC7A0((uint64_t)v98, 255);
  v73 = v39;
  v65 = v40;
  LOBYTE(v98[0]) = 12;
  sub_2498FCA34((uint64_t)v98, 8uLL);
  v63 = v42;
  v64 = v41;
  LOBYTE(v98[0]) = 14;
  sub_2498FC7A0((uint64_t)v98, 8);
  v59 = v44;
  v60 = v43;
  *(_WORD *)&v103[3] = 1;
  *(_WORD *)&v103[1] = 0;
  v103[0] = 0;
  v101 = 0;
  v99 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v103[4], &v103[3], &v103[2], &v103[1], v103, &v101, &v99, v98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_24995A370;
  *(_QWORD *)(v45 + 56) = &type metadata for ReportID;
  *(_QWORD *)(v45 + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(v45 + 32) = 9;
  *(_QWORD *)(v45 + 96) = &type metadata for UsagePage;
  *(_QWORD *)(v45 + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(v45 + 72) = v71;
  *(_QWORD *)(v45 + 80) = v69;
  *(_QWORD *)(v45 + 136) = &type metadata for Usage;
  *(_QWORD *)(v45 + 144) = &protocol witness table for Usage;
  *(_QWORD *)(v45 + 112) = v70;
  *(_QWORD *)(v45 + 120) = v97;
  *(_QWORD *)(v45 + 176) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v45 + 184) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v45 + 152) = v96;
  *(_QWORD *)(v45 + 160) = v95;
  *(_QWORD *)(v45 + 576) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 616) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 656) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 696) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 736) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 776) = &type metadata for HIDReportDescriptor;
  *(_QWORD *)(v45 + 584) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 624) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 664) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 704) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 744) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 784) = &protocol witness table for HIDReportDescriptor;
  *(_QWORD *)(v45 + 216) = &type metadata for ReportSize;
  *(_QWORD *)(v45 + 224) = &protocol witness table for ReportSize;
  *(_QWORD *)(v45 + 192) = v94;
  *(_QWORD *)(v45 + 200) = v93;
  *(_QWORD *)(v45 + 816) = &type metadata for UsagePage;
  *(_QWORD *)(v45 + 1016) = &type metadata for UsagePage;
  *(_QWORD *)(v45 + 824) = &protocol witness table for UsagePage;
  *(_QWORD *)(v45 + 1024) = &protocol witness table for UsagePage;
  *(_QWORD *)(v45 + 256) = &type metadata for ReportCount;
  *(_QWORD *)(v45 + 264) = &protocol witness table for ReportCount;
  *(_QWORD *)(v45 + 232) = v92;
  *(_QWORD *)(v45 + 240) = v91;
  *(_QWORD *)(v45 + 336) = &type metadata for Usage;
  *(_QWORD *)(v45 + 344) = &protocol witness table for Usage;
  *(_QWORD *)(v45 + 536) = &type metadata for Usage;
  *(_QWORD *)(v45 + 544) = &protocol witness table for Usage;
  *(_QWORD *)(v45 + 856) = &type metadata for Usage;
  *(_QWORD *)(v45 + 864) = &protocol witness table for Usage;
  *(_QWORD *)(v45 + 1056) = &type metadata for Usage;
  *(_QWORD *)(v45 + 1064) = &protocol witness table for Usage;
  *(_QWORD *)(v45 + 1096) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v45 + 1104) = &protocol witness table for LogicalMinimum;
  v57 = v104[0];
  v46 = v104[0];
  v58 = v104[1];
  *(_QWORD *)(v45 + 1136) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v45 + 376) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v45 + 384) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v45 + 1144) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v45 + 296) = &type metadata for Input;
  *(_QWORD *)(v45 + 304) = &protocol witness table for Input;
  *(_QWORD *)(v45 + 272) = v46;
  *(_QWORD *)(v45 + 280) = v58;
  *(_QWORD *)(v45 + 312) = v90;
  *(_QWORD *)(v45 + 320) = v89;
  *(_QWORD *)(v45 + 352) = v88;
  *(_QWORD *)(v45 + 360) = v87;
  *(_QWORD *)(v45 + 416) = &type metadata for ReportSize;
  *(_QWORD *)(v45 + 424) = &protocol witness table for ReportSize;
  *(_QWORD *)(v45 + 392) = v86;
  *(_QWORD *)(v45 + 400) = v85;
  *(_QWORD *)(v45 + 456) = &type metadata for ReportCount;
  *(_QWORD *)(v45 + 464) = &protocol witness table for ReportCount;
  *(_QWORD *)(v45 + 432) = v84;
  *(_QWORD *)(v45 + 440) = v83;
  *(_QWORD *)(v45 + 896) = &type metadata for ReportSize;
  *(_QWORD *)(v45 + 904) = &protocol witness table for ReportSize;
  *(_QWORD *)(v45 + 1176) = &type metadata for ReportSize;
  *(_QWORD *)(v45 + 1184) = &protocol witness table for ReportSize;
  v55 = v102[0];
  v47 = v102[0];
  v56 = v102[1];
  *(_QWORD *)(v45 + 496) = &type metadata for Input;
  *(_QWORD *)(v45 + 504) = &protocol witness table for Input;
  *(_QWORD *)(v45 + 472) = v47;
  *(_QWORD *)(v45 + 480) = v56;
  *(_QWORD *)(v45 + 512) = v82;
  *(_QWORD *)(v45 + 520) = v81;
  *(_QWORD *)(v45 + 552) = v21;
  *(_QWORD *)(v45 + 560) = v20;
  *(_QWORD *)(v45 + 592) = v21;
  *(_QWORD *)(v45 + 600) = v20;
  *(_QWORD *)(v45 + 632) = v21;
  *(_QWORD *)(v45 + 640) = v20;
  *(_QWORD *)(v45 + 672) = v21;
  *(_QWORD *)(v45 + 680) = v20;
  *(_QWORD *)(v45 + 712) = v21;
  *(_QWORD *)(v45 + 720) = v20;
  *(_QWORD *)(v45 + 752) = v22;
  *(_QWORD *)(v45 + 760) = v23;
  *(_QWORD *)(v45 + 792) = v67;
  *(_QWORD *)(v45 + 800) = v68;
  *(_QWORD *)(v45 + 832) = v27;
  *(_QWORD *)(v45 + 840) = v66;
  *(_QWORD *)(v45 + 872) = v62;
  *(_QWORD *)(v45 + 880) = v61;
  *(_QWORD *)(v45 + 936) = &type metadata for ReportCount;
  *(_QWORD *)(v45 + 944) = &protocol witness table for ReportCount;
  *(_QWORD *)(v45 + 912) = v80;
  *(_QWORD *)(v45 + 920) = v72;
  *(_QWORD *)(v45 + 1216) = &type metadata for ReportCount;
  *(_QWORD *)(v45 + 1224) = &protocol witness table for ReportCount;
  v53 = v100[0];
  v48 = v100[0];
  v54 = v100[1];
  *(_QWORD *)(v45 + 976) = &type metadata for Input;
  *(_QWORD *)(v45 + 984) = &protocol witness table for Input;
  *(_QWORD *)(v45 + 952) = v48;
  *(_QWORD *)(v45 + 960) = v54;
  *(_QWORD *)(v45 + 992) = v79;
  *(_QWORD *)(v45 + 1000) = v78;
  *(_QWORD *)(v45 + 1032) = v77;
  *(_QWORD *)(v45 + 1040) = v76;
  *(_QWORD *)(v45 + 1072) = v75;
  *(_QWORD *)(v45 + 1080) = v74;
  *(_QWORD *)(v45 + 1112) = v73;
  *(_QWORD *)(v45 + 1120) = v65;
  *(_QWORD *)(v45 + 1152) = v64;
  *(_QWORD *)(v45 + 1160) = v63;
  *(_QWORD *)(v45 + 1192) = v60;
  *(_QWORD *)(v45 + 1200) = v59;
  *(_QWORD *)(v45 + 1256) = &type metadata for Input;
  *(_QWORD *)(v45 + 1264) = &protocol witness table for Input;
  v50 = v98[0];
  v51 = v98[1];
  *(_QWORD *)(v45 + 1232) = v98[0];
  *(_QWORD *)(v45 + 1240) = v51;
  sub_2498CAC78(v71, v69);
  sub_2498CAC78(v70, v97);
  sub_2498CAC78(v96, v95);
  sub_2498CAC78(v94, v93);
  sub_2498CAC78(v92, v91);
  sub_2498CAC78(v57, v58);
  sub_2498CAC78(v90, v89);
  sub_2498CAC78(v88, v87);
  sub_2498CAC78(v86, v85);
  sub_2498CAC78(v84, v83);
  sub_2498CAC78(v55, v56);
  sub_2498CAC78(v82, v81);
  sub_2498CAC78(v67, v68);
  sub_2498CAC78(v27, v66);
  sub_2498CAC78(v62, v61);
  sub_2498CAC78(v80, v72);
  sub_2498CAC78(v53, v54);
  sub_2498CAC78(v79, v78);
  sub_2498CAC78(v77, v76);
  sub_2498CAC78(v75, v74);
  sub_2498CAC78(v73, v65);
  sub_2498CAC78(v64, v63);
  sub_2498CAC78(v60, v59);
  sub_2498CAC78(v50, v51);
  v52 = static HIDReportDescriptor.Builder.buildBlock(_:)(v45);
  sub_2498CACBC(v22, v23);
  sub_2498CACBC(v21, v20);
  sub_2498CACBC(v21, v20);
  sub_2498CACBC(v21, v20);
  sub_2498CACBC(v21, v20);
  sub_2498CACBC(v21, v20);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v50, v51);
  sub_2498CACBC(v60, v59);
  sub_2498CACBC(v64, v63);
  sub_2498CACBC(v73, v65);
  sub_2498CACBC(v75, v74);
  sub_2498CACBC(v77, v76);
  sub_2498CACBC(v79, v78);
  sub_2498CACBC(v53, v54);
  sub_2498CACBC(v80, v72);
  sub_2498CACBC(v62, v61);
  sub_2498CACBC(v27, v66);
  sub_2498CACBC(v67, v68);
  sub_2498CACBC(v82, v81);
  sub_2498CACBC(v55, v56);
  sub_2498CACBC(v84, v83);
  sub_2498CACBC(v86, v85);
  sub_2498CACBC(v88, v87);
  sub_2498CACBC(v90, v89);
  sub_2498CACBC(v57, v58);
  sub_2498CACBC(v92, v91);
  sub_2498CACBC(v94, v93);
  sub_2498CACBC(v96, v95);
  sub_2498CACBC(v70, v97);
  sub_2498CACBC(v71, v69);
  return v52;
}

uint64_t static DigitizerReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A07B0, (uint64_t)&xmmword_2578A1C90, a1);
}

uint64_t sub_249915C10()
{
  return 320;
}

uint64_t sub_249915C1C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (qword_2578A07C0 != -1)
    swift_once();
  v0 = qword_2578A1CA8;
  v1 = qword_2578A1CB0;
  OUTLINED_FUNCTION_22_4(qword_2578A1CA8);
  HIDReportDescriptor.reportBitCount(for:)();
  v3 = v2;
  result = sub_2498CACBC(v0, v1);
  qword_2578A1CA0 = v3;
  return result;
}

uint64_t static DigitizerContact.bitCount.getter()
{
  if (qword_2578A07B8 != -1)
    swift_once();
  return qword_2578A1CA0;
}

uint64_t sub_249915CE8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249915D08();
  qword_2578A1CA8 = result;
  unk_2578A1CB0 = v1;
  return result;
}

uint64_t sub_249915D08()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  LOBYTE(v13) = 3;
  sub_2498FC7A0((uint64_t)&v13, 2);
  v13 = v0;
  v14 = v1;
  v2 = sub_249915E10();
  v4 = v3;
  sub_24995567C();
  sub_2498CACBC(v2, v4);
  v5 = sub_2498D3060((uint64_t)&unk_251AC4AE8);
  v7 = v6;
  sub_24995567C();
  sub_2498CACBC(v5, v7);
  v8 = v13;
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 56) = &type metadata for LogicalCollection;
  *(_QWORD *)(inited + 64) = &protocol witness table for LogicalCollection;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  sub_2498CAC78(v8, v9);
  v11 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v8, v9);
  return v11;
}

uint64_t sub_249915E10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD v108[2];
  char v109;
  _QWORD v110[2];
  char v111;
  _QWORD v112[2];
  _BYTE v113[5];
  _QWORD v114[3];

  LOBYTE(v114[0]) = 5;
  sub_2498FCA34((uint64_t)v114, 0xDuLL);
  v72 = v1;
  v73 = v0;
  LOBYTE(v114[0]) = 17;
  sub_2498FCA34((uint64_t)v114, 0x51uLL);
  v91 = v3;
  v92 = v2;
  LOBYTE(v114[0]) = 6;
  sub_2498FC7A0((uint64_t)v114, 0);
  v5 = v4;
  v60 = v4;
  v90 = v6;
  LOBYTE(v114[0]) = 7;
  sub_2498FC7A0((uint64_t)v114, 4);
  v8 = v7;
  v59 = v7;
  v10 = v9;
  LOBYTE(v114[0]) = 12;
  sub_2498FCA34((uint64_t)v114, 5uLL);
  v81 = v12;
  v82 = v11;
  LOBYTE(v114[0]) = 14;
  sub_2498FC7A0((uint64_t)v114, 1);
  v79 = v14;
  v80 = v13;
  LOBYTE(v112[0]) = 0;
  LOBYTE(v110[0]) = 1;
  LOBYTE(v108[0]) = 0;
  *(_WORD *)&v113[3] = 0;
  *(_WORD *)&v113[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v112, v110, v108, &v113[4], &v113[3], &v113[2], &v113[1], v114);
  LOBYTE(v112[0]) = 5;
  sub_2498FCA34((uint64_t)v112, 0xFF1AuLL);
  v77 = v16;
  v78 = v15;
  LOBYTE(v112[0]) = 17;
  sub_2498FCA34((uint64_t)v112, 0xE0F2uLL);
  v75 = v18;
  v76 = v17;
  LOBYTE(v112[0]) = 12;
  sub_2498FCA34((uint64_t)v112, 1uLL);
  v74 = v19;
  v107 = v20;
  LOBYTE(v112[0]) = 14;
  sub_2498FC7A0((uint64_t)v112, 1);
  v105 = v22;
  v106 = v21;
  LOBYTE(v110[0]) = 0;
  LOBYTE(v108[0]) = 1;
  memset(v113, 0, sizeof(v113));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v110, v108, &v113[4], &v113[3], &v113[2], &v113[1], v113, v112);
  LOBYTE(v110[0]) = 17;
  sub_2498FCA34((uint64_t)v110, 0x33uLL);
  v103 = v24;
  v104 = v23;
  LOBYTE(v110[0]) = 17;
  sub_2498FCA34((uint64_t)v110, 0x32uLL);
  v101 = v26;
  v102 = v25;
  LOBYTE(v110[0]) = 6;
  sub_2498FC7A0((uint64_t)v110, 0);
  v99 = v28;
  v100 = v27;
  LOBYTE(v110[0]) = 7;
  sub_2498FC7A0((uint64_t)v110, 1);
  v97 = v30;
  v98 = v29;
  LOBYTE(v110[0]) = 12;
  sub_2498FCA34((uint64_t)v110, 1uLL);
  v95 = v32;
  v96 = v31;
  LOBYTE(v110[0]) = 14;
  sub_2498FC7A0((uint64_t)v110, 2);
  v93 = v34;
  v94 = v33;
  LOBYTE(v108[0]) = 0;
  v113[4] = 1;
  *(_WORD *)&v113[2] = 0;
  *(_WORD *)v113 = 0;
  v111 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v108, &v113[4], &v113[3], &v113[2], &v113[1], v113, &v111, v110);
  LOBYTE(v108[0]) = 5;
  sub_2498FCA34((uint64_t)v108, 1uLL);
  v88 = v36;
  v89 = v35;
  LOBYTE(v108[0]) = 17;
  sub_2498FCA34((uint64_t)v108, 0x30uLL);
  v86 = v38;
  v87 = v37;
  LOBYTE(v108[0]) = 17;
  sub_2498FCA34((uint64_t)v108, 0x31uLL);
  v84 = v40;
  v85 = v39;
  LOBYTE(v108[0]) = 6;
  sub_2498FC7A0((uint64_t)v108, 0);
  v71 = v41;
  v83 = v42;
  LOBYTE(v108[0]) = 7;
  sub_2498FC7A0((uint64_t)v108, 0xFFFFLL);
  v69 = v44;
  v70 = v43;
  LOBYTE(v108[0]) = 12;
  sub_2498FCA34((uint64_t)v108, 0x10uLL);
  v67 = v46;
  v68 = v45;
  LOBYTE(v108[0]) = 14;
  sub_2498FC7A0((uint64_t)v108, 2);
  v65 = v48;
  v66 = v47;
  *(_WORD *)&v113[3] = 1;
  *(_WORD *)&v113[1] = 0;
  v113[0] = 0;
  v111 = 0;
  v109 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v113[4], &v113[3], &v113[2], &v113[1], v113, &v111, &v109, v108);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_24995A380;
  *(_QWORD *)(v49 + 56) = &type metadata for UsagePage;
  *(_QWORD *)(v49 + 64) = &protocol witness table for UsagePage;
  *(_QWORD *)(v49 + 32) = v73;
  *(_QWORD *)(v49 + 40) = v72;
  *(_QWORD *)(v49 + 96) = &type metadata for Usage;
  *(_QWORD *)(v49 + 104) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 72) = v92;
  *(_QWORD *)(v49 + 80) = v91;
  *(_QWORD *)(v49 + 136) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v49 + 144) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(v49 + 112) = v5;
  *(_QWORD *)(v49 + 120) = v90;
  *(_QWORD *)(v49 + 176) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v49 + 184) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v49 + 152) = v8;
  *(_QWORD *)(v49 + 160) = v10;
  *(_QWORD *)(v49 + 816) = &type metadata for UsagePage;
  *(_QWORD *)(v49 + 336) = &type metadata for UsagePage;
  *(_QWORD *)(v49 + 344) = &protocol witness table for UsagePage;
  *(_QWORD *)(v49 + 824) = &protocol witness table for UsagePage;
  *(_QWORD *)(v49 + 216) = &type metadata for ReportSize;
  *(_QWORD *)(v49 + 224) = &protocol witness table for ReportSize;
  *(_QWORD *)(v49 + 192) = v82;
  *(_QWORD *)(v49 + 200) = v81;
  *(_QWORD *)(v49 + 536) = &type metadata for Usage;
  *(_QWORD *)(v49 + 576) = &type metadata for Usage;
  *(_QWORD *)(v49 + 856) = &type metadata for Usage;
  *(_QWORD *)(v49 + 896) = &type metadata for Usage;
  *(_QWORD *)(v49 + 376) = &type metadata for Usage;
  *(_QWORD *)(v49 + 384) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 544) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 584) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 864) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 904) = &protocol witness table for Usage;
  *(_QWORD *)(v49 + 256) = &type metadata for ReportCount;
  *(_QWORD *)(v49 + 264) = &protocol witness table for ReportCount;
  *(_QWORD *)(v49 + 232) = v80;
  *(_QWORD *)(v49 + 240) = v79;
  *(_QWORD *)(v49 + 616) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v49 + 624) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(v49 + 936) = &type metadata for LogicalMinimum;
  *(_QWORD *)(v49 + 944) = &protocol witness table for LogicalMinimum;
  v63 = v114[0];
  v50 = v114[0];
  v64 = v114[1];
  *(_QWORD *)(v49 + 656) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v49 + 976) = &type metadata for LogicalMaximum;
  *(_QWORD *)(v49 + 664) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v49 + 984) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(v49 + 296) = &type metadata for Input;
  *(_QWORD *)(v49 + 304) = &protocol witness table for Input;
  *(_QWORD *)(v49 + 272) = v50;
  *(_QWORD *)(v49 + 280) = v64;
  *(_QWORD *)(v49 + 312) = v78;
  *(_QWORD *)(v49 + 320) = v77;
  *(_QWORD *)(v49 + 352) = v76;
  *(_QWORD *)(v49 + 360) = v75;
  *(_QWORD *)(v49 + 416) = &type metadata for ReportSize;
  *(_QWORD *)(v49 + 424) = &protocol witness table for ReportSize;
  *(_QWORD *)(v49 + 392) = v74;
  *(_QWORD *)(v49 + 400) = v107;
  *(_QWORD *)(v49 + 456) = &type metadata for ReportCount;
  *(_QWORD *)(v49 + 464) = &protocol witness table for ReportCount;
  *(_QWORD *)(v49 + 432) = v106;
  *(_QWORD *)(v49 + 440) = v105;
  *(_QWORD *)(v49 + 696) = &type metadata for ReportSize;
  *(_QWORD *)(v49 + 704) = &protocol witness table for ReportSize;
  *(_QWORD *)(v49 + 1016) = &type metadata for ReportSize;
  *(_QWORD *)(v49 + 1024) = &protocol witness table for ReportSize;
  v61 = v112[0];
  v51 = v112[0];
  v62 = v112[1];
  *(_QWORD *)(v49 + 496) = &type metadata for Input;
  *(_QWORD *)(v49 + 504) = &protocol witness table for Input;
  *(_QWORD *)(v49 + 472) = v51;
  *(_QWORD *)(v49 + 480) = v62;
  *(_QWORD *)(v49 + 512) = v104;
  *(_QWORD *)(v49 + 520) = v103;
  *(_QWORD *)(v49 + 552) = v102;
  *(_QWORD *)(v49 + 560) = v101;
  *(_QWORD *)(v49 + 592) = v100;
  *(_QWORD *)(v49 + 600) = v99;
  *(_QWORD *)(v49 + 632) = v98;
  *(_QWORD *)(v49 + 640) = v97;
  *(_QWORD *)(v49 + 672) = v96;
  *(_QWORD *)(v49 + 680) = v95;
  *(_QWORD *)(v49 + 736) = &type metadata for ReportCount;
  *(_QWORD *)(v49 + 744) = &protocol witness table for ReportCount;
  *(_QWORD *)(v49 + 712) = v94;
  *(_QWORD *)(v49 + 720) = v93;
  *(_QWORD *)(v49 + 1056) = &type metadata for ReportCount;
  *(_QWORD *)(v49 + 1064) = &protocol witness table for ReportCount;
  v57 = v110[0];
  v52 = v110[0];
  v58 = v110[1];
  *(_QWORD *)(v49 + 776) = &type metadata for Input;
  *(_QWORD *)(v49 + 784) = &protocol witness table for Input;
  *(_QWORD *)(v49 + 752) = v52;
  *(_QWORD *)(v49 + 760) = v58;
  *(_QWORD *)(v49 + 792) = v89;
  *(_QWORD *)(v49 + 800) = v88;
  *(_QWORD *)(v49 + 832) = v87;
  *(_QWORD *)(v49 + 840) = v86;
  *(_QWORD *)(v49 + 872) = v85;
  *(_QWORD *)(v49 + 880) = v84;
  *(_QWORD *)(v49 + 912) = v71;
  *(_QWORD *)(v49 + 920) = v83;
  *(_QWORD *)(v49 + 952) = v70;
  *(_QWORD *)(v49 + 960) = v69;
  *(_QWORD *)(v49 + 992) = v68;
  *(_QWORD *)(v49 + 1000) = v67;
  *(_QWORD *)(v49 + 1032) = v66;
  *(_QWORD *)(v49 + 1040) = v65;
  *(_QWORD *)(v49 + 1096) = &type metadata for Input;
  *(_QWORD *)(v49 + 1104) = &protocol witness table for Input;
  v54 = v108[0];
  v55 = v108[1];
  *(_QWORD *)(v49 + 1072) = v108[0];
  *(_QWORD *)(v49 + 1080) = v55;
  sub_2498CAC78(v73, v72);
  sub_2498CAC78(v92, v91);
  sub_2498CAC78(v60, v90);
  sub_2498CAC78(v59, v10);
  sub_2498CAC78(v82, v81);
  sub_2498CAC78(v80, v79);
  sub_2498CAC78(v63, v64);
  sub_2498CAC78(v78, v77);
  sub_2498CAC78(v76, v75);
  sub_2498CAC78(v74, v107);
  sub_2498CAC78(v106, v105);
  sub_2498CAC78(v61, v62);
  sub_2498CAC78(v104, v103);
  sub_2498CAC78(v102, v101);
  sub_2498CAC78(v100, v99);
  sub_2498CAC78(v98, v97);
  sub_2498CAC78(v96, v95);
  sub_2498CAC78(v94, v93);
  sub_2498CAC78(v57, v58);
  sub_2498CAC78(v89, v88);
  sub_2498CAC78(v87, v86);
  sub_2498CAC78(v85, v84);
  sub_2498CAC78(v71, v83);
  sub_2498CAC78(v70, v69);
  sub_2498CAC78(v68, v67);
  sub_2498CAC78(v66, v65);
  sub_2498CAC78(v54, v55);
  v56 = static HIDReportDescriptor.Builder.buildBlock(_:)(v49);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v54, v55);
  sub_2498CACBC(v66, v65);
  sub_2498CACBC(v68, v67);
  sub_2498CACBC(v70, v69);
  sub_2498CACBC(v71, v83);
  sub_2498CACBC(v85, v84);
  sub_2498CACBC(v87, v86);
  sub_2498CACBC(v89, v88);
  sub_2498CACBC(v57, v58);
  sub_2498CACBC(v94, v93);
  sub_2498CACBC(v96, v95);
  sub_2498CACBC(v98, v97);
  sub_2498CACBC(v100, v99);
  sub_2498CACBC(v102, v101);
  sub_2498CACBC(v104, v103);
  sub_2498CACBC(v61, v62);
  sub_2498CACBC(v106, v105);
  sub_2498CACBC(v74, v107);
  sub_2498CACBC(v76, v75);
  sub_2498CACBC(v78, v77);
  sub_2498CACBC(v63, v64);
  sub_2498CACBC(v80, v79);
  sub_2498CACBC(v82, v81);
  sub_2498CACBC(v59, v10);
  sub_2498CACBC(v60, v90);
  sub_2498CACBC(v92, v91);
  sub_2498CACBC(v73, v72);
  return v56;
}

uint64_t static DigitizerContact.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_10_12(&qword_2578A07C0, (uint64_t)&qword_2578A1CA8, a1);
}

void DigitizerReport.report.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_28_6(a1, a2);
  OUTLINED_FUNCTION_6_0();
}

void DigitizerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  OUTLINED_FUNCTION_18_3();
}

uint64_t (*DigitizerReport.report.modify())()
{
  return nullsub_1;
}

void DigitizerReport.init(_report:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2499166F0()
{
  BOOL v0;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_2_1();
  if (v3)
    goto LABEL_4;
  __break(1u);
  do
  {
    __break(1u);
LABEL_4:
    v4 = 8 * v2;
    v0 = __OFADD__(v4, 16);
    v2 = v4 + 16;
  }
  while (v0);
  sub_24995561C();
  return v5;
}

uint64_t DigitizerReport.contactCountMaximum.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 16);
}

void sub_24991672C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  DigitizerReport.init(_report:)(a1, a2);
  *a3 = v4;
  a3[1] = v5;
  OUTLINED_FUNCTION_6_0();
}

void sub_24991674C()
{
  uint64_t v0;

  sub_249950878(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t DigitizerContact.init()()
{
  if (qword_2578A07B8 != -1)
    swift_once();
  return HIDReport.init(bitCount:id:)(qword_2578A1CA0, 0);
}

uint64_t (*DigitizerContact.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2499167AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DigitizerContact.index.getter();
  *a1 = result;
  return result;
}

uint64_t DigitizerContact.index.setter(unint64_t a1)
{
  int v2;
  uint64_t result;

  OUTLINED_FUNCTION_17_13();
  if ((a1 & 0x8000000000000000) == 0 && a1 < 0x100)
    return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2 & 0xFFFFFFE0 | a1 & 0x1F, 0);
  OUTLINED_FUNCTION_50();
  result = sub_249955D60();
  __break(1u);
  return result;
}

void DigitizerContact.index.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;

  OUTLINED_FUNCTION_3_12(a1);
  OUTLINED_FUNCTION_17_13();
  *v1 = v2 & 0x1F;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499168B4(unint64_t *a1)
{
  DigitizerContact.index.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499168D0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  DigitizerContact.touch.getter(*a1, a1[1]);
  *a2 = v3 & 1;
}

void DigitizerContact.touch.setter()
{
  HIDReport.subscript.setter();
}

void DigitizerContact.touch.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_4_15(a1);
  HIDReport.subscript.getter(6, v2, v3);
  *(_BYTE *)(v1 + 8) = v4 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_24991693C(uint64_t a1)
{
  OUTLINED_FUNCTION_12_17(a1);
  HIDReport.subscript.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24991695C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  DigitizerContact.range.getter(*a1, a1[1]);
  *a2 = v3 & 1;
}

void DigitizerContact.range.setter()
{
  HIDReport.subscript.setter();
}

void DigitizerContact.range.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_4_15(a1);
  HIDReport.subscript.getter(7, v2, v3);
  *(_BYTE *)(v1 + 8) = v4 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499169C8(uint64_t a1)
{
  OUTLINED_FUNCTION_12_17(a1);
  HIDReport.subscript.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499169E8(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  DigitizerContact.resting.getter(*a1, a1[1]);
  *a2 = v3 & 1;
}

void DigitizerContact.resting.setter()
{
  HIDReport.subscript.setter();
}

void DigitizerContact.resting.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_4_15(a1);
  HIDReport.subscript.getter(5, v2, v3);
  *(_BYTE *)(v1 + 8) = v4 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_249916A54(uint64_t a1)
{
  OUTLINED_FUNCTION_12_17(a1);
  HIDReport.subscript.setter();
  OUTLINED_FUNCTION_6_0();
}

#error "249916A88: call analysis failed (funcsize=12)"

void sub_249916AA4(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = DigitizerContact.x.getter(*a1, a1[1]);
}

#error "249916AD8: call analysis failed (funcsize=6)"

#error "249916AFC: call analysis failed (funcsize=15)"

#error "249916B3C: call analysis failed (funcsize=10)"

#error "249916B64: call analysis failed (funcsize=12)"

void sub_249916B80(_QWORD *a1@<X0>, double *a2@<X8>)
{
  *a2 = DigitizerContact.y.getter(*a1, a1[1]);
}

#error "249916BB4: call analysis failed (funcsize=6)"

#error "249916BD8: call analysis failed (funcsize=15)"

#error "249916C18: call analysis failed (funcsize=10)"

void DigitizerReport.contactCount.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void DigitizerReport.contact(atIndex:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  DigitizerReport.contactRange(forIndex:)(a1, a2, a3);
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_21_12();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_5_16(v4, v6);
}

void sub_249916C84(_BYTE *a1@<X8>)
{
  char v2;

  DigitizerReport.contactCount.getter();
  *a1 = v2;
}

uint64_t DigitizerReport.contactCount.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

void DigitizerReport.contactCount.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_4_15(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249916CE8(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 8);
  OUTLINED_FUNCTION_6_0();
}

void DigitizerReport.contactCountMaximum.getter()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void sub_249916D18(_BYTE *a1@<X8>)
{
  char v2;

  DigitizerReport.contactCountMaximum.getter();
  *a1 = v2;
}

void DigitizerReport.contactCountMaximum.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_4_15(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249916D74(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 16);
  OUTLINED_FUNCTION_6_0();
}

void DigitizerReport.contactRange(forIndex:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_2578A07B8 != -1)
    swift_once();
  __asm { BR              X12 }
}

double DigitizerReport.setContact(_:atIndex:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  double v6;
  unint64_t v7;
  double result;
  __int128 v9;

  v6 = *(double *)v3;
  v7 = v3[1];
  DigitizerReport.contactRange(forIndex:)(a3, *v3, v7);
  *(double *)&v9 = v6;
  *((_QWORD *)&v9 + 1) = v7;
  sub_2498CAC78(*(uint64_t *)&v6, v7);
  sub_2498CAC78(a1, a2);
  sub_249917678(a1, a2);
  sub_2498CACBC(a1, a2);
  sub_2498CACBC(*(uint64_t *)&v6, v7);
  result = v6;
  *(_OWORD *)v3 = v9;
  return result;
}

void DigitizerReport.scrollCollectionRange.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  DigitizerReport.contactRange(forIndex:)(5, a1, a2);
  v3 = v2;
  if (qword_2578A07A0 != -1)
    swift_once();
  if (__OFADD__(v3, qword_2578A1B48 >> 3))
  {
    __break(1u);
  }
  else if (v3 + (qword_2578A1B48 >> 3) >= v3)
  {
    OUTLINED_FUNCTION_6_0();
    return;
  }
  __break(1u);
}

void sub_249916F9C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  DigitizerReport.scrollCollection.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void sub_249916FC8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249917860(*a1, v2);
  DigitizerReport.scrollCollection.setter(v1, v2);
}

void DigitizerReport.scrollCollection.modify(_QWORD *a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  a1[2] = v1;
  v4 = *v1;
  v3 = v1[1];
  OUTLINED_FUNCTION_22_4(*v1);
  DigitizerReport.contactRange(forIndex:)(5, v4, v3);
  v6 = v5;
  if (qword_2578A07A0 != -1)
    swift_once();
  if (__OFADD__(v6, qword_2578A1B48 >> 3))
  {
    __break(1u);
  }
  else if (v6 + (qword_2578A1B48 >> 3) >= v6)
  {
    v7 = sub_249955610();
    v9 = v8;
    sub_2498CACBC(v4, v3);
    sub_2498D31B8(v7, v9);
    *a1 = v10;
    a1[1] = v11;
    return;
  }
  __break(1u);
}

void sub_2499170E0(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_249917860(*a1, v3);
    OUTLINED_FUNCTION_24_12();
    sub_24991784C(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_24_12();
    OUTLINED_FUNCTION_18_3();
  }
}

void sub_249917130(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = DigitizerContact.point.getter(*a1, a1[1]);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = 0;
}

uint64_t sub_249917160(double *a1)
{
  return DigitizerContact.point.setter(*a1, a1[1]);
}

#error "249917194: call analysis failed (funcsize=13)"

void DigitizerContact.point.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  *(_QWORD *)(a1 + 24) = v1;
  *(double *)a1 = DigitizerContact.point.getter(*v1, v1[1]);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499171F0(double *a1)
{
  DigitizerContact.point.setter(*a1, a1[1]);
  OUTLINED_FUNCTION_6_0();
}

Swift::Int __swiftcall DigitizerReport.contactIdentityOffset(forIndex:)(Swift::Int forIndex)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(8 * forIndex, 320);
  result = 8 * forIndex + 320;
  if (v1)
    __break(1u);
  return result;
}

Swift::Void __swiftcall DigitizerReport.setContactIdentity(_:atIndex:)(Swift::UInt8 _, Swift::Int atIndex)
{
  uint64_t v2;
  BOOL v3;
  Swift::Int v4;

  v3 = __OFADD__(8 * atIndex, 320);
  v4 = 8 * atIndex + 320;
  if (v3)
  {
    __break(1u);
    JUMPOUT(0x2499172ACLL);
  }
  ((void (*)(_QWORD, Swift::Int))((char *)&loc_249917244 + dword_2499172BC[*(_QWORD *)(v2 + 8) >> 62]))(_, v4);
}

void DigitizerReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_249917300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((unint64_t)BYTE6(a3) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x249917368);
  }
  if (BYTE6(a3) >= 0x35uLL)
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
}

void sub_249917380(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;

  DigitizerReport.remoteTimestamp.getter(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
}

uint64_t sub_2499173B4()
{
  return DigitizerReport.remoteTimestamp.setter();
}

uint64_t DigitizerReport.remoteTimestamp.setter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2499173F0 + *((int *)qword_249917460 + (*(_QWORD *)(v0 + 8) >> 62))))();
}

void sub_249917400()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x249917458);
  }
  if (v2 >= 53)
  {
    if ((v1 & 1) != 0)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 360);
  }
}

void DigitizerReport.remoteTimestamp.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  __asm { BR              X11 }
}

void sub_2499174AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x24991751CLL);
  }
  if (v1 >= 53)
  {
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0();
    v4 = 0;
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  *(_QWORD *)v0 = v3;
  *(_BYTE *)(v0 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249917534(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    __asm { BR              X12 }
  DigitizerReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_249917584()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2499175B8);
  }
  if (v2 >= 53)
  {
    if (v1)
      v0 = 0;
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v0, 360);
  }
  JUMPOUT(0x24991755CLL);
}

void sub_2499175EC()
{
  uint64_t *v0;

  DigitizerReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_249917608()
{
  return DigitizerReport.remoteTimestamp.setter();
}

void (*sub_249917610(uint64_t a1))()
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 16) = v1;
  DigitizerReport.remoteTimestamp.getter(*v1, v1[1]);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_249917650;
}

void sub_249917650()
{
  DigitizerReport.remoteTimestamp.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_249917678(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2499176E0()
{
  return sub_249955604();
}

uint64_t sub_24991784C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2498CACBC(a1, a2);
  return a1;
}

uint64_t sub_249917860(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2498CAC78(a1, a2);
  return a1;
}

void sub_249917878(unint64_t *a1)
{
  DigitizerContact.index.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24991789C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_16(a1);
  DigitizerContact.touch.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499178BC(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_16(a1);
  DigitizerContact.range.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499178DC(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_16(a1);
  DigitizerContact.resting.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499178FC(double *a1)
{
  DigitizerContact.x.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249917920(double *a1)
{
  DigitizerContact.y.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249917944(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  DigitizerReport.contactCount.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249917964(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  DigitizerReport.contactCountMaximum.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for DigitizerReport()
{
  return &type metadata for DigitizerReport;
}

ValueMetadata *type metadata accessor for DigitizerContact()
{
  return &type metadata for DigitizerContact;
}

uint64_t sub_2499179B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_24995555C();
  if (!result || (result = sub_249955574(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_249955568();
      return sub_249955604();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void OUTLINED_FUNCTION_3_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_2498D1874(0, 0xFFFFLL, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

_QWORD *OUTLINED_FUNCTION_4_15(_QWORD *result)
{
  uint64_t v1;

  *result = v1;
  return result;
}

void OUTLINED_FUNCTION_5_16(uint64_t a1, uint64_t a2)
{
  sub_2498D31B8(a1, a2);
}

double OUTLINED_FUNCTION_6_20(unsigned __int16 a1)
{
  return (double)a1;
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_9_12(uint64_t a1, uint64_t a2)
{
  return sub_2499179B8(a1, a2);
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  return 8;
}

uint64_t OUTLINED_FUNCTION_11_16(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_12_17(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_14_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;

  return sub_2498CACBC(v12, a12);
}

void OUTLINED_FUNCTION_17_13()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24991784C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_12()
{
  return sub_249955610();
}

void OUTLINED_FUNCTION_24_12()
{
  uint64_t v0;
  unint64_t v1;

  DigitizerReport.scrollCollection.setter(v0, v1);
}

uint64_t static KeyboardUsage.usagePage.getter()
{
  return 7;
}

uint64_t static KeyboardUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static KeyboardUsage.usageMaximum.getter()
{
  return 231;
}

uint64_t KeyboardUsage.init(rawValue:)(unsigned __int8 a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;
  unsigned __int8 v4;

  v1 = (a1 + 24);
  v2 = v1 >= 0x19;
  v3 = v1 < 0x19;
  if (v2)
    v4 = a1;
  else
    v4 = 0;
  return v4 | (v3 << 8);
}

uint64_t sub_249917B6C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = KeyboardUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_249917B9C()
{
  return 231;
}

uint64_t static KeyboardUsage.backtick.getter()
{
  return 53;
}

uint64_t static KeyboardUsage.delete.getter()
{
  return 42;
}

uint64_t static KeyboardUsage.escape.getter()
{
  return 41;
}

uint64_t static KeyboardUsage.capsLock.getter()
{
  return 57;
}

uint64_t static KeyboardUsage.leftCommand.getter()
{
  return 227;
}

uint64_t static KeyboardUsage.leftControl.getter()
{
  return 224;
}

uint64_t static KeyboardUsage.leftOption.getter()
{
  return 226;
}

uint64_t static KeyboardUsage.leftShift.getter()
{
  return 225;
}

uint64_t static KeyboardUsage.rightCommand.getter()
{
  return 231;
}

uint64_t static KeyboardUsage.rightControl.getter()
{
  return 228;
}

uint64_t static KeyboardUsage.rightOption.getter()
{
  return 230;
}

uint64_t static KeyboardUsage.rightShift.getter()
{
  return 229;
}

void sub_249917C04()
{
  off_2578A1CB8 = &unk_251AC4F28;
}

uint64_t static KeyboardUsage.modifiers.getter()
{
  if (qword_2578A07C8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

BOOL KeyboardUsage.isModifier.getter(char a1)
{
  return (a1 & 0xF8) == 224;
}

unint64_t sub_249917C68(uint64_t a1)
{
  unint64_t result;

  result = sub_249917C8C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249917C8C()
{
  unint64_t result;

  result = qword_2578A1CC0;
  if (!qword_2578A1CC0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardUsage, &type metadata for KeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1CC0);
  }
  return result;
}

unint64_t sub_249917CCC()
{
  unint64_t result;

  result = qword_2578A1CC8;
  if (!qword_2578A1CC8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for KeyboardUsage, &type metadata for KeyboardUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardUsage()
{
  return &type metadata for KeyboardUsage;
}

id HIDUserDevice.bridgedValue.getter()
{
  void *v0;

  return v0;
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HIDUserDevice.serviceID()()
{
  void *v0;
  kern_return_t RegistryEntryID;
  kern_return_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8[2];

  v8[1] = *MEMORY[0x24BDAC8D0];
  v8[0] = 0;
  RegistryEntryID = IORegistryEntryGetRegistryEntryID((io_registry_entry_t)objc_msgSend(v0, sel_service), v8);
  if (!RegistryEntryID)
    return v8[0];
  v2 = RegistryEntryID;
  v3 = sub_249955844();
  v5 = v4;
  v6 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  sub_2499184E8(v3, v5, v2, 0);
  return swift_willThrow();
}

id HIDUserDevice.handleReport(_:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v5;
  id v6;
  id result;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2498CAC78(a1, a2);
  v5 = (void *)sub_249955634();
  sub_2498CACBC(a1, a2);
  v8[0] = 0;
  v6 = objc_msgSend(v2, sel_handleReport_error_, v5, v8);

  result = v8[0];
  if (!(_DWORD)v6)
  {
    OUTLINED_FUNCTION_0_22();

    return (id)swift_willThrow();
  }
  return result;
}

id HIDUserDevice.handleReport(_:timestamp:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  id v8;
  id result;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_2498CAC78(a1, a2);
  v7 = (void *)sub_249955634();
  sub_2498CACBC(a1, a2);
  v10[0] = 0;
  v8 = objc_msgSend(v3, sel_handleReport_withTimestamp_error_, v7, a3, v10);

  result = v10[0];
  if (!(_DWORD)v8)
  {
    OUTLINED_FUNCTION_0_22();

    return (id)swift_willThrow();
  }
  return result;
}

id sub_249917FB0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_249917FD4();
  *a1 = result;
  return result;
}

id sub_249917FD4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_24995579C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithProperties_, v1);

  return v2;
}

id sub_249918058()
{
  return sub_249918078();
}

id sub_249918078()
{
  void *v0;

  return objc_msgSend(v0, sel_service);
}

Swift::UInt64 sub_249918088()
{
  return HIDUserDevice.serviceID()();
}

id sub_2499180A8()
{
  return sub_2499180C8();
}

id sub_2499180C8()
{
  void *v0;

  return objc_msgSend(v0, sel_activate);
}

id sub_2499180D8()
{
  return sub_2499180F8();
}

id sub_2499180F8()
{
  void *v0;

  return objc_msgSend(v0, sel_cancel);
}

double sub_249918108@<D0>(_OWORD *a1@<X8>)
{
  return sub_249918128(a1);
}

double sub_249918128@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  double result;

  v3 = (void *)sub_249955838();
  v4 = objc_msgSend(v1, sel_propertyForKey_, v3);

  if (v4)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

unint64_t sub_2499181A4(uint64_t a1)
{
  return (unint64_t)sub_2499181C8(a1) & 1;
}

id sub_2499181C8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_249918644(a1, (uint64_t)v11);
  v2 = v12;
  if (v12)
  {
    v3 = __swift_project_boxed_opaque_existential_1(v11, v12);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    v7 = sub_249955F1C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)sub_249955838();
  v9 = objc_msgSend(v1, sel_setProperty_forKey_, v7, v8);
  swift_unknownObjectRelease();

  return v9;
}

uint64_t sub_2499182D8(uint64_t a1, uint64_t a2)
{
  return sub_24991837C(a1, a2, (uint64_t)sub_2498EDF40, (uint64_t)&block_descriptor_6_1, (SEL *)&selRef_setCancelHandler_);
}

id sub_249918310(uint64_t a1)
{
  return sub_249918330(a1);
}

id sub_249918330(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setDispatchQueue_, a1);
}

uint64_t sub_249918344(uint64_t a1, uint64_t a2)
{
  return sub_24991837C(a1, a2, (uint64_t)sub_249918400, (uint64_t)&block_descriptor_3, (SEL *)&selRef_setGetReportHandler_);
}

uint64_t sub_24991837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v5;
  void *v7;
  _QWORD v9[6];

  v9[4] = a1;
  v9[5] = a2;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = a3;
  v9[3] = a4;
  v7 = _Block_copy(v9);
  swift_retain();
  objc_msgSend(v5, *a5, v7);
  _Block_release(v7);
  return swift_release();
}

uint64_t sub_249918404(uint64_t a1, uint64_t a2)
{
  return sub_24991837C(a1, a2, (uint64_t)sub_249918400, (uint64_t)&block_descriptor_1, (SEL *)&selRef_setSetReportHandler_);
}

uint64_t sub_24991843C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v10 = v9(a2, a3, a4, a5);
  swift_release();
  return v10;
}

id sub_2499184A8(uint64_t a1, unint64_t a2)
{
  return HIDUserDevice.handleReport(_:)(a1, a2);
}

id sub_2499184C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return HIDUserDevice.handleReport(_:timestamp:)(a1, a2, a3);
}

id sub_2499184E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_249955838();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_24995579C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.init(properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.service.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.serviceID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.property(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setProperty(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setCancelHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setDispatchQueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setGetReportHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setSetReportHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.handleReport(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.handleReport(_:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_249918644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return sub_249955598();
}

void sub_2499186B0()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_23_2();
  sub_249919FD0(v0, v1);
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_18_3();
}

void sub_2499186D8()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_23_2();
  sub_24991A180(v0, v1);
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_18_3();
}

void sub_249918700()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_23_2();
  sub_24991A508(v0, v1);
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_249918728(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_24991A6BC(a1, a2);
  v5 = v4;
  sub_2498CACBC(a1, a2);
  return v5;
}

void sub_249918768()
{
  OUTLINED_FUNCTION_23_2();
  sub_24991AA58();
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_18_3();
}

void sub_249918790()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_23_2();
  sub_24991AC38(v0, v1);
  OUTLINED_FUNCTION_1_22();
  OUTLINED_FUNCTION_18_3();
}

void sub_2499187B8(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t i;
  char v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_4_16(a1, a2, a3);
  OUTLINED_FUNCTION_94_0();
  v3 = 0;
  for (i = 0; (i - 0x1000000000000000) >> 61 == 7; ++i)
  {
    if (__OFADD__(v3, 8))
      goto LABEL_11;
    OUTLINED_FUNCTION_69_0(v3 + 8);
    if ((v5 - 3) >= 3u)
    {
      if (i > 2)
      {
LABEL_9:
        v6 = OUTLINED_FUNCTION_47_3();
        OUTLINED_FUNCTION_3_20(v6, v7);
        return;
      }
    }
    else
    {
      AppleVendorTopCaseReport.update(with:)();
      if (i >= 3)
        goto LABEL_9;
    }
    v3 += 8;
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

void sub_249918844(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a3;
  a5[1] = a4;
  sub_2498CAC78(a1, a2);
  sub_2498CAC78(a3, a4);
  sub_2498E8B84((uint64_t)a5, a1, a2);
}

void sub_2499188B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_249918934(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_249918A04, a5);
}

#error "2499188F0: call analysis failed (funcsize=30)"

void sub_249918934(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void (*a5)(uint64_t, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  *a6 = a3;
  a6[1] = a4;
  sub_2498CAC78(a3, a4);
  a5(a1, a2);
  OUTLINED_FUNCTION_18_3();
}

void sub_24991897C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t i;
  char v4;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_60_0(a1, a2);
  v2 = 0;
  for (i = 0; (i - 0x1000000000000000) >> 61 == 7; ++i)
  {
    if (__OFADD__(v2, 8))
      goto LABEL_11;
    OUTLINED_FUNCTION_69_0(v2 + 8);
    if ((v4 - 3) >= 3u)
    {
      if (i > 2)
      {
LABEL_9:
        v5 = OUTLINED_FUNCTION_47_3();
        OUTLINED_FUNCTION_3_20(v5, v6);
        return;
      }
    }
    else
    {
      AppleVendorTopCaseReport.update(with:)();
      if (i >= 3)
        goto LABEL_9;
    }
    v2 += 8;
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

uint64_t sub_249918A04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned __int8 v3;
  BOOL v4;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_60_0(a1, a2);
  v2 = 0;
  do
  {
    while (1)
    {
      OUTLINED_FUNCTION_69_0(8 * v2 + 8);
      if ((v3 - 49) > 0xCFu && v3 <= 0x21u && ((1 << v3) & 0x30003001ELL) != 0)
        break;
      v4 = v2 < 1;
      v2 = 1;
      if (!v4)
        goto LABEL_10;
    }
    AppleVendorKeyboardReport.update(with:)();
    v4 = v2++ < 1;
  }
  while (v4);
LABEL_10:
  v6 = OUTLINED_FUNCTION_47_3();
  return OUTLINED_FUNCTION_15_13(v6, v7);
}

#error "249918ACC: call analysis failed (funcsize=29)"

void sub_249918B10(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  sub_2498CAC78(a1, a2);
  __asm { BR              X9 }
}

void sub_249918BE0()
{
  uint64_t v1;

  if (!__OFADD__(*(_QWORD *)(v1 - 120), 1))
    __asm { BR              X8 }
  __break(1u);
  JUMPOUT(0x249918E50);
}

uint64_t static ButtonReport.initialReportBitCount.getter()
{
  return 16;
}

uint64_t static ButtonReport.reportID.getter()
{
  return 6;
}

uint64_t sub_249918ED0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249918EF0();
  *(_QWORD *)&xmmword_2578A1CD0 = result;
  *((_QWORD *)&xmmword_2578A1CD0 + 1) = v1;
  return result;
}

uint64_t sub_249918EF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  LOBYTE(v17) = 17;
  sub_2498FCA34((uint64_t)&v17, 1uLL);
  v1 = v0;
  v3 = v2;
  LOBYTE(v17) = 3;
  sub_2498FC7A0((uint64_t)&v17, 0);
  v17 = v4;
  v18 = v5;
  v6 = sub_24991904C();
  v8 = v7;
  sub_24995567C();
  sub_2498CACBC(v6, v8);
  v9 = sub_2498D3060((uint64_t)&unk_251AC4A20);
  v11 = v10;
  sub_24995567C();
  sub_2498CACBC(v9, v11);
  v12 = v17;
  v13 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959020;
  *(_QWORD *)(inited + 56) = &type metadata for Usage;
  *(_QWORD *)(inited + 64) = &protocol witness table for Usage;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 96) = &type metadata for PhysicalCollection;
  *(_QWORD *)(inited + 104) = &protocol witness table for PhysicalCollection;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  sub_2498CAC78(v1, v3);
  sub_2498CAC78(v12, v13);
  v15 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v12, v13);
  sub_2498CACBC(v1, v3);
  return v15;
}

uint64_t sub_24991904C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t inited;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD v48[2];
  __int16 v49;
  __int16 v50;
  __int16 v51;
  unsigned __int8 v52;
  uint64_t v53;
  unint64_t v54;

  LOBYTE(v53) = 5;
  sub_2498FCA34((uint64_t)&v53, 9uLL);
  v43 = v1;
  v44 = v0;
  LOBYTE(v53) = 18;
  sub_2498FCA34((uint64_t)&v53, 0);
  v3 = v2;
  v42 = v4;
  LOBYTE(v53) = 19;
  sub_2498FCA34((uint64_t)&v53, 2uLL);
  v6 = v5;
  v8 = v7;
  LOBYTE(v53) = 6;
  sub_2498FC7A0((uint64_t)&v53, 0);
  v10 = v9;
  v12 = v11;
  v37 = v11;
  LOBYTE(v53) = 7;
  sub_2498FC7A0((uint64_t)&v53, 1);
  v39 = v13;
  v15 = v14;
  v36 = v14;
  LOBYTE(v53) = 14;
  sub_2498FC7A0((uint64_t)&v53, 3);
  v38 = v16;
  v47 = v17;
  LOBYTE(v53) = 12;
  sub_2498FCA34((uint64_t)&v53, 1uLL);
  v45 = v19;
  v46 = v18;
  LOBYTE(v48[0]) = 0;
  v52 = 1;
  v51 = 0;
  v50 = 0;
  HIBYTE(v49) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v48, &v52, (_BYTE *)&v51 + 1, &v51, (_BYTE *)&v50 + 1, &v50, (_BYTE *)&v49 + 1, &v53);
  LOBYTE(v48[0]) = 14;
  sub_2498FC7A0((uint64_t)v48, 1);
  v40 = v21;
  v41 = v20;
  LOBYTE(v48[0]) = 12;
  sub_2498FCA34((uint64_t)v48, 5uLL);
  v23 = v22;
  v33 = v24;
  v34 = v22;
  v25 = v24;
  v52 = 1;
  v51 = 0;
  v50 = 0;
  v49 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v52, (_BYTE *)&v51 + 1, &v51, (_BYTE *)&v50 + 1, &v50, (_BYTE *)&v49 + 1, &v49, v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0BD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24995A570;
  *(_QWORD *)(inited + 56) = &type metadata for ReportID;
  *(_QWORD *)(inited + 64) = &protocol witness table for ReportID;
  *(_BYTE *)(inited + 32) = 6;
  *(_QWORD *)(inited + 96) = &type metadata for UsagePage;
  *(_QWORD *)(inited + 104) = &protocol witness table for UsagePage;
  *(_QWORD *)(inited + 72) = v44;
  *(_QWORD *)(inited + 80) = v43;
  *(_QWORD *)(inited + 136) = &type metadata for UsageMinimum;
  *(_QWORD *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(_QWORD *)(inited + 112) = v3;
  *(_QWORD *)(inited + 120) = v42;
  *(_QWORD *)(inited + 176) = &type metadata for UsageMaximum;
  *(_QWORD *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(_QWORD *)(inited + 152) = v6;
  *(_QWORD *)(inited + 160) = v8;
  *(_QWORD *)(inited + 216) = &type metadata for LogicalMinimum;
  *(_QWORD *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(_QWORD *)(inited + 192) = v10;
  *(_QWORD *)(inited + 200) = v12;
  *(_QWORD *)(inited + 256) = &type metadata for LogicalMaximum;
  *(_QWORD *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(_QWORD *)(inited + 232) = v39;
  *(_QWORD *)(inited + 240) = v15;
  *(_QWORD *)(inited + 296) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 304) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 272) = v38;
  *(_QWORD *)(inited + 280) = v47;
  *(_QWORD *)(inited + 336) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 344) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 312) = v46;
  *(_QWORD *)(inited + 320) = v45;
  v31 = v54;
  v27 = v54;
  v32 = v53;
  *(_QWORD *)(inited + 376) = &type metadata for Input;
  *(_QWORD *)(inited + 384) = &protocol witness table for Input;
  *(_QWORD *)(inited + 352) = v32;
  *(_QWORD *)(inited + 360) = v27;
  *(_QWORD *)(inited + 416) = &type metadata for ReportCount;
  *(_QWORD *)(inited + 424) = &protocol witness table for ReportCount;
  *(_QWORD *)(inited + 392) = v41;
  *(_QWORD *)(inited + 400) = v40;
  *(_QWORD *)(inited + 456) = &type metadata for ReportSize;
  *(_QWORD *)(inited + 464) = &protocol witness table for ReportSize;
  *(_QWORD *)(inited + 432) = v23;
  *(_QWORD *)(inited + 440) = v25;
  v29 = v48[0];
  v28 = v48[1];
  *(_QWORD *)(inited + 496) = &type metadata for Input;
  *(_QWORD *)(inited + 504) = &protocol witness table for Input;
  *(_QWORD *)(inited + 472) = v29;
  *(_QWORD *)(inited + 480) = v28;
  sub_2498CAC78(v44, v43);
  sub_2498CAC78(v3, v42);
  sub_2498CAC78(v6, v8);
  sub_2498CAC78(v10, v37);
  sub_2498CAC78(v39, v36);
  sub_2498CAC78(v38, v47);
  sub_2498CAC78(v46, v45);
  sub_2498CAC78(v32, v31);
  sub_2498CAC78(v41, v40);
  sub_2498CAC78(v34, v33);
  sub_2498CAC78(v29, v28);
  v35 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_249919E04();
  sub_2498CACBC(v29, v28);
  sub_2498CACBC(v34, v33);
  sub_2498CACBC(v41, v40);
  sub_2498CACBC(v32, v31);
  sub_2498CACBC(v46, v45);
  sub_2498CACBC(v38, v47);
  sub_2498CACBC(v39, v36);
  sub_2498CACBC(v10, v37);
  sub_2498CACBC(v6, v8);
  sub_2498CACBC(v3, v42);
  sub_2498CACBC(v44, v43);
  return v35;
}

uint64_t static ButtonReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  __int128 v2;

  if (qword_2578A07D0 != -1)
    swift_once();
  v2 = xmmword_2578A1CD0;
  *a1 = xmmword_2578A1CD0;
  return sub_2498CAC78(v2, *((unint64_t *)&v2 + 1));
}

void ButtonReport.report.getter()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_23_2();
  sub_2498CAC78(v0, v1);
  OUTLINED_FUNCTION_6_0();
}

void ButtonReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2498CACBC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  OUTLINED_FUNCTION_18_3();
}

uint64_t (*ButtonReport.report.modify())()
{
  return nullsub_1;
}

void ButtonReport.init(_:)()
{
  uint64_t v0;

  if (qword_2578A07D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_19_14();
  HIDReport.init(bitCount:id:)(v0, 6);
  __asm { BR              X11 }
}

uint64_t ButtonReport.buttons.setter(char a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1 & 7, 8);
}

uint64_t ButtonReport.init(_:)()
{
  uint64_t v0;
  uint64_t v2;

  if (qword_2578A07D0 != -1)
    swift_once();
  OUTLINED_FUNCTION_19_14();
  v2 = HIDReport.init(bitCount:id:)(v0, 6);
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_13_15();
  OUTLINED_FUNCTION_27_11();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_13_15();
  OUTLINED_FUNCTION_27_11();
  sub_24995561C();
  return v2;
}

void ButtonReport.update(with:)()
{
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_14_5();
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_19_5();
  sub_24995561C();
  OUTLINED_FUNCTION_7_6();
}

uint64_t ButtonReport.index(for:)(unsigned __int8 a1)
{
  return a1 + 8;
}

void sub_24991974C()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_88();
  sub_2498CAC78(v0, v1);
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_6_0();
}

void sub_249919770(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = ButtonReport.init(_report:)();
  a1[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249919790()
{
  uint64_t v0;

  sub_249950890(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t ButtonReport.buttons.getter(uint64_t a1, unint64_t a2)
{
  char v2;

  sub_2498C8F2C(8, a1, a2);
  return v2 & 7;
}

uint64_t sub_2499197BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = ButtonReport.buttons.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

void ButtonReport.buttons.modify(_QWORD *a1)
{
  uint64_t v1;
  char v3;

  a1[1] = v1;
  sub_2498C8F2C(8, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = v3 & 7;
  OUTLINED_FUNCTION_6_0();
}

void sub_249919824(_BYTE *a1)
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*a1 & 7, 8);
  OUTLINED_FUNCTION_6_0();
}

void sub_249919850(_QWORD *a1, _QWORD *a2)
{
  static ButtonReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t ButtonReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2498CAC78(a1, a2);
}

uint64_t ButtonReport.Iterator.next()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 <= 2)
  {
    do
    {
      if ((v1 & 0x8000000000000000) == 0)
        __asm { BR              X12 }
      *(_QWORD *)(v0 + 16) = ++v1;
    }
    while (v1 != 3);
  }
  return 256;
}

void sub_249919AC0()
{
  uint64_t v0;

  v0 = ButtonReport.Iterator.next()();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249919AE0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;

  v0 = OUTLINED_FUNCTION_88();
  ButtonReport.makeIterator()(v0, v1, v2);
  v3 = OUTLINED_FUNCTION_88();
  return OUTLINED_FUNCTION_3_6(v3, v4);
}

uint64_t sub_249919B04()
{
  return OUTLINED_FUNCTION_15();
}

uint64_t sub_249919B0C()
{
  uint64_t v0;

  return sub_249918728(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_249919B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_249920088(a1, a2, a3, *v3, v3[1]);
}

void ButtonReport.remove(_:)()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_17_5();
  v0 = OUTLINED_FUNCTION_13_6();
  if ((OUTLINED_FUNCTION_20_5() & v0) != 0)
  {
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_20_5();
    sub_24995561C();
  }
  OUTLINED_FUNCTION_7_6();
}

void sub_249919BA0(char *a1)
{
  uint64_t *v1;

  sub_249932BF0(*a1, *v1, v1[1]);
}

uint64_t sub_249919BAC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a1;
  v4 = a1[1];
  v6 = *v2;
  v5 = v2[1];
  sub_249918934(*a1, v4, v6, v5, (void (*)(uint64_t, uint64_t))sub_249918B10, a2);
  sub_2498CACBC(v6, v5);
  return sub_2498CACBC(v3, v4);
}

uint64_t sub_249919C04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_249919D18(a1, a2, a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_249911040);
}

uint64_t sub_249919C10()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *v0;
  v1 = v0[1];
  v3 = OUTLINED_FUNCTION_4_5();
  sub_2499111F0(v3, v4, v2, v1, v5);
  sub_2498CACBC(v2, v1);
  v6 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v6, v7);
}

void sub_249919C50(uint64_t a1, unsigned __int8 *a2)
{
  sub_2499518EC(a1, *a2);
}

void sub_249919C58()
{
  uint64_t v0;

  ButtonReport.remove(_:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_249919C7C()
{
  uint64_t v0;

  ButtonReport.update(with:)();
  OUTLINED_FUNCTION_5_0(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249919CA0(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249918B10(*a1, v2);
  return sub_2498CACBC(v1, v2);
}

void sub_249919CD8(uint64_t a1)
{
  sub_249911388(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_249919CE4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = OUTLINED_FUNCTION_4_5();
  sub_2499119AC(v0, v1);
  v2 = OUTLINED_FUNCTION_4_5();
  return OUTLINED_FUNCTION_0_10(v2, v3);
}

uint64_t sub_249919D0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_249919D18(a1, a2, a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_249950C48);
}

uint64_t sub_249919D18(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;

  a4(*a1, a1[1], *v4, v4[1]);
  v5 = OUTLINED_FUNCTION_88();
  return OUTLINED_FUNCTION_3_6(v5, v6);
}

void sub_249919D4C()
{
  sub_249910940();
}

void sub_249919D5C(uint64_t *a1)
{
  uint64_t v1;

  sub_249951048(*a1, a1[1], *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

void sub_249919D6C()
{
  sub_249910AC4();
}

void sub_249919D7C()
{
  sub_2498D4A6C();
}

void sub_249919D84()
{
  sub_249919F94();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_249919DF4()
{
  return sub_249910E04();
}

uint64_t sub_249919E04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A12A8);
  OUTLINED_FUNCTION_4_5();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

unint64_t sub_249919E54()
{
  unint64_t result;

  result = qword_2578A1CE0;
  if (!qword_2578A1CE0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonReport.Iterator, &type metadata for ButtonReport.Iterator);
    atomic_store(result, (unint64_t *)&qword_2578A1CE0);
  }
  return result;
}

unint64_t sub_249919E94()
{
  unint64_t result;

  result = qword_2578A1CE8;
  if (!qword_2578A1CE8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonReport, &type metadata for ButtonReport);
    atomic_store(result, (unint64_t *)&qword_2578A1CE8);
  }
  return result;
}

unint64_t sub_249919ED4()
{
  unint64_t result;

  result = qword_2578A1CF0;
  if (!qword_2578A1CF0)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonReport, &type metadata for ButtonReport);
    atomic_store(result, (unint64_t *)&qword_2578A1CF0);
  }
  return result;
}

void sub_249919F14(_QWORD *a1)
{
  ButtonReport.buttons.setter(*a1);
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for ButtonReport()
{
  return &type metadata for ButtonReport;
}

void sub_249919F48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_23_2();
  v3 = *v2;
  v4 = v2[1];
  sub_2498CAC78(*v2, v4);
  *v1 = v3;
  v1[1] = v4;
  v1[2] = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_18_3();
}

ValueMetadata *type metadata accessor for ButtonReport.Iterator()
{
  return &type metadata for ButtonReport.Iterator;
}

unint64_t sub_249919F94()
{
  unint64_t result;

  result = qword_2578A1CF8;
  if (!qword_2578A1CF8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for ButtonReport, &type metadata for ButtonReport);
    atomic_store(result, (unint64_t *)&qword_2578A1CF8);
  }
  return result;
}

void sub_249919FD0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v20;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;

  sub_2498CAC78(a1, a2);
  v4 = 0;
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v7 = (_BYTE *)(MEMORY[0x24BEE4AF8] + 32);
  while (2)
  {
    v8 = 8 * v4;
    while (1)
    {
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (__OFADD__(v8, 8))
        goto LABEL_29;
      sub_2498C8F2C(v8 + 8, a1, a2);
      v10 = v4 + 1;
      if ((v9 - 3) < 3u)
        break;
      v8 += 8;
      ++v4;
      if (v10 - 1 >= 3)
        goto LABEL_24;
    }
    v11 = v9;
    if (!v5)
    {
      v12 = v6[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_32;
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1)
        v14 = 1;
      else
        v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D18);
      v15 = (_QWORD *)swift_allocObject();
      v16 = 2 * _swift_stdlib_malloc_size(v15) - 64;
      v15[2] = v14;
      v15[3] = v16;
      v17 = (unint64_t)(v15 + 4);
      v18 = v6[3];
      if (v6[2])
      {
        if (v15 != v6 || v17 >= (unint64_t)v6 + (v18 >> 1) + 32)
        {
          v25 = v16;
          memmove(v15 + 4, v6 + 4, v18 >> 1);
          v16 = v25;
        }
        v6[2] = 0;
      }
      v7 = (_BYTE *)(v17 + (v18 >> 1));
      v5 = (v16 >> 1) - (v18 >> 1);
      swift_release();
      v6 = v15;
    }
    v20 = __OFSUB__(v5--, 1);
    if (v20)
      goto LABEL_30;
    *v7++ = v11;
    if (v4++ < 3)
      continue;
    break;
  }
LABEL_24:
  sub_2498CACBC(a1, a2);
  v22 = v6[3];
  if (v22 < 2)
    return;
  v23 = v22 >> 1;
  v20 = __OFSUB__(v23, v5);
  v24 = v23 - v5;
  if (!v20)
  {
    v6[2] = v24;
    return;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_24991A180(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  v4 = a2 >> 62;
  sub_2498CAC78(a1, a2);
  v9 = MEMORY[0x24BEE4AF8];
  v5 = 1;
  do
  {
    if ((unint64_t)(v5 - 256) > 0xFFFFFFFFFFFFFF00)
      __asm { BR              X10 }
  }
  while (v5++ <= 230);
  sub_2498CACBC(a1, a2);
  result = v9;
  v8 = *(_QWORD *)(v9 + 24);
  if (v8 >= 2)
    *(_QWORD *)(v9 + 16) = v8 >> 1;
  return result;
}

void sub_24991A508(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  unsigned __int8 *v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  sub_2498CAC78(a1, a2);
  v4 = 0;
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v7 = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
  do
  {
    while (1)
    {
      sub_2498C8F2C(8 * v4 + 8, a1, a2);
      if ((v8 - 49) > 0xCFu)
      {
        v9 = v8;
        if (v8 <= 0x21u && ((1 << v8) & 0x30003001ELL) != 0)
          break;
      }
      v11 = v4 < 1;
      v4 = 1;
      if (!v11)
        goto LABEL_26;
    }
    if (!v5)
    {
      v12 = v6[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_31;
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1)
        v14 = 1;
      else
        v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1380);
      v15 = (_QWORD *)swift_allocObject();
      v16 = 2 * _swift_stdlib_malloc_size(v15) - 64;
      v15[2] = v14;
      v15[3] = v16;
      v17 = (unint64_t)(v15 + 4);
      v18 = v6[3];
      if (v6[2])
      {
        if (v15 != v6 || v17 >= (unint64_t)v6 + (v18 >> 1) + 32)
          memmove(v15 + 4, v6 + 4, v18 >> 1);
        v6[2] = 0;
      }
      v7 = (unsigned __int8 *)(v17 + (v18 >> 1));
      v5 = (v16 >> 1) - (v18 >> 1);
      swift_release();
      v6 = v15;
    }
    v20 = __OFSUB__(v5--, 1);
    if (v20)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    *v7++ = v9;
    v11 = v4++ < 1;
  }
  while (v11);
LABEL_26:
  sub_2498CACBC(a1, a2);
  v21 = v6[3];
  if (v21 < 2)
    return;
  v22 = v21 >> 1;
  v20 = __OFSUB__(v22, v5);
  v23 = v22 - v5;
  if (!v20)
  {
    v6[2] = v23;
    return;
  }
LABEL_32:
  __break(1u);
}

void sub_24991A6BC(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  sub_2498CAC78(a1, a2);
  __asm { BR              X9 }
}

void sub_24991A794()
{
  uint64_t v2;

  if (!__OFADD__(v2, 1))
    __asm { BR              X8 }
  __break(1u);
  JUMPOUT(0x24991AA04);
}

#error "24991AAC8: call analysis failed (funcsize=119)"

void sub_24991AC38(uint64_t a1, unint64_t a2)
{
  sub_2498CAC78(a1, a2);
  __asm { BR              X8 }
}

uint64_t sub_24991B048(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *(*v21)(uint64_t *__return_ptr, char *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *(*v33)(uint64_t *__return_ptr, char *);
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51;
  uint64_t v52;
  _BYTE v53[48];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  v47 = a1;
  if (!v2)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v6 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
    swift_bridgeObjectRetain();
    result = swift_retain();
    v8 = 0;
    v5 = v3 + 4;
LABEL_11:
    v48 = v1 + 32;
    while (1)
    {
      if (v8 == v2)
      {
        v30 = OUTLINED_FUNCTION_34_5();
      }
      else
      {
        if (v8 >= v2)
          goto LABEL_38;
        v22 = sub_2498CF8CC(v48 + 40 * v8++, (uint64_t)v53);
      }
      OUTLINED_FUNCTION_30_6(v22, v23, v24, v25, v26, v27, v28, v29, v47, v30);
      if (!v52)
        break;
      v31 = sub_2498CF9C0(&v51, (uint64_t)v50);
      OUTLINED_FUNCTION_28_8(v31, v32, v33);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      if (!v6)
      {
        v34 = v3[3];
        if ((uint64_t)((v34 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_39;
        v35 = v34 & 0xFFFFFFFFFFFFFFFELL;
        if (v35 <= 1)
          v36 = 1;
        else
          v36 = v35;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D20);
        v37 = (_QWORD *)OUTLINED_FUNCTION_29_7();
        v38 = (uint64_t)(_swift_stdlib_malloc_size(v37) - 32) / 8;
        v37[2] = v36;
        v37[3] = (2 * v38) | 1;
        v39 = (unint64_t)(v37 + 4);
        v40 = v3[3];
        v41 = v40 >> 1;
        if (v3[2])
        {
          if (v37 != v3 || v39 >= (unint64_t)&v3[v41 + 4])
            memmove(v37 + 4, v3 + 4, 8 * v41);
          v3[2] = 0;
        }
        v5 = (_QWORD *)(v39 + 8 * v41);
        v6 = (v38 & 0x7FFFFFFFFFFFFFFFLL) - (v40 >> 1);
        result = swift_release();
        v3 = v37;
      }
      v43 = __OFSUB__(v6--, 1);
      if (v43)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      *v5++ = v49;
    }
    swift_release();
    result = swift_bridgeObjectRelease();
    v44 = v3[3];
    if (v44 >= 2)
    {
      v45 = v44 >> 1;
      v43 = __OFSUB__(v45, v6);
      v46 = v45 - v6;
      if (v43)
        goto LABEL_41;
      v3[2] = v46;
    }
    return (uint64_t)v3;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D20);
  v3 = (_QWORD *)OUTLINED_FUNCTION_29_7();
  v4 = (uint64_t)(_swift_stdlib_malloc_size(v3) - 32) / 8;
  v3[2] = v2;
  v3[3] = (2 * v4) | 1;
  v5 = v3 + 4;
  v6 = (v4 & 0x7FFFFFFFFFFFFFFFLL) - v2;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  v9 = v2;
  while (1)
  {
    if (v8 == v2)
    {
      v18 = OUTLINED_FUNCTION_34_5();
      goto LABEL_7;
    }
    if (v8 >= v2)
      break;
    v10 = sub_2498CF8CC(v1 + 32 + 40 * v8++, (uint64_t)v53);
LABEL_7:
    result = OUTLINED_FUNCTION_30_6(v10, v11, v12, v13, v14, v15, v16, v17, v47, v18);
    if (!v52)
      goto LABEL_42;
    v19 = sub_2498CF9C0(&v51, (uint64_t)v50);
    OUTLINED_FUNCTION_28_8(v19, v20, v21);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    *v5++ = v49;
    if (!--v9)
    {
      v1 = v47;
      goto LABEL_11;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24991B2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_22()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_20(uint64_t a1, unint64_t a2)
{
  return sub_2498CACBC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_4_16@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_2498CAC78(a1, a2);
}

uint64_t OUTLINED_FUNCTION_13_15()
{
  Swift::Int v0;

  return HIDReport.mask(for:)(v0);
}

Swift::Int OUTLINED_FUNCTION_18_15()
{
  Swift::Int v0;

  return HIDReport.offset(for:)(v0);
}

void OUTLINED_FUNCTION_19_14()
{
  HIDReportDescriptor.reportBitCount(for:)();
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  return sub_2499556A0();
}

_QWORD *OUTLINED_FUNCTION_28_8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *), ...)
{
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  return a3((uint64_t *)va, va1);
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_30_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  return sub_24991B2DC((uint64_t)va1, (uint64_t)va);
}

double OUTLINED_FUNCTION_34_5()
{
  return 0.0;
}

id HIDConnection.bridgedValue.getter()
{
  void *v0;

  return v0;
}

uint64_t HIDConnection.connectionType.getter()
{
  return IOHIDEventSystemConnectionGetType();
}

uint64_t HIDConnection.entitlements.getter()
{
  return *(unsigned int *)IOHIDEventSystemConnectionGetEntitlements();
}

CFStringRef HIDConnection.logDescription.getter()
{
  const void *v0;
  CFStringRef result;
  __CFString *v2;
  uint64_t v3;

  result = CFCopyDescription(v0);
  if (result)
  {
    v2 = (__CFString *)result;
    v3 = sub_249955844();

    return (CFStringRef)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HIDConnection.taskNamePort.getter()
{
  return IOHIDEventSystemConnectionGetTaskNamePort();
}

void HIDConnection.attribute(forKey:)(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  id v5;

  v3 = v1;
  v4 = (void *)sub_249955838();
  v5 = (id)IOHIDEventSystemConnectionGetAttribute();

  if (v5)
  {
    *(_QWORD *)(a1 + 24) = swift_getObjectType();
    *(_QWORD *)a1 = v5;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  OUTLINED_FUNCTION_20_3();
}

void HIDConnection.dispatchEvent(_:)(void *a1)
{
  id v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = a1;
  v2 = IOHIDEventSystemConnectionDispatchEvent();
  if (v2)
  {
    v3 = v2;
    v4 = sub_249955844();
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    sub_2499184E8(v4, v6, v3, 0);
    swift_willThrow();
  }

}

BOOL HIDConnection.isValid.getter()
{
  return _IOHIDEventSystemConnectionIsValid() != 0;
}

BOOL HIDConnection.isResponsive.getter()
{
  return _IOHIDEventSystemConnectionIsResponsive() != 0;
}

void HIDConnection.id.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D28);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (id)IOHIDEventSystemConnectionGetUUID();
  sub_249955844();

  sub_2499556AC();
  swift_bridgeObjectRelease();
  v6 = sub_2499556F4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    sub_24991B814((uint64_t)v4);
    sub_2499556D0();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v4, v6);
  }
  OUTLINED_FUNCTION_20_3();
}

uint64_t sub_24991B6EC()
{
  return HIDConnection.connectionType.getter();
}

uint64_t sub_24991B70C()
{
  return HIDConnection.entitlements.getter();
}

void sub_24991B72C(uint64_t a1@<X8>)
{
  HIDConnection.id.getter(a1);
}

BOOL sub_24991B74C()
{
  return HIDConnection.isValid.getter();
}

BOOL sub_24991B770()
{
  return HIDConnection.isResponsive.getter();
}

CFStringRef sub_24991B794()
{
  return HIDConnection.logDescription.getter();
}

uint64_t sub_24991B7B4()
{
  return HIDConnection.taskNamePort.getter();
}

void sub_24991B7D4(uint64_t a1@<X8>)
{
  HIDConnection.attribute(forKey:)(a1);
}

void sub_24991B7F4(void *a1)
{
  HIDConnection.dispatchEvent(_:)(a1);
}

uint64_t sub_24991B814(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of HIDConnectionProtocol.connectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.entitlements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.isResponsive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.logDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.taskNamePort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.attribute(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.dispatchEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t UniversalControlUsage.init(rawValue:)(unsigned __int16 a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;
  unsigned __int16 v4;

  v1 = (unsigned __int16)(a1 + 4096);
  v2 = v1 >= 0xF000;
  v3 = v1 < 0xF000;
  if (v2)
    v4 = a1;
  else
    v4 = 0;
  return v4 | (v3 << 16);
}

uint64_t static UniversalControlUsage.usageMinimum.getter()
{
  return 57344;
}

uint64_t static UniversalControlUsage.usageMaximum.getter()
{
  return 61439;
}

uint64_t sub_24991B8E8@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UniversalControlUsage.init(rawValue:)(*a1);
  *(_WORD *)a2 = result;
  *(_BYTE *)(a2 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t static UniversalControlUsage.usagePage.getter()
{
  return 65306;
}

uint64_t sub_24991B920()
{
  return 57344;
}

uint64_t sub_24991B928()
{
  return 61439;
}

uint64_t static UniversalControlUsage.report.getter()
{
  return 57344;
}

uint64_t static UniversalControlUsage.control.getter()
{
  return 57345;
}

uint64_t static UniversalControlUsage.synthetic.getter()
{
  return 57346;
}

uint64_t static UniversalControlUsage.copy.getter()
{
  return 57347;
}

uint64_t static UniversalControlUsage.serviceSelection.getter()
{
  return 57584;
}

uint64_t static UniversalControlUsage.keyboardState.getter()
{
  return 57585;
}

uint64_t static UniversalControlUsage.resting.getter()
{
  return 57586;
}

uint64_t static UniversalControlUsage.gameControllerType.getter()
{
  return 57587;
}

uint64_t static UniversalControlUsage.multitouchContactIdentity.getter()
{
  return 57588;
}

uint64_t static UniversalControlUsage.eventPhase.getter()
{
  return 57589;
}

uint64_t static UniversalControlUsage.genericGestureType.getter()
{
  return 57590;
}

uint64_t static UniversalControlUsage.genericGestureTapCount.getter()
{
  return 57591;
}

uint64_t static UniversalControlUsage.genericGestureSwipeProgress.getter()
{
  return 57592;
}

unint64_t sub_24991B998(uint64_t a1)
{
  unint64_t result;

  result = sub_24991B9BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24991B9BC()
{
  unint64_t result;

  result = qword_2578A1D30;
  if (!qword_2578A1D30)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UniversalControlUsage, &type metadata for UniversalControlUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1D30);
  }
  return result;
}

unint64_t sub_24991B9FC()
{
  unint64_t result;

  result = qword_2578A1D38;
  if (!qword_2578A1D38)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UniversalControlUsage, &type metadata for UniversalControlUsage);
    atomic_store(result, (unint64_t *)&qword_2578A1D38);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlUsage()
{
  return &type metadata for UniversalControlUsage;
}

double DockSwipeEvent.delta.getter()
{
  double v0;
  double v1;

  OUTLINED_FUNCTION_1_23();
  v1 = v0;
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_13_16();
  return v1;
}

unint64_t DockSwipeEvent.swipeMask.getter()
{
  unint64_t result;

  result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_50();
    result = OUTLINED_FUNCTION_15_14();
    __break(1u);
  }
  return result;
}

unint64_t DockSwipeEvent.flavor.getter()
{
  return OUTLINED_FUNCTION_11_17();
}

uint64_t DockSwipeEvent.progress.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

unint64_t DockSwipeEvent.gestureMotion.getter()
{
  return OUTLINED_FUNCTION_11_17();
}

unint64_t sub_24991BB48()
{
  unint64_t result;

  result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || result >= 0x10000)
  {
    OUTLINED_FUNCTION_50();
    result = OUTLINED_FUNCTION_15_14();
    __break(1u);
  }
  return result;
}

uint64_t static DockSwipeEvent.eventType.getter()
{
  return 23;
}

uint64_t DockSwipeEvent.init(time:swipeMask:gestureMotion:flavor:delta:progress:flags:)()
{
  uint64_t DockSwipeEvent;

  DockSwipeEvent = IOHIDEventCreateDockSwipeEvent();
  IOHIDEventSetIntegerValue();
  return DockSwipeEvent;
}

uint64_t DockSwipeEvent.init(event:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 23)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t DockSwipeEvent.x.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

uint64_t DockSwipeEvent.x.setter()
{
  return OUTLINED_FUNCTION_0_23();
}

void DockSwipeEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_23();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BD04()
{
  return OUTLINED_FUNCTION_0_23();
}

uint64_t DockSwipeEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

uint64_t DockSwipeEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_23();
}

void DockSwipeEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_23();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BD58()
{
  return OUTLINED_FUNCTION_0_23();
}

uint64_t DockSwipeEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

uint64_t DockSwipeEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_23();
}

void DockSwipeEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_23();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BDAC()
{
  return OUTLINED_FUNCTION_0_23();
}

uint64_t DockSwipeEvent.progress.setter()
{
  return OUTLINED_FUNCTION_0_23();
}

void DockSwipeEvent.progress.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_1_23();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BDF8()
{
  return OUTLINED_FUNCTION_0_23();
}

uint64_t DockSwipeEvent.swipeMask.setter()
{
  return OUTLINED_FUNCTION_10_15();
}

void DockSwipeEvent.swipeMask.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_12_18(a1, a2);
  *(_DWORD *)(v2 + 8) = DockSwipeEvent.swipeMask.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BE44()
{
  return OUTLINED_FUNCTION_10_15();
}

uint64_t DockSwipeEvent.gestureMotion.setter()
{
  return OUTLINED_FUNCTION_2_19();
}

void DockSwipeEvent.gestureMotion.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_12_18(a1, a2);
  *(_WORD *)(v2 + 8) = DockSwipeEvent.gestureMotion.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BE90()
{
  return OUTLINED_FUNCTION_2_19();
}

uint64_t DockSwipeEvent.flavor.setter()
{
  return OUTLINED_FUNCTION_2_19();
}

void DockSwipeEvent.flavor.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_12_18(a1, a2);
  *(_WORD *)(v2 + 8) = DockSwipeEvent.flavor.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991BEE0()
{
  return OUTLINED_FUNCTION_2_19();
}

uint64_t sub_24991BEF4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = DockSwipeEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

void sub_24991BF18(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(double *)a1 = DockSwipeEvent.delta.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t sub_24991BF44()
{
  return DockSwipeEvent.delta.setter();
}

uint64_t DockSwipeEvent.delta.setter()
{
  OUTLINED_FUNCTION_14_16();
  IOHIDEventSetFloatValue();
  return OUTLINED_FUNCTION_7_21();
}

uint64_t (*DockSwipeEvent.delta.modify(_QWORD *a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[3] = a2;
  OUTLINED_FUNCTION_1_23();
  v4 = v3;
  OUTLINED_FUNCTION_13_16();
  v6 = v5;
  OUTLINED_FUNCTION_13_16();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  return sub_24991C014;
}

uint64_t sub_24991C014()
{
  OUTLINED_FUNCTION_14_16();
  IOHIDEventSetFloatValue();
  return OUTLINED_FUNCTION_7_21();
}

void sub_24991C064(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  DockSwipeEvent.x.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C084()
{
  return DockSwipeEvent.x.setter();
}

void sub_24991C090(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  DockSwipeEvent.y.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C0B0()
{
  return DockSwipeEvent.y.setter();
}

void sub_24991C0BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  DockSwipeEvent.z.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C0DC()
{
  return DockSwipeEvent.z.setter();
}

void sub_24991C0E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  DockSwipeEvent.progress.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C108()
{
  return DockSwipeEvent.progress.setter();
}

void sub_24991C114(uint64_t a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = DockSwipeEvent.swipeMask.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C134()
{
  return DockSwipeEvent.swipeMask.setter();
}

void sub_24991C140(uint64_t a1)
{
  _WORD *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = DockSwipeEvent.gestureMotion.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C160()
{
  return DockSwipeEvent.gestureMotion.setter();
}

void sub_24991C16C(uint64_t a1)
{
  _WORD *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = DockSwipeEvent.flavor.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24991C18C()
{
  return DockSwipeEvent.flavor.setter();
}

ValueMetadata *type metadata accessor for DockSwipeEvent()
{
  return &type metadata for DockSwipeEvent;
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_7_21()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  return IOHIDEventSetIntegerValue();
}

unint64_t OUTLINED_FUNCTION_11_17()
{
  return sub_24991BB48();
}

uint64_t OUTLINED_FUNCTION_12_18(_QWORD *a1, uint64_t a2)
{
  *a1 = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_15_14()
{
  return sub_249955D60();
}

uint64_t ScrollFilter.eventMask.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ScrollFilter.__allocating_init(service:)()
{
  uint64_t v0;
  unsigned __int8 v2;

  v2 = 0;
  v0 = OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_2_20(&v2);
  return v0;
}

uint64_t ScrollFilter.__allocating_init(platform:service:)(unsigned __int8 *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_2_20(a1);
  return v2;
}

_QWORD *ScrollFilter.init(platform:service:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  v5 = *a1;
  v6 = MEMORY[0x24BEE4AF8];
  v3[4] = sub_2498CF460(MEMORY[0x24BEE4AF8]);
  v3[5] = sub_2498CF460(v6);
  if (v5 == 1)
    v7 = 64;
  else
    v7 = sub_2498CF460((uint64_t)&unk_251AC4F78);
  v3[2] = v7;
  ObjectType = swift_getObjectType();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  v3[3] = v9;
  return v3;
}

uint64_t ScrollFilter.filterEvent(_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v16[2];

  v4 = *(_QWORD *)(v2 + 16);
  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  if ((HIDEventType.maskValue.getter(v7) & v4) != 0)
  {
    v8 = a2[3];
    v9 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v8);
    HIDEventProtocol.first<A>(_:)(v8, (uint64_t)&type metadata for ScrollEvent, v9, (uint64_t)&protocol witness table for ScrollEvent, (uint64_t)v16);
    if (v16[0])
    {
      v10 = (void *)ScrollReport.init(scrollEvent:)(v16[0]);
      v12 = v11;
      v16[0] = v10;
      v16[1] = v11;
      v13 = a2[3];
      v14 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v13);
      (*(void (**)(uint64_t, uint64_t))(v14 + 328))(v13, v14);
      __asm { BR              X10 }
    }
  }
  OUTLINED_FUNCTION_1_24();
  return 0;
}

uint64_t ScrollFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t ScrollFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  return MEMORY[0x24BEE4AF8];
}

uint64_t ScrollFilter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ScrollFilter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24991C6D4()
{
  return ScrollFilter.eventMask.getter();
}

uint64_t sub_24991C6F4(uint64_t a1, _QWORD *a2)
{
  return ScrollFilter.filterEvent(_:)(a1, a2) & 1;
}

uint64_t sub_24991C718(uint64_t a1, uint64_t a2)
{
  ScrollFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24991C740(uint64_t a1, uint64_t a2)
{
  ScrollFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for ScrollFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScrollFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScrollFilter.__allocating_init(platform:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CF8CC(v1, v0);
}

_QWORD *OUTLINED_FUNCTION_2_20(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  return ScrollFilter.init(platform:service:)(a1, v2, v1);
}

void sub_24991C7B4()
{
  OUTLINED_FUNCTION_9_13();
}

void sub_24991C824()
{
  OUTLINED_FUNCTION_9_13();
}

void sub_24991C86C()
{
  OUTLINED_FUNCTION_9_13();
}

uint64_t sub_24991C8A0(uint64_t a1, uint64_t a2)
{
  _BOOL4 v5;

  v5 = a1 != 7 || a2 < 0 || a2 > 255 || (unint64_t)(a2 - 232) < 0xFFFFFFFFFFFFFF19;
  return OUTLINED_FUNCTION_5_17(a2, v5);
}

uint64_t sub_24991C8C8(uint64_t a1, uint64_t a2)
{
  _BOOL4 v4;

  v4 = a1 != 65280 || a2 < 0 || a2 > 255;
  if (!(_BYTE)a2)
    v4 = 1;
  return OUTLINED_FUNCTION_5_17(a2, v4);
}

void sub_24991C8F0()
{
  OUTLINED_FUNCTION_9_13();
}

uint64_t sub_24991C930(uint64_t a1, uint64_t a2)
{
  _BOOL4 v5;

  v5 = a1 != 9 || a2 < 0 || a2 > 255 || a2 > 2uLL;
  return OUTLINED_FUNCTION_5_17(a2, v5);
}

uint64_t sub_24991C954(int a1)
{
  BOOL v1;
  int v2;
  int v3;

  v1 = (a1 - 15204352) >= 0xFF190000 && (a1 & 0xFF00FFFF) == 7;
  v2 = !v1;
  v3 = BYTE2(a1);
  if (!v1)
    v3 = 0;
  return v3 | (v2 << 8);
}

uint64_t sub_24991C988(unsigned int a1)
{
  unsigned int v1;
  int v3;

  v1 = HIWORD(a1);
  v3 = (unsigned __int16)a1 != 12 || a1 - 85262336 < 0xFAEC0000;
  if (v3)
    v1 = 0;
  return v1 | (v3 << 16);
}

uint64_t sub_24991C9C0(unsigned int a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  BOOL v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;

  v1 = a1 & 0xFF00FFFF;
  v2 = HIWORD(a1) - 193;
  v3 = BYTE2(a1);
  v4 = BYTE2(a1) - 6;
  v6 = __CFADD__(v4, 3);
  v5 = v4 < 0xFFFFFFFD;
  if (!v6)
    v3 = 0;
  v6 = __CFADD__(v2, 190);
  if (v2 >= 0xFFFFFF42)
    v7 = v3;
  else
    v7 = 0;
  v8 = !v6 || v5;
  v9 = v1 == 255;
  if (v1 == 255)
    v10 = v7;
  else
    v10 = 0;
  if (v9)
    v11 = v8;
  else
    v11 = 1;
  return v10 | (v11 << 8);
}

uint64_t sub_24991CA10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_249955CAC();
    result = sub_24991EFB8(v1);
    if (result < 0 || (v5 = result, result >= 1 << *(_BYTE *)(v1 + 32)))
    {
LABEL_13:
      __break(1u);
      return v11;
    }
    else
    {
      v6 = v1 + 64;
      v7 = v1 + 64;
      v8 = v1;
      while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v4 != *(_DWORD *)(v1 + 36))
          goto LABEL_17;
        v9 = v2;
        v10 = v4;
        sub_2498CB760();
        sub_2499558C8();
        sub_2499558C8();
        sub_2499558A4();
        sub_2499558A4();
        swift_bridgeObjectRelease();
        sub_2499558A4();
        v1 = v8;
        sub_2499558A4();
        swift_bridgeObjectRelease();
        sub_249955838();
        swift_bridgeObjectRelease();
        sub_249955C88();
        sub_249955CB8();
        sub_249955CC4();
        result = sub_249955C94();
        if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v8 + 32)))
          goto LABEL_18;
        v6 = v7;
        if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
          goto LABEL_19;
        if (v10 != *(_DWORD *)(v8 + 36))
          goto LABEL_20;
        result = sub_249955C04();
        --v2;
        if (v9 == 1)
          return v11;
        v5 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v4 = *(_DWORD *)(v8 + 36);
          if (result < 1 << *(_BYTE *)(v8 + 32))
            continue;
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
  return result;
}

void sub_24991CCA8(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 1)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CCE0(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 4)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CD18(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 17)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CD50(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 3)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

uint64_t sub_24991CD88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 3)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

void sub_24991CE10(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 5)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CE48(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 9)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CE80(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 7)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CEB8(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 11)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CEF0(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 39)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

void sub_24991CF28(_QWORD *a1)
{
  if (OUTLINED_FUNCTION_1_25(a1) == 22)
    OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_18_3();
}

uint64_t KeyboardFilter.debugState.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 32) = 0x6472616F6279654BLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1DF8);
  v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_24995A970;
  *(_QWORD *)(v1 + 32) = 0x6B636F4C73706143;
  *(_QWORD *)(v1 + 40) = 0xE800000000000000;
  OUTLINED_FUNCTION_6_12();
  *(_QWORD *)(v1 + 48) = sub_24995597C();
  strcpy((char *)(v1 + 56), "InterruptSeed");
  *(_WORD *)(v1 + 70) = -4864;
  OUTLINED_FUNCTION_6_12();
  *(_QWORD *)(v1 + 72) = sub_249955AF0();
  *(_QWORD *)(v1 + 80) = 0x657461745379654BLL;
  *(_QWORD *)(v1 + 88) = 0xE800000000000000;
  OUTLINED_FUNCTION_6_12();
  v2 = swift_bridgeObjectRetain();
  sub_24991CA10(v2);
  swift_bridgeObjectRelease();
  sub_24991D13C(0, &qword_2578A1E08);
  v3 = sub_249955928();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v3;
  sub_24991D13C(0, &qword_2578A1290);
  v4 = OUTLINED_FUNCTION_14_17();
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1E10);
  *(_QWORD *)(inited + 48) = v4;
  return OUTLINED_FUNCTION_14_17();
}

uint64_t sub_24991D13C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t KeyboardFilter.eventMask.getter()
{
  return 8;
}

uint64_t KeyboardFilter.capsLockState.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_12();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t KeyboardFilter.capsLockState.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_3_10();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*KeyboardFilter.capsLockState.modify())()
{
  OUTLINED_FUNCTION_3_10();
  return j__swift_endAccess;
}

uint64_t KeyboardFilter.interruptSeed.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_12();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_24991D2D8(char a1)
{
  if (!a1)
    return 1145128260;
  if (a1 == 1)
    return 20565;
  return 1314344772;
}

BOOL sub_24991D314(char a1, char a2)
{
  return a1 == a2;
}

uint64_t _s12UniversalHID13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0()
{
  return sub_249955FC4();
}

uint64_t sub_24991D348()
{
  sub_249955FB8();
  sub_249955FC4();
  return sub_249956000();
}

uint64_t sub_24991D38C()
{
  return sub_24991D348();
}

uint64_t sub_24991D394()
{
  return _s12UniversalHID13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_24991D39C()
{
  char *v0;

  return sub_24991D2D8(*v0);
}

uint64_t sub_24991D3A4(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_2498DFB54((a1 << 16) | 7u), (v6 & 1) != 0))
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v5);
  else
    v7 = 1;
  swift_endAccess();
  return v7;
}

uint64_t sub_24991D420(unsigned int a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_2498DFB54(a1), (v6 & 1) != 0))
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v5);
  else
    v7 = 1;
  swift_endAccess();
  return v7;
}

uint64_t sub_24991D498(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_2498DFB54((a1 << 16) | 0xFFu), (v6 & 1) != 0))
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v5);
  else
    v7 = 1;
  swift_endAccess();
  return v7;
}

uint64_t sub_24991D514(unsigned __int8 a1, unsigned int a2)
{
  int v4;

  v4 = a1;
  swift_beginAccess();
  if (v4 == 1)
    sub_2498E08B8(a2);
  else
    sub_2498E0AD0(a1, a2);
  return swift_endAccess();
}

void KeyboardFilter.__allocating_init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  KeyboardFilter.init(logger:service:)(a1, a2, a3);
  OUTLINED_FUNCTION_18_3();
}

uint64_t KeyboardFilter.init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v4 = v3;
  *(_BYTE *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 24) = xmmword_24995A980;
  *(_BYTE *)(v4 + 40) = 0;
  v8 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
  sub_2498CC498();
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + v8) = sub_2499557C0();
  v10 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask;
  *(_QWORD *)(v4 + v10) = sub_2498CF460(v9);
  v11 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask;
  *(_QWORD *)(v4 + v11) = sub_2498CF460(v9);
  v12 = v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_logger;
  v13 = sub_249955718();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  v15 = (_QWORD *)(v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_service);
  *v15 = a2;
  v15[1] = a3;
  ObjectType = swift_getObjectType();
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  swift_unknownObjectRetain();
  v18 = v17(ObjectType, a3);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_serviceID) = v18;
  return v4;
}

BOOL sub_24991D71C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask);
  return (sub_2498CF460((uint64_t)&unk_251AC4FC8) & v1) != 0;
}

BOOL KeyboardFilter.filterEvent(_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t IntegerValue;
  id v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  unsigned __int8 v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int128 v28;
  _QWORD v29[5];

  v3 = v2;
  sub_2498CF8CC((uint64_t)a2, (uint64_t)v29);
  v6 = sub_24991CD88(v29);
  if (!v6)
    goto LABEL_4;
  v7 = (void *)v6;
  if (IOHIDEventGetTimeStamp() == *(_QWORD *)(v3 + 32))
  {

LABEL_4:
    OUTLINED_FUNCTION_16_11();
    return 0;
  }
  IntegerValue = IOHIDEventGetIntegerValue();
  v10 = v7;
  v11 = IOHIDEventGetIntegerValue();
  v12 = IOHIDEventGetIntegerValue();

  sub_24991DD70();
  OUTLINED_FUNCTION_6_12();
  *(_BYTE *)(v3 + 40) = *(_BYTE *)(v3 + 16);
  v13 = sub_24991D420(v11 | (v12 << 16));
  if (!IntegerValue)
  {
    if (!v13)
    {
      v13 = 0;
      v16 = 1;
      v27 = 1;
      v15 = 1;
      goto LABEL_34;
    }
    if (v13 != 1)
    {
      v15 = 0;
      v16 = 1;
      v27 = 1;
      goto LABEL_34;
    }
    v14 = v13;
LABEL_27:
    v19 = v14;
    goto LABEL_42;
  }
  v14 = v13;
  if (v13)
  {
    if (v13 != 2)
    {
      if (v13 == 1)
      {
        v15 = 0;
        v13 = 1;
        v27 = 2;
        v16 = 2;
        if (v11 != 7 || v12 != 42)
          goto LABEL_34;
        OUTLINED_FUNCTION_10_16(0xE3u);
        OUTLINED_FUNCTION_8_15();
        if (v22 || (OUTLINED_FUNCTION_10_16(0xE7u), OUTLINED_FUNCTION_8_15(), v22))
        {
          OUTLINED_FUNCTION_10_16(0xE0u);
          OUTLINED_FUNCTION_8_15();
          if (v22 || (OUTLINED_FUNCTION_10_16(0xE4u), OUTLINED_FUNCTION_8_15(), v22))
          {
            OUTLINED_FUNCTION_10_16(0xE2u);
            OUTLINED_FUNCTION_8_15();
            if (v22 || (OUTLINED_FUNCTION_10_16(0xE6u), OUTLINED_FUNCTION_8_15(), v22))
            {
              OUTLINED_FUNCTION_3_10();
              v17 = *(_QWORD *)(v3 + 24) + 1;
              do
              {
                v18 = v17;
                v17 = 1;
              }
              while (!v18);
              *(_QWORD *)(v3 + 24) = v18;
              sub_24991D514(0, 0x2A0007u);
              *(_QWORD *)(a1 + 32) = 0;
              *(_OWORD *)a1 = 0u;
              *(_OWORD *)(a1 + 16) = 0u;

              return 0;
            }
          }
        }
        v15 = 0;
        v13 = 1;
        v16 = 2;
      }
      else
      {
        v16 = 2;
        v15 = 0;
      }
      v27 = 2;
LABEL_34:
      v14 = v13;
      sub_24991D514(v16, v11 | (v12 << 16));
      goto LABEL_35;
    }
    goto LABEL_27;
  }
  v27 = 2;
  v15 = 1;
LABEL_35:
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0)
  {
    if ((v15 & 1) != 0)
    {
LABEL_41:
      v19 = v27;
      goto LABEL_42;
    }
  }
  else if (!sub_24991D71C() || v15 & 1 | ((OUTLINED_FUNCTION_18_16() & 1) == 0))
  {
    goto LABEL_41;
  }
  if ((sub_24991C954(v11 | (v12 << 16)) & 0x100) == 0)
  {
    swift_bridgeObjectRelease();
    sub_24991DF90(&v28);
    v20 = a2[3];
    v21 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 328))(v20, v21);
    __asm { BR              X12 }
  }
  if ((sub_24991C988(v11 | (v12 << 16)) & 0x10000) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
    v24 = OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_11_18((__n128 *)v24, (__n128)xmmword_2499568A0);
    sub_24991E044();
    *(_OWORD *)(v24 + 32) = v28;
    goto LABEL_41;
  }
  v19 = v27;
  if ((sub_24991C9C0(v11 | (v12 << 16)) & 0x100) != 0)
  {
    sub_24991C7B4();
    if ((v26 & 0x100) != 0)
      goto LABEL_42;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
    v25 = OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_11_18((__n128 *)v25, (__n128)xmmword_2499568A0);
    sub_24991E1AC();
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
    v25 = OUTLINED_FUNCTION_1_7();
    OUTLINED_FUNCTION_11_18((__n128 *)v25, (__n128)xmmword_2499568A0);
    sub_24991E0F8();
  }
  *(_OWORD *)(v25 + 32) = v28;
LABEL_42:
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask) & 8) != 0 && (v14 || v19 != 1))
  {
    v23 = OUTLINED_FUNCTION_18_16();

    if ((v23 & 1) == 0)
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return v19 == 2 && v14 == 1;
    }
  }
  else
  {

  }
  OUTLINED_FUNCTION_16_11();
  return v19 == 2 && v14 == 1;
}

void sub_24991DD70()
{
  uint64_t v0;
  _BYTE *v1;
  int v2;
  char v3;
  char v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;

  v1 = (_BYTE *)(v0 + 16);
  swift_beginAccess();
  v2 = *(unsigned __int8 *)(v0 + 16);
  v3 = sub_24991EBA0();
  if (v2 != (v3 & 1))
  {
    v4 = v3;
    swift_retain();
    v5 = sub_249955700();
    v6 = sub_249955A24();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      *(_DWORD *)v7 = 134218496;
      sub_249955AFC();
      swift_release();
      *(_WORD *)(v7 + 12) = 1024;
      sub_249955AFC();
      *(_WORD *)(v7 + 18) = 1024;
      sub_249955AFC();
      _os_log_impl(&dword_2498C7000, v5, v6, "%llx: Caps Lock: %{BOOL}d -> %{BOOL}d", (uint8_t *)v7, 0x18u);
      MEMORY[0x24BCFB9B8](v7, -1, -1);
    }
    else
    {
      swift_release();
    }

    *v1 = v4 & 1;
  }
}

uint64_t sub_24991DEF4(unsigned int a1)
{
  uint64_t v1;
  int v2;
  char v3;
  uint64_t result;
  unsigned int v5;
  char v6;

  if ((a1 & 0xFF00FFFF) != 7)
    return 0;
  v1 = HIWORD(a1);
  if ((v1 - 232) < 0xFFFFFF19)
    return 0;
  if (qword_2578A07C8 != -1)
  {
    v5 = HIWORD(a1);
    v6 = BYTE2(a1);
    swift_once();
    v1 = v5;
    BYTE2(a1) = v6;
  }
  v2 = BYTE2(a1);
  v3 = sub_249932C48(v1, (uint64_t)off_2578A1CB8);
  result = 1;
  if (v2 != 57 && (v3 & 1) == 0)
    return 0;
  return result;
}

double sub_24991DF90@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[7];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v4 = *v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_24991F1B8;
  *(_QWORD *)(v5 + 24) = v1;
  v7[0] = v4;
  v7[1] = sub_24991F2FC;
  v7[2] = v5;
  v7[3] = sub_24991F0A8;
  v7[4] = 0;
  v7[5] = sub_24991F0B4;
  v7[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_249951DE8(v7, a1);
}

uint64_t sub_24991E044()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[7];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v2 = *v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_24991F274;
  *(_QWORD *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_24991F27C;
  v5[2] = v3;
  v5[3] = sub_24991F13C;
  v5[4] = 0;
  v5[5] = sub_24991F154;
  v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_249951C18(v5);
}

uint64_t sub_24991E0F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[7];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v2 = *v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_24991F284;
  *(_QWORD *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_24991F2FC;
  v5[2] = v3;
  v5[3] = sub_24991F0A8;
  v5[4] = 0;
  v5[5] = sub_24991F0B4;
  v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_249951A94(v5);
}

uint64_t sub_24991E1AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[7];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  v2 = *v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_24991F28C;
  *(_QWORD *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_24991F294;
  v5[2] = v3;
  v5[3] = sub_24991F064;
  v5[4] = 0;
  v5[5] = sub_24991F070;
  v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_249951910(v5);
}

uint64_t sub_24991E260(unsigned int a1, char a2, uint64_t a3)
{
  unsigned int v4;
  int v5;

  if (a2 == 2)
  {
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0
      || sub_24991D71C() && (sub_24991DEF4(a1) & 1) != 0)
    {
      sub_24991C7B4();
      v5 = (v4 >> 8) & 1;
    }
    else
    {
      LOBYTE(v4) = 0;
      v5 = 1;
    }
  }
  else
  {
    LOBYTE(v4) = 0;
    v5 = 1;
  }
  return v4 | (v5 << 8);
}

uint64_t sub_24991E2E8(unsigned int a1, char a2, uint64_t a3)
{
  char v4;
  int v5;
  int v6;
  unsigned int v7;
  BOOL v8;
  _BOOL4 v9;

  if (a2 != 2)
  {
    v5 = 0;
    v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) == 0)
  {
    if (sub_24991D71C())
    {
      v4 = sub_24991DEF4(a1);
      v5 = 0;
      v6 = 1;
      if ((v4 & 1) == 0 || (a1 & 0xFF00FFFF) != 0xFF)
        return v5 | (v6 << 8);
      goto LABEL_9;
    }
LABEL_14:
    v5 = 0;
    v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((a1 & 0xFF00FFFF) != 0xFF)
    goto LABEL_14;
LABEL_9:
  v5 = BYTE2(a1);
  v7 = BYTE2(a1) - 6;
  v8 = __CFADD__(v7, 3);
  v9 = v7 < 0xFFFFFFFD;
  if (!v8)
    v5 = 0;
  if (BYTE2(a1) - 193 >= 0xFFFFFF42)
  {
    v6 = v9;
  }
  else
  {
    v5 = 0;
    v6 = 1;
  }
  return v5 | (v6 << 8);
}

uint64_t sub_24991E3A8(unsigned int a1, char a2, uint64_t a3)
{
  unsigned int v4;
  int v6;

  if (a2 == 2)
  {
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0
      || sub_24991D71C() && (sub_24991DEF4(a1) & 1) != 0)
    {
      v4 = HIWORD(a1);
      if (HIWORD(a1) > 0x514u)
        v4 = 0;
      if (a1 >= 0x10000 && (unsigned __int16)a1 == 12)
      {
        v6 = HIWORD(a1) > 0x514u;
      }
      else
      {
        v4 = 0;
        v6 = 1;
      }
    }
    else
    {
      v4 = 0;
      v6 = 1;
    }
  }
  else
  {
    v4 = 0;
    v6 = 1;
  }
  return v4 | (v6 << 16);
}

uint64_t sub_24991E444(unsigned int a1, char a2, uint64_t a3)
{
  char v4;
  unsigned __int8 v5;
  int v6;
  unsigned int v7;

  if (a2 != 2)
  {
    v5 = 0;
    v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) == 0)
  {
    if (sub_24991D71C())
    {
      v4 = sub_24991DEF4(a1);
      v5 = 0;
      v6 = 1;
      if ((v4 & 1) == 0 || (a1 & 0xFF00FFFF) != 7)
        return v5 | (v6 << 8);
      goto LABEL_9;
    }
LABEL_17:
    v5 = 0;
    v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((a1 & 0xFF00FFFF) != 7)
    goto LABEL_17;
LABEL_9:
  v7 = HIWORD(a1);
  if (BYTE2(a1) > 0xE7u)
    LOBYTE(v7) = 0;
  if (BYTE2(a1))
    v5 = v7;
  else
    v5 = 0;
  if (BYTE2(a1))
    v6 = BYTE2(a1) > 0xE7u;
  else
    v6 = 1;
  return v5 | (v6 << 8);
}

double KeyboardFilter.updateCopyMask(oldValue:newValue:)(int a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t i;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) = a2;
  if ((a1 & 8) != 0)
  {
    if ((a1 & 0x20000) != 0 || (a2 & 0x20000) == 0)
      return result;
    goto LABEL_8;
  }
  if ((a1 & 0x20000) != 0)
  {
    if ((a2 & 8) == 0)
      return result;
  }
  else if ((a2 & 8) == 0)
  {
    if ((a2 & 0x20000) == 0)
      return result;
LABEL_8:
    v3 = 0;
    goto LABEL_11;
  }
  v3 = 1;
LABEL_11:
  v4 = v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
  OUTLINED_FUNCTION_6_12();
  if (*(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    if (qword_2578A0750 != -1)
      swift_once();
    HIDReportDescriptor.reportBitCount(for:)();
    *(_QWORD *)&v19 = HIDReport.init(bitCount:id:)(v6, 1);
    *((_QWORD *)&v19 + 1) = v7;
    if (qword_2578A07C8 != -1)
      swift_once();
    v8 = off_2578A1CB8;
    v9 = *((_QWORD *)off_2578A1CB8 + 2);
    if (v9)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v9; ++i)
      {
        sub_24991D3A4(v8[i + 32]);
        OUTLINED_FUNCTION_8_15();
        if (v11)
          __asm { BR              X11 }
      }
      swift_bridgeObjectRelease();
    }
    if (v3)
    {
      sub_24991D3A4(0x39u);
      OUTLINED_FUNCTION_8_15();
      if (v11)
      {
        OUTLINED_FUNCTION_38_3();
        OUTLINED_FUNCTION_48_2();
        OUTLINED_FUNCTION_38_3();
        OUTLINED_FUNCTION_48_2();
        sub_24995561C();
      }
      if (qword_2578A0740 != -1)
        swift_once();
      HIDReportDescriptor.reportBitCount(for:)();
      v13 = HIDReport.init(bitCount:id:)(v12, 4);
      v15 = v14;
      v18 = v14;
      sub_24991D498(3u);
      OUTLINED_FUNCTION_8_15();
      if (v11)
      {
        AppleVendorTopCaseReport.update(with:)();
        v15 = v18;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
      v16 = swift_allocObject();
      *(_QWORD *)&result = 2;
      *(_OWORD *)(v16 + 16) = xmmword_249959020;
      *(_OWORD *)(v16 + 32) = v19;
      *(_QWORD *)(v16 + 48) = v13;
      *(_QWORD *)(v16 + 56) = v15;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C98);
      v17 = OUTLINED_FUNCTION_1_7();
      *(_QWORD *)&result = 1;
      *(_OWORD *)(v17 + 16) = xmmword_2499568A0;
      *(_OWORD *)(v17 + 32) = v19;
    }
  }
  return result;
}

uint64_t KeyboardFilter.updateFilterMask(oldValue:newValue:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask) = a2;
  v3 = MEMORY[0x24BEE4AF8];
  if ((a1 & 8) == 0 && (a2 & 8) != 0)
  {
    v4 = v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
    OUTLINED_FUNCTION_6_12();
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      v5 = mach_absolute_time();
      *(_QWORD *)(v2 + 32) = v5;
      MEMORY[0x24BDAC7A8](v5);
      v6 = swift_bridgeObjectRetain();
      v3 = sub_24991E9C8(v6, (uint64_t (*)(_QWORD, _QWORD))sub_24991ED68);
      swift_bridgeObjectRelease();
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return v3;
}

uint64_t sub_24991E930(unsigned int a1, char a2)
{
  uint64_t KeyboardEvent;

  if (a2 != 2 || (sub_24991DEF4(a1) & 1) != 0)
    return 0;
  sub_24991D514(0, a1);
  KeyboardEvent = IOHIDEventCreateKeyboardEvent();
  IOHIDEventSetSenderID();
  return KeyboardEvent;
}

uint64_t sub_24991E9C8(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  sub_2498E1834(v15, a1);
  v3 = v15[0];
  v14 = v15[1];
  v4 = v15[3];
  v5 = v15[4];
  v6 = (unint64_t)(v15[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_20;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v6)
      goto LABEL_24;
    v11 = *(_QWORD *)(v14 + 8 * v10);
    v12 = v4 + 1;
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_24;
      v11 = *(_QWORD *)(v14 + 8 * v12);
      if (!v11)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_24;
        v11 = *(_QWORD *)(v14 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_24;
          v11 = *(_QWORD *)(v14 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_24;
            v11 = *(_QWORD *)(v14 + 8 * v12);
            if (!v11)
            {
              v13 = v4 + 6;
              while (v13 < v6)
              {
                v11 = *(_QWORD *)(v14 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_19;
                }
              }
LABEL_24:
              swift_release();
              return v16;
            }
          }
        }
      }
    }
LABEL_19:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v4 = v12;
LABEL_20:
    result = a2(*(unsigned int *)(*(_QWORD *)(v3 + 48) + 4 * v9), *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v9));
    if (result)
    {
      MEMORY[0x24BCFAB24]();
      if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_24995594C();
      sub_249955964();
      result = sub_249955940();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24991EBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t result;
  unsigned __int8 v4;
  _QWORD v5[4];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_service + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v1 + 48))(v5, 0xD000000000000010, 0x800000024995EE80, ObjectType, v1);
  if (v5[3])
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v4;
  }
  else
  {
    sub_24991F2AC((uint64_t)v5);
    return 0;
  }
  return result;
}

uint64_t KeyboardFilter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_logger;
  v2 = sub_249955718();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KeyboardFilter.__deallocating_deinit()
{
  KeyboardFilter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24991ECD0()
{
  return KeyboardFilter.eventMask.getter();
}

BOOL sub_24991ECE4(uint64_t a1, _QWORD *a2)
{
  return KeyboardFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_24991ED08()
{
  return KeyboardFilter.debugState.getter();
}

double sub_24991ED28(int a1, uint64_t a2)
{
  return KeyboardFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_24991ED48(char a1, uint64_t a2)
{
  return KeyboardFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_24991ED68(unsigned int a1, char a2)
{
  return sub_24991E930(a1, a2);
}

uint64_t sub_24991ED70()
{
  return type metadata accessor for KeyboardFilter();
}

uint64_t type metadata accessor for KeyboardFilter()
{
  uint64_t result;

  result = qword_2578A1E68;
  if (!qword_2578A1E68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24991EDB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249955718();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for KeyboardFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyboardFilter.__allocating_init(logger:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for KeyboardFilter.KeyState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24991EEC0 + 4 * byte_24995A99D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24991EEF4 + 4 * byte_24995A998[v4]))();
}

uint64_t sub_24991EEF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24991EEFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24991EF04);
  return result;
}

uint64_t sub_24991EF10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24991EF18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24991EF1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24991EF24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyboardFilter.KeyState()
{
  return &type metadata for KeyboardFilter.KeyState;
}

unint64_t sub_24991EF44()
{
  unint64_t result;

  result = qword_2578A1F38;
  if (!qword_2578A1F38)
  {
    result = MEMORY[0x24BCFB904](&unk_24995AAAC, &type metadata for KeyboardFilter.KeyState);
    atomic_store(result, (unint64_t *)&qword_2578A1F38);
  }
  return result;
}

BOOL sub_24991EF80(__int16 a1)
{
  return (a1 & 0x100) == 0;
}

BOOL sub_24991EF8C(int a1)
{
  return (a1 & 0x10000) == 0;
}

uint64_t sub_24991EF98(uint64_t result)
{
  if ((result & 0x100) == 0)
    return result;
  __break(1u);
  return result;
}

uint64_t sub_24991EFAC(uint64_t result)
{
  if ((result & 0x10000) != 0)
    __break(1u);
  return result;
}

uint64_t sub_24991EFB8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_24991F038@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_24991E260(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_24991F064(unsigned __int8 *a1)
{
  return sub_24991F22C(a1, (uint64_t (*)(_QWORD))sub_24991EF80);
}

void sub_24991F070(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_24991F244(a1, sub_24991EF98, a2);
}

uint64_t sub_24991F07C@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_24991E2E8(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_24991F0A8(unsigned __int8 *a1)
{
  return sub_24991F22C(a1, (uint64_t (*)(_QWORD))sub_24991F2EC);
}

void sub_24991F0B4(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_24991F244(a1, sub_24991F300, a2);
}

uint64_t sub_24991F0C0@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = sub_24991E3A8(a1, a2, a3);
  *(_WORD *)a4 = result;
  *(_BYTE *)(a4 + 2) = BYTE2(result) & 1;
  return result;
}

_QWORD *sub_24991F0EC@<X0>(unsigned int *a1@<X0>, _QWORD *(*a2)(uint64_t *__return_ptr, _QWORD, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *result;
  char v5;
  uint64_t v6;

  result = a2(&v6, *a1, *((unsigned __int8 *)a1 + 4));
  v5 = BYTE2(v6);
  *(_WORD *)a3 = v6;
  *(_BYTE *)(a3 + 2) = v5;
  return result;
}

BOOL sub_24991F13C(unsigned __int16 *a1)
{
  return sub_24991EF8C(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

uint64_t sub_24991F154@<X0>(unsigned __int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result;

  result = sub_24991EFAC(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
  *a2 = result;
  return result;
}

uint64_t sub_24991F18C@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_24991E444(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_24991F1B8@<X0>(unsigned int a1@<W0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_24991F18C(a1, a2, v3, a3);
}

void sub_24991F1C0(unsigned int *a1@<X0>, void (*a2)(uint64_t *__return_ptr, _QWORD, _QWORD)@<X1>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t v5;

  a2(&v5, *a1, *((unsigned __int8 *)a1 + 4));
  v4 = BYTE1(v5);
  *a3 = v5;
  a3[1] = v4;
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_24991F208()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24991F22C(unsigned __int8 *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1 | (a1[1] << 8));
}

void sub_24991F244(unsigned __int8 *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  *a3 = a2(*a1 | (a1[1] << 8));
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_24991F274@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_24991F0C0(a1, a2, v3, a3);
}

_QWORD *sub_24991F27C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24991F0EC(a1, *(_QWORD *(**)(uint64_t *__return_ptr, _QWORD, _QWORD))(v2 + 16), a2);
}

uint64_t sub_24991F284@<X0>(unsigned int a1@<W0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_24991F07C(a1, a2, v3, a3);
}

uint64_t sub_24991F28C@<X0>(unsigned int a1@<W0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_24991F038(a1, a2, v3, a3);
}

void sub_24991F294(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_24991F1C0(a1, *(void (**)(uint64_t *__return_ptr, _QWORD, _QWORD))(v2 + 16), a2);
}

uint64_t sub_24991F2AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1280);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 352))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_1_25(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_5_17@<X0>(unsigned __int8 a1@<W1>, int a2@<W8>)
{
  int v2;

  v2 = a1;
  if (a2)
    v2 = 0;
  return v2 | (a2 << 8);
}

uint64_t OUTLINED_FUNCTION_10_16(unsigned __int8 a1)
{
  return sub_24991D3A4(a1);
}

__n128 *OUTLINED_FUNCTION_11_18(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_14_17()
{
  return sub_2499557C0();
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2498CF8CC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  unsigned int v0;

  return sub_24991DEF4(v0);
}

void HIDReport.subscript.getter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D28);
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_21_7();
  MEMORY[0x24BDAC7A8](v6);
  sub_2499556E8();
  if ((a1 & 7) == 0)
    __asm { BR              X11 }
  OUTLINED_FUNCTION_0_25();
  __break(1u);
  JUMPOUT(0x24991F5A4);
}

uint64_t sub_24991F758(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v4[5];

  if (__OFADD__(a4, 16))
  {
    __break(1u);
  }
  else if (a4 + 16 >= a4)
  {
    v4[3] = MEMORY[0x24BEE1F38];
    v4[4] = MEMORY[0x24BDD04B0];
    v4[0] = result;
    v4[1] = a2;
    __swift_project_boxed_opaque_existential_1(v4, MEMORY[0x24BEE1F38]);
    sub_249955604();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  __break(1u);
  return result;
}

void (*HIDReport.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = OUTLINED_FUNCTION_21_7();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  HIDReport.subscript.getter(a2, *v2, v2[1]);
  return sub_24991F878;
}

void sub_24991F878(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    HIDReport.subscript.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    HIDReport.subscript.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return sub_249955D6C();
}

id HIDVirtualEventService.bridgedValue.getter()
{
  void *v0;

  return v0;
}

CFStringRef HIDVirtualEventService.logDescription.getter()
{
  const void *v0;
  CFStringRef result;
  __CFString *v2;
  uint64_t v3;

  result = CFCopyDescription(v0);
  if (result)
  {
    v2 = (__CFString *)result;
    v3 = sub_249955844();

    return (CFStringRef)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24991F988()
{
  void *v0;

  return objc_msgSend(v0, sel_delegate);
}

uint64_t sub_24991F9B0(uint64_t a1)
{
  void *v1;

  objc_msgSend(v1, sel_setDelegate_, a1);
  return swift_unknownObjectRelease();
}

uint64_t (*sub_24991F9E4(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_delegate);
  return sub_24991FA2C;
}

uint64_t sub_24991FA2C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 8), sel_setDelegate_, *(_QWORD *)a1);
  return swift_unknownObjectRelease();
}

id sub_24991FA64()
{
  void *v0;

  return objc_msgSend(v0, sel_serviceID);
}

uint64_t sub_24991FA78(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD v5[6];

  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_2498EDF40;
  v5[3] = &block_descriptor_2;
  v3 = _Block_copy(v5);
  swift_retain();
  objc_msgSend(v2, sel_setCancelHandler_, v3);
  _Block_release(v3);
  return swift_release();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.logDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.serviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.setCancelHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.setDispatchQueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.dispatchEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

id sub_24991FB6C(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_dispatchEvent_, a1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

BOOL HIDVirtualService.capsLockEngaged.getter()
{
  return BKSHIDServicesIsCapsLockLightOn() != 0;
}

void HIDVirtualService.setClientCapsLockEnaged(_:client:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;

  v4 = OUTLINED_FUNCTION_1_26();
  swift_beginAccess();
  if (v4 == *(id *)(v2 + 48))
  {
    v5 = (void *)sub_24995597C();
    v6 = (void *)sub_249955838();
    objc_msgSend(a2, sel_setProperty_forKey_, v5, v6);

  }
  else
  {
    sub_24991FD7C();
    sub_249955C34();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_26();
    OUTLINED_FUNCTION_0_26();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    OUTLINED_FUNCTION_0_26();
    sub_2499558A4();
    swift_bridgeObjectRelease();
    sub_2499558A4();
    sub_24993001C(-6708, 0xD000000000000018, 0x800000024995EF00);
    swift_willThrow();
  }
}

unint64_t sub_24991FD7C()
{
  unint64_t result;

  result = qword_2578A1F40;
  if (!qword_2578A1F40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578A1F40);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return sub_249955EF8();
}

id OUTLINED_FUNCTION_1_26()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1782));
}

void HIDReport.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X11 }
}

BOOL sub_24991FE34(uint64_t a1, int a2)
{
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
LABEL_3:
    __break(1u);
    JUMPOUT(0x24991FE5CLL);
  }
  if (__OFADD__(a1, 8 * a2))
    goto LABEL_3;
  return (sub_2499556A0() & (1 << (a1 & 7))) != 0;
}

void HIDReport.subscript.setter()
{
  __asm { BR              X12 }
}

void (*HIDReport.subscript.modify(uint64_t a1, uint64_t a2))()
{
  uint64_t *v2;
  char v4;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v2;
  HIDReport.subscript.getter(a2, *v2, v2[1]);
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return sub_24991FF6C;
}

void sub_24991FF6C()
{
  HIDReport.subscript.setter();
}

uint64_t static ReportID.keyboard.getter()
{
  return 1;
}

uint64_t static ReportID.consumer.getter()
{
  return 2;
}

uint64_t static ReportID.appleVendorKeyboard.getter()
{
  return 3;
}

uint64_t static ReportID.appleVendorTopCase.getter()
{
  return 4;
}

uint64_t static ReportID.pointer.getter()
{
  return 5;
}

uint64_t static ReportID.button.getter()
{
  return 6;
}

uint64_t static ReportID.scroll.getter()
{
  return 7;
}

uint64_t static ReportID.digitizer.getter()
{
  return 9;
}

uint64_t static ReportID.serviceFilter.getter()
{
  return 10;
}

uint64_t static ReportID.dockSwipe.getter()
{
  return 11;
}

uint64_t static ReportID.fluidTouchGesture.getter()
{
  return 12;
}

uint64_t static ReportID.navigationSwipe.getter()
{
  return 13;
}

uint64_t static ReportID.zoomToggle.getter()
{
  return 14;
}

uint64_t static ReportID.scale.getter()
{
  return 15;
}

uint64_t static ReportID.rotation.getter()
{
  return 16;
}

uint64_t static ReportID.translation.getter()
{
  return 17;
}

uint64_t static ReportID.gameController.getter()
{
  return 18;
}

uint64_t static ReportID.absolutePointer.getter()
{
  return 19;
}

uint64_t static ReportID.genericGesture.getter()
{
  return 20;
}

void HIDReport.reportID.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_28_6(a1, a2);
  v3 = OUTLINED_FUNCTION_8_16();
  sub_2498E21BC(v3, v4);
  OUTLINED_FUNCTION_0_8(v2);
  OUTLINED_FUNCTION_18_3();
}

uint64_t HIDReport.data.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_28_6(a1, a2);
  return OUTLINED_FUNCTION_8_16();
}

void HIDReport.hasStorage<A>(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

void sub_2499200D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (((unint64_t)BYTE6(a4) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (__OFADD__(v4, sub_249955D0C()))
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x249920144);
  }
  OUTLINED_FUNCTION_18_3();
}

BOOL HIDReport.subscript.getter()
{
  char v0;
  Swift::Int v1;

  OUTLINED_FUNCTION_10_17();
  HIDReport.offset(for:)(v1);
  return (sub_2499556A0() & (1 << (v0 & 7))) != 0;
}

unint64_t HIDReport.subscript.setter(unint64_t result, Swift::Int a2)
{
  if (result > 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_6_21(a2);
    OUTLINED_FUNCTION_7_22();
    return sub_24995561C();
  }
  return result;
}

uint64_t HIDReport.withUnsafeBytes<A>(_:)()
{
  return sub_249955628();
}

uint64_t HIDReport.withUnsafeMutableBytes<A>(_:)()
{
  return sub_249955640();
}

uint64_t HIDReport.init(bitCount:id:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  if ((a1 & 7) != 0)
    v4 = (a1 >> 3) + 1;
  else
    v4 = a1 >> 3;
  v7[0] = MEMORY[0x24BCFA86C](v4);
  v7[1] = v5;
  sub_249923708((uint64_t)v7);
  result = v7[0];
  if (a1 < 8)
  {
    if (!a2)
      return result;
    __break(1u);
  }
  sub_24995561C();
  return v7[0];
}

void HIDReport.initialize(from:)()
{
  OUTLINED_FUNCTION_19_3();
  __asm { BR              X11 }
}

uint64_t sub_2499202FC()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_249920334 + *((int *)qword_249920428 + (*(_QWORD *)(v0 + 8) >> 62))))();
}

uint64_t sub_249920344@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  uint64_t result;

  if (a1 < BYTE6(v5))
    return 0;
  OUTLINED_FUNCTION_94_0();
  sub_2498E21BC(v3, v1);
  v7 = v6;
  OUTLINED_FUNCTION_0_8(v3);
  sub_2498CAC78(v4, v5);
  sub_2498E21BC(v4, v5);
  v9 = v8;
  OUTLINED_FUNCTION_98_0();
  if ((v7 & 0x100) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_94_0();
      OUTLINED_FUNCTION_98_0();
      *v2 = v3;
      v2[1] = v1;
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((v9 & 0x100) == 0 && v7 == v9)
    goto LABEL_7;
  return result;
}

uint64_t HIDReport.startIndex.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249920448 + dword_24992047C[a2 >> 62]))();
}

uint64_t sub_24992045C()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_2_1();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x24992047CLL);
  }
  return j__OUTLINED_FUNCTION_20_14(v0);
}

uint64_t HIDReport.storage.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_28_6(a1, a2);
  return OUTLINED_FUNCTION_8_16();
}

uint64_t HIDReport.storage.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_19_3();
  result = sub_2498CACBC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v0;
  return result;
}

uint64_t (*HIDReport.storage.modify())()
{
  return nullsub_1;
}

uint64_t HIDReport.reportID.setter()
{
  return sub_24995561C();
}

void HIDReport.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_10_17();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v0);
  sub_249955694();
  v6 = OUTLINED_FUNCTION_15_15();
  v7(v6);
  OUTLINED_FUNCTION_20_3();
}

void sub_249920588(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDReport.reportID.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDReport.reportID.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  *(_QWORD *)a1 = v1;
  v3 = OUTLINED_FUNCTION_15_15();
  sub_2498CAC78(v3, v4);
  v5 = OUTLINED_FUNCTION_15_15();
  sub_2498E21BC(v5, v6);
  v8 = v7;
  v9 = OUTLINED_FUNCTION_15_15();
  sub_2498CACBC(v9, v10);
  if ((v8 & 0x100) != 0)
    v11 = 0;
  else
    v11 = v8;
  *(_BYTE *)(a1 + 8) = v11;
  OUTLINED_FUNCTION_18_3();
}

void sub_24992060C()
{
  sub_24995561C();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249920630()
{
  return HIDReport.withUnsafeBytes<A>(_:)();
}

void static HIDReport.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249920694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_94_0();
  return sub_249922220(v1, v3 & 0xFFFFFFFFFFFFFFLL, v2, v0) & 1;
}

void sub_249920778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2499207D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __s2, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _BYTE *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t result;
  BOOL v29;
  char v30;
  char v31;
  uint64_t v32;
  __int16 v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v32 = v24;
  v33 = v26;
  v34 = BYTE2(v26);
  v35 = BYTE3(v26);
  v36 = BYTE4(v26);
  v37 = BYTE5(v26);
  if (!v23)
  {
    __break(1u);
    JUMPOUT(0x249920994);
  }
  if (BYTE6(v26) >= v25 - (uint64_t)v23)
    v27 = v25 - (_QWORD)v23;
  else
    v27 = BYTE6(v26);
  result = memcmp(v23, &v32, v27);
  if ((_DWORD)result)
    v29 = 0;
  else
    v29 = v25 - (uint64_t)v23 < BYTE6(v26);
  v30 = v29;
  if ((int)result >= 0)
    v31 = v30;
  else
    v31 = 1;
  *v22 = v31 & 1;
  return result;
}

uint64_t sub_2499209CC@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  BOOL v9;
  char v10;
  char v11;

  if (!__s2)
  {
    if (__s1)
    {
LABEL_18:
      __break(1u);
      return __s2;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!__s1)
    goto LABEL_17;
  v6 = a4 - (_QWORD)__s1;
  v7 = a3 - __s2;
  if (a3 - __s2 >= a4 - (uint64_t)__s1)
    v8 = a4 - (_QWORD)__s1;
  else
    v8 = a3 - __s2;
  __s2 = memcmp(__s1, (const void *)__s2, v8);
  if ((_DWORD)__s2)
    v9 = 0;
  else
    v9 = v6 < v7;
  v10 = v9;
  if ((int)__s2 >= 0)
    v11 = v10;
  else
    v11 = 1;
  *a5 = v11;
  return __s2;
}

void sub_249920A4C(uint64_t *a1)
{
  static HIDReport.< infix(_:_:)(*a1, a1[1]);
}

void sub_249920A60()
{
  sub_249948364();
}

void sub_249920A74(uint64_t *a1)
{
  sub_249948480(*a1, a1[1]);
}

void sub_249920A88()
{
  sub_24994859C();
}

void HIDReport.description.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_249920AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x249920B5CLL);
  }
  if (v2 < 32)
  {
    HIDReport.debugDescription.getter(v0, v1);
  }
  else
  {
    HIDReport.count.getter(v0, v1);
    sub_249955EF8();
    sub_2499558A4();
  }
}

void HIDReport.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249920BC4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_2_1();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x249920CC4);
  }
  v4 = 8 * v2;
  if (8 * v2 < 1)
    return 0;
  v5 = 0;
  do
  {
    if (__OFADD__(v5, 8))
      v6 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v6 = v5 + 8;
    sub_2498C8F2C(v5, v1, v0);
    sub_249903B1C();
    sub_2499558C8();
    if (sub_24995588C() <= 1)
    {
      OUTLINED_FUNCTION_21_13();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_21_13();
    swift_bridgeObjectRelease();
    v5 = v6;
  }
  while (v6 < v4);
  return v8;
}

void sub_249920CDC()
{
  uint64_t *v0;

  HIDReport.debugDescription.getter(*v0, v0[1]);
}

void sub_249920CE4()
{
  uint64_t *v0;

  HIDReport.description.getter(*v0, v0[1]);
}

void sub_249920CEC(_QWORD *a1, _QWORD *a2)
{
  static HIDReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t HIDReport.hash(into:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_10_17();
  sub_2498CAC78(v0, v1);
  OUTLINED_FUNCTION_15_15();
  sub_249955658();
  v2 = OUTLINED_FUNCTION_8_16();
  return sub_2498CACBC(v2, v3);
}

uint64_t HIDReport.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_249955FB8();
  v2 = OUTLINED_FUNCTION_8_16();
  sub_2498CAC78(v2, v3);
  sub_249955658();
  OUTLINED_FUNCTION_0_8(a1);
  return sub_249956000();
}

uint64_t sub_249920D9C()
{
  uint64_t *v0;

  return HIDReport.hashValue.getter(*v0);
}

uint64_t sub_249920DA4()
{
  return HIDReport.hash(into:)();
}

uint64_t sub_249920DAC()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_249955FB8();
  sub_2498CAC78(v1, v2);
  sub_249955658();
  sub_2498CACBC(v1, v2);
  return sub_249956000();
}

Swift::Int HIDReport.subscript.getter(Swift::Int a1, Swift::Int a2)
{
  Swift::Int v3;
  Swift::Int result;

  v3 = HIDReport.offset(for:)(a1);
  result = HIDReport.offset(for:)(a2);
  if (result >= v3)
    return sub_249955610();
  __break(1u);
  return result;
}

Swift::Int sub_249920E70@<X0>(Swift::Int *a1@<X1>, Swift::Int *a2@<X8>)
{
  Swift::Int result;
  Swift::Int v4;

  result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

Swift::Int sub_249920E9C(uint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  sub_2498CAC78(*a1, v6);
  return HIDReport.subscript.setter(v5, v6, v3, v4);
}

Swift::Int HIDReport.subscript.setter(uint64_t a1, unint64_t a2, Swift::Int a3, Swift::Int a4)
{
  Swift::Int v7;
  Swift::Int result;

  v7 = OUTLINED_FUNCTION_22_11(a3);
  result = OUTLINED_FUNCTION_22_11(a4);
  if (result < v7)
  {
    __break(1u);
  }
  else
  {
    sub_249917678(a1, a2);
    return sub_2498CACBC(a1, a2);
  }
  return result;
}

Swift::Int __swiftcall HIDReport.offset(for:)(Swift::Int a1)
{
  unint64_t v1;

  return ((uint64_t (*)(Swift::Int))((char *)&loc_249920F8C + *((int *)qword_249920FB8 + (v1 >> 62))))(a1);
}

uint64_t sub_249920F9C(uint64_t a1, int a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFADD__(a2, a1 >> 3);
  result = a2 + (a1 >> 3);
  if (v2)
  {
    __break(1u);
    JUMPOUT(0x249920FB8);
  }
  return result;
}

void HIDReport.subscript.modify(_QWORD *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v3;
  _QWORD *v7;
  Swift::Int v8;
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = OUTLINED_FUNCTION_25_7(a2);
  if (OUTLINED_FUNCTION_25_7(a3) < v8)
  {
    __break(1u);
  }
  else
  {
    *v7 = sub_249955610();
    v7[1] = v9;
    OUTLINED_FUNCTION_20_3();
  }
}

void sub_249921050(uint64_t **a1, char a2)
{
  uint64_t *v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a1;
  v4 = (*a1)[3];
  v5 = (*a1)[1];
  v6 = **a1;
  v7 = OUTLINED_FUNCTION_18_17((*a1)[2]);
  v8 = OUTLINED_FUNCTION_18_17(v4);
  if ((a2 & 1) != 0)
  {
    if (v8 >= v7)
    {
      OUTLINED_FUNCTION_14_4(v6);
      OUTLINED_FUNCTION_12_19(v6, v5);
      OUTLINED_FUNCTION_29_8();
      v9 = *v3;
      v10 = v3[1];
LABEL_6:
      sub_2498CACBC(v9, v10);
      free(v3);
      return;
    }
    __break(1u);
  }
  else if (v8 >= v7)
  {
    OUTLINED_FUNCTION_12_19(v6, v5);
    v9 = v6;
    v10 = v5;
    goto LABEL_6;
  }
  __break(1u);
}

Swift::Int __swiftcall HIDReport.shift(for:)(Swift::Int a1)
{
  return a1 & 7;
}

Swift::UInt8 __swiftcall HIDReport.mask(for:)(Swift::Int a1)
{
  return 1 << (a1 & 7);
}

BOOL sub_24992112C@<W0>(_BOOL8 *a1@<X8>)
{
  _BOOL8 result;

  result = HIDReport.subscript.getter();
  *a1 = result;
  return result;
}

unint64_t sub_24992115C(unint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  return HIDReport.subscript.setter(*a1, *a3);
}

void HIDReport.subscript.modify()
{
  char v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  Swift::Int v4;

  OUTLINED_FUNCTION_19_3();
  *(_QWORD *)(v3 + 8) = v4;
  *(_QWORD *)(v3 + 16) = v1;
  HIDReport.offset(for:)(v4);
  *v2 = (sub_2499556A0() & (1 << (v0 & 7))) != 0;
  OUTLINED_FUNCTION_18_3();
}

void sub_2499211E8(uint64_t a1)
{
  HIDReport.subscript.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_6_0();
}

Swift::Int __swiftcall HIDReport.index(after:)(Swift::Int after)
{
  unint64_t v1;

  return ((uint64_t (*)(Swift::Int))((char *)&loc_249921218 + dword_249921264[v1 >> 62]))(after);
}

uint64_t sub_249921228()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
    JUMPOUT(0x249921264);
  }
  if (v0 >= 8 * v1)
    goto LABEL_5;
  return v0 + 1;
}

uint64_t HIDReport.endIndex.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249921284 + *((int *)qword_2499212C0 + (a2 >> 62))))();
}

uint64_t sub_249921294()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_2_1();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x2499212C0);
  }
  return OUTLINED_FUNCTION_20_14(v0);
}

uint64_t HIDReport.indices.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(_QWORD))((char *)&loc_2499212E4 + *((int *)qword_249921360 + (a2 >> 62))))(0);
}

void sub_2499212F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
LABEL_4:
    __break(1u);
    JUMPOUT(0x24992135CLL);
  }
  if (8 * v1 < v0)
    goto LABEL_4;
}

Swift::Void __swiftcall HIDReport.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  Swift::Int v2;
  Swift::Int v3;
  Swift::Int v4;
  unint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_6_21(v4);
  v5 = (OUTLINED_FUNCTION_7_22() & (1 << (v3 & 7))) != 0;
  OUTLINED_FUNCTION_6_21(v2);
  v6 = (OUTLINED_FUNCTION_7_22() & (1 << (v2 & 7))) != 0;
  HIDReport.subscript.setter(v6, v3);
  HIDReport.subscript.setter(v5, v2);
}

unint64_t sub_2499213F0(unint64_t *a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*a1, *a2);
}

void (*sub_2499213FC(_QWORD *a1, uint64_t *a2))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a2;
  a1[1] = v2;
  a1[2] = v4;
  *a1 = HIDReport.subscript.getter();
  return sub_249921438;
}

void sub_249921438(uint64_t a1)
{
  HIDReport.subscript.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 16));
  OUTLINED_FUNCTION_6_0();
}

Swift::Int sub_249921458(uint64_t a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *a2, a2[1]);
}

void (*sub_24992146C(_QWORD *a1, Swift::Int *a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = a2[1];
  v5[2] = v2;
  v5[3] = v6;
  v5[4] = v7;
  *v5 = HIDReport.subscript.getter(v6, v7);
  v5[1] = v8;
  return sub_2499214C8;
}

void sub_2499214C8(uint64_t **a1, char a2)
{
  uint64_t *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_14_4(**a1);
    OUTLINED_FUNCTION_5_18();
    sub_2498CACBC(*v2, v2[1]);
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
  }
  free(v2);
}

void sub_249921524(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_24992154C();
  if (!v1)
    *a1 = v3;
}

void sub_24992154C()
{
  sub_249923970();
}

void sub_249921560(Swift::Int *a1, Swift::Int *a2)
{
  HIDReport.swapAt(_:_:)(*a1, *a2);
}

uint64_t sub_24992156C()
{
  return sub_249955820();
}

uint64_t sub_24992158C()
{
  return sub_249955814();
}

uint64_t sub_2499215AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x24992163CLL);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_2499215C4 + *((int *)qword_249921648 + (a4 >> 62))))(v5);
}

uint64_t sub_24992165C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;

  sub_2499216E0(a1, a3, a4, a5);
  if (a2 < 1)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_2499215AC(a1, a2, a4, a5);
}

void sub_2499216E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X9 }
}

void sub_24992172C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v5 = HIDReport.endIndex.getter(v2, v1);
  if (v0 >= 8 * v4)
  {
    v7 = __OFSUB__(v5, v0);
    v6 = v5 - v0 < 0;
  }
  else
  {
    v7 = 0;
    v6 = 1;
  }
  if (v6 == v7)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x2499217E8);
}

void sub_249921810(uint64_t *a1@<X8>)
{
  uint64_t v1;

  *a1 = HIDReport.startIndex.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  OUTLINED_FUNCTION_6_0();
}

void sub_249921834(uint64_t *a1@<X8>)
{
  uint64_t v1;

  *a1 = HIDReport.endIndex.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  OUTLINED_FUNCTION_6_0();
}

uint64_t (*sub_249921858(_QWORD *a1, Swift::Int *a2))()
{
  Swift::Int v3;

  v3 = *a2;
  HIDReport.offset(for:)(*a2);
  LOBYTE(v3) = HIDReport.mask(for:)(v3);
  *a1 = (sub_2499556A0() & v3) != 0;
  return nullsub_1;
}

Swift::Int sub_2499218D8@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;
  Swift::Int v4;

  result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_249921908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = HIDReport.indices.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_249921930()
{
  uint64_t v0;

  return sub_2498F0AFC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_249921938()
{
  _QWORD *v0;

  return HIDReport.count.getter(*v0, v0[1]);
}

void sub_249921940(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_249921950(uint64_t *a1, uint64_t *a2)
{
  return sub_249921964(*a1, *a2, a2[1]);
}

uint64_t sub_249921964(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t sub_249921978(uint64_t *a1, uint64_t *a2)
{
  return sub_24992198C(*a1, *a2, a2[1]);
}

uint64_t sub_24992198C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_2499219A0(uint64_t *a1, uint64_t *a2)
{
  return sub_2499219B8(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2499219B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

Swift::Int sub_2499219CC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = HIDReport.index(after:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2499219F8()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_249921A10 + dword_249921A64[*(_QWORD *)(v0 + 8) >> 62]))();
}

_QWORD *sub_249921A20@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if (((unint64_t)BYTE6(v2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (a2 >= 8 * BYTE6(v2))
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x249921A64);
  }
  *result = a2 + 1;
  return result;
}

uint64_t sub_249921A74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249921AA0(*a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_249921AA0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t v4;

  v3 = __OFSUB__(a1, 1);
  v4 = a1 - 1;
  if (v3)
  {
    __break(1u);
    JUMPOUT(0x249921B30);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_249921AB8 + dword_249921B3C[a3 >> 62]))(v4);
}

uint64_t sub_249921B4C(_QWORD *a1)
{
  uint64_t v1;

  if (__OFSUB__(*a1, 1))
  {
    __break(1u);
    JUMPOUT(0x249921BE8);
  }
  return ((uint64_t (*)(void))((char *)&loc_249921B6C + dword_249921BF4[*(_QWORD *)(v1 + 8) >> 62]))();
}

uint64_t sub_249921C04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_2499215AC(*a1, a2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  *a3 = result;
  return result;
}

void sub_249921C30(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v6;

  *(_QWORD *)a4 = sub_24992165C(*a1, a2, *a3, *(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_BYTE *)(a4 + 8) = v6 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_249921C64(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;

  sub_2499216E0(*a1, *a2, *v2, v2[1]);
}

uint64_t sub_249921C74()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_249921C88 + dword_249921CCC[*(_QWORD *)(v0 + 8) >> 62]))();
}

void sub_249921C98(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v1;
  a1[1] = v2;
  a1[2] = 8 * v3;
}

void sub_249921CA8(_QWORD *a1@<X8>)
{
  int v1;

  if ((unint64_t)(v1 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x249921CCCLL);
  }
  sub_249921C98(a1);
}

uint64_t sub_249921CDC()
{
  uint64_t v0;

  return _s12UniversalHID9HIDReportV5countSivg_0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t _s12UniversalHID9HIDReportV5countSivg_0(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249921D04 + dword_249921D5C[a2 >> 62]))();
}

uint64_t sub_249921D14()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_2_1();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x249921D54);
  }
  return OUTLINED_FUNCTION_20_14(v0);
}

uint64_t sub_249921D6C()
{
  uint64_t v0;

  return sub_249921D74(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_249921D74(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_249921E48(a1, a2);
  v5 = v4;
  sub_2498CACBC(a1, a2);
  return v5;
}

uint64_t sub_249921DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_2499200A0(a1, a2, a3, *v3, v3[1]);
}

uint64_t HIDReport.hasStorage(for:at:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return ((uint64_t (*)(void))((char *)&loc_249921DCC + *((int *)qword_249921E38 + (a3 >> 62))))();
}

BOOL sub_249921DDC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_2_1();
  if (!v2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
    JUMPOUT(0x249921E30);
  }
  if (__OFADD__(v0, 1))
    goto LABEL_5;
  return v0 + 1 <= 8 * v1;
}

void sub_249921E48(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

_QWORD *sub_249921E8C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[11];

  if (((unint64_t)BYTE6(v0) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = 8 * BYTE6(v0);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FB0);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v3[2] = v2;
    v3[3] = 2 * ((uint64_t)(v4 - 32) / 8);
  }
  sub_2498CAC78(v1, v0);
  sub_249922FD8((uint64_t)v8, (uint64_t)(v3 + 4), v2, v1, v0);
  v6 = v5;
  sub_2498CACBC(v8[0], v8[1]);
  if (v6 != v2)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x249921F88);
  }
  return v3;
}

void sub_249921FA0(uint64_t a1)
{
  const void *v1;
  size_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C58);
    v1 = (const void *)OUTLINED_FUNCTION_17_14();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_16_12(2 * ((uint64_t)(v2 - 32) / 8));
    sub_24992337C(v3, v4, v5, v6);
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_11_19();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_2_21();
}

void sub_249922020(uint64_t a1)
{
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D20);
    v1 = (const void *)OUTLINED_FUNCTION_17_14();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_16_12((2 * ((uint64_t)(v2 - 32) / 8)) | 1);
    sub_249923510(v3, v4, v5, v6);
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_11_19();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_2_21();
}

uint64_t sub_2499220A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_24995555C();
  v11 = result;
  if (result)
  {
    result = sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_249955568();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_249920778(v11, v17, a4, a5);
  sub_2498CACBC(a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_24992216C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_24995555C();
  v11 = result;
  if (result)
  {
    result = sub_249955574();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_249955568();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2499209CC(v11, a4, v17, a5, &v19);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_249922220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v10 = a1;
  v11 = a2;
  v12 = BYTE2(a2);
  v13 = BYTE3(a2);
  v14 = BYTE4(a2);
  v15 = BYTE5(a2);
  sub_249920778((uint64_t)&v10, (uint64_t)&v10 + BYTE6(a2), a3, a4);
  v5 = OUTLINED_FUNCTION_8_16();
  sub_2498CACBC(v5, v6);
  if (!v4)
    v7 = v9;
  return v7 & 1;
}

uint64_t sub_24992231C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 && a3)
  {
    if ((a3 & 0x8000000000000000) == 0)
      __asm { BR              X9 }
    __break(1u);
    JUMPOUT(0x2499225ECLL);
  }
  *a1 = a4;
  a1[1] = a5;
  a1[2] = 0;
  return 0;
}

#error "2499226A0: call analysis failed (funcsize=74)"

uint64_t sub_249922744(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000) == 0)
        __asm { BR              X11 }
      __break(1u);
      JUMPOUT(0x2499229F0);
    }
  }
  else
  {
    a3 = 0;
  }
  *a1 = a4;
  a1[1] = a5;
  a1[2] = 1;
  return a3;
}

uint64_t sub_249922A20(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000) == 0)
        __asm { BR              X8 }
      __break(1u);
      JUMPOUT(0x249922D50);
    }
    result = 0;
  }
  else
  {
    result = 0;
  }
  *a1 = a4;
  a1[1] = a5;
  return result;
}

void sub_249922D80(uint64_t *a1, _BYTE *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  if (!a2)
  {
    v12 = 0;
LABEL_16:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = v12;
    return;
  }
  if (!a3)
  {
    v12 = 0;
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v9 = a2;
    v10 = 0;
    v11 = 1;
    v12 = 4;
LABEL_5:
    v13 = v11;
    v14 = 8 * v10;
    v15 = v10;
    while ((unint64_t)(v15 - 0x1000000000000000) >> 61 == 7)
    {
      if (__OFADD__(v14, 8))
        goto LABEL_19;
      sub_2498C8F2C(v14 + 8, a4, a5);
      v10 = v15 + 1;
      if ((v16 - 3) < 3u)
      {
        *v9 = v16;
        if (v13 == a3 || (++v9, v11 = v13 + 1, v15 > 2))
        {
          v12 = v15 + 1;
          goto LABEL_16;
        }
        goto LABEL_5;
      }
      v14 += 8;
      ++v15;
      if (v10 == 4)
        goto LABEL_16;
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
}

uint64_t *sub_249922EB0(uint64_t *result, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  BOOL v17;

  v7 = result;
  if (!a2)
  {
    v11 = 0;
    v8 = 0;
LABEL_19:
    *v7 = a4;
    v7[1] = a5;
    v7[2] = v11;
    return (uint64_t *)v8;
  }
  v8 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_19;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v9 = a2;
    v10 = 0;
    v11 = 0;
    v12 = 1;
    while (1)
    {
      v13 = v10;
      v10 = v12;
      v14 = v11;
      while (1)
      {
        sub_2498C8F2C(8 * v14 + 8, a4, a5);
        if ((v15 - 49) > 0xCFu && v15 <= 0x21u && ((1 << v15) & 0x30003001ELL) != 0)
          break;
        v17 = v14 < 1;
        v14 = 1;
        if (!v17)
        {
          v11 = 2;
          v8 = v13;
          goto LABEL_19;
        }
      }
      v11 = v14 + 1;
      *v9 = v15;
      if (v10 == v8)
        goto LABEL_19;
      ++v9;
      v12 = v10 + 1;
      if (v14 > 0)
      {
        v11 = 2;
        v8 = v10;
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_249922FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_249923030@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000) == 0)
      {
        *(_QWORD *)(v7 - 120) = v6 >> 32;
        __asm { BR              X10 }
      }
      __break(1u);
      JUMPOUT(0x2499232DCLL);
    }
  }
  else
  {
    a3 = 0;
  }
  *a1 = v6;
  a1[1] = a4;
  a1[2] = v5;
  return a3;
}

_QWORD *sub_24992337C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_249923510(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_249923708(uint64_t a1)
{
  __asm { BR              X13 }
}

void *sub_249923764(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __b, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  void *result;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;

  v30 = v25;
  LOWORD(v31) = v24;
  BYTE2(v31) = BYTE2(v24);
  HIBYTE(v31) = BYTE3(v24);
  v32 = BYTE4(v24);
  v33 = BYTE5(v24);
  v34 = BYTE6(v24);
  result = memset(&v30, v27, BYTE6(v24));
  v29 = v31 | ((unint64_t)v32 << 32) | ((unint64_t)v33 << 40) | ((unint64_t)v34 << 48);
  *v26 = v30;
  v26[1] = v29;
  return result;
}

char *sub_2499238F0(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_2499555D4();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_24995555C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_249955574();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_249955568();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

void sub_249923970()
{
  __asm { BR              X10 }
}

uint64_t sub_2499239D0()
{
  uint64_t v0;

  if (((unint64_t)BYTE6(v0) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x249923F1CLL);
  }
  if (8 * BYTE6(v0) > 0)
    __asm { BR              X9 }
  return 0;
}

unint64_t sub_249923FA4()
{
  unint64_t result;

  result = qword_2578A1F48;
  if (!qword_2578A1F48)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F48);
  }
  return result;
}

unint64_t sub_249923FE4()
{
  unint64_t result;

  result = qword_2578A1F50;
  if (!qword_2578A1F50)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F50);
  }
  return result;
}

unint64_t sub_249924024()
{
  unint64_t result;

  result = qword_2578A1F58;
  if (!qword_2578A1F58)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F58);
  }
  return result;
}

unint64_t sub_249924064()
{
  unint64_t result;

  result = qword_2578A1F60;
  if (!qword_2578A1F60)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F60);
  }
  return result;
}

uint64_t sub_2499240A0()
{
  return sub_2499241D4(&qword_2578A1F68, MEMORY[0x24BEE1BD0]);
}

unint64_t sub_2499240C4()
{
  unint64_t result;

  result = qword_2578A1F78;
  if (!qword_2578A1F78)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2578A1F78);
  }
  return result;
}

unint64_t sub_249924104()
{
  unint64_t result;

  result = qword_2578A1F80;
  if (!qword_2578A1F80)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F80);
  }
  return result;
}

unint64_t sub_249924144()
{
  unint64_t result;

  result = qword_2578A1F88;
  if (!qword_2578A1F88)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578A1F88);
  }
  return result;
}

uint64_t sub_249924180()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_24992418C()
{
  return sub_2499241D4(&qword_2578A1F90, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_2499241B0()
{
  return sub_2499241D4(&qword_2578A1F98, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_2499241D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1F70);
    v6 = sub_2499240C4();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x24BCFB904](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249924244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A1FA0;
  if (!qword_2578A1FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A1FA8);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE2C18], v1);
    atomic_store(result, (unint64_t *)&qword_2578A1FA0);
  }
  return result;
}

void sub_24992428C()
{
  HIDReport.reportID.setter();
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for HIDReport()
{
  return &type metadata for HIDReport;
}

uint64_t sub_2499242DC()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return swift_bridgeObjectRetain();
}

Swift::Int OUTLINED_FUNCTION_5_18()
{
  uint64_t v0;
  unint64_t v1;
  Swift::Int v2;
  Swift::Int v3;

  return HIDReport.subscript.setter(v0, v1, v3, v2);
}

Swift::Int OUTLINED_FUNCTION_6_21(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_7_22()
{
  return sub_2499556A0();
}

uint64_t OUTLINED_FUNCTION_8_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  return sub_2499242DC();
}

void OUTLINED_FUNCTION_12_19(uint64_t a1, uint64_t a2)
{
  sub_249917678(a1, a2);
}

uint64_t OUTLINED_FUNCTION_13_18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_2499220A4(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_15_15()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_16_12(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_17_14()
{
  return swift_allocObject();
}

Swift::Int OUTLINED_FUNCTION_18_17(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_14@<X0>(uint64_t a1@<X8>)
{
  return 8 * a1;
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  return sub_2499558A4();
}

Swift::Int OUTLINED_FUNCTION_22_11(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

Swift::Int OUTLINED_FUNCTION_25_7(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_2498CACBC(v0, v1);
}

void sub_249924438(unsigned int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t vars0;
  uint64_t vars0a;
  uint64_t vars8;
  uint64_t vars8a;

  v8 = HIWORD(a1);
  HIDWORD(v41) = (unsigned __int16)a1;
  v9 = HIWORD(a1) - (unsigned __int16)a1;
  if (HIWORD(a1) < (unsigned __int16)a1)
    v10 = -(uint64_t)((unsigned __int16)a1 - HIWORD(a1));
  else
    v10 = v8 - (unsigned __int16)a1;
  if (v10)
  {
    v69 = MEMORY[0x24BEE4AF8];
    sub_2498D608C(0, v10 & ~(v10 >> 63), 0);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v47 = v4;
      v11 = v69;
      v39 = a2;
      v12 = (uint64_t *)(a2 + 16);
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      v13 = HIDWORD(v41);
      v35 = (uint64_t)v12;
      v37 = a3;
      while (v10)
      {
        v44 = v10;
        v14 = *v12;
        v15 = *v12 + 32;
        if (__OFADD__(*v12, 32))
          goto LABEL_23;
        if (HIDReport.count.getter(a3, a4) < v15)
          goto LABEL_20;
        v21 = _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(v14, a3, a4, v16, v17, v18, v19, v20, v35, v37, v39, v41, v43, v44, v47, v49, v51, v53, v55,
                v57,
                v59,
                v61,
                v63,
                v65,
                v67,
                v69,
                v71,
                v73,
                v75,
                v77,
                v79,
                v81,
                v83,
                v85,
                vars0,
                vars8);
        *v12 = v15;
        v22 = v15 + 16;
        if (__OFADD__(v15, 16))
          goto LABEL_24;
        v23 = v21;
        if (HIDReport.count.getter(a3, a4) < v22)
        {
LABEL_20:
          sub_2499250DC();
          swift_allocError();
          swift_willThrow();
LABEL_21:
          swift_release();
          swift_release();
          sub_2498CACBC(a3, a4);
          return;
        }
        v29 = bswap32(_s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(v15, a3, a4, v24, v25, v26, v27, v28, v36, v38, v40, v42, v9, v45, v48, v50, v52, v54,
                  v56,
                  v58,
                  v60,
                  v62,
                  v64,
                  v66,
                  v68,
                  v70,
                  v72,
                  v74,
                  v76,
                  v78,
                  v80,
                  v82,
                  v84,
                  v86,
                  vars0a,
                  vars8a));
        *(_QWORD *)(v39 + 16) = v22;
        swift_retain();
        sub_2498CAC78(a3, a4);
        sub_249924710(v29 & 0xFFFF0000, v39, a3, a4);
        if (v47)
          goto LABEL_21;
        v31 = v30;
        v69 = v11;
        v33 = *(_QWORD *)(v11 + 16);
        v32 = *(_QWORD *)(v11 + 24);
        if (v33 >= v32 >> 1)
          sub_2498D608C(v32 > 1, v33 + 1, 1);
        *(_QWORD *)(v11 + 16) = v33 + 1;
        v34 = v11 + 16 * v33;
        *(double *)(v34 + 32) = (double)(int)bswap32(v23) * 0.0000152587891;
        *(_QWORD *)(v34 + 40) = v31;
        if (v8 < HIDWORD(v41))
          goto LABEL_25;
        if (v13 >= v8)
          goto LABEL_26;
        ++v13;
        v10 = v46 - 1;
        v9 = v43 - 1;
        v12 = (uint64_t *)v35;
        a3 = v37;
        if (v43 == 1)
          goto LABEL_18;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    sub_2498CACBC(a3, a4);
  }
}

void sub_249924710(unsigned int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unint64_t v31;
  unint64_t v32;
  int64x2_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float64x2_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v7 = HIWORD(a1);
  HIDWORD(v45) = (unsigned __int16)a1;
  v8 = v7 - (unsigned __int16)a1;
  if (v7 < (unsigned __int16)a1)
    v9 = -(uint64_t)((unsigned __int16)a1 - HIWORD(a1));
  else
    v9 = v7 - (unsigned __int16)a1;
  if (v9)
  {
    v38 = a2;
    v72 = MEMORY[0x24BEE4AF8];
    sub_2498D60C0(0, v9 & ~(v9 >> 63), 0);
    if ((v9 & 0x8000000000000000) == 0)
    {
      v36 = v4;
      v10 = v72;
      swift_beginAccess();
      swift_beginAccess();
      v50 = (uint64_t *)(v38 + 16);
      swift_beginAccess();
      v42 = (float64x2_t)vdupq_n_s64(0x3EF0000000000000uLL);
      v11 = HIDWORD(v45);
      v40 = a3;
      while (v9)
      {
        v12 = *v50;
        v13 = *v50 + 32;
        if (__OFADD__(*v50, 32))
          goto LABEL_21;
        v47 = v8;
        v14 = v7;
        if (HIDReport.count.getter(a3, a4) < v13)
          goto LABEL_18;
        v20 = _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(v12, a3, a4, v15, v16, v17, v18, v19, v34, v36, v38, v40, *(uint64_t *)&v42.f64[0], *(uint64_t *)&v42.f64[1], v45, v47, (uint64_t)v50, v52, v54,
                v56,
                v58,
                v60,
                v62,
                v64,
                v66,
                v68,
                v70,
                v72,
                v74,
                v76,
                v78,
                v80,
                v82,
                v84,
                v86,
                v88);
        *v51 = v13;
        v21 = v13 + 32;
        if (__OFADD__(v13, 32))
          goto LABEL_22;
        v22 = v20;
        if (HIDReport.count.getter(a3, a4) < v21)
        {
LABEL_18:
          sub_2499250DC();
          swift_allocError();
          swift_willThrow();
          swift_release();
          swift_release();
          sub_2498CACBC(a3, a4);
          return;
        }
        v28 = a3;
        v29 = a4;
        v30 = _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(v13, v28, a4, v23, v24, v25, v26, v27, v35, v37, v39, v41, v43, v44, v46, v48, (uint64_t)v51, v53, v55,
                v57,
                v59,
                v61,
                v63,
                v65,
                v67,
                v69,
                v71,
                v73,
                v75,
                v77,
                v79,
                v81,
                v83,
                v85,
                v87,
                v89);
        *v50 = v21;
        v72 = v10;
        v32 = *(_QWORD *)(v10 + 16);
        v31 = *(_QWORD *)(v10 + 24);
        if (v32 >= v31 >> 1)
          sub_2498D60C0(v31 > 1, v32 + 1, 1);
        v33.i64[0] = (int)bswap32(v22);
        v33.i64[1] = (int)bswap32(v30);
        *(_QWORD *)(v10 + 16) = v32 + 1;
        *(float64x2_t *)(v10 + 16 * v32 + 32) = vmulq_f64(vcvtq_f64_s64(v33), v42);
        if (v14 < HIDWORD(v45))
          goto LABEL_23;
        v7 = v14;
        if (v11 >= v14)
          goto LABEL_24;
        ++v11;
        --v9;
        v8 = v49 - 1;
        a4 = v29;
        a3 = v40;
        if (v49 == 1)
          goto LABEL_19;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_release();
    sub_2498CACBC(a3, a4);
  }
}

uint64_t (*HIDAccelerationPoint.x.modify())()
{
  return nullsub_1;
}

double HIDAccelerationPoint.y.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationPoint.y.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationPoint.y.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationSegment.m.modify())()
{
  return nullsub_1;
}

double HIDAccelerationSegment.b.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationSegment.b.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationSegment.b.modify())()
{
  return nullsub_1;
}

double HIDAccelerationSegment.x.getter(double a1, double a2, double a3)
{
  return a3;
}

void HIDAccelerationSegment.x.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*HIDAccelerationSegment.x.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTableEntry.accel.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTableEntry.points.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*HIDAccelerationTableEntry.points.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTable.scale.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.signature.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*HIDAccelerationTable.signature.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.entry.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HIDAccelerationTable.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*HIDAccelerationTable.entry.modify())()
{
  return nullsub_1;
}

uint64_t static HIDAccelerationTable.appleDefaultAccelerationTableSignature.getter()
{
  return 1077030960;
}

uint64_t static HIDAccelerationTable.appleMultitouchAccelerationTableSignature.getter()
{
  return 1431519786;
}

uint64_t HIDAccelerationTable.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t result;
  unsigned int v9;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = ((uint64_t (*)(void))sub_249924C70)();
  v6 = sub_249924C70(v4, a1, a2);
  if (v6 == 1077030960 || v6 == 1431519786)
  {
    v9 = sub_249924D4C(v4, a1, a2) << 16;
    swift_retain();
    sub_249924438(v9, v4, a1, a2);
    OUTLINED_FUNCTION_14_3();
    *(double *)&result = (double)v5 * 0.0000152587891;
  }
  else
  {
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_2_22();
    *(double *)&result = 0.0;
  }
  return result;
}

uint64_t sub_249924C60()
{
  return swift_deallocObject();
}

#error "249924D08: call analysis failed (funcsize=54)"

#error "249924DE4: call analysis failed (funcsize=55)"

void type metadata accessor for HIDAccelerationPoint()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for HIDAccelerationSegment()
{
  OUTLINED_FUNCTION_21_5();
}

_QWORD *initializeBufferWithCopyOfBuffer for HIDAccelerationTableEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HIDAccelerationTableEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HIDAccelerationTableEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDAccelerationTableEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationTableEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HIDAccelerationTableEntry()
{
  OUTLINED_FUNCTION_21_5();
}

uint64_t destroy for HIDAccelerationTable()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12UniversalHID20HIDAccelerationTableVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDAccelerationTable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HIDAccelerationTable()
{
  OUTLINED_FUNCTION_21_5();
}

unint64_t sub_2499250DC()
{
  unint64_t result;

  result = qword_2578A1FB8;
  if (!qword_2578A1FB8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995AFF4, &type metadata for HIDAccelerationTable.IndexOutOfBounds);
    atomic_store(result, (unint64_t *)&qword_2578A1FB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDAccelerationTable.IndexOutOfBounds()
{
  return &type metadata for HIDAccelerationTable.IndexOutOfBounds;
}

void OUTLINED_FUNCTION_1_27(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2498CACBC(v1, v0);
}

uint64_t ButtonEvent.init(time:buttons:pressure:flags:)()
{
  return IOHIDEventCreateButtonEventWithPressure();
}

uint64_t ButtonEvent.buttonState.setter()
{
  return OUTLINED_FUNCTION_0_27();
}

uint64_t static ButtonEvent.eventType.getter()
{
  return 2;
}

uint64_t ButtonEvent.init(event:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 2)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t ButtonEvent.buttonClickCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonClickCount.setter(uint64_t result)
{
  if ((unint64_t)(result - 255) >= 0xFFFFFFFFFFFFFF02)
    return OUTLINED_FUNCTION_8_13();
  __break(1u);
  return result;
}

void ButtonEvent.buttonClickCount.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_2_2(a1, a2);
  *v2 = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_6_0();
}

_QWORD *sub_249925250(_QWORD *result, char a2)
{
  unint64_t v2;

  v2 = *result - 255;
  if ((a2 & 1) != 0)
  {
    if (v2 >= 0xFFFFFFFFFFFFFF02)
      return (_QWORD *)OUTLINED_FUNCTION_8_13();
    __break(1u);
  }
  if (v2 < 0xFFFFFFFFFFFFFF02)
  {
    __break(1u);
    return result;
  }
  return (_QWORD *)OUTLINED_FUNCTION_8_13();
}

uint64_t ButtonEvent.buttonMask.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonMask.setter(uint64_t result)
{
  return sub_249925308(result);
}

void ButtonEvent.buttonMask.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_2_2(a1, a2);
  *v2 = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_6_0();
}

_QWORD *sub_2499252B8(_QWORD *result, char a2)
{
  unint64_t v2;

  v2 = *result - 0xFFFFFFFFLL;
  if ((a2 & 1) != 0)
  {
    if (v2 >= 0xFFFFFFFF00000002)
      return (_QWORD *)IOHIDEventSetIntegerValue();
    __break(1u);
  }
  if (v2 < 0xFFFFFFFF00000002)
  {
    __break(1u);
    return result;
  }
  return (_QWORD *)IOHIDEventSetIntegerValue();
}

uint64_t ButtonEvent.buttonNumber.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonNumber.setter(uint64_t result)
{
  return sub_249925308(result);
}

uint64_t sub_249925308(uint64_t result)
{
  if ((unint64_t)(result - 0xFFFFFFFFLL) >= 0xFFFFFFFF00000002)
    return IOHIDEventSetIntegerValue();
  __break(1u);
  return result;
}

void ButtonEvent.buttonNumber.modify(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  OUTLINED_FUNCTION_2_2(a1, a2);
  *v2 = OUTLINED_FUNCTION_7_23();
  OUTLINED_FUNCTION_6_0();
}

_QWORD *sub_249925368(_QWORD *result, char a2)
{
  unint64_t v2;

  v2 = *result - 0xFFFFFFFFLL;
  if ((a2 & 1) != 0)
  {
    if (v2 >= 0xFFFFFFFF00000002)
      return (_QWORD *)OUTLINED_FUNCTION_0_27();
    __break(1u);
  }
  if (v2 < 0xFFFFFFFF00000002)
  {
    __break(1u);
    return result;
  }
  return (_QWORD *)OUTLINED_FUNCTION_0_27();
}

uint64_t ButtonEvent.buttonPressure.getter()
{
  return IOHIDEventGetFloatValue();
}

void ButtonEvent.buttonPressure.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

BOOL ButtonEvent.buttonState.getter()
{
  return OUTLINED_FUNCTION_7_23() != 0;
}

void ButtonEvent.buttonState.modify(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = OUTLINED_FUNCTION_7_23() != 0;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249925444()
{
  return OUTLINED_FUNCTION_0_27();
}

uint64_t sub_249925458@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = ButtonEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

void sub_24992547C(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = ButtonEvent.buttonClickCount.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992549C(uint64_t *a1)
{
  return ButtonEvent.buttonClickCount.setter(*a1);
}

void sub_2499254A8(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = ButtonEvent.buttonMask.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499254C8(uint64_t *a1)
{
  return ButtonEvent.buttonMask.setter(*a1);
}

void sub_2499254D4(uint64_t a1)
{
  uint64_t *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = ButtonEvent.buttonNumber.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499254F4(uint64_t *a1)
{
  return ButtonEvent.buttonNumber.setter(*a1);
}

void sub_249925500(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  ButtonEvent.buttonPressure.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249925520(double *a1, _QWORD *a2)
{
  return ButtonEvent.buttonPressure.setter(*a2, *a1);
}

void sub_24992552C(uint64_t a1)
{
  BOOL *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = ButtonEvent.buttonState.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249925550()
{
  return ButtonEvent.buttonState.setter();
}

ValueMetadata *type metadata accessor for ButtonEvent()
{
  return &type metadata for ButtonEvent;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_7_23()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  char v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;

  v37 = a2;
  v38 = a4;
  v8 = sub_249955AD8();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - v10;
  v12 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v39 = a1;
  v18((char *)&v35 - v16, a1, a3);
  if (OUTLINED_FUNCTION_8_9() < 65)
  {
    v20 = OUTLINED_FUNCTION_3_11();
    v21 = OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_0_28((uint64_t)v17);
    if ((v20 & 1) != 0)
      v19 = (double)v21;
    else
      v19 = (double)(unint64_t)v21;
  }
  else
  {
    sub_2498D1070();
    sub_2498D10AC();
    OUTLINED_FUNCTION_2_23();
    OUTLINED_FUNCTION_0_28((uint64_t)v17);
    v19 = v40;
  }
  v22 = v37;
  v18(v15, v37, a3);
  if (OUTLINED_FUNCTION_8_9() <= 64)
  {
    v24 = OUTLINED_FUNCTION_3_11();
    v25 = OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_0_28((uint64_t)v15);
    if ((v24 & 1) != 0)
      v23 = (double)v25;
    else
      v23 = (double)(unint64_t)v25;
  }
  else
  {
    sub_2498D1070();
    sub_2498D10AC();
    OUTLINED_FUNCTION_2_23();
    OUTLINED_FUNCTION_0_28((uint64_t)v15);
    v23 = v40;
  }
  v26 = OUTLINED_FUNCTION_3_11();
  v27 = v23 * a5;
  v28 = fabs(a5) * v19;
  if (a5 < 0.0)
    v27 = v28;
  if ((v26 & 1) != 0)
    v29 = v27;
  else
    v29 = v19 + (v23 - v19) * a5;
  if (v29 > v19)
    v30 = v29;
  else
    v30 = v19;
  if (v23 < v30)
    v30 = v23;
  v40 = v30;
  sub_2498D1070();
  sub_249955B5C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
    v31 = 0.0 - v23;
    if (0.0 - v23 < INFINITY)
      *(_QWORD *)&v31 = ((COERCE__INT64(0.0 - v23) >> 63) | 1) + COERCE__INT64(0.0 - v23);
    v32 = -v31;
    v33 = v19 + 0.0;
    if (v19 + 0.0 < INFINITY)
      *(_QWORD *)&v33 += (*(uint64_t *)&v33 >> 63) | 1;
    if (v29 <= v32)
    {
      if (v29 >= v33)
      {
        if (v29 > v33)
          v33 = v29;
        if (v33 <= v32)
          v32 = v33;
        v40 = v32;
        sub_249955B8C();
        OUTLINED_FUNCTION_0_28(v22);
        return OUTLINED_FUNCTION_0_28(v39);
      }
      else
      {
        OUTLINED_FUNCTION_0_28(v22);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v38, v39, a3);
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_28(v39);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v38, v22, a3);
    }
  }
  else
  {
    OUTLINED_FUNCTION_0_28(v22);
    OUTLINED_FUNCTION_0_28(v39);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v38, v11, a3);
  }
}

uint64_t dispatch thunk of static HIDReportScaledValue.logicalMinimum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static HIDReportScaledValue.logicalMaximum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t OUTLINED_FUNCTION_0_28(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_23()
{
  return sub_249955790();
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return sub_249955B68();
}

uint64_t HIDDeviceType.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249925970 + 4 * byte_24995B090[a1]))(0x65746F6D6552, 0xE600000000000000);
}

uint64_t sub_249925970()
{
  return 0x657A697469676944;
}

uint64_t sub_24992598C()
{
  return 0x646170656D6147;
}

uint64_t sub_2499259A4()
{
  return 0x6472616F6279654BLL;
}

uint64_t sub_2499259BC()
{
  return 0x6573756F4DLL;
}

uint64_t sub_2499259D0()
{
  return 0x6461706B63617254;
}

UniversalHID::HIDDeviceType_optional __swiftcall HIDDeviceType.init(deviceTypeHint:)(Swift::String deviceTypeHint)
{
  BOOL v1;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;

  v1 = deviceTypeHint._countAndFlagsBits == 0x6573756F4DLL && deviceTypeHint._object == (void *)0xE500000000000000;
  if (v1
    || (object = deviceTypeHint._object,
        countAndFlagsBits = deviceTypeHint._countAndFlagsBits,
        (OUTLINED_FUNCTION_6_22() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return (UniversalHID::HIDDeviceType_optional)4;
  }
  else if (countAndFlagsBits == 0x6461706B63617254 && object == (void *)0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return (UniversalHID::HIDDeviceType_optional)5;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_6_22();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return (UniversalHID::HIDDeviceType_optional)5;
    else
      return (UniversalHID::HIDDeviceType_optional)6;
  }
}

uint64_t sub_249925AB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x525654656C707061 && a2 == 0xED000065746F6D65;
  if (v2 || (sub_249955F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x657A697469676964 && a2 == 0xE900000000000072;
    if (v6 || (sub_249955F28() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x646170656D6167 && a2 == 0xE700000000000000;
      if (v7 || (sub_249955F28() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6472616F6279656BLL && a2 == 0xE800000000000000;
        if (v8 || (sub_249955F28() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6573756F6DLL && a2 == 0xE500000000000000;
          if (v9 || (sub_249955F28() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6461706B63617274 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_249955F28();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_249925D4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249925D8C + 4 * byte_24995B096[a1]))(0x525654656C707061, 0xED000065746F6D65);
}

uint64_t sub_249925D8C()
{
  return 0x657A697469676964;
}

uint64_t sub_249925DA8()
{
  return 0x646170656D6167;
}

uint64_t sub_249925DC0()
{
  return 0x6472616F6279656BLL;
}

uint64_t sub_249925DD8()
{
  return 0x6573756F6DLL;
}

uint64_t sub_249925DEC()
{
  return 0x6461706B63617274;
}

uint64_t sub_249925E04()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_249925E20()
{
  return 0;
}

uint64_t sub_249925E30()
{
  sub_249926CFC();
  return sub_249956024();
}

uint64_t sub_249925E58()
{
  sub_249926CFC();
  return sub_249956030();
}

void sub_249925E80()
{
  sub_249926960();
}

uint64_t sub_249925E9C()
{
  unsigned __int8 *v0;

  return sub_249925D4C(*v0);
}

uint64_t sub_249925EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249925AB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249925EC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24990F8E8();
  *a1 = result;
  return result;
}

uint64_t sub_249925EEC()
{
  sub_249926B94();
  return sub_249956024();
}

uint64_t sub_249925F14()
{
  sub_249926B94();
  return sub_249956030();
}

uint64_t sub_249925F3C()
{
  sub_249926CC0();
  return sub_249956024();
}

uint64_t sub_249925F64()
{
  sub_249926CC0();
  return sub_249956030();
}

uint64_t sub_249925F8C()
{
  sub_249926C84();
  return sub_249956024();
}

uint64_t sub_249925FB4()
{
  sub_249926C84();
  return sub_249956030();
}

uint64_t sub_249925FDC()
{
  sub_249926C48();
  return sub_249956024();
}

uint64_t sub_249926004()
{
  sub_249926C48();
  return sub_249956030();
}

uint64_t sub_24992602C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249925E04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_249926054()
{
  return OUTLINED_FUNCTION_71();
}

uint64_t sub_24992606C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_27();
  *a1 = result & 1;
  return result;
}

uint64_t sub_249926094()
{
  sub_249926C0C();
  return sub_249956024();
}

uint64_t sub_2499260BC()
{
  sub_249926C0C();
  return sub_249956030();
}

uint64_t sub_2499260E4()
{
  sub_249926BD0();
  return sub_249956024();
}

uint64_t sub_24992610C()
{
  sub_249926BD0();
  return sub_249956030();
}

uint64_t sub_249926134()
{
  unsigned __int8 *v0;

  return HIDDeviceType.description.getter(*v0);
}

void HIDDeviceType.encode(to:)(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FC0);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_5_19(v4, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FC8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_0_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FD0);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FD8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_29();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FE0);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_16_0();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FE8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_16_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1FF0);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_16_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249926B94();
  sub_249956018();
  __asm { BR              X10 }
}

uint64_t sub_24992630C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  *(_BYTE *)(v4 - 70) = 0;
  sub_249926CFC();
  OUTLINED_FUNCTION_1_28();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v5 = OUTLINED_FUNCTION_13_19();
  return v6(v5, v0);
}

uint64_t HIDDeviceType.init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2030);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_0_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2038);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_0_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2040);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_5_19(v5, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2048);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_0_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2050);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_29();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2058);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_16_0();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2060);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_16_0();
  v13 = v12 - v11;
  v30 = a1;
  v14 = (_QWORD *)OUTLINED_FUNCTION_8_16();
  __swift_project_boxed_opaque_existential_1(v14, v15);
  sub_249926B94();
  sub_24995600C();
  if (!v31)
  {
    v29 = v10;
    v16 = v13;
    v17 = sub_249955E68();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = *(unsigned __int8 *)(v17 + 32);
      sub_249926D38(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease();
      if (v21 == v23 >> 1)
        __asm { BR              X9 }
    }
    v24 = sub_249955C70();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2068);
    *v26 = &type metadata for HIDDeviceType;
    v10 = v9;
    sub_249955DE4();
    sub_249955C64();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    OUTLINED_FUNCTION_9_14();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v30);
  return v10;
}

uint64_t sub_249926900@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = HIDDeviceType.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_249926928(_QWORD *a1)
{
  char *v1;

  HIDDeviceType.encode(to:)(a1, *v1);
}

BOOL static HIDDeviceType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_249926950(char *a1, char *a2)
{
  return static HIDDeviceType.== infix(_:_:)(*a1, *a2);
}

void sub_249926960()
{
  sub_249955FB8();
  sub_249955FC4();
  sub_249956000();
  OUTLINED_FUNCTION_10_18();
}

uint64_t sub_24992699C()
{
  unsigned __int8 *v0;

  return sub_249925D48(*v0);
}

void sub_2499269A4()
{
  sub_249955FB8();
  sub_249955FC4();
  sub_249956000();
  OUTLINED_FUNCTION_10_18();
}

uint64_t HIDDeviceType.init(properties:)(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  Swift::String v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  strcpy((char *)v13, "DeviceTypeHint");
  HIBYTE(v13[0]) = -18;
  v3 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249955F40());
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_249926DB0((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      LOBYTE(v4) = HIDDeviceType.init(deviceTypeHint:)(v12);
      if (v4 != 6)
      {
        v5 = v4;

        return v5;
      }
    }
  }
  else
  {
    sub_24991F2AC((uint64_t)v14);
  }
  v6 = OUTLINED_FUNCTION_8_16();
  v8 = HIDServiceProperties.primaryUsagePair.getter(v6, v7);

  v9 = HIWORD(v8);
  v5 = 4;
  if ((unsigned __int16)v8 == 1)
  {
    if (v9 == 5)
      v10 = 2;
    else
      v10 = 4;
    if (v9 == 6)
      return 3;
    else
      return v10;
  }
  else if ((unsigned __int16)v8 == 13)
  {
    switch(v9)
    {
      case 4u:
        return 1;
      case 0xCu:
        return 5;
      case 5u:
        return 0;
    }
  }
  return v5;
}

uint64_t HIDServiceProperties.deviceType.getter(uint64_t a1, void *a2)
{
  return HIDDeviceType.init(properties:)(a1, a2);
}

unint64_t sub_249926B94()
{
  unint64_t result;

  result = qword_2578A1FF8;
  if (!qword_2578A1FF8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B6DC, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A1FF8);
  }
  return result;
}

unint64_t sub_249926BD0()
{
  unint64_t result;

  result = qword_2578A2000;
  if (!qword_2578A2000)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B68C, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2000);
  }
  return result;
}

unint64_t sub_249926C0C()
{
  unint64_t result;

  result = qword_2578A2008;
  if (!qword_2578A2008)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B63C, &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2008);
  }
  return result;
}

unint64_t sub_249926C48()
{
  unint64_t result;

  result = qword_2578A2010;
  if (!qword_2578A2010)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B5EC, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2010);
  }
  return result;
}

unint64_t sub_249926C84()
{
  unint64_t result;

  result = qword_2578A2018;
  if (!qword_2578A2018)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B59C, &type metadata for HIDDeviceType.GamepadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2018);
  }
  return result;
}

unint64_t sub_249926CC0()
{
  unint64_t result;

  result = qword_2578A2020;
  if (!qword_2578A2020)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B54C, &type metadata for HIDDeviceType.DigitizerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2020);
  }
  return result;
}

unint64_t sub_249926CFC()
{
  unint64_t result;

  result = qword_2578A2028;
  if (!qword_2578A2028)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B4FC, &type metadata for HIDDeviceType.AppleTVRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2028);
  }
  return result;
}

uint64_t sub_249926D38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_249926DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_249926DFC()
{
  unint64_t result;

  result = qword_2578A2070;
  if (!qword_2578A2070)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDDeviceType, &type metadata for HIDDeviceType);
    atomic_store(result, (unint64_t *)&qword_2578A2070);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType()
{
  return &type metadata for HIDDeviceType;
}

uint64_t _s12UniversalHID13HIDDeviceTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s12UniversalHID13HIDDeviceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_249926F24 + 4 * byte_24995B0AD[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_249926F58 + 4 * byte_24995B0A8[v4]))();
}

uint64_t sub_249926F58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249926F60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249926F68);
  return result;
}

uint64_t sub_249926F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249926F7CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_249926F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249926F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType.CodingKeys()
{
  return &type metadata for HIDDeviceType.CodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.AppleTVRemoteCodingKeys()
{
  return &type metadata for HIDDeviceType.AppleTVRemoteCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.DigitizerCodingKeys()
{
  return &type metadata for HIDDeviceType.DigitizerCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.GamepadCodingKeys()
{
  return &type metadata for HIDDeviceType.GamepadCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.KeyboardCodingKeys()
{
  return &type metadata for HIDDeviceType.KeyboardCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.MouseCodingKeys()
{
  return &type metadata for HIDDeviceType.MouseCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.TrackpadCodingKeys()
{
  return &type metadata for HIDDeviceType.TrackpadCodingKeys;
}

unint64_t sub_249927008()
{
  unint64_t result;

  result = qword_2578A2078;
  if (!qword_2578A2078)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B4D4, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2078);
  }
  return result;
}

unint64_t sub_249927048()
{
  unint64_t result;

  result = qword_2578A2080;
  if (!qword_2578A2080)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B3F4, &type metadata for HIDDeviceType.AppleTVRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2080);
  }
  return result;
}

unint64_t sub_249927088()
{
  unint64_t result;

  result = qword_2578A2088;
  if (!qword_2578A2088)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B41C, &type metadata for HIDDeviceType.AppleTVRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2088);
  }
  return result;
}

unint64_t sub_2499270C8()
{
  unint64_t result;

  result = qword_2578A2090;
  if (!qword_2578A2090)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B3A4, &type metadata for HIDDeviceType.DigitizerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2090);
  }
  return result;
}

unint64_t sub_249927108()
{
  unint64_t result;

  result = qword_2578A2098;
  if (!qword_2578A2098)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B3CC, &type metadata for HIDDeviceType.DigitizerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A2098);
  }
  return result;
}

unint64_t sub_249927148()
{
  unint64_t result;

  result = qword_2578A20A0;
  if (!qword_2578A20A0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B354, &type metadata for HIDDeviceType.GamepadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20A0);
  }
  return result;
}

unint64_t sub_249927188()
{
  unint64_t result;

  result = qword_2578A20A8;
  if (!qword_2578A20A8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B37C, &type metadata for HIDDeviceType.GamepadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20A8);
  }
  return result;
}

unint64_t sub_2499271C8()
{
  unint64_t result;

  result = qword_2578A20B0;
  if (!qword_2578A20B0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B304, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20B0);
  }
  return result;
}

unint64_t sub_249927208()
{
  unint64_t result;

  result = qword_2578A20B8;
  if (!qword_2578A20B8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B32C, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20B8);
  }
  return result;
}

unint64_t sub_249927248()
{
  unint64_t result;

  result = qword_2578A20C0;
  if (!qword_2578A20C0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B2B4, &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20C0);
  }
  return result;
}

unint64_t sub_249927288()
{
  unint64_t result;

  result = qword_2578A20C8;
  if (!qword_2578A20C8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B2DC, &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20C8);
  }
  return result;
}

unint64_t sub_2499272C8()
{
  unint64_t result;

  result = qword_2578A20D0;
  if (!qword_2578A20D0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B264, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20D0);
  }
  return result;
}

unint64_t sub_249927308()
{
  unint64_t result;

  result = qword_2578A20D8;
  if (!qword_2578A20D8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B28C, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20D8);
  }
  return result;
}

unint64_t sub_249927348()
{
  unint64_t result;

  result = qword_2578A20E0;
  if (!qword_2578A20E0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B444, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20E0);
  }
  return result;
}

unint64_t sub_249927388()
{
  unint64_t result;

  result = qword_2578A20E8;
  if (!qword_2578A20E8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995B46C, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578A20E8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_28()
{
  return sub_249955E74();
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return sub_249955DD8();
}

void OUTLINED_FUNCTION_5_19(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return sub_249955F28();
}

unint64_t OUTLINED_FUNCTION_7_24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 1;
  return sub_249926CC0();
}

unint64_t OUTLINED_FUNCTION_8_17()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 4;
  return sub_249926C0C();
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return swift_unknownObjectRelease();
}

unint64_t OUTLINED_FUNCTION_11_20()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 3;
  return sub_249926C48();
}

unint64_t OUTLINED_FUNCTION_12_20()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 2;
  return sub_249926C84();
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_14_18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_249926BD0();
}

uint64_t RotationEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_29();
}

uint64_t RotationEvent.init(time:point:flags:)()
{
  return IOHIDEventCreateRotationEvent();
}

uint64_t static RotationEvent.eventType.getter()
{
  return 5;
}

uint64_t RotationEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

void RotationEvent.x.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  a1[1] = a2;
  IOHIDEventGetFloatValue();
  *a1 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249927508()
{
  return OUTLINED_FUNCTION_3_22();
}

uint64_t RotationEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_29();
}

uint64_t RotationEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_30();
}

void RotationEvent.y.modify(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  a1[1] = a2;
  IOHIDEventGetFloatValue();
  *a1 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249927564()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t RotationEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_30();
}

void RotationEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_25(a1, a2);
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499275A8()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t RotationEvent.rotation.getter()
{
  return OUTLINED_FUNCTION_1_29();
}

uint64_t RotationEvent.rotation.setter()
{
  return OUTLINED_FUNCTION_0_30();
}

void RotationEvent.rotation.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_25(a1, a2);
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499275F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  RotationEvent.x.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249927614(double *a1, _QWORD *a2)
{
  return RotationEvent.x.setter(*a2, *a1);
}

void sub_249927620(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  RotationEvent.y.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249927640()
{
  return RotationEvent.y.setter();
}

void sub_24992764C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  RotationEvent.z.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992766C()
{
  return RotationEvent.z.setter();
}

void sub_249927678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  RotationEvent.rotation.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249927698()
{
  return RotationEvent.rotation.setter();
}

ValueMetadata *type metadata accessor for RotationEvent()
{
  return &type metadata for RotationEvent;
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_29()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_25(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 8) = a2;
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return IOHIDEventSetFloatValue();
}

double HIDFixed.doubleValue.getter(int a1)
{
  return (double)a1 * 0.0000152587891;
}

unint64_t HIDFixed.init(doubleValue:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  unint64_t result;

  v1 = *(_QWORD *)&a1 & 0x7FF0000000000000;
  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    v2 = 0;
    return v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32);
  }
  v3 = round(a1 * 65536.0);
  if (v3 <= -2147483650.0)
    v3 = -2147483650.0;
  if (v3 > 2147483650.0)
    v3 = 2147483650.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 2147483650.0)
  {
    v2 = (int)v3;
    return v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t static HIDFixed.radix.getter()
{
  return 16;
}

uint64_t HIDFixed.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDFixed.rawValue.modify())()
{
  return nullsub_1;
}

double static HIDFixed.scale.getter()
{
  return 65536.0;
}

uint64_t HIDFixed.intValue.getter(int a1)
{
  return (uint64_t)a1 >> 16;
}

uint64_t HIDFixed.init(intValue:)(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    return ((_DWORD)result << 16);
  }
  __break(1u);
  return result;
}

void sub_249927804(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t static HIDFixed.zero.getter()
{
  return 0;
}

uint64_t static HIDFixed.+ infix(_:_:)(int a1, int a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFADD__(a1, a2);
  result = (a1 + a2);
  if (v2)
    __break(1u);
  return result;
}

_DWORD *static HIDFixed.+= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFADD__(*result, a2))
    __break(1u);
  else
    *result += a2;
  return result;
}

uint64_t static HIDFixed.- infix(_:_:)(int a1, int a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFSUB__(a1, a2);
  result = (a1 - a2);
  if (v2)
    __break(1u);
  return result;
}

_DWORD *static HIDFixed.-= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFSUB__(*result, a2))
    __break(1u);
  else
    *result -= a2;
  return result;
}

uint64_t sub_24992786C@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result;

  result = static HIDFixed.+ infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_249927898(_DWORD *a1, int *a2)
{
  return static HIDFixed.+= infix(_:_:)(a1, *a2);
}

uint64_t sub_2499278A0@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result;

  result = static HIDFixed.- infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_2499278CC(_DWORD *a1, int *a2)
{
  return static HIDFixed.-= infix(_:_:)(a1, *a2);
}

uint64_t HIDFixed.init(integerLiteral:)(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    return ((_DWORD)result << 16);
  }
  __break(1u);
  return result;
}

uint64_t sub_2499278FC@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = HIDFixed.init(integerLiteral:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HIDFixed.init(floatLiteral:)(double a1)
{
  unint64_t v1;

  v1 = HIDFixed.init(doubleValue:)(a1);
  return OUTLINED_FUNCTION_9_15(v1);
}

uint64_t sub_24992793C@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = HIDFixed.init(floatLiteral:)(*a1);
  *a2 = result;
  return result;
}

unint64_t HIDFixed.init<A>(exactly:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  signed int v50;
  unint64_t result;
  int v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  char v66;
  char v67;
  signed int v68;
  BOOL v69;
  char v70;
  signed int v71;
  signed int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t AssociatedTypeWitness;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  signed int v85;

  v79 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v77 = (char *)&v73 - v6;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v75 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_40_2();
  v76 = v10;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_40_2();
  v81 = v12;
  OUTLINED_FUNCTION_28();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v73 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v73 - v18;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_40_2();
  v80 = v20;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_40_2();
  v82 = v22;
  OUTLINED_FUNCTION_28();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v73 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v73 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v73 - v30;
  v32 = OUTLINED_FUNCTION_2_26();
  v83 = a1;
  if ((v32 & 1) != 0)
  {
    if (OUTLINED_FUNCTION_3_23() < 32)
    {
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v34 = (uint64_t)v31;
LABEL_12:
      OUTLINED_FUNCTION_10_19(v34, a1, v33);
      v38 = OUTLINED_FUNCTION_4_19();
      OUTLINED_FUNCTION_12_21();
      v37 = v38 < -32768;
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_16_13(-32768);
    OUTLINED_FUNCTION_1_30();
    OUTLINED_FUNCTION_13_20();
LABEL_8:
    v37 = OUTLINED_FUNCTION_6_23();
    OUTLINED_FUNCTION_12_21();
    goto LABEL_17;
  }
  v35 = OUTLINED_FUNCTION_2_26();
  v36 = OUTLINED_FUNCTION_3_23();
  if ((v35 & 1) == 0)
  {
    if (v36 >= 32)
    {
      v37 = 0;
      a1 = v83;
      goto LABEL_17;
    }
    v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v34 = (uint64_t)v31;
    a1 = v83;
    goto LABEL_12;
  }
  if (v36 > 32)
  {
    OUTLINED_FUNCTION_16_13(-32768);
    OUTLINED_FUNCTION_1_30();
    OUTLINED_FUNCTION_13_20();
    a1 = v83;
    goto LABEL_8;
  }
  v74 = v19;
  OUTLINED_FUNCTION_18_18();
  OUTLINED_FUNCTION_14_19();
  sub_249955F10();
  OUTLINED_FUNCTION_13_20();
  v39 = v83;
  v40 = OUTLINED_FUNCTION_6_23();
  OUTLINED_FUNCTION_0_31((uint64_t)v31);
  OUTLINED_FUNCTION_10_19((uint64_t)v26, v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v37 = (v40 & 1) != 0 || (int)OUTLINED_FUNCTION_4_19() < -32768;
  OUTLINED_FUNCTION_0_31((uint64_t)v26);
  a1 = v83;
  v19 = v74;
LABEL_17:
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v41(v29, a1, a2);
  if ((v37 & 1) != 0)
  {
    OUTLINED_FUNCTION_0_31((uint64_t)v29);
LABEL_30:
    OUTLINED_FUNCTION_0_31(v83);
    v53 = 0;
    v54 = 1;
LABEL_44:
    LOBYTE(v85) = v54;
    return v53 | ((unint64_t)v54 << 32);
  }
  v74 = v16;
  v42 = OUTLINED_FUNCTION_2_26();
  v43 = OUTLINED_FUNCTION_3_23();
  if ((v42 & 1) != 0)
  {
    if (v43 > 32)
      goto LABEL_21;
LABEL_29:
    v52 = OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_0_31((uint64_t)v29);
    if (v52 >= 0x8000)
      goto LABEL_30;
    goto LABEL_22;
  }
  if (v43 <= 31)
    goto LABEL_29;
LABEL_21:
  OUTLINED_FUNCTION_16_13(0x7FFF);
  OUTLINED_FUNCTION_1_30();
  v44 = sub_2499557FC();
  OUTLINED_FUNCTION_0_31((uint64_t)v31);
  OUTLINED_FUNCTION_0_31((uint64_t)v29);
  if ((v44 & 1) != 0)
    goto LABEL_30;
LABEL_22:
  v45 = v82;
  v41((char *)v82, v83, a2);
  v46 = OUTLINED_FUNCTION_2_26();
  v47 = v80;
  OUTLINED_FUNCTION_7_25(v80);
  if ((v46 & 1) == 0)
  {
    OUTLINED_FUNCTION_0_31(v47);
    v49 = v81;
    goto LABEL_32;
  }
  v48 = OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_0_31(v47);
  v69 = v48 <= 32;
  v49 = v81;
  if (v69)
    goto LABEL_32;
  OUTLINED_FUNCTION_7_25((uint64_t)v19);
  v85 = 0x80000000;
  if ((OUTLINED_FUNCTION_2_26() & 1) == 0)
  {
    v64 = OUTLINED_FUNCTION_2_26();
    v65 = OUTLINED_FUNCTION_3_23();
    if ((v64 & 1) != 0)
    {
      if (v65 > 32)
      {
        sub_2499280E4();
        OUTLINED_FUNCTION_1_30();
        v66 = OUTLINED_FUNCTION_5_20();
        OUTLINED_FUNCTION_0_31((uint64_t)v31);
        result = OUTLINED_FUNCTION_0_31((uint64_t)v19);
        v45 = v82;
        if ((v66 & 1) != 0)
          goto LABEL_60;
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_18_18();
      OUTLINED_FUNCTION_14_19();
      sub_249955F10();
      v70 = OUTLINED_FUNCTION_5_20();
      OUTLINED_FUNCTION_0_31((uint64_t)v31);
      v60 = v75;
      OUTLINED_FUNCTION_10_19(v75, (uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      if ((v70 & 1) != 0)
        goto LABEL_59;
      v71 = v85;
      v72 = OUTLINED_FUNCTION_4_19();
      result = OUTLINED_FUNCTION_0_31(v60);
      v69 = v71 <= v72;
    }
    else
    {
      if (v65 >= 32)
      {
        OUTLINED_FUNCTION_0_31((uint64_t)v19);
        v45 = v82;
        goto LABEL_32;
      }
      v68 = OUTLINED_FUNCTION_4_19();
      result = OUTLINED_FUNCTION_0_31((uint64_t)v19);
      v69 = v85 <= v68;
    }
    v45 = v82;
    if (!v69)
      goto LABEL_60;
    goto LABEL_32;
  }
  if (OUTLINED_FUNCTION_3_23() >= 32)
  {
    sub_2499280E4();
    OUTLINED_FUNCTION_1_30();
    v67 = OUTLINED_FUNCTION_5_20();
    OUTLINED_FUNCTION_0_31((uint64_t)v31);
    result = OUTLINED_FUNCTION_0_31((uint64_t)v19);
    if ((v67 & 1) != 0)
      goto LABEL_60;
  }
  else
  {
    v50 = OUTLINED_FUNCTION_4_19();
    result = OUTLINED_FUNCTION_0_31((uint64_t)v19);
    if (v85 > v50)
      goto LABEL_60;
  }
LABEL_32:
  v55 = OUTLINED_FUNCTION_3_23();
  v56 = (uint64_t)v74;
  OUTLINED_FUNCTION_7_25((uint64_t)v74);
  if (v55 < 33)
  {
    v57 = OUTLINED_FUNCTION_3_23();
    OUTLINED_FUNCTION_0_31(v56);
    if (v57 != 32 || (OUTLINED_FUNCTION_2_26() & 1) != 0)
      goto LABEL_43;
  }
  else
  {
    OUTLINED_FUNCTION_0_31(v56);
  }
  OUTLINED_FUNCTION_7_25(v49);
  v85 = 0x7FFFFFFF;
  v58 = OUTLINED_FUNCTION_2_26();
  v59 = OUTLINED_FUNCTION_3_23();
  if ((v58 & 1) == 0)
  {
    if (v59 > 31)
    {
      v84 = 0x7FFFFFFF;
      OUTLINED_FUNCTION_10_19((uint64_t)v31, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
      sub_2499280E4();
      v62 = v76;
      sub_249955B14();
      OUTLINED_FUNCTION_13_20();
      v60 = OUTLINED_FUNCTION_6_23();
      OUTLINED_FUNCTION_0_31(v62);
      v61 = (uint64_t)v31;
      goto LABEL_42;
    }
LABEL_40:
    OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_0_31(v49);
    v45 = v82;
LABEL_43:
    v63 = OUTLINED_FUNCTION_4_19();
    OUTLINED_FUNCTION_0_31(v45);
    OUTLINED_FUNCTION_0_31(v83);
    v54 = 0;
    v53 = (v63 << 16);
    goto LABEL_44;
  }
  if (v59 <= 32)
    goto LABEL_40;
  sub_2499280E4();
  OUTLINED_FUNCTION_1_30();
  v60 = sub_2499557FC();
  OUTLINED_FUNCTION_0_31((uint64_t)v31);
  v61 = v49;
LABEL_42:
  OUTLINED_FUNCTION_0_31(v61);
  v45 = v82;
  if ((v60 & 1) == 0)
    goto LABEL_43;
  __break(1u);
LABEL_59:
  result = OUTLINED_FUNCTION_0_31(v60);
LABEL_60:
  __break(1u);
  return result;
}

unint64_t sub_2499280E4()
{
  unint64_t result;

  result = qword_2578A20F0;
  if (!qword_2578A20F0)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_2578A20F0);
  }
  return result;
}

uint64_t HIDFixed.magnitude.getter(uint64_t result)
{
  if ((int)result >= 0)
    return result;
  else
    return -(int)result;
}

unint64_t sub_24992812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result;

  result = HIDFixed.init<A>(exactly:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(_BYTE *)(a4 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_249928158@<X0>(_DWORD *a1@<X8>)
{
  unsigned int *v1;
  uint64_t result;

  result = HIDFixed.magnitude.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_249928180@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = static HIDFixed.* infix(_:_:)(*a1);
  *a2 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)(int a1)
{
  double v1;
  double v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_8_18(a1);
  v3 = HIDFixed.init(doubleValue:)(v1 * v2);
  return OUTLINED_FUNCTION_9_15(v3);
}

uint64_t sub_2499281CC(int *a1)
{
  return static HIDFixed.*= infix(_:_:)(a1);
}

uint64_t static HIDFixed.*= infix(_:_:)(int *a1)
{
  uint64_t result;

  result = static HIDFixed.* infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)()
{
  double v0;
  double v1;
  unint64_t v2;

  OUTLINED_FUNCTION_15_16();
  v2 = HIDFixed.init(doubleValue:)(v1 * v0);
  return OUTLINED_FUNCTION_9_15(v2);
}

uint64_t static HIDFixed./ infix(_:_:)(int a1)
{
  double v1;
  double v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_8_18(a1);
  v3 = HIDFixed.init(doubleValue:)(v1 / v2);
  return OUTLINED_FUNCTION_9_15(v3);
}

uint64_t static HIDFixed./= infix(_:_:)(int *a1)
{
  uint64_t result;

  result = static HIDFixed./ infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed./ infix(_:_:)()
{
  double v0;
  double v1;
  unint64_t v2;

  OUTLINED_FUNCTION_15_16();
  v2 = HIDFixed.init(doubleValue:)(v1 / v0);
  return OUTLINED_FUNCTION_9_15(v2);
}

uint64_t HIDFixed.description.getter()
{
  return sub_249955988();
}

unint64_t sub_24992829C()
{
  unint64_t result;

  result = qword_2578A20F8;
  if (!qword_2578A20F8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDFixed, &type metadata for HIDFixed);
    atomic_store(result, (unint64_t *)&qword_2578A20F8);
  }
  return result;
}

uint64_t sub_2499282D8()
{
  return MEMORY[0x24BEE17E8];
}

uint64_t sub_2499282E4()
{
  return MEMORY[0x24BEE1440];
}

unint64_t sub_2499282F4()
{
  unint64_t result;

  result = qword_2578A2100;
  if (!qword_2578A2100)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDFixed, &type metadata for HIDFixed);
    atomic_store(result, (unint64_t *)&qword_2578A2100);
  }
  return result;
}

unint64_t sub_249928334()
{
  unint64_t result;

  result = qword_2578A2108;
  if (!qword_2578A2108)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDFixed, &type metadata for HIDFixed);
    atomic_store(result, (unint64_t *)&qword_2578A2108);
  }
  return result;
}

uint64_t sub_249928370()
{
  return MEMORY[0x24BEE3FA0];
}

uint64_t sub_24992837C()
{
  return MEMORY[0x24BEE3FC0];
}

uint64_t sub_249928388()
{
  return HIDFixed.description.getter();
}

ValueMetadata *type metadata accessor for HIDFixed()
{
  return &type metadata for HIDFixed;
}

uint64_t OUTLINED_FUNCTION_0_31(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_30()
{
  return sub_249955B14();
}

uint64_t OUTLINED_FUNCTION_2_26()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_3_23()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  return sub_2499557FC();
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return sub_2499557FC();
}

uint64_t OUTLINED_FUNCTION_7_25(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

double OUTLINED_FUNCTION_8_18(int a1)
{
  return (double)a1 * 0.0000152587891;
}

uint64_t OUTLINED_FUNCTION_9_15(uint64_t result)
{
  if ((result & 0x100000000) != 0)
    return 0;
  else
    return result;
}

uint64_t OUTLINED_FUNCTION_10_19@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_14_19()
{
  return sub_249955F34();
}

unint64_t OUTLINED_FUNCTION_16_13@<X0>(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 84) = a1;
  return sub_2499280E4();
}

uint64_t OUTLINED_FUNCTION_18_18()
{
  return swift_getAssociatedConformanceWitness();
}

double ScrollEvent.delta.getter()
{
  double v0;
  double v1;

  OUTLINED_FUNCTION_10_20();
  v1 = v0;
  OUTLINED_FUNCTION_1_31();
  IOHIDEventGetFloatValue();
  IOHIDEventGetFloatValue();
  return v1;
}

uint64_t ScrollEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateScrollEvent();
}

uint64_t static ScrollEvent.eventType.getter()
{
  return 6;
}

uint64_t ScrollEvent.init(event:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 6)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t ScrollEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

void ScrollEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_10_20();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499285C8()
{
  return OUTLINED_FUNCTION_4_20();
}

uint64_t ScrollEvent.y.getter()
{
  return OUTLINED_FUNCTION_5_21();
}

uint64_t ScrollEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_32();
}

void ScrollEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  OUTLINED_FUNCTION_18_13();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249928614()
{
  return OUTLINED_FUNCTION_0_32();
}

uint64_t ScrollEvent.z.getter()
{
  return OUTLINED_FUNCTION_5_21();
}

uint64_t ScrollEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_32();
}

void ScrollEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992866C()
{
  return OUTLINED_FUNCTION_0_32();
}

BOOL ScrollEvent.isPixels.getter()
{
  return OUTLINED_FUNCTION_11_21() != 0;
}

uint64_t ScrollEvent.isPixels.setter()
{
  return OUTLINED_FUNCTION_2_27();
}

void ScrollEvent.isPixels.modify(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = OUTLINED_FUNCTION_11_21() != 0;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499286E4()
{
  return OUTLINED_FUNCTION_2_27();
}

uint64_t sub_2499286F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = ScrollEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

void sub_249928718(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(double *)a1 = ScrollEvent.delta.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t sub_249928744()
{
  return ScrollEvent.delta.setter();
}

uint64_t ScrollEvent.delta.setter()
{
  IOHIDEventSetFloatValue();
  OUTLINED_FUNCTION_1_31();
  IOHIDEventSetFloatValue();
  return OUTLINED_FUNCTION_7_21();
}

uint64_t (*ScrollEvent.delta.modify(_QWORD *a1, uint64_t a2))()
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[3] = a2;
  OUTLINED_FUNCTION_10_20();
  v4 = v3;
  OUTLINED_FUNCTION_18_13();
  v6 = v5;
  IOHIDEventGetFloatValue();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  return sub_24992880C;
}

uint64_t sub_24992880C()
{
  IOHIDEventSetFloatValue();
  OUTLINED_FUNCTION_1_31();
  IOHIDEventSetFloatValue();
  return OUTLINED_FUNCTION_7_21();
}

void sub_249928854(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  ScrollEvent.x.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249928874(double *a1, _QWORD *a2)
{
  return ScrollEvent.x.setter(*a2, *a1);
}

void sub_249928880(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  ScrollEvent.y.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499288A0()
{
  return ScrollEvent.y.setter();
}

void sub_2499288AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_2(a1);
  ScrollEvent.z.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499288CC()
{
  return ScrollEvent.z.setter();
}

void sub_2499288D8(uint64_t a1)
{
  BOOL *v1;

  OUTLINED_FUNCTION_6_2(a1);
  *v1 = ScrollEvent.isPixels.getter();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2499288FC()
{
  return ScrollEvent.isPixels.setter();
}

ValueMetadata *type metadata accessor for ScrollEvent()
{
  return &type metadata for ScrollEvent;
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_31()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_5_21()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_10_20()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  return IOHIDEventGetIntegerValue();
}

void HIDServicePropertyKey.rawValue.getter()
{
  OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_6_0();
}

uint64_t HIDServicePropertyKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HIDServicePropertyKey.rawValue.modify())()
{
  return nullsub_1;
}

void HIDServicePropertyKey.stringValue.getter()
{
  OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_6_0();
}

UniversalHID::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(stringValue:)(Swift::String stringValue)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  UniversalHID::HIDServicePropertyKey_optional result;

  v1 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
  v2 = OUTLINED_FUNCTION_8_16();
  v4 = sub_249932B60(v2, v3, v1);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_8_16();
  result.value.rawValue._object = v6;
  result.value.rawValue._countAndFlagsBits = v5;
  return result;
}

uint64_t static HIDServicePropertyKey.allCases.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2120);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24995B960;
  *(_QWORD *)(v0 + 32) = 0x656369767265535FLL;
  *(_QWORD *)(v0 + 40) = 0xEA00000000004449;
  strcpy((char *)(v0 + 48), "HIDAccelCurves");
  *(_BYTE *)(v0 + 63) = -18;
  *(_QWORD *)(v0 + 64) = 0xD000000000000014;
  *(_QWORD *)(v0 + 72) = 0x800000024995EFC0;
  strcpy((char *)(v0 + 80), "Authenticated");
  *(_WORD *)(v0 + 94) = -4864;
  *(_QWORD *)(v0 + 96) = 0x6E492D746C697542;
  *(_QWORD *)(v0 + 104) = 0xE800000000000000;
  strcpy((char *)(v0 + 112), "CapsLockDelay");
  *(_WORD *)(v0 + 126) = -4864;
  OUTLINED_FUNCTION_5_22();
  *(_QWORD *)(v1 + 128) = v2;
  *(_QWORD *)(v1 + 136) = v3;
  strcpy((char *)(v1 + 144), "DeviceTypeHint");
  *(_BYTE *)(v1 + 159) = -18;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = v5;
  OUTLINED_FUNCTION_5_22();
  *(_QWORD *)(v7 + 176) = v8;
  *(_QWORD *)(v7 + 184) = v9;
  OUTLINED_FUNCTION_1_32();
  v10[24] = 0xD000000000000014;
  v10[25] = v11;
  v10[26] = 0x5579616C70736964;
  v10[27] = 0xEB00000000444955;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v12 + 224) = v14;
  *(_QWORD *)(v12 + 232) = v13;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v15 + 240) = v17;
  *(_QWORD *)(v15 + 248) = v16;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v18 + 256) = v20;
  *(_QWORD *)(v18 + 264) = v19;
  OUTLINED_FUNCTION_10_21();
  *(_QWORD *)(v21 + 272) = v22;
  *(_QWORD *)(v21 + 280) = v23;
  OUTLINED_FUNCTION_2_28();
  *(_QWORD *)(v24 + 288) = v25;
  *(_QWORD *)(v24 + 296) = v26;
  OUTLINED_FUNCTION_10_21();
  v27[38] = v29;
  v27[39] = v28;
  v27[40] = 0x437972746E756F43;
  v27[41] = 0xEB0000000065646FLL;
  OUTLINED_FUNCTION_10_21();
  *(_QWORD *)(v30 + 336) = v31;
  *(_QWORD *)(v30 + 344) = v32;
  strcpy((char *)(v30 + 352), "StandardType");
  *(_BYTE *)(v30 + 365) = 0;
  *(_WORD *)(v30 + 366) = -5120;
  strcpy((char *)(v30 + 368), "Manufacturer");
  *(_BYTE *)(v30 + 381) = 0;
  *(_WORD *)(v30 + 382) = -5120;
  OUTLINED_FUNCTION_2_28();
  *(_QWORD *)(v33 + 384) = v34;
  *(_QWORD *)(v33 + 392) = v35;
  OUTLINED_FUNCTION_10_21();
  *(_QWORD *)(v36 + 400) = v37;
  *(_QWORD *)(v36 + 408) = v38;
  OUTLINED_FUNCTION_2_28();
  *(_QWORD *)(v39 + 416) = v40;
  *(_QWORD *)(v39 + 424) = v41;
  OUTLINED_FUNCTION_2_28();
  *(_QWORD *)(v42 + 432) = v43;
  *(_QWORD *)(v42 + 440) = v44;
  OUTLINED_FUNCTION_2_28();
  *(_QWORD *)(v45 + 448) = v46;
  *(_QWORD *)(v45 + 456) = v47;
  OUTLINED_FUNCTION_7_26();
  *(_QWORD *)(v48 + 464) = 0xD000000000000014;
  *(_QWORD *)(v48 + 472) = v49;
  OUTLINED_FUNCTION_7_26();
  *(_QWORD *)(v50 + 480) = 0xD000000000000014;
  *(_QWORD *)(v50 + 488) = v51;
  OUTLINED_FUNCTION_7_26();
  *(_QWORD *)(v52 + 496) = 0xD000000000000014;
  *(_QWORD *)(v52 + 504) = v53;
  strcpy((char *)(v52 + 512), "PrimaryUsage");
  *(_BYTE *)(v52 + 525) = 0;
  *(_WORD *)(v52 + 526) = -5120;
  *(_QWORD *)(v52 + 528) = v54;
  OUTLINED_FUNCTION_7_26();
  *(_QWORD *)(v55 + 536) = v56;
  *(_QWORD *)(v55 + 544) = 0x746375646F7250;
  *(_QWORD *)(v55 + 552) = 0xE700000000000000;
  *(_QWORD *)(v55 + 560) = 0x49746375646F7250;
  *(_QWORD *)(v55 + 568) = 0xE900000000000044;
  *(_QWORD *)(v55 + 576) = v57;
  *(_QWORD *)(v55 + 584) = 0x800000024995F230;
  strcpy((char *)(v55 + 592), "ReportInterval");
  *(_BYTE *)(v55 + 607) = -18;
  *(_QWORD *)(v55 + 608) = v58;
  *(_QWORD *)(v55 + 616) = 0x800000024995F250;
  *(_QWORD *)(v55 + 624) = v59;
  *(_QWORD *)(v55 + 632) = 0x800000024995F270;
  *(_QWORD *)(v55 + 640) = 0xD00000000000001DLL;
  OUTLINED_FUNCTION_3_24();
  *(_QWORD *)(v60 + 648) = v61;
  *(_QWORD *)(v60 + 656) = 0xD000000000000014;
  OUTLINED_FUNCTION_3_24();
  *(_QWORD *)(v62 + 664) = v63;
  *(_QWORD *)(v62 + 672) = 0xD000000000000013;
  OUTLINED_FUNCTION_3_24();
  *(_QWORD *)(v64 + 680) = v65;
  *(_QWORD *)(v64 + 688) = v66;
  OUTLINED_FUNCTION_3_24();
  *(_QWORD *)(v67 + 696) = v68;
  *(_QWORD *)(v67 + 704) = v69;
  OUTLINED_FUNCTION_3_24();
  v70[89] = v71;
  v70[90] = 0xD000000000000018;
  v70[91] = 0x800000024995F330;
  v70[92] = v72;
  v70[93] = 0x800000024995F350;
  v70[94] = 0x726F70736E617254;
  v70[95] = v73 | 0x30;
  v70[96] = 0xD000000000000017;
  OUTLINED_FUNCTION_5_22();
  *(_QWORD *)(v74 + 776) = v75;
  *(_QWORD *)(v74 + 784) = v76;
  OUTLINED_FUNCTION_5_22();
  *(_QWORD *)(v77 + 792) = v78;
  *(_QWORD *)(v77 + 800) = v79;
  OUTLINED_FUNCTION_5_22();
  *(_QWORD *)(v80 + 808) = v81;
  *(_QWORD *)(v80 + 816) = v82;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v83 + 824) = v84;
  if (qword_2578A07D8 != -1)
    swift_once();
  v85 = *(_QWORD *)algn_2578A2118;
  *(_QWORD *)(v0 + 832) = qword_2578A2110;
  *(_QWORD *)(v0 + 840) = v85;
  *(_QWORD *)(v0 + 848) = 0xD000000000000015;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v0 + 856) = v86;
  *(_QWORD *)(v0 + 864) = 0x4449726F646E6556;
  *(_QWORD *)(v0 + 872) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HIDServicePropertyKey.intValue.getter()
{
  return 0;
}

UniversalHID::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1;
  void *v2;
  UniversalHID::HIDServicePropertyKey_optional result;

  v1 = 0;
  v2 = 0;
  result.value.rawValue._object = v2;
  result.value.rawValue._countAndFlagsBits = v1;
  return result;
}

uint64_t static HIDServicePropertyKey._serviceID.getter()
{
  return 0x656369767265535FLL;
}

void static HIDServicePropertyKey.accelParametricCurves.getter()
{
  OUTLINED_FUNCTION_6_24();
}

unint64_t static HIDServicePropertyKey.appleVendorSupported.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

uint64_t static HIDServicePropertyKey.authenticatedDevice.getter()
{
  return 0x69746E6568747541;
}

uint64_t static HIDServicePropertyKey.builtIn.getter()
{
  return 0x6E492D746C697542;
}

uint64_t static HIDServicePropertyKey.capsLockDelay.getter()
{
  return 0x6B636F4C73706143;
}

unint64_t static HIDServicePropertyKey.capsLockLanguageSwitch.getter()
{
  return OUTLINED_FUNCTION_0_33(22);
}

void static HIDServicePropertyKey.deviceTypeHint.getter()
{
  OUTLINED_FUNCTION_6_24();
}

unint64_t static HIDServicePropertyKey.deviceUsagePairs.getter()
{
  return OUTLINED_FUNCTION_0_33(16);
}

unint64_t static HIDServicePropertyKey.disableAccessibilityEventTranslation.getter()
{
  return OUTLINED_FUNCTION_0_33(36);
}

unint64_t static HIDServicePropertyKey.dispatchScrollEvents.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

uint64_t static HIDServicePropertyKey.displayIdentifier.getter()
{
  return 0x5579616C70736964;
}

unint64_t static HIDServicePropertyKey.displayIntegrated.getter()
{
  return OUTLINED_FUNCTION_0_33(17);
}

unint64_t static HIDServicePropertyKey.eventServiceProperties.getter()
{
  return OUTLINED_FUNCTION_0_33(25);
}

unint64_t static HIDServicePropertyKey.exclusivityIdentifier.getter()
{
  return OUTLINED_FUNCTION_0_33(21);
}

unint64_t static HIDServicePropertyKey.faceTimeRemoteControlSessionID.getter()
{
  return OUTLINED_FUNCTION_0_33(30);
}

unint64_t static HIDServicePropertyKey.fnKeyboardUsageMap.getter()
{
  return OUTLINED_FUNCTION_0_33(18);
}

unint64_t static HIDServicePropertyKey.ignoresNaturalScrollingPreference.getter()
{
  return OUTLINED_FUNCTION_0_33(33);
}

uint64_t static HIDServicePropertyKey.keyboardCountryCode.getter()
{
  return 0x437972746E756F43;
}

unint64_t static HIDServicePropertyKey.keyboardLanguage.getter()
{
  return OUTLINED_FUNCTION_0_33(16);
}

void static HIDServicePropertyKey.keyboardStandardType.getter()
{
  OUTLINED_FUNCTION_11_22();
}

void static HIDServicePropertyKey.manufacturer.getter()
{
  OUTLINED_FUNCTION_11_22();
}

unint64_t static HIDServicePropertyKey.mouseAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

unint64_t static HIDServicePropertyKey.mouseScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(26);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationMultiplier.getter()
{
  return OUTLINED_FUNCTION_0_33(32);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_33(30);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_33(27);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_33(26);
}

unint64_t static HIDServicePropertyKey.pointerButtonCount.getter()
{
  return OUTLINED_FUNCTION_0_33(21);
}

unint64_t static HIDServicePropertyKey.pointerButtonMode.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

unint64_t static HIDServicePropertyKey.pointerReportRate.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

unint64_t static HIDServicePropertyKey.pointerResolution.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

void static HIDServicePropertyKey.primaryUsage.getter()
{
  OUTLINED_FUNCTION_11_22();
}

unint64_t static HIDServicePropertyKey.primaryUsagePage.getter()
{
  return OUTLINED_FUNCTION_0_33(16);
}

uint64_t static HIDServicePropertyKey.product.getter()
{
  return 0x746375646F7250;
}

uint64_t static HIDServicePropertyKey.productID.getter()
{
  return 0x49746375646F7250;
}

unint64_t static HIDServicePropertyKey.reportDescriptor.getter()
{
  return OUTLINED_FUNCTION_0_33(16);
}

void static HIDServicePropertyKey.reportInterval.getter()
{
  OUTLINED_FUNCTION_6_24();
}

unint64_t static HIDServicePropertyKey.scrollAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_33(29);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_33(26);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_33(25);
}

unint64_t static HIDServicePropertyKey.scrollAccelParametricCurves.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

unint64_t static HIDServicePropertyKey.scrollReportRate.getter()
{
  return OUTLINED_FUNCTION_0_33(19);
}

unint64_t static HIDServicePropertyKey.scrollResolution.getter()
{
  return OUTLINED_FUNCTION_0_33(19);
}

unint64_t static HIDServicePropertyKey.subinterfaceID.getter()
{
  return OUTLINED_FUNCTION_0_33(17);
}

unint64_t static HIDServicePropertyKey.supportsGestureScrolling.getter()
{
  return OUTLINED_FUNCTION_0_33(24);
}

unint64_t static HIDServicePropertyKey.surfaceDimensions.getter()
{
  return OUTLINED_FUNCTION_0_33(17);
}

unint64_t static HIDServicePropertyKey.trackpadAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(23);
}

unint64_t static HIDServicePropertyKey.trackpadScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(29);
}

uint64_t static HIDServicePropertyKey.transport.getter()
{
  return 0x726F70736E617254;
}

unint64_t static HIDServicePropertyKey.universalControlBuiltIn.getter()
{
  return OUTLINED_FUNCTION_0_33(23);
}

unint64_t static HIDServicePropertyKey.universalControlVirtualService.getter()
{
  return OUTLINED_FUNCTION_0_33(30);
}

uint64_t sub_24992951C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_249955844();
  qword_2578A2110 = result;
  *(_QWORD *)algn_2578A2118 = v1;
  return result;
}

void static HIDServicePropertyKey.userDeviceCreateInactive.getter()
{
  if (qword_2578A07D8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_0();
}

unint64_t static HIDServicePropertyKey.useRemoteAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(21);
}

uint64_t static HIDServicePropertyKey.vendorID.getter()
{
  return 0x4449726F646E6556;
}

uint64_t sub_2499295D0@<X0>(Swift::String *a1@<X0>, UniversalHID::HIDServicePropertyKey *a2@<X8>)
{
  uint64_t result;
  UniversalHID::HIDServicePropertyKey v4;

  v4 = HIDServicePropertyKey.init(rawValue:)(*a1);
  result = v4.rawValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t sub_2499295FC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24992960C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578A2128;
  if (!qword_2578A2128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A2130);
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578A2128);
  }
  return result;
}

uint64_t sub_249929650@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static HIDServicePropertyKey.allCases.getter();
  *a1 = result;
  return result;
}

unint64_t sub_249929678()
{
  unint64_t result;

  result = qword_2578A2138;
  if (!qword_2578A2138)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_2578A2138);
  }
  return result;
}

unint64_t sub_2499296B8()
{
  unint64_t result;

  result = qword_2578A2140;
  if (!qword_2578A2140)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_2578A2140);
  }
  return result;
}

void sub_2499296F4()
{
  HIDServicePropertyKey.stringValue.getter();
}

uint64_t sub_2499296FC@<X0>(uint64_t a1@<X0>, UniversalHID::HIDServicePropertyKey_optional *a2@<X8>)
{
  uint64_t result;
  UniversalHID::HIDServicePropertyKey_optional v5;

  v5 = HIDServicePropertyKey.init(stringValue:)(*(Swift::String *)&a1);
  result = v5.value.rawValue._countAndFlagsBits;
  *a2 = v5;
  return result;
}

void sub_249929720(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

unint64_t sub_24992972C()
{
  unint64_t result;

  result = qword_2578A2148;
  if (!qword_2578A2148)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_2578A2148);
  }
  return result;
}

uint64_t sub_249929768()
{
  _QWORD *v0;

  return sub_249932884(*v0, v0[1]);
}

uint64_t sub_249929770(uint64_t a1)
{
  _QWORD *v1;

  return sub_249932920(a1, *v1, v1[1]);
}

uint64_t sub_249929778(uint64_t a1)
{
  _QWORD *v1;

  return sub_249932A94(a1, *v1, v1[1]);
}

uint64_t sub_249929780()
{
  sub_249929864();
  return sub_249956024();
}

uint64_t sub_2499297A8()
{
  sub_249929864();
  return sub_249956030();
}

uint64_t sub_2499297D0(_QWORD *a1, _QWORD *a2)
{
  return sub_24994303C(*a1, a1[1], *a2, a2[1]);
}

_QWORD *assignWithCopy for HIDServicePropertyKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HIDServicePropertyKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HIDServicePropertyKey()
{
  return &type metadata for HIDServicePropertyKey;
}

unint64_t sub_249929864()
{
  unint64_t result;

  result = qword_2578A2150;
  if (!qword_2578A2150)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_2578A2150);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_0_33(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return swift_bridgeObjectRetain();
}

void HIDReport.scaledValue<A>(as:atIndex:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  if (a5 == MEMORY[0x24BEE3E50])
  {
    OUTLINED_FUNCTION_10_22();
    OUTLINED_FUNCTION_9_16();
    sub_2498CAD04(v15, v16, v17);
  }
  else if (a5 == MEMORY[0x24BEE3F30])
  {
    OUTLINED_FUNCTION_10_22();
    OUTLINED_FUNCTION_9_16();
    sub_2498CAD4C(v18, v19, v20);
  }
  else if (a5 == MEMORY[0x24BEE3F88])
  {
    OUTLINED_FUNCTION_10_22();
    OUTLINED_FUNCTION_9_16();
    sub_2498CADD8();
  }
  else if (a5 == MEMORY[0x24BEE4008])
  {
    OUTLINED_FUNCTION_10_22();
    OUTLINED_FUNCTION_9_16();
    sub_2498CAD94(v21, v22, v23);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    *((_QWORD *)&v11 + 1) = sub_249955D0C();
    *(_QWORD *)&v11 = *((_QWORD *)&v11 + 1) - 8;
    switch((unint64_t)(v11 >> 3))
    {
      case 0uLL:
        sub_24992A34C();
        sub_24992A388();
        OUTLINED_FUNCTION_34_6();
        v14 = MEMORY[0x24BEE4260];
        goto LABEL_14;
      case 1uLL:
        sub_24992A2D4();
        sub_24992A310();
        OUTLINED_FUNCTION_34_6();
        v14 = MEMORY[0x24BEE4478];
        goto LABEL_14;
      case 3uLL:
        sub_24992A25C();
        sub_24992A298();
        OUTLINED_FUNCTION_34_6();
        v14 = MEMORY[0x24BEE44F0];
        goto LABEL_14;
      case 7uLL:
        sub_24992A1E4();
        sub_24992A220();
        OUTLINED_FUNCTION_34_6();
        v14 = MEMORY[0x24BEE4568];
LABEL_14:
        HIDReport.scaledValue<A, B>(as:unsignedType:atIndex:)(v12, v13, a2, a3, a4, a5, v14, a6, v24, v25, v26);
        OUTLINED_FUNCTION_9_16();
        break;
      default:
        OUTLINED_FUNCTION_5_23();
        __break(1u);
        break;
    }
  }
}

void HIDReport.setScaledValue<A>(_:as:atIndex:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  char v20;
  double v21;
  char v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;

  if (a4 == MEMORY[0x24BEE3E50])
  {
    OUTLINED_FUNCTION_26_10();
    if (!v15)
    {
      OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_1_33();
      sub_24992A3C4(v16, v17);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a4 == MEMORY[0x24BEE3F30])
  {
    OUTLINED_FUNCTION_26_10();
    if (!v15)
    {
      OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_1_33();
      sub_24992A420(v18, v19);
      return;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (a4 == MEMORY[0x24BEE3F88])
  {
    OUTLINED_FUNCTION_26_10();
    if (v15)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    OUTLINED_FUNCTION_29_9();
    OUTLINED_FUNCTION_1_33();
    sub_24992A4D0(v20, v21);
  }
  else
  {
    v9 = *(_QWORD *)&a1 & 0x7FF0000000000000;
    if (a4 != MEMORY[0x24BEE4008])
    {
      if (v9 != 0x7FF0000000000000)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        *((_QWORD *)&v12 + 1) = sub_249955D0C();
        *(_QWORD *)&v12 = *((_QWORD *)&v12 + 1) - 8;
        switch((unint64_t)(v12 >> 3))
        {
          case 0uLL:
            v13 = sub_2498D1C28();
            v14 = sub_24992A388();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v14, MEMORY[0x24BEE4260], a3, a4, MEMORY[0x24BEE4260], a5, v13, v14, a6);
            goto LABEL_19;
          case 1uLL:
            v26 = sub_2498D1C68();
            v27 = sub_24992A310();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v27, MEMORY[0x24BEE4478], a3, a4, MEMORY[0x24BEE4478], a5, v26, v27, a6);
            goto LABEL_19;
          case 3uLL:
            v28 = sub_2498D1CA8();
            v29 = sub_24992A298();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v29, MEMORY[0x24BEE44F0], a3, a4, MEMORY[0x24BEE44F0], a5, v28, v29, a6);
            goto LABEL_19;
          case 7uLL:
            v24 = sub_2498D10AC();
            v25 = sub_24992A220();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v25, MEMORY[0x24BEE4568], a3, a4, MEMORY[0x24BEE4568], a5, v24, v25, a6);
LABEL_19:
            OUTLINED_FUNCTION_1_33();
            return;
          default:
            goto LABEL_25;
        }
      }
      goto LABEL_22;
    }
    if (v9 == 0x7FF0000000000000)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      OUTLINED_FUNCTION_5_23();
      __break(1u);
      JUMPOUT(0x249929DA4);
    }
    OUTLINED_FUNCTION_29_9();
    OUTLINED_FUNCTION_1_33();
    sub_24992A47C(v22, v23);
  }
}

uint64_t static Int8.logicalMinimum.getter()
{
  return 128;
}

uint64_t static Int8.logicalMaximum.getter()
{
  return 127;
}

void sub_249929DD4(_BYTE *a1@<X8>)
{
  *a1 = 0x80;
}

void sub_249929DE0(_BYTE *a1@<X8>)
{
  *a1 = 127;
}

uint64_t static Int16.logicalMinimum.getter()
{
  return 0x8000;
}

uint64_t static Int16.logicalMaximum.getter()
{
  return 0x7FFFLL;
}

void sub_249929DFC(_WORD *a1@<X8>)
{
  *a1 = 0x8000;
}

void sub_249929E08(_WORD *a1@<X8>)
{
  *a1 = 0x7FFF;
}

uint64_t static Int32.logicalMinimum.getter()
{
  return 0x80000000;
}

uint64_t static Int32.logicalMaximum.getter()
{
  return 0x7FFFFFFFLL;
}

void sub_249929E24(_DWORD *a1@<X8>)
{
  *a1 = 0x80000000;
}

void sub_249929E30(_DWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFF;
}

unint64_t static Int64.logicalMinimum.getter()
{
  return 0x8000000000000000;
}

uint64_t static Int64.logicalMaximum.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

void sub_249929E4C(_QWORD *a1@<X8>)
{
  *a1 = 0x8000000000000000;
}

void sub_249929E58(_QWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t HIDReport.scaledValue<A, B>(as:unsignedType:atIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedConformanceWitness;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v31 = a4;
  v32 = a5;
  v30 = a3;
  v33 = a10;
  v27[1] = *(_QWORD *)(OUTLINED_FUNCTION_35_5() - 8);
  OUTLINED_FUNCTION_17_6();
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_35_5();
  v28 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_35_1();
  v27[2] = v15;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_40_2();
  v27[0] = v17;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v27 - v19;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29 = v20;
  v22 = v31;
  v23 = v32;
  v31 = AssociatedConformanceWitness;
  v32 = a11;
  HIDReport.subscript.getter(v30, v22, v23, v13, (uint64_t)v20);
  OUTLINED_FUNCTION_19_16();
  if (OUTLINED_FUNCTION_31_5() < 65)
  {
    OUTLINED_FUNCTION_21_14();
    OUTLINED_FUNCTION_32_6();
  }
  else
  {
    sub_2498D1070();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_18_19();
  }
  OUTLINED_FUNCTION_17_15();
  v24 = v29;
  OUTLINED_FUNCTION_19_16();
  if (OUTLINED_FUNCTION_31_5() <= 64)
  {
    OUTLINED_FUNCTION_21_14();
    OUTLINED_FUNCTION_32_6();
  }
  else
  {
    sub_2498D1070();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_18_19();
  }
  OUTLINED_FUNCTION_38_5();
  v25 = v28;
  if (sub_249955D18() > 0)
  {
    (*(void (**)(_QWORD, char *, uint64_t))(v25 + 16))(v27[0], v24, v13);
    if (OUTLINED_FUNCTION_20_15() >= 65)
      goto LABEL_11;
LABEL_12:
    OUTLINED_FUNCTION_25_8();
    OUTLINED_FUNCTION_16_14();
    goto LABEL_13;
  }
  sub_249955B2C();
  if (OUTLINED_FUNCTION_20_15() < 65)
    goto LABEL_12;
LABEL_11:
  sub_2498D1070();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_6_25();
LABEL_13:
  OUTLINED_FUNCTION_2_29();
  return OUTLINED_FUNCTION_36_5();
}

unint64_t sub_24992A1E4()
{
  unint64_t result;

  result = qword_2578A2158;
  if (!qword_2578A2158)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UInt64, MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2578A2158);
  }
  return result;
}

unint64_t sub_24992A220()
{
  unint64_t result;

  result = qword_2578A2160;
  if (!qword_2578A2160)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4590], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2578A2160);
  }
  return result;
}

unint64_t sub_24992A25C()
{
  unint64_t result;

  result = qword_2578A2168;
  if (!qword_2578A2168)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UInt32, MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_2578A2168);
  }
  return result;
}

unint64_t sub_24992A298()
{
  unint64_t result;

  result = qword_2578A2170;
  if (!qword_2578A2170)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4518], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_2578A2170);
  }
  return result;
}

unint64_t sub_24992A2D4()
{
  unint64_t result;

  result = qword_2578A2178;
  if (!qword_2578A2178)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UInt16, MEMORY[0x24BEE4478]);
    atomic_store(result, (unint64_t *)&qword_2578A2178);
  }
  return result;
}

unint64_t sub_24992A310()
{
  unint64_t result;

  result = qword_2578A2180;
  if (!qword_2578A2180)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE44A0], MEMORY[0x24BEE4478]);
    atomic_store(result, (unint64_t *)&qword_2578A2180);
  }
  return result;
}

unint64_t sub_24992A34C()
{
  unint64_t result;

  result = qword_2578A2188;
  if (!qword_2578A2188)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for UInt8, MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2578A2188);
  }
  return result;
}

unint64_t sub_24992A388()
{
  unint64_t result;

  result = qword_2578A2190;
  if (!qword_2578A2190)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4288], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2578A2190);
  }
  return result;
}

uint64_t sub_24992A3C4(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = (char)sub_2498D1424(128, 127);
  if (a2 < 0.0 && (_DWORD)v4 != 0)
    goto LABEL_8;
  if ((v4 & 0x80000000) != 0)
  {
    __break(1u);
LABEL_8:
    v4 = ((int)v4 >> 7) - (v4 ^ ((int)v4 >> 7));
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, a1);
}

uint64_t sub_24992A420(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = (__int16)sub_2498D133C(0x8000, 0x7FFFLL);
  if (a2 < 0.0 && (_DWORD)v4 != 0)
    goto LABEL_8;
  if ((v4 & 0x80000000) != 0)
  {
    __break(1u);
LABEL_8:
    v4 = ((int)v4 >> 15) - (v4 ^ ((int)v4 >> 15));
  }
  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(v4, a1);
}

void sub_24992A47C(char a1, double a2)
{
  uint64_t v4;

  v4 = sub_2498D1B30();
  if (a2 >= 0.0 || v4 == 0)
  {
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_10;
    __break(1u);
  }
  if (v4 >= 0)
    v4 = -v4;
LABEL_10:
  sub_2498CF1FC(v4, a1);
}

void sub_24992A4D0(char a1, double a2)
{
  uint64_t v4;

  v4 = sub_2498D1A50(0x80000000, 0x7FFFFFFFLL);
  if (a2 >= 0.0 || (_DWORD)v4 == 0)
  {
    if ((v4 & 0x80000000) == 0)
      goto LABEL_11;
    __break(1u);
  }
  if ((int)v4 < 0)
    v4 = v4;
  else
    v4 = -(int)v4;
LABEL_11:
  sub_2498CEFC0(v4, a1);
}

uint64_t HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t);
  char v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t result;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t AssociatedConformanceWitness;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v109 = a9;
  v104 = a8;
  v107 = a4;
  v108 = a3;
  v14 = *(_QWORD *)(a10 + 8);
  v15 = *(_QWORD *)(v14 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v95 = *(_QWORD *)(AssociatedConformanceWitness + 16);
  v93 = OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_29_3();
  MEMORY[0x24BDAC7A8](v16);
  v92 = (char *)v89 - v17;
  v99 = swift_checkMetadataState();
  v97 = *(_QWORD *)(v99 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_35_1();
  v91 = v19;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_40_2();
  v90 = v21;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_40_2();
  v94 = v23;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_40_2();
  v98 = v25;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v26);
  v100 = (char *)v89 - v27;
  v103 = a6;
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v28);
  v101 = (char *)v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v15;
  v89[1] = *(_QWORD *)(v15 + 16);
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_29_3();
  MEMORY[0x24BDAC7A8](v30);
  v31 = swift_checkMetadataState();
  v110 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_17_6();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_35_1();
  v112 = v33;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_40_2();
  v106 = v35;
  OUTLINED_FUNCTION_28();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_40_2();
  v113 = v37;
  OUTLINED_FUNCTION_28();
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v89 - v40;
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_40_2();
  v116 = v42;
  OUTLINED_FUNCTION_28();
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)v89 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)v89 - v47;
  v49 = *(void (**)(uint64_t, uint64_t))(a7 + 24);
  v115 = a7;
  v105 = v49;
  v49(a5, a7);
  v50 = OUTLINED_FUNCTION_4_22();
  v114 = v14;
  v111 = v46;
  if ((v50 & 1) != 0)
  {
    if (OUTLINED_FUNCTION_14_20() < 64)
    {
      v51 = OUTLINED_FUNCTION_15_17();
      v52 = v110;
      v53 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
      result = OUTLINED_FUNCTION_0_34((uint64_t)v48);
      if ((v51 & 0x8000000000000000) == 0)
        goto LABEL_37;
LABEL_18:
      v62 = v52;
      v63 = *(void (**)(uint64_t))(v115 + 32);
      v63(a5);
      v64 = OUTLINED_FUNCTION_4_22();
      v65 = OUTLINED_FUNCTION_14_20();
      if ((v64 & 1) == 0)
        goto LABEL_22;
      if (v65 <= 64)
        goto LABEL_23;
      while (1)
      {
        OUTLINED_FUNCTION_13_21();
        OUTLINED_FUNCTION_27_12();
        sub_249955B14();
        v66 = v116;
        v67 = sub_2499557FC();
        OUTLINED_FUNCTION_0_34((uint64_t)v46);
        v65 = OUTLINED_FUNCTION_0_34(v66);
        if ((v67 & 1) != 0)
          break;
        while (1)
        {
          __break(1u);
LABEL_22:
          if (v65 > 63)
            break;
LABEL_23:
          v68 = v116;
          v69 = OUTLINED_FUNCTION_15_17();
          v65 = OUTLINED_FUNCTION_0_34(v68);
          if (v69 > 0)
            goto LABEL_24;
        }
      }
LABEL_24:
      v70 = v53;
      v71 = v115;
      v105(a5, v115);
      v72 = v106;
      ((void (*)(uint64_t, uint64_t))v63)(a5, v71);
      swift_getAssociatedConformanceWitness();
      v73 = v113;
      FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)((uint64_t)v46, v72, v31, v113, a1);
      v74 = *(_QWORD *)(v62 + 16);
      v75 = v112;
      OUTLINED_FUNCTION_39_3(v112);
      if (a1 >= 0.0)
      {
        v70(v75, v31);
      }
      else
      {
        sub_2499559DC();
        v76 = swift_getAssociatedConformanceWitness();
        v77 = sub_249955B80();
        v78 = sub_249955B74();
        v116 = v76;
        if ((v77 & 1) != 0)
        {
          if (v78 > 64)
          {
LABEL_34:
            OUTLINED_FUNCTION_13_21();
            OUTLINED_FUNCTION_22_12();
            sub_249955B14();
            swift_getAssociatedConformanceWitness();
            v86 = (uint64_t)v100;
            v87 = sub_2499557FC();
            v88 = OUTLINED_FUNCTION_28_9();
            OUTLINED_FUNCTION_11_23(v88);
            OUTLINED_FUNCTION_11_23(v86);
            OUTLINED_FUNCTION_0_34(v112);
            if ((v87 & 1) == 0)
              goto LABEL_35;
LABEL_33:
            v82 = v90;
            sub_2499559DC();
            swift_getAssociatedConformanceWitness();
            v74 = (uint64_t)v92;
            sub_249955F34();
            v83 = v91;
            sub_249955F10();
            v84 = v94;
            sub_249955D84();
            OUTLINED_FUNCTION_11_23(v83);
            v85 = v82;
            v73 = v113;
            OUTLINED_FUNCTION_11_23(v85);
            sub_249955B2C();
            OUTLINED_FUNCTION_11_23(v84);
            OUTLINED_FUNCTION_30_7();
LABEL_36:
            sub_249955B98();
            HIDReport.subscript.setter(v74, v107);
            return OUTLINED_FUNCTION_0_34(v73);
          }
          v80 = sub_249955B68();
          v81 = OUTLINED_FUNCTION_28_9();
        }
        else
        {
          if (v78 > 63)
            goto LABEL_34;
          v79 = v100;
          v80 = sub_249955B68();
          v81 = (uint64_t)v79;
        }
        OUTLINED_FUNCTION_11_23(v81);
        OUTLINED_FUNCTION_0_34(v112);
        if (v80 > 0)
          goto LABEL_33;
      }
LABEL_35:
      OUTLINED_FUNCTION_39_3((uint64_t)v111);
      OUTLINED_FUNCTION_30_7();
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_13_21();
    OUTLINED_FUNCTION_27_12();
LABEL_9:
    sub_249955B14();
    v57 = OUTLINED_FUNCTION_12_22();
    v52 = v110;
    v53 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    OUTLINED_FUNCTION_0_34((uint64_t)v46);
    result = OUTLINED_FUNCTION_0_34((uint64_t)v48);
    if ((v57 & 1) == 0)
      goto LABEL_37;
    goto LABEL_18;
  }
  v55 = OUTLINED_FUNCTION_4_22();
  v56 = OUTLINED_FUNCTION_14_20();
  if ((v55 & 1) != 0)
  {
    if (v56 > 64)
    {
      OUTLINED_FUNCTION_13_21();
      v46 = v111;
      OUTLINED_FUNCTION_27_12();
      goto LABEL_9;
    }
    swift_getAssociatedConformanceWitness();
    sub_249955F34();
    v46 = v111;
    sub_249955F10();
    v59 = OUTLINED_FUNCTION_12_22();
    v60 = v110;
    v53 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    OUTLINED_FUNCTION_0_34((uint64_t)v46);
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v41, v48, v31);
    if ((v59 & 1) != 0)
    {
      OUTLINED_FUNCTION_0_34((uint64_t)v41);
      OUTLINED_FUNCTION_0_34((uint64_t)v48);
      v52 = v110;
      goto LABEL_18;
    }
    v61 = OUTLINED_FUNCTION_15_17();
    OUTLINED_FUNCTION_0_34((uint64_t)v41);
    result = OUTLINED_FUNCTION_0_34((uint64_t)v48);
    v52 = v110;
    if (v61 < 0)
      goto LABEL_18;
  }
  else
  {
    if (v56 < 64)
    {
      v58 = sub_249955B68();
      v52 = v110;
      v53 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
      result = OUTLINED_FUNCTION_0_34((uint64_t)v48);
      v46 = v111;
      if ((v58 & 0x8000000000000000) == 0)
        goto LABEL_37;
      goto LABEL_18;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v48, v31);
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_24992AE98()
{
  unint64_t result;

  result = qword_2578A2198;
  if (!qword_2578A2198)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE3E80], MEMORY[0x24BEE3E50]);
    atomic_store(result, (unint64_t *)&qword_2578A2198);
  }
  return result;
}

unint64_t sub_24992AED8()
{
  unint64_t result;

  result = qword_2578A21C8;
  if (!qword_2578A21C8)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE3F60], MEMORY[0x24BEE3F30]);
    atomic_store(result, (unint64_t *)&qword_2578A21C8);
  }
  return result;
}

unint64_t sub_24992AF18()
{
  unint64_t result;

  result = qword_2578A21F8;
  if (!qword_2578A21F8)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE3FD8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_2578A21F8);
  }
  return result;
}

unint64_t sub_24992AF58()
{
  unint64_t result;

  result = qword_2578A2228;
  if (!qword_2578A2228)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BEE4048], MEMORY[0x24BEE4008]);
    atomic_store(result, (unint64_t *)&qword_2578A2228);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_34(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_4_22()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  return sub_249955D6C();
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return sub_249955790();
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_23(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  return sub_2499557FC();
}

unint64_t OUTLINED_FUNCTION_13_21()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 0;
  return sub_2498CB760();
}

uint64_t OUTLINED_FUNCTION_14_20()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_16_14()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_17_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return sub_249955790();
}

uint64_t OUTLINED_FUNCTION_19_16()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_25_8()
{
  return sub_249955B80();
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return sub_249955B74();
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return sub_249955B68();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_39_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t VelocityEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateVelocityEvent();
}

uint64_t VelocityEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t VelocityEvent.y.getter()
{
  return OUTLINED_FUNCTION_2_30();
}

uint64_t VelocityEvent.z.getter()
{
  return OUTLINED_FUNCTION_2_30();
}

uint64_t static VelocityEvent.eventType.getter()
{
  return 9;
}

void VelocityEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B22C()
{
  return OUTLINED_FUNCTION_1_34();
}

uint64_t VelocityEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_35();
}

void VelocityEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B278()
{
  return OUTLINED_FUNCTION_0_35();
}

uint64_t VelocityEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_35();
}

void VelocityEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B2C8()
{
  return OUTLINED_FUNCTION_0_35();
}

void sub_24992B2DC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  VelocityEvent.x.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B300(double *a1, _QWORD *a2)
{
  return VelocityEvent.x.setter(*a2, *a1);
}

void sub_24992B30C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  VelocityEvent.y.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B330()
{
  return VelocityEvent.y.setter();
}

void sub_24992B33C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  VelocityEvent.z.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B360()
{
  return VelocityEvent.z.setter();
}

ValueMetadata *type metadata accessor for VelocityEvent()
{
  return &type metadata for VelocityEvent;
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  return IOHIDEventGetFloatValue();
}

uint64_t GameControllerGesture.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static GameControllerEvent.dispatch(report:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for GameControllerGesture();
  swift_initStackObject();
  return GameControllerGesture.dispatch(report:)(a1, a2);
}

uint64_t GameControllerGesture.dispatch(report:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int16 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int16 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int16 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int16 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int16 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int16 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int16 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int16 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned __int16 v127;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0818);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2499568A0;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  HIDGameControllerType.init(rawValue:)(v5);
  v13 = OUTLINED_FUNCTION_0_36(16, v6, v7, v8, v9, v10, v11, v12, v130, v144, v158, v172, v186, v200, v214, v228, v242, v256, v270,
          v284,
          v298,
          v312,
          v325,
          v338,
          v351,
          v365,
          v378,
          v391,
          v404,
          v417,
          v430,
          v443,
          v456,
          v470,
          v484,
          v498);
  v14 = OUTLINED_FUNCTION_6_20(v13);
  v22 = OUTLINED_FUNCTION_0_36(32, v15, v16, v17, v18, v19, v20, v21, v131, v145, v159, v173, v187, v201, v215, v229, v243, v257, v271,
          v285,
          v299,
          v313,
          v326,
          v339,
          v352,
          v366,
          v379,
          v392,
          v405,
          v418,
          v431,
          COERCE__INT64(v14 / 65535.0),
          v457,
          v471,
          v485,
          v499);
  *(double *)&v23 = OUTLINED_FUNCTION_1_35(v22);
  v31 = OUTLINED_FUNCTION_0_36(48, v24, v25, v26, v27, v28, v29, v30, v132, v146, v160, v174, v188, v202, v216, v230, v244, v258, v272,
          v286,
          v300,
          v314,
          v327,
          v340,
          v353,
          v367,
          v380,
          v393,
          v406,
          v419,
          v23,
          v444,
          v458,
          v472,
          v486,
          v500);
  *(double *)&v32 = OUTLINED_FUNCTION_1_35(v31);
  v40 = OUTLINED_FUNCTION_0_36(64, v33, v34, v35, v36, v37, v38, v39, v133, v147, v161, v175, v189, v203, v217, v231, v245, v259, v273,
          v287,
          v301,
          v315,
          v328,
          v341,
          v354,
          v368,
          v381,
          v394,
          v407,
          v32,
          v432,
          v445,
          v459,
          v473,
          v487,
          v501);
  *(double *)&v41 = OUTLINED_FUNCTION_1_35(v40);
  v49 = OUTLINED_FUNCTION_0_36(144, v42, v43, v44, v45, v46, v47, v48, v134, v148, v162, v176, v190, v204, v218, v232, v246, v260, v274,
          v288,
          v302,
          v316,
          v329,
          v342,
          v355,
          v369,
          v382,
          v395,
          v41,
          v420,
          v433,
          v446,
          v460,
          v474,
          v488,
          v502);
  *(double *)&v50 = OUTLINED_FUNCTION_1_35(v49);
  v58 = OUTLINED_FUNCTION_0_36(160, v51, v52, v53, v54, v55, v56, v57, v135, v149, v163, v177, v191, v205, v219, v233, v247, v261, v275,
          v289,
          v303,
          v317,
          v330,
          v343,
          v356,
          v370,
          v383,
          v50,
          v408,
          v421,
          v434,
          v447,
          v461,
          v475,
          v489,
          v503);
  *(double *)&v59 = OUTLINED_FUNCTION_1_35(v58);
  v67 = OUTLINED_FUNCTION_0_36(176, v60, v61, v62, v63, v64, v65, v66, v136, v150, v164, v178, v192, v206, v220, v234, v248, v262, v276,
          v290,
          v304,
          v318,
          v331,
          v344,
          v357,
          v371,
          v59,
          v396,
          v409,
          v422,
          v435,
          v448,
          v462,
          v476,
          v490,
          v504);
  *(double *)&v68 = OUTLINED_FUNCTION_1_35(v67);
  v76 = OUTLINED_FUNCTION_0_36(192, v69, v70, v71, v72, v73, v74, v75, v137, v151, v165, v179, v193, v207, v221, v235, v249, v263, v277,
          v291,
          v305,
          v319,
          v332,
          v345,
          v358,
          v68,
          v384,
          v397,
          v410,
          v423,
          v436,
          v449,
          v463,
          v477,
          v491,
          v505);
  v359 = OUTLINED_FUNCTION_1_35(v76);
  *(double *)&v77 = GameControllerReport.joystickLeft.getter(a1, a2);
  v87 = OUTLINED_FUNCTION_0_36(272, v78, v79, v80, v81, v82, v83, v84, v138, v152, v166, v180, v194, v208, v222, v236, v250, v264, v278,
          v292,
          v306,
          v86,
          v85,
          v77,
          v359,
          v372,
          v385,
          v398,
          v411,
          v424,
          v437,
          v450,
          v464,
          v478,
          v492,
          v506);
  v307 = OUTLINED_FUNCTION_1_35(v87);
  GameControllerReport.joystickRight.getter(a1, a2);
  v95 = OUTLINED_FUNCTION_0_36(288, v88, v89, v90, v91, v92, v93, v94, v139, v153, v167, v181, v195, v209, v223, v237, v251, v265, v279,
          v293,
          v307,
          v320,
          v333,
          v346,
          v360,
          v373,
          v386,
          v399,
          v412,
          v425,
          v438,
          v451,
          v465,
          v479,
          v493,
          v507);
  OUTLINED_FUNCTION_6_20(v95);
  v103 = OUTLINED_FUNCTION_0_36(208, v96, v97, v98, v99, v100, v101, v102, v140, v154, v168, v182, v196, v210, v224, v238, v252, v266, v280,
           v294,
           v308,
           v321,
           v334,
           v347,
           v361,
           v374,
           v387,
           v400,
           v413,
           v426,
           v439,
           v452,
           v466,
           v480,
           v494,
           v508);
  OUTLINED_FUNCTION_6_20(v103);
  v111 = OUTLINED_FUNCTION_0_36(224, v104, v105, v106, v107, v108, v109, v110, v141, v155, v169, v183, v197, v211, v225, v239, v253, v267, v281,
           v295,
           v309,
           v322,
           v335,
           v348,
           v362,
           v375,
           v388,
           v401,
           v414,
           v427,
           v440,
           v453,
           v467,
           v481,
           v495,
           v509);
  OUTLINED_FUNCTION_6_20(v111);
  v119 = OUTLINED_FUNCTION_0_36(240, v112, v113, v114, v115, v116, v117, v118, v142, v156, v170, v184, v198, v212, v226, v240, v254, v268, v282,
           v296,
           v310,
           v323,
           v336,
           v349,
           v363,
           v376,
           v389,
           v402,
           v415,
           v428,
           v441,
           v454,
           v468,
           v482,
           v496,
           v510);
  OUTLINED_FUNCTION_6_20(v119);
  v127 = OUTLINED_FUNCTION_0_36(256, v120, v121, v122, v123, v124, v125, v126, v143, v157, v171, v185, v199, v213, v227, v241, v255, v269, v283,
           v297,
           v311,
           v324,
           v337,
           v350,
           v364,
           v377,
           v390,
           v403,
           v416,
           v429,
           v442,
           v455,
           v469,
           v483,
           v497,
           v511);
  OUTLINED_FUNCTION_6_20(v127);
  mach_absolute_time();
  v128 = GameControllerEvent.init(time:controllerType:dpadUp:dpadDown:dpadLeft:dpadRight:faceX:faceY:faceA:faceB:joystickLeft:thumbstickLeft:joystickRight:thumbstickRight:shoulderL1:shoulderL2:shoulderR1:shoulderR2:flags:)();
  *(_QWORD *)(v4 + 56) = &type metadata for GameControllerEvent;
  *(_QWORD *)(v4 + 64) = &protocol witness table for GameControllerEvent;
  *(_QWORD *)(v4 + 32) = v128;
  return v4;
}

uint64_t GameControllerGesture.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for GameControllerGesture()
{
  return objc_opt_self();
}

uint64_t GameControllerGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GameControllerGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_UNKNOWN **sub_24992B63C()
{
  return &protocol witness table for GameControllerReport;
}

_UNKNOWN **sub_24992B648()
{
  return &protocol witness table for GameControllerReport;
}

uint64_t sub_24992B654(uint64_t *a1)
{
  return GameControllerGesture.dispatch(report:)(*a1, a1[1]);
}

uint64_t method lookup function for GameControllerGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GameControllerGesture.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t OUTLINED_FUNCTION_0_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

double OUTLINED_FUNCTION_1_35(unsigned __int16 a1)
{
  double v1;

  return (double)a1 / v1;
}

uint64_t ScaleEvent.z.getter()
{
  return OUTLINED_FUNCTION_2_31();
}

uint64_t ScaleEvent.init(time:point:flags:)()
{
  return IOHIDEventCreateScaleEvent();
}

uint64_t static ScaleEvent.eventType.getter()
{
  return 7;
}

uint64_t ScaleEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

void ScaleEvent.x.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B704()
{
  return OUTLINED_FUNCTION_1_36();
}

uint64_t ScaleEvent.y.getter()
{
  return OUTLINED_FUNCTION_2_31();
}

uint64_t ScaleEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_37();
}

void ScaleEvent.y.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B758()
{
  return OUTLINED_FUNCTION_0_37();
}

uint64_t ScaleEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_37();
}

void ScaleEvent.z.modify(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *v2 = v3;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B7A8()
{
  return OUTLINED_FUNCTION_0_37();
}

void sub_24992B7BC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ScaleEvent.x.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B7E0(double *a1, _QWORD *a2)
{
  return ScaleEvent.x.setter(*a2, *a1);
}

void sub_24992B7EC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ScaleEvent.y.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B810()
{
  return ScaleEvent.y.setter();
}

void sub_24992B81C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ScaleEvent.z.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992B840()
{
  return ScaleEvent.z.setter();
}

ValueMetadata *type metadata accessor for ScaleEvent()
{
  return &type metadata for ScaleEvent;
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return IOHIDEventGetFloatValue();
}

void sub_24992B874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v5[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2498E29C4((_OWORD *)a1, v5);
    sub_2498E0A48(v5, a2, a3);
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    sub_2498F9DB0(a1, &qword_2578A1280);
    sub_2498E07A4(a2, a3, v5);
    OUTLINED_FUNCTION_9_17();
    sub_2498F9DB0((uint64_t)v5, &qword_2578A1280);
  }
  OUTLINED_FUNCTION_7_16();
}

void sub_24992B8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unsigned __int8 v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  v4 = a2;
  if (*(_QWORD *)(a1 + 24))
  {
    OUTLINED_FUNCTION_39_4((__int128 *)a1, a2, a3);
    sub_2498E0A9C();
  }
  else
  {
    sub_2498F9DB0(a1, &qword_2578A0FA8);
    v5 = sub_2498DF9F0(v4);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      swift_isUniquelyReferenced_nonNull_native();
      v10 = *v3;
      *v3 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2670);
      sub_249955D3C();
      OUTLINED_FUNCTION_39_4((__int128 *)(*(_QWORD *)(v10 + 56) + 40 * v7), v8, v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A23E0);
      sub_2498F2308();
      sub_249955D54();
      *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
      memset(v11, 0, sizeof(v11));
    }
    sub_2498F9DB0((uint64_t)v11, &qword_2578A0FA8);
  }
  OUTLINED_FUNCTION_12_23();
}

void sub_24992BA08(uint64_t a1, void (*a2)(void **__return_ptr, _BYTE *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _BYTE v15[40];
  __int128 v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v5 = OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state);
  if (v6)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_33_0();
    swift_bridgeObjectRetain();
    v7 = sub_24991B048(a1);
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_17_16();
    v8 = sub_249911F90(v7);
    OUTLINED_FUNCTION_113();
    sub_24992C44C(v8);
    *(_QWORD *)(v2 + v5) = v6;
    swift_bridgeObjectRelease();
    return;
  }
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_33_0();
  v10 = 0;
  while (1)
  {
    if (v10 == v9)
    {
      v19 = 0;
      v10 = v9;
      memset(v18, 0, sizeof(v18));
      goto LABEL_8;
    }
    if (v10 >= v9)
      break;
    sub_24992F814(a1 + 32 + 40 * v10++, (uint64_t)v18);
LABEL_8:
    sub_24992F910((uint64_t)v18, (uint64_t)&v16, &qword_2578A0A10);
    if (!v17)
    {
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_17_16();
      return;
    }
    OUTLINED_FUNCTION_39_4(&v16, v11, v12);
    a2(&v14, v15);
    v13 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    sub_24992EE04(v13, v2);

  }
  __break(1u);
}

uint64_t HIDVirtualService.dispatch<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumTagSinglePayload;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_18_0();
  v30 = v1;
  v31 = v2;
  v28 = v3;
  v5 = v4;
  v26[1] = v6;
  v7 = OUTLINED_FUNCTION_36_6();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v26 - v9;
  v11 = sub_249955AD8();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - v12;
  v26[2] = v5;
  v14 = OUTLINED_FUNCTION_36_6();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - v16;
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_16_0();
  v27 = v0;
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state);
  if (v19)
  {
    v20 = OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state;
    OUTLINED_FUNCTION_13_22();
    swift_bridgeObjectRetain();
    sub_249955970();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2330);
    v21 = sub_249955CF4();
    OUTLINED_FUNCTION_56_1();
    v29 = v19;
    sub_24992C44C(v21);
    *(_QWORD *)(v27 + v20) = v29;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v26[0] = v18;
    OUTLINED_FUNCTION_13_22();
    sub_2499558E0();
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_10_23();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v7);
    v24 = v27;
    if (EnumTagSinglePayload != 1)
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      do
      {
        v25(v10, v13, v7);
        sub_24992F128((uint64_t)v10, v24, v7, v28);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        OUTLINED_FUNCTION_10_23();
      }
      while (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v7) != 1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26[0] + 8))(v17, v14);
  }
}

uint64_t sub_24992BE10(uint64_t a1)
{
  return sub_24992BE20(a1, 5u, (void (*)(_QWORD))type metadata accessor for PointerGesture);
}

uint64_t sub_24992BE20(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD))
{
  unint64_t v5;
  char v6;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 16) && (v5 = sub_2498DF9F0(a2), (v6 & 1) != 0))
  {
    sub_24992F814(*(_QWORD *)(a1 + 56) + 40 * v5, (uint64_t)v8);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0FA8);
  a3(0);
  if (OUTLINED_FUNCTION_41_4())
    return v10;
  else
    return 0;
}

Swift::Void __swiftcall HIDVirtualService.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 40);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(ObjectType, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
  OUTLINED_FUNCTION_3_10();
  *(_QWORD *)(v1 + 48) = v4;
  OUTLINED_FUNCTION_7_16();
}

Swift::Void __swiftcall HIDVirtualService.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22[8];
  __int128 v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 16);
  v18 = v1 + 64;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  OUTLINED_FUNCTION_54_1();
  v6 = 0;
  if (!v4)
    goto LABEL_6;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v8 = v7 | (v6 << 6);
  while (2)
  {
    v9 = *(_QWORD *)(v1 + 56);
    LOBYTE(v19) = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v8);
    sub_24992F814(v9 + 40 * v8, (uint64_t)&v19 + 8);
    while (1)
    {
      sub_24992F910((uint64_t)&v19, (uint64_t)v22, &qword_2578A0FA0);
      if (!v24)
      {
        swift_release();
        v16 = *(_QWORD *)(v0 + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v16 + 72))(ObjectType, v16);
        return;
      }
      sub_2498CF9C0(&v23, (uint64_t)&v19);
      v13 = *((_QWORD *)&v20 + 1);
      v14 = v21;
      v15 = __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      sub_24992D5C4((uint64_t)v15, v13, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
      if (v4)
        goto LABEL_4;
LABEL_6:
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 < v5)
      {
        v11 = *(_QWORD *)(v18 + 8 * v10);
        if (v11)
          goto LABEL_9;
        v12 = v6 + 2;
        ++v6;
        if (v10 + 1 < v5)
        {
          v11 = *(_QWORD *)(v18 + 8 * v12);
          if (v11)
            goto LABEL_12;
          v6 = v10 + 1;
          if (v10 + 2 < v5)
          {
            v11 = *(_QWORD *)(v18 + 8 * (v10 + 2));
            if (v11)
            {
              v10 += 2;
              goto LABEL_9;
            }
            v12 = v10 + 3;
            v6 = v10 + 2;
            if (v10 + 3 < v5)
              break;
          }
        }
      }
LABEL_23:
      v4 = 0;
      v20 = 0u;
      v21 = 0u;
      v19 = 0u;
    }
    v11 = *(_QWORD *)(v18 + 8 * v12);
    if (v11)
    {
LABEL_12:
      v10 = v12;
LABEL_9:
      v4 = (v11 - 1) & v11;
      v8 = __clz(__rbit64(v11)) + (v10 << 6);
      v6 = v10;
      continue;
    }
    break;
  }
  while (1)
  {
    v10 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v10 >= v5)
    {
      v6 = v5 - 1;
      goto LABEL_23;
    }
    v11 = *(_QWORD *)(v18 + 8 * v10);
    ++v12;
    if (v11)
      goto LABEL_9;
  }
LABEL_29:
  __break(1u);
}

void sub_24992C148(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1;
    sub_249955FB8();
    sub_249955FC4();
    v4 = sub_249956000() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0
      && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v4) != v3)
    {
      OUTLINED_FUNCTION_16_15();
      if ((v7 & 1) != 0)
      {
        do
        {
          if (*(unsigned __int8 *)(v5 + v6) == v3)
            break;
          OUTLINED_FUNCTION_16_15();
        }
        while ((v8 & 1) != 0);
      }
    }
  }
}

uint64_t sub_24992C20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_249955FB8();
    sub_249955880();
    v6 = sub_249956000();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_249955F28() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_249955F28() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24992C340(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  v7 = result;
  *v1 = v3;
  if (!(_DWORD)result || (v8 = *(_QWORD *)(v3 + 24) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v4 += v2;
    swift_bridgeObjectRetain();
    *v1 = MEMORY[0x24BCFAE60](v7, v4, 1, v3);
    result = swift_bridgeObjectRelease();
    v3 = *v1;
    v8 = *(_QWORD *)(*v1 + 24) >> 1;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_13;
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(v3 + 16);
  if (v8 - v9 < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  result = sub_2498D5754(v6 + 32, v2, v3 + 8 * v9 + 32);
  if (!v2)
  {
LABEL_13:
    OUTLINED_FUNCTION_9_17();
    return sub_249955940();
  }
  v10 = *(_QWORD *)(*v1 + 16);
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    *(_QWORD *)(*v1 + 16) = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_24992C44C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_249907A4C();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_2498D5694(a1 + 32, v2, v3 + 40 * v7 + 32);
  if (!v2)
  {
LABEL_11:
    OUTLINED_FUNCTION_9_17();
    *v1 = v3;
    return;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void HIDVirtualService.property(forKey:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  char v12;
  id v13;
  __int128 v14;
  __int128 v15;

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_modifiedProperties);
  OUTLINED_FUNCTION_3_10();
  v8 = *v7;
  OUTLINED_FUNCTION_54_1();
  sub_2498F0454(a1, a2, v8, &v14);
  OUTLINED_FUNCTION_9_17();
  if (*((_QWORD *)&v15 + 1))
  {
    sub_2498E29C4(&v14, a3);
    swift_endAccess();
  }
  else
  {
    sub_2498F9DB0((uint64_t)&v14, &qword_2578A1280);
    swift_endAccess();
    OUTLINED_FUNCTION_6_12();
    v9 = *(void **)(v3 + 64);
    OUTLINED_FUNCTION_54_1();
    v10 = v9;
    v11 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
    v12 = sub_249932B60(a1, a2, v11);
    OUTLINED_FUNCTION_56_1();
    if ((v12 & 1) != 0)
    {
      *(_QWORD *)&v14 = a1;
      *((_QWORD *)&v14 + 1) = a2;
      OUTLINED_FUNCTION_54_1();
      v13 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_249955F40());
      swift_unknownObjectRelease();
      if (v13)
      {
        sub_249955BA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v14 = 0u;
        v15 = 0u;
      }
      sub_24992F910((uint64_t)&v14, (uint64_t)a3, &qword_2578A1280);

      OUTLINED_FUNCTION_9_17();
    }
    else
    {
      OUTLINED_FUNCTION_9_17();
      *a3 = 0u;
      a3[1] = 0u;

    }
  }
  OUTLINED_FUNCTION_12_23();
}

uint64_t HIDVirtualService.serviceID.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_12();
  return *(_QWORD *)(v0 + 48);
}

uint64_t HIDVirtualService.properties.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  OUTLINED_FUNCTION_6_12();
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(id *)(v0 + 64);
  return v1;
}

uint64_t sub_24992C700()
{
  uint64_t result;
  _QWORD *v1;
  id v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2660);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_24995A970;
  *(_QWORD *)(result + 32) = 0xD000000000000010;
  *(_QWORD *)(result + 40) = 0x800000024995EE80;
  if (*MEMORY[0x24BDD8B10])
  {
    v1 = (_QWORD *)result;
    v2 = (id)*MEMORY[0x24BDD8B10];
    v1[6] = sub_249955850();
    v1[7] = v3;
    v1[8] = 0xD00000000000001DLL;
    v1[9] = 0x800000024995F410;
    result = sub_24992EC38((uint64_t)v1);
    qword_2578A2320 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HIDVirtualService.shouldDispatchScrollEvents.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_shouldDispatchScrollEvents);
}

id HIDVirtualService.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_queue);
}

#error "24992C978: call analysis failed (funcsize=117)"

void HIDVirtualService.__allocating_init(logger:properties:queue:absolutePointerGesture:appleVendorKeyboardGesture:appleVendorTopCaseGesture:consumerGesture:genericGestureGesture:keyboardGesture:digitizerGesture:pointerGesture:scrollGesture:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_18_0();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v55 = v33;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_5_24();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_16_0();
  sub_24992F4CC(v34, v37 - v36, (uint64_t *)&unk_2578A2350);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1250);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499579B0;
  *(_BYTE *)(inited + 32) = 19;
  *(_QWORD *)(inited + 64) = OUTLINED_FUNCTION_37_5();
  *(_QWORD *)(inited + 72) = &protocol witness table for AbsolutePointerGesture;
  *(_QWORD *)(inited + 40) = v32;
  *(_BYTE *)(inited + 80) = 4;
  *(_QWORD *)(inited + 112) = type metadata accessor for AppleVendorTopCaseGesture(0);
  *(_QWORD *)(inited + 120) = sub_2498F9914();
  *(_QWORD *)(inited + 88) = v28;
  *(_BYTE *)(inited + 128) = 3;
  *(_QWORD *)(inited + 160) = type metadata accessor for AppleVendorKeyboardGesture(0);
  *(_QWORD *)(inited + 168) = sub_2498F9A1C();
  *(_QWORD *)(inited + 136) = v30;
  *(_BYTE *)(inited + 176) = 2;
  *(_QWORD *)(inited + 208) = type metadata accessor for ConsumerGesture(0);
  *(_QWORD *)(inited + 216) = sub_2498F9B24();
  *(_QWORD *)(inited + 184) = v26;
  *(_BYTE *)(inited + 224) = 9;
  *(_QWORD *)(inited + 256) = type metadata accessor for DigitizerGesture();
  *(_QWORD *)(inited + 264) = &protocol witness table for DigitizerGesture;
  *(_QWORD *)(inited + 232) = a23;
  *(_BYTE *)(inited + 272) = 1;
  *(_QWORD *)(inited + 304) = type metadata accessor for KeyboardGesture(0);
  *(_QWORD *)(inited + 312) = sub_2498F9C68();
  *(_QWORD *)(inited + 280) = a22;
  *(_BYTE *)(inited + 320) = 20;
  *(_QWORD *)(inited + 352) = type metadata accessor for GenericGestureGesture();
  *(_QWORD *)(inited + 360) = &protocol witness table for GenericGestureGesture;
  *(_QWORD *)(inited + 328) = a21;
  *(_BYTE *)(inited + 368) = 5;
  *(_QWORD *)(inited + 400) = type metadata accessor for PointerGesture();
  *(_QWORD *)(inited + 408) = &protocol witness table for PointerGesture;
  *(_QWORD *)(inited + 376) = a24;
  *(_BYTE *)(inited + 416) = 7;
  *(_QWORD *)(inited + 448) = type metadata accessor for ScrollGesture();
  *(_QWORD *)(inited + 456) = &protocol witness table for ScrollGesture;
  *(_QWORD *)(inited + 424) = a25;
  *(_BYTE *)(inited + 464) = 11;
  v39 = type metadata accessor for DockSwipeGesture();
  v40 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v40 + 16) = 0;
  *(_QWORD *)(inited + 496) = v39;
  *(_QWORD *)(inited + 504) = &protocol witness table for DockSwipeGesture;
  *(_QWORD *)(inited + 472) = v40;
  *(_BYTE *)(inited + 512) = 13;
  v41 = type metadata accessor for NavigationSwipeGesture();
  v42 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v42 + 16) = 0;
  *(_QWORD *)(inited + 544) = v41;
  *(_QWORD *)(inited + 552) = &protocol witness table for NavigationSwipeGesture;
  *(_QWORD *)(inited + 520) = v42;
  *(_BYTE *)(inited + 560) = 17;
  v43 = type metadata accessor for TranslationGesture();
  v44 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v44 + 16) = 0;
  *(_QWORD *)(inited + 592) = v43;
  *(_QWORD *)(inited + 600) = &protocol witness table for TranslationGesture;
  *(_QWORD *)(inited + 568) = v44;
  *(_BYTE *)(inited + 608) = 12;
  v45 = type metadata accessor for FluidTouchGesture();
  v46 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v46 + 16) = 0;
  *(_QWORD *)(inited + 640) = v45;
  *(_QWORD *)(inited + 648) = &protocol witness table for FluidTouchGesture;
  *(_QWORD *)(inited + 616) = v46;
  *(_BYTE *)(inited + 656) = 15;
  v47 = type metadata accessor for ScaleGesture();
  v48 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v48 + 16) = 0;
  *(_QWORD *)(inited + 688) = v47;
  *(_QWORD *)(inited + 696) = &protocol witness table for ScaleGesture;
  *(_QWORD *)(inited + 664) = v48;
  *(_BYTE *)(inited + 704) = 16;
  v49 = type metadata accessor for RotationGesture();
  v50 = OUTLINED_FUNCTION_17_3();
  *(_BYTE *)(v50 + 16) = 0;
  *(_QWORD *)(inited + 736) = v49;
  *(_QWORD *)(inited + 744) = &protocol witness table for RotationGesture;
  *(_QWORD *)(inited + 712) = v50;
  *(_BYTE *)(inited + 752) = 14;
  v51 = type metadata accessor for ZoomToggleGesture();
  v52 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(inited + 784) = v51;
  *(_QWORD *)(inited + 792) = &protocol witness table for ZoomToggleGesture;
  *(_QWORD *)(inited + 760) = v52;
  *(_BYTE *)(inited + 800) = 18;
  v53 = type metadata accessor for GameControllerGesture();
  v54 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(inited + 832) = v53;
  *(_QWORD *)(inited + 840) = &protocol witness table for GameControllerGesture;
  *(_QWORD *)(inited + 808) = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A23E0);
  sub_2498F2308();
  sub_2499557C0();
  OUTLINED_FUNCTION_15_10();
  sub_24992CF4C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_113();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_2498F9DB0(v55, (uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_4_0();
}

#error "24992CF24: call analysis failed (funcsize=69)"

void sub_24992CF4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;
  _QWORD v53[4];

  OUTLINED_FUNCTION_18_0();
  v1 = v0;
  v3 = v2;
  v45 = v4;
  v46 = v5;
  v7 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_5_24();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_16_0();
  v13 = v12 - v11;
  v1[6] = 0;
  v14 = OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_modifiedProperties;
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v1 + v14) = sub_2499557C0();
  v16 = OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_notificationCenterModeProcesses;
  sub_249955730();
  *(_QWORD *)((char *)v1 + v16) = sub_2499557C0();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state) = v15;
  v17 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_terminationWasRequestedHandler);
  *v17 = nullsub_1;
  v17[1] = 0;
  v53[0] = 0x746375646F7250;
  v53[1] = 0xE700000000000000;
  v18 = v7;
  v19 = objc_msgSend(v18, sel___swift_objectForKeyedSubscript_, OUTLINED_FUNCTION_34_7());
  OUTLINED_FUNCTION_9_14();
  if (v19)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v53, 0, sizeof(v53));
  }
  sub_24992F910((uint64_t)v53, (uint64_t)&v47, &qword_2578A1280);
  if (v50)
  {
    if ((OUTLINED_FUNCTION_41_4() & 1) != 0)
    {
      v47 = 11606;
      v48 = 0xE200000000000000;
      sub_2499558A4();
      swift_bridgeObjectRelease();
      v20 = (void *)sub_249955838();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    sub_2498F9DB0((uint64_t)&v47, &qword_2578A1280);
  }
  v20 = 0;
LABEL_9:
  v47 = 0x746375646F7250;
  v48 = 0xE700000000000000;
  objc_msgSend(v18, sel___swift_setObject_forKeyedSubscript_, v20, OUTLINED_FUNCTION_34_7());

  swift_unknownObjectRelease();
  v21 = (void *)sub_24995597C();
  v47 = 0xD00000000000001ELL;
  v48 = 0x800000024995DFE0;
  objc_msgSend(v18, sel___swift_setObject_forKeyedSubscript_, v21, OUTLINED_FUNCTION_34_7());

  OUTLINED_FUNCTION_9_14();
  if (OUTLINED_FUNCTION_22_13(v18) == 3)
  {
    v22 = (void *)sub_249955838();
    OUTLINED_FUNCTION_23_9(0xD000000000000012);
    v23 = OUTLINED_FUNCTION_38_6();
    OUTLINED_FUNCTION_3_25(v23);

    OUTLINED_FUNCTION_9_14();
  }
  v24 = OUTLINED_FUNCTION_22_13(v21);
  if (v24 == 5)
  {
    v26 = OUTLINED_FUNCTION_45_3(v24, v25, (void (*)(_QWORD))type metadata accessor for ScrollGesture);
    if (v26)
    {
      v27 = *(_BYTE *)(v26 + 18);
      swift_release();
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = 1;
  }
  *((_BYTE *)v1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_shouldDispatchScrollEvents) = v27;
  v28 = sub_24992BE20(v3, 5u, (void (*)(_QWORD))type metadata accessor for PointerGesture);
  if (v28)
  {
    v30 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration);
    v28 = swift_release();
    if (v30 == 1)
    {
      v31 = (void *)sub_24995597C();
      v47 = 0xD00000000000001ELL;
      v48 = 0x800000024995F150;
      v32 = OUTLINED_FUNCTION_38_6();
      OUTLINED_FUNCTION_3_25(v32);

      v28 = OUTLINED_FUNCTION_9_14();
    }
  }
  v33 = OUTLINED_FUNCTION_45_3(v28, v29, (void (*)(_QWORD))type metadata accessor for ScrollGesture);
  if (v33)
  {
    v34 = *(unsigned __int8 *)(v33 + 17);
    swift_release();
    if (v34 == 1)
    {
      v35 = (void *)sub_24995597C();
      OUTLINED_FUNCTION_23_9(0xD00000000000001DLL);
      v36 = OUTLINED_FUNCTION_38_6();
      OUTLINED_FUNCTION_3_25(v36);

      OUTLINED_FUNCTION_9_14();
    }
  }
  sub_2499557C0();
  v37 = (void *)sub_24995579C();
  OUTLINED_FUNCTION_17_16();
  OUTLINED_FUNCTION_23_9(0xD000000000000019);
  objc_msgSend(v21, sel___swift_setObject_forKeyedSubscript_, v37, sub_249955F40());

  swift_unknownObjectRelease();
  v1[7] = v9;
  v1[8] = v21;
  OUTLINED_FUNCTION_31_6(v45, v13);
  v38 = objc_allocWithZone((Class)type metadata accessor for HIDVirtualServiceDelegate(0));
  v39 = v21;
  v40 = sub_24992E5A8(v13);
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3E810]), sel_init);
  objc_msgSend(v41, sel_setDispatchQueue_, v46);
  v42 = OUTLINED_FUNCTION_17_3();
  *(_QWORD *)(v42 + 16) = v41;
  v51 = nullsub_1;
  v52 = v42;
  v47 = MEMORY[0x24BDAC760];
  v48 = 1107296256;
  v49 = sub_2498EDF40;
  v50 = &block_descriptor_13;
  v43 = _Block_copy(&v47);
  v44 = v41;
  swift_release();
  objc_msgSend(v44, sel_setCancelHandler_, v43);
  _Block_release(v43);
  objc_msgSend(v44, sel_setDelegate_, v40);

  sub_24992F910(v45, (uint64_t)v1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_logger, (uint64_t *)&unk_2578A2350);
  v1[2] = v3;
  v1[3] = v40;
  v1[4] = v44;
  v1[5] = &protocol witness table for HIDVirtualEventService;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_queue) = v46;
  swift_weakAssign();
  OUTLINED_FUNCTION_4_0();
}

void sub_24992D52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state);
  if (v1)
  {
    *(_QWORD *)(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_state) = 0;
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = v1 + 32;
      do
      {
        sub_24992F814(v3, (uint64_t)v7);
        v4 = v8;
        v5 = v9;
        v6 = __swift_project_boxed_opaque_existential_1(v7, v8);
        sub_24992F128((uint64_t)v6, v0, v4, v5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
        v3 += 40;
        --v2;
      }
      while (v2);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24992D5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v12 - v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 32))(v8, a2, a3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  if (*(_QWORD *)(v10 + 16))
    sub_24992BA08(v10, (void (*)(void **__return_ptr, _BYTE *))sub_24992D6E0);
  return swift_bridgeObjectRelease();
}

uint64_t HIDVirtualService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  sub_2498F9DB0(v0 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_logger, (uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_42_4();
  OUTLINED_FUNCTION_42_4();

  OUTLINED_FUNCTION_42_4();
  swift_release();
  return v0;
}

uint64_t HIDVirtualService.__deallocating_deinit()
{
  HIDVirtualService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24992D79C()
{
  return HIDVirtualService.properties.getter();
}

uint64_t sub_24992D7BC()
{
  return HIDVirtualService.serviceID.getter();
}

void sub_24992D7DC()
{
  HIDVirtualService.activate()();
}

void sub_24992D7FC()
{
  HIDVirtualService.cancel()();
}

uint64_t HIDVirtualService.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v1 = v0;
  OUTLINED_FUNCTION_6_12();
  sub_2498F0128();
  sub_2499558C8();
  OUTLINED_FUNCTION_44_4();
  OUTLINED_FUNCTION_17_16();
  sub_2499558A4();
  OUTLINED_FUNCTION_6_12();
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(id *)(v1 + 64);
  HIDServiceProperties.description.getter(v2, v3);
  OUTLINED_FUNCTION_44_4();

  OUTLINED_FUNCTION_17_16();
  return 91;
}

uint64_t sub_24992D8D4()
{
  return HIDVirtualService.description.getter();
}

uint64_t HIDVirtualService.setProperty(_:forKey:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t EnumTagSinglePayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  id v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];
  _QWORD v54[14];
  uint64_t v55;
  uint64_t v56;

  OUTLINED_FUNCTION_18_0();
  v55 = v1;
  v56 = v2;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2578A2350);
  OUTLINED_FUNCTION_5_24();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_25_9();
  v13 = v11 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v45 - v15;
  if (qword_2578A07E0 != -1)
    swift_once();
  v17 = sub_24992C20C(v7, v5, qword_2578A2320);
  if ((v17 & 1) == 0)
    return v17 & 1;
  v51 = v3 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_logger;
  sub_24992F4CC(v3 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_logger, (uint64_t)v16, (uint64_t *)&unk_2578A2350);
  v18 = sub_249955718();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    sub_2498F9DB0((uint64_t)v16, (uint64_t *)&unk_2578A2350);
  }
  else
  {
    OUTLINED_FUNCTION_15_18(EnumTagSinglePayload, v20, &qword_2578A1280);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v23 = sub_249955700();
    v24 = sub_249955A24();
    v50 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v25 = OUTLINED_FUNCTION_28_3();
      v48 = v9;
      v26 = v25;
      v47 = OUTLINED_FUNCTION_28_3();
      v53[0] = v47;
      *(_DWORD *)v26 = 134218499;
      v46 = v23;
      OUTLINED_FUNCTION_6_12();
      v49 = v18;
      v27 = *(_QWORD *)(v3 + 48);
      OUTLINED_FUNCTION_113();
      v52 = v27;
      OUTLINED_FUNCTION_7_27();
      OUTLINED_FUNCTION_113();
      *(_WORD *)(v26 + 12) = 2082;
      swift_bridgeObjectRetain();
      v52 = sub_2498F7698(v7, v5, v53);
      OUTLINED_FUNCTION_7_27();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 22) = 2081;
      v28 = sub_24992DDE4((uint64_t)v54);
      v52 = sub_2498F7698(v28, v29, v53);
      OUTLINED_FUNCTION_7_27();
      v30 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52_1(v30, &qword_2578A1280);
      _os_log_impl(&dword_2498C7000, v46, (os_log_type_t)v50, "%llx: SetProperty %{public}s: %{private}s", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_23_7();
    }
    swift_bridgeObjectRelease_n();

    v31 = swift_release_n();
    OUTLINED_FUNCTION_52_1(v31, &qword_2578A1280);
    v21 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  OUTLINED_FUNCTION_15_18(v21, v22, &qword_2578A1280);
  OUTLINED_FUNCTION_3_10();
  swift_bridgeObjectRetain();
  sub_24992B874((uint64_t)v54, v7, v5);
  result = swift_endAccess();
  if (*MEMORY[0x24BDD8B10])
  {
    v33 = (id)*MEMORY[0x24BDD8B10];
    if (sub_249955850() == v7 && v34 == v5)
    {
      v37 = swift_bridgeObjectRelease();
    }
    else
    {
      v36 = OUTLINED_FUNCTION_19_17();
      v37 = OUTLINED_FUNCTION_56_1();
      if ((v36 & 1) == 0)
      {
        if (v7 == 0xD00000000000001DLL && v5 == 0x800000024995F410 || (OUTLINED_FUNCTION_19_17() & 1) != 0)
          sub_24992DE80(v9);
        return v17 & 1;
      }
    }
    OUTLINED_FUNCTION_15_18(v37, v38, &qword_2578A1280);
    if (v54[3])
    {
      if (OUTLINED_FUNCTION_41_4() && (v53[0] & 1) != 0)
      {
        v40 = *(void (**)(uint64_t))(v3
                                             + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_terminationWasRequestedHandler);
        v41 = OUTLINED_FUNCTION_33_0();
        v40(v41);
        OUTLINED_FUNCTION_46_0();
        return v17 & 1;
      }
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v39, &qword_2578A1280);
    }
    sub_24992F4CC(v51, v13, (uint64_t *)&unk_2578A2350);
    if (__swift_getEnumTagSinglePayload(v13, 1, v18) == 1)
    {
      sub_2498F9DB0(v13, (uint64_t *)&unk_2578A2350);
    }
    else
    {
      v42 = sub_249955700();
      v43 = sub_249955A18();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)OUTLINED_FUNCTION_28_3();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_2498C7000, v42, v43, "RequestTerminate set to an unexpected value", v44, 2u);
        OUTLINED_FUNCTION_23_7();
      }

      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v13, v18);
    }
    return v17 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24992DDE4(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v5[2];

  sub_24992F4CC(a1, (uint64_t)&v3, &qword_2578A1280);
  if (v4)
  {
    sub_2498E29C4(&v3, v5);
    sub_2498F23FC((uint64_t)v5, (uint64_t)&v3);
    v1 = sub_24995585C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    sub_2498F9DB0((uint64_t)&v3, &qword_2578A1280);
    return 7104878;
  }
  return v1;
}

void sub_24992DE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  unsigned int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = v1;
  swift_beginAccess();
  if (HIDDeviceType.init(properties:)(*(_QWORD *)(v2 + 56), *(id *)(v2 + 64)) == 5)
  {
    sub_24992F4CC(a1, (uint64_t)&v12, &qword_2578A1280);
    if (!v13)
    {
      sub_2498F9DB0((uint64_t)&v12, &qword_2578A1280);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A25C0);
    if ((swift_dynamicCast() & 1) == 0)
      return;
    sub_2498F0454(0xD000000000000027, 0x800000024995F5E0, v11, &v12);
    if (v13)
    {
      if (swift_dynamicCast())
      {
        v4 = v11;
        goto LABEL_10;
      }
    }
    else
    {
      sub_2498F9DB0((uint64_t)&v12, &qword_2578A1280);
    }
    v4 = 0;
LABEL_10:
    sub_2498F0454(0x4950746E65696C43, 0xE900000000000044, v11, &v12);
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (swift_dynamicCast())
      {
        v5 = v11;
        if ((v4 & 1) == 0)
        {
LABEL_13:
          v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_notificationCenterModeProcesses);
          swift_beginAccess();
          if (sub_2498F04A4(v5, *v6))
          {
            swift_endAccess();
            sub_249955724();
            swift_release();
          }
          else
          {
            swift_endAccess();
          }
          swift_beginAccess();
          sub_2498E0948(v5);
          swift_endAccess();
          swift_release();
          goto LABEL_20;
        }
LABEL_17:
        v7 = swift_allocObject();
        *(_QWORD *)(v7 + 16) = v2;
        *(_DWORD *)(v7 + 24) = v5;
        swift_retain();
        sub_24992E1BC(v5, (uint64_t)sub_24992F878, v7);
        swift_release();
        swift_beginAccess();
        sub_2498E0B18();
        swift_endAccess();
LABEL_20:
        v8 = sub_24992BE20(*(_QWORD *)(v2 + 16), 9u, (void (*)(_QWORD))type metadata accessor for DigitizerGesture);
        if (v8)
        {
          v9 = v8;
          v10 = v2 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_notificationCenterModeProcesses;
          swift_beginAccess();
          LOBYTE(v10) = *(_QWORD *)(*(_QWORD *)v10 + 16) != 0;
          swift_beginAccess();
          *(_BYTE *)(v9 + 19) = v10;
          sub_24992BA08(MEMORY[0x24BEE4AF8], (void (*)(void **__return_ptr, _BYTE *))sub_24992D6E0);
          swift_release();
        }
        return;
      }
    }
    else
    {
      sub_2498F9DB0((uint64_t)&v12, &qword_2578A1280);
    }
    v5 = -1;
    if (!v4)
      goto LABEL_13;
    goto LABEL_17;
  }
}

uint64_t sub_24992E1BC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v21 = a2;
  v22 = a3;
  v4 = sub_249955748();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24995576C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_249955A78();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 1)
  {
    sub_24991D13C(0, &qword_2578A25C8);
    v20 = v4;
    sub_249955A6C();
    v15 = sub_249955A84();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_getObjectType();
    v16 = swift_allocObject();
    v17 = v22;
    *(_QWORD *)(v16 + 16) = v21;
    *(_QWORD *)(v16 + 24) = v17;
    aBlock[4] = sub_2498F0224;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2498EDF40;
    aBlock[3] = &block_descriptor_3;
    v18 = _Block_copy(aBlock);
    swift_retain();
    sub_249955754();
    sub_24992E454();
    sub_249955A90();
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v20);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
    sub_249955AA8();
    *(_QWORD *)(swift_allocObject() + 16) = v15;
  }
  sub_249955730();
  swift_allocObject();
  return sub_24995573C();
}

uint64_t sub_24992E454()
{
  sub_249955748();
  sub_2498EDF80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0F98);
  sub_2498EDFC0();
  return sub_249955BF8();
}

uint64_t sub_24992E4D0()
{
  swift_getObjectType();
  return sub_249955A9C();
}

uint64_t sub_24992E4F4(uint64_t a1, unsigned int a2)
{
  uint64_t *v3;

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_notificationCenterModeProcesses);
  swift_beginAccess();
  if (sub_2498F04A4(a2, *v3))
  {
    swift_endAccess();
    sub_249955724();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  sub_2498E0948(a2);
  swift_endAccess();
  return swift_release();
}

id sub_24992E5A8(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_weakInit();
  sub_24992F4CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC12UniversalHIDP33_77F0A1D2252CCF67CE1080DE620C755225HIDVirtualServiceDelegate_logger, (uint64_t *)&unk_2578A2350);
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_2498F9DB0(a1, (uint64_t *)&unk_2578A2350);
  return v4;
}

uint64_t sub_24992E63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v6;

  result = swift_weakLoadStrong();
  if (result)
  {
    if (a2 == 0xD000000000000019 && a3 == 0x800000024995F5C0 || (sub_249955F28() & 1) != 0)
      sub_24992D52C();
    v6 = HIDVirtualService.setProperty(_:forKey:)();
    swift_release();
    return v6 & 1;
  }
  return result;
}

double sub_24992E7E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  double result;

  if (swift_weakLoadStrong())
  {
    HIDVirtualService.property(forKey:)(a1, a2, a3);
    swift_release();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_24992EB78()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_24992EBC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24992EC38(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_25;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2668);
  result = sub_249955C28();
  v3 = result;
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  v4 = 0;
  v5 = result + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    sub_249955FB8();
    swift_bridgeObjectRetain();
    sub_249955880();
    result = sub_249956000();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = *(_QWORD *)(v3 + 48);
      v15 = (_QWORD *)(v14 + 16 * v10);
      v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (result = sub_249955F28(), (result & 1) != 0))
      {
LABEL_11:
        result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      v17 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v17;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          result = sub_249955F28();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
    v20 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    *v20 = v8;
    v20[1] = v7;
    v21 = *(_QWORD *)(v3 + 16);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_24992EE04(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(void);
  id v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v3 = a1;
  if (IOHIDEventGetType() == 17
    && sub_24992BE20(*(_QWORD *)(a2 + 16), 5u, (void (*)(_QWORD))type metadata accessor for PointerGesture))
  {
    swift_beginAccess();
    IOHIDEventSetIntegerValue();
    v4 = v3;
    v5 = objc_msgSend(v4, sel_children);
    if (v5)
    {
      v6 = v5;
      sub_24991D13C(0, (unint64_t *)&qword_2578A2650);
      v7 = sub_249955934();

      v8 = sub_249911E64(v7);
      swift_bridgeObjectRelease();
    }
    else
    {

      v8 = MEMORY[0x24BEE4AF8];
    }
    v11 = *(_QWORD *)(v8 + 16);
    if (v11)
    {
      v12 = v8 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_24992F814(v12, (uint64_t)&v30);
        v13 = v31;
        v14 = v32;
        __swift_project_boxed_opaque_existential_1(&v30, v31);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14) == 17)
          break;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      sub_2498CF9C0(&v30, (uint64_t)&v27);
    }
    else
    {
LABEL_12:
      v29 = 0;
      v27 = 0u;
      v28 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v28 + 1))
    {
      sub_2498CF9C0(&v27, (uint64_t)&v30);
      sub_24992F814((uint64_t)&v30, (uint64_t)&v27);
      v15 = *((_QWORD *)&v28 + 1);
      v16 = v29;
      v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v27, *((uint64_t *)&v28 + 1));
      MEMORY[0x24BDAC7A8](v17);
      v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v19);
      v21 = (void *)sub_2499143E0((uint64_t)v19, v15, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
      if (v21)
      {
        IOHIDEventSetIntegerValue();

      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    }
    else
    {
      sub_2498F9DB0((uint64_t)&v27, &qword_2578A0A10);
    }
    v22 = *(_QWORD *)(a2 + 40);
    swift_getObjectType();
    v23 = *(void (**)(void))(v22 + 80);
    v24 = v4;
    v23();
    swift_release();

  }
  else
  {

    v9 = *(_QWORD *)(a2 + 40);
    swift_getObjectType();
    v10 = *(void (**)(void))(v9 + 80);
    v26 = v3;
    v10();

  }
}

uint64_t sub_24992F128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void (*v39)(void);
  _QWORD v41[2];
  uint64_t v42;
  id v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v41 - v11;
  v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)v41 - v11);
  ((void (*)(char *, char *, uint64_t))v13)(v10, v12, a3);
  v14 = sub_2499143E0((uint64_t)v10, a3, a4);
  if (!v14)
    goto LABEL_6;
  v15 = (void *)v14;
  v16 = sub_24992BE20(*(_QWORD *)(a2 + 16), 5u, (void (*)(_QWORD))type metadata accessor for PointerGesture);
  if (!v16)
  {

LABEL_6:
    v24 = *(_QWORD *)(a2 + 40);
    ObjectType = swift_getObjectType();
    v26 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 352))(a3, a4);
    (*(void (**)(id, uint64_t, uint64_t))(v24 + 80))(v26, ObjectType, v24);
    goto LABEL_21;
  }
  v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask);
  swift_beginAccess();
  v18 = *v17;
  IOHIDEventSetIntegerValue();
  v19 = v15;
  v20 = objc_msgSend(v19, sel_children);
  v43 = v19;
  if (v20)
  {
    v21 = v20;
    sub_24991D13C(0, (unint64_t *)&qword_2578A2650);
    v22 = sub_249955934();

    v23 = sub_249911E64(v22);
    swift_bridgeObjectRelease();
  }
  else
  {

    v23 = MEMORY[0x24BEE4AF8];
  }
  v27 = *(_QWORD *)(v23 + 16);
  if (v27)
  {
    v41[1] = v18;
    v42 = v7;
    v28 = v23 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992F814(v28, (uint64_t)&v47);
      v30 = v48;
      v29 = v49;
      __swift_project_boxed_opaque_existential_1(&v47, v48);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29) == 17)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      v28 += 40;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        v7 = v42;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    sub_2498CF9C0(&v47, (uint64_t)&v44);
    swift_bridgeObjectRelease();
    v7 = v42;
  }
  else
  {
LABEL_13:
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
    swift_bridgeObjectRelease();
  }
  if (*((_QWORD *)&v45 + 1))
  {
    sub_2498CF9C0(&v44, (uint64_t)&v47);
    sub_24992F814((uint64_t)&v47, (uint64_t)&v44);
    v31 = *((_QWORD *)&v45 + 1);
    v32 = v46;
    v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v44, *((uint64_t *)&v45 + 1));
    MEMORY[0x24BDAC7A8](v33);
    v35 = (char *)v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v36 + 16))(v35);
    v37 = (void *)sub_2499143E0((uint64_t)v35, v31, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    if (v37)
    {
      IOHIDEventSetIntegerValue();

    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    sub_2498F9DB0((uint64_t)&v44, &qword_2578A0A10);
  }
  v38 = *(_QWORD *)(a2 + 40);
  swift_getObjectType();
  v39 = *(void (**)(void))(v38 + 80);
  v26 = v43;
  v39();
  swift_release();

LABEL_21:
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, a3);
}

void sub_24992F4CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_21_15(a1, a2, a3);
  OUTLINED_FUNCTION_43_4(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992F4F8()
{
  return type metadata accessor for HIDVirtualService(0);
}

uint64_t type metadata accessor for HIDVirtualService(uint64_t a1)
{
  return sub_2498F950C(a1, (uint64_t *)&unk_2578A2430);
}

void sub_24992F514()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for HIDVirtualService()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24992F5F0()
{
  return type metadata accessor for HIDVirtualServiceDelegate(0);
}

uint64_t type metadata accessor for HIDVirtualServiceDelegate(uint64_t a1)
{
  return sub_2498F950C(a1, (uint64_t *)&unk_2578A25B0);
}

void sub_24992F60C()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

_QWORD *initializeBufferWithCopyOfBuffer for HIDVirtualService.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HIDVirtualService.State()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for HIDVirtualService.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for HIDVirtualService.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDVirtualService.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDVirtualService.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_24992F7CC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24992F7E4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HIDVirtualService.State()
{
  return &type metadata for HIDVirtualService.State;
}

void sub_24992F814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_24992F854()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24992F878()
{
  uint64_t v0;

  return sub_24992E4F4(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_24992F884()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24992F8C0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24992F8E4()
{
  return sub_24992E4D0();
}

uint64_t sub_24992F8EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_24992F910(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_21_15(a1, a2, a3);
  OUTLINED_FUNCTION_43_4(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_6_0();
}

id OUTLINED_FUNCTION_3_25(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v1, (SEL)(v2 + 2324), v3, a1);
}

uint64_t OUTLINED_FUNCTION_7_27()
{
  return sub_249955AFC();
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  return sub_249955AE4();
}

uint64_t OUTLINED_FUNCTION_13_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 16))(v1, *(_QWORD *)(v3 - 120), v2);
}

void OUTLINED_FUNCTION_15_18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_24992F4CC(v3, v4 - 112, a3);
}

uint64_t OUTLINED_FUNCTION_17_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_17()
{
  return sub_249955F28();
}

uint64_t OUTLINED_FUNCTION_21_15(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_22_13(void *a1)
{
  uint64_t v1;

  return HIDDeviceType.init(properties:)(v1, a1);
}

void OUTLINED_FUNCTION_23_9(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 152) = (v1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_28_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_24992F4CC(v0, v2, v1);
}

void OUTLINED_FUNCTION_29_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_24992F4CC(v0, v2, v1);
}

void OUTLINED_FUNCTION_31_6(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_24992F4CC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return sub_249955F40();
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  return type metadata accessor for AbsolutePointerGesture();
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return sub_249955F40();
}

uint64_t OUTLINED_FUNCTION_39_4(__int128 *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_2498CF9C0(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return sub_2499558A4();
}

uint64_t OUTLINED_FUNCTION_45_3(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;

  return sub_24992BE20(v3, 7u, a3);
}

uint64_t AbsolutePointerGesture.__allocating_init(logger:pointerGesture:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AbsolutePointerGesture.init(logger:pointerGesture:)(a1, a2);
  return v4;
}

uint64_t AbsolutePointerGesture.buttonMask.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_buttonMask;
  OUTLINED_FUNCTION_3_10();
  return *(_QWORD *)v1;
}

uint64_t AbsolutePointerGesture.init(logger:pointerGesture:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_buttonMask) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_keyboardModifiers) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_x) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_y) = 0;
  sub_249901960(a1, v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_logger);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_pointerGesture) = a2;
  return v2;
}

#error "24992FC08: call analysis failed (funcsize=164)"

uint64_t AbsolutePointerGesture.deinit()
{
  uint64_t v0;

  sub_2499019A8(v0 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_logger);
  swift_release();
  return v0;
}

uint64_t AbsolutePointerGesture.__deallocating_deinit()
{
  uint64_t v0;

  sub_2499019A8(v0 + OBJC_IVAR____TtC12UniversalHID22AbsolutePointerGesture_logger);
  swift_release();
  return swift_deallocClassInstance();
}

_UNKNOWN **sub_24992FECC()
{
  return &protocol witness table for AbsolutePointerReport;
}

_UNKNOWN **sub_24992FED8()
{
  return &protocol witness table for AbsolutePointerReport;
}

uint64_t sub_24992FEE4(_QWORD *a1)
{
  return AbsolutePointerGesture.dispatch(report:)(*a1, a1[1]);
}

uint64_t type metadata accessor for AbsolutePointerGesture()
{
  uint64_t result;

  result = qword_2578A27B8;
  if (!qword_2578A27B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24992FF44()
{
  unint64_t v0;

  sub_2498F95F4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AbsolutePointerGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AbsolutePointerGesture.__allocating_init(logger:pointerGesture:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t OUTLINED_FUNCTION_0_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void OUTLINED_FUNCTION_1_37()
{
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

double OUTLINED_FUNCTION_4_23(double a1, double a2)
{
  return vabdd_f64(a1, a2);
}

id sub_24993001C(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2499301E4(a1, a2, a3);
}

id sub_249930028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  v10 = MEMORY[0x24BEE0D00];
  v25 = sub_2499557C0();
  if (a5)
  {
    v11 = sub_249955844();
    v24 = v10;
    v23[0] = a4;
    v23[1] = a5;
    sub_24992B874((uint64_t)v23, v11, v12);
  }
  if (a6)
  {
    v13 = sub_249955844();
    v15 = v14;
    swift_getErrorValue();
    v24 = v22;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_1);
    sub_24992B874((uint64_t)v23, v13, v15);
  }
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v18 = (void *)sub_249955838();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_24995579C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, a3, v19);

  return v20;
}

id sub_2499301D8(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2499301E4(a1, a2, a3);
}

id sub_2499301E4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_249955844();
  return sub_249930028(v6, v7, a1, a2, a3, 0);
}

Swift::Double __swiftcall HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(Swift::Double logicalMinimum, Swift::Double logicalMaximum, Swift::Double_optional physicalMinimum, Swift::Double_optional physicalMaximum, Swift::Double_optional exponent)
{
  int v5;
  double v6;
  char v7;
  double v10;
  double v11;
  double v12;

  v10 = logicalMaximum;
  v11 = logicalMinimum;
  if (((*(_DWORD *)&physicalMaximum.is_nil | v5) & 1) == 0)
  {
    v11 = *(double *)&physicalMinimum.is_nil;
    if (*(double *)&physicalMinimum.is_nil == 0.0)
    {
      if ((*(_QWORD *)&exponent.is_nil & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v10 = *(double *)&exponent.is_nil;
      else
        v10 = logicalMaximum;
      if ((*(_QWORD *)&exponent.is_nil & 0x7FFFFFFFFFFFFFFFLL) == 0)
        v11 = logicalMinimum;
    }
    else
    {
      v10 = *(double *)&exponent.is_nil;
    }
  }
  v12 = 1.0;
  if ((v7 & 1) == 0 && v6 != 0.0)
    v12 = __exp10(v6);
  return (logicalMaximum - logicalMinimum) / ((v10 - v11) * v12);
}

void HIDReport.loadValue<A>(from:at:)(uint64_t a1@<X1>, unint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[22];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22[21] = a1;
  v24 = a6;
  v27 = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v26 = *(_QWORD *)(a4 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v23 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v22[20] = (char *)v22 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v22[19] = (char *)v22 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v22 - v18;
  swift_getAssociatedConformanceWitness();
  sub_249955F34();
  sub_249955F10();
  v20 = sub_249955D0C();
  if (v20 < -7)
  {
    __break(1u);
    JUMPOUT(0x249930814);
  }
  v25 = v9;
  if ((unint64_t)(v20 + 7) >= 0xF)
  {
    v22[13] = (uint64_t)a2 >> 32;
    v22[12] = BYTE6(a3);
    v22[11] = a2 >> 8;
    v22[10] = a2 >> 16;
    v22[9] = a2 >> 24;
    v22[8] = HIDWORD(a2);
    v22[7] = a2 >> 40;
    v22[6] = HIWORD(a2);
    v22[5] = HIBYTE(a2);
    v22[4] = a3 >> 8;
    v22[3] = a3 >> 16;
    v22[2] = a3 >> 24;
    v22[1] = HIDWORD(a3);
    v22[0] = a3 >> 40;
    __asm { BR              X10 }
  }
  v21 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v19, a4);
  sub_249955B98();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v19, a4);
  OUTLINED_FUNCTION_4_0();
}

uint64_t HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  uint64_t v20;
  double v21;
  uint64_t result;
  double v24;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_0();
  HIDReport.loadValue<A>(from:at:)(v13, v14, v15, v16, v17, v12 - v11);
  OUTLINED_FUNCTION_3_26();
  if (sub_249955B74() < 65)
  {
    OUTLINED_FUNCTION_3_26();
    v19 = sub_249955B80();
    OUTLINED_FUNCTION_3_26();
    v20 = sub_249955B68();
    OUTLINED_FUNCTION_1_38();
    if ((v19 & 1) != 0)
      v18 = (double)v20;
    else
      v18 = (double)(unint64_t)v20;
  }
  else
  {
    sub_2498D1070();
    sub_2498D10AC();
    sub_249955790();
    OUTLINED_FUNCTION_1_38();
    v18 = v24;
  }
  if (a4 == 0.0 && a5 == 0.0)
  {
    a5 = a3;
    a4 = a2;
  }
  v21 = 1.0;
  if (a6 != 0.0)
    v21 = __exp10(a6);
  if (v18 > a3 || v18 < a2)
    *(double *)&result = 0.0;
  else
    *(double *)&result = v18 / ((a3 - a2) / ((a5 - a4) * v21));
  return result;
}

uint64_t HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:)(uint64_t a1, double a2, double a3)
{
  return sub_2499309F8(a1, a2, a3, -1.0);
}

{
  return sub_2499309F8(a1, a2, a3, 0.0);
}

uint64_t sub_2499309F8(uint64_t a1, double a2, double a3, double a4)
{
  return HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2, a3, a4, 1.0, 0.0);
}

void HIDReport.storeValue<A>(_:to:at:)(uint64_t a1)
{
  uint64_t v2;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_0();
  v2 = sub_249955D0C();
  if (v2 < -7)
  {
    __break(1u);
    JUMPOUT(0x249930BD0);
  }
  if ((unint64_t)(v2 + 7) >= 0xF)
    __asm { BR              X12 }
  OUTLINED_FUNCTION_4_0();
}

uint64_t HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  double v15;

  v6 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_16_0();
  v11 = v10 - v9;
  if ((v12 & 1) == 0 && (~v7 & 0x7FF0000000000000) != 0)
  {
    if (v8 != 0.0)
      __exp10(v8);
    sub_2498D1070();
    sub_249955B8C();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_3_26();
    sub_249930D44(v13, v14, v15);
  }
  HIDReport.storeValue<A>(_:to:at:)(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v11, a5);
}

uint64_t sub_249930D44(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t result;
  char v15;
  _QWORD v16[2];

  v5 = *(_QWORD *)(a1 - 8);
  v6 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(a1);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v16 - v10;
  *(double *)v16 = v9;
  sub_2498D1070();
  sub_249955B8C();
  sub_249955D30();
  v12 = sub_2499557F0();
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a1);
  v13(v11, a1);
  if ((v12 & 1) != 0)
    return sub_249955D30();
  *(double *)v16 = a3;
  sub_249955B8C();
  sub_249955D24();
  v15 = sub_2499557FC();
  v13(v8, a1);
  v13(v11, a1);
  if ((v15 & 1) != 0)
    return sub_249955D24();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_249955C34();
  sub_2499558A4();
  sub_2499559A0();
  sub_2499558A4();
  sub_2499559A0();
  result = sub_249955D6C();
  __break(1u);
  return result;
}

uint64_t HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249930FC0(a1, a2, a3, a4, a5);
}

{
  return sub_249930FC0(a1, a2, a3, a4, a5);
}

uint64_t sub_249930FC0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2 & 1, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_24()
{
  return sub_249955574();
}

uint64_t PointerFilter.debugState.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1AE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2499568A0;
  *(_QWORD *)(inited + 32) = 0x7265746E696F50;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2868);
  v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_24995A970;
  *(_QWORD *)(v1 + 32) = 0x614D6E6F74747542;
  *(_QWORD *)(v1 + 40) = 0xEA00000000006B73;
  *(_QWORD *)(v1 + 48) = sub_249955AF0();
  strcpy((char *)(v1 + 56), "DeadButtonMask");
  *(_BYTE *)(v1 + 71) = -18;
  *(_QWORD *)(v1 + 72) = sub_249955AF0();
  *(_QWORD *)(v1 + 80) = 0xD000000000000010;
  *(_QWORD *)(v1 + 88) = 0x800000024995F730;
  *(_QWORD *)(v1 + 96) = sub_249955AF0();
  sub_24991D13C(0, &qword_2578A2870);
  v2 = OUTLINED_FUNCTION_10_24();
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2878);
  *(_QWORD *)(inited + 48) = v2;
  return OUTLINED_FUNCTION_10_24();
}

uint64_t PointerFilter.eventMask.getter()
{
  return 0x20000;
}

uint64_t PointerFilter.__allocating_init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PointerFilter.init(logger:service:)(a1, a2, a3);
  return v6;
}

_QWORD *PointerFilter.init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  v3[2] = 0;
  v3[3] = 0;
  v3[4] = 0;
  v6 = OBJC_IVAR____TtC12UniversalHID13PointerFilter_copyMask;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v3 + v6) = sub_2498CF460(MEMORY[0x24BEE4AF8]);
  v8 = OBJC_IVAR____TtC12UniversalHID13PointerFilter_filterMask;
  *(_QWORD *)((char *)v3 + v8) = sub_2498CF460(v7);
  v9 = (char *)v3 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_logger;
  v10 = OUTLINED_FUNCTION_55_2();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  ObjectType = swift_getObjectType();
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_serviceID) = v13;
  return v3;
}

BOOL sub_249931328()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v4;

  IOHIDEventGetFloatValue();
  if (v1 != 0.0)
    return 1;
  IOHIDEventGetFloatValue();
  if (v2 != 0.0 || IOHIDEventIsAbsolute())
    return 1;
  v4 = *(_QWORD *)(v0 + 16);
  return (IOHIDEventGetIntegerValue() & ~v4) != 0;
}

void sub_2499313A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (IOHIDEventIsAbsolute())
  {
    if (qword_2578A0760 != -1)
      swift_once();
    v4 = *((_QWORD *)&xmmword_2578A1328 + 1);
    HIDReportDescriptor.reportBitCount(for:)();
    HIDReport.init(bitCount:id:)(v0, 19);
    OUTLINED_FUNCTION_17_17();
    __asm { BR              X12 }
  }
  if (qword_2578A0810 != -1)
    swift_once();
  OUTLINED_FUNCTION_7_28();
  HIDReport.init(bitCount:id:)(v1, 5);
  v3 = v2;
  OUTLINED_FUNCTION_17_17();
  __asm { BR              X10 }
}

uint64_t sub_249931ACC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = IOHIDEventGetIntegerValue();
  if (result)
  {
    if ((result & a2) == 0)
    {
      IOHIDEventSetIntegerValue();
      return IOHIDEventSetFloatValue();
    }
  }
  return result;
}

uint64_t sub_249931B30(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  result = IOHIDEventGetIntegerValue();
  if ((result & a2) != result)
  {
    if ((result & a2) - 0xFFFFFFFF < 0xFFFFFFFF00000002)
      __break(1u);
    else
      return IOHIDEventSetIntegerValue();
  }
  return result;
}

BOOL PointerFilter.filterEvent(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t IntegerValue;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  _BYTE v35[24];
  uint64_t v36;
  void *v37;
  _BYTE v38[24];
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  sub_2498CF8CC(a2, (uint64_t)v38);
  v5 = v39;
  v6 = v40;
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  v12 = (void *)sub_2499143E0((uint64_t)v10, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  if (v12)
  {
    v13 = *(_QWORD *)(v3 + 16);
    IntegerValue = IOHIDEventGetIntegerValue();
    if (v13 != IntegerValue)
      *(_QWORD *)(v3 + 16) = IntegerValue;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_filterMask + 2) & 2) != 0)
    {
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    else
    {
      v15 = *(_QWORD *)(v3 + 24);
      if (v15)
      {
        v34[1] = a1;
        v16 = *(_QWORD *)(v3 + 16) & v15;
        if (v15 != v16)
          *(_QWORD *)(v3 + 24) = v16;
        v17 = ~v15;
        OUTLINED_FUNCTION_14_21((uint64_t)v12);
        v18 = v12;
        v19 = objc_msgSend(v18, sel_children);
        if (v19)
        {
          v20 = v19;
          sub_24991D13C(0, (unint64_t *)&qword_2578A2650);
          v21 = sub_249955934();

          v22 = sub_249911E64(v21);
          swift_bridgeObjectRelease();
        }
        else
        {

          v22 = MEMORY[0x24BEE4AF8];
        }
        v24 = *(_QWORD *)(v22 + 16);
        if (v24)
        {
          v34[0] = v22;
          v25 = v22 + 32;
          do
          {
            sub_2498CF8CC(v25, (uint64_t)v38);
            OUTLINED_FUNCTION_15_19();
            v26 = v36;
            v27 = v37;
            v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
            v29 = MEMORY[0x24BDAC7A8](v28);
            v31 = (char *)v34 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v32 + 16))(v31, v29);
            sub_2499143E0((uint64_t)v31, v26, (uint64_t)v27);
            OUTLINED_FUNCTION_9_18();
            if (v27)
            {
              OUTLINED_FUNCTION_14_21((uint64_t)v27);
            }
            else
            {
              OUTLINED_FUNCTION_15_19();
              OUTLINED_FUNCTION_8_19();
              if ((*((unsigned int (**)(_QWORD, char *))v31 + 3))(0, v31) != 2)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
                goto LABEL_20;
              }
              OUTLINED_FUNCTION_8_19();
              (*((void (**)(_QWORD, char *))v31 + 44))(0, v31);
              OUTLINED_FUNCTION_9_18();
              sub_249931B30(0, v17);
            }

LABEL_20:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
            v25 += 40;
            --v24;
          }
          while (v24);
        }
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_2_5();
    }
    v23 = sub_249931328();
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_copyMask + 2) & 2) != 0)
      sub_2499313A8();

  }
  else
  {
    OUTLINED_FUNCTION_2_5();
    return 0;
  }
  return v23;
}

uint64_t PointerFilter.updateCopyMask(oldValue:newValue:)(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_copyMask) = a2;
  result = MEMORY[0x24BEE4AF8];
  if ((a1 & 0x20000) == 0 && (a2 & 0x20000) != 0 && *(_QWORD *)(v2 + 16))
  {
    if (qword_2578A0810 != -1)
      swift_once();
    OUTLINED_FUNCTION_7_28();
    HIDReport.init(bitCount:id:)(v5, 5);
    __asm { BR              X12 }
  }
  return result;
}

uint64_t PointerFilter.updateFilterMask(oldValue:newValue:)(int a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *ButtonEventWithPressure;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12UniversalHID13PointerFilter_filterMask) = a2;
  if ((a1 & 0x20000) == 0)
  {
    if ((a2 & 0x20000) != 0)
      v2[4] = v2[2];
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x20000) != 0)
    return MEMORY[0x24BEE4AF8];
  v3 = v2[4];
  v4 = v2[2];
  v2[3] = v4 & ~v3;
  v2[4] = 0;
  if ((v3 & ~v4) == 0)
    return MEMORY[0x24BEE4AF8];
  v5 = v4 & v3;
  v6 = mach_absolute_time();
  v7 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v6, v5, v3);
  if (!HIDWORD(v5))
  {
    v8 = v7;
    ButtonEventWithPressure = (void *)IOHIDEventCreateButtonEventWithPressure();
    IOHIDEventAppendEvent();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1D20);
    v10 = OUTLINED_FUNCTION_17_3();
    *(_OWORD *)(v10 + 16) = xmmword_24995BDA0;
    *(_QWORD *)(v10 + 32) = v8;
    v13 = v10;
    sub_249955940();
    v11 = v13;

    return v11;
  }
  OUTLINED_FUNCTION_50();
  result = OUTLINED_FUNCTION_15_14();
  __break(1u);
  return result;
}

uint64_t PointerFilter.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_55_2();
  OUTLINED_FUNCTION_4_25(v1);
  return v0;
}

uint64_t PointerFilter.__deallocating_deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_55_2();
  OUTLINED_FUNCTION_4_25(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_24993219C()
{
  return PointerFilter.eventMask.getter();
}

BOOL sub_2499321B0(uint64_t a1, uint64_t a2)
{
  return PointerFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_2499321D4()
{
  return PointerFilter.debugState.getter();
}

uint64_t sub_2499321F4(int a1, uint64_t a2)
{
  return PointerFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_249932214(int a1, uint64_t a2)
{
  return PointerFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_249932234()
{
  return type metadata accessor for PointerFilter();
}

uint64_t type metadata accessor for PointerFilter()
{
  uint64_t result;

  result = qword_2578A28C8;
  if (!qword_2578A28C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249932274()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249955718();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PointerFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PointerFilter.__allocating_init(logger:service:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t OUTLINED_FUNCTION_4_25(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_5_25()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  return sub_24995561C();
}

void OUTLINED_FUNCTION_7_28()
{
  HIDReportDescriptor.reportBitCount(for:)();
}

_QWORD *OUTLINED_FUNCTION_8_19()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 136));
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_10_24()
{
  return sub_2499557C0();
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_14_21(uint64_t a1)
{
  uint64_t v1;

  return sub_249931ACC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_15_19()
{
  uint64_t v0;

  return sub_2498CF8CC(v0 - 120, v0 - 160);
}

uint64_t OUTLINED_FUNCTION_17_17()
{
  return IOHIDEventGetTimeStamp();
}

uint64_t NavigationSwipeGesture.__allocating_init(platform:)(_BYTE *a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  return result;
}

uint64_t static NavigationSwipeEvent.dispatch(report:platform:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for NavigationSwipeGesture();
  *(_BYTE *)(swift_initStackObject() + 16) = v5;
  return NavigationSwipeGesture.dispatch(report:)(a1, a2);
}

#error "24993254C: call analysis failed (funcsize=169)"

void NavigationSwipeGesture.platform.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t NavigationSwipeGesture.init(platform:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return v1;
}

uint64_t type metadata accessor for NavigationSwipeGesture()
{
  return objc_opt_self();
}

uint64_t NavigationSwipeGesture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NavigationSwipeGesture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_249932744(_QWORD *a1)
{
  return NavigationSwipeGesture.dispatch(report:)(*a1, a1[1]);
}

_UNKNOWN **sub_24993276C()
{
  return &protocol witness table for NavigationSwipeReport;
}

_UNKNOWN **sub_249932778()
{
  return &protocol witness table for NavigationSwipeReport;
}

uint64_t method lookup function for NavigationSwipeGesture()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NavigationSwipeGesture.__allocating_init(platform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t OUTLINED_FUNCTION_2_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;

  return _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v37, v36, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_2499327A8()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_233();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_2499327E0()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_24993280C()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_230();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932834()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_24993285C()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932888()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_2499328C0()
{
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_2499328E8()
{
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_6_0();
}

void sub_249932900()
{
  sub_249955FD0();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_249932924()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_169();
  return OUTLINED_FUNCTION_149();
}

void sub_24993295C()
{
  sub_249955FD0();
  OUTLINED_FUNCTION_6_0();
}

void sub_249932988()
{
  sub_249955FC4();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499329A8()
{
  sub_249955FE8();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499329C8()
{
  OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_6_0();
}

void sub_2499329E8()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932A10()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932A38()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_230();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932A60()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_233();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932A98()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_169();
  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932AD4()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932AFC()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_249932B24(char a1, uint64_t a2, uint64_t a3)
{
  sub_249932C04(a1, a2, a3, (uint64_t)sub_2499094E0, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_2499086E0);
}

void sub_249932B38(char a1, uint64_t a2, uint64_t a3)
{
  sub_249932C04(a1, a2, a3, (uint64_t)sub_2499094E0, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_24990879C);
}

void sub_249932B4C(char a1, uint64_t a2, uint64_t a3)
{
  sub_249932C04(a1, a2, a3, (uint64_t)sub_2499094E0, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_249908A80);
}

uint64_t sub_249932B64(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned __int16 *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_6();
  v3 = (unsigned __int16)a1;
  v4 = HIWORD(a1);
  v5 = v2 - 1;
  v6 = (unsigned __int16 *)(a2 + 34);
  do
  {
    v7 = v5;
    v8 = *(v6 - 1) == v3 && *v6 == v4;
    result = v8;
    if (v8)
      break;
    --v5;
    v6 += 2;
  }
  while (v7);
  return result;
}

void sub_249932BAC(__int16 a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[5];
  __int16 v4;

  v4 = a1;
  v3[2] = &v4;
  sub_249908E48(sub_24994081C, v3, a2, a3);
  OUTLINED_FUNCTION_222();
}

void sub_249932BF0(char a1, uint64_t a2, uint64_t a3)
{
  sub_249932C04(a1, a2, a3, (uint64_t)sub_249909220, (void (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_249908F20);
}

void sub_249932C04(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD *, uint64_t, uint64_t))
{
  _QWORD v5[5];
  char v6;

  v6 = a1;
  v5[2] = &v6;
  a5(a4, v5, a2, a3);
  OUTLINED_FUNCTION_222();
}

uint64_t sub_249932C48(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return OUTLINED_FUNCTION_6();
  v3 = result;
  if (*(unsigned __int8 *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return OUTLINED_FUNCTION_6();
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_249932CA4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = OUTLINED_FUNCTION_6_22();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (OUTLINED_FUNCTION_6_22() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void HIDServiceProperties.useRemoteAcceleration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

uint64_t HIDServiceProperties.primaryUsagePair.getter(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unsigned __int16 v18;
  _BYTE v19[24];
  uint64_t v20;

  OUTLINED_FUNCTION_1_32();
  sub_249955F40();
  v3 = OUTLINED_FUNCTION_98_1(a2, sel___swift_objectForKeyedSubscript_);
  v4 = OUTLINED_FUNCTION_44_5();
  if (v3)
  {
    sub_249955BA4();
    v4 = OUTLINED_FUNCTION_12_25();
  }
  OUTLINED_FUNCTION_213(v4, v5, &qword_2578A1280, v6, v7, v8, v9);
  if (v20)
  {
    if ((OUTLINED_FUNCTION_41_4() & 1) != 0)
    {
      OUTLINED_FUNCTION_137();
      sub_249955F40();
      v10 = OUTLINED_FUNCTION_98_1(a2, sel___swift_objectForKeyedSubscript_);
      v11 = OUTLINED_FUNCTION_44_5();
      if (v10)
      {
        sub_249955BA4();
        v11 = OUTLINED_FUNCTION_23_10();
      }
      OUTLINED_FUNCTION_213(v11, v12, &qword_2578A1280, v13, v14, v15, v16);
      if ((OUTLINED_FUNCTION_41_4() & 1) != 0)
        return v18 | (v18 << 16);
    }
  }
  else
  {
    sub_2498F9DB0((uint64_t)v19, &qword_2578A1280);
  }
  result = sub_249955D6C();
  __break(1u);
  return result;
}

void HIDServiceProperties.dispatchScrollEvents.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.dictionaryRepresentation.getter(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  v3 = sub_2499338EC(v2);

  sub_249933840(v3, &qword_2578A2BE0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249940194);
  OUTLINED_FUNCTION_37();
}

id HIDServiceProperties.init(serviceID:properties:)(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  void *v48;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v42 = (unint64_t)(v4 + 63) >> 6;
  result = v3;
  v48 = result;
  v8 = 0;
  v41 = a2 + 64;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
LABEL_6:
      v11 = *(_QWORD *)(a2 + 56);
      v12 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v10);
      v13 = v12[1];
      *(_QWORD *)&v43 = *v12;
      *((_QWORD *)&v43 + 1) = v13;
      sub_2498F23FC(v11 + 32 * v10, (uint64_t)v44);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return result;
    }
    if (v14 >= v42)
    {
      v16 = v8;
    }
    else
    {
      v15 = *(_QWORD *)(v41 + 8 * v14);
      if (v15)
        goto LABEL_10;
      v16 = v8 + 1;
      if (v8 + 2 < v42)
      {
        v15 = *(_QWORD *)(v41 + 8 * (v8 + 2));
        if (v15)
        {
          v14 = v8 + 2;
LABEL_10:
          v6 = (v15 - 1) & v15;
          v10 = __clz(__rbit64(v15)) + (v14 << 6);
          v8 = v14;
          goto LABEL_6;
        }
        v16 = v8 + 2;
        if (v8 + 3 < v42)
        {
          v15 = *(_QWORD *)(v41 + 8 * (v8 + 3));
          if (v15)
          {
            v14 = v8 + 3;
            goto LABEL_10;
          }
          v14 = v8 + 4;
          v16 = v8 + 3;
          if (v8 + 4 < v42)
          {
            v15 = *(_QWORD *)(v41 + 8 * v14);
            if (v15)
              goto LABEL_10;
            while (v8 + 5 < v42)
            {
              v15 = *(_QWORD *)(a2 + 104 + 8 * v8++);
              if (v15)
              {
                v14 = v8 + 4;
                goto LABEL_10;
              }
            }
            v16 = v42 - 1;
          }
        }
      }
    }
    v6 = 0;
    memset(v44, 0, sizeof(v44));
    v8 = v16;
    v43 = 0u;
LABEL_13:
    sub_24992F910((uint64_t)&v43, (uint64_t)&v45, &qword_2578A2A48);
    v17 = v46;
    if (!v46)
      break;
    v18 = v45;
    sub_2498E29C4(&v47, &v43);
    v19 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
    v20 = sub_249932CA4(v18, v17, v19);
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44[0] + 1));
      v21 = sub_249955F1C();
      swift_bridgeObjectRetain();
      objc_msgSend(v48, sel___swift_setObject_forKeyedSubscript_, v21, sub_249955F40());
      swift_unknownObjectRelease();
      v22 = OUTLINED_FUNCTION_12_25();
      OUTLINED_FUNCTION_209(v22, v23, v24, v25, v26, v27, v28, v29);
      result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      v30 = swift_bridgeObjectRelease();
      result = (id)OUTLINED_FUNCTION_209(v30, v31, v32, v33, v34, v35, v36, v37);
    }
  }
  swift_release();
  v38 = v48;
  sub_24993DED4(a1, v48);

  if (v39)
  return (id)a1;
}

void HIDServiceProperties.deviceUsagePairs.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_177();
  v1 = OUTLINED_FUNCTION_142();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    OUTLINED_FUNCTION_96_1(v8, &qword_2578A1288);
    if ((OUTLINED_FUNCTION_0_39() & 1) != 0)
    {
      sub_249933AF8((uint64_t)v23, v15, v16, v17, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_14_0();
}

void HIDServiceProperties.pointerButtonMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.mouseAcceleration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.mouseScrollAcceleration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.trackpadAcceleration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.trackpadScrollAcceleration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249933818(uint64_t a1)
{
  sub_249933840(a1, &qword_2578A2BE0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249940194);
}

void sub_24993382C(uint64_t a1)
{
  sub_249933840(a1, &qword_2578A1228, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249940484);
}

void sub_249933840(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_249955DC0();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v6 = v4;
  v5 = OUTLINED_FUNCTION_54_1();
  a3(v5, 1, &v6);
  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_37();
}

void HIDServiceProperties.useRemoteAcceleration.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

uint64_t sub_2499338EC(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 *v50;

  v1 = a1;
  v2 = sub_2499559E8();

  v49 = v2;
  sub_249955A00();
  sub_249940854((uint64_t)&unk_2578A2BE8);
  v3 = OUTLINED_FUNCTION_154();
  if (*((_QWORD *)&v46 + 1))
  {
    v11 = MEMORY[0x24BEE4AF8];
    v50 = &v37;
    do
    {
      v40 = v45;
      v41 = v46;
      v42 = v47;
      v43 = v48;
      OUTLINED_FUNCTION_210(v3, v4, v5, v6, v7, v8, v9, v10, v27, v28, v29, v30, v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34,
        v35,
        v36,
        *((uint64_t *)&v36 + 1),
        v37,
        *((uint64_t *)&v37 + 1),
        v38,
        *((uint64_t *)&v38 + 1),
        v44);
      OUTLINED_FUNCTION_224();
      if (OUTLINED_FUNCTION_41_4())
      {
        v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
        OUTLINED_FUNCTION_210(v12, v13, v14, v15, v16, v17, v18, v19, v27, v28, v29, v30, v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34,
          v35,
          v29,
          v30,
          v37,
          *((uint64_t *)&v37 + 1),
          v38,
          *((uint64_t *)&v38 + 1),
          v39);
        OUTLINED_FUNCTION_224();
        sub_2498E29C4(&v33, v50);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
        v36 = 0u;
        v37 = 0u;
        v38 = 0u;
      }
      sub_2498F9DB0((uint64_t)&v39, &qword_2578A2BF0);
      if (*((_QWORD *)&v36 + 1))
      {
        v31 = v36;
        v32 = v37;
        v33 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_172();
          sub_249907C70();
          v11 = v24;
        }
        v20 = *(_QWORD *)(v11 + 16);
        if (v20 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_249907C70();
          v11 = v25;
        }
        *(_QWORD *)(v11 + 16) = v20 + 1;
        v21 = (_OWORD *)(v11 + 48 * v20);
        v22 = v31;
        v23 = v33;
        v21[3] = v32;
        v21[4] = v23;
        v21[2] = v22;
      }
      else
      {
        sub_2498F9DB0((uint64_t)&v36, &qword_2578A2BF8);
      }
      v3 = OUTLINED_FUNCTION_154();
    }
    while (*((_QWORD *)&v46 + 1));
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  swift_release();
  return v11;
}

void sub_249933AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int16 v15;
  __int16 v16;
  char v17;
  __int16 v18;
  __int16 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;

  OUTLINED_FUNCTION_119();
  v11 = v10;
  v12 = sub_2499555A4();
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_5_6();
  v13 = v11;
  sub_249955AB4();

  sub_249940854((uint64_t)&unk_2578A2BC8);
  OUTLINED_FUNCTION_168();
  if (v28)
  {
    v14 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_2498E29C4(&v27, v26);
      sub_2498F23FC((uint64_t)v26, (uint64_t)&v25);
      sub_2498F9DE8(0, &qword_2578A2A50);
      if (!OUTLINED_FUNCTION_41_4() || (v15 = sub_2499367CC(a10), (v17 & 1) != 0))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      }
      else
      {
        v18 = v15;
        v19 = v16;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_206();
          v14 = v22;
        }
        v20 = *(_QWORD *)(v14 + 16);
        if (v20 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          OUTLINED_FUNCTION_206();
          v14 = v23;
        }
        *(_QWORD *)(v14 + 16) = v20 + 1;
        v21 = v14 + 4 * v20;
        *(_WORD *)(v21 + 32) = v19;
        *(_WORD *)(v21 + 34) = v18;
      }
      OUTLINED_FUNCTION_168();
    }
    while (v28);
  }
  OUTLINED_FUNCTION_20_7(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  OUTLINED_FUNCTION_3_7();
}

void sub_249933CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, NSDictionary a10)
{
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[144];
  _BYTE v20[144];
  uint64_t v21;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;
  UniversalHID::HIDServiceProperties::HIDAccelCurve_optional v25;
  _BYTE v26[152];

  OUTLINED_FUNCTION_119();
  v11 = v10;
  v12 = sub_2499555A4();
  v18 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_118();
  v13 = v11;
  sub_249955AB4();

  sub_249940854((uint64_t)&unk_2578A2BC8);
  OUTLINED_FUNCTION_159();
  if (v24)
  {
    v14 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_2498E29C4(&v23, v22);
      sub_2498F23FC((uint64_t)v22, (uint64_t)&v21);
      sub_2498F9DE8(0, &qword_2578A2A50);
      if (OUTLINED_FUNCTION_41_4())
      {
        HIDServiceProperties.HIDAccelCurve.init(dictionaryRepresentation:)(&v25, a10);
        OUTLINED_FUNCTION_226((uint64_t)&v25, (uint64_t)v20);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        OUTLINED_FUNCTION_226((uint64_t)&v25, (uint64_t)v26);
        if (sub_249940838((uint64_t)v26) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_172();
            sub_249907DB8();
            v14 = v16;
          }
          v15 = *(_QWORD *)(v14 + 16);
          if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            sub_249907DB8();
            v14 = v17;
          }
          OUTLINED_FUNCTION_226((uint64_t)v20, (uint64_t)v19);
          *(_QWORD *)(v14 + 16) = v15 + 1;
          memcpy((void *)(v14 + 144 * v15 + 32), v19, 0x89uLL);
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      }
      OUTLINED_FUNCTION_159();
    }
    while (v24);
  }
  OUTLINED_FUNCTION_153(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  OUTLINED_FUNCTION_3_7();
}

void HIDServiceProperties.deviceTypeHint.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_115();
  sub_249933ED8(v0, v1);
}

void HIDServiceProperties.product.getter(uint64_t a1, uint64_t a2)
{
  sub_249933ED8(a1, a2);
}

void sub_249933ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void HIDServiceProperties.product.setter(uint64_t a1, uint64_t a2)
{
  HIDServiceProperties.subscript.setter(a1, a2);
}

void HIDServiceProperties.universalControlVirtualService.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.fnKeyboardUsageMap.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_63_1(a1, a2);
}

void HIDServiceProperties.pointerAccelerationSupport.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.scrollAccelerationSupport.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.eventServiceProperties.setter(uint64_t a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

uint64_t HIDServiceProperties.property(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  _QWORD *v8;
  char v9;
  id v10;
  uint64_t result;
  _OWORD v12[2];

  swift_bridgeObjectRetain();
  v8 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
  v9 = sub_249932CA4(a1, a2, v8);
  OUTLINED_FUNCTION_49_1();
  if ((v9 & 1) != 0)
  {
    *(_QWORD *)&v12[0] = a1;
    *((_QWORD *)&v12[0] + 1) = a2;
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_122();
    v10 = OUTLINED_FUNCTION_87_1(a3, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_56_2();
    if (a3)
    {
      sub_249955BA4();
      OUTLINED_FUNCTION_44_5();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_24992F910((uint64_t)v12, (uint64_t)a4, &qword_2578A1280);
    return OUTLINED_FUNCTION_9_17();
  }
  else
  {
    result = OUTLINED_FUNCTION_9_17();
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

unint64_t HIDDisableAccessibilityEventTranslation.getter()
{
  return OUTLINED_FUNCTION_0_33(36);
}

unint64_t HIDDispatchScrollEvents.getter()
{
  return OUTLINED_FUNCTION_0_33(20);
}

unint64_t HIDFaceTimeRemoteControlSessionIDKey.getter()
{
  return OUTLINED_FUNCTION_103_1();
}

unint64_t HIDUniversalControlBuiltInKey.getter()
{
  return OUTLINED_FUNCTION_0_33(23);
}

unint64_t HIDUniversalControlMatchedServiceKey.getter()
{
  return OUTLINED_FUNCTION_103_1();
}

unint64_t HIDUniversalControlVirtualServiceKey.getter()
{
  return OUTLINED_FUNCTION_103_1();
}

unint64_t HIDUseRemoteAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_33(21);
}

uint64_t HIDServiceProperties.serviceID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDServiceProperties.serviceID.modify())()
{
  return nullsub_1;
}

void HIDServiceProperties.subscript.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_4();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v7, &qword_2578A1280, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_14_0();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_4();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v7, &qword_2578A1280, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_14_0();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_4();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v7, &qword_2578A1280, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_14_0();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_4();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v7, &qword_2578A1280, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_14_0();
}

void sub_249934260(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.subscript.getter();
  *a1 = v2;
}

void sub_24993428C(char *a1)
{
  char v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1);
}

void HIDServiceProperties.subscript.setter(char a1)
{
  void *v1;
  uint64_t v2;

  if (a1 == 2)
    v1 = 0;
  else
    v1 = (void *)sub_24995597C();
  OUTLINED_FUNCTION_54_1();
  v2 = OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_99_0(v2, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_9_17();

  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_37();
}

void HIDServiceProperties.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  OUTLINED_FUNCTION_104_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = malloc(0x60uLL);
  *v6 = v7;
  *((_QWORD *)v7 + 4) = v4;
  *((_QWORD *)v7 + 9) = v2;
  *((_QWORD *)v7 + 10) = v0;
  *((_QWORD *)v7 + 8) = v4;
  OUTLINED_FUNCTION_36_7((uint64_t)v7);
  v8 = OUTLINED_FUNCTION_125();
  v9 = OUTLINED_FUNCTION_76_1(v8, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v4)
  {
    OUTLINED_FUNCTION_74_0();
    v10 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v10, v11, &qword_2578A1280);
  if (!*((_QWORD *)v7 + 3))
  {
    v13 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v13, &qword_2578A1280);
LABEL_9:
    v12 = 2;
    goto LABEL_10;
  }
  if ((OUTLINED_FUNCTION_41_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_17_16();
    goto LABEL_9;
  }
  v12 = *((_BYTE *)v7 + 89);
  OUTLINED_FUNCTION_17_16();
LABEL_10:
  *((_BYTE *)v7 + 88) = v12;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_104_0();
  v4 = OUTLINED_FUNCTION_157();
  *v2 = v4;
  v4[4] = v3;
  v4[13] = v1;
  v4[14] = v0;
  v4[12] = v3;
  OUTLINED_FUNCTION_36_7((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_125();
  v6 = OUTLINED_FUNCTION_76_1(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v3)
  {
    OUTLINED_FUNCTION_74_0();
    v7 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v7, v8, &qword_2578A1280);
  if (v4[3])
  {
    v9 = OUTLINED_FUNCTION_41_4();
    v10 = v4[10];
    v11 = v4[11];
    OUTLINED_FUNCTION_17_16();
    if (v9)
      v12 = v10;
    else
      v12 = 0;
    v13 = 0xF000000000000000;
    if (v9)
      v13 = v11;
  }
  else
  {
    v14 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v14, &qword_2578A1280);
    v12 = 0;
    v13 = 0xF000000000000000;
  }
  v4[8] = v12;
  v4[9] = v13;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_104_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = malloc(0x70uLL);
  *v6 = v7;
  v7[4] = v4;
  v7[12] = v2;
  v7[13] = v0;
  v7[11] = v4;
  OUTLINED_FUNCTION_36_7((uint64_t)v7);
  v8 = OUTLINED_FUNCTION_125();
  v9 = OUTLINED_FUNCTION_76_1(v8, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v4)
  {
    OUTLINED_FUNCTION_74_0();
    v10 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v10, v11, &qword_2578A1280);
  if (v7[3])
  {
    v12 = OUTLINED_FUNCTION_41_4();
    v13 = v7[10];
    OUTLINED_FUNCTION_17_16();
    if (v12)
      v14 = v13;
    else
      v14 = 0;
    v15 = v12 ^ 1;
  }
  else
  {
    v16 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v16, &qword_2578A1280);
    v14 = 0;
    v15 = 1;
  }
  v7[8] = v14;
  *((_BYTE *)v7 + 72) = v15;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_104_0();
  v4 = OUTLINED_FUNCTION_157();
  *v2 = v4;
  v4[4] = v3;
  v4[13] = v1;
  v4[14] = v0;
  v4[12] = v3;
  OUTLINED_FUNCTION_36_7((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_125();
  v6 = OUTLINED_FUNCTION_76_1(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v3)
  {
    OUTLINED_FUNCTION_74_0();
    v7 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v7, v8, &qword_2578A1280);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v11, &qword_2578A1280);
LABEL_9:
    v9 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  if ((OUTLINED_FUNCTION_41_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_17_16();
    goto LABEL_9;
  }
  v9 = v4[10];
  v10 = v4[11];
  OUTLINED_FUNCTION_17_16();
LABEL_10:
  v4[8] = v9;
  v4[9] = v10;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_104_0();
  v4 = OUTLINED_FUNCTION_107_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_36_7((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_125();
  v6 = OUTLINED_FUNCTION_76_1(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v3)
  {
    OUTLINED_FUNCTION_74_0();
    v7 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v7, v8, &qword_2578A1280);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v11, &qword_2578A1280);
LABEL_9:
    v10 = 0;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_96_1(v9, &qword_2578A1288);
  if ((OUTLINED_FUNCTION_41_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_17_16();
    goto LABEL_9;
  }
  v10 = v4[9];
  OUTLINED_FUNCTION_17_16();
LABEL_10:
  v4[8] = v10;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_104_0();
  v4 = OUTLINED_FUNCTION_107_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_36_7((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_125();
  v6 = OUTLINED_FUNCTION_76_1(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v3)
  {
    OUTLINED_FUNCTION_74_0();
    v7 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v7, v8, &qword_2578A1280);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v11, &qword_2578A1280);
LABEL_9:
    v10 = 0;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_96_1(v9, &qword_2578A2A50);
  if ((OUTLINED_FUNCTION_41_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_17_16();
    goto LABEL_9;
  }
  v10 = v4[9];
  OUTLINED_FUNCTION_17_16();
LABEL_10:
  v4[8] = v10;
  OUTLINED_FUNCTION_18_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_104_0();
  v4 = OUTLINED_FUNCTION_107_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_36_7((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_125();
  v6 = OUTLINED_FUNCTION_76_1(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_75_1();
  if (v3)
  {
    OUTLINED_FUNCTION_74_0();
    v7 = OUTLINED_FUNCTION_111_0();
  }
  else
  {
    OUTLINED_FUNCTION_143();
  }
  OUTLINED_FUNCTION_78_1(v7, v8, &qword_2578A1280);
  if (!v4[3])
  {
    v10 = OUTLINED_FUNCTION_17_16();
    OUTLINED_FUNCTION_129(v10, &qword_2578A1280);
LABEL_9:
    v9 = 0;
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
  if ((OUTLINED_FUNCTION_41_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_17_16();
    goto LABEL_9;
  }
  v9 = v4[9];
  OUTLINED_FUNCTION_17_16();
LABEL_10:
  v4[8] = v9;
  OUTLINED_FUNCTION_18_1();
}

void sub_249934448(uint64_t a1)
{
  void *v1;
  char v2;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 88);
  OUTLINED_FUNCTION_163();
  HIDServiceProperties.subscript.setter(v2);
  OUTLINED_FUNCTION_55_4(v1);
}

uint64_t sub_249934558(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  sub_249917860(v5, v6);
  return HIDServiceProperties.subscript.setter(v5, v6, v3, v4);
}

uint64_t HIDServiceProperties.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  void *v10;

  v9 = *(void **)(v4 + 8);
  if (a2 >> 60 == 15)
    v10 = 0;
  else
    v10 = (void *)sub_249955634();
  OUTLINED_FUNCTION_54_1();
  objc_msgSend(v9, sel___swift_setObject_forKeyedSubscript_, v10, OUTLINED_FUNCTION_122(), a3, a4);
  sub_24991784C(a1, a2);
  OUTLINED_FUNCTION_9_17();

  return OUTLINED_FUNCTION_12_25();
}

void sub_249934764()
{
  char v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  OUTLINED_FUNCTION_104_0();
  v1 = v0;
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 64);
  v5 = *(_QWORD *)(*v2 + 72);
  OUTLINED_FUNCTION_161();
  if ((v1 & 1) != 0)
  {
    sub_249917860(v4, v5);
    OUTLINED_FUNCTION_166();
    sub_24991784C(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
  }
  else
  {
    OUTLINED_FUNCTION_166();
  }
  OUTLINED_FUNCTION_112_0((void *)v3);
}

uint64_t HIDServiceProperties.subscript.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_45_4();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v17)
  {
    if (OUTLINED_FUNCTION_0_39())
      v7 = v16;
    else
      v7 = 0;
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    return 0;
  }
  return v7;
}

uint64_t sub_2499348A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = HIDServiceProperties.subscript.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_2499348D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v5, v6, v3, v4);
}

void HIDServiceProperties.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  void *v8;

  v7 = *(void **)(v4 + 8);
  if ((a2 & 1) != 0)
    v8 = 0;
  else
    v8 = (void *)sub_2499559C4();
  OUTLINED_FUNCTION_54_1();
  objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v8, OUTLINED_FUNCTION_122(), a3, a4);
  OUTLINED_FUNCTION_9_17();

  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_37();
}

void sub_249934AA8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_163();
  HIDServiceProperties.subscript.setter(v4, v5, v3, v2);
  OUTLINED_FUNCTION_55_4(v1);
}

void sub_249934BBC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  *a5 = a4(*a2, a2[1], a3, *(_QWORD *)(a1 + 8));
  a5[1] = v6;
  OUTLINED_FUNCTION_6_0();
}

void sub_249934BE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1, v2);
}

void HIDServiceProperties.subscript.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  if (a2)
  {
    v2 = (void *)sub_249955838();
    OUTLINED_FUNCTION_49_1();
  }
  else
  {
    v2 = 0;
  }
  OUTLINED_FUNCTION_54_1();
  v3 = OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_99_0(v3, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_9_17();

  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_0_12();
}

void sub_249934DA8(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_165();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_55_4(v2);
}

uint64_t HIDServiceProperties.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_249934F68(a1, a2, a3, a4, &qword_2578A1288);
}

{
  return sub_249934F68(a1, a2, a3, a4, &qword_2578A2A50);
}

uint64_t sub_249934E18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.subscript.getter(*a2, a2[1], a3, *(void **)(a1 + 8));
  *a4 = result;
  return result;
}

void sub_249934F48()
{
  sub_249935250();
}

uint64_t sub_249934F68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  swift_bridgeObjectRetain_n();
  v7 = objc_msgSend(a4, sel___swift_objectForKeyedSubscript_, OUTLINED_FUNCTION_19_18());
  OUTLINED_FUNCTION_111_0();
  if (v7)
  {
    sub_249955BA4();
    v8 = OUTLINED_FUNCTION_61_1();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v8, v9, &qword_2578A1280, v10, v11, v12);
  if (!v23)
  {
    v14 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v14, &qword_2578A1280, v15, v16, v17, v18, v19, v20);
    return 0;
  }
  sub_2498F9DE8(0, a5);
  if (!OUTLINED_FUNCTION_0_39())
  {
    OUTLINED_FUNCTION_9_17();
    return 0;
  }
  v13 = v22;
  OUTLINED_FUNCTION_9_17();
  return v13;
}

uint64_t sub_249935074@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.subscript.getter(*a2, a2[1], a3, *(void **)(a1 + 8));
  *a4 = result;
  return result;
}

void sub_2499350A0(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(id, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v6 = *a3;
  v7 = a3[1];
  v8 = *a1;
  v9 = *a1;
  OUTLINED_FUNCTION_109_0();
  a5(v8, v6, v7);
  OUTLINED_FUNCTION_20_3();
}

void _s12UniversalHID20HIDServicePropertiesVySo7NSArrayCSgAA0C11PropertyKeyVcis_0(void *a1)
{
  uint64_t v2;

  swift_bridgeObjectRetain();
  v2 = OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_99_0(v2, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_9_17();

  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_37();
}

void sub_249935244()
{
  sub_249935250();
}

void sub_249935250()
{
  uint64_t v0;
  void *v1;
  id *v2;
  char v3;
  id v4;

  OUTLINED_FUNCTION_104_0();
  v1 = *(void **)v0;
  v2 = (id *)(*(_QWORD *)v0 + 64);
  if ((v3 & 1) != 0)
  {
    v4 = *(id *)(*(_QWORD *)v0 + 64);
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_184();

  }
  else
  {
    OUTLINED_FUNCTION_161();
    OUTLINED_FUNCTION_184();
  }
  OUTLINED_FUNCTION_112_0(v1);
}

void sub_249935374(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.subscript.getter();
  *a1 = v2;
}

void sub_2499353A0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1);
}

void HIDServiceProperties.subscript.setter(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    sub_24995579C();
    OUTLINED_FUNCTION_49_1();
  }
  OUTLINED_FUNCTION_54_1();
  v1 = OUTLINED_FUNCTION_122();
  OUTLINED_FUNCTION_99_0(v1, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_9_17();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_0_12();
}

void sub_249935574(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_192();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_192();
  }
  OUTLINED_FUNCTION_55_4(v2);
}

void HIDServiceProperties.accelParametricCurves.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_126();
  v3 = OUTLINED_FUNCTION_142();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    OUTLINED_FUNCTION_96_1(v10, &qword_2578A1288);
    v17 = OUTLINED_FUNCTION_0_39();
    if ((v17 & 1) != 0)
    {
      OUTLINED_FUNCTION_181(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_14_0();
}

void sub_249935694(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  HIDServiceProperties.accelParametricCurves.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t sub_2499356BC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.accelParametricCurves.setter(v0);
}

uint64_t HIDServiceProperties.accelParametricCurves.setter(uint64_t a1)
{
  return sub_249938900(a1, 0x6C65636341444948, 0xEE00736576727543);
}

void __swiftcall HIDServiceProperties.HIDAccelCurve.init(dictionaryRepresentation:)(UniversalHID::HIDServiceProperties::HIDAccelCurve_optional *__return_ptr retstr, NSDictionary dictionaryRepresentation)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  char v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  char v374;
  uint64_t v375;
  char v376;
  uint64_t v377;
  char v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  char v382;
  uint64_t v383;
  char v384;
  _BYTE v385[24];
  uint64_t v386;

  OUTLINED_FUNCTION_1_32();
  v367 = 0xD000000000000011;
  v368 = v4;
  OUTLINED_FUNCTION_106_0();
  v5 = OUTLINED_FUNCTION_87_1(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v6 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v6, v7, &qword_2578A1280, v8, v9, v10, v11, v12, v163, v172, v181, v191, v201, v210, v220, v229, v239, v248, v258,
    v267,
    (uint64_t)retstr,
    v286,
    v295,
    v304,
    v313,
    v322,
    v331,
    v340,
    v349,
    v358,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v269 = v20;
    v22 = v21 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v13, &qword_2578A1280, v14, v15, v16, v17, v18, v19, v164, v173, v182, v192, v202, v211, v221, v230, v240, v249, v259,
      v268,
      v278,
      v287,
      v296,
      v305,
      v314,
      v323,
      v332,
      v341,
      v350,
      v359,
      v367);
    v269 = 0;
    v22 = 1;
  }
  HIDWORD(v259) = v22;
  OUTLINED_FUNCTION_86_1();
  v23 = OUTLINED_FUNCTION_106_0();
  v24 = OUTLINED_FUNCTION_32_7(v23);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v25 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v25, v26, &qword_2578A1280, v27, v28, v29, v30, v31, v164, v173, v182, v192, v202, v211, v221, v230, v240, v249, v259,
    v269,
    v278,
    v287,
    v296,
    v305,
    v314,
    v323,
    v332,
    v341,
    v350,
    v359,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v251 = v39;
    v41 = v40 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v32, &qword_2578A1280, v33, v34, v35, v36, v37, v38, v165, v174, v183, v193, v203, v212, v222, v231, v241, v250, v260,
      v270,
      v279,
      v288,
      v297,
      v306,
      v315,
      v324,
      v333,
      v342,
      v351,
      v360,
      v367);
    v251 = 0;
    v41 = 1;
  }
  HIDWORD(v241) = v41;
  OUTLINED_FUNCTION_86_1();
  v42 = OUTLINED_FUNCTION_106_0();
  v43 = OUTLINED_FUNCTION_32_7(v42);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v44 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v44, v45, &qword_2578A1280, v46, v47, v48, v49, v50, v165, v174, v183, v193, v203, v212, v222, v231, v241, v251, v260,
    v270,
    v279,
    v288,
    v297,
    v306,
    v315,
    v324,
    v333,
    v342,
    v351,
    v360,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v233 = v58;
    v60 = v59 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v51, &qword_2578A1280, v52, v53, v54, v55, v56, v57, v166, v175, v184, v194, v204, v213, v223, v232, v242, v252, v261,
      v271,
      v280,
      v289,
      v298,
      v307,
      v316,
      v325,
      v334,
      v343,
      v352,
      v361,
      v367);
    v233 = 0;
    v60 = 1;
  }
  HIDWORD(v223) = v60;
  OUTLINED_FUNCTION_86_1();
  v61 = OUTLINED_FUNCTION_106_0();
  v62 = OUTLINED_FUNCTION_32_7(v61);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v63 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v63, v64, &qword_2578A1280, v65, v66, v67, v68, v69, v166, v175, v184, v194, v204, v213, v223, v233, v242, v252, v261,
    v271,
    v280,
    v289,
    v298,
    v307,
    v316,
    v325,
    v334,
    v343,
    v352,
    v361,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v215 = v77;
    v79 = v78 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v70, &qword_2578A1280, v71, v72, v73, v74, v75, v76, v167, v176, v185, v195, v205, v214, v224, v234, v243, v253, v262,
      v272,
      v281,
      v290,
      v299,
      v308,
      v317,
      v326,
      v335,
      v344,
      v353,
      v362,
      v367);
    v215 = 0;
    v79 = 1;
  }
  HIDWORD(v205) = v79;
  OUTLINED_FUNCTION_46_4();
  v367 = v80;
  v368 = v81;
  v82 = OUTLINED_FUNCTION_106_0();
  v83 = OUTLINED_FUNCTION_32_7(v82);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v84 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v84, v85, &qword_2578A1280, v86, v87, v88, v89, v90, v167, v176, v185, v195, v205, v215, v224, v234, v243, v253, v262,
    v272,
    v281,
    v290,
    v299,
    v308,
    v317,
    v326,
    v335,
    v344,
    v353,
    v362,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v197 = v98;
    v100 = v99 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v91, &qword_2578A1280, v92, v93, v94, v95, v96, v97, v168, v177, v186, v196, v206, v216, v225, v235, v244, v254, v263,
      v273,
      v282,
      v291,
      v300,
      v309,
      v318,
      v327,
      v336,
      v345,
      v354,
      v363,
      v367);
    v197 = 0;
    v100 = 1;
  }
  OUTLINED_FUNCTION_86_1();
  v101 = OUTLINED_FUNCTION_106_0();
  v102 = OUTLINED_FUNCTION_32_7(v101);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v103 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v103, v104, &qword_2578A1280, v105, v106, v107, v108, v109, v168, v177, v186, v197, v206, v216, v225, v235, v244, v254, v263,
    v273,
    v282,
    v291,
    v300,
    v309,
    v318,
    v327,
    v336,
    v345,
    v354,
    v363,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v188 = v117;
    v119 = v118 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v110, &qword_2578A1280, v111, v112, v113, v114, v115, v116, v169, v178, v187, v198, v207, v217, v226, v236, v245, v255, v264,
      v274,
      v283,
      v292,
      v301,
      v310,
      v319,
      v328,
      v337,
      v346,
      v355,
      v364,
      v367);
    v188 = 0;
    v119 = 1;
  }
  HIDWORD(v178) = v119;
  OUTLINED_FUNCTION_86_1();
  v120 = OUTLINED_FUNCTION_106_0();
  v121 = OUTLINED_FUNCTION_32_7(v120);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v122 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v122, v123, &qword_2578A1280, v124, v125, v126, v127, v128, v169, v178, v188, v198, v207, v217, v226, v236, v245, v255, v264,
    v274,
    v283,
    v292,
    v301,
    v310,
    v319,
    v328,
    v337,
    v346,
    v355,
    v364,
    v367);
  if (v370)
  {
    v136 = OUTLINED_FUNCTION_41_4();
    if (v136)
      v137 = v293;
    else
      v137 = 0;
    v138 = v136 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v129, &qword_2578A1280, v130, v131, v132, v133, v134, v135, v170, v179, v189, v199, v208, v218, v227, v237, v246, v256, v265,
      v275,
      v284,
      v293,
      v302,
      v311,
      v320,
      v329,
      v338,
      v347,
      v356,
      v365,
      v367);
    v137 = 0;
    v138 = 1;
  }
  OUTLINED_FUNCTION_86_1();
  v139 = OUTLINED_FUNCTION_106_0();
  v140 = OUTLINED_FUNCTION_32_7(v139);
  OUTLINED_FUNCTION_56_2();
  if (v2)
  {
    OUTLINED_FUNCTION_69_1();
    v141 = OUTLINED_FUNCTION_44_5();
  }
  else
  {
    OUTLINED_FUNCTION_121();
  }
  OUTLINED_FUNCTION_68_1(v141, v142, &qword_2578A1280, v143, v144, v145, v146, v147, v170, v179, v189, v199, v208, v218, v227, v237, v246, v256, v265,
    v275,
    v284,
    v293,
    v302,
    v311,
    v320,
    v329,
    v338,
    v347,
    v356,
    v365,
    v367);
  if (v370)
  {
    v155 = OUTLINED_FUNCTION_41_4();
    if (v155)
      v156 = v294;
    else
      v156 = 0;
    v157 = v155 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_113_0(v148, &qword_2578A1280, v149, v150, v151, v152, v153, v154, v171, v180, v190, v200, v209, v219, v228, v238, v247, v257, v266,
      v276,
      v285,
      v294,
      v303,
      v312,
      v321,
      v330,
      v339,
      v348,
      v357,
      v366,
      v367);
    v156 = 0;
    v157 = 1;
  }
  OUTLINED_FUNCTION_86_1();
  v158 = OUTLINED_FUNCTION_106_0();
  v159 = OUTLINED_FUNCTION_32_7(v158);
  OUTLINED_FUNCTION_56_2();
  sub_249955BA4();
  OUTLINED_FUNCTION_44_5();

  sub_24992F910((uint64_t)&v367, (uint64_t)v385, &qword_2578A1280);
  if (v386)
  {
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_84_1();
    v162 = v161 ^ 1;
  }
  else
  {
    sub_2498F9DB0((uint64_t)v385, &qword_2578A1280);
    v160 = 0;
    v162 = 1;
  }
  v367 = v276;
  LOBYTE(v368) = BYTE4(v266);
  v369 = v257;
  LOBYTE(v370) = BYTE4(v247);
  v371 = v238;
  v372 = BYTE4(v228);
  v373 = v219;
  v374 = BYTE4(v209);
  v375 = v200;
  v376 = v100;
  v377 = v190;
  v378 = BYTE4(v180);
  v379 = v137;
  v380 = v138;
  v381 = v156;
  v382 = v157;
  v383 = v160;
  v384 = v162;
  sub_24993E2A8((uint64_t)&v367);
  sub_24992F910((uint64_t)&v367, v285, &qword_2578A2A60);
}

uint64_t HIDServiceProperties.HIDAccelCurve.dictionaryRepresentation.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  _BYTE v24[16];
  _BYTE v25[16];
  _BYTE v26[16];
  _BYTE v27[16];
  _BYTE v28[16];
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249959F20;
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(v2 + 32) = 0xD000000000000011;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_58_2(v0, (uint64_t)v31);
  OUTLINED_FUNCTION_58_2((uint64_t)v31, inited + 48);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v4;
  OUTLINED_FUNCTION_58_2(v0 + 16, (uint64_t)v30);
  OUTLINED_FUNCTION_58_2((uint64_t)v30, inited + 80);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = v6;
  OUTLINED_FUNCTION_58_2(v0 + 32, (uint64_t)v29);
  OUTLINED_FUNCTION_58_2((uint64_t)v29, inited + 112);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 128) = v9;
  *(_QWORD *)(inited + 136) = v8;
  OUTLINED_FUNCTION_58_2(v0 + 48, (uint64_t)v28);
  OUTLINED_FUNCTION_58_2((uint64_t)v28, inited + 144);
  OUTLINED_FUNCTION_46_4();
  *(_QWORD *)(inited + 160) = v10;
  *(_QWORD *)(inited + 168) = v11;
  OUTLINED_FUNCTION_58_2(v0 + 64, (uint64_t)v27);
  OUTLINED_FUNCTION_58_2((uint64_t)v27, inited + 176);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 192) = v13;
  *(_QWORD *)(inited + 200) = v12;
  OUTLINED_FUNCTION_58_2(v0 + 80, (uint64_t)v26);
  OUTLINED_FUNCTION_58_2((uint64_t)v26, inited + 208);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 224) = v15;
  *(_QWORD *)(inited + 232) = v14;
  OUTLINED_FUNCTION_58_2(v0 + 96, (uint64_t)v25);
  OUTLINED_FUNCTION_58_2((uint64_t)v25, inited + 240);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 256) = v17;
  *(_QWORD *)(inited + 264) = v16;
  OUTLINED_FUNCTION_58_2(v0 + 112, (uint64_t)v24);
  OUTLINED_FUNCTION_58_2((uint64_t)v24, inited + 272);
  OUTLINED_FUNCTION_1_32();
  *(_QWORD *)(inited + 288) = v19;
  *(_QWORD *)(inited + 296) = v18;
  OUTLINED_FUNCTION_58_2(v0 + 128, (uint64_t)v23);
  OUTLINED_FUNCTION_58_2((uint64_t)v23, inited + 304);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A70);
  v20 = sub_2499557C0();
  sub_24993A11C(v20);
  OUTLINED_FUNCTION_9_17();
  v21 = sub_24995579C();
  OUTLINED_FUNCTION_17_16();
  return v21;
}

void HIDServiceProperties.accelParametricCurves.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_144(a1);
  HIDServiceProperties.accelParametricCurves.getter(v2, v3);
  *v1 = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_24993601C(uint64_t *a1, char a2)
{
  sub_249938A50(a1, a2, (void (*)(uint64_t))HIDServiceProperties.accelParametricCurves.setter);
}

void HIDServiceProperties.appleVendorSupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_2499360D8(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.appleVendorSupported.getter();
  *a1 = v2;
}

void HIDServiceProperties.appleVendorSupported.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.appleVendorSupported.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.appleVendorSupported.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936144(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.authenticatedDevice.getter(uint64_t a1, uint64_t a2)
{
  sub_249936234(a1, a2);
}

void sub_249936198(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.authenticatedDevice.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.authenticatedDevice.setter()
{
  char v0;

  OUTLINED_FUNCTION_158();
  HIDServiceProperties.subscript.setter(v0);
}

void HIDServiceProperties.authenticatedDevice.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.authenticatedDevice.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499361FC(uint64_t a1)
{
  char v1;

  OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_158();
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.builtIn.getter(uint64_t a1, uint64_t a2)
{
  sub_249936234(a1, a2);
}

void sub_249936234(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_2499362DC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.builtIn.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.builtIn.setter(char a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

void HIDServiceProperties.builtIn.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.builtIn.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936348(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.capsLockDelay.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_114();
  sub_249937468(v0, v1);
}

void sub_249936388()
{
  HIDServiceProperties.capsLockDelay.setter();
}

void HIDServiceProperties.capsLockDelay.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_114();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.capsLockDelay.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.capsLockDelay.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499363F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_114();
  sub_24993984C(v0, v1, v2, v3);
}

void HIDServiceProperties.capsLockLanguageSwitch.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_2499364BC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.capsLockLanguageSwitch.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.capsLockLanguageSwitch.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.capsLockLanguageSwitch.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.capsLockLanguageSwitch.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936528(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249936558(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.deviceTypeHint.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.deviceTypeHint.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_115();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.deviceTypeHint.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.deviceTypeHint.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499365BC()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_115();
  sub_249939034(v0, v1);
}

void sub_2499365CC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.deviceUsagePairs.getter();
  *a1 = v2;
}

uint64_t sub_2499365F4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.deviceUsagePairs.setter(v0);
}

uint64_t HIDServiceProperties.deviceUsagePairs.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = sub_249955CAC();
    OUTLINED_FUNCTION_96_1(v3, &qword_2578A2A50);
    v4 = (unsigned __int16 *)(a1 + 34);
    v5 = MEMORY[0x24BEE0D00];
    v6 = MEMORY[0x24BEE1768];
    do
    {
      v7 = *(v4 - 1);
      v8 = *v4;
      v4 += 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A78);
      v9 = OUTLINED_FUNCTION_215();
      *(_OWORD *)(v9 + 16) = xmmword_249959020;
      *(_QWORD *)(v9 + 32) = 0x7355656369766544;
      *(_QWORD *)(v9 + 40) = 0xEB00000000656761;
      *(_QWORD *)(v9 + 56) = v5;
      *(_QWORD *)(v9 + 64) = v8;
      *(_QWORD *)(v9 + 88) = v6;
      *(_QWORD *)(v9 + 96) = 0x7355656369766544;
      *(_QWORD *)(v9 + 104) = 0xEF65676150656761;
      *(_QWORD *)(v9 + 152) = v6;
      *(_QWORD *)(v9 + 120) = v5;
      *(_QWORD *)(v9 + 128) = v7;
      sub_2499559F4();
      sub_249955C88();
      sub_249955CB8();
      OUTLINED_FUNCTION_208();
      sub_249955C94();
      --v2;
    }
    while (v2);
    v10 = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_9_17();
  }
  OUTLINED_FUNCTION_96_1(v10, &qword_2578A2A50);
  v11 = sub_249955928();
  OUTLINED_FUNCTION_9_17();
  return HIDServiceProperties.subscript.setter(v11, 0xD000000000000010, 0x800000024995E7E0);
}

uint64_t sub_2499367CC(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[24];
  uint64_t v10;

  *(_QWORD *)&v7 = 0x7355656369766544;
  *((_QWORD *)&v7 + 1) = 0xEB00000000656761;
  v2 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_249955F40());
  swift_unknownObjectRelease();
  if (v2)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_24992F910((uint64_t)&v7, (uint64_t)v9, &qword_2578A1280);
  if (!v10)
  {

LABEL_14:
    sub_2498F9DB0((uint64_t)v9, &qword_2578A1280);
    return 0;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = v6;
    *(_QWORD *)&v7 = 0x7355656369766544;
    *((_QWORD *)&v7 + 1) = 0xEF65676150656761;
    v4 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_249955F40());
    swift_unknownObjectRelease();
    if (v4)
    {
      sub_249955BA4();
      swift_unknownObjectRelease();

    }
    else
    {

      v7 = 0u;
      v8 = 0u;
    }
    sub_24992F910((uint64_t)&v7, (uint64_t)v9, &qword_2578A1280);
    if (v10)
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v3;
      return 0;
    }
    goto LABEL_14;
  }

  return 0;
}

void HIDServiceProperties.deviceUsagePairs.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_144(a1);
  HIDServiceProperties.deviceUsagePairs.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499369E4(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_54_1();
    HIDServiceProperties.deviceUsagePairs.setter(v2);
    OUTLINED_FUNCTION_167();
  }
  else
  {
    HIDServiceProperties.deviceUsagePairs.setter(*a1);
    OUTLINED_FUNCTION_6_0();
  }
}

void HIDServiceProperties.disableAccessibilityEventTranslation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249936AD4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.disableAccessibilityEventTranslation.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.disableAccessibilityEventTranslation.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.disableAccessibilityEventTranslation.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.disableAccessibilityEventTranslation.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936B40(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249936B70(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.dispatchScrollEvents.getter();
  *a1 = v2;
}

void HIDServiceProperties.dispatchScrollEvents.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.dispatchScrollEvents.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.dispatchScrollEvents.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936BDC(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.displayIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_135();
  sub_249933ED8(v0, v1);
}

void sub_249936C1C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.displayIdentifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.displayIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_135();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.displayIdentifier.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.displayIdentifier.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936C80()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_135();
  sub_249939034(v0, v1);
}

void HIDServiceProperties.displayIntegrated.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249936D40(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.displayIntegrated.getter();
  *a1 = v2;
}

void HIDServiceProperties.displayIntegrated.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.displayIntegrated.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.displayIntegrated.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936DAC(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.eventServiceProperties.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
    OUTLINED_FUNCTION_0_39();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249936EA0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  HIDServiceProperties.eventServiceProperties.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void sub_249936EC8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  HIDServiceProperties.eventServiceProperties.setter(v0);
}

void HIDServiceProperties.eventServiceProperties.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_144(a1);
  HIDServiceProperties.eventServiceProperties.getter(v2, v3);
  *v1 = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249936F1C(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_218(v2);
    OUTLINED_FUNCTION_167();
  }
  else
  {
    OUTLINED_FUNCTION_218(*a1);
    OUTLINED_FUNCTION_6_0();
  }
}

void HIDServiceProperties.exclusivityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937024(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.exclusivityIdentifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.exclusivityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_63_1(a1, a2);
}

void HIDServiceProperties.exclusivityIdentifier.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.exclusivityIdentifier.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249937090(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_64_0(a1, a2);
}

void HIDServiceProperties.faceTimeRemoteControlSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937154(uint64_t a1)
{
  HIDServiceProperties.faceTimeRemoteControlSessionID.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.faceTimeRemoteControlSessionID.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 30, 0x800000024995F090);
}

void HIDServiceProperties.faceTimeRemoteControlSessionID.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.faceTimeRemoteControlSessionID.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499371C8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 30, 0x800000024995F090);
}

void HIDServiceProperties.fnKeyboardUsageMap.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937298(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.fnKeyboardUsageMap.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.fnKeyboardUsageMap.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.fnKeyboardUsageMap.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499372EC(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_64_0(a1, a2);
}

void HIDServiceProperties.ignoresNaturalScrollingPreference.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_2499373BC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.ignoresNaturalScrollingPreference.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.ignoresNaturalScrollingPreference.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.ignoresNaturalScrollingPreference.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.ignoresNaturalScrollingPreference.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249937428(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.keyboardCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_134();
  sub_249937468(v0, v1);
}

void sub_249937468(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_24993750C()
{
  HIDServiceProperties.keyboardCountryCode.setter();
}

void HIDServiceProperties.keyboardCountryCode.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_134();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardCountryCode.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.keyboardCountryCode.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_134();
  sub_24993984C(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardLanguage.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937638(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.keyboardLanguage.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.keyboardLanguage.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_63_1(a1, a2);
}

void HIDServiceProperties.keyboardLanguage.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.keyboardLanguage.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499376A4(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_64_0(a1, a2);
}

void HIDServiceProperties.keyboardStandardType.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_133();
  sub_249937468(v0, v1);
}

void sub_2499376CC()
{
  HIDServiceProperties.keyboardStandardType.setter();
}

void HIDServiceProperties.keyboardStandardType.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_133();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardStandardType.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.keyboardStandardType.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_133();
  sub_24993984C(v0, v1, v2, v3);
}

void HIDServiceProperties.manufacturer.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  sub_249933ED8(v0, v1);
}

void sub_249937758(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.manufacturer.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.manufacturer.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_132();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.manufacturer.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.manufacturer.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499377BC()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_132();
  sub_249939034(v0, v1);
}

void sub_2499377CC(uint64_t a1)
{
  HIDServiceProperties.mouseAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.mouseAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 20, 0x800000024995E800);
}

void HIDServiceProperties.mouseAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.mouseAcceleration.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937840(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 20, 0x800000024995E800);
}

void sub_249937858(uint64_t a1)
{
  HIDServiceProperties.mouseScrollAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.mouseScrollAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 26, 0x800000024995E820);
}

void HIDServiceProperties.mouseScrollAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.mouseScrollAcceleration.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499378CC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 26, 0x800000024995E820);
}

void HIDServiceProperties.pointerAccelerationMultiplier.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937998(uint64_t a1)
{
  HIDServiceProperties.pointerAccelerationMultiplier.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerAccelerationMultiplier.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 32, 0x800000024995F120);
}

void HIDServiceProperties.pointerAccelerationMultiplier.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerAccelerationMultiplier.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937A0C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 32, 0x800000024995F120);
}

void HIDServiceProperties.pointerAccelerationTable.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937AE4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.pointerAccelerationTable.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

uint64_t sub_249937B0C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249917860(*a1, v2);
  return HIDServiceProperties.pointerAccelerationTable.setter(v1, v2);
}

uint64_t HIDServiceProperties.pointerAccelerationTable.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_105_0(a1, a2, 27, 0x800000024995F170);
}

void HIDServiceProperties.pointerAccelerationTable.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerAccelerationTable.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_6_0();
}

void sub_249937B90(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_104_1(a1, a2);
}

void HIDServiceProperties.pointerAccelerationType.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937C58(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.pointerAccelerationType.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.pointerAccelerationType.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_63_1(a1, a2);
}

void HIDServiceProperties.pointerAccelerationType.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerAccelerationType.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249937CC4(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_64_0(a1, a2);
}

void HIDServiceProperties.pointerButtonCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_203();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937D88(uint64_t a1)
{
  HIDServiceProperties.pointerButtonCount.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerButtonCount.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 21, 0x800000024995F1B0);
}

void HIDServiceProperties.pointerButtonCount.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerButtonCount.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937DFC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 21, 0x800000024995F1B0);
}

void sub_249937E14(uint64_t a1)
{
  HIDServiceProperties.pointerButtonMode.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerButtonMode.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 20, 0x800000024995E880);
}

void HIDServiceProperties.pointerButtonMode.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerButtonMode.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937E88(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 20, 0x800000024995E880);
}

void HIDServiceProperties.pointerResolution.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249937F4C(uint64_t a1)
{
  HIDServiceProperties.pointerResolution.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerResolution.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 20, 0x800000024995F1F0);
}

void HIDServiceProperties.pointerResolution.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerResolution.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249937FC0(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 20, 0x800000024995F1F0);
}

void HIDServiceProperties.pointerReportRate.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938084(uint64_t a1)
{
  HIDServiceProperties.pointerReportRate.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerReportRate.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 20, 0x800000024995F1D0);
}

void HIDServiceProperties.pointerReportRate.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.pointerReportRate.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499380F8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 20, 0x800000024995F1D0);
}

uint64_t sub_249938110@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.primaryUsagePair.getter(a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void HIDServiceProperties.primaryUsagePair.setter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 8);
  v2 = (void *)sub_2499559C4();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v2, OUTLINED_FUNCTION_220(), 0xD000000000000010, 0x800000024995F210);

  OUTLINED_FUNCTION_111_0();
  v3 = (void *)sub_2499559C4();
  OUTLINED_FUNCTION_137();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v3, OUTLINED_FUNCTION_220(), v4, v5);

  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_0_12();
}

void HIDServiceProperties.primaryUsagePair.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  *(_DWORD *)(v1 + 8) = HIDServiceProperties.primaryUsagePair.getter((uint64_t)v2, v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993821C()
{
  HIDServiceProperties.primaryUsagePair.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24993823C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.product.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.product.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.product.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_6_0();
}

void sub_249938290(uint64_t a1, char a2)
{
  sub_249939034(a1, a2);
}

void HIDServiceProperties.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_183();
  sub_249937468(v0, v1);
}

void sub_2499382B8()
{
  HIDServiceProperties.productID.setter();
}

void HIDServiceProperties.productID.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_183();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.productID.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.productID.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_183();
  sub_24993984C(v0, v1, v2, v3);
}

void HIDServiceProperties.reportDescriptor.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_200();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_2499383EC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.reportDescriptor.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249938414(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249917860(*a1, v2);
  return HIDServiceProperties.reportDescriptor.setter(v1, v2);
}

uint64_t HIDServiceProperties.reportDescriptor.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_105_0(a1, a2, 16, 0x800000024995F230);
}

void HIDServiceProperties.reportDescriptor.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.reportDescriptor.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249938498(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_104_1(a1, a2);
}

void HIDServiceProperties.scrollAccelerationTable.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_198();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938568(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.scrollAccelerationTable.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249938590(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249917860(*a1, v2);
  return HIDServiceProperties.scrollAccelerationTable.setter(v1, v2);
}

uint64_t HIDServiceProperties.scrollAccelerationTable.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_105_0(a1, a2, 26, 0x800000024995F250);
}

void HIDServiceProperties.scrollAccelerationTable.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.scrollAccelerationTable.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249938614(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_104_1(a1, a2);
}

void sub_24993862C(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_249917860(*a1, v3);
    OUTLINED_FUNCTION_164();
    sub_24991784C(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_20_3();
  }
}

void HIDServiceProperties.scrollAccelerationType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_52_3(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_171();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938744(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.scrollAccelerationType.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.scrollAccelerationType.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_63_1(a1, a2);
}

void HIDServiceProperties.scrollAccelerationType.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.scrollAccelerationType.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499387B0(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_64_0(a1, a2);
}

void HIDServiceProperties.scrollAccelParametricCurves.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_177();
  v1 = OUTLINED_FUNCTION_142();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    OUTLINED_FUNCTION_96_1(v8, &qword_2578A1288);
    v15 = OUTLINED_FUNCTION_0_39();
    if ((v15 & 1) != 0)
    {
      OUTLINED_FUNCTION_181(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_14_0();
}

void sub_249938894(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.scrollAccelParametricCurves.getter();
  *a1 = v2;
}

uint64_t sub_2499388BC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.scrollAccelParametricCurves.setter(v0);
}

uint64_t HIDServiceProperties.scrollAccelParametricCurves.setter(uint64_t a1)
{
  return sub_249938900(a1, 0xD000000000000014, 0x800000024995F2B0);
}

uint64_t sub_249938900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE __dst[137];

  v5 = a1;
  if (a1)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      sub_249955CAC();
      v7 = 32;
      do
      {
        memcpy(__dst, (const void *)(v5 + v7), sizeof(__dst));
        HIDServiceProperties.HIDAccelCurve.dictionaryRepresentation.getter();
        sub_249955C88();
        sub_249955CB8();
        OUTLINED_FUNCTION_208();
        sub_249955C94();
        v7 += 144;
        --v6;
      }
      while (v6);
      v8 = OUTLINED_FUNCTION_49_1();
    }
    else
    {
      v8 = OUTLINED_FUNCTION_49_1();
    }
    OUTLINED_FUNCTION_96_1(v8, &qword_2578A2A50);
    v5 = sub_249955928();
    OUTLINED_FUNCTION_56_1();
  }
  return HIDServiceProperties.subscript.setter(v5, a2, a3);
}

void HIDServiceProperties.scrollAccelParametricCurves.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_144(a1);
  HIDServiceProperties.scrollAccelParametricCurves.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249938A44(uint64_t *a1, char a2)
{
  sub_249938A50(a1, a2, (void (*)(uint64_t))HIDServiceProperties.scrollAccelParametricCurves.setter);
}

void sub_249938A50(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_163();
    a3(v4);
    OUTLINED_FUNCTION_149();
  }
  else
  {
    a3(*a1);
    OUTLINED_FUNCTION_18_3();
  }
}

void HIDServiceProperties.scrollReportRate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938B44(uint64_t a1)
{
  HIDServiceProperties.scrollReportRate.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.scrollReportRate.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 19, 0x800000024995F2D0);
}

void HIDServiceProperties.scrollReportRate.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.scrollReportRate.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938BB8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 19, 0x800000024995F2D0);
}

void HIDServiceProperties.scrollResolution.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938C84(uint64_t a1)
{
  HIDServiceProperties.scrollResolution.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.scrollResolution.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 19, 0x800000024995F2F0);
}

void HIDServiceProperties.scrollResolution.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.scrollResolution.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938CF8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 19, 0x800000024995F2F0);
}

void HIDServiceProperties.supportsGestureScrolling.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249938DC8(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.supportsGestureScrolling.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.supportsGestureScrolling.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.supportsGestureScrolling.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.supportsGestureScrolling.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249938E34(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938E64(uint64_t a1)
{
  HIDServiceProperties.trackpadAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.trackpadAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 23, 0x800000024995E840);
}

void HIDServiceProperties.trackpadAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.trackpadAcceleration.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938ED8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 23, 0x800000024995E840);
}

void sub_249938EF0(uint64_t a1)
{
  HIDServiceProperties.trackpadScrollAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.trackpadScrollAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 29, 0x800000024995E860);
}

void HIDServiceProperties.trackpadScrollAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.trackpadScrollAcceleration.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_249938F64(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 29, 0x800000024995E860);
}

void HIDServiceProperties.transport.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_186();
  sub_249933ED8(v0, v1);
}

void sub_249938F8C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.transport.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_249938FB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  OUTLINED_FUNCTION_109_0();
  a5(v6, v7);
  OUTLINED_FUNCTION_18_3();
}

void HIDServiceProperties.transport.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_186();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.transport.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.transport.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_6_0();
}

void sub_249939024()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_186();
  sub_249939034(v0, v1);
}

void sub_249939034(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_162();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_162();
    OUTLINED_FUNCTION_20_3();
  }
}

void HIDServiceProperties.universalControlBuiltIn.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249939140(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.universalControlBuiltIn.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.universalControlBuiltIn.setter(char a1)
{
  OUTLINED_FUNCTION_20_16(a1);
}

void HIDServiceProperties.universalControlBuiltIn.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.universalControlBuiltIn.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499391AC(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.universalControlVirtualService.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_24993928C(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.universalControlVirtualService.getter();
  *a1 = v2;
}

void HIDServiceProperties.universalControlVirtualService.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.universalControlVirtualService.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499392E0(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.userDeviceCreateInactive.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_2578A07D8 != -1)
    swift_once();
  swift_bridgeObjectRetain_n();
  v0 = OUTLINED_FUNCTION_19_18();
  v1 = OUTLINED_FUNCTION_92_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v1)
  {
    OUTLINED_FUNCTION_54_4();
    v2 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v2, v3, &qword_2578A1280, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_9_17();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_9_17();
    OUTLINED_FUNCTION_15_20(v7, &qword_2578A1280, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_14_0();
}

void sub_249939414(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.userDeviceCreateInactive.getter();
  *a1 = v2;
}

void HIDServiceProperties.userDeviceCreateInactive.setter(char a1)
{
  if (qword_2578A07D8 != -1)
    swift_once();
  OUTLINED_FUNCTION_109_0();
  HIDServiceProperties.subscript.setter(a1);
}

void HIDServiceProperties.userDeviceCreateInactive.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.userDeviceCreateInactive.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2499394D0(uint64_t a1)
{
  char v1;

  v1 = *(_BYTE *)(a1 + 8);
  if (qword_2578A07D8 != -1)
    swift_once();
  OUTLINED_FUNCTION_109_0();
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_18_3();
}

void sub_24993953C(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.useRemoteAcceleration.getter();
  *a1 = v2;
}

void HIDServiceProperties.useRemoteAcceleration.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.useRemoteAcceleration.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249939590(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.vendorID.getter(uint64_t a1, uint64_t a2)
{
  sub_249937468(a1, a2);
}

void sub_2499395D8(uint64_t a1)
{
  HIDServiceProperties.vendorID.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.vendorID.setter(uint64_t a1, char a2)
{
  HIDServiceProperties.subscript.setter(a1, a2 & 1, 0x4449726F646E6556, 0xE800000000000000);
}

void HIDServiceProperties.vendorID.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.vendorID.getter(v1, v2);
  OUTLINED_FUNCTION_24_13(v3, v4);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993964C(uint64_t a1, uint64_t a2)
{
  sub_24993984C(a1, a2, 0x4449726F646E6556, 0xE800000000000000);
}

void HIDServiceProperties.reportInterval.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_116();
  sub_249937468(v0, v1);
}

void sub_249939674()
{
  HIDServiceProperties.reportInterval.setter();
}

void HIDServiceProperties.reportInterval.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_116();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.reportInterval.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.reportInterval.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499396E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_116();
  sub_24993984C(v0, v1, v2, v3);
}

void HIDServiceProperties.subinterfaceID.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_13_23(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_71();
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_24993979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  uint64_t v4;
  char v5;

  v4 = a4(a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_24_13(v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_2499397C0(uint64_t a1)
{
  HIDServiceProperties.subinterfaceID.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.subinterfaceID.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_18(a1, a2 & 1, 17, 0x800000024995F310);
}

void HIDServiceProperties.subinterfaceID.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_10_25(a1);
  HIDServiceProperties.subinterfaceID.getter();
  OUTLINED_FUNCTION_24_13(v1, v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_249939834(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_20(a1, a2, 17, 0x800000024995F310);
}

void sub_24993984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDServiceProperties.subscript.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a3, a4);
  OUTLINED_FUNCTION_6_0();
}

uint64_t HIDServiceProperties.surfaceDimensions.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  NSDictionary dictionaryRepresentation;
  uint64_t v17;
  UniversalHID::HIDServiceProperties::HIDSurfaceDimensions_optional v18;

  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_177();
  v1 = OUTLINED_FUNCTION_142();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (!v17)
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_96_1(v8, &qword_2578A2A50);
  if ((OUTLINED_FUNCTION_0_39() & 1) == 0)
  {
LABEL_8:
    *(_QWORD *)&v18.is_nil = 0;
    goto LABEL_9;
  }
  v18 = HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)(dictionaryRepresentation);
LABEL_9:
  LOBYTE(result) = v18.is_nil;
  return result;
}

uint64_t sub_24993994C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = HIDServiceProperties.surfaceDimensions.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_24993997C(uint64_t a1)
{
  return HIDServiceProperties.surfaceDimensions.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t HIDServiceProperties.surfaceDimensions.setter(uint64_t a1, uint64_t a2, char a3)
{
  id v3;

  if ((a3 & 1) != 0)
    v3 = 0;
  else
    v3 = HIDServiceProperties.HIDSurfaceDimensions.dictionaryRepresentation.getter(*(double *)&a1, *(double *)&a2);
  return HIDServiceProperties.subscript.setter(v3, 0xD000000000000011, 0x800000024995F350);
}

UniversalHID::HIDServiceProperties::HIDSurfaceDimensions_optional __swiftcall HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)(NSDictionary dictionaryRepresentation)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  _BOOL8 v23;
  int v24;
  uint64_t v25;
  UniversalHID::HIDServiceProperties::HIDSurfaceDimensions_optional result;

  OUTLINED_FUNCTION_142();
  v2 = OUTLINED_FUNCTION_98_1(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v2)
  {
    OUTLINED_FUNCTION_54_4();
    v3 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (!v25)
  {

    OUTLINED_FUNCTION_15_20(v14, &qword_2578A1280, v15, v16, v17, v18, v19, v20);
    goto LABEL_15;
  }
  if ((OUTLINED_FUNCTION_0_39() & 1) == 0)
  {

LABEL_15:
    LOBYTE(v23) = 0;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_142();
  v8 = OUTLINED_FUNCTION_98_1(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_44_5();
  if (v8)
  {
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_12_25();

  }
  else
  {

    v13 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v9, v10, &qword_2578A1280, v11, v12, v13);
  if ((OUTLINED_FUNCTION_0_39() & 1) == 0)
    goto LABEL_15;
  v21 = (double)v24 * 0.0000152587891;
  v22 = v21;
  *(double *)&v23 = v21;
LABEL_16:
  result.value.height = v22;
  result.value.width = v21;
  result.is_nil = v23;
  return result;
}

id HIDServiceProperties.HIDSurfaceDimensions.dictionaryRepresentation.getter(double a1, double a2)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = HIDFixed.init(doubleValue:)(a2);
  if ((v3 & 0x100000000) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE70]), sel_init);
  v4 = v3;
  v5 = HIDFixed.init(doubleValue:)(a1);
  if ((v5 & 0x100000000) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE70]), sel_init);
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A78);
  v7 = OUTLINED_FUNCTION_215();
  *(_OWORD *)(v7 + 16) = xmmword_249959020;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 32) = 0x746867696548;
  *(_QWORD *)(v7 + 40) = 0xE600000000000000;
  v9 = MEMORY[0x24BEE3F88];
  *(_DWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 120) = v8;
  *(_QWORD *)(v7 + 88) = v9;
  *(_QWORD *)(v7 + 96) = 0x6874646957;
  *(_QWORD *)(v7 + 104) = 0xE500000000000000;
  *(_QWORD *)(v7 + 152) = v9;
  *(_DWORD *)(v7 + 128) = v6;
  OUTLINED_FUNCTION_96_1(v7, &qword_2578A2A50);
  return (id)sub_2499559F4();
}

void HIDServiceProperties.surfaceDimensions.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)a1 = HIDServiceProperties.surfaceDimensions.getter();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_249939CC8(uint64_t a1)
{
  HIDServiceProperties.surfaceDimensions.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.scrollAccelerationSupport.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_19();
  v3 = OUTLINED_FUNCTION_19_18();
  v4 = OUTLINED_FUNCTION_4_26(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (a2)
  {
    OUTLINED_FUNCTION_2_33();
    v5 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v5, v6, &qword_2578A1280, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v10, &qword_2578A1280, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249939DA8(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.scrollAccelerationSupport.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.scrollAccelerationSupport.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.scrollAccelerationSupport.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_6_0();
}

void sub_249939DFC(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

void HIDServiceProperties.pointerAccelerationSupport.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_9_19();
  v1 = OUTLINED_FUNCTION_19_18();
  v2 = OUTLINED_FUNCTION_4_26(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_3_27();
  if (v0)
  {
    OUTLINED_FUNCTION_2_33();
    v3 = OUTLINED_FUNCTION_23_10();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v3, v4, &qword_2578A1280, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_39();
    OUTLINED_FUNCTION_40_5();
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v8, &qword_2578A1280, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_10_18();
}

void sub_249939EDC(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.pointerAccelerationSupport.getter();
  *a1 = v2;
}

void HIDServiceProperties.pointerAccelerationSupport.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_31_7(a1);
  HIDServiceProperties.pointerAccelerationSupport.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_249939F30(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_12_17(a1);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainCubic.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainCubic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainCubic.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainLinear.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainLinear.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainLinear.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainParabolic.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainParabolic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainParabolic.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainQuartic.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainQuartic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainQuartic.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t HIDServiceProperties.HIDAccelCurve.index.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.index.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = result;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.modify())()
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = result;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.modify())()
{
  return nullsub_1;
}

uint64_t sub_24993A0EC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24993A11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  v1 = MEMORY[0x24BEE4B00];
  v32 = MEMORY[0x24BEE4B00];
  sub_2498E1834(v31, a1);
  v2 = v31[0];
  v3 = v31[1];
  v4 = v31[3];
  v5 = v31[4];
  v6 = (unint64_t)(v31[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    do
    {
      if (v5)
      {
        v8 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v9 = v8 | (v4 << 6);
      }
      else
      {
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v10 >= v6)
          goto LABEL_34;
        v11 = *(_QWORD *)(v3 + 8 * v10);
        v12 = v4 + 1;
        if (!v11)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v6)
            goto LABEL_34;
          v11 = *(_QWORD *)(v3 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v6)
              goto LABEL_34;
            v11 = *(_QWORD *)(v3 + 8 * v12);
            if (!v11)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v6)
                goto LABEL_34;
              v11 = *(_QWORD *)(v3 + 8 * v12);
              if (!v11)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v6)
                  goto LABEL_34;
                v11 = *(_QWORD *)(v3 + 8 * v12);
                if (!v11)
                {
                  v13 = v4 + 6;
                  while (v13 < v6)
                  {
                    v11 = *(_QWORD *)(v3 + 8 * v13++);
                    if (v11)
                    {
                      v12 = v13 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_2499242DC();
                  return v1;
                }
              }
            }
          }
        }
LABEL_19:
        v5 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
        v4 = v12;
      }
      v14 = *(_QWORD *)(v2 + 56) + 16 * v9;
    }
    while ((*(_BYTE *)(v14 + 8) & 1) != 0);
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v16 = *v15;
    v17 = v15[1];
    v30 = *(_QWORD *)v14;
    v18 = *(_QWORD *)(v1 + 16);
    if (*(_QWORD *)(v1 + 24) <= v18)
    {
      v19 = v18 + 1;
      swift_bridgeObjectRetain();
      sub_24993FE8C(v19, 1);
      v1 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_249955FB8();
    sub_249955880();
    result = sub_249956000();
    v20 = v1 + 64;
    v21 = -1 << *(_BYTE *)(v1 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6))) == 0)
      break;
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v24);
    *v29 = v16;
    v29[1] = v17;
    *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v24) = v30;
    ++*(_QWORD *)(v1 + 16);
  }
  v25 = 0;
  v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    v27 = v23 == v26;
    if (v23 == v26)
      v23 = 0;
    v25 |= v27;
    v28 = *(_QWORD *)(v20 + 8 * v23);
    if (v28 != -1)
    {
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24993A3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = a1;
  v3 = sub_249932CA4(a1, a2, qword_251AC5020);
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v2;
}

void *sub_24993A428()
{
  return &unk_251AC5020;
}

uint64_t OUTLINED_FUNCTION_171()
{
  return 0;
}

void sub_24993A440(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_24993B690(a1, (uint64_t (*)(_QWORD, _QWORD))nullsub_1, a2);
}

void *sub_24993A44C@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_24993A428();
  *a1 = result;
  return result;
}

uint64_t sub_24993A470()
{
  uint64_t *v0;

  return sub_24993A0EC(*v0);
}

uint64_t sub_24993A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_24993A3C8(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24993A49C()
{
  return OUTLINED_FUNCTION_71();
}

uint64_t sub_24993A4B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = OUTLINED_FUNCTION_171();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24993A4DC()
{
  sub_249932888();
}

uint64_t sub_24993A4F4()
{
  return sub_249932924();
}

void sub_24993A50C()
{
  sub_249932A98();
}

uint64_t sub_24993A524()
{
  sub_24993E2B0();
  return sub_249956024();
}

uint64_t sub_24993A54C()
{
  sub_24993E2B0();
  return sub_249956030();
}

uint64_t sub_24993A574(uint64_t *a1, uint64_t *a2)
{
  return sub_249942030(*a1, a1[1], *a2, a2[1]);
}

void HIDServiceProperties.HIDAccelCurve.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  OUTLINED_FUNCTION_119();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A80);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24993E2B0();
  OUTLINED_FUNCTION_156();
  if (v0)
  {
    OUTLINED_FUNCTION_152();
  }
  else
  {
    OUTLINED_FUNCTION_1_32();
    v6 = OUTLINED_FUNCTION_29_11();
    v8 = v7;
    v39 = v6;
    v9 = OUTLINED_FUNCTION_22_14(0xD000000000000012);
    v40 = v10;
    v38 = v9;
    v11 = OUTLINED_FUNCTION_22_14(0xD000000000000015);
    v36 = v12;
    v37 = v11;
    v13 = OUTLINED_FUNCTION_22_14(0xD000000000000013);
    v34 = v14;
    v35 = v13;
    OUTLINED_FUNCTION_46_4();
    v15 = OUTLINED_FUNCTION_29_11();
    v32 = v16;
    v33 = v15;
    v17 = OUTLINED_FUNCTION_22_14(0xD00000000000001DLL);
    v30 = v18;
    v31 = v17;
    v19 = OUTLINED_FUNCTION_22_14(0xD00000000000001ALL);
    v28 = v20;
    v29 = v19;
    v21 = OUTLINED_FUNCTION_22_14(0xD000000000000021);
    v26 = v22;
    v27 = v21;
    v23 = OUTLINED_FUNCTION_22_14(0xD00000000000001FLL);
    v25 = v24;
    OUTLINED_FUNCTION_193();
    OUTLINED_FUNCTION_152();
    *(_QWORD *)v4 = v39;
    *(_BYTE *)(v4 + 8) = v8 & 1;
    *(_QWORD *)(v4 + 16) = v38;
    *(_BYTE *)(v4 + 24) = v40 & 1;
    *(_QWORD *)(v4 + 32) = v37;
    *(_BYTE *)(v4 + 40) = v36 & 1;
    *(_QWORD *)(v4 + 48) = v35;
    *(_BYTE *)(v4 + 56) = v34 & 1;
    *(_QWORD *)(v4 + 64) = v33;
    *(_BYTE *)(v4 + 72) = v32 & 1;
    *(_QWORD *)(v4 + 80) = v31;
    *(_BYTE *)(v4 + 88) = v30 & 1;
    *(_QWORD *)(v4 + 96) = v29;
    *(_BYTE *)(v4 + 104) = v28 & 1;
    *(_QWORD *)(v4 + 112) = v27;
    *(_BYTE *)(v4 + 120) = v26 & 1;
    *(_QWORD *)(v4 + 128) = v23;
    *(_BYTE *)(v4 + 136) = v25 & 1;
  }
  OUTLINED_FUNCTION_3_7();
}

void HIDServiceProperties.HIDAccelCurve.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_119();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_205();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24993E2B0();
  sub_249956018();
  OUTLINED_FUNCTION_1_32();
  OUTLINED_FUNCTION_27_13();
  if (!v0)
  {
    OUTLINED_FUNCTION_21_16(0xD000000000000012);
    OUTLINED_FUNCTION_21_16(0xD000000000000015);
    OUTLINED_FUNCTION_21_16(0xD000000000000013);
    OUTLINED_FUNCTION_46_4();
    OUTLINED_FUNCTION_27_13();
    OUTLINED_FUNCTION_21_16(0xD00000000000001DLL);
    OUTLINED_FUNCTION_21_16(0xD00000000000001ALL);
    OUTLINED_FUNCTION_21_16(0xD000000000000021);
    OUTLINED_FUNCTION_21_16(0xD00000000000001FLL);
  }
  OUTLINED_FUNCTION_221(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_3_7();
}

void HIDServiceProperties.HIDAccelCurve.hash(into:)()
{
  _BYTE *v0;

  if (v0[8] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[24] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[40] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[56] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[72] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[88] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[104] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[120] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    OUTLINED_FUNCTION_117();
  }
  if (v0[136] == 1)
  {
    OUTLINED_FUNCTION_110_0();
  }
  else
  {
    OUTLINED_FUNCTION_108_0();
    sub_249955FC4();
  }
  OUTLINED_FUNCTION_18_3();
}

uint64_t static HIDServiceProperties.HIDAccelCurve.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v4 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v4 = 1;
    if ((v4 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v5 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v5 = 1;
    if ((v5 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v7 = *(_BYTE *)(a2 + 88);
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 88))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80))
      v7 = 1;
    if ((v7 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v8 = *(_BYTE *)(a2 + 104);
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 104))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96))
      v8 = 1;
    if ((v8 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v9 = *(_BYTE *)(a2 + 120);
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 120))
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a2 + 112))
      v9 = 1;
    if ((v9 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  v10 = *(_BYTE *)(a2 + 136);
  if ((*(_BYTE *)(a1 + 136) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 136) & 1) == 0)
      return OUTLINED_FUNCTION_6();
  }
  else
  {
    if (*(_QWORD *)(a1 + 128) != *(_QWORD *)(a2 + 128))
      v10 = 1;
    if ((v10 & 1) != 0)
      return OUTLINED_FUNCTION_6();
  }
  return 1;
}

void HIDServiceProperties.HIDAccelCurve.hashValue.getter()
{
  OUTLINED_FUNCTION_57_3();
  HIDServiceProperties.HIDAccelCurve.hash(into:)();
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_10_18();
}

void sub_24993AD10(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[137];

  HIDServiceProperties.HIDAccelCurve.init(from:)();
  if (!v1)
    memcpy(a1, v3, 0x89uLL);
}

void sub_24993AD58()
{
  HIDServiceProperties.HIDAccelCurve.encode(to:)();
}

uint64_t sub_24993AD74()
{
  sub_249955FB8();
  HIDServiceProperties.HIDAccelCurve.hash(into:)();
  return sub_249956000();
}

uint64_t sub_24993ADB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_24993F7C0();
  sub_24995600C();
  if (!v1)
  {
    v9 = 0x7355656369766544;
    v10 = 0xEB00000000656761;
    v7 = sub_249955E38();
    v9 = 0x7355656369766544;
    v10 = 0xEF65676150656761;
    sub_249955E38();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_24993AF28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24993F7C0();
  sub_249956018();
  v8 = 0x7355656369766544;
  v9 = 0xEB00000000656761;
  sub_249955EBC();
  if (!v1)
  {
    v8 = 0x7355656369766544;
    v9 = 0xEF65676150656761;
    sub_249955EBC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24993B070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;

  v3 = a1;
  if (*(_QWORD *)"DeviceUsage" == a1 && *(_QWORD *)"age" == a2)
    return v3;
  result = sub_249955F28();
  if ((result & 1) != 0)
    return v3;
  v6 = &unk_251AC5108;
  for (i = 1; ; ++i)
  {
    v8 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(v6 - 1) == v3 && *v6 == a2)
      return v3;
    result = sub_249955F28();
    if ((result & 1) != 0)
      return v3;
    v6 += 2;
    if (v8 == 2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *sub_24993B144()
{
  return &unk_251AC50D0;
}

uint64_t sub_24993B150()
{
  sub_249955FC4();
  return sub_249955FC4();
}

BOOL sub_24993B180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_24993B190()
{
  sub_249955FB8();
  sub_249955FC4();
  sub_249955FC4();
  return sub_249956000();
}

void sub_24993B1EC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_24993B690(a1, (uint64_t (*)(_QWORD, _QWORD))j_nullsub_1, a2);
}

void *sub_24993B1F8@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_24993B144();
  *a1 = result;
  return result;
}

uint64_t sub_24993B21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_24993B070(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24993B240()
{
  sub_24993F7C0();
  return sub_249956024();
}

uint64_t sub_24993B268()
{
  sub_24993F7C0();
  return sub_249956030();
}

uint64_t sub_24993B290@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_24993ADB0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_24993B2B8(_QWORD *a1)
{
  return sub_24993AF28(a1);
}

uint64_t sub_24993B2D0()
{
  return sub_24993B190();
}

uint64_t sub_24993B2D8()
{
  return sub_24993B150();
}

uint64_t sub_24993B2E0()
{
  sub_249955FB8();
  sub_249955FC4();
  sub_249955FC4();
  return sub_249956000();
}

BOOL sub_24993B334(uint64_t *a1, uint64_t *a2)
{
  return sub_24993B180(*a1, a1[1], *a2, a2[1]);
}

void HIDServiceProperties.HIDSurfaceDimensions.width.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*HIDServiceProperties.HIDSurfaceDimensions.width.modify())()
{
  return nullsub_1;
}

double HIDServiceProperties.HIDSurfaceDimensions.height.getter(double a1, double a2)
{
  return a2;
}

void HIDServiceProperties.HIDSurfaceDimensions.height.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDServiceProperties.HIDSurfaceDimensions.height.modify())()
{
  return nullsub_1;
}

double HIDServiceProperties.HIDSurfaceDimensions.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  double v3;
  double v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A98);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_118();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24993E2EC();
  sub_24995600C();
  OUTLINED_FUNCTION_145(0x746867696548);
  OUTLINED_FUNCTION_145(0x6874646957);
  v4 = v3;
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_152();
  return v4;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2AA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_205();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24993E2EC();
  sub_249956018();
  OUTLINED_FUNCTION_190();
  if (!v1)
    OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_221(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t sub_24993B5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;

  v3 = a1;
  if (*(_QWORD *)"Height" == a1 && a2 == 0xE600000000000000)
    return v3;
  result = sub_249955F28();
  if ((result & 1) != 0)
    return v3;
  v6 = &unk_251AC5148;
  for (i = 1; ; ++i)
  {
    v8 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(v6 - 1) == v3 && *v6 == a2)
      return v3;
    result = sub_249955F28();
    if ((result & 1) != 0)
      return v3;
    v6 += 2;
    if (v8 == 2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *sub_24993B684()
{
  return &unk_251AC5110;
}

void sub_24993B690(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a2(*a1, a1[1]);
  a3[1] = v4;
  OUTLINED_FUNCTION_6_0();
}

void *sub_24993B6B8@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_24993B684();
  *a1 = result;
  return result;
}

uint64_t sub_24993B6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_24993B5B0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24993B700()
{
  sub_24993E2EC();
  return sub_249956024();
}

uint64_t sub_24993B728()
{
  sub_24993E2EC();
  return sub_249956030();
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.hash(into:)()
{
  OUTLINED_FUNCTION_235();
  return OUTLINED_FUNCTION_235();
}

BOOL static HIDServiceProperties.HIDSurfaceDimensions.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.hashValue.getter()
{
  OUTLINED_FUNCTION_57_3();
  HIDServiceProperties.HIDSurfaceDimensions.hash(into:)();
  return OUTLINED_FUNCTION_79();
}

void sub_24993B7E4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = HIDServiceProperties.HIDSurfaceDimensions.init(from:)(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_24993B80C(_QWORD *a1)
{
  return HIDServiceProperties.HIDSurfaceDimensions.encode(to:)(a1);
}

uint64_t sub_24993B824()
{
  return HIDServiceProperties.HIDSurfaceDimensions.hashValue.getter();
}

uint64_t sub_24993B82C()
{
  return HIDServiceProperties.HIDSurfaceDimensions.hash(into:)();
}

uint64_t sub_24993B834()
{
  sub_249955FB8();
  HIDServiceProperties.HIDSurfaceDimensions.hash(into:)();
  return sub_249956000();
}

BOOL sub_24993B880(double *a1, double *a2)
{
  return static HIDServiceProperties.HIDSurfaceDimensions.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

_QWORD *HIDServiceProperties.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int16 *v34;
  __int16 v35;
  __int16 v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;
  char v60;
  void *v61;
  uint64_t v62;
  char v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void *v72;
  uint64_t v73;
  char v74;
  void *v75;
  uint64_t v76;
  char v77;
  void *v78;
  uint64_t v79;
  char v80;
  void *v81;
  uint64_t v82;
  char v83;
  void *v84;
  uint64_t v85;
  char v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  void *v92;
  uint64_t v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  char v107;
  void *v108;
  uint64_t v109;
  char v110;
  void *v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  void *v120;
  uint64_t v121;
  char v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  char v127;
  void *v129;
  uint64_t v130;
  id v131;
  __int16 v132;
  __int16 v133;
  unint64_t v134;
  __int128 v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;

  OUTLINED_FUNCTION_119();
  v142 = v1;
  v143 = v2;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2AB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_118();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  v140 = v7;
  v8 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_249929864();
  OUTLINED_FUNCTION_156();
  if (v0)
  {
    OUTLINED_FUNCTION_152();

  }
  else
  {
    OUTLINED_FUNCTION_170();
    *(_QWORD *)&v135 = v9;
    *((_QWORD *)&v135 + 1) = v10;
    v11 = sub_249955E20();
    if ((v12 & 1) != 0)
      v13 = 0;
    else
      v13 = v11;
    v139 = (_QWORD *)v13;
    OUTLINED_FUNCTION_57_1();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_197((uint64_t)&unk_2578A2AC0);
    v15 = v14;
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_80_0();
    v141 = v7;
    OUTLINED_FUNCTION_194();
    HIDServiceProperties.accelParametricCurves.setter(v137);
    *(_QWORD *)&v135 = v15;
    *((_QWORD *)&v135 + 1) = 0x800000024995EFC0;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v17 = 0;
    else
      v17 = (void *)OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_191(0x800000024995EFC0);
    v18 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v18, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    strcpy((char *)&v135, "Authenticated");
    HIWORD(v135) = -4864;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v19 = 0;
    else
      v19 = (void *)OUTLINED_FUNCTION_146();
    strcpy((char *)&v135, "Authenticated");
    v20 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v20, sel___swift_setObject_forKeyedSubscript_);

    swift_unknownObjectRelease();
    strcpy((char *)&v135, "CapsLockDelay");
    HIWORD(v135) = -4864;
    OUTLINED_FUNCTION_6_27();
    if ((v21 & 1) != 0)
      v22 = 0;
    else
      v22 = (void *)sub_2499559C4();
    strcpy((char *)&v135, "CapsLockDelay");
    v23 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v23, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000016;
    *((_QWORD *)&v135 + 1) = 0x800000024995EFE0;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v24 = 0;
    else
      v24 = (void *)OUTLINED_FUNCTION_146();
    v25 = 0xEE00746E69486570;
    *(_QWORD *)&v135 = 0xD000000000000016;
    *((_QWORD *)&v135 + 1) = 0x800000024995EFE0;
    v26 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v26, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_33_5();
    if (v27)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v24 = 0;
    }
    OUTLINED_FUNCTION_187();
    v28 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v28, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_57_1();
    OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_1_32();
    *(_QWORD *)&v135 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v135 + 1) = v29;
    OUTLINED_FUNCTION_197((uint64_t)&unk_2578A2AD8);
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_80_0();
    if (v137)
    {
      v30 = *(_QWORD *)(v137 + 16);
      if (v30)
      {
        *(_QWORD *)&v135 = MEMORY[0x24BEE4AF8];
        sub_2498D60F4(0, v30, 0);
        v31 = v135;
        v32 = *(_QWORD *)(v135 + 16);
        v33 = 4 * v32;
        v34 = (__int16 *)(v137 + 40);
        do
        {
          v35 = *v34;
          v36 = *(v34 - 4);
          *(_QWORD *)&v135 = v31;
          v37 = *(_QWORD *)(v31 + 24);
          v38 = v32 + 1;
          if (v32 >= v37 >> 1)
          {
            v134 = v32 + 1;
            v132 = v36;
            v133 = v35;
            sub_2498D60F4(v37 > 1, v32 + 1, 1);
            v36 = v132;
            v35 = v133;
            v38 = v134;
            v31 = v135;
          }
          v34 += 8;
          *(_QWORD *)(v31 + 16) = v38;
          v39 = v31 + v33;
          *(_WORD *)(v39 + 32) = v35;
          *(_WORD *)(v39 + 34) = v36;
          v33 += 4;
          v32 = v38;
          --v30;
        }
        while (v30);
        v25 = v31;
        swift_bridgeObjectRelease();
      }
      else
      {
        OUTLINED_FUNCTION_94_1();
        v25 = MEMORY[0x24BEE4AF8];
      }
      HIDServiceProperties.deviceUsagePairs.setter(v25);
      OUTLINED_FUNCTION_194();
    }
    v40 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
    OUTLINED_FUNCTION_101_1(v25 + 5);
    sub_24993EBF4((uint64_t)&unk_2578A2AE8);
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_80_0();
    if (v137)
    {
      sub_24995579C();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v40 = 0;
    }
    OUTLINED_FUNCTION_101_1(0xD000000000000019);
    v41 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v41, sel___swift_setObject_forKeyedSubscript_);
    OUTLINED_FUNCTION_12_25();
    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000012;
    *((_QWORD *)&v135 + 1) = 0x800000024995F0B0;
    OUTLINED_FUNCTION_33_5();
    if (v42)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v40 = 0;
    }
    v43 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v43, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000021;
    *((_QWORD *)&v135 + 1) = 0x800000024995F0D0;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v44 = 0;
    else
      v44 = (void *)OUTLINED_FUNCTION_146();
    v45 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v45, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0x437972746E756F43;
    *((_QWORD *)&v135 + 1) = 0xEB0000000065646FLL;
    OUTLINED_FUNCTION_6_27();
    if ((v46 & 1) != 0)
      v47 = 0;
    else
      v47 = (void *)sub_2499559C4();
    v48 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v48, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v135 + 1) = 0x800000024995F100;
    OUTLINED_FUNCTION_33_5();
    if (v49)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v47 = 0;
    }
    v50 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v50, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    strcpy((char *)&v135, "StandardType");
    BYTE13(v135) = 0;
    HIWORD(v135) = -5120;
    OUTLINED_FUNCTION_6_27();
    if ((v51 & 1) != 0)
      v52 = 0;
    else
      v52 = (void *)sub_2499559C4();
    strcpy((char *)&v135, "StandardType");
    v53 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v53, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    strcpy((char *)&v135, "Manufacturer");
    BYTE13(v135) = 0;
    HIWORD(v135) = -5120;
    OUTLINED_FUNCTION_33_5();
    if (v54)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v52 = 0;
    }
    OUTLINED_FUNCTION_214();
    *(_QWORD *)&v135 = v55;
    *((_QWORD *)&v135 + 1) = 0xEC00000072657275;
    v56 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v56, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_191(0x800000024995E800);
    OUTLINED_FUNCTION_6_27();
    if ((v57 & 1) != 0)
      v58 = 0;
    else
      v58 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_211();
    v59 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v59, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = "UsagePairs";
    *((_QWORD *)&v135 + 1) = 0x800000024995E820;
    OUTLINED_FUNCTION_6_27();
    if ((v60 & 1) != 0)
      v61 = 0;
    else
      v61 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_101_1(0xD00000000000001ALL);
    v62 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v62, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000020;
    *((_QWORD *)&v135 + 1) = 0x800000024995F120;
    OUTLINED_FUNCTION_6_27();
    if ((v63 & 1) != 0)
      v64 = 0;
    else
      v64 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_101_1(0xD000000000000020);
    v65 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v65, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_223(0xD00000000000001BLL);
    sub_24993E3A0();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_80_0();
    if (*((_QWORD *)&v135 + 1) >> 60 == 15)
      v66 = 0;
    else
      v66 = (void *)sub_249955634();
    OUTLINED_FUNCTION_223(0xD00000000000001BLL);
    v67 = (void *)OUTLINED_FUNCTION_88_1();
    OUTLINED_FUNCTION_188((uint64_t)v67, sel___swift_setObject_forKeyedSubscript_);
    sub_24991784C(v135, *((unint64_t *)&v135 + 1));

    OUTLINED_FUNCTION_12_25();
    OUTLINED_FUNCTION_173();
    *(_QWORD *)&v135 = v68;
    *((_QWORD *)&v135 + 1) = 0x800000024995F190;
    OUTLINED_FUNCTION_33_5();
    if (v69)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v67 = 0;
    }
    OUTLINED_FUNCTION_101_1(0xD00000000000001ALL);
    v70 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v70, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000015;
    *((_QWORD *)&v135 + 1) = 0x800000024995F1B0;
    OUTLINED_FUNCTION_6_27();
    if ((v71 & 1) != 0)
      v72 = 0;
    else
      v72 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_101_1(0xD000000000000015);
    v73 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v73, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000014;
    *((_QWORD *)&v135 + 1) = 0x800000024995E880;
    OUTLINED_FUNCTION_6_27();
    if ((v74 & 1) != 0)
      v75 = 0;
    else
      v75 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_212();
    v76 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v76, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xD000000000000014;
    *((_QWORD *)&v135 + 1) = 0x800000024995F1D0;
    OUTLINED_FUNCTION_6_27();
    if ((v77 & 1) != 0)
      v78 = 0;
    else
      v78 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_211();
    v79 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v79, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = "HIDPointerButtonCount";
    *((_QWORD *)&v135 + 1) = 0x800000024995F1F0;
    OUTLINED_FUNCTION_6_27();
    if ((v80 & 1) != 0)
      v81 = 0;
    else
      v81 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_191(0x800000024995F1F0);
    v82 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v82, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    strcpy((char *)&v135, "PrimaryUsage");
    BYTE13(v135) = 0;
    HIWORD(v135) = -5120;
    OUTLINED_FUNCTION_6_27();
    if ((v83 & 1) != 0)
      v84 = 0;
    else
      v84 = (void *)sub_2499559C4();
    strcpy((char *)&v135, "PrimaryUsage");
    v85 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v85, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v135 + 1) = 0x800000024995F210;
    OUTLINED_FUNCTION_6_27();
    if ((v86 & 1) != 0)
      v87 = 0;
    else
      v87 = (void *)sub_2499559C4();
    v88 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v88, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0x746375646F7250;
    *((_QWORD *)&v135 + 1) = 0xE700000000000000;
    OUTLINED_FUNCTION_33_5();
    if (v89)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v87 = 0;
    }
    v90 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v90, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    *(_QWORD *)&v135 = 0x49746375646F7250;
    *((_QWORD *)&v135 + 1) = 0xE900000000000044;
    OUTLINED_FUNCTION_6_27();
    if ((v91 & 1) != 0)
      v92 = 0;
    else
      v92 = (void *)sub_2499559C4();
    v93 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v93, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    strcpy((char *)&v135, "ReportInterval");
    HIBYTE(v135) = -18;
    OUTLINED_FUNCTION_6_27();
    if ((v94 & 1) != 0)
      v95 = 0;
    else
      v95 = (void *)sub_2499559C4();
    strcpy((char *)&v135, "ReportInterval");
    HIBYTE(v135) = -18;
    v96 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v96, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_223(v97);
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_80_0();
    if (*((_QWORD *)&v135 + 1) >> 60 == 15)
      v98 = 0;
    else
      v98 = (void *)sub_249955634();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_223(v99);
    v100 = (void *)OUTLINED_FUNCTION_88_1();
    OUTLINED_FUNCTION_188((uint64_t)v100, sel___swift_setObject_forKeyedSubscript_);
    sub_24991784C(v135, *((unint64_t *)&v135 + 1));

    OUTLINED_FUNCTION_12_25();
    *(_QWORD *)&v135 = 0xD000000000000019;
    *((_QWORD *)&v135 + 1) = 0x800000024995F270;
    OUTLINED_FUNCTION_33_5();
    if (v101)
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_70_1();
    }
    else
    {
      v100 = 0;
    }
    OUTLINED_FUNCTION_101_1(0xD000000000000019);
    v102 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_7_29(v102, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_1_32();
    *(_QWORD *)&v135 = 0xD000000000000014;
    *((_QWORD *)&v135 + 1) = v103;
    OUTLINED_FUNCTION_227();
    OUTLINED_FUNCTION_80_0();
    HIDServiceProperties.scrollAccelParametricCurves.setter(v137);
    *(_QWORD *)&v135 = 0xD000000000000013;
    *((_QWORD *)&v135 + 1) = 0x800000024995F2D0;
    OUTLINED_FUNCTION_6_27();
    if ((v104 & 1) != 0)
      v105 = 0;
    else
      v105 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_212();
    v106 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v106, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD000000000000013;
    *((_QWORD *)&v135 + 1) = 0x800000024995F2F0;
    OUTLINED_FUNCTION_6_27();
    if ((v107 & 1) != 0)
      v108 = 0;
    else
      v108 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_212();
    v109 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v109, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD000000000000011;
    *((_QWORD *)&v135 + 1) = 0x800000024995F310;
    OUTLINED_FUNCTION_6_27();
    if ((v110 & 1) != 0)
      v111 = 0;
    else
      v111 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_212();
    v112 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v112, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD000000000000018;
    *((_QWORD *)&v135 + 1) = 0x800000024995F330;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v113 = 0;
    else
      v113 = (void *)OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_101_1(0xD000000000000018);
    v114 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v114, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_1_32();
    v137 = 0xD000000000000011;
    v138 = v115;
    sub_24993E3DC();
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_80_0();
    HIDServiceProperties.surfaceDimensions.setter(v135, *((uint64_t *)&v135 + 1), v136);
    OUTLINED_FUNCTION_207();
    OUTLINED_FUNCTION_33_5();
    if (v116)
    {
      v117 = (void *)sub_249955838();
      swift_bridgeObjectRelease();
    }
    else
    {
      v117 = 0;
    }
    OUTLINED_FUNCTION_207();
    v118 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v118, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD000000000000017;
    *((_QWORD *)&v135 + 1) = 0x800000024995E840;
    OUTLINED_FUNCTION_6_27();
    if ((v119 & 1) != 0)
      v120 = 0;
    else
      v120 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_101_1(0xD000000000000017);
    v121 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v121, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD00000000000001DLL;
    *((_QWORD *)&v135 + 1) = 0x800000024995E860;
    OUTLINED_FUNCTION_6_27();
    if ((v122 & 1) != 0)
      v123 = 0;
    else
      v123 = (void *)sub_2499559C4();
    OUTLINED_FUNCTION_101_1(0xD00000000000001DLL);
    v124 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v124, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0xD000000000000017;
    *((_QWORD *)&v135 + 1) = 0x800000024995F370;
    OUTLINED_FUNCTION_51_4();
    OUTLINED_FUNCTION_8_15();
    if (v16)
      v125 = 0;
    else
      v125 = (void *)OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_101_1(0xD000000000000017);
    v126 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v126, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    *(_QWORD *)&v135 = 0x4449726F646E6556;
    *((_QWORD *)&v135 + 1) = 0xE800000000000000;
    OUTLINED_FUNCTION_6_27();
    if ((v127 & 1) != 0)
      v129 = 0;
    else
      v129 = (void *)sub_2499559C4();
    *(_QWORD *)&v135 = 0x4449726F646E6556;
    *((_QWORD *)&v135 + 1) = 0xE800000000000000;
    v130 = OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_37_6(v130, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_153(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v8 = v139;
    v131 = v140;
    OUTLINED_FUNCTION_152();

  }
  return v8;
}

void HIDServiceProperties.encode(to:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  unsigned __int16 *v69;
  Class isa;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSDictionary v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;

  OUTLINED_FUNCTION_119();
  v114 = v1;
  v3 = v2;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2B00);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_5_6();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_249929864();
  sub_249956018();
  if (!v3 || (OUTLINED_FUNCTION_170(), sub_249955EE0(), !v0))
  {
    v9 = objc_msgSend(v114, sel___swift_objectForKeyedSubscript_, sub_249955F40());
    swift_unknownObjectRelease();
    if (v9)
    {
      OUTLINED_FUNCTION_50_1();
      v10 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v10, v11, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_96_1(v12, &qword_2578A1288);
      if ((OUTLINED_FUNCTION_26_11() & 1) != 0)
      {
        sub_249933CB8((uint64_t)v111, v13, v14, v15, v16, v17, v18, v19, v109, v110);

      }
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v12, &qword_2578A1280);
    }
    OUTLINED_FUNCTION_57_1();
    OUTLINED_FUNCTION_197((uint64_t)&unk_2578A2B08);
    OUTLINED_FUNCTION_151();
    OUTLINED_FUNCTION_81_1();
    if (v0)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_94_1();
    v20 = OUTLINED_FUNCTION_88_1();
    v21 = OUTLINED_FUNCTION_47_4(v20, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (&unk_2578A2AB8)
    {
      OUTLINED_FUNCTION_50_1();
      v22 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v22, v23, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_26_11();
      OUTLINED_FUNCTION_62_1();
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v24, &qword_2578A1280);
    }
    OUTLINED_FUNCTION_49_3();
    v25 = OUTLINED_FUNCTION_88_1();
    v26 = OUTLINED_FUNCTION_47_4(v25, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (&unk_2578A2AB8)
    {
      OUTLINED_FUNCTION_50_1();
      v27 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v27, v28, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_26_11();
      OUTLINED_FUNCTION_62_1();
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v29, &qword_2578A1280);
    }
    OUTLINED_FUNCTION_49_3();
    v30 = OUTLINED_FUNCTION_88_1();
    v31 = OUTLINED_FUNCTION_47_4(v30, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (&unk_2578A2AB8)
    {
      OUTLINED_FUNCTION_50_1();
      v32 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v32, v33, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_26_11();
      OUTLINED_FUNCTION_62_1();
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v34, &qword_2578A1280);
    }
    OUTLINED_FUNCTION_49_3();
    v35 = OUTLINED_FUNCTION_88_1();
    v36 = OUTLINED_FUNCTION_47_4(v35, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (&unk_2578A2AB8)
    {
      OUTLINED_FUNCTION_50_1();
      v37 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v37, v38, &qword_2578A1280);
    if (v113)
    {
      v40 = OUTLINED_FUNCTION_26_11();
      OUTLINED_FUNCTION_178(v40);
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v39, &qword_2578A1280);
      OUTLINED_FUNCTION_71();
    }
    OUTLINED_FUNCTION_5_26();
    OUTLINED_FUNCTION_185(0xEE00736576727545);
    v41 = OUTLINED_FUNCTION_88_1();
    v42 = OUTLINED_FUNCTION_47_4(v41, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (&unk_2578A2AB8)
    {
      OUTLINED_FUNCTION_50_1();
      v43 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    v45 = MEMORY[0x24BEE4AD8];
    OUTLINED_FUNCTION_42_5(v43, v44, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_26_11();
      OUTLINED_FUNCTION_62_1();
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v46, &qword_2578A1280);
    }
    OUTLINED_FUNCTION_49_3();
    v47 = OUTLINED_FUNCTION_88_1();
    v48 = OUTLINED_FUNCTION_47_4(v47, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (v45)
    {
      OUTLINED_FUNCTION_50_1();
      v49 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v49, v50, &qword_2578A1280);
    if (v113)
      OUTLINED_FUNCTION_26_11();
    else
      OUTLINED_FUNCTION_52_1(v51, &qword_2578A1280);
    OUTLINED_FUNCTION_43_5();
    OUTLINED_FUNCTION_94_1();
    v52 = sub_249955F40();
    v53 = OUTLINED_FUNCTION_47_4(v52, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_50_3();
    if (v45)
    {
      OUTLINED_FUNCTION_50_1();
      v54 = OUTLINED_FUNCTION_12_25();
    }
    else
    {
      OUTLINED_FUNCTION_91_1();
    }
    OUTLINED_FUNCTION_42_5(v54, v55, &qword_2578A1280);
    if (v113)
    {
      OUTLINED_FUNCTION_96_1(v56, &qword_2578A1288);
      if ((OUTLINED_FUNCTION_26_11() & 1) != 0)
      {
        sub_249933AF8((uint64_t)v111, v57, v58, v59, v60, v61, v62, v63, v109, v110.super.isa);
        v65 = v64;

LABEL_60:
        v66 = *(_QWORD *)(v65 + 16);
        if (v66)
        {
          v112 = MEMORY[0x24BEE4AF8];
          sub_2498D6110(0, v66, 0);
          v67 = *(_QWORD *)(v112 + 16);
          v68 = 16 * v67;
          v69 = (unsigned __int16 *)(v65 + 34);
          do
          {
            isa = (Class)*(v69 - 1);
            v71 = *v69;
            v72 = *(_QWORD *)(v112 + 24);
            v73 = v67 + 1;
            if (v67 >= v72 >> 1)
            {
              v109 = *v69;
              v110.super.isa = (Class)*(v69 - 1);
              sub_2498D6110((char *)(v72 > 1), v67 + 1, 1);
              v71 = v109;
              isa = v110.super.isa;
            }
            v69 += 2;
            *(_QWORD *)(v112 + 16) = v73;
            v74 = v112 + v68;
            *(_QWORD *)(v74 + 32) = v71;
            *(_QWORD *)(v74 + 40) = isa;
            v68 += 16;
            v67 = v73;
            --v66;
          }
          while (v66);
        }
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_57_1();
        OUTLINED_FUNCTION_197((uint64_t)&unk_2578A2B18);
        OUTLINED_FUNCTION_151();
        OUTLINED_FUNCTION_81_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_185(0xD000000000000019);
        v75 = OUTLINED_FUNCTION_88_1();
        v76 = OUTLINED_FUNCTION_47_4(v75, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_50_3();
        if (&unk_2578A2AD0)
        {
          OUTLINED_FUNCTION_50_1();
          v77 = OUTLINED_FUNCTION_12_25();
        }
        else
        {
          OUTLINED_FUNCTION_91_1();
        }
        OUTLINED_FUNCTION_42_5(v77, v78, &qword_2578A1280);
        if (v113)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
          OUTLINED_FUNCTION_26_11();
        }
        else
        {
          OUTLINED_FUNCTION_52_1(v79, &qword_2578A1280);
        }
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2A58);
        sub_24993EBF4((uint64_t)&unk_2578A2B28);
        OUTLINED_FUNCTION_151();
        OUTLINED_FUNCTION_81_1();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_194();
        v81 = OUTLINED_FUNCTION_88_1();
        v82 = OUTLINED_FUNCTION_47_4(v81, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_50_3();
        if (v80)
        {
          OUTLINED_FUNCTION_50_1();
          v83 = OUTLINED_FUNCTION_12_25();
        }
        else
        {
          OUTLINED_FUNCTION_91_1();
        }
        OUTLINED_FUNCTION_42_5(v83, v84, &qword_2578A1280);
        if (v113)
          OUTLINED_FUNCTION_26_11();
        else
          OUTLINED_FUNCTION_52_1(v85, &qword_2578A1280);
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_185(0xEE0073657672754CLL);
        v86 = OUTLINED_FUNCTION_88_1();
        v87 = OUTLINED_FUNCTION_47_4(v86, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_50_3();
        if (v80)
        {
          OUTLINED_FUNCTION_50_1();
          v88 = OUTLINED_FUNCTION_12_25();
        }
        else
        {
          OUTLINED_FUNCTION_91_1();
        }
        OUTLINED_FUNCTION_42_5(v88, v89, &qword_2578A1280);
        if (v113)
        {
          OUTLINED_FUNCTION_26_11();
          OUTLINED_FUNCTION_62_1();
        }
        else
        {
          OUTLINED_FUNCTION_52_1(v90, &qword_2578A1280);
        }
        OUTLINED_FUNCTION_49_3();
        v91 = OUTLINED_FUNCTION_88_1();
        v92 = OUTLINED_FUNCTION_47_4(v91, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_50_3();
        if (v80)
        {
          OUTLINED_FUNCTION_50_1();
          v93 = OUTLINED_FUNCTION_12_25();
        }
        else
        {
          OUTLINED_FUNCTION_91_1();
        }
        OUTLINED_FUNCTION_42_5(v93, v94, &qword_2578A1280);
        if (v113)
        {
          v96 = OUTLINED_FUNCTION_26_11();
          OUTLINED_FUNCTION_178(v96);
        }
        else
        {
          OUTLINED_FUNCTION_52_1(v95, &qword_2578A1280);
          OUTLINED_FUNCTION_71();
        }
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_53_3();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_139();
        sub_24993EC48();
        OUTLINED_FUNCTION_195();
        OUTLINED_FUNCTION_81_1();
        OUTLINED_FUNCTION_19_13();
        OUTLINED_FUNCTION_140();
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_53_3();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_53_3();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_53_3();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_139();
        OUTLINED_FUNCTION_195();
        OUTLINED_FUNCTION_81_1();
        OUTLINED_FUNCTION_19_13();
        OUTLINED_FUNCTION_140();
        OUTLINED_FUNCTION_43_5();
        OUTLINED_FUNCTION_94_1();
        v98 = HIDServiceProperties.subscript.getter(0xD000000000000014, 0x800000024995F2B0, v97, v114);
        if (v98)
        {
          v106 = (void *)v98;
          sub_249933CB8(v98, v99, v100, v101, v102, v103, v104, v105, v109, v110);

        }
        OUTLINED_FUNCTION_151();
        OUTLINED_FUNCTION_81_1();
        OUTLINED_FUNCTION_94_1();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        HIDServiceProperties.subscript.getter();
        OUTLINED_FUNCTION_49_3();
        v108 = HIDServiceProperties.subscript.getter(0xEE0073657672753CLL, 0x800000024995F350, v107, v114);
        if (v108)
          HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)((NSDictionary)v108);
        sub_24993EC84();
        OUTLINED_FUNCTION_195();
        OUTLINED_FUNCTION_81_1();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_43_5();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_5_26();
        goto LABEL_26;
      }
    }
    else
    {
      OUTLINED_FUNCTION_52_1(v56, &qword_2578A1280);
    }
    v65 = MEMORY[0x24BEE4AF8];
    goto LABEL_60;
  }
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_27:
  OUTLINED_FUNCTION_20_7(v8);
  OUTLINED_FUNCTION_3_7();
}

uint64_t sub_24993DED4(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[24];
  uint64_t v23;
  void *v24;

  *(_QWORD *)&v20 = 0xD000000000000010;
  *((_QWORD *)&v20 + 1) = 0x800000024995F210;
  v3 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249955F40(), v20);
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_24992F910((uint64_t)&v20, (uint64_t)v22, &qword_2578A1280);
  if (!v23)
  {
    sub_2498F9DB0((uint64_t)v22, &qword_2578A1280);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_2498F9DE8(0, (unint64_t *)&qword_2578A1F40);
    v5 = 0xD000000000000022;
    v6 = 0x800000024995F940;
LABEL_17:
    sub_2499301D8(22, v5, v6);
    return swift_willThrow();
  }
  strcpy((char *)&v20, "PrimaryUsage");
  BYTE13(v20) = 0;
  HIWORD(v20) = -5120;
  v4 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249955F40());
  swift_unknownObjectRelease();
  if (v4)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_24992F910((uint64_t)&v20, (uint64_t)v22, &qword_2578A1280);
  if (!v23)
  {
    sub_2498F9DB0((uint64_t)v22, &qword_2578A1280);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    sub_2498F9DE8(0, (unint64_t *)&qword_2578A1F40);
    v5 = 0xD00000000000001DLL;
    v6 = 0x800000024995F970;
    goto LABEL_17;
  }
  *(_QWORD *)&v20 = 0xD000000000000010;
  *((_QWORD *)&v20 + 1) = 0x800000024995E7E0;
  v7 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249955F40());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_249955BA4();
    swift_unknownObjectRelease();
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_24992F910((uint64_t)&v20, (uint64_t)v22, &qword_2578A1280);
  if (v23)
  {
    sub_2498F9DE8(0, &qword_2578A1288);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v16 = v24;
      sub_249933AF8((uint64_t)v24, v9, v10, v11, v12, v13, v14, v15, v20, *((void **)&v20 + 1));
      v18 = v17;

      goto LABEL_25;
    }
  }
  else
  {
    sub_2498F9DB0((uint64_t)v22, &qword_2578A1280);
  }
  v18 = MEMORY[0x24BEE4AF8];
LABEL_25:
  v19 = *(_QWORD *)(v18 + 16);
  result = swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_2498F9DE8(0, (unint64_t *)&qword_2578A1F40);
    v5 = 0xD000000000000022;
    v6 = 0x800000024995F990;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_24993E2A8(uint64_t result)
{
  *(_BYTE *)(result + 137) = 0;
  return result;
}

unint64_t sub_24993E2B0()
{
  unint64_t result;

  result = qword_2578A2A88;
  if (!qword_2578A2A88)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C51C, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578A2A88);
  }
  return result;
}

unint64_t sub_24993E2EC()
{
  unint64_t result;

  result = qword_2578A2AA0;
  if (!qword_2578A2AA0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C4CC, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578A2AA0);
  }
  return result;
}

unint64_t sub_24993E328()
{
  unint64_t result;

  result = qword_2578A2AC8;
  if (!qword_2578A2AC8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_2578A2AC8);
  }
  return result;
}

unint64_t sub_24993E364()
{
  unint64_t result;

  result = qword_2578A2AE0;
  if (!qword_2578A2AE0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C4A4, &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_2578A2AE0);
  }
  return result;
}

unint64_t sub_24993E3A0()
{
  unint64_t result;

  result = qword_2578A2AF0;
  if (!qword_2578A2AF0)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578A2AF0);
  }
  return result;
}

unint64_t sub_24993E3DC()
{
  unint64_t result;

  result = qword_2578A2AF8;
  if (!qword_2578A2AF8)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_2578A2AF8);
  }
  return result;
}

uint64_t HIDServiceProperties.init(service:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  id v31;

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  ObjectType = swift_getObjectType();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  v8 = v5;
  v9 = v7(ObjectType, a2);
  v10 = static HIDServicePropertyKey.allCases.getter();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v26 = v9;
    v31 = v8;
    v12 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 48);
    v13 = (uint64_t *)(v10 + 40);
    do
    {
      v15 = *(v13 - 1);
      v14 = *v13;
      OUTLINED_FUNCTION_109_0();
      v12(&v27, v15, v14, ObjectType, a2);
      if (v28)
      {
        sub_2498E29C4(&v27, &v29);
        __swift_project_boxed_opaque_existential_1(&v29, v30);
        v16 = sub_249955F1C();
        *(_QWORD *)&v27 = v15;
        *((_QWORD *)&v27 + 1) = v14;
        OUTLINED_FUNCTION_109_0();
        objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v16, sub_249955F40());
        OUTLINED_FUNCTION_97_0();
        v17 = swift_unknownObjectRelease();
        OUTLINED_FUNCTION_209(v17, v18, v19, v20, v21, v22, v23, v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_2498F9DB0((uint64_t)&v27, &qword_2578A1280);
      }
      v13 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v8 = v31;
    v9 = v26;
    v3 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_24993DED4(v9, v8);

  if (v3)
  OUTLINED_FUNCTION_12_25();
  return v9;
}

void HIDServiceProperties.init(usages:)(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  if (*(_QWORD *)(a1 + 16))
  {
    HIDServiceProperties.primaryUsagePair.setter();
    HIDServiceProperties.deviceUsagePairs.setter(a1);
  }
  else
  {
    v3 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_96_1(v3, (unint64_t *)&qword_2578A1F40);
    sub_2499301D8(22, 0xD000000000000022, 0x800000024995F820);
    swift_willThrow();

  }
}

_QWORD *sub_24993E6C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = HIDServiceProperties.init(from:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

void sub_24993E6E8()
{
  HIDServiceProperties.encode(to:)();
}

uint64_t static HIDServiceProperties.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a3)
    return OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_96_1(a1, &qword_2578A1290);
  return sub_249955AC0() & 1;
}

uint64_t sub_24993E758(uint64_t *a1, uint64_t *a2)
{
  return static HIDServiceProperties.== infix(_:_:)(*a1, a1[1], *a2);
}

void HIDServiceProperties.hash(into:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_249955FF4();
  v4 = a3;
  sub_249955ACC();

}

void HIDServiceProperties.hashValue.getter(uint64_t a1, void *a2)
{
  id v3;

  OUTLINED_FUNCTION_57_3();
  sub_249955FF4();
  v3 = a2;
  sub_249955ACC();

  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_14_0();
}

void sub_24993E804()
{
  uint64_t v0;

  HIDServiceProperties.hashValue.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

void sub_24993E80C(uint64_t a1)
{
  uint64_t v1;

  HIDServiceProperties.hash(into:)(a1, *(_QWORD *)v1, *(void **)(v1 + 8));
}

uint64_t sub_24993E814()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_249955FB8();
  sub_249955FF4();
  v2 = v1;
  sub_249955ACC();

  return sub_249956000();
}

void sub_24993E870(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_24993E87C(uint64_t a1, uint64_t a2)
{
  if (!a2)
    return 0;
  sub_2499558A4();
  sub_2499558A4();
  return 2625692192;
}

uint64_t HIDServiceProperties.description.getter(uint64_t a1, void *a2)
{
  id v3;
  unsigned __int8 v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a2;
  v4 = HIDDeviceType.init(properties:)(a1, v3);
  v52 = HIDDeviceType.description.getter(v4);
  sub_2499558A4();
  sub_2498F0128();
  sub_2499558C8();
  sub_2499558A4();
  swift_bridgeObjectRelease();
  sub_2499558A4();
  OUTLINED_FUNCTION_19_18();
  v5 = OUTLINED_FUNCTION_87_1(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_61_1();
  if (v5)
  {
    OUTLINED_FUNCTION_54_4();
    v6 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v6, v7, &qword_2578A1280, v8, v9, v10);
  if (v51)
  {
    v18 = OUTLINED_FUNCTION_0_39();
    v26 = OUTLINED_FUNCTION_52_3(v18, v19, v20, v21, v22, v23, v24, v25, v50);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v11, &qword_2578A1280, v12, v13, v14, v15, v16, v17);
    v26 = 0;
  }
  OUTLINED_FUNCTION_196(v26);
  OUTLINED_FUNCTION_56_1();
  sub_2499558A4();
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_19_18();
  v27 = OUTLINED_FUNCTION_87_1(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_61_1();
  if (v27)
  {
    OUTLINED_FUNCTION_54_4();
    v28 = OUTLINED_FUNCTION_12_25();
  }
  else
  {
    v32 = OUTLINED_FUNCTION_14_22();
  }
  OUTLINED_FUNCTION_1_39(v28, v29, &qword_2578A1280, v30, v31, v32);
  if (v51)
  {
    v40 = OUTLINED_FUNCTION_0_39();
    v48 = OUTLINED_FUNCTION_52_3(v40, v41, v42, v43, v44, v45, v46, v47, v50);
  }
  else
  {
    OUTLINED_FUNCTION_15_20(v33, &qword_2578A1280, v34, v35, v36, v37, v38, v39);
    v48 = 0;
  }
  OUTLINED_FUNCTION_196(v48);
  OUTLINED_FUNCTION_56_1();
  sub_2499558A4();
  OUTLINED_FUNCTION_17_16();
  return v52;
}

uint64_t sub_24993EB20()
{
  uint64_t v0;

  return HIDServiceProperties.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

unint64_t sub_24993EB28()
{
  unint64_t result;

  result = qword_2578A2B10;
  if (!qword_2578A2B10)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_2578A2B10);
  }
  return result;
}

void sub_24993EB64(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_217(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    v8 = v6();
    atomic_store(MEMORY[0x24BCFB904](v5, v7, &v8), v1);
  }
  OUTLINED_FUNCTION_37();
}

unint64_t sub_24993EBB8()
{
  unint64_t result;

  result = qword_2578A2B20;
  if (!qword_2578A2B20)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C47C, &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_2578A2B20);
  }
  return result;
}

void sub_24993EBF4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (!OUTLINED_FUNCTION_217(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = v2;
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578A2A58);
    v9[0] = v7;
    v9[1] = v6;
    atomic_store(MEMORY[0x24BCFB904](v5, v8, v9), v1);
  }
  OUTLINED_FUNCTION_37();
}

unint64_t sub_24993EC48()
{
  unint64_t result;

  result = qword_2578A2B30;
  if (!qword_2578A2B30)
  {
    result = MEMORY[0x24BCFB904](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578A2B30);
  }
  return result;
}

unint64_t sub_24993EC84()
{
  unint64_t result;

  result = qword_2578A2B38;
  if (!qword_2578A2B38)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_2578A2B38);
  }
  return result;
}

unint64_t sub_24993ECC4()
{
  unint64_t result;

  result = qword_2578A2B40;
  if (!qword_2578A2B40)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_2578A2B40);
  }
  return result;
}

unint64_t sub_24993ED04()
{
  unint64_t result;

  result = qword_2578A2B48;
  if (!qword_2578A2B48)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_2578A2B48);
  }
  return result;
}

unint64_t sub_24993ED44()
{
  unint64_t result;

  result = qword_2578A2B50;
  if (!qword_2578A2B50)
  {
    result = MEMORY[0x24BCFB904](&protocol conformance descriptor for HIDServiceProperties, &type metadata for HIDServiceProperties);
    atomic_store(result, (unint64_t *)&qword_2578A2B50);
  }
  return result;
}

uint64_t sub_24993ED80()
{
  return MEMORY[0x24BEE4578];
}

void sub_24993ED9C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_249934BBC(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))HIDServiceProperties.subscript.getter, a4);
}

void sub_24993EDD4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_249934BBC(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))HIDServiceProperties.subscript.getter, a4);
}

void sub_24993EE00(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_2499350A0(a1, a2, a3, a4, (void (*)(id, uint64_t, uint64_t))HIDServiceProperties.subscript.setter);
}

void sub_24993EE28(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_2499350A0(a1, a2, a3, a4, (void (*)(id, uint64_t, uint64_t))HIDServiceProperties.subscript.setter);
}

void sub_24993EE68(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.appleVendorSupported.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EE88(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.authenticatedDevice.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EEA8(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.builtIn.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.capsLockDelay.getter);
}

void sub_24993EEE8(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.capsLockLanguageSwitch.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EF08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.deviceTypeHint.setter);
}

void sub_24993EF30(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.disableAccessibilityEventTranslation.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EF50(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.dispatchScrollEvents.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EF70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.displayIdentifier.setter);
}

void sub_24993EF90(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.displayIntegrated.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993EFB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.exclusivityIdentifier.setter);
}

void sub_24993EFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.faceTimeRemoteControlSessionID.getter);
}

void sub_24993EFF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.fnKeyboardUsageMap.setter);
}

void sub_24993F018(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.ignoresNaturalScrollingPreference.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.keyboardCountryCode.getter);
}

void sub_24993F058(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.keyboardLanguage.setter);
}

void sub_24993F074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.keyboardStandardType.getter);
}

void sub_24993F098(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.manufacturer.setter);
}

void sub_24993F0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.mouseAcceleration.getter);
}

void sub_24993F0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.mouseScrollAcceleration.getter);
}

void sub_24993F0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerAccelerationMultiplier.getter);
}

void sub_24993F120(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.pointerAccelerationType.setter);
}

void sub_24993F13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerButtonCount.getter);
}

void sub_24993F15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerButtonMode.getter);
}

void sub_24993F17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerResolution.getter);
}

void sub_24993F19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerReportRate.getter);
}

void sub_24993F1C0()
{
  HIDServiceProperties.primaryUsagePair.setter();
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F1E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.product.setter);
}

void sub_24993F200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.productID.getter);
}

void sub_24993F234(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, HIDServiceProperties.scrollAccelerationType.setter);
}

void sub_24993F258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.scrollReportRate.getter);
}

void sub_24993F278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.scrollResolution.getter);
}

void sub_24993F29C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.supportsGestureScrolling.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.trackpadAcceleration.getter);
}

void sub_24993F2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.trackpadScrollAcceleration.getter);
}

void sub_24993F2FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249938FB4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.transport.setter);
}

void sub_24993F31C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.universalControlBuiltIn.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F33C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.universalControlVirtualService.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F35C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.userDeviceCreateInactive.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F37C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.useRemoteAcceleration.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.vendorID.getter);
}

void sub_24993F3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.reportInterval.getter);
}

void sub_24993F3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24993979C(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.subinterfaceID.getter);
}

void sub_24993F404(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.scrollAccelerationSupport.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_24993F424(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_11_16(a1);
  HIDServiceProperties.pointerAccelerationSupport.setter(v1);
  OUTLINED_FUNCTION_6_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for HIDServiceProperties(uint64_t a1)
{

}

_QWORD *assignWithCopy for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

void type metadata accessor for HIDServiceProperties()
{
  OUTLINED_FUNCTION_21_5();
}

void *__swift_memcpy137_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x89uLL);
}

uint64_t getEnumTagSinglePayload for HIDServiceProperties.HIDAccelCurve(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDServiceProperties.HIDAccelCurve(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 137) = v3;
  return result;
}

void type metadata accessor for HIDServiceProperties.HIDAccelCurve()
{
  OUTLINED_FUNCTION_21_5();
}

void type metadata accessor for HIDServiceProperties.HIDSurfaceDimensions()
{
  OUTLINED_FUNCTION_21_5();
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDDeviceUsagePair()
{
  return &type metadata for HIDServiceProperties.HIDDeviceUsagePair;
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey()
{
  return &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey;
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey()
{
  return &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey;
}

unint64_t sub_24993F5BC()
{
  unint64_t result;

  result = qword_2578A2B58;
  if (!qword_2578A2B58)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C1C4, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578A2B58);
  }
  return result;
}

void sub_24993F5F8()
{
  sub_249940938((uint64_t)&unk_2578A2B60);
}

unint64_t sub_24993F620()
{
  unint64_t result;

  result = qword_2578A2B70;
  if (!qword_2578A2B70)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C2EC, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578A2B70);
  }
  return result;
}

void sub_24993F65C()
{
  sub_249940938((uint64_t)&unk_2578A2B78);
}

unint64_t sub_24993F684()
{
  unint64_t result;

  result = qword_2578A2B88;
  if (!qword_2578A2B88)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C414, &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_2578A2B88);
  }
  return result;
}

unint64_t sub_24993F6C4()
{
  unint64_t result;

  result = qword_2578A2B90;
  if (!qword_2578A2B90)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C314, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578A2B90);
  }
  return result;
}

unint64_t sub_24993F704()
{
  unint64_t result;

  result = qword_2578A2B98;
  if (!qword_2578A2B98)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C33C, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578A2B98);
  }
  return result;
}

unint64_t sub_24993F744()
{
  unint64_t result;

  result = qword_2578A2BA0;
  if (!qword_2578A2BA0)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C1EC, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578A2BA0);
  }
  return result;
}

unint64_t sub_24993F784()
{
  unint64_t result;

  result = qword_2578A2BA8;
  if (!qword_2578A2BA8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C214, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578A2BA8);
  }
  return result;
}

unint64_t sub_24993F7C0()
{
  unint64_t result;

  result = qword_2578A2BB8;
  if (!qword_2578A2BB8)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C6B0, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_2578A2BB8);
  }
  return result;
}

uint64_t sub_24993F7FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BE0);
  v6 = sub_249955DB4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_2498E29C4(v22, v35);
      }
      else
      {
        sub_2498F23FC((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_249955FB8();
      sub_249955880();
      result = sub_249956000();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v26);
      *v31 = v21;
      v31[1] = v20;
      result = (uint64_t)sub_2498E29C4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v26));
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v33)
        goto LABEL_33;
      v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v33)
          goto LABEL_33;
        v17 = v34[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((a2 & 1) != 0)
            {
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                sub_24994639C(0, (unint64_t)(v32 + 63) >> 6, v34);
              else
                *v34 = -1 << v32;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v33)
                goto LABEL_33;
              v17 = v34[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24993FAF4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for EventReportSenderID();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A1228);
  v42 = a2;
  v9 = sub_249955DB4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v39 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = v2;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  if (!v14)
    goto LABEL_7;
LABEL_6:
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    v24 = *(_QWORD *)(v40 + 72);
    v25 = *(_QWORD *)(v8 + 48) + v24 * i;
    if ((v42 & 1) != 0)
    {
      sub_2498E2344(v25, (uint64_t)v7);
      v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * i);
    }
    else
    {
      sub_2498E2300(v25, (uint64_t)v7);
      v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * i);
      swift_retain();
    }
    sub_249955FB8();
    sub_2499556F4();
    sub_249940854((uint64_t)&qword_2578A0E48);
    sub_2499557D8();
    sub_249955FF4();
    result = sub_249956000();
    v27 = -1 << *(_BYTE *)(v10 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) == 0)
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v32 || (v31 & 1) == 0)
      {
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v29);
        if (v34 != -1)
        {
          v30 = __clz(__rbit64(~v34)) + (v29 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(_QWORD *)(v15 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = sub_2498E2344((uint64_t)v7, *(_QWORD *)(v10 + 48) + v24 * v30);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v30) = v26;
    ++*(_QWORD *)(v10 + 16);
    if (v14)
      goto LABEL_6;
LABEL_7:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
      goto LABEL_42;
    if (v20 >= v38)
    {
      swift_release();
      v3 = v37;
      v21 = v39;
      goto LABEL_35;
    }
    v21 = v39;
    v22 = v39[v20];
    ++v17;
    if (!v22)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_33;
      v22 = v39[v17];
      if (!v22)
        break;
    }
LABEL_18:
    v14 = (v22 - 1) & v22;
  }
  v23 = v20 + 2;
  if (v23 < v38)
  {
    v22 = v39[v23];
    if (!v22)
    {
      while (1)
      {
        v17 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_43;
        if (v17 >= v38)
          goto LABEL_33;
        v22 = v39[v17];
        ++v23;
        if (v22)
          goto LABEL_18;
      }
    }
    v17 = v23;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  v3 = v37;
LABEL_35:
  if ((v42 & 1) != 0)
  {
    v35 = 1 << *(_BYTE *)(v8 + 32);
    if (v35 >= 64)
      sub_24994639C(0, (unint64_t)(v35 + 63) >> 6, v21);
    else
      *v21 = -1 << v35;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_24993FE8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BD0);
  v37 = a2;
  v6 = sub_249955DB4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_249955FB8();
    sub_249955880();
    result = sub_249956000();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_24994639C(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

BOOL sub_249940184(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

void sub_249940194(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24992F4CC(v6, (uint64_t)&v28, &qword_2578A1AF0);
    v8 = v28;
    v7 = v29;
    v26 = v28;
    v27 = v29;
    sub_2498E29C4(&v30, v25);
    v9 = (_QWORD *)*a3;
    v11 = sub_2498DFACC(v8, v7);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_249955F64();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E60);
      sub_249955D48();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (uint64_t *)(v18[6] + 16 * v11);
    *v19 = v8;
    v19[1] = v7;
    sub_2498E29C4(v25, (_OWORD *)(v18[7] + 32 * v11));
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_24993F7FC(v14, a2 & 1);
  v16 = sub_2498DFACC(v8, v7);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v23;
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_249955C34();
  sub_2499558A4();
  sub_249955D00();
  sub_2499558A4();
  sub_249955D6C();
  __break(1u);
}

void sub_249940484(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  void *v32;
  id v33;
  _QWORD v34[4];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;

  v7 = type metadata accessor for EventReportSenderID();
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0C80);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v34[1] = v7;
  v34[2] = v3;
  v15 = *(int *)(v10 + 48);
  v16 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v35 = *(_QWORD *)(v11 + 72);
  v36 = v15;
  v34[3] = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24992F4CC(v16, (uint64_t)v13, &qword_2578A0C80);
    v17 = v38;
    sub_2498E2344((uint64_t)v13, v38);
    v18 = *(_QWORD *)&v13[v36];
    v19 = (_QWORD *)*a3;
    v21 = sub_2498DFA3C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_249955F64();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578A0E78);
      sub_249955D48();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    sub_2498E2344(v38, v28[6] + *(_QWORD *)(v37 + 72) * v21);
    *(_QWORD *)(v28[7] + 8 * v21) = v18;
    v29 = v28[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_18;
    v28[2] = v31;
    v16 += v35;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_24993FAF4(v24, a2 & 1);
  v26 = sub_2498DFA3C(v38);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v32 = (void *)swift_allocError();
  swift_willThrow();
  v41 = v32;
  v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578A2BD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_2498E2388(v38);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v39 = 0;
  v40 = 0xE000000000000000;
  sub_249955C34();
  sub_2499558A4();
  sub_249955D00();
  sub_2499558A4();
  sub_249955D6C();
  __break(1u);
}

BOOL sub_2499407FC(__int16 *a1, __int16 *a2)
{
  return sub_249940184(*a1, *a2);
}

BOOL sub_24994081C(__int16 *a1)
{
  uint64_t v1;

  return sub_2499407FC(a1, *(__int16 **)(v1 + 16));
}

uint64_t sub_249940838(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void sub_249940854(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_217(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x24BCFB904](v4, v5), v1);
  }
  OUTLINED_FUNCTION_6_0();
}

void _s12UniversalHID20HIDServicePropertiesV20HIDSurfaceDimensionsV23HIDSurfaceDimensionsKeyVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_56_1();
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey()
{
  return &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey;
}

unint64_t sub_2499408D8()
{
  unint64_t result;

  result = qword_2578A2C00;
  if (!qword_2578A2C00)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C588, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_2578A2C00);
  }
  return result;
}

void sub_249940914()
{
  sub_249940938((uint64_t)&unk_2578A2C08);
}

void sub_249940938(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!OUTLINED_FUNCTION_217(a1))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    atomic_store(MEMORY[0x24BCFB904](MEMORY[0x24BEE12E0], v3), v1);
  }
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_249940974()
{
  unint64_t result;

  result = qword_2578A2C18;
  if (!qword_2578A2C18)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C5B0, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_2578A2C18);
  }
  return result;
}

unint64_t sub_2499409B4()
{
  unint64_t result;

  result = qword_2578A2C20;
  if (!qword_2578A2C20)
  {
    result = MEMORY[0x24BCFB904](&unk_24995C5D8, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_2578A2C20);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_39()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_1_39(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_24992F910((uint64_t)va, (uint64_t)va1, a3);
}

uint64_t OUTLINED_FUNCTION_2_33()
{
  return sub_249955BA4();
}

uint64_t OUTLINED_FUNCTION_3_27()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_4_26(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_5_26()
{
  return sub_249955E98();
}

uint64_t OUTLINED_FUNCTION_6_27()
{
  return sub_249955E08();
}

id OUTLINED_FUNCTION_7_29(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(*(id *)(v4 - 72), a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_10_25(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_23(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a1)
    return a10;
  else
    return 0;
}

double OUTLINED_FUNCTION_14_22()
{
  return 0.0;
}

void OUTLINED_FUNCTION_15_20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2498F9DB0((uint64_t)va, a2);
}

void OUTLINED_FUNCTION_17_18(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  HIDServiceProperties.subscript.setter(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4);
}

void OUTLINED_FUNCTION_18_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24993984C(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4);
}

uint64_t OUTLINED_FUNCTION_19_18()
{
  return sub_249955F40();
}

void OUTLINED_FUNCTION_20_16(char a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

uint64_t OUTLINED_FUNCTION_21_16@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
  return sub_249955E98();
}

uint64_t OUTLINED_FUNCTION_22_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = (v1 - 32) | 0x8000000000000000;
  return sub_249955E08();
}

